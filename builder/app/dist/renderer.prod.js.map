{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/containers/App.js","webpack:///./app/utils/array.js","webpack:///./app/components/titles.js","webpack:///./app/constants/nodetypes.js","webpack:///./app/constants/functiontypes.js","webpack:///./app/methods/graph_methods.js","webpack:///./app/actions/uiactions.js","webpack:///./app/ipc/handler-events.js","webpack:///./app/generators/namespacegenerator.js","webpack:///./app/generators/controllergenerator.js","webpack:///./app/generators/modelgenerators.js","webpack:///./app/generators/extensiongenerator.js","webpack:///./app/generators/permissiongenerator.js","webpack:///./app/generators/validationrulegenerator.js","webpack:///./app/generators/streamprocessorchestrationgenerator.js","webpack:///./app/generators/modelitemfiltergenerator.js","webpack:///./app/generators/maestrogenerator.js","webpack:///./app/generators/changeparametergenerator.js","webpack:///./app/generators/constantsgenerator.js","webpack:///./app/generators/streamprocessgenerator.js","webpack:///./app/generators/changeresponsegenerator.js","webpack:///./app/generators/executiongenerator.js","webpack:///./app/generators/modelreturngenerator.js","webpack:///./app/generators/modelexceptiongenerator.js","webpack:///./app/generators/modelgetgenerators.js","webpack:///./app/generators/generator.js","webpack:///./app/actions/ipcActions.js","webpack:///./app/utils/utils.js","webpack:///./app/components/dashboardlogo.js","webpack:///./app/components/header.js","webpack:///./app/components/dashboardnavbar.js","webpack:///./app/components/sidebartoggle.js","webpack:///./app/components/navbarmenu.js","webpack:///./app/components/dropdown.js","webpack:///./app/components/dropdownmenuitem.js","webpack:///./app/components/mainsidebar.js","webpack:///./app/components/sidebarheader.js","webpack:///./app/components/sidebarmenu.js","webpack:///./app/components/treeviewmenu.js","webpack:///./app/components/treeviewitem.js","webpack:///./app/components/content.js","webpack:///./app/components/sidebar.js","webpack:///./app/components/sidebartabs.js","webpack:///./app/components/sidebartab.js","webpack:///./app/components/controlsidebarmenu.js","webpack:///./app/components/tabpane.js","webpack:///./app/components/formcontrol.js","webpack:///./app/components/textinput.js","webpack:///./app/components/selectinput.js","webpack:///./app/components/checkbox.js","webpack:///./app/constants/servicetypes.js","webpack:///./app/components/serviceactivitymenu.js","webpack:///./app/components/sidebarcontent.js","webpack:///./app/components/navbarbutton.js","webpack:///./app/constants/visual.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./app/components/mindmap.js","webpack:///./app/components/buttonlist.js","webpack:///./app/components/modelactivitymenu.js","webpack:///./app/components/functionactivitymenu.js","webpack:///./app/components/propertyactivitymenu.js","webpack:///./app/components/attributeformcontrol.js","webpack:///./app/components/nodelist.js","webpack:///./app/components/permissionmenu.js","webpack:///./app/components/choiceactivitymenu.js","webpack:///./app/components/treeviewitemcontainer.js","webpack:///./app/components/modelfilteractivitymenu.js","webpack:///./app/components/validationactivitymenu.js","webpack:///./app/components/validationitemactivitymenu.js","webpack:///./app/components/validatoractivitymenu.js","webpack:///./app/components/optionactivitymenu.js","webpack:///./app/components/executorpropertymenu.js","webpack:///./app/components/conditionactivitymenu.js","webpack:///./app/components/parameteractivitymenu.js","webpack:///./app/components/optionitemformcontrol.js","webpack:///./app/components/enumerationeditmenu.js","webpack:///./app/components/executoritem.js","webpack:///./app/components/executorpropertyactivitymenu.js","webpack:///./app/components/executoractivitymenu.js","webpack:///./app/components/validatorpropertymenu.js","webpack:///./app/components/validatoritem.js","webpack:///./app/components/validatorpropertyactivitymenu.js","webpack:///./app/components/ExtensionListActivityMenu.js","webpack:///./app/components/permissionsactivitymenu.js","webpack:///./app/components/referenceactivitymenu.js","webpack:///./app/components/goomenu.js","webpack:///./app/components/box.js","webpack:///./app/components/choicelistitemactivitymenu.js","webpack:///./app/components/modelfiltermenu.js","webpack:///./app/components/slider.js","webpack:///./app/components/tabcontent.js","webpack:///./app/components/userfooter.js","webpack:///./app/components/tabcontainer.js","webpack:///./app/components/enumeratedtable.js","webpack:///./app/components/extensiondefinitionmenu.js","webpack:///./app/components/methodactivitymenu.js","webpack:///./app/components/methodpropertymenu.js","webpack:///./app/components/maestrodetailsmenu.js","webpack:///./app/components/nodemanagement.js","webpack:///./app/components/commonactivitymenu.js","webpack:///./app/components/modelfilteritemactivitymenu.js","webpack:///./app/components/modelrelationshipmenu.js","webpack:///./app/components/radiobutton.js","webpack:///./app/components/depthchoice.js","webpack:///./app/components/maestroactivitymenu.js","webpack:///./app/components/controllerdetailsmenu.js","webpack:///./app/components/controlleractivitymenu.js","webpack:///./app/components/permissionsdependentactivitymenu.js","webpack:///./app/components/graphmenu.js","webpack:///./app/components/sectionlist.js","webpack:///./app/components/enumerationactivitymenu.js","webpack:///./app/components/sectionedit.js","webpack:///./app/components/topviewer.js","webpack:///./node_modules/react-syntax-highlighter/dist/esm/styles/hljs/docco.js","webpack:///./app/components/tab.js","webpack:///./app/components/tabs.js","webpack:///./app/components/codeview.js","webpack:///./app/components/dashboard.js","webpack:///./app/containers/Root.js","webpack:///./app/Routes.js","webpack:///./app/actions/counter.js","webpack:///./app/reducers/counter.js","webpack:///./app/reducers/uiReducer.js","webpack:///./app/reducers/index.js","webpack:///./app/store/configureStore.dev.js","webpack:///./app/store/configureStore.prod.js","webpack:///./app/store/configureStore.js","webpack:///./app/index.js","webpack:///./node_modules/connected-react-router/lib/ConnectedRouter.js","webpack:///./node_modules/connected-react-router/lib/actions.js","webpack:///./node_modules/connected-react-router/lib/createAll.js","webpack:///./node_modules/connected-react-router/lib/index.js","webpack:///./node_modules/connected-react-router/lib/middleware.js","webpack:///./node_modules/connected-react-router/lib/reducer.js","webpack:///./node_modules/connected-react-router/lib/selectors.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/getIn.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/index.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_function-to-string.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/redux-logger/dist/redux-logger.js","webpack:///external \"d3\"","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"history\"","webpack:///external \"path\"","webpack:///external \"react\"","webpack:///external \"react-dom\"","webpack:///external \"react-hot-loader\"","webpack:///external \"react-redux\"","webpack:///external \"react-router\"","webpack:///external \"react-router-dom\"","webpack:///external \"react-syntax-highlighter\"","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"util\"","webpack:///external \"webcola\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","React","render","children","this","props","_jsx","external_react_","uuidv4","replace","Math","random","toString","array","relativeCompliment","writable","configurable","othercollection","func","output","result","x","y","length","some","push","intersection","j","toNodeSelect","map","node","id","title","UIA","GetNodeTitle","unique","finalresult","indexOf","removeIndices","indices","orderBy","collection","index","splice","interpolate","start","stop","Float32Array","sort","groupBy","subset","min","Array","RemoveValidation","RemoveExecution","SelectValidation","SelectExecution","SelectedValidations","Remove","ServerSideSetup","AddCondition","GraphPropertiesMenu","NodeLabel","NodeType","Nodes","Models","ConditionType","Reference","Depth","New","ServiceActivity","CodeTypes","Project","NameSpace","Pinned","Collapsed","GenericLink","OnLoad","ChildLink","OnFailureLink","OnAction","OnItemSelection","OnSuccessLink","SelectedExecutors","Agents","SelectProperty","DisallowedEnums","Methods","AllowedEnums","ModelActions","AddProperty","PermissionsDependencyAttribute","KeyField","UseEnumeration","Enumeration","CodeUser","AddPropertyDescription","AddAttribute","AddAttributeDescription","UIName","UINameDescription","UISingular","Unknown","PropertyValueType","PropertyModelType","AddReference","AgentOperator","Enumerable","Value","AppMenu","CodeName","ValueName","AgentName","FileMenu","Code","MainNavigation","AddParameter","AddParameterDescription","AddFunctionOutput","Menu","AddFunctionOutputDescription","IsAgent","IsUser","ParameterType","OwnedResources","AddModelItemFilter","AddModelItemFilterDescription","PermissionType","PermissionAttributes","OwnedResourcesDescription","PermissionActions","Permissions","Create","Get","GetAll","Getall","Delete","Getbyowner","Update","ChoiceTypes","AddChoice","AddChoiceDescription","AddPermissionDescription","AddPermission","Select","ValidationListActions","AddValidationItem","AddValidationItemDescription","UseUIValidations","AddValidationList","AddValidationListDescription","Add","ValidationTypes","ValidationType","OptionListActions","AddOptionItem","AddOptionItemDescription","Name","OptionsType","UseCustomOption","UseUIOptions","AddOptionList","AddOptionListDescription","DependentProperty","UseDependentProperty","UseUIExtensions","IncludedInList","IsEqualTo","UseEqualDescription","UseEqual","IsEqualToDescription","ExcludedFromList","ExcludedFromListDescription","IncludedInListDescription","ExtensionTypes","AddExtensionList","AddExtensionListDescription","ExtensionListTypeActions","AddExtensionNode","ExtensionOptions","AddExtensionNodeDescription","ExtensionDefinition","Extensions","ExtensionConfig","DependsOn","UseId","Property","Condition","DependsOnDescription","DependentPropertyDescription","MatchingValue","MatchingValueDescription","FunctionTypes","Functions","AddFunction","MaestroDetails","HttpMethod","AddMaestros","HttpRoute","Maestros","Save","Open","PublishFiles","Scaffold","SetWorkingDirectory","MindMap","CodeView","ParentTo","IsParent","UserModel","ManyToManyNexus","ManyToManyExists","ManyToManyNexusModel","ManyToManyNexusDescription","HasLogicalChildren","LogicalChildrenTypes","LogicalNieceTypes","HasLogicalChildrenDescription","HasLogicalNieces","HasLogicalNiecesDescription","UseModelAsType","CustomFunction","CustomFunctionDescription","AddNewSection","Sections","AddNewSectionDescription","SectionEdit","DefaultGraphTitle","DefaultSubGraphTitle","ClearPinned","Filter","NodeTypes","Concept","Model","ModelFilter","ScreenContainer","Screen","ScreenCollection","ScreenItem","Attribute","ChoiceList","Permission","PermissionDependency","ModelItemFilter","ValidationList","ValidationListItem","Validator","Executor","OptionList","OptionListItem","OptionCustom","ExtensionTypeList","ExtensionType","Function","Method","Action","Parameter","FunctionOutput","Controller","Maestro","Services","ReferenceNode","ClassNode","ExcludeDefaultNode","[object Object]","GeneratedTypes","ChangeParameter","ChangeResponse","Constants","Executors","ModelReturn","ModelGet","ModelExceptions","StreamProcess","StreamProcessOrchestration","ValidationRule","IdentityManagement","RedQuickViews","STANDARD_TEST_USING","STANDARD_CONTROLLER_USING","GeneratedConstants","StreamTypes","FunctionName","ColorStates","NotSelectableNodeTypes","NodeTypeColors","FunctionGroups","External","Internal","Core","GroupProperties","IsExternal","FunctionGroup","Tests","Controllers","Validations","Parameters","Interface","NodeProperties","MatchReference","MatchManyReferenceParameter","EnumerationReference","AllowedExtensionValues","ServiceType","DisallowedExtensionValues","AllowedEnumValues","DisallowedEnumValues","ServiceTypeSettings","ValidatorModel","ExecutorAgent","ExecutorFunction","ExecutorModel","ExecutorFunctionType","ValidatorFunction","FilterModel","FilterAgent","ValidatorAgent","UseExtension","UIUser","IsSharedResource","UIPermissions","IsOwned","UIText","UIChoice","UIChoiceType","UIChoiceNode","PermissionRequester","PermissionManyToMany","MatchIds","ConnectionExists","PermissionTarget","UIDependsOn","UseUIDependsOn","UIOptionType","UseCustomUIOption","UIOptionTypeCustom","UIOption","UseUIExtensionList","UIExtensionList","UIExtension","UIExtensionDefinition","MethodProps","FilterPropreties","UIValidationType","NODEType","ReferenceType","UIAttributeType","ManyToManyNexusType","ManyToManyNexusTypes","MethodType","UIModelType","UseScopeGraph","ScopeGraph","Groups","GroupParent","CodePropertyType","FunctionType","PermissionImpl","ClassConstructionInformation","codeTypeWord","split","filter","toLowerCase","join","NodePropertiesDirtyChain","chainProp","chainFunc","letters","allowedchars","MakeConstant","val","isNaN","toUpperCase","LinkEvents","LinkType","Choice","ExecutorItem","ExecutorProperty","Validation","ValidationItem","ValidatorProperty","ValidatorModelItem","Option","OptionItem","ExtensionList","Extension","LogicalChildren","LogicalNieces","ManyToManyLink","AppliedPermissionLink","RequestorPermissionLink","ManyToManyPermissionLink","ExtensionDependencyLink","FunctionOperator","FunctionLink","OnScreenLink","FunctionVariable","PropertyLink","ParentLink","FunctionConstraintLink","ErrorLink","RequiredClassLink","ModelTypeLink","AgentTypeLink","UserLink","MaestroLink","AttributeLink","PermissionFunction","Exist","PermissionPropertyDependency","PermissionDependencyProperty","PermissionDependencyPropertyManyToManyLink","PermissionPropertyDependencyManyToManyLink","LinkStyles","type","stroke","strokeWidth","LinkPropertyKeys","TYPE","CONSTRAINTS","VALID_CONSTRAINTS","FUNCTION_ID","LinkProperties","EnumerationLink","EnumerationReferenceLink","ConditionLink","PermissionFunctionLink","PermissionDependencyPropertyLink","PermissionPropertyDependencyLink","ExistLink","exist","ChoiceLink","PermissionLink","ValdationLink","ValidationLinkItem","ValidatorAgentLink","ValidatorModelLink","ValidatorModelItemLink","ValidatorPropertyLink","ExecutorLink","ExecutorLinkItem","ExecutorAgentLink","ExecutorModelLink","ExecutorModelItemLink","ExecutorPropertyLink","ValidatorFunctionLink","ExecutorFunctionLink","OptionLink","OptionItemLink","OptionCustomLink","DependsOnLink","ExtensionListLink","ExtensionLink","keys","propTypes","ValidationRules","CVV","AlphaNumericLike","AlphaNumericPuncLike","AlphaOnly","NumericOnly","Numeric","Empty","AlphaOnlyWithSpaces","NotEmpty","UrlEmpty","IsTrue","IsFalse","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","EqualTo","Any","Url","EmailEmpty","Credit","Email","ExpirationMonth","BeforeNow","Year","Debit","ExpirationYear","PastDate","ZipEmpty","Zip","SocialSecurity","ListOfGuids","OneOf","NodePropertyTypes","STRING","LISTOFSTRINGS","DATETIME","INT","FLOAT","DOUBLE","BOOLEAN","EMAIL","PHONENUMBER","NEW_LINE","ProgrammingLanguages","CSHARP","NodePropertyTypesByLanguage","Usings","COMMON_DATETIME_ARGS","nodeType","COMMON_STRING_ARGS","ValidationCases","types","vectors","content","cases","$true","e","_","long","$empty","floor","short","invalid","empty","invalid2","false","$false","true","self","b","$greater","notgreater","$less","notless","$equal_to","not_equal","ExecutorRules","ModelReference","Copy","AgentReference","ExecutorUI","code","arguments","reference","FilterRules","EqualsTrue","EqualsFalse","FilterUI","ValidationUI","Create_ManyToMany_Agent_Value__IListChild","Update_ManyToMany_Agent_Value__IListChild","Get_ManyToMany_Agent_Value__IListChild","Delete_ManyToMany_Agent_Value__IListChild","Create_Parent$Child_Agent_Value__IListChild","Update_Parent$Child_Agent_Value__IListChild","Get_Parent$Child_Agent_Value__IListChild","Delete_Parent$Child_Agent_Value__IListChild","Create_Object_Agent_Value__IListObject","Update_Object_Agent_Value__IListObject","Get_Object_Agent_Value__IListObject","Delete_Object_Agent_Value__IListObject","Create_Parent_Child_Agent_Value__Child","Update_Parent_Child_Agent_Value__Child","Get_Parent_Child_Agent_Value__Child","Delete_Parent_Child_Agent_Value__Child","Create_Object_Agent_Value__Object","Update_Object_Agent_Value__Object","Get_Object_Agent_Value__Object","Delete_Object_Agent_Value__Object","Can_Execute_Agent_Parent_In_Valid_List","FunctionTemplateKeys","Bool","CanExecute","ModelDeterminingProperty","AgentDeterminingProperty","Parent","AgentInstance","Agent","AgentType","User","ManyToManyModel","UserInstance","FunctionConstraintKeys","IsTypeOf","IsChild","IsList","IsSingleLink","IsModel","IsFunction","IsProperty","IsEnumerable","IsInstanceVariable","IsInputVariable","COMMON_CONSTRAINTS","COMMON_CONSTRAINTS_AGENT_OBJECT","COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD","nodeTypes","COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD","COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD","COMMON_OUTPUT","INTERNAL_TEMPLATE_REQUIREMENTS","METHODS","PARAMETERS","PARAMETERSCLASS","CHANGECLASS","RESPONSECLASS","STREAMPROCESS","DETERMINING_PROPERTY","PARENTS_ID_PROPERTY","MODEL","CONSTRUCTORS","TEMPLATE","INTERFACE","PARENT","PROPERTY","METHOD","CREATE","UPDATE","PROCESS","FUNCTION_REQUIREMENT_KEYS","CLASSES","COMMON_FUNCTION_REQUIREMENTS","fs","readFileSync","attachment_methods","propreties","ToInterface","HTTP_METHODS","POST","GET","DELETE","PATCH","COMMON_FUNCTION_TEMPLATE_KEYS","model","function_name","user","user_instance","agent","agent_type","template","interface","constraints","isList","method","template_keys","MethodFunctions","parentGet","ConditionTypes","InEnumerable","InExtension","ConditionCases","$matching","notmatching","ConditionTypeParameters","RefManyToMany","RefManyToManyProperty","Ref1","Ref2","Ref1UseId","Ref2UseId","Ref1Property","ConditionTypeOptions","ConditionFunctionSetups","functions","bindTemplate","templateString","data","RegExp","test","subregex","createGraph","version","major","minor","build","workspace","Titles","path","namespace","groups","groupLib","groupsNodes","nodesGroups","childGroups","parentGroup","referenceNodes","nodeLib","nodes","nodeLinks","nodeConnections","linkLib","links","graphs","classNodes","functionNodes","updated","visibleNodes","appConfig","Logging","IncludeScopes","LogLevel","Default","System","Microsoft","AppSettings","Local-AuthorizationKey","Local-EndPointUrl","use_local","EndPointUrl","AuthorizationKey","DatabaseId","AssemblyPrefixes","Use-SingleCollection","storage-key","single-thread","ConfirmEmailController","ConfirmEmailAction","HomeAction","HomeController","ResetPasswordAction","ResetPasswordController","SecurityKey","Domain","TokenExpirationInMinutes","DomainPort","GraphKeys","NAMESPACE","SERVER_SIDE_SETUP","incrementBuild","graph","getScopedGraph","options","scope","console","log","newGroup","callback","group","createGroup","addGroup","addLeaf","ops","leaf","leaves","addGroupToGroup","groupId","removeGroupFromGroup","clearGroup","createValidator","properties","createExecutor","addValidatator","validator","validators","validatorArgs","removeValidator","getValidatorItem","item","getValidatorProperties","removeNode","existNodes","getNodesByLinkType","direction","TARGET","groupsContainingNode","removeLeaf","clearGroupDeep","success","v","removeNodeFromGroups","linksToRemove","source","target","getAllLinksWithNode","link","removeLink","clearLinks","en","GetManyToManyNodes","state","ids","NodesByType","GetNodeProp","addNode","addNewNodeOfType","parent","linkProperties","groupProperties","createNode","apply","JSON","parse","stringify","updateNode","rootNode","newLink","updateNodeProperty","prop","hasGroup","nodeGroupProp","getGroup","grandParent","gparentGroup","ancestores","getGroupAncenstors","anc","updateNodeGroup","GetNode","applyConstraints","functionType","functionConstraintObject","checkConstraints","functionConstraints","getNodesLinkedTo","validatorProperties","applyValidationNodeRules","currentGraph","isArray","excludeRefs","RequiredClassName","cls","node_name","getNodesFunctionsConnected","constraintKey","_link","getNodeLinksWithKey","ftk","functionTemplateKey","constraintObj","valid","FunctionMeetsConstraint","meets","updateLinkProperty","applyFunctionConstraints","getNodeFunctionConstraintLinks","linkConstraint","findMatchingConstraints","hasMatchingConstraints","GetLinkProperty","nodeToRemove","linkId","GetTargetNode","warn","core_group","internal_group","external_group","existingGroups","GetGroupProperty","_group","updateGroupProperty","constraintKeys","constraint","new_node","core","internal","external","lcj","find","f","_targetNode","targetNode","targetNodeType","targetConstraint","linkWithConstraints","findLinkWithConstraint","linkWithConstraint","nodeToMatchWith","linkToParentParameter","getNodeLinkedTo","relationshipLink","findLink","nodeId","SOURCE","getNodeLinks","res","addLink","createLink","getNodeLinked","matchObject","obj1","obj2","GetLinkChainItem","chains","GetLinkChain","GetCurrentGraph","op","il","newids","newnodes","_id","link_constraints","matchOneWay","temp","noSameLink","oldLink","findLinkInstance","executeEvents","evt","on","args","function","EventFunctions","executeRemoveEvents","addEventFunction","isUIExtensionEnumerable","_node","config","isEnumeration","GetUIExentionEnumeration","list","GetUIExentionKeyField","keyField","removeValidatorItem","_validator","createEventProp","linkType","update_link","del_link","additionalChange","dirty","text","copyLink","GetNodesInsideGroup","seenGroups","GroupImportanceOrder","getDepth","VisualProcess","vgraph","collapsedNodes","filteredGraph","a","FilterGraph","depth","h","SetVisible","collapsingGroups","t_importance","sortedGroups","nodeGroupKey","_type","smallestsNonCrossingGroups","cg","g_","disappearingNodes","dt","head","mostimportant","_nodes","dupLink","vgroups","groupIndex","oldgroup","newgroup","og","require","VISUAL","APPLICATION","GRAPHS","VISUAL_GRAPH","DASHBOARD_MENU","SELECTED_NODE_BB","SIDE_PANEL_EXTRA_WIDTH","NodeConstants","NodeAttributePropertyTypes","ROUTINGNUMBER","CURRENCY","CARMAKE","SOCIALSECURITY","PHONE","CARMODEL","CARYEAR","VIN","LONGSTRING","CREDITCARD","LENGTH","INCH","DIMENSION","MONEY","COUNTRY","DEBIT","MONTH","STATE","CHOICE","NUMBER","SLIDER","DATE","TIME","ACCOUNTNUMBER","ADDRESS","COLLECTION","OBJECT","RADIO","CHECKLIST","GEOLOCATION","YEAR","OptionsTypes","CHOICELIST","CAPITALIZE_FIRST_LETTER","UI_UPDATE","GetC","section","uiReducer","Visual","IsCurrentNodeA","currentNode","Node","SELECTED_NODE","Use","GraphMethods","GetState","GetCodeName","GetMethodPropNode","methodProps","VisualEq","Application","GetVisualGraph","SaveApplication","dispatch","UIC","Graphs","SaveGraph","visualGraph","Date","now","toggleVisual","getState","GUID","setVisual","setApplication","SELECTED_LINK","HOVERED_LINK","SelectedNode","toggleDashboardMinMax","GetNodes","CanChangeType","useRoot","GetRootGraph","GetNodeFromRoot","NodesConnectedTo","_getState","setState","GetFunctionType","methodNode","GetMethodNodeProp","GetMethodProps","GetPermissionMethod","permission","GetCurrentScopedGraph","CURRENT_GRAPH","GetSubGraphs","addNewSubGraph","rootGraph","newgraph","setRootGraph","setAppsettingsAssemblyPrefixes","prefixes","GRAPH_SCOPE","GetSelectedSubgraph","root","UPDATE_GRAPH_TITLE","NEW_NODE","REMOVE_NODE","NEW_LINK","CHANGE_NODE_TEXT","CHANGE_NODE_PROPERTY","NEW_PROPERTY_NODE","NEW_PERMISSION_NODE","NEW_ATTRIBUTE_NODE","ADD_LINK_BETWEEN_NODES","NEW_CONDITION_NODE","REMOVE_LINK_BETWEEN_NODES","REMOVE_LINK","NEW_CHOICE_ITEM_NODE","NEW_PARAMETER_NODE","NEW_FUNCTION_OUTPUT_NODE","NEW_MODEL_ITEM_FILTER","NEW_VALIDATION_ITEM_NODE","NEW_CHOICE_TYPE","NEW_VALIDATION_TYPE","NEW_OPTION_ITEM_NODE","NEW_OPTION_NODE","NEW_CUSTOM_OPTION","NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE","NEW_EXTENSION_LIST_NODE","NEW_EXTENTION_NODE","ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY","APPLY_FUNCTION_CONSTRAINTS","ADD_NEW_REFERENCE_NODE","SET_DEPTH","graphOperation","operation","operations","classes_that_must_exist","function_node","functionConstraintRequiredClasses","constraintModelKey","constraint_nodes","nodes_one_step_down_the_line","cn","nextNodes","functionNode","class","matching_nodes","_cnode","error","scopedGraph","masterNode","refNode","referenceType","Colors","HandlerEvents","scaffold","message","reply","NAME_SPACE_TEMPLATE","NamespaceGenerator","space","usings","namespaceTemplate","imports","body","CONTROLLER_CLASS_TEMPLATE","CONTROLLER_CLASS_FUNCTION_TEMPLATE","CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE","ControllerGenerator","TAB","graphRoot","controllers","_controllerTemplateClass","_controllerTemplateFunction","_controllerTemplateFunctionGet","controller","controllerTemplateClass","codeName","userNode","maestro_functions","maestro","tempfunctions","maestroName","maestro_function","ft","tempFunction","parameters","parameter_route","parameter_values","paramName","functionName","httpMethod","httpRoute","methodProperties","modelNode","output_type","http_route","http_method","maestro_interface","input_type","jNL","codeName#alllower","Generate","MODEL_TEMPLATE","MODEL_PROPERTY_TEMPLATE","MODEL_STATIC_TEMPLATES","MODEL_ATTRIBUTE_TEMPLATE","ModelGenerator","models","GenerateModel","templateSwapDictionary","base_model","account_enabling_func","attributes","connectedProperties","propertyTemplate","attributeTemplate","staticFunctionTemplate","validatorFunctions","tabs","staticFunctions","propNode","connectedAttributes","property_instance_template","np","propType","propSwapDictionary","property_type","attr","options_lists","options_list","ol","_ols","ReverseRules","_key","validations","vnode","vnodeItem","choice_name","validation_rules","validation_list","choice_type","attributeSwapDictionary","ui_title","singular","uiValidationType","staticDic","modelTemplate","EXTENSION_CLASS_TEMPLATE","EXTENSION_PROPERTY_TEMPLATE","EXTENSION_NEW_INSTANCE","EXTENSION_NEW_PROPERTY","EXTENSION_NEW_INSTANCE_LIST","EXTENSION_NEW_INSTANCE_LIST_ADD","EXTENSION_NEW_INSTANCE_DICTIONARY","EXTENSION_NEW_INSTANCE_DICTIONARY_ADD","EXTENSION_NEW_TEMPLATE_LIST","PROPERTY_TABS","ExtensionGenerator","extensionNode","def","Error","extensions","_extensionClassTemplate","_extensionPropertyTemplate","_extensionNewInstance","_extensionNewProperty","_extensionNewInstanceList","_extensionNewInstanceListAdd","_extensionNewInstanceDictionary","extension","extensionClassTemplate","statics","constants","uiExtensionDefinition","modelName","definition","extensionPropertyTemplate","instances","instance","item_index","NL","Tabs","dictionary","temp_instance","inst","addings","co","ConstantsDeclaration","TEST_CASE","TEST_CLASS","TEST_CASE_PROPERTY","PERMISSIONS_INTERFACE","PERMISSIONS_CASE_EXTENSION","PERMISSIONS_CASE_ENUMERATION","PERMISSIONS_CASE_INCLUDED_IN_LIST","PERMISSIONS_METHODS","PERMISSIONS_ARBITER_PROP","PERMISSIONS_IMPL","PERMISSIONS_INTERFACE_METHODS","MATCH_TO_MANY_REFERENCE_PARAMETER","MATCH_REFERENCE","PermissionGenerator","dNode","enu","ea","dpNode","enumerationNode","ext_allowed","enumerationName","ext_disallowed","createInstanceEnumerationListName","_createEnumerationInstanceList","constants_allowed","extensionName","_createExtensionInstanceList","dependingPermissionNodes","listOfCases","propertyNodeLinkedToByDependencyPermissionNode","propertyNodes","propertyNode","agentLinkExists","extentionNode","useEnumeration","useExtension","tempBindingValues","parent_property","value_property","casename","instance_list","variable","permissionCaseEnumerationTemplate","enumInstance","createEnumerationInstanceList","allowed-values-list","permissionCaseExtensionTemplate","extensionInstance","createExtensionInstanceList","extension_propery_key","extension_value_property","appliedPermissionLinks","values","conditionNodes","conditionNode","conditionType","mmrp","neg","enumRef","enumerationNodeName","getReferencedNodeName","constList","getReference","disAllowedConstList","_createConstantList","enumNotAllowed","nameEnum","propertyEnum","ref","extensionsNotAllowed","_getNotAllowedExtectionConstances","nameExt","propertyExt","getReferencedValue","_manyToManyMatchCondition","_matchReferenceCondition","permissionsEnabledFor","conditions","ref1UseId","ref2UseId","data_property","relationship","arbiter","ine","ref1","createStringList","enumerate","GetTestExtensionNodeValues","enums","EnumerateCases","testCaseProperty","_enum","ispositive","which","is_model_parameter","_case","ref2Model","ref1Property","resultSuccess","manyToMany","many_to_many_register","testCase","ref1type","ref2type","ref2","EnumeratePermissionCases","testIndex","templates","set_agent_properties","set_model_properties","set_parent_properties","set_match_reference_properties","set_match_many_reference_properties","many_to_many","permissions","agents","_testTemplate","_permissionInterface","_permissionImplementation","_permissionInterfaceMethods","_permissionMethods","_permissionArbiters","streamProcessChangeClassExtension","permissionInterface","testPermission","methodImplementations","methodInterfaces","testMethodPermisionCases","arbiters","matchingPermissionNodes","PermissionMatches","permissionCases","permissionCodeNames","matchingPermissionNode","GenerateCases","testTemp","GenerateTestCases","perms","permKey","permissionMethods","permissionInterfaceMethods","case_result","methods","tname","iname","tests","VALIDATION_CLASS","VALIDATION_TEST","VALIDATION_PROPERTY","ValidationRuleGenerator","validation_test_vectors","vects","results","rest","validatorNode","validatorPs","vld","attribute_type_arguments","_ _","ext","enumeration","enumName","enumerateValidationTestVectors","vector","successCase","propertyInformation","properylines","vindex","projected_value","propline","set_properties","_validation_class","_validation_property","_validation_test","_testClass","funct","functNode","propertyValidationStatements","attribute_type","model_property","testProps","test_name","attribute_parameters","expected_value","templateRes","testTemplate","STREAM_PROCESS_ORCHESTRATION_TEMPLATE","STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE","STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES","STREAM_METHOD_TESTS","CREATE_MODEL_TESTS","StreamProcessOrchestrationGenerator","_streamProcessFunctionTemplate","streamProcessFunctionTemplate","modelCode","model#allupper","model#lower","_streamAgentMethods","modelexecution","agent_type#lower","_stramMethodTests","_createModelTests","agentTypeNode","func_Cases","permissionNode","GetFunctionValidators","validatorCases","GenerateValidationCases","isModel","caseindex","v1","v2","agent_properties","model_properties","set_agent_propeties","test_result","_streamProcessTemplate","_streamProcessInterfaceTemplate","agent_methods","GenerateAgentMethods","agent_methods_interface","GenerateAgentInterfaceMethods","GenerateStaticMethods","strappers","GenerateStrappers","strapperInstances","GenerateStrappersInstances","static_methods","agent_type_methods","arbiters_strappers","arbiter_instances","GenerateProcessTests","RETURN_GET_CLASS","FILTER_PROPERTY_FUNCTION_VALUE","FILTER_PROPERTY_FUNCTION_VALUE_EQUALS","ModelItemFilterGenerator","_return_get_class","modelitemfilter","itemFilter","filterModel","funcs","filterPropFunction","filters","propName","validatorName","validatorValue","filterPropFunctionValueEquals","code_name","MAESTRO_CLASS_TEMPLATE","MAESTRO_INTERFACE_TEMPLATE","MAESTRO_FUNCTION_TESTS","MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS","get_agent_manytomany_listchild_interface","MAESTRO_FUNCTION_GET_TESTS","MaestroGenerator","maestros","_maestroTemplateClass","_MAESTRO_INTERFACE_TEMPLATE","testFunctionTemplate","testFunctionGetSameParentTemplate","testFunctionGetTemplate","maestroTemplateClass","functionsInterface","permissionValidationCases","function_type","interfaceFunction","value_type","parent_type","userTypeNode","parentNode","modelFilterNode","manyToManyNode","predicates","modelItemFilters","model_type","methodType","connect_type","manyNodes","manyNode","agentAndModelIsTheSame","bindOptions","filter_function","permission_function","EnumerateFunctionValidators","pvc","pvc2","agentProperties","findIndex","agentProps","itemProperties","itemProps","templ","set_many_to_many_properties","testname","injectedServices","injectedPermissionServices","set_permissions","permissions_properties","injected_services","ti","maestro_interface_template","STREAM_PROCESS_CHANGE_CLASS_EXTENSION","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS","ChangeParameterGenerator","_streamProcessChangeClassExtension","_streamProcessChangeClassConstructors","_streamProcessChangeClassConstrictorsTest","testClass","constructors","streamProcessChangeClassConstructors","change_type","streamProcessChangeClassConstrictorsTest","CONSTANTS_CLASS","ConstantsGenerator","_constantsClass","constantsClass","consts","constants_type","STREAM_PROCESS_TEMPLATE","STREAM_PROCESS_TEMPLATE_TESTS","STREAM_PROCESS_FUNCTION_TEMPLATE","StreamProcessGenerator","staticMethods","_streamProcessTemplateTests","staticTests","GenerateStaticMethodTests","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED","ChangeResponseGenerator","_streamProcessChangeClassConstructorsTest","_streamProcessChangeClassConstructorsFailed","_test","model2","streamProcessChangeClassConstructorsFailed","streamProcessChangeClassConstructorsTest","parameterTemplate","arrange","parameter_properties","act","parameters_property","assert","EXECUTOR_CLASS","EXECUTOR_INTERFACE","EXECUTOR_CREATE","EXECUTOR_ENTRY_METHODS","EXECUTOR_ENTRY_METHODS_INTERFACE","EXECUTOR_METHOD_CASE","EXECUTOR_UPDATE","EXECUTOR_METHODS","EXECUTOR_METHODS_INTERFACE","ExecutorGenerator","_executor_class","_executor_class_interface","_executor_methods","_executor_methods_interface","_executor_create","_executor_update","_exe_method","_exe_method_interface","_exe_case","agentFunctionDic","agentFunctionInterfaceDic","agentModelDic","agmCombos","allmodels","allagents","allfunctions","meth","found","fun","agentNode","functType","executorProperties","amdid","property_sets","templateResInterface","method_name","change","method_guts","amd","_cases","func_name","static_methods_interface","staticentry","templateInterfaceRes","RETURN_GET_FUNCTION","ModelReturnGenerator","_return_get_methods","allfilters","filterNode","MODEL_GET_CLASS","MODEL_GET_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD","ModelGetGenerator","_get_class","_get_methods","_get_methods_many_to_many","_get_method_many_to_many_get_child","childrenTypes","namesAreUnique","ct","params","query","Generator","enumerations","larg","streamTypes","functionsTypes","ModelExceptionGenerator","ipcRenderer","hub","scaffoldProject","filesOnly","solutionName","Promise","resolve","mess","msg","then","fail","send","code_types","code_type","generate","area","CodeTypeToArea","fileName","ensureDirectory","writeFileSync","generateFiles","server_side_setup","generateFolderStructure","dir","lib","relative","target_dir","directories","readdirSync","dirPath","existsSync","lstatSync","isDirectory","reldir","substr","file","mkdirSync","event","arg","mapStateToProps","mapDispatchToProps","bindActionCreators","IPCEvents","UIConnect","component","connect","String","padding","valueOf","abs","max","pad","charAt","unCamelCase","str","trim","dashboardlogo_jsx","className","Header","Component","_ref","header_jsx","dashboardnavbar_jsx","sidebartoggle_jsx","me","onClick","data-toggle","role","sidebartoggle_ref","NavBarMenu","navbarmenu_jsx","DropDownMenu","menuType","open","ariaExpanded","icon","label","usermode","usermenu","userbody","userheader","width","style","dropdown_jsx","aria-expanded","external_react_default","createElement","_extends","headerText","header","footer","DropDownMenuItem","dropdownmenuitem_jsx","fontSize","description","mainsidebar_jsx","height","SideBarHeader","sidebarheader_jsx","SideBarMenu","sidebarmenu_jsx","treeviewmenu_jsx","TreeViewMenu","active","display","toggle","hideIcon","hideArrow","treeviewmenu_ref","right","TreeViewItem","treeviewitem_jsx","Content","content_jsx","minHeight","SideBar","extraWidth","extraWide","sidebar_jsx","SideBarTabs","sidebartabs_jsx","SideBarTab","ariaExapanded","sidebartab_jsx","ControlSideBarMenu","controlsidebarmenu_jsx","ControlSideBarMenuItem","ControlSideBarMenuHeader","TabPane","tabpane_jsx","FormControl","_class","sidebarform","formcontrol_extends","textinput_jsx","TextInput","placeholder","disabled","inputgroup","onChange","textinput_ref","SelectInput","selectinput_jsx","onSelect","defaultSelectText","CheckBox","checkbox_jsx","checked","ServiceTypes","Facebook","Twitter","Google","ServiceTypeSetups","UseFacebook","FacebookAppId","FacebookAppSecret","UseMicrosoftAccount","MicrosoftClientId","MicrosoftClientSecret","UseGoogle","GoogleClientId","GoogleClientSecret","UseTwitter","TwitterConsumerKey","TwitterConsumerSecret","serviceType","propinputs","serviceTypeSetup","prop_setup","serviceactivitymenu_jsx","textinput_TextInput","checkbox_CheckBox","tabpane_TabPane","formcontrol_FormControl","selectinput_SelectInput","SideBarContent","sidebarcontent_jsx","NavBarButton","navbarbutton_jsx","ApplicationMenu","noop","dispatch_dispatch","Dispatch","set","slice","concat","constructor","typename","T","copy","that","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","src_namespace","prefix","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","nextId","Local","remove","matcher","selector","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","none","src_selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","sparse","update","EnterNode","datum","_next","_parent","appendChild","child","insertBefore","next","keyPrefix","bindIndex","enter","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending","NaN","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_names","getAttribute","classedAdd","names","add","classedRemove","setAttribute","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","dispatchEvent","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","match","size","each","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","merge","selection","groups0","groups1","m0","m1","merges","group0","group1","order","compare","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","append","insert","before","typenames","on_parseTypenames","src_selection","DragEvent","subject","dx","dy","identifier","define","factory","extend","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","k","pow","darker","round","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","t2","t3","labConvert","Lab","Hcl","cos","sin","rgb2xyz","xyz2lab","lab","lab2xyz","xyz2rgb","hcl","atan2","sqrt","hclConvert","z","A","B","C","D","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v3","cosh","sinh","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","number","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","lastIndex","q","one","zero","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","scale","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","taskHead","taskTail","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","tween","tick","duration","ease","schedule_create","init","schedule","schedule_get","schedule_set","interrupt","tweenValue","transition","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","custom","polyIn","exponent","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","Transform","point","applyX","applyY","invert","location","invertX","invertY","rescaleX","domain","range","rescaleY","MIN_DIMENSIONAL_SIZE","super","textSize","mapScale","mapTranslate","draw","mouseDown","mouseUp","mouseMove","componentDidMount","mouseStartEvent","mouseMoved","mouseMoveEvt","clientX","clientY","componentWillUnmount","domObj","calculateNodeTextSize","div","visibility","position","whiteSpace","maxWidth","top","getBoundingClientRect","bb","force","Cola","d3","margin","linkDistance","avoidOverlaps","handleDisconnected","outer","vis","redraw","wheelDelta","zoomFactor","panning","makeSVG","forEach","getLabelText","$_nodes","innerBounds","bounds","inflate","route","sourceIntersection","arrowStart","features","innerbit","titles","drag","$node","buildNode","selected","els","onLinkClick","onLinkHover","onNodeClick","selectedColor","degree","rise","Y","run","X","assign","$force","$color","cola","applyNodeVisualData","nn","componentWillReceiveProps","removedNodes","selectedNodes","nl","removedLinks","duplicateLink","selectedLinks","graph_groups","removedGroups","duplicateGroup","mindmapgroup","applyGroup","shouldComponentUpdate","mindmap_jsx","ButtonList","buttonlist_jsx","items","isSelected","cursor","overflow","textOverflow","is_agent","is_parent","many_to_many_enabled","permission_nodes","modelactivitymenu_jsx","buttonlist_ButtonList","controlsidebarmenu_ControlSideBarMenuHeader","controlsidebarmenu_ControlSideBarMenu","controlsidebarmenu_ControlSideBarMenuItem","agent_nodes","function_types","funcKey","functionactivitymenu_jsx","show_dependent","use_model_as_type","property_nodes","propertyactivitymenu_jsx","localeCompare","choice_nodes","validation_nodes","show_choice","show_validations","show_options","show_extenions","option_nodes","extension_nodes","attributeformcontrol_jsx","nodelist_jsx","nodeProperty","nodelist_ref","targetNodeId","requestorNodeId","currentRequester","currentTarget","manyToManyNodes","manyToManyNodeId","manyToManyProperties","getPropertyNodes","permissionmenu_jsx","choiceactivitymenu_jsx","xi","TreeViewItemContainer","treeviewitemcontainer_jsx","input","modelfilteractivitymenu_jsx","agentinput","validationactivitymenu_jsx","validationitemactivitymenu_jsx","modelNodes","MethodF","validatoractivitymenu_jsx","optionactivitymenu_jsx","executorpropertymenu_jsx","executor","ref2_properties","ref1_properties","model_options","getProperties","conditionactivitymenu_jsx","getMatchManyReferenceProperty","getEnumeration","getMatchReferenceProperty","nodeProperties","allowed","disallowed","enumerationValues","matchRef","enumeration_nodes","refManyToMany_properties","ref2Property","refManyToManyExists","refManyToManyProperty","refManyToManyCondition","propertyType","mustBeModel","mustBeProperty","mustBeFunction","linkedNodes","parameteractivitymenu_jsx","show_custom","custom_options","optionitemformcontrol_jsx","EnumerationEditMenu","enumerationeditmenu_jsx","onComplete","executoritem_jsx","validatorItem","_nodes_types","editlist","list_enums","list_key_field","old_one","executoritem_ref","_ref2","_ref3","executorpropertyactivitymenu_jsx","modelKey","nodeProp","_ui","ui","propertyExecutors","executorpropertyactivitymenu_ref","_validates","visualKey","selectedValidations","selKInner","treeviewmenu_TreeViewMenu","executoritem","validationUis","reverse","executorUI","mainsidebar_Header","sidebar_SideBar","sidebarmenu_SideBarMenu","executoractivitymenu_jsx","propertyValidations","validatorpropertymenu_jsx","validatoritem_jsx","validatoritem_ref","validatoritem_ref2","validatoritem_ref3","validatorpropertyactivitymenu_jsx","validatorpropertyactivitymenu_ref","validatoritem","valiationUi","extentiontypes","ExtensionListActivityMenu_jsx","permissionsactivitymenu_jsx","referencable_nodes","referenceactivitymenu_jsx","goomenu_jsx","menuItems","mi","pointerEvents","visible","goomenu_ref","left","onToggle","href","htmlFor","goomenu_ref2","goomenu_ref3","_ref4","in","stdDeviation","in2","GooMenuSVG","_ref5","Box","primary","maxheight","maxHeight","overflowY","box_jsx","choicelistitemactivitymenu_jsx","modelfiltermenu_jsx","fprops","Slider","slider_jsx","parseFloat","TabContent","tabcontent_jsx","Tab","userfooter_jsx","TabContainer","tabcontainer_jsx","EnumeratedTable","dataFunc","rows","enumeratedtable_jsx","columns","inde","columnButtons","fx","headers","extensiondefinitionmenu_jsx","form","editKey","tabKey","addBtn","tab_key","btns","extensiondefinitionmenu_ref","extensiondefinitionmenu_ref2","extensiondefinitionmenu_ref3","userfooter_Tab","enumeratedtable_EnumeratedTable","extensiondefinitionmenu_ref4","obj","extensiondefinitionmenu_ref5","dependsOn","methodactivitymenu_jsx","functionObject","methodparams","methodpropertymenu_jsx","oldConnect","MAESTRO_DETAILS_MENU","maestrodetailsmenu_jsx","othernodes","onode","treeviewitem_TreeViewItem","maestrodetailsmenu_ref","NODE_MANAGEMENT_MENU","NODE_MANAGEMENT","nodemanagement_jsx","toFilterString","gi","groupKey","groupNodes","gn","gni","nodemanagement_ref","commonactivitymenu_jsx","modelfilteritemactivitymenu_jsx","hasLogicalChildren","hasLogicalNieces","modelrelationshipmenu_jsx","RadioButton","radiobutton_jsx","depthchoice_jsx","box_Box","radiobutton_RadioButton","depthchoice_ref","maestroactivitymenu_jsx","inputVariable","CONTROLLER_DETAILS_MENU","controllerdetailsmenu_jsx","controllerdetailsmenu_ref","controlleractivitymenu_jsx","getTargetNodes","targetPropertyNodes","extensionNodeId","extensionValues","targetPropertyNode","permissionsdependentactivitymenu_jsx","GRAPH_MENU","graphmenu_jsx","dropdown_DropDownMenu","dropdownmenuitem_DropDownMenuItem","SECTION_LIST","sections","subGraphs","sg","sectionlist_jsx","enumerationactivitymenu_jsx","enumerationeditmenu_EnumerationEditMenu","sectionedit_jsx","TopViewer","topviewer_jsx","backgroundColor","docco","hljs","overflowX","background","hljs-comment","fontStyle","hljs-quote","hljs-keyword","hljs-selector-tag","hljs-literal","hljs-subst","hljs-number","hljs-string","hljs-doctag","hljs-selector-id","hljs-selector-class","hljs-section","hljs-type","hljs-params","hljs-title","fontWeight","hljs-tag","hljs-name","hljs-attribute","hljs-variable","hljs-template-variable","hljs-regexp","hljs-link","hljs-symbol","hljs-bullet","hljs-built_in","hljs-builtin-name","hljs-meta","hljs-deletion","hljs-addition","hljs-emphasis","hljs-strong","tab_jsx","tabs_jsx","MODEL_CODE","CODE_VIEW_TAB","codeString","generatedContent","viewTab","classKey","gcKey","codeview_jsx","topviewer_TopViewer","tabcontainer_TabContainer","tabs_Tabs","tab_Tab","tabcontent_TabContent","external_react_syntax_highlighter_default","language","SIDE_PANEL_OPEN","NODE_MENU","CONNECTING_NODE","LINK_DISTANCE","MAIN_CONTENT","MIND_MAP","CODE_VIEW","dashboard_jsx","goomenu_GooMenuSVG","dashboardlogo_Header","sidebartoggle","graphmenu","sectionedit","treeviewitemcontainer_TreeViewItemContainer","depthchoice","sectionlist","nodemanagement","maestrodetailsmenu","controllerdetailsmenu","choicelistitemactivitymenu","conditionactivitymenu","sidebarcontent_SideBarContent","controlleractivitymenu","modelfilteritemactivitymenu","commonactivitymenu","functionactivitymenu","methodactivitymenu","attributeformcontrol","parameteractivitymenu","modelactivitymenu","validatoractivitymenu","executoractivitymenu","propertyactivitymenu","validationitemactivitymenu","choiceactivitymenu","maestroactivitymenu","validationactivitymenu","optionactivitymenu","components_ExtensionListActivityMenu","optionitemformcontrol","permissionsactivitymenu","extensiondefinitionmenu","modelfilteractivitymenu","permissionsdependentactivitymenu","enumerationactivitymenu","serviceactivitymenu","validatorpropertymenu","referenceactivitymenu","executorpropertymenu","modelrelationshipmenu","methodpropertymenu","permissionmenu","modelfiltermenu","validatorpropertyactivitymenu","executorpropertyactivitymenu","SELECTED_TAB","DEFAULT_TAB","PARAMETER_TAB","SCOPE_TAB","minified","nodeSelectionMenuItems","selected_node_bb","menu_left","menu_top","main_content","hoveredLink","getLinkInstance","dashboard_ref","goomenu_NavBarButton","data-tid","header_Header","dashboard_ref2","dashboardnavbar_Header","dashboard_ref3","navbarmenu_NavBarMenu","navbarbutton_NavBarButton","dashboard_ref4","sidebarheader_SideBarHeader","VC","newRedQuickBuilderGraph","openRedQuickBuilderGraph","saveGraphToFile","setWorkingDirectory","dashboard_ref5","slider_Slider","_ref6","_ref7","_ref8","_ref9","_ref10","content_Content","codeview","mindmap_MindMap","boundingBox","selectedId","sidebartabs_SideBarTabs","sidebartab_SideBarTab","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","Root_jsx","Routes_jsx","App_App","external_react_router_","routes","HOME","Dashboard","INCREMENT_COUNTER","DECREMENT_COUNTER","increment","decrement","incrementIfOdd","counter","incrementAsync","action","newstate","updateUI","createRootReducer","history","combineReducers","router","connectRouter","createHashHistory","rootReducer","routerMiddleware","enhancer","applyMiddleware","thunk","selectedConfigureStore","configureStore","initialState","createStore","store","app_jsx","external_react_hot_loader_","external_react_redux_","connected_react_router_lib","Root_ref","getElementById","__RewireAPI__","__ResetDependency__","__set__","__Rewire__","__GetDependency__","__get__","undefined","_typeof","iterator","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_propTypes2","_reactRedux","_reactRouter","_actions","default","createConnectedRouter","structure","getIn","toJS","ConnectedRouter","_get__2","context","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","inTimeTravelling","unsubscribe","subscribe","_toJS","pathnameInStore","pathname","searchInStore","search","hashInStore","hash","_props$history$locati","pathnameInHistory","searchInHistory","hashInHistory","handleLocationChange","onLocationChanged","unlisten","listen","subClass","superClass","setPrototypeOf","_inherits","_get__","_props","contextTypes","shape","isRequired","oneOfType","basename","_getGlobalObject","global","theGlobalVariable","_RewireModuleId__","_getRewireModuleId__","globalVariable","__$$GLOBAL_REWIRE_NEXT_MODULE_ID__","_getRewireRegistry__","__$$GLOBAL_REWIRE_REGISTRY__","_getRewiredData__","registry","rewireData","INTENTIONAL_UNDEFINED","_RewireAPI__","variableName","Router","_get_original__","_set__","_reset__","_with__","rewiredVariableNames","previousValues","reset","catch","addPropertyToAPIObject","_typeOfOriginalExport","addNonEnumerableProperty","isExtensible","LOCATION_CHANGE","CALL_HISTORY_METHOD","payload","updateLocation","_len","go","goBack","goForward","routerActions","actions","newObj","_interopRequireWildcard","_ConnectedRouter2","_reducer2","_middleware2","_selectors2","createAll","wildcardImport","propertyName","reduce","filteredWildcardImport","_filterWildcardImport__","createMatchSelector","getAction","getLocation","_createAll2","_plain2","_action$payload","arr","arr2","from","_toConsumableArray","createConnectRouter","fromJS","initialRouterState","createSelectors","lastPathname","lastMatch","url","matchPath","_getIn","_getIn2","it","UNSCOPABLES","ArrayProto","isObject","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","O","aFunction","invoke","arraySlice","factories","fn","partArgs","bound","F","len","construct","__e","is","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","expProto","U","W","R","__g","dP","createDesc","un","cof","propertyIsEnumerable","setToStringTag","IteratorPrototype","NAME","LIBRARY","Iterators","$iterCreate","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","done","anObject","dPs","enumBugKeys","IE_PROTO","createDict","iframeDocument","iframe","src","contentWindow","write","lt","close","Properties","IE8_DOM_DEFINE","toPrimitive","Attributes","getKeys","has","toObject","ObjectProto","arrayIndexOf","$keys","bitmap","SRC","$toString","TPL","inspectSource","safe","isFunction","tag","stat","shared","uid","copyright","toInteger","ceil","IObject","defined","px","USE_SYMBOL","addToUnscopables","step","iterated","_t","_i","_k","Arguments","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","ReactPropTypesSecret","emptyFunction","shim","componentName","propFullName","secret","err","getShim","ReactPropTypes","bool","symbol","any","arrayOf","element","instanceOf","objectOf","oneOf","exact","checkPropTypes","PropTypes","super_","u","N","prefilter","normalize","lhs","rhs","w","groupCollapsed","groupEnd","logger","actionTransformer","titleFormatter","timestamp","toFixed","collapsed","level","diff","started","startedTime","prevState","took","nextState","L","M","stateTransformer","errorTransformer","predicate","logErrors","diffPredicate","getHours","getMinutes","getSeconds","getMilliseconds","DeepDiff","observableDiff","applyDiff","applyChange","revertChange","isConflict","noConflict","transformer","defaults","createLogger"],"mappings":"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","file":"renderer.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/index.js\");\n","// @flow\r\nimport * as React from 'react';\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return <React.Fragment>{children}</React.Fragment>;\r\n  }\r\n}\r\n","\r\nexport function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n((array) => {\r\n    if (!array.relativeCompliment) {\r\n        var extrasection_relativeCompliment = {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func, output) {\r\n                var collection = this;\r\n                var result = [];\r\n\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {//function (x) { return x == collection[i]; }\r\n                    if (!othercollection.some(func.bind(null, collection[i]))) {\r\n                        result.push(collection[i]);\r\n                    }\r\n                    else if (output) {\r\n                        output.push(collection[i]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        if (!array.relativeCompliment) {\r\n            Object.defineProperty(array, 'relativeCompliment', extrasection_relativeCompliment);\r\n        }\r\n    }\r\n\r\n    if (!array.intersection) {\r\n        Object.defineProperty(array, 'intersection', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func) {\r\n                var collection = this;\r\n                var result = [];\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {\r\n                    for (var j = othercollection.length; j--;/**/) {\r\n                        if ((func(othercollection[j], collection[i]))) {\r\n                            result.push(collection[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n    if (!array.toNodeSelect) {\r\n        Object.defineProperty(array, 'toNodeSelect', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function () {\r\n                var collection = this;\r\n                return collection.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    if (!array.unique) {\r\n        Object.defineProperty(array, 'unique', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var result = [];\r\n                var finalresult = [];\r\n                func = func || function (x) { return x; };\r\n                var collection = this;\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    //if (func(collection[i])) {\r\n                    if (result.indexOf(func(collection[i])) === -1) {\r\n                        result.push(func(collection[i]));\r\n                        finalresult.push(collection[i]);\r\n                    }\r\n                    //}\r\n                }\r\n                return finalresult;\r\n                //return result;\r\n            }\r\n        });\r\n    }\r\n    if (!array.removeIndices) {\r\n        //removeIndices\r\n        Object.defineProperty(array, 'removeIndices', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (indices) {\r\n                indices = indices.orderBy(function (x, y) { return y - x; });\r\n                var collection = this;\r\n                indices.map(function (index) {\r\n                    collection.splice(index, 1);\r\n                });\r\n\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.interpolate) {\r\n        Object.defineProperty(array, 'interpolate', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop, func) {\r\n                var collection = this;\r\n                func = func || function (x) { return x; };\r\n                for (var i = start; i < stop; i++) {\r\n                    if (collection instanceof Float32Array) {\r\n                        collection[i - start] = (func(i));\r\n                    }\r\n                    else\r\n                        collection.push(func(i, i - start));\r\n                }\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.orderBy) {\r\n        Object.defineProperty(array, 'orderBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this.map(function (x) { return x; });\r\n                return collection.sort(func);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!array.groupBy) {\r\n        Object.defineProperty(array, 'groupBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this;\r\n                var result = {};\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    var t = func(collection[i]);\r\n                    result[t] = result[t] || [];\r\n                    result[t].push(collection[i]);\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!array.subset) {\r\n        Object.defineProperty(array, 'subset', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop) {\r\n                var collection = this;\r\n                stop = Math.min(collection.length, stop === undefined || stop === null ? collection.length : stop);\r\n                start = Math.min(collection.length, start === undefined || start === null ? collection.length : start);\r\n                start = start < 0 ? 0 : start;\r\n                stop = stop < 0 ? 0 : stop;\r\n                var result = this instanceof Float32Array ? new Float32Array(stop - start) : [];\r\n                for (var i = start; i < stop; i++) {\r\n                    if (this instanceof Float32Array) {\r\n                        result[i - start] = collection[i];\r\n                    }\r\n                    else {\r\n                        result.push(collection[i]);\r\n                    }\r\n\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n})(Array.prototype)\r\n\r\n","export const AddNode = 'Add Node';\r\nexport const RemoveNode = 'Remove Node';\r\nexport const RemoveValidation = 'Remove Validation';\r\nexport const RemoveExecution = 'Remove Execution';\r\nexport const SelectValidation = 'Select Validation';\r\nexport const SelectExecution = 'Select Execution';\r\nexport const SelectedValidations = 'Selected Validations';\r\nexport const Remove = 'Remove';\r\nexport const GraphOperations = 'Graph Operations';\r\nexport const ServerSideSetup = 'Service Side Setup';\r\nexport const AddCondition = 'Add Condition';\r\nexport const GraphPropertiesMenu = 'Graph Properties';\r\nexport const NodeLabel = 'Node Label';\r\nexport const NodeType = 'Node Type';\r\nexport const Nodes = 'Nodes';\r\nexport const Models = 'Models';\r\nexport const ConditionType = 'Condition Type';\r\nexport const Reference = 'Reference';\r\nexport const Depth = 'Depth';\r\nexport const Label = 'Label';\r\nexport const New = 'New';\r\nexport const Controllers = 'Controllers';\r\nexport const ServiceActivity = 'Service Activity';\r\nexport const CodeTypes = 'Code Types';\r\nexport const Project = 'Project';\r\nexport const NameSpace = 'NameSpace';\r\nexport const Pinned = 'Pinned';\r\nexport const Collapsed = 'Collapsed';\r\nexport const GenericLink = 'General Link';\r\nexport const OnLoad = 'On Load';\r\nexport const ChildLink = 'Child link';\r\nexport const OnFailureLink = 'On failure result';\r\nexport const OnAction = 'On Action';\r\nexport const OnItemSelection = 'On Item Selection';\r\nexport const OnSuccessLink = 'On Succesful result';\r\nexport const SelectedExecutors = 'Selected Executions';\r\nexport const Agents = 'Agents';\r\nexport const SelectProperty = 'Select Property';\r\nexport const DisallowedEnums = 'Disallowed values';\r\nexport const Methods = 'Methods';\r\nexport const AllowedEnums = 'Allowed values';\r\nexport const ModelActions = 'Model Actions';\r\nexport const AddProperty = 'Add Property';\r\nexport const UICheckBox = 'UI Checkbox';\r\nexport const PermissionsDependencyAttribute = 'Permission Dependency Attribute';\r\nexport const GeneratedConstants = 'Generated Constants';\r\nexport const KeyField = 'Key fields, are used as constants through out the app.'\r\nexport const GeneratedMethodsConstants = 'Generated Methods Constants';\r\nexport const TargetModel = 'Target Model';\r\nexport const UseEnumeration = 'Use Enumeration';\r\nexport const Enumeration = 'Enumeration';\r\nexport const PermissionDependsOnProperties = 'Properties permissions depend on.';\r\nexport const CodeUser = 'Code User';\r\nexport const AddPropertyDescription = 'Add a property to the model';\r\nexport const AddAttribute = 'Add Attribute';\r\nexport const AddAttributeDescription = 'Add an attribute to the property';\r\nexport const UIName = 'UI Name';\r\nexport const UINameDescription = 'The text that will be visible to the client.';\r\nexport const UISingular = 'UI Singular';\r\nexport const MatchIds = 'Match Ids';\r\nexport const ConnectionExists = 'Connection Exists';\r\nexport const Unknown = 'Unknown';\r\nexport const PropertyValueType = 'Property value type';\r\nexport const PropertyModelType = 'Property model type';\r\nexport const AddReference = 'Add reference node';\r\nexport const FunctionSetup = 'Function Setup';\r\nexport const AgentOperator = 'Agent Operator';\r\nexport const Enumerable = 'Enumerable';\r\nexport const Value = 'Value';\r\nexport const AppMenu = 'Application Menu';\r\nexport const CodeName = 'Code Name';\r\nexport const ValueName = 'Value Name';\r\nexport const AgentName = 'Agent Name';\r\nexport const FileMenu = 'File Menu';\r\nexport const Code = 'Code';\r\nexport const MainNavigation = 'Main Navigation';\r\nexport const AddParameter = 'Add parameter';\r\nexport const AddParameterDescription = 'Parameters are the required things need for the function to execute successfully';\r\nexport const AddFunctionOutput = 'Add Function Output';\r\nexport const Menu = 'Menu';\r\nexport const AddFunctionOutputDescription = 'The output of the function';\r\nexport const IsAgent = 'Agent';\r\nexport const IsUser = 'User';\r\nexport const ParameterType = 'Parameter Type';\r\nexport const OwnedResources = 'Owned Resources';\r\nexport const AddModelItemFilter = 'Add model item filter';\r\nexport const AddModelItemFilterDescription = 'Add model item filter for get functions'\r\nexport const PermissionType = 'Permissions';\r\nexport const PermissionAttributes = 'Permission Attributes';\r\nexport const OwnedResourcesDescription = 'Check if permissions are for resources owned by source model.'\r\nexport const PermissionActions = 'Permission Actions';\r\nexport const Permissions = {\r\n    Create: 'Create',\r\n    Get: 'Read',\r\n    GetAll: 'Read All',\r\n    Getall: 'Read All',\r\n    Delete: 'Delete',\r\n    Getbyowner: 'Get by owner',\r\n    Update: 'Update'\r\n};\r\nexport const ChoiceTypes = 'Choice types';\r\nexport const ChoiceListActions = 'Choice Actions';\r\nexport const AddChoice = 'Add Choice';\r\nexport const AddChoiceDescription = 'Add choice type';\r\nexport const AddPermissionDescription = 'Permission nodes describe the ability of connected models on downstream models';\r\nexport const AddPermission = 'Add permission nodes'\r\nexport const AddChoiceItem = 'Add choice item';\r\nexport const AddChoiceItemDescription = 'Add a new choice item';\r\nexport const Select = 'Select';\r\nexport const Close = 'Close';\r\nexport const ValidationListActions = 'Validation Actions';\r\nexport const AddValidationItem = 'Add validation item';\r\nexport const AddValidationItemDescription = 'Add rule to validate user input.';\r\nexport const UseUIValidations = 'Use Validation';\r\nexport const AddValidationList = 'Add validation type';\r\nexport const AddValidationListDescription = 'Create a new shared validation list';\r\nexport const ValidationItemActions = 'Validation Item Actions';\r\nexport const Add = 'Add';\r\nexport const ValidationTypes = 'Validation Types';\r\nexport const ValidationType = 'Validation Type';\r\nexport const OptionListActions = 'Option Actions';\r\nexport const AddOptionItem = 'Add option';\r\nexport const AddOptionItemDescription = 'Add a new option item';\r\nexport const Name = 'Name';\r\nexport const OptionsType = 'Option Types';\r\nexport const UseCustomOption = 'Use custom option';\r\nexport const UseUIOptions = 'Use options';\r\nexport const AddOptionList = 'Create a new option list';\r\nexport const AddOptionListDescription = 'Add option list description';\r\nexport const DependentProperty = 'Depends on';\r\nexport const UseDependentProperty = 'Has dependent property';\r\nexport const UseUIExtensions = 'Use Extensions';\r\nexport const IncludedInList = 'Included in list';\r\nexport const IsEqualTo = 'Is equal';\r\nexport const UseEqualDescription = 'Use equivalancy';\r\nexport const UseEqual = 'Use equal';\r\nexport const IsEqualToDescription = 'If value is equal, it will pass';\r\nexport const ExcludedFromList = 'Excluded from list';\r\nexport const ExcludedFromListDescription = `The agent's id will have to be excluded from the list to be accepted`;\r\nexport const IncludedInListDescription = `The agent's id will have to be included in the list to be accepted.`\r\nexport const ExtensionTypes = 'Extension Types';\r\nexport const AddExtensionList = 'Create an extension list';\r\nexport const AddExtensionListDescription = 'Extension list customize dropdowns/lists.';\r\nexport const ExtensionListTypeActions = 'Extension List Actions';\r\nexport const AddExtensionNode = 'Add Extension';\r\nexport const ExtensionOptions = 'Extension(s)';\r\nexport const ExtensionDefinitionTypes = 'Extension Definition Types';\r\nexport const AddExtensionNodeDescription = 'Add extension node description';\r\nexport const ExtensionDefinition = 'Extension Definition';\r\n\r\nexport const Extensions = 'Extensions';\r\nexport const ExtensionDefinitionMenu = 'Define custom extensions';\r\nexport const ExtensionConfig = 'Extension Config';\r\nexport const DependsOn = 'Depends On';\r\nexport const UseId = 'Use Id';\r\nexport const Property = 'Property';\r\nexport const Condition = 'Condition';\r\nexport const DependsOnDescription = 'Defines if a the property associated with this extension is visually dependent on the value of another property on the same object.'\r\nexport const DependentPropertyDescription = 'The property that the current property will be associated.';\r\nexport const MatchingValue = 'Matching Value';\r\nexport const MatchingValueDescription = 'The value that the associated property will have to equal, to enable the current property';\r\n\r\nexport const PermissionImpl = 'Permission Implementation';\r\nexport const FunctionTypes = 'Function Types';\r\n\r\nexport const Get_ManyToMany_Agent_Value__IListChild = 'Get Many to Many => IList<Child>';\r\nexport const Create_ManyToMany_Agent_Value__IListChild = 'Create Many to Many => IList<Child>';\r\nexport const Update_ManyToMany_Agent_Value__IListChild = 'Update Many to Many => IList<Child>';\r\nexport const Delete_ManyToMany_Agent_Value__IListChild = 'Delete Many to Many => IList<Child>';\r\n\r\nexport const Create_Parent$Child_Agent_Value__IListChild = 'Create Parent/Child => IList<Child>';\r\nexport const Update_Parent$Child_Agent_Value__IListChild = 'Update Parent/Child => IList<Child>';\r\nexport const Get_Parent$Child_Agent_Value__IListChild = 'Get Parent/Child => IList<Child>';\r\n\r\nexport const Create_Object_Agent_Value__IListObject = 'Create Object by Agent => IList<Object>';\r\nexport const Update_Object_Agent_Value__IListObject = 'Update Object by Agent => IList<Object>';\r\nexport const Delete_Object_Agent_Value__IListObject = 'Delete Object by Agent => IList<Object>';\r\nexport const Get_Object_Agent_Value__IListObject = 'Get Object by Agent => IList<Object>';\r\nexport const Can_Execute_Agent_Parent_In_Valid_List = 'Can Execute Agent Parent In Valid List';\r\n\r\nexport const Functions = 'Functions';\r\nexport const AddFunction = 'Add function';\r\nexport const MaestroDetails = 'Maestro Details';\r\n\r\nexport const HttpMethod = 'Http Methods';\r\nexport const AddMaestros = 'Add Maestro';\r\nexport const HttpRoute = 'Relative Http Route';\r\nexport const Maestros = 'Maestros';\r\nexport const Save = 'Save';\r\nexport const Open = 'Open';\r\n\r\nexport const Validator = 'Validator';\r\nexport const PublishFiles = 'Publish Files';\r\nexport const Scaffold = 'Scaffold';\r\nexport const SetWorkingDirectory = 'Set Working Directory';\r\n\r\nexport const MindMap = 'Mind Map';\r\nexport const CodeView = 'Code View';\r\n\r\nexport const ParentTo = 'Parent to';\r\nexport const IsParent = 'Is parent';\r\nexport const UserModel = 'User Model';\r\n\r\nexport const ManyToManyNexus = 'Many to many';\r\nexport const ManyToManyExists = 'Many to many item must exists';\r\nexport const ManyToManyNexusModel = 'Many to Many model';\r\n\r\nexport const ManyToManyNexusDescription = 'This property will be a quick access for many to many relationships.';\r\n\r\n\r\nexport const HasLogicalChildren = 'Has logical children';\r\nexport const LogicalChildrenTypes = 'Logical children types';\r\nexport const LogicalNieceTypes = 'Logical niece types';\r\nexport const HasLogicalChildrenDescription = 'Children have references to this node, as some sort of logical parent.'\r\nexport const HasLogicalNieces = 'Has logical nieces';\r\nexport const HasLogicalNiecesDescription = 'Children have references to this node and others potentially as some sort of logical uncle/aunt. This is for many to many relationships.'\r\nexport const UseModelAsType = 'Use Model as Type';\r\nexport const CustomFunction = 'Custom Function';\r\nexport const CustomFunctionDescription = 'Function can be constructed in an internal graph.';\r\n\r\nexport const AddNewSection = 'Add New Section';\r\nexport const Sections = 'Sections';\r\nexport const AddNewSectionDescription = 'Adds a new section to the root graph.';\r\nexport const SectionEdit = 'Enter sub graph name';\r\nexport const DefaultGraphTitle = 'Red Quick Graph';\r\nexport const DefaultSubGraphTitle = 'Red Quick Sub Graph';\r\nexport const ClearPinned = 'Clear Pinned';\r\nexport const Filter = 'Filter';","import * as _ from '../utils/array';\r\n\r\nexport const NodeTypes = {\r\n    Concept: 'concept',\r\n    Model: 'model',\r\n    Property: 'model-property',\r\n    ModelFilter: 'model-filter',\r\n    ScreenContainer: 'screen-container',\r\n    Screen: 'screen',\r\n    ScreenCollection: 'screen-collection',\r\n    ScreenItem: 'screen-item',\r\n    Attribute: 'attribute-property',\r\n    ChoiceList: 'choice-list',\r\n    Permission: 'permission',\r\n    PermissionDependency: 'permission-dependency',\r\n    Condition: 'condition',\r\n    ModelItemFilter: \"model-item-filter\",\r\n    Enumeration: 'enumeration', //Basically a list of const string.\r\n    // ChoiceListItem: 'choice-list-item',\r\n    ValidationList: 'validation-list',\r\n    ValidationListItem: 'validation-list-item',\r\n    Validator: 'validator',\r\n    Executor: 'executor', // performs the final acts or data manipulation.\r\n    OptionList: 'option-list',\r\n    OptionListItem: 'option-list-item',\r\n    OptionCustom: 'option-custom',\r\n    ExtensionTypeList: 'extension-type-list',\r\n    ExtensionType: 'extension-type',\r\n    Function: 'function',\r\n    Method: 'method',//NGRX like effect\r\n    Action: 'action', //NGRX like action\r\n    Parameter: 'parameter',\r\n    FunctionOutput: 'function-output',\r\n    Controller: 'controller',\r\n    Maestro: 'maestro',\r\n    Services: 'services',\r\n    ReferenceNode: 'referenceNode', //Is a standing for a node that is at a higher level,\r\n    ClassNode: 'class-node'\r\n}\r\nexport const ExcludeDefaultNode = {\r\n    [NodeTypes.Condition]: true,\r\n    [NodeTypes.ModelItemFilter]: true\r\n};\r\nexport const GeneratedTypes = {\r\n    ChangeParameter: 'change-parameter',\r\n    ChangeResponse: 'change-response',\r\n    Constants: 'constants',\r\n    Permissions: 'permissions-generated',\r\n    Executors: 'executors',\r\n    ModelItemFilter: 'model-item-filter',\r\n    ModelReturn: 'model-return',\r\n    ModelGet: 'model-get',\r\n    ModelExceptions: 'model-exceptions',\r\n    StreamProcess: 'stream-process',\r\n    StreamProcessOrchestration: 'stream-process-orchestration',\r\n    ValidationRule: 'validation-rule'\r\n}\r\nexport const IdentityManagement = {\r\n    RedQuickViews: 'RedQuickViews'\r\n}\r\nexport const STANDARD_TEST_USING = [\r\n    'Microsoft.VisualStudio.TestTools.UnitTesting',\r\n    'RedQuick.Storage',\r\n    'RedQuickCore.Worker',\r\n    'Moq',\r\n    'Autofac',\r\n    'RedQuickCore.Worker.Hosts',\r\n    'RedQuick.Configuration',\r\n    'Microsoft.Extensions.Configuration.Json'\r\n]\r\nexport const STANDARD_CONTROLLER_USING = [\r\n    'RedQuick.Data',\r\n    'RedQuick.Attributes',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Validation',\r\n    'RedQuickCore.Validation.Rules',\r\n    'RedQuick.Interfaces.Arbiter',\r\n    'RedQuick.Configuration',\r\n    'RedQuick.Util',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Interfaces.Data',\r\n    'RedQuick.UI',\r\n    'System',\r\n    'System.Collections',\r\n    'System.Collections.Generic',\r\n    'System.Linq',\r\n    'System.Net',\r\n    'System.Net.Http',\r\n    'System.Threading.Tasks'\r\n]\r\nexport const GeneratedConstants = {\r\n    Methods: 'Methods',\r\n    StreamTypes: 'StreamType',\r\n    FunctionName: 'FunctionName'\r\n}\r\nexport const GeneratedTypesMatch = {\r\n    [GeneratedTypes.ChangeParameter]: NodeTypes.Model\r\n}\r\nexport const ColorStates = {\r\n    Error: 'Error'\r\n}\r\nexport const NotSelectableNodeTypes = {\r\n    [NodeTypes.ReferenceNode]: true,\r\n    [NodeTypes.PermissionDependency]: true,\r\n    [NodeTypes.Condition]: true\r\n}\r\nexport const NodeTypeColors = {\r\n    [ColorStates.Error]: '#FF0000',\r\n    [NodeTypes.Concept]: '#DD4B39',\r\n    [NodeTypes.ModelItemFilter]: '#4ECDC4',\r\n    [NodeTypes.Model]: '#713E5A',\r\n    [NodeTypes.Property]: '#484349',\r\n    [NodeTypes.Screen]: '#3A405A',\r\n    [NodeTypes.Attribute]: '#414770',\r\n    [NodeTypes.ChoiceList]: '#457B9D',\r\n    [NodeTypes.ValidationList]: '#A8DADC',\r\n    [NodeTypes.ValidationListItem]: '#EA526F',\r\n    [NodeTypes.OptionList]: '#2EC4B6',\r\n    [NodeTypes.OptionListItem]: '#856A5D',\r\n    [NodeTypes.OptionCustom]: '#403F4C',\r\n    [NodeTypes.ExtensionTypeList]: '#2C2B3C',\r\n    [NodeTypes.ExtensionType]: '#1B2432',\r\n    [NodeTypes.Method]: '#FE5F55',\r\n    [NodeTypes.Permission]: '#383F51',\r\n    [NodeTypes.Function]: '#553D36',\r\n    [NodeTypes.Parameter]: '#684A52',\r\n    [NodeTypes.FunctionOutput]: '#857885',\r\n    [NodeTypes.Services]: '#59FFA0',\r\n    [NodeTypes.ClassNode]: '#C3BAAA',\r\n    [NodeTypes.Maestro]: '#780116',\r\n    [NodeTypes.Condition]: '#CAFE48',\r\n    [NodeTypes.Validator]: '#151522',\r\n    [NodeTypes.ModelFilter]: '#312313',\r\n    [NodeTypes.Executor]: '#2176FF',\r\n    [NodeTypes.ReferenceNode]: '#F7B538',\r\n    [NodeTypes.ScreenCollection]: '#A9DBB8',\r\n    [NodeTypes.ScreenItem]: '#020887',\r\n    [NodeTypes.ScreenContainer]: '#60B2E5',\r\n\r\n}\r\n\r\nexport const FunctionGroups = {\r\n    External: 'external',\r\n    Internal: 'internal',\r\n    Core: 'core'\r\n}\r\nexport const GroupProperties = {\r\n    IsExternal: 'isExternal',\r\n    FunctionGroup: 'FunctionGroup'\r\n}\r\nexport const NameSpace = {\r\n    Model: '.Models',\r\n    StreamProcess: '.ActionStream',\r\n    Executors: '.Executors',\r\n    Tests: '.Tests',\r\n    Extensions: '.Extensions',\r\n    Controllers: '.Controllers',\r\n    Validations: '.Validations',\r\n    Constants: '.Constants',\r\n    Permissions: '.Permissions',\r\n    Parameters: '.Parameters',\r\n    Interface: '.Interface'\r\n}\r\n\r\nexport const NodeProperties = {\r\n    Enumeration: 'Enumeration',\r\n    ConditionType: 'ConditionType',\r\n    MatchReference: 'MatchReference',\r\n    MatchManyReferenceParameter: 'MatchManyReferenceParameter',\r\n    EnumerationReference: 'EnumerationReference',\r\n    AllowedExtensionValues: 'AllowedExtensionValues',\r\n    ServiceType: 'ServiceType',\r\n    DisallowedExtensionValues: 'DisallowedExtensionValues',\r\n    AllowedEnumValues: 'AllowedEnumerationValue',\r\n    DisallowedEnumValues: 'DisallowedEnumValues',\r\n    ServiceTypeSettings: 'ServiceTypeSettings',\r\n    ValidatorModel: 'ValidatorModel',\r\n    ExecutorAgent: 'ExecutorAgent',\r\n    ExecutorFunction: 'ExecutorFunction',\r\n    ExecutorModel: 'ExecutorModel',\r\n    ExecutorFunctionType: 'ExecutorFunctionType',\r\n    ValidatorFunction: 'ValidatorFunction',\r\n    UseEnumeration: 'UseEnumeration',\r\n    NameSpace: 'namespace',\r\n    FilterModel: 'filtermodel',\r\n    FilterAgent: 'filteragent',\r\n    Validator: 'Validator',\r\n    ModelItemFilter: 'ModelItemFilter',\r\n    Executor: 'Executor',\r\n    ValidatorAgent: 'ValidatorAgent',\r\n    Collapsed: 'collapsed',\r\n    UseExtension: 'usextension',\r\n    IncludedInList: 'includedInList',\r\n    Pinned: 'Pinned',\r\n    ExcludedFromList: 'excludedInList',\r\n    UseEqual: \"UseEqual\",\r\n    IsEqualTo: 'IsEqualTo',\r\n    CodeUser: 'codeUser',\r\n    HttpRoute: 'HttpRoute',\r\n    HttpMethod: 'HttpMethod',\r\n    IsAgent: 'isAgent',\r\n    IsParent: 'isParent', //This is a program setting. Just for allowing us to hide and show the model picker.\r\n    IsUser: 'IsUser', //User is the object directly associated with a IdentityProvider.\r\n    UIUser: 'uiUser',\r\n    IsSharedResource: 'isSharedResource', // Not sure if this helps anything.\r\n    UIPermissions: 'uiPermissions',\r\n    IsOwned: 'isOwned',\r\n    UIName: 'uiName', // The name used in the ui.\r\n\r\n    UIText: 'text',\r\n\r\n    UISingular: 'uiSingular',\r\n    UIChoice: 'uiChoice',\r\n    UIChoiceType: 'uiChoiceType',\r\n    UIChoiceNode: 'uiChoiceNode', //A node that the \"parameter\" node points to.\r\n    PermissionRequester: 'permissions-requester',// The agent that is requesting permission to do something\r\n    PermissionManyToMany: 'permissions-many-to-many',\r\n    MatchIds: 'matchs-ids',\r\n    ConnectionExists: \"connection-exists\",\r\n    PermissionTarget: 'permissions-target',\r\n    // Property has a dependent property\r\n    UIDependsOn: 'uiDependsOn',\r\n    UseUIDependsOn: 'UseuiDependsOn',\r\n    UseUIOptions: 'UseuiOptions',\r\n    UIOptionType: 'uiOptionType',\r\n\r\n    //Use a custom option\r\n    UseCustomUIOption: 'useCustomUIOption',\r\n    UIOptionTypeCustom: 'uiOptionTypeCustom',\r\n    //An option\r\n    UIOption: 'uiOption',\r\n    //Use Extensions\r\n    UseUIExtensionList: 'UseuiExtensionList',\r\n    UIExtensionList: 'uiExtensionList',\r\n    UIExtension: 'uiExtension',\r\n    UIExtensionDefinition: 'uiExtensionDefinition',\r\n    MethodProps: 'methodProperties',\r\n    FilterPropreties: 'filterproperties',\r\n    UIValidationType: 'uiValidationType',\r\n    UseUIValidations: 'UseuiValidations',\r\n    NODEType: 'nodeType',\r\n    ReferenceType: 'referenceType', //Reference nodes will have this type.\r\n\r\n    UIAttributeType: 'uiAttributeType',\r\n    UseModelAsType: 'useModelAsType',\r\n\r\n    HasLogicalChildren: 'hasLogicalChildren',\r\n    LogicalChildrenTypes: 'logicalChildrenTypes',\r\n    HasLogicalNieces: \"hasLogicalNieces\",\r\n    LogicalNieceTypes: 'logicalNieceTypes',\r\n\r\n    ManyToManyNexus: 'manyToManyNexux',\r\n    ManyToManyNexusType: 'manyToManyNexusType',\r\n    ManyToManyNexusTypes: 'manyToManyNexusTypes',\r\n\r\n    MethodType: \"MethodType\",\r\n    UIModelType: 'uiModelType',\r\n\r\n    UseScopeGraph: 'UseScopeGraph',\r\n    ScopeGraph: 'scopedGraph',\r\n\r\n    //The name used for code.\r\n    Groups: 'groups',\r\n    GroupParent: 'groupParent',\r\n    CodeName: 'codeName',\r\n    ValueName: 'valueName',//The name of the instance variable to be used \r\n    AgentName: 'agentName',//The name of the instance variable to be used \r\n    CodePropertyType: 'codeProperty',\r\n    FunctionType: 'functionType',\r\n    PermissionImpl: 'permission-implementation',\r\n    ClassConstructionInformation: 'ClassConstructionInformation'\r\n}\r\n\r\nfunction codeTypeWord(x) {\r\n    if (typeof x === 'string') {\r\n        return x.split('').filter(y => 'abcdefghijklmnopqrstuvwxyzzz1234567890_'.indexOf(y.toLowerCase()) !== -1).join('');\r\n    }\r\n    return x;\r\n}\r\n\r\nexport const DIRTY_PROP_EXT = '$ _dirty_ $';\r\nexport const NodePropertiesDirtyChain = {\r\n    [NodeProperties.ServiceType]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIText,\r\n        chainFunc: codeTypeWord\r\n    }],\r\n    [NodeProperties.UIText]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord,\r\n    }, {\r\n        chainProp: NodeProperties.HttpRoute,\r\n        chainFunc: (x) => {\r\n            if (typeof x === 'string') {\r\n                return x.split(' ').join('/').toLowerCase();\r\n            }\r\n            return x;\r\n        }\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: (x) => {\r\n            return x;\r\n        }\r\n    }]\r\n}\r\nconst letters = 'abcdefghijklmnopqrstuvwxyz';\r\nconst alphanumerics = letters + '0123456789';\r\nconst allowedchars = alphanumerics + ' ';\r\nexport function MakeConstant(val) {\r\n    if (val) {\r\n        if (!isNaN(val)) {\r\n            return `\"${val}\"`;\r\n        }\r\n        val = `${val}`;\r\n        val = val.split('').filter(x => allowedchars.indexOf(x.toLowerCase()) !== -1).join('');\r\n        if (letters.indexOf(val[0].toLowerCase()) === -1) {\r\n            val = '_' + val;\r\n        }\r\n        return val.split(' ').join('_').toUpperCase();\r\n    }\r\n    throw 'needs to have value';\r\n}\r\n\r\nexport function ConstantsDeclaration(options) {\r\n    var { name, value } = options;\r\n\r\n    return `public const string ${name} = ${value};`;\r\n}\r\n\r\nexport function CreateStringList(options) {\r\n    var { name, list, instance } = options;\r\n    return `${instance ? '' : 'public'} IList<string> ${name} = new List<string> {\r\n        ${list}\r\n    }`\r\n}\r\nexport const LinkEvents = {\r\n    Remove: 'remove'\r\n}\r\nexport const LinkType = {\r\n    Choice: 'choice',\r\n\r\n    Executor: 'executor',\r\n    ExecutorItem: 'executor-item',\r\n    ExecutorProperty: 'executor-property',\r\n    ExecutorModel: 'executor-model',\r\n\r\n    Condition: 'condtion',\r\n    ModelItemFilter: 'model-item-filter',\r\n\r\n    Validation: 'validation',\r\n    ValidationItem: 'validation-item',\r\n    Validator: 'validator',\r\n    ValidatorProperty: 'validator-property',\r\n    ValidatorModel: 'validator-model',\r\n\r\n    ExecutorFunction: 'executor-function',\r\n    ValidatorFunction: 'validator-function',\r\n    ValidatorModelItem: 'validator-model-item',\r\n    ValidatorAgent: 'validator-agent',\r\n    Option: 'option',\r\n    OptionItem: 'option-item',\r\n    OptionCustom: 'option-custom',\r\n    DependsOn: 'depends-on',\r\n    ExtensionList: 'extension-list',\r\n    Extension: 'extension',\r\n    Enumeration: 'enumeration',\r\n    EnumerationReference: 'enumeration-reference',\r\n    LogicalChildren: 'logical-children',\r\n    LogicalNieces: 'logical-nieces',\r\n    ManyToManyLink: \"ManyToManyLink\",\r\n    Permission: 'permission',\r\n    AppliedPermissionLink: 'applied-permission',\r\n    RequestorPermissionLink: 'request-permission-link',//the agent/node that is requesting permissions \r\n    ManyToManyPermissionLink: 'many-to-many-permission-link',\r\n    ExtensionDependencyLink: 'extension-dependency-link',\r\n    FunctionOperator: 'function-operator',\r\n    FunctionLink: 'function-link',\r\n    OnScreenLink: 'screen-link',\r\n    OnSuccessLink: 'on-success-link',\r\n    OnFailureLink: 'on-failure-link',\r\n    OnAction: 'on-action',\r\n    ChildLink: 'child-link',//describing a link between screens\r\n    OnItemSelection: 'on-item-selection',\r\n    FunctionVariable: 'function-variable',\r\n    PropertyLink: 'property-link',\r\n    ParentLink: 'parent-link',\r\n    FunctionConstraintLink: 'function-constraint-link',\r\n    ErrorLink: 'error-link',\r\n    RequiredClassLink: 'required-class-link',\r\n    ModelTypeLink: 'model-type-link',\r\n    AgentTypeLink: 'agent-type-link',\r\n    UserLink: 'user-link', // A link between a user and a personal ([Customer, Manager, Hero])\r\n    MaestroLink: 'maestro-link',\r\n    AttributeLink: 'attribute-link',\r\n    PermissionFunction: 'permission-function',\r\n    Exist: 'exist', //A node that points with this link type, requires that the node exists, if it doesn't the link and the other node should dissapear.\r\n    PermissionPropertyDependency: 'permission-property-dependency', //There is a link between a permision and a property.\r\n    PermissionDependencyProperty: 'permission-dependency-property', //There is a link bewteen a property and a dependency\r\n    PermissionDependencyPropertyManyToManyLink: 'permission-dependency-property-many-to-many', //There is a link between a property and a dependency in a many to many situation.\r\n    PermissionPropertyDependencyManyToManyLink: 'permission-property-dependency-many-to-many'//There is a link between a permision and a property in a many to many situnation.\r\n}\r\nconst VIKTIG_LINKS = 5;\r\nexport const LinkStyles = {\r\n    [LinkType.FunctionLink]: {\r\n        type: LinkType.FunctionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.ErrorLink]: {\r\n        type: LinkType.ErrorLink,\r\n        stroke: NodeTypeColors[ColorStates.Error]\r\n    },\r\n    [LinkType.OnScreenLink]: {\r\n        type: LinkType.OnScreenLink,\r\n        stroke: '#E1CE7A',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnSuccessLink]: {\r\n        type: LinkType.OnSuccessLink,\r\n        stroke: '#A23B72',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnFailureLink]: {\r\n        type: LinkType.OnFailureLink,\r\n        stroke: '#3B1F2B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnItemSelection]: {\r\n        type: LinkType.OnItemSelection,\r\n        stroke: '#2E86AB',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnAction]: {\r\n        type: LinkType.OnAction,\r\n        stroke: '#A3320B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.ChildLink]: {\r\n        type: LinkType.ChildLink,\r\n        stroke: '#47A025',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.FunctionConstraintLink]: {\r\n        type: LinkType.FunctionConstraintLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.FunctionOperator]: {\r\n        type: LinkType.FunctionOperator,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.PropertyLink]: {\r\n        type: LinkType.PropertyLink,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.Choice]: {\r\n        type: LinkType.Choice,\r\n        stroke: NodeTypeColors[NodeTypes.ChoiceList]\r\n    },\r\n    [LinkType.Permission]: {\r\n        type: LinkType.Permission,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.AppliedPermissionLink]: {\r\n        type: LinkType.AppliedPermissionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.Validation]: {\r\n        type: LinkType.Validation,\r\n        stroke: NodeTypeColors[NodeTypes.ValidationList]\r\n    },\r\n    [LinkType.Validator]: {\r\n        type: LinkType.Validator,\r\n        stroke: NodeTypeColors[NodeTypes.Validator]\r\n    },\r\n    [LinkType.Option]: {\r\n        type: LinkType.Option,\r\n        stroke: NodeTypeColors[NodeTypes.OptionList]\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    [LinkType.OptionCustom]: {\r\n        type: LinkType.OptionCustom,\r\n        stroke: NodeTypeColors[NodeTypes.OptionCustom]\r\n    },\r\n    [LinkType.DependsOn]: {\r\n        type: LinkType.DependsOn,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.ExtensionList]: {\r\n        type: LinkType.ExtensionList,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    },\r\n    [LinkType.Extension]: {\r\n        type: LinkType.Extension,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionType]\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    [LinkType.ExtensionDependencyLink]: {\r\n        type: LinkType.ExtensionDependencyLink,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    }\r\n}\r\n\r\nexport const LinkPropertyKeys = {\r\n    TYPE: 'type',\r\n    CONSTRAINTS: 'constraints',\r\n    VALID_CONSTRAINTS: 'valid-constraints',\r\n    FUNCTION_ID: 'function-id'\r\n}\r\n\r\nexport const LinkProperties = {\r\n    EnumerationLink: {\r\n        type: LinkType.Enumeration\r\n    },\r\n    ModelItemFilter: {\r\n        type: LinkType.ModelItemFilter\r\n    },\r\n    EnumerationReferenceLink: {\r\n        type: LinkType.EnumerationReference\r\n    },\r\n    ConditionLink: {\r\n        type: LinkType.Condition\r\n    },\r\n    LogicalChildren: {\r\n        type: LinkType.LogicalChildren\r\n    },\r\n    LogicalNieces: {\r\n        type: LinkType.LogicalNieces\r\n    },\r\n    ManyToManyLink: {\r\n        type: LinkType.ManyToManyLink\r\n    },\r\n    PermissionFunctionLink: {\r\n        type: LinkType.PermissionFunction\r\n    },\r\n    FunctionVariable: {\r\n        type: LinkType.FunctionVariable,\r\n        [LinkPropertyKeys.FUNCTION_ID]: null\r\n    },\r\n    PermissionDependencyPropertyLink: {\r\n        type: LinkType.PermissionDependencyProperty\r\n    },\r\n    PermissionDependencyPropertyManyToManyLink: {\r\n        type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n    },\r\n    PermissionPropertyDependencyLink: {\r\n        type: LinkType.PermissionPropertyDependency\r\n    },\r\n    PermissionPropertyDependencyManyToManyLink: {\r\n        type: LinkType.PermissionPropertyDependencyManyToManyLink\r\n    },\r\n    AttributeLink: {\r\n        type: LinkType.AttributeLink\r\n    },\r\n    ExistLink: {\r\n        exist: LinkType.Exist\r\n    },\r\n    ModelTypeLink: {\r\n        type: LinkType.ModelTypeLink\r\n    },\r\n    AgentTypeLink: {\r\n        type: LinkType.AgentTypeLink\r\n    },\r\n    RequiredClassLink: {\r\n        type: LinkType.RequiredClassLink\r\n    },\r\n    OnScreenLink: {\r\n        type: LinkType.OnScreenLink\r\n    },\r\n    OnSuccessLink: {\r\n        type: LinkType.OnSuccessLink\r\n    },\r\n    OnFailureLink: {\r\n        type: LinkType.OnFailureLink\r\n    },\r\n    OnItemSelection: {\r\n        type: LinkType.OnItemSelection\r\n    },\r\n    OnAction: {\r\n        type: LinkType.OnAction\r\n    },\r\n    ChildLink: {\r\n        type: LinkType.ChildLink\r\n    },\r\n    FunctionLink: {\r\n        type: LinkType.FunctionLink\r\n    },\r\n    FunctionOperator: {\r\n        type: LinkType.FunctionOperator\r\n    },\r\n    FunctionConstraintLink: {\r\n        type: LinkType.FunctionConstraintLink\r\n    },\r\n    ChoiceLink: {\r\n        type: LinkType.Choice\r\n    },\r\n    PermissionLink: {\r\n        type: LinkType.Permission\r\n    },\r\n    AppliedPermissionLink: {\r\n        type: LinkType.AppliedPermissionLink\r\n    },\r\n    RequestorPermissionLink: {\r\n        type: LinkType.RequestorPermissionLink\r\n    },\r\n    ManyToManyPermissionLink: {\r\n        type: LinkType.ManyToManyPermissionLink\r\n    },\r\n    ValdationLink: {\r\n        type: LinkType.Validation\r\n    },\r\n    ValidationLinkItem: {\r\n        type: LinkType.ValidationItem\r\n    },\r\n    ValidatorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ValidatorModelLink: {\r\n        type: LinkType.ValidatorModel\r\n    },\r\n    ValidatorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ValidatorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ExecutorLink: {\r\n        type: LinkType.Validation\r\n    },\r\n    ExecutorLinkItem: {\r\n        type: LinkType.ValidationItem\r\n    },\r\n    ExecutorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ExecutorModelLink: {\r\n        type: LinkType.ExecutorModel\r\n    },\r\n    ExecutorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ExecutorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ValidatorFunctionLink: {\r\n        type: LinkType.ValidatorFunction\r\n    },\r\n    ExecutorFunctionLink: {\r\n        type: LinkType.ExecutorFunction\r\n    },\r\n    OptionLink: {\r\n        type: LinkType.Option\r\n    },\r\n    OptionItemLink: {\r\n        type: LinkType.OptionItem\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    OptionCustomLink: {\r\n        type: LinkType.OptionCustom\r\n    },\r\n    DependsOnLink: {\r\n        type: LinkType.DependsOn\r\n    },\r\n    ExtensionListLink: {\r\n        type: LinkType.ExtensionList\r\n    },\r\n    ExtensionLink: {\r\n        type: LinkType.Extension\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    ExtensionDependencyLink: {\r\n        type: LinkType.ExtensionDependencyLink\r\n    },\r\n    PropertyLink: {\r\n        type: LinkType.PropertyLink\r\n    },\r\n    ParentLink: {\r\n        type: LinkType.ParentLink\r\n    },\r\n    UserLink: {\r\n        type: LinkType.UserLink\r\n    },\r\n    MaestroLink: {\r\n        type: LinkType.MaestroLink\r\n    }\r\n}\r\nObject.keys(LinkProperties).map(propTypes => {\r\n    if (LinkProperties[propTypes] && LinkProperties[propTypes].type) {\r\n        LinkProperties[propTypes][LinkProperties[propTypes].type] = {};\r\n    }\r\n})\r\nexport const Methods = {\r\n    Create: 'Create',\r\n    Get: 'Get',\r\n    GetAll: 'GetAll',\r\n    Update: 'Update',\r\n    Delete: 'Delete'\r\n}\r\nexport const ValidationVector = {\r\n    Content: 'content'\r\n}\r\nexport const ValidationRules = {\r\n    CVV: \"cvv\",\r\n    AlphaNumericLike: \"alphanumericlike\",\r\n    AlphaNumericPuncLike: 'alphaNumericpunclike',\r\n    AlphaOnly: \"alphaonly\",\r\n    NumericOnly: 'numericonly',\r\n    Numeric: 'numeric',\r\n    Empty: 'empty',\r\n    AlphaOnlyWithSpaces: \"alphaonlywithspaces\",\r\n    NotEmpty: \"notempty\",\r\n    UrlEmpty: \"url_empty\",\r\n    IsTrue: 'is_true',\r\n    IsFalse: 'is_false',\r\n    GreaterThan: 'greater_than',\r\n    GreaterThanOrEqualTo: 'greater_than_equal_to',\r\n    LessThan: 'less_than',\r\n    LessThanOrEqualTo: 'less_than_equal_to',\r\n    EqualTo: 'equal_to',\r\n    Any: 'any',\r\n    Url: \"url\",\r\n    EmailEmpty: \"email_empty\",\r\n    Credit: \"credit\",\r\n    Email: \"email\",\r\n    ExpirationMonth: \"expirationMonth\",\r\n    BeforeNow: \"beforenow\",\r\n    Year: \"year\",\r\n    Debit: \"debit\",\r\n    ExpirationYear: \"expirationYear\",\r\n    PastDate: \"pastdate\",\r\n    ZipEmpty: \"zipempty\",\r\n    Zip: \"zip\",\r\n    SocialSecurity: \"socialsecurity\",\r\n    ListOfGuids: 'listofguids',\r\n    OneOf: 'one-of'\r\n}\r\n\r\n\r\nexport const ExtensionDefinitionTypes = {\r\n    DictionaryStringString: 'DictionaryStringString',\r\n    DictionaryStringDictionary: 'DictionaryStringDictionary',\r\n}\r\nexport const CollectionTypes = {\r\n    DebitCard: 'DebitCard',\r\n    Email: 'Email',\r\n    Telephone: 'Telephone'\r\n}\r\n\r\nexport const OptionsTypes = {\r\n    CHOICELIST: 'CHOICELIST',\r\n    CAPITALIZE_FIRST_LETTER: 'CAPITALIZE_FIRST_LETTER'\r\n}\r\nexport const NodePropertyTypes = {\r\n    STRING: 'STRING',\r\n    LISTOFSTRINGS: 'LISTOFSTRINGS',\r\n    DATETIME: 'DATETIME',\r\n    INT: 'INT',\r\n    FLOAT: 'FLOAT',\r\n    DOUBLE: 'DOUBLE',\r\n    BOOLEAN: 'BOOLEAN',\r\n    EMAIL: 'EMAIL',\r\n    PHONENUMBER: 'PHONENUMBER'\r\n}\r\nexport const NEW_LINE = `\r\n`;\r\nexport const ProgrammingLanguages = {\r\n    CSHARP: 'csharp'\r\n}\r\nexport const NodePropertyTypesByLanguage = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.DATETIME]: 'DateTime',\r\n        [NodePropertyTypes.STRING]: 'string',\r\n        [NodePropertyTypes.LISTOFSTRINGS]: 'IList<string>',\r\n        [NodePropertyTypes.INT]: 'int',\r\n        [NodePropertyTypes.FLOAT]: 'float',\r\n        [NodePropertyTypes.DOUBLE]: 'double',\r\n        [NodePropertyTypes.BOOLEAN]: 'bool',\r\n        [NodePropertyTypes.EMAIL]: 'Email',\r\n        [NodePropertyTypes.PHONENUMBER]: 'PhoneNumber'\r\n    }\r\n}\r\nexport const RED_QUICK_DATA = 'RedQuick.Data';\r\nexport const RED_QUICK_ATTRIBUTES = 'RedQuick.Attributes';\r\nexport const Usings = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.EMAIL]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES],\r\n        [NodePropertyTypes.PHONENUMBER]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES]\r\n    }\r\n}\r\nexport const NodeAttributePropertyTypes = {\r\n\r\n    ROUTINGNUMBER: \"ROUTINGNUMBER\",\r\n    CURRENCY: \"CURRENCY\",\r\n    CARMAKE: \"CARMAKE\",\r\n    SOCIALSECURITY: \"SOCIALSECURITY\",\r\n    EMAIL: \"EMAIL\",\r\n    PHONE: \"PHONE\",\r\n    CARMODEL: \"CARMODEL\",\r\n    CARYEAR: \"CARYEAR\",\r\n    VIN: \"VIN\",\r\n    LONGSTRING: \"LONGSTRING\",\r\n    CREDITCARD: \"CREDITCARD\",\r\n    LENGTH: \"LENGTH\",\r\n    INCH: \"INCH\",\r\n    DIMENSION: \"DIMENSION\",\r\n    MONEY: \"MONEY\",\r\n    COUNTRY: \"COUNTRY\",\r\n    DEBIT: \"DEBIT\",\r\n    MONTH: \"MONTH\",\r\n    STATE: \"STATE\",\r\n    CHOICE: \"CHOICE\",\r\n    NUMBER: \"NUMBER\",\r\n    SLIDER: \"SLIDER\",\r\n    DATE: \"DATE\",\r\n    TIME: \"TIME\",\r\n    BOOLEAN: \"BOOLEAN\",\r\n    ACCOUNTNUMBER: \"ACCOUNTNUMBER\",\r\n    ADDRESS: \"ADDRESS\",\r\n    COLLECTION: \"COLLECTION\",\r\n    OBJECT: \"OBJECT\",\r\n    RADIO: \"RADIO\",\r\n    CHECKLIST: \"CHECKLIST\",\r\n    STRING: \"STRING\",\r\n    GEOLOCATION: \"GEOLOCATION\",\r\n    YEAR: \"YEAR\"\r\n\r\n}\r\n\r\nconst COMMON_DATETIME_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.DATETIME,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nconst COMMON_STRING_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.STRING,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nexport function GetValidationsFor(type) {\r\n    let result = {};\r\n    Object.keys(ValidationCases).filter(x => {\r\n        return ValidationCases[x].types.some(v => v === type);\r\n    }).map(t => {\r\n        result[t] = ValidationCases[t];\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function GetMoreCompatibles(a, vector, result = []) {\r\n    var parents = GetValidationParents(a, vector).map(t => t.id);\r\n    parents = parents.filter(t => result.indexOf(t) === -1);\r\n    result = [a, ...result, ...parents].unique();\r\n    parents.map(t => {\r\n        if (result.indexOf(t) !== -1) {\r\n            result = GetMoreCompatibles(t, vector, result);\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function AreCompatible(a, b, vector = ValidationVector.Content) {\r\n    var t = GetMoreCompatibles(a, vector);\r\n    var v = GetMoreCompatibles(b, vector);\r\n\r\n    return !!t.intersection(v).length;\r\n}\r\nexport function SortValidation(a, b, vector) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    var t = GetMoreCompatibles(a, vector);\r\n    var v = GetMoreCompatibles(b, vector);\r\n    var bIsIncluded = t.some(_t => _t === b);\r\n    var aIsIncluded = v.some(_v => _v === a);\r\n    if (bIsIncluded && aIsIncluded) {\r\n        return 0;\r\n    }\r\n    else if (bIsIncluded) {\r\n        return -1;\r\n    }\r\n    else if (aIsIncluded) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport function GetValidationParents(type, vector) {\r\n    var vc = ValidationCases[type];\r\n    if (vc) {\r\n        var vects = vc.vectors[vector];\r\n        if (Array.isArray(vects)) {\r\n            return vects.map(t => ValidationCases[t]).filter(x => x);\r\n        }\r\n        else {\r\n            return Object.keys(vects).map(t => {\r\n                return ValidationCases[t]\r\n            }).filter(x => x);\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexport function GetValidationTypes(type) {\r\n    var results = [];\r\n\r\n    Object.values(ValidationCases).map(t => {\r\n        if (t && t.types && t.types.indexOf(type) !== -1)\r\n            results.push(t);\r\n    })\r\n\r\n    return results;\r\n}\r\n\r\nexport const ValidationCases = {\r\n    [ValidationRules.ListOfGuids]: {\r\n        types: [NodePropertyTypes.LISTOFSTRINGS],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `new List<string> { \"${_.uuidv4()}\"}`\r\n            },\r\n            'long': function () {\r\n                return `new List<string> { \"${_.uuidv4()}asdf\" }`\r\n            },\r\n            '$empty': function () {\r\n                return `new List<string>()`\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 9, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            }\r\n        },\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.ZipEmpty],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 5, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        types: [NodePropertyTypes.DATETIME],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n        }\r\n    },\r\n\r\n    [ValidationRules.BeforeNow]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asdf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@asdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asadf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 23, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 16, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.Url]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.UrlEmpty]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Empty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            'false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NotEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NumericOnly]: {\r\n        vectors: {\r\n            content: [ValidationRules.Numeric]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Numeric]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234.34\"`\r\n            },\r\n            'false': function () {\r\n                return `\"12QW\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    //Cant be empty, that would  be the only difference between it and Any.\r\n    [ValidationRules.AlphaNumericPuncLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21df.!@#$ #$%^^&*^&*()aom\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21dfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaOnlyWithSpaces]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httasdfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas dfaom\"`\r\n            },\r\n            '$false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.IsTrue]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return 'true';\r\n            },\r\n            'false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.IsFalse]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            'true': function () {\r\n                return 'true';\r\n            },\r\n            '$false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThanOrEqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' >= '\r\n            },\r\n            'notgreater': function () {\r\n                return ' >= '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' > '\r\n            },\r\n            'notgreater': function () {\r\n                return ' > '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.LessThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$less': function () {\r\n                return ' < '\r\n            },\r\n            'notless': function () {\r\n                return ' < '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.EqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$equal_to': function () {\r\n                return ' = '\r\n            },\r\n            'not_equal': function () {\r\n                return ' = '\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.keys(ValidationCases).map(t => {\r\n    ValidationCases[t].id = t;\r\n})\r\nexport const ExecutorRules = {\r\n    ModelReference: 'model-reference',\r\n    Copy: 'copy',\r\n    AgentReference: 'agent-reference',\r\n}\r\nexport const ExecutorUI = {\r\n    [ExecutorRules.ModelReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ModelReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.AgentReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AgentReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.Copy]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'copy'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ExecutorUI).map(t => {\r\n    ExecutorUI[t].type = t;\r\n})\r\nexport const FilterRules = {\r\n    EqualsTrue: 'equals-true',\r\n    EqualsFalse: 'equals-false'\r\n}\r\nexport const FilterUI = {\r\n    [FilterRules.EqualsTrue]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsTrue'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsFalse]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsFalse'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    }\r\n}\r\nObject.keys(FilterUI).map(t => {\r\n    FilterUI[t].type = t;\r\n})\r\nexport const ValidationUI = {\r\n    [ValidationRules.OneOf]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'OneOfAttribute'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Enumeration,\r\n            reference: {\r\n                types: [NodeTypes.Enumeration, NodeTypes.ExtensionType]\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'SocialSecurityAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'PastDateAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.BeforeNow]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'BeforeNowAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'CreditCardAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Url]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaNumericLikeAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaOnlyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'NotEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ValidationUI).map(t => {\r\n    ValidationUI[t].type = t;\r\n})","import * as Titles from '../components/titles';\r\nimport fs from 'fs';\r\nimport { Methods, NodeTypes, NodeProperties } from './nodetypes';\r\n\r\nexport const FunctionTypes = {\r\n    //Functions with List<Child> result\r\n    Create_ManyToMany_Agent_Value__IListChild: 'Create/ManyToMany/Agent/Value => IList<Child>',\r\n    Update_ManyToMany_Agent_Value__IListChild: 'Update/ManyToMany/Agent/Value => IList<Child>',\r\n    Get_ManyToMany_Agent_Value__IListChild: 'Get/ManyToMany/Agent/Value => IList<Child>',\r\n    Delete_ManyToMany_Agent_Value__IListChild: 'Delete/ManyToMany/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Child> result\r\n    Create_Parent$Child_Agent_Value__IListChild: 'Create/Parent-Child/Agent/Value => IList<Child>',\r\n    Update_Parent$Child_Agent_Value__IListChild: 'Update/Parent-Child/Agent/Value => IList<Child>',\r\n    Get_Parent$Child_Agent_Value__IListChild: 'Get/Parent-Child/Agent/Value => IList<Child>',\r\n    Delete_Parent$Child_Agent_Value__IListChild: 'Delete/Parent-Child/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Object> result\r\n    Create_Object_Agent_Value__IListObject: 'Create/Object/Agent/Value => IList<Object>',\r\n    Update_Object_Agent_Value__IListObject: 'Update/Object/Agent/Value => IList<Object>',\r\n    Get_Object_Agent_Value__IListObject: 'Get/Object/Agent/Value => IList<Object>',\r\n    Delete_Object_Agent_Value__IListObject: 'Delete/Object/Agent/Value => IList<Object>',\r\n\r\n    //Functions with Object result\r\n    Create_Parent_Child_Agent_Value__Child: 'Create/Parent-Child/Agent/Value => Child',\r\n    Update_Parent_Child_Agent_Value__Child: 'Update/Parent-Child/Agent/Value => Child',\r\n    Get_Parent_Child_Agent_Value__Child: 'Get/Parent-Child/Agent/Value => Child',\r\n    Delete_Parent_Child_Agent_Value__Child: 'Delete/Parent-Child/Agent/Value => Child',\r\n\r\n    //Functions width Object result.\r\n    Create_Object_Agent_Value__Object: 'Create/Object/Agent/Value => Object',\r\n    Update_Object_Agent_Value__Object: 'Update/Object/Agent/Value => Object',\r\n    Get_Object_Agent_Value__Object: 'Get/Object/Agent/Value => Object',\r\n    Delete_Object_Agent_Value__Object: 'Delete/Object/Agent/Value => Object',\r\n\r\n    //Function with bool result\r\n    Can_Execute_Agent_Parent_In_Valid_List: 'Can_Execute_Agent_Parent_In_Valid_List'\r\n    // IAgent_and_Permission_determing_the_permission_based_on_a_PROPERTY: 'Given an Agent and Permission, determing the permission based on a PROPERTY'\r\n}\r\n\r\n\r\nexport const FunctionTemplateKeys = {\r\n    Model: 'model',\r\n    Bool: 'bool',\r\n    CanExecute: 'can-execute',\r\n    ModelDeterminingProperty: 'model-determining-property',\r\n    AgentDeterminingProperty: 'agent-determining-property',\r\n    Property: 'property',\r\n    Parent: 'parent',\r\n    AgentInstance: 'agent_instance',\r\n    Agent: 'agent',\r\n    AgentType: 'agent_type',\r\n    User: 'user',\r\n    ManyToManyModel: 'many_to_many',\r\n    Permission: 'permission',\r\n    UserInstance: 'user_instance',\r\n    ModelFilter: 'model_filter',\r\n    Value: 'value'\r\n}\r\n\r\nexport const FunctionConstraintKeys = {\r\n    IsAgent: 'isAgent',\r\n    IsUser: 'isUser',\r\n    IsTypeOf: 'isTypeOf',\r\n    IsParent: 'isParent',\r\n    IsChild: 'isChild',\r\n    IsList: 'isList',\r\n    IsSingleLink: '$single$link',\r\n    IsModel: 'isModel',\r\n    IsFunction: 'isFunction',\r\n    IsProperty: 'isProperty',\r\n    IsEnumerable: 'isEnumerable',\r\n    IsInstanceVariable: 'isInstanceVariable',\r\n    IsInputVariable: 'isInputVariable'\r\n}\r\n\r\nconst COMMON_CONSTRAINTS = {\r\n    [FunctionTemplateKeys.CanExecute]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsFunction]: true,\r\n        key: FunctionTemplateKeys.CanExecute\r\n    },\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Parent,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsProperty]: true,\r\n        key: FunctionTemplateKeys.ModelDeterminingProperty\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        [FunctionConstraintKeys.IsParent]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Parent\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\n//Deprecated 6.12.2019\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        key: FunctionTemplateKeys.Parent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Property]: {\r\n        key: FunctionTemplateKeys.Property,\r\n        nodeTypes: [NodeTypes.Property]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        key: FunctionTemplateKeys.Parent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_OUTPUT = {\r\n    LIST: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsList]: true\r\n    },\r\n    BOOL: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Bool\r\n    }\r\n}\r\nexport const INTERNAL_TEMPLATE_REQUIREMENTS = {\r\n    METHODS: 'methods',\r\n    PARAMETERS: 'parameters',\r\n    PARAMETERSCLASS: 'Parameters', // Classes hold the parameters, that go to Change classes. See create____.tpl templates.\r\n    CHANGECLASS: 'Change', // Class objects are passed to streams for processing\r\n    RESPONSECLASS: 'Response', // When stream processing completes, these are sent back.\r\n    STREAMPROCESS: 'StreamProcess',\r\n    DETERMINING_PROPERTY: 'determining_property',\r\n    PARENTS_ID_PROPERTY: 'parentIdProperty',\r\n    MODEL: 'model',\r\n    CONSTRUCTORS: 'constructors',\r\n    TEMPLATE: 'template',\r\n    INTERFACE: 'interface',\r\n    PARENT: 'parent',\r\n    PROPERTY: 'property',\r\n    METHOD: {\r\n        CREATE: 'Create',\r\n        UPDATE: 'Update',\r\n        PROCESS: 'Process'\r\n    }\r\n}\r\nexport const FUNCTION_REQUIREMENT_KEYS = {\r\n    CLASSES: 'classes'\r\n}\r\nconst COMMON_FUNCTION_REQUIREMENTS = {\r\n    [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                },\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.UPDATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.RESPONSECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    attachment_methods: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.STREAMPROCESS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.PROCESS]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    propreties: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.DETERMINING_PROPERTY]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.PROPERTY]: FunctionTemplateKeys.Property,\r\n        }\r\n    }\r\n}\r\nexport const TEMPLATE_KEY_MODIFIERS = {\r\n    lower: 'lower',\r\n    alllower: 'alllower',\r\n    upper: 'upper'\r\n}\r\nexport function ToInterface(i) {\r\n    return `I${i}`;\r\n}\r\nexport const HTTP_METHODS = {\r\n    POST: 'HttpPost',\r\n    GET: 'HttpGet',\r\n    DELETE: 'HttpDelete',\r\n    PATCH: 'HttpPatch'\r\n}\r\nexport const COMMON_FUNCTION_TEMPLATE_KEYS = {\r\n    model: 'model',\r\n    function_name: 'function_name',\r\n    user: 'user',\r\n    user_instance: 'user_instance',\r\n    value: 'value',\r\n    agent: 'agent',\r\n    agent_type: 'agent_type'\r\n}\r\nexport const Functions = {\r\n    [FunctionTypes.Create_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Create_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Update_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Update_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Delete_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Delete_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Get_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Get_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Create_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Create_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/create_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/create_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Update_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Update_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/update_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/update_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Get_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Get_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild.tpl', 'utf-8'),\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Can_Execute_Agent_Parent_In_Valid_List]: {\r\n        title: Titles.Can_Execute_Agent_Parent_In_Valid_List,\r\n        template: fs.readFileSync('./app/templates/can_execute/can_execute_childparent_valid_list.tpl', 'utf-8'),\r\n        constraints: {\r\n            [FunctionTemplateKeys.AgentType]: {\r\n                [FunctionConstraintKeys.IsAgent]: true,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.AgentType\r\n            },\r\n            [FunctionTemplateKeys.AgentDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                key: FunctionTemplateKeys.AgentDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.Model]: {\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.Model\r\n            },\r\n            [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                [FunctionConstraintKeys.IsEnumerable]: true,\r\n                key: FunctionTemplateKeys.ModelDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.AgentInstance]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.AgentInstance,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            },\r\n            [FunctionTemplateKeys.Value]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.Value,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.BOOL\r\n        },\r\n        [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {},\r\n        attachment_methods: {},\r\n        propreties: {},\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }\r\n}\r\n\r\n\r\nexport const MethodFunctions = {\r\n    [FunctionTypes.Create_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Create_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Update_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Delete_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Delete_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Get_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Create_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/create_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/create_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Update_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/update_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/update_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Get_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/get_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        parentGet: true,\r\n        method: Methods.GetAll,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Get_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        parentGet: true,\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Create_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Update_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Can_Execute_Agent_Parent_In_Valid_List]: {\r\n        title: Titles.Can_Execute_Agent_Parent_In_Valid_List,\r\n        template: fs.readFileSync('./app/templates/can_execute/can_execute_childparent_valid_list.tpl', 'utf-8'),\r\n        constraints: {\r\n            [FunctionTemplateKeys.AgentType]: {\r\n                [FunctionConstraintKeys.IsAgent]: true,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.AgentType\r\n            },\r\n            [FunctionTemplateKeys.AgentDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                key: FunctionTemplateKeys.AgentDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.Model]: {\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.Model\r\n            },\r\n            [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                [FunctionConstraintKeys.IsEnumerable]: true,\r\n                key: FunctionTemplateKeys.ModelDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.AgentInstance]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.AgentInstance,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            },\r\n            [FunctionTemplateKeys.Value]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.Value,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.BOOL\r\n        },\r\n        [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {},\r\n        attachment_methods: {},\r\n        propreties: {},\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }\r\n}\r\nexport const FunctionMethodTypes = {\r\n    GET: 'GET',\r\n    CREATE: 'CREATE',\r\n    DELETE: 'DELETE',\r\n    UPDATE: 'UPDATE'\r\n}\r\nexport const ConditionTypes = {\r\n    InEnumerable: 'in-enumeration',\r\n    InExtension: 'in-extension',\r\n    MatchReference: 'match-reference',\r\n    MatchManyReferenceParameter: 'match-many-reference-parameter'\r\n}\r\nexport const ConditionCases = {\r\n    [ConditionTypes.MatchReference]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    },\r\n    [ConditionTypes.MatchManyReferenceParameter]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    }\r\n}\r\nexport const ConditionTypeParameters = {\r\n    RefManyToMany: 'refManyToMany',\r\n    RefManyToManyProperty: 'refManyToManyProperty',\r\n    Ref1: 'ref1',\r\n    Ref2: 'ref2',\r\n    Ref1UseId: 'ref1UseId',\r\n    Ref2UseId: 'ref2UseId',\r\n    Ref1Property: 'ref1Property'\r\n}\r\n\r\nexport const ConditionTypeOptions = {\r\n    IsFalse: 'is-false',\r\n    IsTrue: 'is-true'\r\n}\r\n\r\nexport const ConditionFunctionSetups = {\r\n    [ConditionTypes.MatchReference]: {},\r\n    [ConditionTypes.MatchManyReferenceParameter]: {},\r\n    [ConditionTypes.InEnumerable]: {}\r\n}\r\nObject.keys(MethodFunctions).map(key => {\r\n    if (MethodFunctions[key].constraints) {\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions = ConditionFunctionSetups[ConditionTypes.MatchReference].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions = ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions = ConditionFunctionSetups[ConditionTypes.InEnumerable].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n    }\r\n});\r\n\r\nexport const FunctionPerpetrators = {\r\n    Agent: 'Agent',\r\n    System: 'System' // This is theorhetical atm 23.05.2019\r\n}\r\n\r\nexport const ReturnTypes = {\r\n    CHILD: 'CHILD',\r\n    OBJECT: 'OBJECT',\r\n    LISTCHILD: 'LISTCHILD',\r\n    LISTOBJECT: 'LISTOBJECT', //May end up being a different dimension,\r\n    BOOL: 'BOOL'\r\n}\r\n\r\nexport function hasTemplate(templateString) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n    return hasTemplate;\r\n}\r\n\r\nexport function bindTemplate(templateString, data) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n\r\n    if (hasTemplate) {\r\n        for (var t in data) {\r\n            var subregex = new RegExp('({{)' + t + '(}})', 'g');\r\n            var val = data[t];\r\n            templateString = templateString.replace(subregex, val === null || val === undefined ? '' : val);\r\n        }\r\n    }\r\n\r\n    return templateString;\r\n\r\n}","import * as Titles from '../components/titles'\r\nimport { NodeTypes, NodeTypeColors, NodeProperties, NodePropertiesDirtyChain, DIRTY_PROP_EXT, LinkProperties, LinkType, LinkPropertyKeys, NodePropertyTypes, GroupProperties, FunctionGroups, LinkEvents } from '../constants/nodetypes';\r\nimport { Functions, FunctionTemplateKeys, FunctionConstraintKeys, FUNCTION_REQUIREMENT_KEYS, INTERNAL_TEMPLATE_REQUIREMENTS } from '../constants/functiontypes';\r\nimport { GetNodeProp, GetLinkProperty, GetNodeTitle, GetGroupProperty, GetCurrentGraph } from '../actions/uiactions';\r\nimport { uuidv4 } from '../utils/array';\r\nexport function createGraph() {\r\n    return {\r\n        id: uuidv4(),\r\n        version: {\r\n            major: 0,\r\n            minor: 0,\r\n            build: 0\r\n        },\r\n        workspace: '',\r\n        title: Titles.DefaultGraphTitle,\r\n        path: [],\r\n        namespace: '',\r\n        //Groups\r\n        groups: [],\r\n        groupLib: {},\r\n        groupsNodes: {}, // group => { node}\r\n        nodesGroups: {}, // node => {group}\r\n        childGroups: {}, // group => {group}\r\n        parentGroup: {}, // group => {group}\r\n        //Groups \r\n        //Reference nodes\r\n        referenceNodes: {},\r\n        //Reference nodes\r\n        nodeLib: {},\r\n        nodes: [],\r\n        nodeLinks: {}, // A library of nodes, and each nodes that it connects.\r\n        nodeConnections: {}, // A library of nodes, and each nodes links\r\n        linkLib: {},\r\n        links: [],\r\n        graphs: {},\r\n        classNodes: {},\r\n        functionNodes: {}, // A function nodes will be run through for checking constraints.\r\n        updated: null,\r\n        visibleNodes: {}, //Nodes that are visible now, and used to calculate the visibility of other nodes.\r\n        appConfig: {\r\n            \"Logging\": {\r\n                \"IncludeScopes\": false,\r\n                \"LogLevel\": {\r\n                    \"Default\": \"Debug\",\r\n                    \"System\": \"Information\",\r\n                    \"Microsoft\": \"Information\"\r\n                }\r\n            },\r\n            \"AppSettings\": {\r\n                \"Local-AuthorizationKey\": \"C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==\",\r\n                \"Local-EndPointUrl\": \"https://localhost:8081\",\r\n                \"use_local\": \"true\",\r\n                \"EndPointUrl\": \"\",\r\n                \"AuthorizationKey\": \"\",\r\n                \"DatabaseId\": \"red-db-001\",\r\n                \"AssemblyPrefixes\": \"Smash;RedQuick\",\r\n                \"Use-SingleCollection\": \"true\",\r\n                \"storage-key\": \"UseDevelopmentStorage=true\",\r\n                \"single-thread\": true,\r\n                \"ConfirmEmailController\": \"Account\",\r\n                \"ConfirmEmailAction\": \"ConfirmEmail\",\r\n                \"HomeAction\": \"Index\",\r\n                \"HomeController\": \"Home\",\r\n                \"ResetPasswordAction\": \"ResetPassword\",\r\n                \"ResetPasswordController\": \"Account\",\r\n                \"SecurityKey\": \"ajskdflajsdfklas20klasdkfj9laksdjfl4aksdjf3kanvdlnaekf\",\r\n                \"Domain\": \"https://localhost:13424\",\r\n                \"TokenExpirationInMinutes\": \"250\",\r\n                \"DomainPort\": \"13424\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const GraphKeys = {\r\n    NAMESPACE: 'namespace',\r\n    SERVER_SIDE_SETUP: 'server_side_setup'\r\n}\r\nexport function updateWorkSpace(graph, options) {\r\n    let { workspace } = options;\r\n    graph.workspace = workspace;\r\n    return graph;\r\n}\r\n\r\nexport function incrementBuild(graph) {\r\n    graph.version.build++;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMinor(graph) {\r\n    graph.version.minor++;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMajor(graph) {\r\n    graph.version.major++;\r\n    return graph;\r\n}\r\n\r\nexport function updateGraphTitle(graph, ops) {\r\n    var { text } = ops;\r\n    graph.title = text;\r\n    return graph;\r\n}\r\n\r\nexport function addNewSubGraph(graph) {\r\n    var newgraph = createGraph();\r\n    newgraph.title = Titles.DefaultSubGraphTitle;\r\n    graph.graphs[newgraph.id] = newgraph;\r\n    return graph;\r\n}\r\nexport function removeSubGraph(graph, id) {\r\n    delete graph.graphs[id];\r\n    return graph\r\n}\r\n\r\nexport function getSubGraphs(graph) {\r\n    return graph && graph.graphs ? Object.keys(graph.graphs || {}).map(t => graph.graphs[t]) : [];\r\n}\r\n\r\nexport function getSubGraph(graph, scopes) {\r\n    var result = graph;\r\n\r\n    scopes.map(scope => {\r\n        result = graph.graphs[scope];\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function getScopedGraph(graph, options) {\r\n    var { scope } = options;\r\n    if (scope && scope.length) {\r\n        console.log(scope);\r\n        scope.map((s, i) => {\r\n            graph = graph.graphs[s];\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function setScopedGraph(root, options) {\r\n    var { scope, graph } = options;\r\n    if (scope && scope.length) {\r\n        var currentGraph = root;\r\n        scope.map((s, i) => {\r\n            if (i === scope.length - 1) {\r\n                currentGraph.graphs[s] = graph;\r\n            } else {\r\n                currentGraph = currentGraph.graphs[s];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        root = graph;\r\n    }\r\n    return root;\r\n}\r\n\r\nexport function newGroup(graph, callback) {\r\n    let group = createGroup();\r\n    let result = addGroup(graph, group);\r\n    if (callback) {\r\n        callback(group);\r\n    }\r\n    return result;\r\n}\r\nexport function addLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let leaves = graph.groupLib[id].leaves || [];\r\n    leaves = [...leaves, leaf].unique(x => x);\r\n\r\n    //Groups => nodes\r\n    graph.groupsNodes[id] = graph.groupsNodes[id] || {}\r\n    graph.groupsNodes[id][leaf] = true;\r\n    graph.groupsNodes = {\r\n        ...graph.groupsNodes\r\n    }\r\n\r\n    //Nodes => groups\r\n    graph.nodesGroups[leaf] = graph.nodesGroups[leaf] || {}\r\n    graph.nodesGroups[leaf][id] = true;\r\n    graph.nodesGroups = {\r\n        ...graph.nodesGroups\r\n    }\r\n\r\n\r\n\r\n    graph.groupLib[id].leaves = leaves;\r\n    return graph;\r\n}\r\nexport function removeLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    if (group) {\r\n        let leaves = group.leaves || [];\r\n        leaves = [...leaves.filter(t => t !== leaf)];\r\n        graph.groupLib[id].leaves = leaves;\r\n    }\r\n    if (graph.groupsNodes[id]) {\r\n        if (graph.groupsNodes[id][leaf]) {\r\n            delete graph.groupsNodes[id][leaf];\r\n        }\r\n        if (Object.keys(graph.groupsNodes[id]).length === 0) {\r\n            delete graph.groupsNodes[id];\r\n            graph.groups = [...graph.groups.filter(x => x !== id)];\r\n            delete graph.groupLib[id];\r\n        }\r\n        graph.groupsNodes = {\r\n            ...graph.groupsNodes\r\n        }\r\n    }\r\n\r\n    if (graph.nodesGroups[leaf]) {\r\n        if (graph.nodesGroups[leaf][id]) {\r\n            delete graph.nodesGroups[leaf][id];\r\n        }\r\n        if (Object.keys(graph.nodesGroups[leaf]).length === 0) {\r\n            delete graph.nodesGroups[leaf];\r\n        }\r\n        graph.nodesGroups = {\r\n            ...graph.nodesGroups\r\n        }\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\n\r\n\r\nexport function addGroupToGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    let groups = group.groups || [];\r\n\r\n    group.groups = [...groups, groupId].unique(x => x);\r\n    graph.groupLib[id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n\r\n    //Groups need to know who contains them,\r\n    graph.childGroups[id] = graph.childGroups[id] || {};\r\n    graph.childGroups[id][groupId] = true;\r\n    // and also the containers to know about the groups\r\n    graph.parentGroup[groupId] = graph.parentGroup[groupId] || {};\r\n    graph.parentGroup[groupId][id] = true;\r\n\r\n\r\n    return graph;\r\n}\r\nexport function removeGroupFromGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n\r\n    group.groups = [...group.groups.filter(x => x !== groupId)];\r\n    graph.groupLib[id] = { ...group };\r\n    if (graph.childGroups) {\r\n        if (graph.childGroups[id]) {\r\n            delete graph.childGroups[id][groupId];\r\n            if (!Object.keys(graph.childGroups[id]).length) {\r\n                delete graph.childGroups[id];\r\n            }\r\n        }\r\n\r\n        if (graph.parentGroup[groupId]) {\r\n            delete graph.parentGroup[groupId][id];\r\n            if (!Object.keys(graph.parentGroup[groupId]).length) {\r\n                delete graph.childGroups[groupId];\r\n            }\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function clearGroup(graph, ops) {\r\n    var { id } = ops\r\n    for (let i in graph.groupsNodes[id]) {\r\n        if (graph.nodesGroups[i]) {\r\n            delete graph.nodesGroups[i][id];\r\n            if (Object.keys(graph.nodesGroups[i]).length === 0) {\r\n                delete graph.nodesGroups[i];\r\n            }\r\n        }\r\n    }\r\n    for (let i in graph.childGroups[id]) {\r\n        if (graph.parentGroup[i]) {\r\n            delete graph.parentGroup[i][id]\r\n            if (Object.keys(graph.parentGroup[i]).length === 0) {\r\n                delete graph.parentGroup[i];\r\n            }\r\n        }\r\n    }\r\n    graph.groups = [...graph.groups.filter(x => x !== id)];\r\n    delete graph.groupLib[id]\r\n    delete graph.childGroups[id];\r\n    delete graph.groupsNodes[id];\r\n\r\n    return graph;\r\n}\r\nexport function createValidator() {\r\n    return {\r\n        properties: {}\r\n    }\r\n}\r\nexport const createExecutor = createValidator;\r\n\r\nexport function createValidatorProperty() {\r\n    return {\r\n        validators: {\r\n        }\r\n    }\r\n}\r\nexport function addValidatator(validator, options) {\r\n    validator.properties[options.id] = validator.properties[options.id] || createValidatorProperty();\r\n    if (options.validator)\r\n        validator.properties[options.id].validators[options.validator] = options.validatorArgs;\r\n\r\n    return validator;\r\n}\r\nexport function removeValidatorValidation(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator];\r\n\r\n    return _validator;\r\n}\r\nexport function removeValidator(validator, options) {\r\n    delete validator.properties[options.id];\r\n    return validator;\r\n}\r\n\r\nexport function getValidatorItem(item, options) {\r\n    var { property, validator } = options;\r\n    return item.properties[property].validators[validator];\r\n}\r\n\r\nexport function getValidatorProperties(validator) {\r\n    return validator ? validator.properties : null;\r\n}\r\nexport function setDepth(graph, options) {\r\n    var { depth } = options;\r\n    graph.depth = depth;\r\n\r\n    return graph;\r\n}\r\nexport function newNode(graph) {\r\n    let node = createNode();\r\n    return addNode(graph, node);\r\n}\r\nexport function createExtensionDefinition() {\r\n    return {\r\n        //The code generation will define the unique 'value'.\r\n        config: {\r\n            //If this definition is a list or some sort of collection.\r\n            isEnumeration: false,\r\n            // If not, then it is a dictionary, and will have some sort of property that will  be considered the value.\r\n            dictionary: {},\r\n            // A list of objects, with the same shape as the dictionary.\r\n            list: []\r\n        },\r\n        definition: {}\r\n    }\r\n}\r\nexport function defaultExtensionDefinitionType() {\r\n    return 'string';\r\n}\r\nexport function removeNode(graph, options = {}) {\r\n    let { id } = options;\r\n    let existNodes = getNodesByLinkType(graph, { exist: true, id, direction: TARGET, type: LinkType.Exist });\r\n\r\n    graph = incrementBuild(graph);\r\n    //links\r\n    graph = clearLinks(graph, options);\r\n\r\n    //groups \r\n    graph = removeNodeFromGroups(graph, options);\r\n\r\n    if (graph.functionNodes && graph.functionNodes[id]) {\r\n        delete graph.functionNodes[id];\r\n        graph.functionNodes = { ...graph.functionNodes };\r\n    }\r\n    if (graph.classNodes && graph.classNodes[id]) {\r\n        delete graph.classNodes[id];\r\n        graph.classNodes = { ...graph.classNodes };\r\n    }\r\n    delete graph.nodeLib[id];\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes.filter(x => x !== id)];\r\n    if (existNodes) {\r\n        existNodes.map(en => {\r\n            graph = removeNode(graph, { id: en.id });\r\n        })\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function GetManyToManyNodes(state, ids) {\r\n    if (state && ids && ids.length) {\r\n\r\n        return NodesByType(state, NodeTypes.Model).filter(x => GetNodeProp(x, NodeProperties.ManyToManyNexus)).filter(x => {\r\n            return !(ids || []).some(t => {\r\n                return (GetNodeProp(x, NodeProperties.ManyToManyNexusTypes) || []).indexOf(t) !== -1;\r\n            });\r\n        });\r\n    }\r\n    return [];\r\n}\r\nexport function getPropertyNodes(graph, id) {\r\n    return getNodesByLinkType(graph, { id, direction: SOURCE, type: LinkType.PropertyLink });\r\n}\r\nfunction isEmpty(obj) {\r\n    return obj && Object.keys(obj).length === 0;\r\n}\r\nfunction clearGroupDeep(graph, options) {\r\n    var { id, callback } = options;\r\n    var success = true;\r\n    if (graph.childGroups[id]) {\r\n        for (var i in graph.childGroups[id]) {\r\n            var ok = false;\r\n            graph = clearGroupDeep(graph, {\r\n                id: i,\r\n                callback: (v) => {\r\n                    ok = v;\r\n                    success = success && v;\r\n                }\r\n            })\r\n            delete graph.childGroups[id][i];\r\n        }\r\n    }\r\n    if (success) {\r\n        //If the children were empty this can be cleared out\r\n        if (!graph.groupLib[id] || !graph.groupLib[id].leaves || !graph.groupLib[id].leaves.length) {\r\n            if (!graph.groupLib[id] || !graph.groupLib[id].groups || !graph.groupLib[id].groups.length) {\r\n                //if these conditions are met.\r\n                delete graph.groupLib[id];\r\n                graph.groups = [...graph.groups.filter(x => x !== id)];\r\n                delete graph.childGroups[id];\r\n                if (graph.parentGroup[id]) {\r\n                    for (var i in graph.parentGroup[id]) {\r\n                        graph = removeGroupFromGroup(graph, { groupId: id, id: i });\r\n                        graph = clearGroupDeep(graph, { id: i });\r\n                        if (graph.childGroups[i])\r\n                            delete graph.childGroups[i][id]\r\n                    }\r\n                    delete graph.parentGroup[id];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (callback) {\r\n            callback(false);\r\n        }\r\n    }\r\n    return graph;\r\n}\r\nexport function removeNodeFromGroups(graph, options) {\r\n    let { id } = options;\r\n    let groupsContainingNode = [];\r\n    //nodesGroups\r\n    if (graph.nodesGroups[id]) {\r\n        groupsContainingNode = Object.keys(graph.nodesGroups[id]);\r\n        groupsContainingNode.map(group => {\r\n            graph = removeLeaf(graph, { leaf: id, id: group })\r\n        })\r\n    }\r\n\r\n    //groupsNodes\r\n    if (graph.groupsNodes) {\r\n        groupsContainingNode.map(group => {\r\n            if (graph.groupsNodes[group]) {\r\n                if (graph.groupsNodes[group][id]) {\r\n                    delete graph.groupsNodes[group][id]\r\n                }\r\n\r\n                if (Object.keys(graph.groupsNodes[group]).length === 0) {\r\n                    delete graph.groupsNodes[group];\r\n                }\r\n            }\r\n            graph = clearGroupDeep(graph, { id: group });\r\n        })\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\nexport function clearLinks(graph, options) {\r\n    let { id } = options;\r\n    let linksToRemove = getAllLinksWithNode(graph, id);\r\n    for (let i = 0; i < linksToRemove.length; i++) {\r\n        let link = linksToRemove[i];\r\n        graph = removeLink(graph, link);\r\n    }\r\n    return graph;\r\n\r\n}\r\n\r\nexport function addNode(graph, node) {\r\n    graph.nodeLib[node.id] = node;\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes, node.id];\r\n    graph = { ...graph };\r\n    graph = incrementBuild(graph);\r\n    return graph;\r\n}\r\nexport function addGroup(graph, group) {\r\n    graph.groupLib[group.id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n    graph.groups = [...graph.groups, group.id].unique(x => x);\r\n    graph = { ...graph };\r\n    return graph;\r\n}\r\n\r\nexport function addNewPropertyNode(graph, options) {\r\n    return addNewNodeOfType(graph, options, NodeTypes.Property);\r\n}\r\nfunction updateNode(node, options) {\r\n    if (options.node) {\r\n        Object.apply(node.properties, JSON.parse(JSON.stringify(options.node.properties)));\r\n    }\r\n}\r\nexport function addNewNodeOfType(graph, options, nodeType, callback) {\r\n    let { parent, linkProperties, groupProperties } = options;\r\n    let node = createNode(nodeType);\r\n    if (options.node) {\r\n        updateNode(node, options);\r\n        if (nodeType === NodeTypes.ReferenceNode) {\r\n            if (options.rootNode) {\r\n                options.rootNode.referenceNodes[graph.id] = {\r\n                    ...(options.rootNode.referenceNodes[graph.id] || {}),\r\n                    ...({\r\n                        [node.id]: options.node.id\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    graph = addNode(graph, node);\r\n    if (parent) {\r\n        graph = newLink(graph, { source: parent, target: node.id, properties: linkProperties ? linkProperties.properties : null });\r\n    }\r\n    if (options.links) {\r\n        options.links.map(link => {\r\n            graph = newLink(graph, { source: node.id, target: link.target, properties: link.linkProperties ? link.linkProperties.properties : null });\r\n        })\r\n    }\r\n    graph = updateNodeProperty(graph, { id: node.id, prop: NodeProperties.NODEType, value: nodeType });\r\n    if (options.properties) {\r\n        for (var p in options.properties) {\r\n            graph = updateNodeProperty(graph, { id: node.id, prop: p, value: options.properties[p] });\r\n        }\r\n    }\r\n    if (groupProperties) {\r\n        graph = updateNodeGroup(graph, { id: node.id, groupProperties, parent })\r\n    }\r\n    if (callback) {\r\n        callback(node);\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function updateNodeGroup(graph, options) {\r\n    var { id, groupProperties, parent } = options;\r\n    var group = null;\r\n    if (!hasGroup(graph, parent)) {\r\n        var group = createGroup();\r\n        graph = addGroup(graph, group);\r\n        graph = updateNodeProperty(graph, {\r\n            id: parent,\r\n            value: { group: group.id },\r\n            prop: NodeProperties.Groups\r\n        });\r\n        graph = addLeaf(graph, { leaf: parent, id: group.id });\r\n        var grandParent = GetNodeProp(graph.nodeLib[parent], NodeProperties.GroupParent);\r\n        if (grandParent && graph.groupLib[grandParent]) {\r\n            var gparentGroup = graph.groupLib[grandParent];\r\n            if (gparentGroup) {\r\n                var ancestores = getGroupAncenstors(graph, gparentGroup.id);\r\n                graph = addGroupToGroup(graph, {\r\n                    id: gparentGroup.id,\r\n                    groupId: group.id\r\n                });\r\n                ancestores.map(anc => {\r\n                    graph = addGroupToGroup(graph, {\r\n                        id: anc,\r\n                        groupId: group.id\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        let nodeGroupProp = GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups);\r\n        group = getGroup(graph, nodeGroupProp.group);\r\n    }\r\n\r\n    if (group) {\r\n        graph = addLeaf(graph, { leaf: id, id: group.id });\r\n        graph = updateNodeProperty(graph, {\r\n            id,\r\n            value: group.id,\r\n            prop: NodeProperties.GroupParent\r\n        });\r\n    }\r\n\r\n    return graph;\r\n}\r\nfunction getGroupAncenstors(graph, id) {\r\n    var result = [];\r\n    if (graph.parentGroup[id]) {\r\n        for (var i in graph.parentGroup[id]) {\r\n            result = [...result, ...getGroupAncenstors(graph, i)];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getGroup(graph, id) {\r\n    return graph.groupLib[id];\r\n}\r\nfunction hasGroup(graph, parent) {\r\n    return !!(graph.nodeLib[parent] && GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups));\r\n}\r\nexport function GetNode(graph, id) {\r\n    if (graph && graph.nodeLib) {\r\n        return graph.nodeLib[id];\r\n    }\r\n    return null;\r\n}\r\nexport function GetGroup(graph, id) {\r\n    if (graph && graph.groupLib) {\r\n        return graph.groupLib[id];\r\n    }\r\n    return null;\r\n}\r\nexport function applyConstraints(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n    if (functionNodes) {\r\n        for (let i in functionNodes) {\r\n            let node = GetNode(graph, i);\r\n            if (node) {\r\n                var functionType = GetNodeProp(node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject) {\r\n                        graph = checkConstraints(graph, { id: i, functionConstraints: functionConstraintObject });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let validationNodes = NodesByType(graph, NodeTypes.Validator);\r\n    validationNodes.map(x => {\r\n        graph = applyValidationNodeRules(graph, x);\r\n    })\r\n    return graph;\r\n}\r\n\r\nfunction applyValidationNodeRules(graph, node) {\r\n\r\n    let validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (validator) {\r\n        var nodesLinks = getNodesLinkedTo(graph, { id: node.id });\r\n        var validatorProperties = getValidatorProperties(validator);\r\n        Object.keys(validatorProperties).map(property => {\r\n            if (graph.nodeLinks[property] && graph.nodeLinks[property][node.id]) {\r\n                //link between nodes exists.\r\n            }\r\n            else {\r\n                //link between nodes exists.\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction NodesByType(graph, nodeType, options = {}) {\r\n\r\n    var currentGraph = graph;\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs && currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    return [];\r\n}\r\nexport function existsLinkBetween(graph, options) {\r\n    var { source, target, type } = options;\r\n    var link = findLink(graph, { source, target })\r\n    if (link) {\r\n        return GetLinkProperty(link, LinkPropertyKeys.TYPE) === type;\r\n    }\r\n    return false;\r\n}\r\nexport function updateReferenceNodes(root) {\r\n    if (root && root.referenceNodes) {\r\n        for (var scope in root.referenceNodes) {\r\n            if (root.graphs && root.graphs[scope]) {\r\n                let scopedGraph = root.graphs[scope];\r\n                for (let nodeId in root.referenceNodes[scope]) {\r\n                    var masterNode = root.nodeLib[root.referenceNodes[scope][nodeId]];\r\n                    if (masterNode) {\r\n                        var refNode = GetNode(scopedGraph, nodeId);\r\n                        if (refNode) {\r\n                            //may be more properties later.\r\n                            refNode.properties.text = masterNode.properties.text;\r\n                            refNode.properties.referenceType = masterNode.properties.nodeType;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}\r\nexport function constraintSideEffects(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n\r\n    if (functionNodes) {\r\n        let classes_that_must_exist = [];\r\n        for (let i in functionNodes) {\r\n            var function_node = GetNode(graph, i);\r\n            if (function_node) {\r\n                var functionType = GetNodeProp(function_node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject && functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES]) {\r\n                        let functionConstraintRequiredClasses = functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES];\r\n                        if (functionConstraintRequiredClasses) {\r\n                            for (let j in functionConstraintRequiredClasses) {\r\n                                //Get the model constraint key.\r\n                                //Should be able to find the singular model that is connected to the functionNode and children, if it exists.\r\n                                let constraintModelKey = functionConstraintRequiredClasses[j][INTERNAL_TEMPLATE_REQUIREMENTS.MODEL];\r\n                                if (constraintModelKey) {\r\n                                    var constraint_nodes = getNodesFunctionsConnected(graph, { id: i, constraintKey: constraintModelKey });\r\n                                    var nodes_one_step_down_the_line = [];\r\n                                    constraint_nodes.map(cn => {\r\n                                        var nextNodes = getNodesLinkedTo(graph, { id: cn.id });\r\n                                        nodes_one_step_down_the_line.push(...nextNodes);\r\n                                    });\r\n                                    nodes_one_step_down_the_line.map(node => {\r\n                                        classes_that_must_exist.push({\r\n                                            nodeId: node.id,\r\n                                            functionNode: function_node.id,\r\n                                            key: constraintModelKey,\r\n                                            class: j\r\n                                        })\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            classes_that_must_exist = [...classes_that_must_exist.unique(x => {\r\n                return JSON.stringify(x);\r\n            })]\r\n            //Remove class nodes that are no longer cool.\r\n            Object.keys(graph.classNodes).map(i => {\r\n                if (!classes_that_must_exist.find(cls => {\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    return matchObject(res, cls);\r\n                })) {\r\n                    graph = removeNode(graph, { id: i })\r\n                }\r\n                else {\r\n\r\n                }\r\n            });\r\n            //Could make this faster by using a dictionary \r\n            classes_that_must_exist.map(cls => {\r\n                var matching_nodes = Object.keys(graph.classNodes).filter(i => {\r\n\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    if (matchObject(res, cls)) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                });\r\n                if (matching_nodes.length === 0) {\r\n                    //Create new classNodes\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: cls.functionNode,\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.RequiredClassLink }\r\n                        }\r\n                    }, NodeTypes.ClassNode, (new_node) => {\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.UIText,\r\n                            value: RequiredClassName(\r\n                                cls.class,\r\n                                GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName)\r\n                            )\r\n                        });\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.ClassConstructionInformation,\r\n                            value: cls\r\n                        });\r\n                    })\r\n                }\r\n                else if (matching_nodes.length === 1) {\r\n                    var _cnode = graph.nodeLib[matching_nodes[0]];\r\n                    //The existing classNodes can be updated with any new dependent values. e.g. Text/title\r\n                    graph = updateNodeProperty(graph, {\r\n                        id: _cnode.id,\r\n                        prop: NodeProperties.UIText,\r\n                        value: RequiredClassName(cls.class, GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName))\r\n                    });\r\n                }\r\n                else {\r\n                    console.error('There should never be more than one');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nexport function RequiredClassName(cls, node_name) {\r\n    return `${node_name}${cls}`;\r\n}\r\n\r\nexport function getNodesFunctionsConnected(graph, options) {\r\n    var { id, constraintKey } = options;\r\n    var result = [];\r\n\r\n    let links = getNodeLinksWithKey(graph, { id, key: constraintKey });\r\n\r\n    return links.map(link => {\r\n        return graph.nodeLib[link.target];\r\n    })\r\n}\r\n\r\n\r\nexport function checkConstraints(graph, options) {\r\n    var { id, functionConstraints } = options;\r\n    if (graph.nodeConnections[id]) {\r\n        let node = graph.nodeLib[id];\r\n        Object.keys(graph.nodeConnections[id]).map(link => {\r\n            //check if link has a constraint attached.\r\n            let { properties } = graph.linkLib[link];\r\n            let _link = graph.linkLib[link];\r\n            if (properties) {\r\n                let { constraints } = properties;\r\n                if (constraints) {\r\n                    Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                        let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                        let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                        if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                            if (_link.properties.constraints.key === constraintObj.key) {\r\n                                let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                graph = updateLinkProperty(graph, {\r\n                                    id: _link.id,\r\n                                    prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                    value: !!valid\r\n                                })\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function applyFunctionConstraints(graph, options) {\r\n    let { id, value } = options;\r\n\r\n    let functionConstraints = Functions[value];\r\n    if (functionConstraints) {\r\n        if (functionConstraints.constraints) {\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                getNodeFunctionConstraintLinks(graph, { id }).map(link => {\r\n                    let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                    if (!hasMatchingConstraints(link_constraints, functionConstraints.constraints)) {\r\n                        let nodeToRemove = GetTargetNode(graph, link.id);\r\n\r\n                        if (nodeToRemove) {\r\n                            graph = removeNode(graph, { id: nodeToRemove.id })\r\n                        }\r\n                        else {\r\n                            console.warn(\"No nodes were removed as exepected\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            let core_group = null;\r\n            let internal_group = null; //Internal scope group\r\n            let external_group = null; //API Group\r\n            let node = graph.nodeLib[id];\r\n\r\n            var existingGroups = GetNodeProp(node, NodeProperties.Groups);\r\n\r\n            if (existingGroups) {\r\n                for (let i in existingGroups) {\r\n                    graph = clearGroup(graph, { id: existingGroups[i] });\r\n                }\r\n            }\r\n\r\n            if (graph.nodesGroups[id]) {\r\n                for (let i in graph.nodesGroups[id]) {\r\n                    switch (GetGroupProperty(graph.groupLib[i], GroupProperties.FunctionGroup)) {\r\n                        case FunctionGroups.Core:\r\n                            core_group = graph.groupLib[i];\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!core_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    core_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Core\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!internal_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    internal_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Internal\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!external_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    external_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.External\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!graph.groupsNodes[external_group.id] || !graph.groupsNodes[external_group.id][id]) {\r\n                graph = addLeaf(graph, { leaf: id, id: external_group.id })\r\n            }\r\n\r\n            if (!graph.childGroups[internal_group.id] || !graph.childGroups[internal_group.id][external_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: internal_group.id, id: external_group.id });\r\n            }\r\n\r\n            if (!graph.childGroups[core_group.id] || !graph.childGroups[core_group.id][internal_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: core_group.id, id: internal_group.id });\r\n            }\r\n\r\n\r\n            var existMatchinLinks = getNodeFunctionConstraintLinks(graph, { id });\r\n            var constraintKeys = existMatchinLinks.map(link => {\r\n                let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                return findMatchingConstraints(link_constraints, functionConstraints.constraints);\r\n            })\r\n\r\n            Object.keys(functionConstraints.constraints).map(constraint => {\r\n                //Create links to new nodes representing those constraints.\r\n                if (constraintKeys.indexOf(constraint) === -1) {\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: node.id,\r\n                        linkProperties: {\r\n                            properties: {\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                constraints: {\r\n                                    ...functionConstraints.constraints[constraint]\r\n                                }\r\n                            }\r\n                        }\r\n                    }, NodeTypes.Parameter, (new_node) => {\r\n                        graph = updateNodeProperty(graph, { id: new_node.id, prop: NodeProperties.UIText, value: constraint });\r\n\r\n                    });\r\n                }\r\n            });\r\n\r\n            var nodes_with_link = getNodeFunctionConstraintLinks(graph, { id: node.id });\r\n\r\n            nodes_with_link.map((link) => {\r\n                let new_node = graph.nodeLib[link.target];\r\n                var constraint = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                if (constraint && constraint.key && functionConstraints.constraints[constraint.key] &&\r\n                    functionConstraints.constraints[constraint.key][FunctionConstraintKeys.IsInputVariable]) {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: internal_group.id });\r\n                }\r\n                else {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: core_group.id })\r\n                }\r\n            });\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                Object.keys(graph.nodeConnections[id]).map(link => {\r\n                    //check if link has a constraint attached.\r\n                    let { properties } = graph.linkLib[link];\r\n                    let _link = graph.linkLib[link];\r\n                    if (properties) {\r\n                        let { constraints } = properties;\r\n                        if (constraints) {\r\n                            Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                                let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                                let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                                if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                                    if (_link.properties.constraints.key === constraintObj.key) {\r\n                                        let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                        graph = updateLinkProperty(graph, {\r\n                                            id: _link.id,\r\n                                            prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                            value: !!valid\r\n                                        })\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            graph = updateNodeProperty(graph, {\r\n                id,\r\n                prop: NodeProperties.Groups,\r\n                value: {\r\n                    core: core_group.id,\r\n                    internal: internal_group.id,\r\n                    external: external_group.id\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nfunction getNodeLinksWithKey(graph, options) {\r\n    var { id, key } = options;\r\n    var result = [];\r\n    if (graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).map(link => {\r\n            let _link = graph.linkLib[link];\r\n            return _link;\r\n        }).filter(_link => {\r\n            return _link && _link.source === id && _link.properties && _link.properties.constraints && _link.properties.constraints.key === key;\r\n        })\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasMatchingConstraints(linkConstraint, functionConstraints) {\r\n    return !!findMatchingConstraints(linkConstraint, functionConstraints);\r\n}\r\nfunction findMatchingConstraints(linkConstraint, functionConstraints) {\r\n    let lcj = JSON.stringify(linkConstraint);\r\n    return Object.keys(functionConstraints).find(f => JSON.stringify(functionConstraints[f]) === lcj)\r\n}\r\n\r\nfunction getNodeFunctionConstraintLinks(graph, options) {\r\n    let { id } = options;\r\n    if (graph && graph.nodeConnections && graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(link => {\r\n            return GetLinkProperty(graph.linkLib[link], LinkPropertyKeys.TYPE) === LinkType.FunctionConstraintLink;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nexport const FunctionMeetsConstraint = {\r\n    meets: (constraintObj, constraints, link, node, graph) => {\r\n        if (constraintObj) {\r\n            let _targetNode = graph.nodeLib[link.target];\r\n            var nextNodes = getNodesLinkedTo(graph, { id: _targetNode.id });\r\n            return nextNodes.find(targetNode => {\r\n                return Object.keys(constraintObj).find(constraint => {\r\n                    let result = true;\r\n                    if (result === false) {\r\n                        return;\r\n                    }\r\n                    switch (constraint) {\r\n                        //Instance variable are always ok\r\n                        // case FunctionConstraintKeys.IsInstanceVariable:\r\n                        //     result = true;\r\n                        //     break;\r\n                        case FunctionConstraintKeys.IsAgent:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsAgent)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsUser:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsUser)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsTypeOf:\r\n                            //If it is an input variable, then we will all anything.\r\n                            if (!constraintObj[FunctionConstraintKeys.IsInputVariable]) {\r\n                                if (targetNode) {\r\n                                    let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                    let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                    // The targetNodeType should match the other node.\r\n                                    let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                    if (linkWithConstraints.length) {\r\n                                        let links = linkWithConstraints.filter(linkWithConstraint => {\r\n\r\n                                            let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                            let nodeToMatchWithType = GetNodeProp(nodeToMatchWith, NodeProperties.NODEType);\r\n                                            return (nodeToMatchWithType !== targetNodeType);\r\n                                        });\r\n                                        if (links.length === 0) {\r\n                                            result = false;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsChild:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsParent:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        // case FunctionConstraintKeys.IsParent:\r\n                        //     if (targetNode) {\r\n                        //         let targetConstraint = constraintObj[constraint];\r\n                        //         let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                        //         if (linkWithConstraints) {\r\n                        //             let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                        //                 let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                        //                 let linkToParentParameter = getNodesLinkedFrom(graph, { id: nodeToMatchWith.id });\r\n                        //                 if (linkToParentParameter && linkToParentParameter.length) {\r\n                        //                     let relationshipLink = findLink(graph, { target: linkToParentParameter[0].id, source: node.id })\r\n                        //                     if (!relationshipLink || !GetLinkProperty(relationshipLink, LinkProperties.ParentLink.type)) {\r\n                        //                         return false;\r\n                        //                     }\r\n                        //                 }\r\n                        //                 else {\r\n                        //                     return false;\r\n                        //                 }\r\n                        //                 return true;\r\n                        //             });\r\n\r\n                        //             if (links.length === 0) {\r\n                        //                 result = false;\r\n                        //             }\r\n                        //         }\r\n                        //         else {\r\n                        //             result = false;\r\n                        //         }\r\n                        //     }\r\n                        //     else {\r\n                        //         result = false;\r\n                        //     }\r\n                        //     break;\r\n                    }\r\n\r\n                    return result;\r\n                });\r\n            })\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\nfunction findLinkWithConstraint(nodeId, graph, targetConstraint) {\r\n    return Object.keys(graph.nodeConnections[nodeId]).filter(t => graph.nodeConnections[nodeId][t] === SOURCE).filter(link => {\r\n        if (link && graph.linkLib && graph.linkLib[link] && graph.linkLib[link].properties && graph.linkLib[link].properties.constraints\r\n            && graph.linkLib[link].properties.constraints.key === targetConstraint) {\r\n            return graph.linkLib[link];\r\n        }\r\n        return false;\r\n    }).map(link => graph.linkLib[link]);\r\n}\r\nexport function getNodeLinks(graph, id, direction) {\r\n    if (graph && graph.nodeConnections) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(x => {\r\n            if (direction) {\r\n                return graph.nodeConnections[id][x] === direction;\r\n            }\r\n            return true;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n    return [];\r\n}\r\nfunction findLink(graph, options) {\r\n    let { target, source } = options;\r\n    let res = graph.links.find(link => {\r\n        return graph.linkLib && graph.linkLib[link] && graph.linkLib[link].target === target && graph.linkLib[link].source === source;\r\n    });\r\n    if (res) {\r\n        return graph.linkLib[res];\r\n    }\r\n    return null;\r\n}\r\nexport function newLink(graph, options) {\r\n    let { target, source, properties } = options;\r\n    let link = createLink(target, source, properties);\r\n    return addLink(graph, options, link);\r\n}\r\n\r\nexport function GetTargetNode(graph, linkId) {\r\n    if (graph && graph.linkLib && graph.linkLib[linkId]) {\r\n        let target = graph.linkLib[linkId].target;\r\n        return graph.nodeLib[target];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getNodesLinkedFrom(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: TARGET });\r\n}\r\nexport function getNodesLinkedTo(graph, options) {\r\n    return getNodeLinkedTo(graph, options);\r\n}\r\nexport function getNodeLinkedTo(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: SOURCE });\r\n}\r\nexport function matchOneWay(obj1, obj2) {\r\n    if (obj1 === obj2) {\r\n        return true;\r\n    }\r\n    if (!obj1) {\r\n        return false;\r\n    }\r\n    if (!obj2) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function matchObject(obj1, obj2) {\r\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\nexport function GetLinkByNodes(graph, options) {\r\n    var { source, target } = options;\r\n    return Object.values(graph.linkLib).find(t => {\r\n        return t.source === source && t.target === target;\r\n    })\r\n}\r\nexport function GetLinkChainItem(state, options) {\r\n    var chains = GetLinkChain(state, options);\r\n\r\n    if (chains && chains.length) {\r\n        return chains[0];\r\n    }\r\n    return null;\r\n}\r\nexport function GetLinkChain(state, options) {\r\n    let graph = GetCurrentGraph(state);\r\n    var { id, links } = options;\r\n    var ids = [id];\r\n    var result = [];\r\n    links.map((op, il) => {\r\n        var newids = [];\r\n        ids.map(i => {\r\n            let newnodes = getNodesByLinkType(graph, {\r\n                id: i,\r\n                ...op\r\n            });\r\n            if (il === links.length - 1) {\r\n                result = newnodes;\r\n            }\r\n            else {\r\n                newids = [...newids, ...newnodes.map(t => t.id)];\r\n            }\r\n        })\r\n        newids = newids.unique(x => x);\r\n        ids = newids;\r\n    })\r\n    return result\r\n}\r\nexport function getNodesByLinkType(graph, options) {\r\n    if (options) {\r\n        var { id, direction, type, exist } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks)\r\n                    .filter(x => nodeLinks[x])\r\n                    .map(_id => {\r\n                        var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n\r\n                        if (!target) {\r\n                            console.warn('Missing value in linkLib');\r\n                            return null;\r\n                        }\r\n                        if (exist && graph.linkLib[_id].properties && graph.linkLib[_id].properties.exist) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        if (!type || graph.linkLib[_id].properties &&\r\n                            (graph.linkLib[_id].properties.type === type ||\r\n                                graph.linkLib[_id].properties[type])) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        return null;\r\n                    }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\nexport function getNodeLinked(graph, options) {\r\n    if (options) {\r\n        var { id, direction, constraints } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks).filter(x => nodeLinks[x] === direction).map(_id => {\r\n                    var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n                    if (!target) {\r\n                        console.warn('Missing value in linkLib');\r\n                        return null;\r\n                    }\r\n                    if (constraints) {\r\n                        let link = graph.linkLib[_id];\r\n                        let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                        if (matchOneWay(constraints, link_constraints)) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return graph.nodeLib[target];\r\n                }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexport const SOURCE = 'SOURCE';\r\nexport const TARGET = 'TARGET';\r\nexport function addLink(graph, options, link) {\r\n    let { target, source } = options;\r\n    if (target && source && target !== source) {\r\n        if (graph.nodeLib[target] && graph.nodeLib[source]) {\r\n            if (noSameLink(graph, { target, source })) {\r\n                graph.linkLib[link.id] = link;\r\n                graph.linkLib = { ...graph.linkLib };\r\n                graph.links = [...graph.links, link.id];\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.source] = {\r\n                    ...(graph.nodeConnections[link.source] || {}),\r\n                    ...{\r\n                        [link.id]: SOURCE\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.target] = {\r\n                    ...(graph.nodeConnections[link.target] || {}),\r\n                    ...{\r\n                        [link.id]: TARGET\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.source] = {\r\n                    ...(graph.nodeLinks[link.source] || {}),\r\n                    ...{\r\n                        [link.target]: graph.nodeLinks[link.source] ? (graph.nodeLinks[link.source][link.target] || 0) + 1 : 1\r\n                    }\r\n                };\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.target] = {\r\n                    ...graph.nodeLinks[link.target],\r\n                    ...{\r\n                        [link.source]: graph.nodeLinks[link.target] ? (graph.nodeLinks[link.target][link.source] || 0) + 1 : 1\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                var oldLink = findLink(graph, { target, source });\r\n                if (oldLink) {\r\n                    //  the type won't change onces its set\r\n                    // But the other properties can be \r\n                    oldLink.properties = {\r\n                        ...oldLink.properties,\r\n                        ...link.properties,\r\n                        ...({ type: oldLink.properties.type })\r\n                    };\r\n                }\r\n            }\r\n            graph.nodeLinks = { ...graph.nodeLinks }\r\n            graph = { ...graph };\r\n        }\r\n    }\r\n    return graph;\r\n}\r\nexport function addLinkBetweenNodes(graph, options) {\r\n    let { target, source, properties } = options;\r\n    if (target !== source) {\r\n        let link = createLink(target, source, properties);\r\n        return addLink(graph, options, link);\r\n    }\r\n    return graph;\r\n}\r\nexport function findLinkInstance(graph, options) {\r\n    let { target, source } = options;\r\n    let link = graph.links.find(x => graph.linkLib[x].source === source && graph.linkLib[x].target == target);\r\n    return link;\r\n}\r\nexport function getLinkInstance(graph, options) {\r\n    var linkId = findLinkInstance(graph, options);\r\n    if (linkId) {\r\n        return graph.linkLib[linkId];\r\n    }\r\n    return null;\r\n}\r\nexport function getAllLinksWithNode(graph, id) {\r\n    return graph.links.filter(x => graph.linkLib[x].source === id || graph.linkLib[x].target === id);\r\n}\r\nexport function removeLinkBetweenNodes(graph, options) {\r\n    let link = findLinkInstance(graph, options);\r\n    return removeLink(graph, link, options);\r\n}\r\nexport function removeLinkById(graph, options) {\r\n    let link = graph.linkLib[options.id];\r\n    return removeLink(graph, link);\r\n}\r\nexport function executeEvents(graph, link, evt) {\r\n    switch (evt) {\r\n        case LinkEvents.Remove:\r\n            graph = executeRemoveEvents(graph, link);\r\n            break;\r\n    }\r\n    return graph;\r\n}\r\nexport const EventFunctions = {};\r\nexport function addEventFunction(key, func) {\r\n    EventFunctions[key] = func;\r\n}\r\nexport function removeEventFunction(key) {\r\n    delete EventFunctions[key];\r\n}\r\nexport function executeRemoveEvents(graph, link) {\r\n    if (link && link.properties && link.properties.on && link.properties.on[LinkEvents.Remove]) {\r\n        link.properties.on[LinkEvents.Remove].map(args => {\r\n            if (args.function && EventFunctions[args.function]) {\r\n                graph = EventFunctions[args.function](graph, link, args.function, args)\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\nexport function isUIExtensionEnumerable(node) {\r\n    let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n    if (_node && _node.config) {\r\n        return _node.config.isEnumeration\r\n    }\r\n}\r\nexport function GetUIExentionEnumeration(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.list;\r\n    }\r\n    return null;\r\n}\r\nexport function GetUIExentionKeyField(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.keyField;\r\n    }\r\n    return null;\r\n}\r\naddEventFunction('OnRemoveValidationPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Validator), { id: target });\r\n    return graph;\r\n});\r\naddEventFunction('OnRemoveExecutorPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Executor), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveModelFilterPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.ModelItemFilter), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveValidationItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveExecutorItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Executor);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\n\r\nexport function removeValidatorItem(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator]\r\n}\r\nexport function createEventProp(type, options = {}) {\r\n    var res = { on: {} };\r\n    switch (type) {\r\n        case LinkEvents.Remove:\r\n            res.on[type] = [{\r\n                ...options\r\n            }];\r\n            break;\r\n    }\r\n\r\n    return res;\r\n}\r\nexport function removeLink(graph, link, options = {}) {\r\n    if (link && options.linkType) {\r\n        let update_link = graph.linkLib[link];\r\n        if (update_link && update_link.properties && update_link.properties[options.linkType]) {\r\n            delete update_link.properties[options.linkType];\r\n\r\n            //If only the type is on the property\r\n        }\r\n        if (update_link && Object.keys(update_link.properties).length > 1) {\r\n            return { ...graph };\r\n        }\r\n    }\r\n    if (link) {\r\n        graph.links = [...graph.links.filter(x => x !== link)];\r\n        let del_link = graph.linkLib[link];\r\n        if (del_link.properties) {\r\n            if (del_link.properties.on && del_link.properties.on[LinkEvents.Remove]) {\r\n                graph = executeEvents(graph, del_link, LinkEvents.Remove);\r\n            }\r\n        }\r\n        delete graph.linkLib[link]\r\n        graph.linkLib = { ...graph.linkLib };\r\n        graph.nodeLinks[del_link.source] = {\r\n            ...graph.nodeLinks[del_link.source],\r\n            ...{\r\n                [del_link.target]: graph.nodeLinks[del_link.source] ? (graph.nodeLinks[del_link.source][del_link.target] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.source] && !graph.nodeLinks[del_link.source][del_link.target]) {\r\n            delete graph.nodeLinks[del_link.source][del_link.target];\r\n            if (Object.keys(graph.nodeLinks[del_link.source]).length === 0) {\r\n                delete graph.nodeLinks[del_link.source];\r\n            }\r\n        }\r\n        graph.nodeLinks[del_link.target] = {\r\n            ...graph.nodeLinks[del_link.target],\r\n            ...{\r\n                [del_link.source]: graph.nodeLinks[del_link.target] ? (graph.nodeLinks[del_link.target][del_link.source] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.target] && !graph.nodeLinks[del_link.target][del_link.source]) {\r\n            delete graph.nodeLinks[del_link.target][del_link.source];\r\n            if (Object.keys(graph.nodeLinks[del_link.target]).length === 0) {\r\n                delete graph.nodeLinks[del_link.target];\r\n            }\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.source] && graph.nodeConnections[del_link.source][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.source][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.source]).length === 0) {\r\n            delete graph.nodeConnections[del_link.source];\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.target] && graph.nodeConnections[del_link.target][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.target][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.target]).length === 0) {\r\n            delete graph.nodeConnections[del_link.target];\r\n        }\r\n\r\n    }\r\n    return { ...graph };\r\n\r\n}\r\nexport function updateNodeText(graph, options) {\r\n    let { id, value } = options;\r\n    if (id && graph.nodeLib && graph.nodeLib[id]) {\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                _properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    i: value\r\n                },\r\n                get properties() {\r\n                    return this._properties;\r\n                },\r\n                set properties(value) {\r\n                    this._properties = value;\r\n                },\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function updateNodeProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    let additionalChange = {};\r\n    if (id && prop && graph.nodeLib && graph.nodeLib[id]) {\r\n        if (NodePropertiesDirtyChain[prop]) {\r\n            let temps = NodePropertiesDirtyChain[prop];\r\n            temps.map(temp => {\r\n                if (!graph.nodeLib[id].dirty[temp.chainProp]) {\r\n                    additionalChange[temp.chainProp] = temp.chainFunc(value);\r\n                }\r\n            });\r\n        }\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                dirty: {\r\n                    [prop]: true,\r\n                    ...(graph.nodeLib[id].dirty || {})\r\n                },\r\n                properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    [prop]: value,\r\n                    ...additionalChange,\r\n                }\r\n            }\r\n        }\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.Function) {\r\n            graph.functionNodes = { ...graph.functionNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.functionNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.functionNodes[id];\r\n                graph.functionNodes = { ...graph.functionNodes };\r\n            }\r\n        }\r\n\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.ClassNode) {\r\n            graph.classNodes = { ...graph.classNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.classNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.classNodes[id];\r\n                graph.classNodes = { ...graph.classNodes };\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateLinkProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.linkLib && graph.linkLib[id]) {\r\n        graph.linkLib[id] = {\r\n            ...graph.linkLib[id], ...{\r\n                properties: {\r\n                    ...(graph.linkLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateGroupProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.groupLib && graph.groupLib[id]) {\r\n        graph.groupLib[id] = {\r\n            ...graph.groupLib[id], ...{\r\n                properties: {\r\n                    ...(graph.groupLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction noSameLink(graph, ops) {\r\n    return !graph.links.some(x => {\r\n        let temp = graph.linkLib[x];\r\n        return temp.source === ops.source && temp.target === ops.target;\r\n    })\r\n}\r\nfunction createGroup() {\r\n    return {\r\n        id: uuidv4(),\r\n        leaves: [],\r\n        groups: [],\r\n        properties: {}\r\n    }\r\n}\r\nfunction createNode(nodeType) {\r\n    return {\r\n        id: uuidv4(),\r\n        dirty: {\r\n\r\n        },\r\n        properties: {\r\n            text: nodeType || Titles.Unknown\r\n        }\r\n    }\r\n}\r\nfunction createLink(target, source, properties) {\r\n    properties = properties || {};\r\n    return {\r\n        id: uuidv4(),\r\n        source,\r\n        target,\r\n        properties\r\n    }\r\n}\r\nfunction copyLink(link) {\r\n    return {\r\n        ...(JSON.parse(JSON.stringify(link)))\r\n    }\r\n}\r\nexport function duplicateNode(nn) {\r\n    return {\r\n        ...nn\r\n    };\r\n}\r\nexport function duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.indexOf(nn.source),\r\n        target: nodes.indexOf(nn.target)\r\n    };\r\n}\r\n\r\nfunction GetNodesInsideGroup(graph, t, seenGroups = {}) {\r\n    var res = [...Object.keys(graph.groupsNodes[t])];\r\n    for (var i in graph.childGroups[t]) {\r\n        if (!seenGroups[i]) {\r\n            seenGroups = {\r\n                ...seenGroups,\r\n                [i]: true\r\n            };\r\n            res = [...res, ...GetNodesInsideGroup(graph, i, seenGroups)]\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\nexport const GroupImportanceOrder = {\r\n    [NodeTypes.Model]: 1,\r\n    [NodeTypes.Function]: 1,\r\n    [NodeTypes.Method]: 1,\r\n    [NodeTypes.Property]: 4,\r\n    [NodeTypes.ValidationList]: 5,\r\n    [NodeTypes.OptionList]: 6,\r\n    [NodeTypes.Parameter]: 4,\r\n    [NodeTypes.Permission]: 4,\r\n    [NodeTypes.Attribute]: 8,\r\n    [NodeTypes.ValidationList]: 10,\r\n    [NodeTypes.ValidationListItem]: 12,\r\n    [NodeTypes.ModelItemFilter]: 13\r\n}\r\n\r\nexport function SetVisible(graph) {\r\n    graph.visibleNodes = {}\r\n    graph.nodes.map(t => {\r\n        if (GetNodeProp(GetNode(graph, t), NodeProperties.Pinned)) {\r\n            graph.visibleNodes[t] = true;\r\n        }\r\n    });\r\n    if (graph.depth) {\r\n        [].interpolate(0, graph.depth, x => {\r\n            Object.keys(graph.visibleNodes).map(t => {\r\n                for (let h in graph.nodeLinks[t]) {\r\n                    graph.visibleNodes[h] = true;\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return graph;\r\n}\r\nfunction getDepth(groupId, graph) {\r\n    let res = 0;\r\n    if (graph.groupLib[groupId]) {\r\n        if (graph.parentGroup[groupId]) {\r\n            let parent = Object.keys(graph.parentGroup[groupId])[0];\r\n            if (parent) {\r\n                res = res + getDepth(parent, graph);\r\n            }\r\n        }\r\n        res = res + 1;\r\n    }\r\n    return res;\r\n}\r\nexport function FilterGraph(graph) {\r\n    let filteredGraph = createGraph();\r\n    filteredGraph.id = graph.id;\r\n    filteredGraph.linkLib = { ...graph.linkLib };\r\n    filteredGraph.nodesGroups = { ...graph.nodesGroups };\r\n    filteredGraph.groupsNodes = { ...graph.groupsNodes };\r\n    filteredGraph.groups = [...graph.groups];\r\n    filteredGraph.groupLib = { ...graph.groupLib };\r\n    filteredGraph.childGroups = { ...graph.childGroups };\r\n    filteredGraph.parentGroup = { ...graph.parentGroup };\r\n    filteredGraph.links = [...graph.links.filter(linkId => {\r\n        var { target, source } = graph.linkLib[linkId];\r\n        if (graph.visibleNodes[target] && graph.visibleNodes[source]) {\r\n            return true;\r\n        } else {\r\n            delete filteredGraph.linkLib[linkId];\r\n        }\r\n        return false;\r\n    })];\r\n    Object.keys(graph.nodesGroups).map(nodeId => {\r\n        if (!graph.visibleNodes[nodeId]) {\r\n            let temp = graph.nodesGroups[nodeId];\r\n            for (let i in temp) {\r\n                filteredGraph.groupsNodes[i] = { ...filteredGraph.groupsNodes[i] };\r\n                delete filteredGraph.groupsNodes[i][nodeId]\r\n                if (Object.keys(filteredGraph.groupsNodes[i]).length === 0) {\r\n                    delete filteredGraph.groupsNodes[i]\r\n                }\r\n            }\r\n            delete filteredGraph.nodesGroups[nodeId]\r\n        }\r\n    });\r\n    Object.keys(filteredGraph.groupLib).sort((b, a) => {\r\n        return getDepth(a, graph) - getDepth(b, graph);\r\n    }).map(group => {\r\n        if (filteredGraph.groupLib[group].leaves) {\r\n            filteredGraph.groupLib[group] = { ...filteredGraph.groupLib[group] };\r\n            filteredGraph.groupLib[group].leaves = [...filteredGraph.groupLib[group].leaves.filter(x => graph.visibleNodes[x])];\r\n            filteredGraph.groupLib[group].groups = [...filteredGraph.groupLib[group].groups.filter(x => filteredGraph.groupLib[x])];\r\n            if (!filteredGraph.groupLib[group].leaves.length && !filteredGraph.groupLib[group].groups.length) {\r\n                filteredGraph.groups = [...filteredGraph.groups.filter(x => x !== group)];\r\n                delete filteredGraph.groupLib[group]\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.childGroups).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.childGroups[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.childGroups[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.childGroups[group] = { ...filteredGraph.childGroups[group] }\r\n                    delete filteredGraph.childGroups[group][t]\r\n                }\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.parentGroup).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.parentGroup[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.parentGroup[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.parentGroup[group] = { ...filteredGraph.parentGroup[group] }\r\n                    delete filteredGraph.parentGroup[group][t]\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.keys(graph.visibleNodes).map(nodeId => {\r\n        filteredGraph.nodeLib[nodeId] = graph.nodeLib[nodeId];\r\n        filteredGraph.nodes.push(nodeId);\r\n        filteredGraph.nodeConnections[nodeId] = { ...graph.nodeConnections[nodeId] };\r\n        filteredGraph.nodeLinks[nodeId] = { ...graph.nodeLinks[nodeId] };\r\n\r\n        Object.keys(graph.nodeLinks[nodeId] || {}).map(t => {\r\n            if (!filteredGraph.linkLib[t]) {\r\n                filteredGraph.nodeLinks[nodeId] = { ...filteredGraph.nodeLinks[nodeId] }\r\n                delete filteredGraph.nodeLinks[nodeId][t];\r\n            }\r\n        })\r\n    })\r\n\r\n    return filteredGraph;\r\n}\r\nexport function VisualProcess(graph) {\r\n    let vgraph = createGraph();\r\n    vgraph.id = graph.id;\r\n    graph = SetVisible(graph);\r\n    graph = FilterGraph(graph)\r\n    let collapsedNodes = graph.nodes.filter(node => GetNodeProp(graph.nodeLib[node], NodeProperties.Collapsed));\r\n    let collapsingGroups = {};\r\n    collapsedNodes.map(t => {\r\n        if (graph.nodesGroups[t]) {\r\n            let t_importance = GroupImportanceOrder[GetNodeProp(graph.nodeLib[t], NodeProperties.NODEType)] || 1000;\r\n            var sortedGroups = Object.keys(graph.nodesGroups[t]).filter(nodeGroupKey => {\r\n\r\n                let nodesInGroup = GetNodesInsideGroup(graph, nodeGroupKey);\r\n                var moreImportantNode = nodesInGroup.find(n => {\r\n                    if (n === t) {\r\n                        return false;\r\n                    }\r\n                    var _type = GetNodeProp(graph.nodeLib[n], NodeProperties.NODEType);\r\n                    let n_importance = GroupImportanceOrder[_type] || 1000;\r\n\r\n                    if (n_importance > t_importance) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                if (moreImportantNode) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }).sort((b, a) => {\r\n                return Object.keys(graph.groupsNodes[a]).length - Object.keys(graph.groupsNodes[b]).length;\r\n            });\r\n            if (sortedGroups.length) {\r\n                collapsingGroups[sortedGroups[0]] = true;\r\n            }\r\n        }\r\n    });\r\n    let smallestsNonCrossingGroups = Object.keys(collapsingGroups).filter(cg => {\r\n        for (var g_ in graph.parentGroup[cg]) {\r\n            if (collapsingGroups[g_]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n    let disappearingNodes = {};\r\n    smallestsNonCrossingGroups.map(t => {\r\n        let dt = {};\r\n        let head = null;\r\n        let mostimportant = 10000;\r\n        let _nodes = GetNodesInsideGroup(graph, t);\r\n        _nodes.filter(t => {\r\n            var type = GetGroupProperty(graph.nodeLib[t], NodeProperties.NODEType);\r\n            dt[t] = true;\r\n            if (GroupImportanceOrder[type] < mostimportant) {\r\n                head = t;\r\n                mostimportant = GroupImportanceOrder[type];\r\n            }\r\n        });\r\n        delete dt[head];\r\n        for (var i in dt) {\r\n            dt[i] = head;\r\n        }\r\n        disappearingNodes = { ...disappearingNodes, ...dt };\r\n    });\r\n\r\n    vgraph.nodes = [...graph.nodes.filter(x => !disappearingNodes[x])]\r\n    vgraph.nodeLib = {};\r\n    vgraph.nodes.map(t => { vgraph.nodeLib[t] = graph.nodeLib[t] });\r\n    vgraph.links = graph.links.map(x => {\r\n        //Find any link that should be disappearing, and make it go away\r\n        var { source, target } = graph.linkLib[x];\r\n        var dupLink;\r\n        if (disappearingNodes[source] && disappearingNodes[target]) {\r\n            // the link is going totally away;\r\n            return false;\r\n        }\r\n        else if (disappearingNodes[source]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.source = disappearingNodes[source];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else if (disappearingNodes[target]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.target = disappearingNodes[target];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        if (dupLink.source === dupLink.target) {\r\n            return false;\r\n        }\r\n        return dupLink.id;\r\n    }).filter(x => x);\r\n\r\n    var vgroups = graph.groups.map((group, groupIndex) => {\r\n        let oldgroup = graph.groupLib[group];\r\n        let newgroup = createGroup();\r\n        newgroup.id = `${oldgroup.id}`;\r\n        if (oldgroup && oldgroup.leaves) {\r\n            oldgroup.leaves.map(leaf => {\r\n                if (vgraph.nodeLib[leaf]) {\r\n                    newgroup.leaves.push(leaf);\r\n                }\r\n            })\r\n        }\r\n        if (newgroup.leaves.length) {\r\n            vgraph.groupLib[newgroup.id] = newgroup;\r\n\r\n            return newgroup.id\r\n        }\r\n        return null;\r\n    }).filter(x => x);\r\n    vgroups.map((group) => {\r\n        vgraph.groupLib[group].groups = (graph.groupLib[group].groups || []).filter(og => {\r\n            if (vgraph.groupLib[og]) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n    })\r\n    vgraph.groups = vgroups;\r\n    return vgraph;\r\n}\r\n","var fs = require('fs');\r\n\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport * as NodeConstants from '../constants/nodetypes';\r\nimport * as Titles from '../components/titles';\r\nexport const VISUAL = 'VISUAL';\r\nexport const APPLICATION = 'APPLICATION';\r\nexport const GRAPHS = 'GRAPHS';\r\nexport const VISUAL_GRAPH = 'VISUAL_GRAPH';\r\nexport const DASHBOARD_MENU = 'DASHBOARD_MENU';\r\nexport const SELECTED_NODE_BB = 'SELECTED_NODE_BB';\r\nexport const SIDE_PANEL_EXTRA_WIDTH = 'SIDE_PANEL_EXTRA_WIDTH';\r\nexport const NodeTypes = NodeConstants.NodeTypes;\r\nexport const NodeTypeColors = NodeConstants.NodeTypeColors;\r\nexport const NodeProperties = NodeConstants.NodeProperties;\r\nexport const LinkProperties = NodeConstants.LinkProperties;\r\nexport const NodeAttributePropertyTypes = NodeConstants.NodeAttributePropertyTypes;\r\nexport const NodePropertyTypes = NodeConstants.NodePropertyTypes;\r\nexport const ValidationRules = NodeConstants.ValidationRules;\r\nexport const OptionsTypes = NodeConstants.OptionsTypes;\r\n\r\nexport const UI_UPDATE = 'UI_UPDATE';\r\nexport function GetC(state, section, item) {\r\n    if (state && state.uiReducer && state.uiReducer[section]) {\r\n        return state.uiReducer[section][item];\r\n    }\r\n    return null;\r\n}\r\nexport function Visual(state, key) {\r\n    return GetC(state, VISUAL, key);\r\n}\r\nexport function IsCurrentNodeA(state, type) {\r\n    var currentNode = Node(state, Visual(state, SELECTED_NODE));\r\n    return currentNode && currentNode.properties && currentNode.properties.nodeType === type;\r\n}\r\nexport function Use(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function GetNodeProp(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function GetLinkChainItem(options) {\r\n    return GraphMethods.GetLinkChainItem(GetState(), options);\r\n}\r\nexport function GetCodeName(node) {\r\n    if (typeof (node) === 'string') {\r\n        node = GraphMethods.GetNode(GetCurrentGraph(GetState()), node);\r\n    }\r\n    return GetNodeProp(node, NodeProperties.CodeName);\r\n}\r\nexport function GetMethodPropNode(graph, node, key) {\r\n    var methodProps = GetNodeProp(node, NodeProperties.MethodProps);\r\n    if (methodProps) {\r\n        return GraphMethods.GetNode(graph, methodProps[key] || null);\r\n    }\r\n    return null;\r\n}\r\nexport function GetLinkProperty(link, prop) {\r\n    return link && link.properties && link.properties[prop]\r\n}\r\n\r\nexport function GetGroupProperty(group, prop) {\r\n    return group && group.properties && group.properties[prop]\r\n}\r\n\r\nexport function VisualEq(state, key, value) {\r\n    return Visual(state, key) === value;\r\n}\r\nexport function Node(state, nodeId) {\r\n\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph && currentGraph.nodeLib) {\r\n        return currentGraph.nodeLib[nodeId];\r\n    }\r\n    return null;\r\n}\r\nexport function Application(state, key) {\r\n    return GetC(state, APPLICATION, key);\r\n}\r\nexport function GetVisualGraph(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    return currentGraph ? GetC(state, VISUAL_GRAPH, currentGraph.id) : null;\r\n}\r\nexport function SaveApplication(value, key, dispatch) {\r\n    dispatch(UIC(APPLICATION, key, value));\r\n}\r\nexport function Graphs(state, key) {\r\n    return GetC(state, GRAPHS, key);\r\n}\r\nexport function SaveGraph(graph, dispatch) {\r\n    graph = {\r\n        ...graph,\r\n        ...{\r\n            updated: Date.now()\r\n        }\r\n    };\r\n    let visualGraph = GraphMethods.VisualProcess(graph);\r\n    if (visualGraph)\r\n        dispatch(UIC(VISUAL_GRAPH, visualGraph.id, visualGraph));\r\n    dispatch(UIC(GRAPHS, graph.id, graph));\r\n}\r\nexport function UIC(section, item, value) {\r\n    return {\r\n        type: UI_UPDATE,\r\n        item,\r\n        value,\r\n        section\r\n    }\r\n}\r\nexport function toggleVisual(key) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, !!!GetC(state, VISUAL, key)))\r\n    }\r\n\r\n}\r\n\r\nexport function GUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nexport function setVisual(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, value))\r\n    }\r\n\r\n}\r\nexport function setApplication(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(APPLICATION, key, value))\r\n    }\r\n\r\n}\r\nexport const SELECTED_LINK = 'SELECTED_LINK';\r\nexport const HOVERED_LINK = 'HOVERED_LINK';\r\nexport const SELECTED_NODE = 'SELECTED_NODE';\r\nexport function SelectedNode(nodeId) {\r\n    return (dispatch, getState) => {\r\n        dispatch(UIC(VISUAL, SELECTED_NODE, nodeId));\r\n    }\r\n}\r\nexport function toggleDashboardMinMax() {\r\n    return toggleVisual(DASHBOARD_MENU);\r\n}\r\nexport function GetNodeTitle(node) {\r\n    if (!node) { return Titles.Unknown }\r\n    return node.properties ? node.properties.text || node.id : node.id;\r\n}\r\nexport function GetNodes(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return [...currentGraph.nodes.map(t => currentGraph.nodeLib[t])];\r\n    }\r\n    return [];\r\n}\r\nexport function CanChangeType(node) {\r\n    var nodeType = GetNodeProp(node, NodeProperties.NODEType);\r\n    switch (nodeType) {\r\n        case NodeTypes.ReferenceNode:\r\n            return false;\r\n        default:\r\n            return true;\r\n    }\r\n}\r\nexport function NodesByType(state, nodeType, options = {}) {\r\n\r\n    var currentGraph = options.useRoot ? GetRootGraph(state) : GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs && currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    throw 'no graph found'\r\n    return [];\r\n}\r\n\r\nexport function GetNodeFromRoot(state, id) {\r\n    var graph = GetRootGraph(state);\r\n    if (graph) {\r\n        return GraphMethods.GetNode(graph, id);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function NodesConnectedTo(state, nodeId) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return (t) => {\r\n            if (currentGraph.linkLib[t.id]) {\r\n                return currentGraph.linkLib[t.id][nodeId];\r\n            }\r\n        }\r\n    }\r\n    return () => false;\r\n}\r\nlet _getState;\r\nexport function GetState() {\r\n    return _getState();\r\n}\r\nexport function setState() {\r\n    return (dispatch, getState) => {\r\n        _getState = getState;\r\n    }\r\n}\r\nexport function GetFunctionType(methodNode) {\r\n    return GetNodeProp(methodNode, NodeProperties.FunctionType);\r\n}\r\nexport function GetMethodNodeProp(methodNode, key) {\r\n    return (GetNodeProp(methodNode, NodeProperties.MethodProps) || {})[key];\r\n}\r\nexport function GetMethodProps(methodNode, key) {\r\n    return (GetNodeProp(methodNode, NodeProperties.MethodProps) || {});\r\n}\r\nexport function GetPermissionMethod(permission) {\r\n    return GetLinkChainItem({\r\n        id: permission.id,\r\n        links: [{\r\n            type: NodeConstants.LinkType.FunctionOperator,\r\n            direction: GraphMethods.TARGET\r\n        }]\r\n    })\r\n}\r\nexport function GetCurrentGraph(state) { \r\n    var scopedGraph = GetCurrentScopedGraph(state);\r\n    return scopedGraph;\r\n    // if (currentGraph) {\r\n    //     currentGraph = Graphs(state, currentGraph);\r\n    // }\r\n    // return currentGraph;\r\n}\r\nexport function GetRootGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n    }\r\n    else if (dispatch) {\r\n        currentGraph = GraphMethods.createGraph();\r\n        SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n    }\r\n\r\n    return currentGraph;\r\n}\r\nexport function GetSubGraphs(state) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        let subgraphs = GraphMethods.getSubGraphs(currentGraph);\r\n        return subgraphs;\r\n    }\r\n    return null;\r\n}\r\nexport function addNewSubGraph() {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = GraphMethods.addNewSubGraph(rootGraph);\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\n\r\nexport function setRootGraph(key, value) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = {\r\n            ...rootGraph, ...{ [key]: value }\r\n        };\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\nexport function setAppsettingsAssemblyPrefixes(prefixes) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph.appConfig.AppSettings.AssemblyPrefixes = ['RedQuick', prefixes].unique(x => x).join(';')\r\n        SaveGraph(rootGraph, dispatch);\r\n    }\r\n}\r\nexport function GetCurrentScopedGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    let scope = Application(state, GRAPH_SCOPE) || [];\r\n    console.log(`current graph ${currentGraph}`)\r\n    if (!currentGraph) {\r\n        if (dispatch) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n        }\r\n    }\r\n    else {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        if (scope.length) {\r\n            console.log(`scope.length ${scope.length}`)\r\n            currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n        }\r\n    }\r\n    return currentGraph\r\n}\r\nexport function GetSelectedSubgraph(state) {\r\n    var root = GetRootGraph(state);\r\n    if (root) {\r\n        var scope = Application(state, GRAPH_SCOPE);\r\n        if (scope && scope.length) {\r\n            return GraphMethods.getSubGraph(root, scope);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport const UPDATE_GRAPH_TITLE = 'UPDATE_GRAPH_TITLE';\r\nexport const NEW_NODE = 'NEW_NODE';\r\nexport const REMOVE_NODE = 'REMOVE_NODE';\r\nexport const NEW_LINK = 'NEW_LINK';\r\nexport const CHANGE_NODE_TEXT = 'CHANGE_NODE_TEXT';\r\nexport const CURRENT_GRAPH = 'CURRENT_GRAPH';\r\nexport const GRAPH_SCOPE = 'GRAPH_SCOPE';\r\nexport const CHANGE_NODE_PROPERTY = 'CHANGE_NODE_PROPERTY';\r\nexport const NEW_PROPERTY_NODE = 'NEW_PROPERTY_NODE';\r\nexport const NEW_PERMISSION_NODE = 'NEW_PERMISSION_NODE';\r\nexport const NEW_ATTRIBUTE_NODE = 'NEW_ATTRIBUTE_NODE';\r\nexport const ADD_LINK_BETWEEN_NODES = 'ADD_LINK_BETWEEN_NODES';\r\nexport const NEW_CONDITION_NODE = 'NEW_CONDITION_NODE';\r\nexport const REMOVE_LINK_BETWEEN_NODES = 'REMOVE_LINK_BETWEEN_NODES';\r\nexport const REMOVE_LINK = 'REMOVE_LINK';\r\nexport const NEW_CHOICE_ITEM_NODE = 'NEW_CHOICE_ITEM_NODE';\r\nexport const NEW_PARAMETER_NODE = 'NEW_PARAMETER_NODE';\r\nexport const NEW_FUNCTION_OUTPUT_NODE = 'NEW_FUNCTION_OUTPUT_NODE';\r\nexport const NEW_MODEL_ITEM_FILTER = 'NEW_MODEL_ITEM_FILTER';\r\nexport const NEW_VALIDATION_ITEM_NODE = 'NEW_VALIDATION_ITEM_NODE';\r\nexport const NEW_CHOICE_TYPE = 'NEW_CHOICE_TYPE';\r\nexport const NEW_VALIDATION_TYPE = 'NEW_VALIDATION_TYPE';\r\nexport const NEW_OPTION_ITEM_NODE = 'NEW_OPTION_ITEM_NODE';\r\nexport const NEW_OPTION_NODE = 'NEW_OPTION_NODE';\r\nexport const NEW_CUSTOM_OPTION = 'NEW_CUSTOM_OPTION';\r\nexport const NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE = 'NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE';\r\nexport const NEW_EXTENSION_LIST_NODE = 'NEW_EXTENSION_LIST_NODE';\r\nexport const NEW_EXTENTION_NODE = 'NEW_EXTENTION_NODE';\r\nexport const ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY = 'ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY';\r\nexport const APPLY_FUNCTION_CONSTRAINTS = 'APPLY_FUNCTION_CONSTRAINTS';\r\nexport const ADD_NEW_REFERENCE_NODE = 'ADD_NEW_REFERENCE_NODE;'\r\nexport const SET_DEPTH = 'SET_DEPTH';\r\n\r\nexport function graphOperation(operation, options) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let rootGraph = null;\r\n        var currentGraph = Application(state, CURRENT_GRAPH);\r\n        let scope = Application(state, GRAPH_SCOPE) || [];\r\n        if (!currentGraph) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n            rootGraph = currentGraph\r\n        }\r\n        else {\r\n            currentGraph = Graphs(state, currentGraph);\r\n            rootGraph = currentGraph;\r\n            if (scope.length) {\r\n                currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n            }\r\n        }\r\n        var operations = operation;\r\n        if (!Array.isArray(operation)) {\r\n            operations = [{ operation: operation, options }]\r\n        }\r\n        operations.filter(x => x).map(op => {\r\n            let { operation, options } = op;\r\n            switch (operation) {\r\n                case SET_DEPTH:\r\n                    currentGraph = GraphMethods.setDepth(currentGraph, options);\r\n                    break;\r\n                case NEW_NODE:\r\n                    currentGraph = GraphMethods.newNode(currentGraph);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case REMOVE_NODE:\r\n                    currentGraph = GraphMethods.removeNode(currentGraph, options);\r\n                    break;\r\n                case UPDATE_GRAPH_TITLE:\r\n                    currentGraph = GraphMethods.updateGraphTitle(currentGraph, options);\r\n                    break;\r\n                case NEW_LINK:\r\n                    currentGraph = GraphMethods.newLink(currentGraph, options)\r\n                    break;\r\n                case ADD_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.addLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.removeLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK:\r\n                    currentGraph = GraphMethods.removeLinkById(currentGraph, options);\r\n                    break;\r\n                case CHANGE_NODE_TEXT:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, { ...options, prop: 'text' });\r\n                    break;\r\n                case CHANGE_NODE_PROPERTY:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, options);\r\n                    break;\r\n                case NEW_PROPERTY_NODE:\r\n                    currentGraph = GraphMethods.addNewPropertyNode(currentGraph, options);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_ATTRIBUTE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Attribute);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CONDITION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Condition);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_MODEL_ITEM_FILTER:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ModelItemFilter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.PermissionDependency);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CHOICE_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ChoiceList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PARAMETER_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Parameter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_FUNCTION_OUTPUT_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.FunctionOutput);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Permission);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CUSTOM_OPTION:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionCustom);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_NEW_REFERENCE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ReferenceNode);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENSION_LIST_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionTypeList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionType);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case APPLY_FUNCTION_CONSTRAINTS:\r\n                    currentGraph = GraphMethods.applyFunctionConstraints(currentGraph, options);\r\n                    // setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY:\r\n                    break;\r\n            }\r\n            currentGraph = GraphMethods.applyConstraints(currentGraph);\r\n            currentGraph = GraphMethods.constraintSideEffects(currentGraph);\r\n        })\r\n\r\n        if (scope.length) {\r\n            rootGraph = GraphMethods.setScopedGraph(rootGraph, { scope, graph: currentGraph });\r\n        }\r\n        else {\r\n            rootGraph = currentGraph;\r\n        }\r\n        rootGraph = GraphMethods.updateReferenceNodes(rootGraph);\r\n        SaveGraph(rootGraph, dispatch)\r\n    }\r\n}\r\n\r\nexport const Colors = {\r\n    SelectedNode: '#f39c12'\r\n};\r\n","export const HandlerEvents = {\r\n    scaffold: {\r\n        message: 'scaffold-project',\r\n        reply: 'scaffold-project-reply'\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\n\r\nconst NAME_SPACE_TEMPLATE = './app/templates/namespace.tpl';\r\n\r\nexport default class NamespaceGenerator {\r\n    static Generate(options) {\r\n        var { template, namespace, space, usings } = options;\r\n        let namespaceTemplate = fs.readFileSync(NAME_SPACE_TEMPLATE, 'utf-8');\r\n\r\n        namespaceTemplate = bindTemplate(namespaceTemplate, {\r\n            namespace,\r\n            space,\r\n            imports: usings ? usings.map(x=> `using ${x};`).unique(x => x).join('\\r\\n') : null,\r\n            body: template\r\n        })\r\n\r\n        return namespaceTemplate;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONTROLLER_CLASS_TEMPLATE = './app/templates/controller/controller.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE = './app/templates/controller/controller_functions_get.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class ControllerGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let controllers = NodesByType(state, NodeTypes.Controller);\r\n\r\n        let _controllerTemplateClass = fs.readFileSync(CONTROLLER_CLASS_TEMPLATE, 'utf-8');\r\n        let _controllerTemplateFunction = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_TEMPLATE, 'utf-8');\r\n        let _controllerTemplateFunctionGet = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE, 'utf-8');\r\n        let root = GetRootGraph(state);\r\n        let result = {};\r\n        controllers.map(controller => {\r\n            let controllerTemplateClass = _controllerTemplateClass;\r\n            let functions = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(controller, NodeProperties.CodeName)}`;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            let maestro_functions = [];\r\n            let maestros = GraphMethods.getNodesByLinkType(root, {\r\n                id: controller.id,\r\n                type: LinkType.MaestroLink,\r\n                direction: GraphMethods.SOURCE\r\n            }).map(maestro => {\r\n                let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                    id: maestro.id,\r\n                    type: LinkType.FunctionLink,\r\n                    direction: GraphMethods.SOURCE\r\n                });\r\n                let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n                maestro_functions = tempfunctions;\r\n                if (maestro_functions.length) {\r\n                    maestro_functions.map(maestro_function => {\r\n                        var ft = MethodFunctions[GetNodeProp(maestro_function, NodeProperties.FunctionType)];\r\n                        if (ft) {\r\n                            let tempFunction = _controllerTemplateFunction;\r\n                            let parameters = '';\r\n                            let parameter_route = '';\r\n                            let parameter_values = '';\r\n                            //If the function is a get then, use the get template.\r\n                            if (GetNodeProp(maestro_function, NodeProperties.MethodType) === Methods.Get) {\r\n                                tempFunction = _controllerTemplateFunctionGet;\r\n                                let paramName = 'modelId';\r\n                                if (ft.parentGet) {\r\n                                    paramName = 'parentId';\r\n                                }\r\n                                parameters = `string ${paramName}`;\r\n                                parameter_route = `/{${paramName}}`;\r\n                                parameter_values = `${paramName}`;\r\n                            }\r\n                            let codeNode = GetNodeProp(maestro_function, NodeProperties.CodeName);\r\n                            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                                id: maestro_function.id,\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                direction: GraphMethods.SOURCE\r\n                            });\r\n\r\n                            let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                            let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                            let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                            let methodProperties = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                            if (!methodProperties) return;\r\n                            let userNode = tempfunctions.find(t => GetNodeProp(t, NodeProperties.CodeName) === FunctionTemplateKeys.UserInstance);\r\n                            let modelNode = GraphMethods.GetNode(root, methodProperties.model);\r\n                            let output_type = '{controller_generator_missing_model}';\r\n                            if (modelNode) {\r\n                                output_type = GetNodeProp(modelNode, NodeProperties.CodeName) || output_type;\r\n                                if (ft.isList) {\r\n                                    output_type = `IList<${output_type}>`;\r\n                                }\r\n                            }\r\n                            tempFunction = bindTemplate(tempFunction, {\r\n                                functionName: functionName,\r\n                                maestro_function: functionName,\r\n                                parameters,\r\n                                parameter_values,\r\n                                parameter_route,\r\n                                http_route: httpRoute || '{controller_generator_http_method',\r\n                                http_method: httpMethod || '{controller_generator_http_method',\r\n                                user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                                output_type: output_type,\r\n                                maestro_interface: ToInterface(maestroName),\r\n                                input_type: modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : '{controller_generator_missing_model}'\r\n                            })\r\n                            // let template = ft.template;\r\n                            // if (ft.template_keys) {\r\n                            //     for (var template_key in template_key) {\r\n                            //         for (var modifiers in TEMPLATE_KEY_MODIFIERS) {\r\n\r\n                            //         }\r\n                            //     }\r\n                            // }\r\n                            functions += jNL + tempFunction;\r\n                        }\r\n\r\n                    })\r\n                }\r\n                controllerTemplateClass = bindTemplate(controllerTemplateClass, {\r\n                    codeName: codeName,\r\n                    'codeName#alllower': codeName.toLowerCase(),\r\n                    user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                    user: userNode ? GetNodeProp(userNode, NodeProperties.CodeName) : '{controller_generator_code_name}',\r\n                    functions\r\n                });\r\n            });\r\n            result[GetNodeProp(controller, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(controller, NodeProperties.CodeName),\r\n                name: GetNodeProp(controller, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: controllerTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        'Microsoft.AspNetCore.Mvc'\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, GetRootGraph, NodesByType, NodePropertyTypes, NEW_LINK, GetCurrentGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, Usings, ValidationRules, NameSpace, NodeTypes, STANDARD_CONTROLLER_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nconst MODEL_TEMPLATE = './app/templates/models/model.tpl';\r\nconst MODEL_PROPERTY_TEMPLATE = './app/templates/models/model_property.tpl';\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst MODEL_ATTRIBUTE_TEMPLATE = './app/templates/models/model_attributes.tpl';\r\nexport default class ModelGenerator {\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let result = {};\r\n        models.map(model => {\r\n            var res = ModelGenerator.GenerateModel({\r\n                graph: graphRoot,\r\n                nodeId: model.id,\r\n                state\r\n            });\r\n            result[res.id] = res;\r\n        });\r\n\r\n        return result;\r\n    }\r\n    static GenerateModel(options) {\r\n        var { state, graph, nodeId } = options;\r\n        var key = nodeId;\r\n        var usings = [];\r\n        var templateSwapDictionary = {};\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n\r\n        var node = GraphMethods.GetNode(graph, nodeId);\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        templateSwapDictionary.model = GetNodeProp(node, NodeProperties.CodeName);\r\n        templateSwapDictionary.base_model = GetNodeProp(node, NodeProperties.IsUser) ? 'RedUser' : 'DBaseData';\r\n        templateSwapDictionary.account_enabling_func = '';\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            templateSwapDictionary.account_enabling_func = `\r\n            \r\n        public static User Create(RedExternalLoginViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }\r\n        public static User Create(RedRegisterViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }`\r\n        }\r\n        templateSwapDictionary.attributes = '';\r\n        var connectedProperties = GraphMethods.getNodesByLinkType(graph, {\r\n            id: node.id,\r\n            type: LinkType.PropertyLink,\r\n            direction: GraphMethods.SOURCE\r\n        });\r\n        let propertyTemplate = fs.readFileSync(MODEL_PROPERTY_TEMPLATE, 'utf-8');\r\n        let attributeTemplate = fs.readFileSync(MODEL_ATTRIBUTE_TEMPLATE, 'utf-8');\r\n        let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf-8');\r\n\r\n        let validatorFunctions = GraphMethods.getNodesByLinkType(graph, {\r\n            id: nodeId,\r\n            type: LinkType.ValidatorModel,\r\n            direction: GraphMethods.TARGET\r\n        }).map(t => GetNodeProp(t, NodeProperties.CodeName)).map(t => ModelGenerator.tabs(1) + `[${t}]` + NEW_LINE).join('');\r\n        templateSwapDictionary.attributes = validatorFunctions;\r\n\r\n        let staticFunctions = [];\r\n        let properties = connectedProperties.map(propNode => {\r\n            var connectedAttributes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propNode.id,\r\n                type: LinkType.AttributeLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let property_instance_template = propertyTemplate;\r\n            let np = GetNodeProp(propNode, NodeProperties.UIAttributeType);\r\n            if (Usings[ProgrammingLanguages.CSHARP][np]) {\r\n                usings.push(\r\n                    ...Usings[ProgrammingLanguages.CSHARP][np],\r\n                    `${namespace}${NameSpace.Model}`,\r\n                    `${namespace}${NameSpace.Extensions}`)\r\n            }\r\n            let propType = NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][np];\r\n            if (GetNodeProp(propNode, NodeProperties.UIModelType)) {\r\n                propType = 'string';\r\n            }\r\n            let propSwapDictionary = {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                property_type: propType,\r\n                property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                attributes: connectedAttributes.map(attr => {\r\n                    var options_lists = GraphMethods.getNodesByLinkType(graph, {\r\n                        id: attr.id,\r\n                        type: LinkType.Option,\r\n                        direction: GraphMethods.SOURCE\r\n                    });\r\n                    let options_list = [];\r\n                    options_lists.map(ol => {\r\n                        var ols = GraphMethods.getNodesByLinkType(graph, {\r\n                            id: ol.id,\r\n                            type: LinkType.OptionItem,\r\n                            direction: GraphMethods.SOURCE\r\n                        });\r\n                        ols.map(_ols => {\r\n                            if (GetNodeProp(_ols, NodeProperties.UseCustomUIOption)) {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionTypeCustom));\r\n                            }\r\n                            else {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionType));\r\n                            }\r\n                        })\r\n                    });\r\n                    options_list = options_list.unique().map(t => `UIAttribute.${t}`);\r\n\r\n                    var ReverseRules = {};\r\n                    Object.keys(ValidationRules).map(_key => {\r\n                        ReverseRules[ValidationRules[_key]] = _key;\r\n                    })\r\n                    var validations = [];\r\n                    if (GetNodeProp(attr, NodeProperties.UseUIValidations)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Validation,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            GraphMethods.getNodesByLinkType(graph, {\r\n                                id: vnode.id,\r\n                                type: LinkType.ValidationItem,\r\n                                direction: GraphMethods.SOURCE\r\n                            }).map(vnodeItem => {\r\n                                validations.push(`ValidationRules.${ReverseRules[GetNodeProp(vnodeItem, NodeProperties.UIValidationType)]}`)\r\n                            })\r\n                        });\r\n                    }\r\n                    let choice_name = null;\r\n                    if (GetNodeProp(attr, NodeProperties.UIExtensionList)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Extension,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            choice_name = GetNodeProp(vnode, NodeProperties.CodeName)\r\n                        });\r\n                    }\r\n\r\n                    let options = options_list && options_list.length ? bindTemplate(`Options = new string[] { {{options_list}} },`, {\r\n                        options_list: options_list.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let validation_rules = validations && validations.length ? bindTemplate(`ValidationRules = new string[] { {{validation_list}} },`, {\r\n                        validation_list: validations.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let choice_type_list = [];\r\n                    let choice_type = choice_name ? bindTemplate('ChoiceType = {{choice_type}}.Name,', {\r\n                        choice_type: choice_name\r\n                    }) : '';\r\n\r\n                    let attributeSwapDictionary = {\r\n                        property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                        property_type: GetNodeProp(propNode, NodeProperties.UseModelAsType) ? GetNodeProp(propNode, NodeProperties.UIModelType) : GetNodeProp(propNode, NodeProperties.UIAttributeType),\r\n                        ui_title: GetNodeProp(propNode, NodeProperties.UIName),\r\n                        singular: GetNodeProp(propNode, NodeProperties.UISingular) ? 'true' : 'false',\r\n                        options,\r\n                        choice_type,\r\n                        validation_rules\r\n                    }\r\n                    if (attr && attr.uiValidationType) {\r\n                    }\r\n                    return bindTemplate(attributeTemplate, attributeSwapDictionary);\r\n                }).filter(x => x).join('\\r\\n')\r\n            }\r\n\r\n            property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n            return property_instance_template;\r\n        });\r\n        if (GetNodeProp(node, NodeProperties.HasLogicalChildren) && GetNodeProp(node, NodeProperties.ManyToManyNexus)) {\r\n            (GetNodeProp(node, NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                let propNode = GraphMethods.GetNode(GetCurrentGraph(state), t);\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                };\r\n\r\n                properties.push(bindTemplate(propertyTemplate, propSwapDictionary));\r\n            });\r\n        }\r\n        let staticDic = {\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        };\r\n        staticFunctions.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            var agenNodes = NodesByType(state, NodeTypes.Model).filter(x => x.id !== node.id && GetNodeProp(x, NodeProperties.IsAgent));\r\n            agenNodes.map(agent => {\r\n\r\n                let property_instance_template = propertyTemplate;\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                }\r\n                property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n                properties.push(property_instance_template);\r\n            })\r\n        }\r\n        templateSwapDictionary.properties = properties.join('');\r\n        templateSwapDictionary.staticFunctions = staticFunctions.unique(x => x).join('\\n');\r\n        console.log(templateSwapDictionary.properties)\r\n        let modelTemplate = fs.readFileSync(MODEL_TEMPLATE, 'utf-8');\r\n        modelTemplate = bindTemplate(modelTemplate, templateSwapDictionary);\r\n\r\n        var result = {\r\n            id: GetNodeProp(node, NodeProperties.CodeName),\r\n            name: GetNodeProp(node, NodeProperties.CodeName),\r\n            template: NamespaceGenerator.Generate({\r\n                template: modelTemplate,\r\n                usings: [...usings,\r\n                    `RedQuickCore.Identity`,\r\n                `${namespace}${NameSpace.Validations}`,\r\n                ...STANDARD_CONTROLLER_USING],\r\n                namespace,\r\n                space: NameSpace.Model\r\n            })\r\n        };\r\n        return result;\r\n    }\r\n    static tabs(c) {\r\n        let res = '';\r\n        var TAB = \"\\t\";\r\n        for (var i = 0; i < c; i++) {\r\n            res = res + TAB;\r\n        }\r\n        return res;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, MakeConstant, ConstantsDeclaration, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst EXTENSION_CLASS_TEMPLATE = './app/templates/extensions/extensions.tpl';\r\nconst EXTENSION_PROPERTY_TEMPLATE = './app/templates/extensions/extension_properties.tpl';\r\nconst EXTENSION_NEW_INSTANCE = './app/templates/extensions/extension_new_instance.tpl';\r\nconst EXTENSION_NEW_PROPERTY = './app/templates/extensions/extension_new_instance_properties.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_LIST = './app/templates/extensions/extension_new_instance_list.tpl';\r\nconst EXTENSION_NEW_INSTANCE_LIST_ADD = './app/templates/extensions/extension_new_instance_list_add.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY = './app/templates/extensions/extension_new_instance_dictionary.tpl';\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY_ADD = './app/templates/extensions/extension_new_instance_dictionary_add.tpl';\r\nconst EXTENSION_NEW_TEMPLATE_LIST = './app/templates/extensions/create_new_list_instance.tpl'\r\nconst PROPERTY_TABS = 6;\r\nexport default class ExtensionGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static GetExtensionNodeValues(extensionNode) {\r\n        var def = GetNodeProp(extensionNode, NodeProperties.UIExtensionDefinition);\r\n        if (def && def.config) {\r\n            if (def.config.isEnumeration) {\r\n                var extensionValues = def.config.list.map(t => {\r\n                    return def.config.keyField ? t[def.config.keyField] : t[Object.keys(t)[0]];\r\n                });\r\n                return extensionValues\r\n            }\r\n        }\r\n        throw new Error(\"unhandled - getting extensions nodes not as an enumeration\")\r\n    }\r\n    static CreateListInstanceTemplate(options) {\r\n        let { node, name } = options;\r\n        let _newTemplateList = fs.readFileSync(EXTENSION_NEW_TEMPLATE_LIST, 'utf-8');\r\n        return bindTemplate(_newTemplateList, {\r\n            name,\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        });\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let extensions = NodesByType(state, NodeTypes.ExtensionType);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _extensionClassTemplate = fs.readFileSync(EXTENSION_CLASS_TEMPLATE, 'utf-8');\r\n        let _extensionPropertyTemplate = fs.readFileSync(EXTENSION_PROPERTY_TEMPLATE, 'utf-8');\r\n        let _extensionNewInstance = fs.readFileSync(EXTENSION_NEW_INSTANCE, 'utf-8');\r\n        let _extensionNewProperty = fs.readFileSync(EXTENSION_NEW_PROPERTY, 'utf-8');\r\n        let _extensionNewInstanceList = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST, 'utf-8');\r\n        let _extensionNewInstanceListAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST_ADD, 'utf-8');\r\n        let _extensionNewInstanceDictionary = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY, 'utf-8');\r\n        let _extensionNewInstanceDictionaryAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY_ADD, 'utf-8');\r\n        let result = {};\r\n        extensions.map(extension => {\r\n            let extensionClassTemplate = _extensionClassTemplate;\r\n            let properties = '';\r\n            let statics = '';\r\n            var constants = [];\r\n            let uiExtensionDefinition = GetNodeProp(extension, NodeProperties.UIExtensionDefinition);\r\n            if (uiExtensionDefinition) {\r\n                let modelName = GetNodeProp(extension, NodeProperties.CodeName);\r\n                let { config, definition } = uiExtensionDefinition;\r\n                if (definition) {\r\n                    definition = { ...definition, Value: 'string' };\r\n                    properties = Object.keys(definition).map(e => {\r\n                        var extensionPropertyTemplate = _extensionPropertyTemplate;\r\n\r\n                        extensionPropertyTemplate = bindTemplate(extensionPropertyTemplate, {\r\n                            name: modelName,\r\n                            property: e,\r\n                            type: definition[e]\r\n                        });\r\n                        return extensionPropertyTemplate;\r\n                    }).join('');\r\n                    if (config) {\r\n                        var instances = [];\r\n                        let instance = '';\r\n                        if (config.isEnumeration) {\r\n                            instances = config.list.map((item, item_index) => {\r\n                                item = { ...item, Value: (item_index + 1) }\r\n                                let temp;\r\n                                let props = Object.keys(item).map(key => {\r\n                                    let temp = _extensionNewProperty;\r\n                                    temp = bindTemplate(temp, {\r\n                                        property: key,\r\n                                        value: MakeConstant(item[key])\r\n                                    });\r\n                                    if (isNaN(item[key]))\r\n                                        constants.push({\r\n                                            name: MakeConstant(item[key]),\r\n                                            value: `\"${item[key]}\"`\r\n                                        })\r\n                                    return temp;\r\n                                }).join(`,${NL}`);\r\n                                temp = _extensionNewInstance;\r\n                                temp = bindTemplate(temp, {\r\n                                    properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                    model: modelName\r\n                                });\r\n                                return temp;\r\n                            })\r\n                        }\r\n                        else {\r\n                            let temp;\r\n                            let props = Object.keys(config.dictionary).map(key => {\r\n                                let temp = _extensionNewProperty;\r\n                                let item = { ...config.dictionary };\r\n                                temp = bindTemplate(temp, {\r\n                                    property: key,\r\n                                    value: MakeConstant(item[key])\r\n                                });\r\n                                if (isNaN(item[key]))\r\n                                    constants.push({\r\n                                        name: MakeConstant(item[key]),\r\n                                        value: `\"${item[key]}\"`\r\n                                    })\r\n                                return temp;\r\n                            }).join(`,${NL}`);\r\n                            temp = _extensionNewInstance;\r\n                            temp = bindTemplate(temp, {\r\n                                properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp;\r\n                            let temp_instance = _extensionNewInstanceDictionary;\r\n                            temp_instance = bindTemplate(temp_instance, {\r\n                                instance,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp_instance;\r\n                        }\r\n                        instances = instances.map(inst => {\r\n                            let temp = _extensionNewInstanceListAdd;\r\n\r\n                            temp = bindTemplate(temp, {\r\n                                instance: inst\r\n                            })\r\n                            return temp;\r\n                        });\r\n\r\n                        let templist = _extensionNewInstanceList;\r\n                        statics = bindTemplate(templist, {\r\n                            addings: instances.join(''),\r\n                            model: modelName\r\n                        }) + jNL + instance;\r\n                    }\r\n                }\r\n            }\r\n            extensionClassTemplate = bindTemplate(extensionClassTemplate, {\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                properties,\r\n                statics: statics,\r\n                constants: constants.unique(x => x).map(co => jNL + ExtensionGenerator.Tabs(3) + ConstantsDeclaration(co)).join('')\r\n            });\r\n\r\n            result[GetNodeProp(extension, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(extension, NodeProperties.CodeName),\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: extensionClassTemplate,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Extensions\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph, GetLinkProperty, GetCodeName, GetMethodPropNode, GetLinkChainItem, GetPermissionMethod, GetFunctionType, GetMethodNodeProp } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, MakeConstant, CreateStringList, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, ConditionTypes, ConditionTypeParameters, ConditionCases, FunctionTemplateKeys, MethodFunctions, FunctionTypes } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport ExtensionGenerator from './extensiongenerator';\r\nimport { debug } from 'util';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst TEST_CASE = './app/templates/permissions/tests/test_case.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst TEST_CASE_PROPERTY = './app/templates/permissions/tests/test_case_property.tpl';\r\nconst PERMISSIONS_INTERFACE = './app/templates/permissions/permissions_interface.tpl';\r\nconst PERMISSIONS_CASE_EXTENSION = './app/templates/permissions/permissions_case.tpl';\r\nconst PERMISSIONS_CASE_ENUMERATION = './app/templates/permissions/permissions_case_enumeration.tpl';\r\nconst PERMISSIONS_CASE_INCLUDED_IN_LIST = './app/templates/permissions/permissions_case_included_in_list.tpl';\r\nconst PERMISSIONS_METHODS = './app/templates/permissions/permissions_method.tpl';\r\nconst PERMISSIONS_ARBITER_PROP = './app/templates/permissions/permissions_arbiter_prop.tpl';\r\nconst PERMISSIONS_IMPL = './app/templates/permissions/permissions_impl.tpl';\r\nconst PERMISSIONS_INTERFACE_METHODS = './app/templates/permissions/permissions_interface_methods.tpl';\r\nconst MATCH_TO_MANY_REFERENCE_PARAMETER = './app/templates/permissions/match-many-reference-parameter.tpl';\r\nconst MATCH_REFERENCE = './app/templates/permissions/match-reference.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class PermissionGenerator {\r\n    static PermissionMatches(permission, agent, model) {\r\n        var methodNode = GetPermissionMethod(permission);\r\n        if (methodNode) {\r\n            let function_type = GetFunctionType(methodNode);\r\n            switch (function_type) {\r\n                //Add more cases as required.\r\n                case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        GetMethodNodeProp(methodNode, FunctionTemplateKeys.Parent) === model.id;\r\n                    return result;\r\n                default:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        GetMethodNodeProp(methodNode, FunctionTemplateKeys.Model) === model.id;\r\n                    return result;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    static createInstanceEnumerationListName(dNode, enu, method, type = 'Enums') {\r\n        return `list${type}${GetNodeProp(dNode, NodeProperties.CodeName) || dNode}${GetNodeProp(enu, NodeProperties.CodeName) || enu}${method}`\r\n    }\r\n\r\n    static _createConstantList(name, constants) {\r\n        let result = constants.map(ea => {\r\n            return `${name}.${MakeConstant(ea)}`\r\n        })\r\n        return result;\r\n    }\r\n    //Deprecated\r\n    static _createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_allowed;\r\n    }\r\n    static _getNotAllowedConstances(dpNode, enumerationNode, method) {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_notallowed = ext_disallowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_notallowed\r\n    }\r\n    static createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n        let constants_allowed = PermissionGenerator._createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n        // var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        // let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        // let constants_allowed = ext_allowed.map(ea => {\r\n        //     return `${enumerationName}.${MakeConstant(ea)}`\r\n        // })\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static createStringList(options) {\r\n        var { name, constants_allowed, enumerationName } = options;\r\n        constants_allowed = constants_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static _createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_allowed;\r\n\r\n    }\r\n    static _getNotAllowedExtectionConstances(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_disallowed = ext_disallowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_disallowed;\r\n\r\n    }\r\n    static createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extensionNode, method, 'Extensions');\r\n\r\n        let constants_allowed = PermissionGenerator._createExtensionInstanceList(dpNode, extensionNode, method, type);\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n\r\n    }\r\n    static IsRequestor(graph, model, permission) {\r\n        var requestorNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.RequestorPermissionLink\r\n        });\r\n        return !!requestorNodes.find(node => {\r\n            return node.id === model.id;\r\n        })\r\n    }\r\n    static GetExtensionNodeValues(graph, permission, method, agent, model) {\r\n        const value_string = 'value';\r\n        var dependingPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.PermissionPropertyDependency\r\n        });\r\n        let listOfCases = [];\r\n        dependingPermissionNodes.map(dpNode => {\r\n            let propertyNodeLinkedToByDependencyPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: dpNode.id,\r\n                type: LinkType.PermissionPropertyDependency\r\n            });\r\n\r\n            let propertyNodeLinkedToByDependencyPermissionNode = propertyNodeLinkedToByDependencyPermissionNodes[0];\r\n            if (!propertyNodeLinkedToByDependencyPermissionNode) {\r\n                return;\r\n            }\r\n            let propertyNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propertyNodeLinkedToByDependencyPermissionNode.id,\r\n                type: LinkType.PermissionDependencyProperty\r\n            });\r\n            let propertyNode = null;\r\n            if (propertyNodes.length === 1) {\r\n                propertyNode = propertyNodes[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            var agentLinkExists = GraphMethods.existsLinkBetween(graph, { target: propertyNode.id, source: agent.id, type: LinkType.PropertyLink });\r\n            let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.Enumeration));\r\n            let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.UIExtension));\r\n            let useEnumeration = GetNodeProp(dpNode, NodeProperties.UseEnumeration);\r\n            let useExtension = GetNodeProp(dpNode, NodeProperties.UseExtension);\r\n            let useIncludedInList = GetNodeProp(dpNode, NodeProperties.IncludedInList);\r\n\r\n            if (useIncludedInList) {\r\n                let permissionCaseIncludedInList = fs.readFileSync(PERMISSIONS_CASE_INCLUDED_IN_LIST, 'utf-8');\r\n                var tempBindingValues = {\r\n                    method,\r\n                    // It currently happens to be that this is correct, but maybe in the future this needs to be more general.\r\n                    parent: `${GetNodeProp(agent, NodeProperties.AgentName) || 'agent'}`.toLowerCase(),\r\n                    parent_property: 'Id',\r\n                    ///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: ''\r\n                };\r\n                let temp = bindTemplate(permissionCaseIncludedInList, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n            if (useEnumeration) {\r\n                let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf-8');\r\n                let enumInstance = PermissionGenerator.createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n                var tempBindingValues = {\r\n                    method,\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: enumInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n\r\n            }\r\n\r\n            if (useExtension) {\r\n                let definition = GetNodeProp(extentionNode, NodeProperties.UIExtensionDefinition);\r\n                let permissionCaseExtensionTemplate = fs.readFileSync(PERMISSIONS_CASE_EXTENSION, 'utf-8');\r\n                let extensionInstance = PermissionGenerator.createExtensionInstanceList(dpNode, extentionNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extentionNode, method, 'Extensions');\r\n                let tempBindingValues = {\r\n                    method,\r\n                    value: `value`,\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension_propery_key: definition && definition.config ? definition.config.keyField : null,\r\n                    extension_value_property: 'Value',\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: extensionInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseExtensionTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static IsAppliedPermission(graph, permission, propertyNode) {\r\n        let appliedPermissionLinks = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.AppliedPermissionLink\r\n        });\r\n        //\r\n        if (appliedPermissionLinks && appliedPermissionLinks.length) {\r\n            var link = GraphMethods.GetLinkByNodes(graph, {\r\n                source: appliedPermissionLinks[0].id,\r\n                target: propertyNode.id\r\n            });\r\n            if (link) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static GetTestExtensionNodeValues(graph, permission, method, agent, model) {\r\n        const value_string = 'value';\r\n        var conditionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.Condition\r\n        });\r\n        let listOfCases = [];\r\n        conditionNodes.map(conditionNode => {\r\n\r\n            // let isAppliedPermission = PermissionGenerator.IsAppliedPermission(graph, permission, propertyNode);\r\n            // let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.Enumeration));\r\n            // let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.UIExtension));\r\n            let conditionType = GetNodeProp(conditionNode, NodeProperties.ConditionType);\r\n            switch (conditionType) {\r\n                case ConditionTypes.MatchReference:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchReference);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchReference].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchReference].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.MatchManyReferenceParameter:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchManyReferenceParameter);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.InEnumerable:\r\n\r\n                    var enumRef = GetNodeProp(conditionNode, NodeProperties.EnumerationReference);\r\n                    var enumerationNodeName = PermissionGenerator.getReferencedNodeName(graph, enumRef, NodeProperties.Enumeration);\r\n                    var constList = PermissionGenerator.getReference(enumRef, NodeProperties.AllowedEnumValues);\r\n                    var disAllowedConstList = PermissionGenerator.getReference(enumRef, NodeProperties.DisallowedEnumValues);\r\n                    let enumInstance = PermissionGenerator._createConstantList(enumerationNodeName, constList);\r\n                    let enumNotAllowed = PermissionGenerator._createConstantList(enumerationNodeName, disAllowedConstList);;\r\n                    let nameEnum = PermissionGenerator.createInstanceEnumerationListName(conditionNode, enumerationNodeName, method);\r\n                    let propertyEnum = PermissionGenerator.getReferencedNodeName(graph, enumRef, ConditionTypeParameters.Ref1Property);\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameEnum,\r\n                        ref: enumRef[ConditionTypeParameters.Ref1],\r\n                        property: propertyEnum,\r\n                        values: enumInstance,\r\n                        neg: enumNotAllowed,\r\n                        options: { ...enumRef }\r\n                    });\r\n\r\n                    break;\r\n                case ConditionTypes.InExtension:\r\n                    let definition = GetNodeProp(conditionNode, NodeProperties.UIExtensionDefinition);\r\n                    let extensionInstance = PermissionGenerator._createExtensionInstanceList(conditionNode, extentionNode, method);\r\n                    let extensionsNotAllowed = PermissionGenerator._getNotAllowedExtectionConstances(conditionNode, extentionNode, method);\r\n                    let nameExt = PermissionGenerator.createInstanceEnumerationListName(conditionNode, extentionNode, method, 'Extensions');\r\n                    let propertyExt = GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName);\r\n                    // definition && definition.config ? definition.config.keyField : null;\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameExt,\r\n                        property: propertyExt,\r\n                        values: extensionInstance,\r\n                        neg: extensionsNotAllowed,\r\n                        options: { ...definition }\r\n                    });\r\n                    break;\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static getReferencedNodeName(graph, enumRef, type) {\r\n        return GetNodeProp(PermissionGenerator.getReferencedValue(graph, enumRef, type), NodeProperties.CodeName);\r\n    }\r\n    static getReferencedValue(graph, enumRef, type) {\r\n        return GraphMethods.GetNode(graph, enumRef[type])\r\n    }\r\n    static getReference(enumRef, type) {\r\n        return enumRef[type]\r\n    }\r\n    static GenerateCases(state, permission, agent, model) {\r\n        var graph = GetCurrentGraph(state);\r\n        let _manyToManyMatchCondition = fs.readFileSync(MATCH_TO_MANY_REFERENCE_PARAMETER, 'utf-8');\r\n        let _matchReferenceCondition = fs.readFileSync(MATCH_REFERENCE, 'utf-8');\r\n        let result = {};\r\n        if (permission) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n                    let cases = [];\r\n                    let conditions = GraphMethods.GetLinkChain(state, {\r\n                        id: permission.id,\r\n                        links: [{\r\n                            type: LinkType.Condition,\r\n                            direction: GraphMethods.SOURCE\r\n                        }]\r\n                    });\r\n                    if (conditions && conditions.length) {\r\n                        conditions.map((t, index) => {\r\n                            var variable = 'variable_' + index;\r\n                            switch (GetNodeProp(t, NodeProperties.ConditionType)) {\r\n                                case ConditionTypes.MatchReference:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchReference);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.Ref1]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n                                                var ref1UseId = mmrp[ConditionTypeParameters.Ref1UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref1UseId]]);\r\n                                                var ref2UseId = mmrp[ConditionTypeParameters.Ref2UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref2UseId]]);\r\n                                                cases.push({\r\n                                                    template: bindTemplate(_matchReferenceCondition, {\r\n                                                        variable,\r\n                                                        value_property: ref1UseId ? 'Id' : '',\r\n                                                        data_property: ref2UseId ? 'Id' : '',\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.MatchManyReferenceParameter:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchManyReferenceParameter);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.RefManyToManyProperty]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n                                                var relationship = GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.RefManyToMany]]);\r\n                                                cases.push({\r\n                                                    arbiter: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                    template: bindTemplate(_manyToManyMatchCondition, {\r\n                                                        variable,\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.InEnumerable:\r\n                                    var ine = GetNodeProp(t, NodeProperties.EnumerationReference);\r\n                                    if (ine) {\r\n                                        let ref1 = ine[ConditionTypeParameters.Ref1];\r\n\r\n                                        let enumerationNode = GraphMethods.GetNode(graph, ine[NodeProperties.Enumeration]);\r\n                                        if (enumerationNode) {\r\n                                            let casename = GetNodeProp(t, NodeProperties.CodeName) || GetNodeProp(t, NodeProperties.NODEType);\r\n                                            let name = `${casename}_valid_items`;\r\n                                            let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf-8');\r\n                                            let enumInstance = PermissionGenerator.createStringList({\r\n                                                name,\r\n                                                constants_allowed: ine[NodeProperties.AllowedEnumValues],\r\n                                                enumerationName: GetNodeProp(enumerationNode, NodeProperties.CodeName)\r\n                                            });\r\n                                            let propertyNodeLinkedToByDependencyPermissionNode = GraphMethods.GetNode(graph, ine[ConditionTypeParameters.Ref1Property])\r\n                                            var tempBindingValues = {\r\n                                                method,\r\n                                                value: `${ref1 !== 'model' ? 'value' : 'data'}`.toLowerCase(),\r\n                                                value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                                                model: GetNodeProp(model, NodeProperties.CodeName) || GetNodeProp(model, NodeProperties.NODEType),\r\n                                                casename,\r\n                                                'allowed-values-list': name,\r\n                                                instance_list: enumInstance\r\n                                            };\r\n                                            let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                                            cases.push({\r\n                                                variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                                                template: temp\r\n                                            });\r\n\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        })\r\n                    }\r\n                    result[method] = cases;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static EnumerateCases(cases) {\r\n        let vects = cases.map(x => {\r\n            return (x && x.values ? x.values.length : 0) + (x && x.neg ? x.neg.length : 0);\r\n        });\r\n        return enumerate(vects);\r\n    }\r\n    static EnumeratePermissionCases(graph, permission, method, agent, model) {\r\n        if (!permission || !method || !agent || !model) {\r\n            return [];\r\n        }\r\n\r\n        let cases = PermissionGenerator.GetTestExtensionNodeValues(graph, permission, method, agent, model);\r\n        let enums = PermissionGenerator.EnumerateCases(cases);\r\n        let testCaseProperty = fs.readFileSync(TEST_CASE_PROPERTY, 'utf-8');\r\n        let methodNode = GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        });\r\n\r\n        let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n\r\n        let res = enums.map((_enum) => {\r\n            let props = [];\r\n            let properties = [];\r\n            let ispositive = true;\r\n            _enum.map((which, index) => {\r\n                let _case = cases[index];\r\n                ispositive = ispositive && _case.values.length > which;\r\n                let is_model_parameter;\r\n                switch (_case.type) {\r\n                    case ConditionTypes.MatchManyReferenceParameter:\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            methodProps &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref1]] &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref2]] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property]\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `\"wrong\"`\r\n                                        });\r\n                                        props.push({\r\n                                            props: ispositive ? '' : template,\r\n                                            type: _case.type\r\n                                        });\r\n                                        properties.push({\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `${ref2Model}.Id`\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ConditionTypes.MatchReference:\r\n\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property]\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: !ispositive ? '\"wrong\"' : `${ref2Model}.Id`\r\n                                        });\r\n                                        props.push({\r\n                                            props: template,\r\n                                            type: ConditionTypes.MatchReference\r\n                                        });\r\n                                        properties.push({\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `${ref2Model}.Id`\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        is_model_parameter = _case.ref === 'model';\r\n                        let value = _case.values.length <= which ? _case.neg[which - _case.values.length] : _case.values[which];\r\n                        let temp = bindTemplate(testCaseProperty, {\r\n                            model: is_model_parameter ? 'model' : 'agent', // THis may need to expand\r\n                            property: `.${_case.property}`,\r\n                            value: value\r\n                        });\r\n                        if (is_model_parameter) {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Model });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Model\r\n                            })\r\n                        }\r\n                        else {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Agent });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Agent\r\n                            })\r\n                        }\r\n                        break;\r\n                }\r\n\r\n            });\r\n            return {\r\n                props: [\r\n                    ...props\r\n                ],\r\n                properties: [\r\n                    ...properties\r\n                ],\r\n                resultSuccess: ispositive\r\n            }\r\n        });\r\n\r\n        return res;\r\n    }\r\n    static GenerateTestCases(state, permission, agent, model) {\r\n        var graph = GetCurrentGraph(state);\r\n        let parent = null;\r\n        let manyToMany = null;\r\n        let many_to_many_register = '';\r\n        let testCase = fs.readFileSync(TEST_CASE, 'utf-8');\r\n        let result = [];\r\n        let methodNode = permission ? GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        }) : null;\r\n        parent = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.Parent);\r\n        manyToMany = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.ManyToManyModel);\r\n        many_to_many_register = fs.readFileSync('./app/templates/permissions/tests/many_to_many_register.tpl', 'utf-8');\r\n\r\n        switch (GetNodeProp(methodNode, NodeProperties.FunctionType)) {\r\n            case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                testCase = fs.readFileSync('./app/templates/permissions/tests/Get_ManyToMany_Agent_Value__IListChild.tpl', 'utf-8');\r\n                many_to_many_register = bindTemplate(many_to_many_register, {\r\n                    ref1type: GetCodeName(parent),\r\n                    ref1: FunctionTemplateKeys.Parent,\r\n                    ref2type: GetCodeName(model),\r\n                    ref2: FunctionTemplateKeys.Model,\r\n                });\r\n                break;\r\n            case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                testCase = fs.readFileSync('./app/templates/permissions/tests/Get_Parent$Child_Agent_Value__IListChild.tpl', 'utf-8');\r\n                many_to_many_register = bindTemplate(many_to_many_register, {\r\n                    ref1type: GetCodeName(parent),\r\n                    ref1: FunctionTemplateKeys.Parent,\r\n                    ref2type: GetCodeName(agent),\r\n                    ref2: FunctionTemplateKeys.Agent,\r\n                })\r\n                break;\r\n        }\r\n        if (methodNode) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permission && permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n                    let res = PermissionGenerator.EnumeratePermissionCases(graph, permission, method, agent, model);\r\n\r\n                    res = res.map((t, testIndex) => {\r\n                        var { props, resultSuccess, templates = {} } = t;\r\n\r\n                        return bindTemplate(bindTemplate(testCase, {\r\n                            many_to_many_register,\r\n                        }), {\r\n                                set_agent_properties: props.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).join(NEW_LINE),\r\n                                set_model_properties: props.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).join(NEW_LINE),\r\n                                set_parent_properties: props.filter(x => x.type === FunctionTemplateKeys.Parent).map(t => t.props).join(NEW_LINE),\r\n                                set_match_reference_properties: props.filter(x => x.type === ConditionTypes.MatchReference).map(t => t.props).join(NEW_LINE),\r\n                                set_match_many_reference_properties: props.filter(x => x.type === ConditionTypes.MatchManyReferenceParameter).map(t => t.props).join(NEW_LINE),\r\n                                agent_type: GetCodeName(agent),\r\n                                model: GetCodeName(model),\r\n                                many_to_many: GetCodeName(manyToMany),\r\n\r\n                                parent: GetCodeName(parent),\r\n                                method,\r\n                                test: `_${GetCodeName(agent)}_${GetCodeName(model)}_${method}_${testIndex}`,\r\n                                result: resultSuccess ? 'true' : 'false',\r\n                                function_name: GetCodeName(permission) + method,\r\n                                ...templates\r\n                            });\r\n                    })\r\n                    result = [...result, ...res];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    // static GenerateTestCases(state, permission, agent, model) {\r\n    //     var graph = GetCurrentGraph(state);\r\n    //     let testCase = fs.readFileSync(TEST_CASE, 'utf-8');\r\n    //     let result = []\r\n    //     for (var method in Methods) {\r\n    //         var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n    //         if (permission && permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n    //             let res = PermissionGenerator.EnumeratePermissionCases(graph, permission, method, agent, model);\r\n    //             res = res.map((t, testIndex) => {\r\n    //                 var { agentProps, itemProps, resultSuccess } = t;\r\n    //                 return bindTemplate(testCase, {\r\n    //                     set_agent_properties: agentProps.join(NEW_LINE),\r\n    //                     set_model_properties: itemProps.join(NEW_LINE),\r\n    //                     agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n    //                     model: GetNodeProp(model, NodeProperties.CodeName),\r\n    //                     method,\r\n    //                     test: `_${GetNodeProp(agent, NodeProperties.CodeName)}_${GetNodeProp(model, NodeProperties.CodeName)}_${method}_${testIndex}`,\r\n    //                     result: resultSuccess ? 'true' : 'false',\r\n    //                     function_name: GetNodeProp(permission, NodeProperties.CodeName) + method\r\n    //                 });\r\n    //             })\r\n    //             result = [...result, ...res];\r\n    //         }\r\n    //     }\r\n    //     return result;\r\n    // }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let permissions = NodesByType(state, NodeTypes.Permission);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testTemplate = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let _permissionInterface = fs.readFileSync(PERMISSIONS_INTERFACE, 'utf-8');\r\n        let _permissionImplementation = fs.readFileSync(PERMISSIONS_IMPL, 'utf-8');\r\n        let _permissionInterfaceMethods = fs.readFileSync(PERMISSIONS_INTERFACE_METHODS, 'utf-8');\r\n        let _permissionMethods = fs.readFileSync(PERMISSIONS_METHODS, 'utf-8');\r\n        let _permissionArbiters = fs.readFileSync(PERMISSIONS_ARBITER_PROP, 'utf-8');\r\n        let result = {};\r\n\r\n        agents.map(agent => {\r\n            var agentPermissionFunctions = {};\r\n            let streamProcessChangeClassExtension = _permissionImplementation;\r\n            let permissionInterface = _permissionInterface;\r\n            let testPermission = _testTemplate;\r\n            let methodImplementations = [];\r\n            let methodInterfaces = [];\r\n            let testMethodPermisionCases = [];\r\n            let arbiters = [];\r\n            models.map(model => {\r\n                let matchingPermissionNodes = permissions.filter(permission => PermissionGenerator.PermissionMatches(permission, agent, model));\r\n                if (!matchingPermissionNodes || !matchingPermissionNodes.length) {\r\n                    return;\r\n                }\r\n                let permissionCases = [];\r\n                let permissionCodeNames = [];\r\n                matchingPermissionNodes.map(matchingPermissionNode => {\r\n                    if (matchingPermissionNode) {\r\n                        permissionCodeNames.push(GetNodeProp(matchingPermissionNode, NodeProperties.CodeName));\r\n                        let temp = PermissionGenerator.GenerateCases(state, matchingPermissionNode, agent, model);\r\n                        let testTemp = PermissionGenerator.GenerateTestCases(state, matchingPermissionNode, agent, model);\r\n                        permissionCases.push(temp);\r\n                        testMethodPermisionCases.push(...testTemp);\r\n                    }\r\n                })\r\n                permissionCases.map((perms, index) => {\r\n                    for (var permKey in perms) {\r\n                        let cases = perms[permKey];\r\n                        cases.map(t => {\r\n                            if (t && t.arbiter) {\r\n                                arbiters.push(t);\r\n                            }\r\n                        })\r\n                        let permissionMethods = _permissionMethods;\r\n                        let permissionInterfaceMethods = _permissionInterfaceMethods;\r\n                        permissionMethods = bindTemplate(permissionMethods, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            agent: `value`,\r\n                            method: permKey,\r\n                            cases: cases.map(c => jNL + Tabs(4) + c.template).join(''),\r\n                            case_result: jNL + Tabs(4) + `result = ${cases.map(c => c.variable).join(' && ')};`\r\n                        });\r\n                        permissionInterfaceMethods = bindTemplate(permissionInterfaceMethods, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: `value`,\r\n                            method: permKey\r\n                        });\r\n                        methodInterfaces.push(permissionInterfaceMethods);\r\n                        methodImplementations.push(permissionMethods);\r\n\r\n                    }\r\n                });\r\n            }).join(jNL);\r\n            arbiters = arbiters.map(t => t.arbiter).unique(x => x).map(t => {\r\n                return bindTemplate(_permissionArbiters, {\r\n                    arbiter: t\r\n                })\r\n            }).join(jNL)\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                arbiters,\r\n                methods: methodImplementations.join(jNL + jNL)\r\n            });\r\n            permissionInterface = bindTemplate(permissionInterface, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                methods: methodInterfaces.join(jNL + jNL)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                tname: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}Tests`,\r\n                iname: `IPermissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        arbiters && arbiters.length ? `${namespace}${NameSpace.Controllers}` : null,\r\n                        `${namespace}${NameSpace.Constants}`].filter(x => x),\r\n                    namespace,\r\n                    space: NameSpace.Permissions\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: permissionInterface,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: bindTemplate(testPermission, {\r\n                        tests: testMethodPermisionCases.join(NEW_LINE),\r\n                        name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                    }),\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst VALIDATION_CLASS = './app/templates/validation/validation_class.tpl';\r\nconst VALIDATION_TEST = './app/templates/validation/tests/validation.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst VALIDATION_PROPERTY = './app/templates/validation/validation_property.tpl';\r\n\r\nexport default class ValidationRuleGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => {\r\n            return Object.keys(x.values.cases).length\r\n        });\r\n\r\n        var enumeration = ValidationRuleGenerator.enumerate(vects);\r\n        return enumeration;\r\n    }\r\n    static enumerate(vects, j = 0) {\r\n        var results = [];\r\n\r\n        if (j < vects.length)\r\n            for (var i = 0; i < vects[j]; i++) {\r\n                var rest = ValidationRuleGenerator.enumerate(vects, j + 1);\r\n                var temp = [i];\r\n                if (rest.length) {\r\n                    rest.map(r => {\r\n                        results.push([...temp, ...r])\r\n                    });\r\n                }\r\n                else {\r\n                    results.push(temp);\r\n                }\r\n            }\r\n        return results;\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static GenerateValidationCases(graph, validatorNode) {\r\n\r\n        var model = GetNodeProp(validatorNode, NodeProperties.ValidatorModel);\r\n        var validator = GetNodeProp(validatorNode, NodeProperties.Validator);\r\n        let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n        var validation_test_vectors = [];\r\n        Object.keys(validatorProperties).map(property => {\r\n            let propertyNode = GraphMethods.GetNode(graph, property);\r\n            let validatorPs = validatorProperties[property];\r\n\r\n            return Object.keys(validatorPs.validators).map(vld => {\r\n                let validators = validatorPs.validators[vld];\r\n                let node = GraphMethods.GetNode(graph, validators.node);\r\n                let attribute_type_arguments = '';\r\n                if (node) {\r\n                    switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                        case NodeTypes.ExtensionType:\r\n                            if (validators && validators.extension) {\r\n                                let temp = { '_ _': '\"__ _ __\"' };\r\n                                attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                    if (validators.extension[ext]) {\r\n                                        temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                        return temp[`$${ext}`];\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: temp, invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                            }\r\n                            break;\r\n                        case NodeTypes.Enumeration:\r\n                            if (validators && validators.enumeration) {\r\n                                let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                    if (validators.enumeration[ext]) {\r\n                                        return `${enumName}.${MakeConstant(ext)}`\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                if (ValidationCases[validators.type]) {\r\n                    validation_test_vectors.push({\r\n                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                        values: ValidationCases[validators.type]\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n        let testProps = vectors.map((vector, index) => {\r\n            let successCase = true;\r\n            let propertyInformation = [];\r\n            let properylines = vector.map((v, vindex) => {\r\n                var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                if (typeof (projected_value) === 'function') {\r\n                    projected_value = projected_value();\r\n                }\r\n                else {\r\n                    if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                        _case = '$$';\r\n                    }\r\n                }\r\n                successCase = successCase && (_case || [false])[0] === '$';\r\n                let propline = ValidationRuleGenerator.Tabs(3) + `{{model}}.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                propertyInformation.push({\r\n                    set_properties: propline,\r\n                    property: validation_test_vectors[vindex].property,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                })\r\n                return propline;\r\n            }).join(NEW_LINE);\r\n            let temp = {\r\n                resultSuccess: successCase,\r\n                propertyInformation,\r\n                set_properties: properylines,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            };\r\n\r\n            return temp;\r\n        });\r\n        return testProps;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let nodes = NodesByType(state, NodeTypes.Validator);\r\n        let _validation_class = fs.readFileSync(VALIDATION_CLASS, 'utf-8');\r\n        let _validation_property = fs.readFileSync(VALIDATION_PROPERTY, 'utf-8');\r\n        let _validation_test = fs.readFileSync(VALIDATION_TEST, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        nodes.map(node => {\r\n            var agent = GetNodeProp(node, NodeProperties.ValidatorAgent);\r\n            var model = GetNodeProp(node, NodeProperties.ValidatorModel);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var funct = GetNodeProp(node, NodeProperties.ValidatorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var validator = GetNodeProp(node, NodeProperties.Validator);\r\n            let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n            var validation_test_vectors = [];\r\n            let propertyValidationStatements = Object.keys(validatorProperties).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = validatorProperties[property];\r\n\r\n                return Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"__ _ __\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`$${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp, invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                if (validators && validators.enumeration) {\r\n                                    let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                    let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                    attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                        if (validators.enumeration[ext]) {\r\n                                            return `${enumName}.${MakeConstant(ext)}`\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    var templateRes = bindTemplate(_validation_property, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`\r\n                    });\r\n                    return templateRes + NEW_LINE\r\n                }).join('');\r\n            }).join('');\r\n            var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n            let testProps = vectors.map((vector, index) => {\r\n                let validation_test = _validation_test;\r\n                let successCase = true;\r\n                let properylines = vector.map((v, vindex) => {\r\n                    var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                    var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                    if (typeof (projected_value) === 'function') {\r\n                        projected_value = projected_value();\r\n                    }\r\n                    else {\r\n                        if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                            _case = '$$';\r\n                        }\r\n                    }\r\n                    successCase = successCase && (_case || [false])[0] === '$';\r\n                    return ValidationRuleGenerator.Tabs(3) + `model.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                }).join(NEW_LINE);\r\n                let temp = bindTemplate(_validation_test, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    test_name: `Test${index}`,\r\n                    attribute_parameters: \"\",\r\n                    expected_value: successCase ? 'true' : 'false',\r\n                    set_properties: properylines,\r\n                    attribute_type: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                    properties: propertyValidationStatements,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                });\r\n\r\n                return temp;\r\n            });\r\n\r\n            var templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n            var testTemplate = bindTemplate(_testClass, {\r\n                name: GetNodeProp(node, NodeProperties.CodeName),\r\n                tests: testProps.join(NEW_LINE)\r\n            })\r\n\r\n            templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}AttributeTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Validations\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Validations}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                }),\r\n            };\r\n        });\r\n\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE = './app/templates/stream_process/stream_process_orchestration.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE = './app/templates/stream_process/stream_process_orchestration_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS = './app/templates/stream_process/stream_process_orchestration_agenttype_methods.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE = './app/templates/stream_process/stream_process_orchestration_agenttype_methods_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES = './app/templates/stream_process/stream_process_orchestration_selected_staged_changes.tpl';\r\nconst STREAM_METHOD_TESTS = './app/templates/stream_process/tests/stream_process_execution_tests.tpl';\r\nconst CREATE_MODEL_TESTS = './app/templates/stream_process/tests/create_model_tests.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nexport default class StreamProcessOrchestrationGenerator {\r\n    static GenerateStaticMethods(models) {\r\n\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES, 'utf-8');\r\n        let staticMethods = models.map(model => {\r\n            let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n            let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n            let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                model: modelCode,\r\n                [`model#allupper`]: modelCode.toUpperCase(),\r\n                [`model#lower`]: modelCode.toLowerCase()\r\n            });\r\n\r\n            return res + jNL\r\n        });\r\n\r\n        return staticMethods;\r\n    }\r\n    static GenerateAgentMethods(state) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS, 'utf-8');\r\n\r\n        let result = [];\r\n        let modelexecution = [];\r\n        models.map(model => {\r\n            modelexecution.push(Tabs(4) + `await Process${GetNodeProp(model, NodeProperties.CodeName)}Changes();` + jNL);\r\n        })\r\n        result.push(`       public async Task ProcessStagedChanges(Distribution distribution = null) {\r\n${modelexecution.join('')}\r\n        }\r\n`)\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                var res = bindTemplate(_streamAgentMethods, {\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase()\r\n                })\r\n                result.push(res);\r\n            });\r\n        });\r\n\r\n        return result.join('')\r\n    }\r\n    static GenerateAgentInterfaceMethods(state) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE, 'utf-8');\r\n\r\n        let result = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                var res = bindTemplate(_streamAgentMethods, {\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase()\r\n                })\r\n                result.push(res);\r\n            });\r\n        });\r\n\r\n        return result.join('')\r\n    }\r\n    static GenerateStrappers(models) {\r\n        let result = [];\r\n        result.push(Tabs(4) + `validator = RedStrapper.Resolve<IValidator>();` + jNL);\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}Arbiter = RedStrapper.Resolve<IRedArbiter<${modelName}>>();` + jNL);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}ChangeArbiter = RedStrapper.Resolve<IRedArbiter<${modelName}Change>>();` + jNL);\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}ResponseArbiter = RedStrapper.Resolve<IRedArbiter<${modelName}Response>>();` + jNL);\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}Executor = RedStrapper.Resolve<I${modelName}Executor>();` + jNL);\r\n            }\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStrappersInstances(models) {\r\n        let result = [];\r\n\r\n        result.push(Tabs(3) + `public IValidator validator;` + jNL);\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(3) + `public IRedArbiter<${modelName}> ${modelName.toLowerCase()}Arbiter;` + jNL)\r\n            result.push(Tabs(3) + `public IRedArbiter<${modelName}Change> ${modelName.toLowerCase()}ChangeArbiter;` + jNL)\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(3) + `public IRedArbiter<${modelName}Response> ${modelName.toLowerCase()}ResponseArbiter;` + jNL);\r\n                result.push(Tabs(3) + `public I${modelName}Executor ${modelName.toLowerCase()}Executor;` + jNL);\r\n            }\r\n\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateProcessTests(state) {\r\n        let graph = GetRootGraph(state);\r\n        let functions = NodesByType(state, NodeTypes.Method);\r\n        let res = '';\r\n        // STREAM_METHOD_TESTS\r\n        let _stramMethodTests = fs.readFileSync(STREAM_METHOD_TESTS, 'utf-8');\r\n        let _createModelTests = fs.readFileSync(CREATE_MODEL_TESTS, 'utf-8');\r\n\r\n        res = functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            //      let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var userTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.User]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    //   cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, method, agentTypeNode, modelNode);\r\n                }\r\n            }\r\n            if (modelNode && agentTypeNode && func) {\r\n                return bindTemplate(_stramMethodTests, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                    function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                    test_name: `${GetNodeProp(func, NodeProperties.CodeName)}Test`\r\n                });\r\n            }\r\n        }).filter(x => x).join(NEW_LINE);\r\n        let func_Cases = [];\r\n        functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n                    let validatorCases = null;\r\n                    if (validators && validators.length) {\r\n                        validatorCases = validators.map(validator => {\r\n                            return {\r\n                                cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                                isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                            };\r\n                        })\r\n                    }\r\n                    if (validatorCases)\r\n                        enumerate(validatorCases.map(x => x.cases.length)).map((_enum, caseindex) => {\r\n                            let v1 = validatorCases[0].cases[_enum[0]];\r\n                            let v2 = validatorCases[1].cases[_enum[1]];\r\n                            let agent_properties = '';\r\n                            let model_properties = '';\r\n                            if (!validatorCases[1].isModel) {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                            }\r\n                            else {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                            }\r\n                            // cases.map((_case, caseindex) => {\r\n                            func_Cases.push(bindTemplate(_createModelTests, {\r\n                                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                                agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                                set_agent_propeties: agent_properties,\r\n                                set_model_properties: model_properties,\r\n                                function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                                test_result: !(v1.resultSuccess && v2.resultSuccess),\r\n                                test_name: `${GetNodeProp(func, NodeProperties.CodeName)}${caseindex}Test`\r\n                            }));\r\n\r\n                        })\r\n                    //  });\r\n                }\r\n            }\r\n        }).join(NEW_LINE);\r\n        return res + NEW_LINE + func_Cases.join(NEW_LINE);\r\n    }\r\n    static EnumerateFunctionValidators(state, func) {\r\n        let graph = GetRootGraph(state);\r\n        let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n        let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n        let validatorCases = null;\r\n        if (validators && validators.length) {\r\n            validatorCases = validators.map(validator => {\r\n                return {\r\n                    cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                    isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                };\r\n            })\r\n        }\r\n        return enumerate((validatorCases || []).map(x => x.cases.length)).map((_enum, caseindex) => {\r\n            let v1 = validatorCases[0].cases[_enum[0]];\r\n            let v2 = validatorCases[1].cases[_enum[1]];\r\n            let agent_properties = '';\r\n            let model_properties = '';\r\n            if (!validatorCases[1].isModel) {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                return {\r\n                    agent: v2,\r\n                    model: v1\r\n                }\r\n            }\r\n            else {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                return {\r\n                    model: v2,\r\n                    agent: v1\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static GetFunctionValidators(state, funct) {\r\n        return NodesByType(state, NodeTypes.Validator).filter(x => GetNodeProp(x, NodeProperties.ValidatorFunction) === funct.id);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE, 'utf-8');\r\n        let _streamProcessInterfaceTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let agent_methods = StreamProcessOrchestrationGenerator.GenerateAgentMethods(state);\r\n        let agent_methods_interface = StreamProcessOrchestrationGenerator.GenerateAgentInterfaceMethods(state);\r\n        let statics = StreamProcessOrchestrationGenerator.GenerateStaticMethods(models);\r\n        let strappers = StreamProcessOrchestrationGenerator.GenerateStrappers(models);\r\n        let strapperInstances = StreamProcessOrchestrationGenerator.GenerateStrappersInstances(models);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.join(''),\r\n            agent_type_methods: agent_methods,\r\n            arbiters_strappers: strappers,\r\n            arbiter_instances: strapperInstances\r\n        });\r\n        let stream_process_tests = StreamProcessOrchestrationGenerator.GenerateProcessTests(state);\r\n        let testTemplate = bindTemplate(_testClass, {\r\n            name: StreamProcessOrchestration,\r\n            tests: stream_process_tests\r\n        })\r\n        _streamProcessInterfaceTemplate = bindTemplate(_streamProcessInterfaceTemplate, {\r\n            agent_type_methods: agent_methods_interface\r\n        });\r\n        return {\r\n            [StreamProcessOrchestration]: {\r\n                id: StreamProcessOrchestration,\r\n                name: StreamProcessOrchestration,\r\n                iname: `I${StreamProcessOrchestration}`,\r\n                tname: `${StreamProcessOrchestration}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Linq.Expressions',\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: _streamProcessInterfaceTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules, FilterUI, FilterRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/itemfilters/item_filter.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE = './app/templates/models/itemfilters/filter_property_function_value.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE_EQUALS = './app/templates/models/itemfilters/filter_property_function_value_equals.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelItemFilterGenerator {\r\n    static predicates(nodes) {\r\n        return nodes.map(x => `${GetCodeName(x)}.Filter()`)\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf-8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let modelitemfilters = NodesByType(state, NodeTypes.ModelItemFilter);\r\n        modelitemfilters.map(modelitemfilter => {\r\n\r\n\r\n            let itemFilter = GetNodeProp(modelitemfilter, NodeProperties.ModelItemFilter);\r\n            let filterModel = GetNodeProp(modelitemfilter, NodeProperties.FilterModel);\r\n            let funcs = [];\r\n            if (filterModel && filterModel.properties) {\r\n                let filterPropFunction = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE, 'utf-8');\r\n                let filters = [];\r\n                Object.keys(filterModel.properties).map(prop => {\r\n                    let propName = GetCodeName(prop);\r\n                    if (filterModel.properties[prop]) {\r\n                        Object.keys(filterModel.properties[prop].validators).map(validator => {\r\n                            let validatorName = filterModel.properties[prop].validators[validator];\r\n                            let validatorValue = '';\r\n                            let _function = '==';\r\n                            if (validatorName && validatorName.type)\r\n                                switch (validatorName.type) {\r\n                                    case FilterRules.EqualsTrue:\r\n                                        validatorValue = 'true';\r\n                                        break;\r\n                                    case FilterRules.EqualsFalse:\r\n                                        validatorValue = 'false';\r\n                                        break;\r\n                                }\r\n                            let filterPropFunctionValueEquals = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE_EQUALS, 'utf-8');\r\n                            filters.push(bindTemplate(filterPropFunctionValueEquals, {\r\n                                property: propName,\r\n                                value: validatorValue,\r\n                                function: _function\r\n                            }));\r\n                        })\r\n                    }\r\n                });\r\n                funcs.push(bindTemplate(filterPropFunction, {\r\n                    filter: filters.join(''),\r\n                    model: GetCodeName(itemFilter)\r\n                }))\r\n            }\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                code_name: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                filter: funcs\r\n            });\r\n\r\n            result[GetNodeProp(modelitemfilter, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(modelitemfilter, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport StreamProcessOrchestrationGenerator from './streamprocessorchestrationgenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ModelItemFilterGenerator from './modelitemfiltergenerator';\r\n\r\nconst MAESTRO_CLASS_TEMPLATE = './app/templates/maestro/maestro.tpl';\r\nconst MAESTRO_INTERFACE_TEMPLATE = './app/templates/maestro/imaestro.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst MAESTRO_FUNCTION_TESTS = './app/templates/maestro/tests/maestro.tpl';\r\nconst MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS = './app/templates/maestro/tests/maestro_same_agent_model.tpl';\r\nconst get_agent_manytomany_listchild_interface = './app/templates/maestro/tests/get_agent_manytomany_listchild_interface.tpl';\r\nconst MAESTRO_FUNCTION_GET_TESTS = './app/templates/maestro/tests/maestro_get.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class MaestroGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let maestros = NodesByType(state, NodeTypes.Maestro);\r\n\r\n        let _maestroTemplateClass = fs.readFileSync(MAESTRO_CLASS_TEMPLATE, 'utf-8');\r\n        let _MAESTRO_INTERFACE_TEMPLATE = fs.readFileSync(MAESTRO_INTERFACE_TEMPLATE, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let testFunctionTemplate = fs.readFileSync(MAESTRO_FUNCTION_TESTS, 'utf-8');\r\n        let testFunctionGetSameParentTemplate = fs.readFileSync(MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS, 'utf-8');\r\n\r\n        let testFunctionGetTemplate = fs.readFileSync(MAESTRO_FUNCTION_GET_TESTS, 'utf-8');\r\n        let root = GetRootGraph(state);\r\n        let graph = GetCurrentGraph(state);\r\n        let result = {};\r\n        maestros.map(maestro => {\r\n            let maestroTemplateClass = _maestroTemplateClass;\r\n            let functions = '';\r\n            let functionsInterface = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(maestro, NodeProperties.CodeName)}`;\r\n\r\n            let maestro_functions = [];\r\n            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                id: maestro.id,\r\n                type: LinkType.FunctionLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let arbiters = [];\r\n            let permissions = [];\r\n            let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n            maestro_functions = tempfunctions;\r\n            let permissionValidationCases = [];\r\n            if (maestro_functions.length) {\r\n                maestro_functions.map(maestro_function => {\r\n                    let function_type = GetNodeProp(maestro_function, NodeProperties.FunctionType);\r\n                    var ft = MethodFunctions[function_type];\r\n                    if (ft) {\r\n\r\n                        let tempFunction = ft.template;\r\n                        let interfaceFunction = ft.interface;\r\n                        let value_type = '';\r\n                        let parent_type = '';\r\n                        if (ft.parentGet) {\r\n                            value_type = 'string';\r\n                        }\r\n                        let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                        let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                        let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                        let agentTypeNode = null;\r\n                        let userTypeNode = null;\r\n                        let parentNode = null;\r\n                        let permissionNode = null;\r\n                        let modelFilterNode = null;\r\n                        let manyToManyNode = null;\r\n                        let modelNode = null;\r\n                        let methodProps = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                        let predicates = '';\r\n                        if (methodProps) {\r\n                            agentTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.AgentType]);\r\n                            modelNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Model]);\r\n                            userTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.User]);\r\n                            permissionNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Permission]);\r\n                            modelFilterNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ModelFilter]);\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            parentNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Parent]);\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            var modelItemFilters = GraphMethods.GetLinkChain(state, {\r\n                                id: maestro_function.id,\r\n                                links: [{\r\n                                    type: LinkType.ModelItemFilter,\r\n                                    direction: GraphMethods.SOURCE\r\n                                }]\r\n                            });\r\n                            predicates = ModelItemFilterGenerator.predicates(modelItemFilters);\r\n                            if (predicates.length) {\r\n                                predicates = ',' + predicates.join();\r\n                            }\r\n                            else {\r\n                                predicates = '';\r\n                            }\r\n                        }\r\n\r\n                        let agent = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let model_type = modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : `{maestro_generator_mising_model}`;\r\n                        let agent_type = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}` : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let methodType = GetNodeProp(maestro_function, NodeProperties.MethodType);\r\n                        let connect_type = manyToManyNode ? GetNodeProp(manyToManyNode, NodeProperties.CodeName) : '{maestro_connection_type_missing}';\r\n                        parent_type = parentNode ? GetNodeProp(parentNode, NodeProperties.CodeName) : '{missing parent name}';\r\n                        if (parentNode)\r\n                            arbiters.push(parent_type);\r\n                        let manyNodes = GraphMethods.GetManyToManyNodes(graphRoot, [modelNode ? modelNode.id : false, agentTypeNode ? agentTypeNode.id : null].filter(x => x)) || [];\r\n                        arbiters.push(...manyNodes.map(manyNode => {\r\n                            return GetNodeProp(manyNode, NodeProperties.CodeName);\r\n                        }));\r\n                        arbiters.push(agent_type, model_type);\r\n                        permissions.push({ agent_type, model_type });\r\n                        let value = '';\r\n                        let agentAndModelIsTheSame = false;\r\n                        if (ft.parentGet) {\r\n                            value = parentNode ? `${GetNodeProp(parentNode, NodeProperties.CodeName)}`.toLowerCase() : '{missing parent name}';\r\n                            if (agentTypeNode && parentNode) {\r\n                                agentAndModelIsTheSame = agentTypeNode.id === parentNode.id;\r\n                            }\r\n                        }\r\n                        else {\r\n                            value = modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`;\r\n                        }\r\n\r\n                        let bindOptions = {\r\n                            function_name: functionName,\r\n                            agent_type: agent_type,\r\n                            parent_type,\r\n                            agent: agent,\r\n                            value_type,\r\n                            value,\r\n                            model: model_type,\r\n                            connect_type,\r\n                            predicates,\r\n                            maestro_function: functionName,\r\n                            filter_function: modelFilterNode ? GetNodeProp(modelFilterNode, NodeProperties.CodeName) : '{missing filter node}',\r\n                            user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                            http_route: httpRoute || '{maestro_generator_http_method',\r\n                            http_method: httpMethod || '{maestro_generator_http_method',\r\n                            user_instance: userTypeNode ? `${GetNodeProp(userTypeNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_userNode}`,\r\n                            output_type: modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : '{maestro_generator_missing_model}',\r\n                            maestro_interface: ToInterface(maestroName),\r\n                            permission_function: permissionNode ? GetNodeProp(permissionNode, NodeProperties.CodeName) + methodType : `{MISSING_PERMISSION_FUNCTION}`,\r\n                            input_type: modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : '{maestro_generator_missing_model}'\r\n                        };\r\n                        tempFunction = bindTemplate(tempFunction, bindOptions);\r\n                        interfaceFunction = bindTemplate(interfaceFunction, bindOptions)\r\n\r\n                        functions += jNL + tempFunction;\r\n                        functionsInterface += jNL + interfaceFunction;\r\n\r\n                        var cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, methodType, agentTypeNode, modelNode);\r\n                        let validators = StreamProcessOrchestrationGenerator.EnumerateFunctionValidators(state, maestro_function);\r\n                        if (validators && cases) {\r\n                            validators.map(validator => {\r\n                                cases.map(_case => {\r\n                                    let pvc = {};\r\n                                    let pvc2 = {};\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ...validator.agent.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.properties.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).map((t, index) => {\r\n                                                if (validator.agent.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.agentProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ...validator.model.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).map((t, index) => {\r\n                                                if (validator.model.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.itemProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.model = (temp);\r\n                                    }\r\n\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ..._case.agentProperties.map((t, index) => _case.agentProps[index]),\r\n                                            ...validator.agent.propertyInformation.map((t, index) => {\r\n                                                if (_case.agentProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.agent.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ..._case.itemProperties.map((t, index) => _case.itemProps[index]),\r\n                                            ...validator.model.propertyInformation.map((t, index) => {\r\n                                                if (_case.itemProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.model.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.model = (temp);\r\n                                    }\r\n\r\n                                    permissionValidationCases.push(pvc2);\r\n                                    permissionValidationCases.push(pvc);\r\n                                })\r\n                            })\r\n\r\n                            permissionValidationCases = permissionValidationCases.map((pvc, index) => {\r\n                                //Generate tests.\r\n                                let templ = testFunctionTemplate;\r\n                                switch (ft.method) {\r\n                                    case Methods.Get:\r\n                                    case Methods.GetAll:\r\n                                        templ = testFunctionGetTemplate;\r\n                                        if (agentAndModelIsTheSame) {\r\n                                            templ = testFunctionGetSameParentTemplate;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                switch (function_type) {\r\n                                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                                        templ = fs.readFileSync(get_agent_manytomany_listchild_interface, 'utf-8');\r\n                                        break;\r\n                                }\r\n                                return bindTemplate(templ, {\r\n                                    agent: agent_type,\r\n                                    many_to_many: GetNodeProp(manyToManyNode, NodeProperties.CodeName),\r\n                                    parent: GetNodeProp(parentNode, NodeProperties.CodeName),\r\n                                    set_many_to_many_properties: '//{not set yet}',\r\n                                    value: modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`,\r\n                                    model: model_type,\r\n                                    function_name: functionName,\r\n                                    maestro: maestroName,\r\n                                    set_agent_properties: pvc.agent,\r\n                                    user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                                    set_model_properties: pvc.model,\r\n                                    testname: `${functionName}Test${index}`\r\n                                });\r\n                            });\r\n                            // Do analysis on whether these validations are completely bonk.\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n            arbiters = arbiters.unique();\r\n            permissions = permissions.unique(x => `${x.agent_type}`);\r\n            var injectedServices = arbiters.map(x => `IRedArbiter<${x}> _arbiter${x}`);\r\n            var injectedPermissionServices = permissions.map(x => `IPermissions${x.agent_type} _${x.agent_type.toLowerCase()}Permissions`);\r\n            var set_properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(4) + `arbiter${x} = _arbiter${x};`);\r\n            var set_permissions = permissions.map(x => jNL + MaestroGenerator.Tabs(4) + `${x.agent_type.toLowerCase()}Permissions = _${x.agent_type.toLowerCase()}Permissions;`);\r\n            var properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IRedArbiter<${x}> arbiter${x};`);\r\n            var permissions_properties = permissions.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IPermissions${x.agent_type} ${x.agent_type.toLowerCase()}Permissions;`);\r\n            let testTemplate = bindTemplate(_testClass, {\r\n                name: codeName,\r\n                tests: permissionValidationCases.join(NEW_LINE)\r\n            })\r\n            maestroTemplateClass = bindTemplate(maestroTemplateClass, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions\r\n            });\r\n            let maestro_interface_template = bindTemplate(_MAESTRO_INTERFACE_TEMPLATE, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions: functionsInterface\r\n            })\r\n            result[GetNodeProp(maestro, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                name: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                iname: `I${GetNodeProp(maestro, NodeProperties.CodeName)}`,\r\n                tname: `${GetNodeProp(maestro, NodeProperties.CodeName)}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: maestroTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Parameters}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: maestro_interface_template,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Controllers}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_change_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_change_class_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS = './app/templates/stream_process/tests/stream_process_change_class_constructor.tpl';\r\n\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeParameterGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf-8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf-8');\r\n        let _streamProcessChangeClassConstrictorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS, 'utf-8');\r\n        let result = {};\r\n        models.map(agent => {\r\n            let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n            let testClass = _testClass;\r\n            let properties = '';\r\n            let statics = '';\r\n            let constructors = [];\r\n            let tests = [];\r\n            let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf-8');\r\n            agents.map(model => {\r\n                Object.values(Methods).filter(x => x !== Methods.Get).map(method => {\r\n\r\n                    let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n\r\n                    streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                        model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        value: GetNodeProp(agent, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetNodeProp(model, NodeProperties.CodeName),\r\n                        agent: GetNodeProp(model, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    let streamProcessChangeClassConstrictorsTest = _streamProcessChangeClassConstrictorsTest;\r\n\r\n                    streamProcessChangeClassConstrictorsTest = bindTemplate(streamProcessChangeClassConstrictorsTest, {\r\n                        model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        value: GetNodeProp(agent, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetNodeProp(model, NodeProperties.CodeName),\r\n                        agent: GetNodeProp(model, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    constructors.push(streamProcessChangeClassConstructors);\r\n                    tests.push(streamProcessChangeClassConstrictorsTest);\r\n\r\n                })\r\n            }).join(jNL);\r\n\r\n            let staticDic = {\r\n                model: `${GetNodeProp(agent, NodeProperties.CodeName)}Change`\r\n            };\r\n            constructors.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL)\r\n            });\r\n\r\n            testClass = bindTemplate(testClass, {\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Change`,\r\n                tests: tests.unique(x => x).join('')\r\n            })\r\n\r\n\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Change`,\r\n                tname: `${GetNodeProp(agent, NodeProperties.CodeName)}ChangeTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONSTANTS_CLASS = './app/templates/constants.tpl';\r\n\r\nexport default class ConstantsGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { values = [], state } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _constantsClass = fs.readFileSync(CONSTANTS_CLASS, 'utf-8');\r\n        let result = {};\r\n        values.map(value => {\r\n            let { model, name } = value;\r\n            let constantsClass = _constantsClass;\r\n            let constructors = [];\r\n            var consts = Object.keys(model).map(key => {\r\n                let template = `public const string {{name}} = \"{{value}}\";`\r\n                let temp = bindTemplate(template, {\r\n                    name: key,\r\n                    value: model[key]\r\n                });\r\n                return ConstantsGenerator.Tabs(3) + temp;\r\n            }).join(jNL)\r\n\r\n            constantsClass = bindTemplate(constantsClass, {\r\n                constants: consts,\r\n                constants_type: name\r\n            });\r\n\r\n            result[name] = {\r\n                id: name,\r\n                name: name,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: constantsClass,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Constants\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_TEMPLATE = './app/templates/stream_process/stream_process.tpl';\r\nconst STREAM_PROCESS_TEMPLATE_TESTS = './app/templates/stream_process/tests/stream_process.tpl';\r\nconst STREAM_PROCESS_FUNCTION_TEMPLATE = './app/templates/stream_process/stream_process_function.tpl';\r\n\r\nexport default class StreamProcessGenerator {\r\n    static GenerateStaticMethods(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_FUNCTION_TEMPLATE, 'utf-8');\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods;\r\n    }\r\n    static GenerateStaticMethodTests(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessTemplateTests = fs.readFileSync(STREAM_PROCESS_TEMPLATE_TESTS, 'utf-8');\r\n        let _streamProcessFunctionTemplate = _streamProcessTemplateTests;\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods.unique(x => x);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_TEMPLATE, 'utf-8');\r\n        let _streamProcessTemplateTests = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let statics = StreamProcessGenerator.GenerateStaticMethods(models);\r\n        let staticTests = StreamProcessGenerator.GenerateStaticMethodTests(models);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.join('')\r\n        });\r\n\r\n        _streamProcessTemplateTests = bindTemplate(_streamProcessTemplateTests, {\r\n            tests: staticTests.join(''),\r\n            name: 'StreamProcess'\r\n        });\r\n\r\n        return {\r\n            'StreamProcess': {\r\n                id: 'StreamProcess',\r\n                name: 'StreamProcess',\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Threading',\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplateTests,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        'System.Threading',\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_response_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST = './app/templates/stream_process/tests/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED = './app/templates/stream_process/stream_process_response_class_extention_constructor_failed.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeResponseGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf-8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf-8');\r\n        let _streamProcessChangeClassConstructorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST, 'utf-8');\r\n        let _streamProcessChangeClassConstructorsFailed = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED, 'utf-8');\r\n        let _test = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let result = {};\r\n        agents.map(agent => {\r\n            let constructors = [];\r\n            let tests = [];\r\n            let properties = '';\r\n            let statics = '';\r\n            let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n            let test = _test;\r\n            models.map(model2 => {\r\n                models.map(model => {\r\n                    Object.values(Methods).filter(x => x !== Methods.Get && x !== Methods.GetAll).map(method => {\r\n\r\n                        let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n                        let streamProcessChangeClassConstructorsFailed = _streamProcessChangeClassConstructorsFailed;\r\n                        let streamProcessChangeClassConstructorsTest = _streamProcessChangeClassConstructorsTest;\r\n                        let parameterTemplate = null;\r\n                        let arrange = '';\r\n                        if (method === Methods.Delete) {\r\n                            parameterTemplate = `${GetNodeProp(model2, NodeProperties.CodeName)}Change change, bool res`;\r\n                            arrange = `\r\n            var change = ${GetNodeProp(model2, NodeProperties.CodeName)}Change.Create();\r\n            var res = true;\r\n                            `;\r\n                        }\r\n                        else {\r\n                            parameterTemplate = `${GetNodeProp(model2, NodeProperties.CodeName)}Change change, ${GetNodeProp(model, NodeProperties.CodeName)} ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}`;\r\n                            arrange = `\r\n            var change = ${GetNodeProp(model2, NodeProperties.CodeName)}Change.Create();\r\n            var res =  ${GetNodeProp(model, NodeProperties.CodeName)}.Create();\r\n            change.Response = \"response\";\r\n            change.ChangeType = \"changeType\";\r\n                            `;\r\n                        }\r\n                        let parameter_properties = `\r\n            ${method === Methods.Delete ? '' : (`\r\n            result.IdValue = ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}.Id;`)}\r\n            result.Response = change.Response;\r\n            result.ChangeType = change.ChangeType;\r\n            `;\r\n                        let act = `\r\n            var response = ${GetNodeProp(agent, NodeProperties.CodeName)}Response.${method}(change, res);\r\n`;\r\n                        let assert = `\r\n            Assert.AreEqual(response.Response, change.Response);\r\n            Assert.AreEqual(response.ChangeType, change.ChangeType);\r\n`\r\n                        streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsTest = bindTemplate(streamProcessChangeClassConstructorsTest, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            model2: GetNodeProp(model2, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            assert,\r\n                            act,\r\n                            arrange,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsFailed = bindTemplate(streamProcessChangeClassConstructorsFailed, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n                        if (!tests.some(x => x === streamProcessChangeClassConstructorsTest)) {\r\n                            tests.push(streamProcessChangeClassConstructorsTest);\r\n                        }\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructors) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructors);\r\n\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructorsFailed) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructorsFailed);\r\n\r\n                    })\r\n                })\r\n            });\r\n\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                properties: ''\r\n            });\r\n            test = bindTemplate(test, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                properties: '',\r\n                tests: tests.join(jNL)\r\n            });\r\n\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                tname: `${GetNodeProp(agent, NodeProperties.CodeName)}ResponseTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: test,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace} ${NameSpace.Parameters} `,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n            };\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                `\r\nconst jNL = `\r\n                `\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst EXECUTOR_CLASS = './app/templates/executor/executor_class.tpl';\r\nconst EXECUTOR_INTERFACE = './app/templates/executor/executor_class_interface.tpl';\r\nconst EXECUTOR_CREATE = './app/templates/executor/create.tpl';\r\nconst EXECUTOR_ENTRY_METHODS = './app/templates/executor/executor_entry_methods.tpl';\r\nconst EXECUTOR_ENTRY_METHODS_INTERFACE = './app/templates/executor/executor_entry_methods_interface.tpl';\r\nconst EXECUTOR_METHOD_CASE = './app/templates/executor/entry_method_case.tpl';\r\nconst EXECUTOR_UPDATE = './app/templates/executor/update.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst EXECUTOR_METHODS = './app/templates/executor/executor_methods.tpl';\r\nconst EXECUTOR_METHODS_INTERFACE = './app/templates/executor/executor_methods_interface.tpl';\r\n\r\nexport default class ExecutorGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ExecutorGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let nodes = NodesByType(state, NodeTypes.Executor);\r\n        let _executor_class = fs.readFileSync(EXECUTOR_CLASS, 'utf-8');\r\n        let _executor_class_interface = fs.readFileSync(EXECUTOR_INTERFACE, 'utf-8');\r\n        let _executor_methods = fs.readFileSync(EXECUTOR_METHODS, 'utf-8');\r\n        let _executor_methods_interface = fs.readFileSync(EXECUTOR_METHODS_INTERFACE, 'utf-8');\r\n        let _executor_create = fs.readFileSync(EXECUTOR_CREATE, 'utf-8');\r\n        let _executor_update = fs.readFileSync(EXECUTOR_UPDATE, 'utf-8');\r\n        let _exe_method = fs.readFileSync(EXECUTOR_ENTRY_METHODS, 'utf-8');\r\n        let _exe_method_interface = fs.readFileSync(EXECUTOR_ENTRY_METHODS_INTERFACE, 'utf-8');\r\n        let _exe_case = fs.readFileSync(EXECUTOR_METHOD_CASE, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let agentFunctionDic = {};\r\n        let agentFunctionInterfaceDic = {};\r\n        let executor_entry_methods = [];\r\n        let agentModelDic = {};\r\n        let agmCombos = [];\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let allfunctions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n        allmodels.map(model => {\r\n            allagents.map(agent => {\r\n                Object.keys(Methods).map(meth => {\r\n                    let found = false;\r\n                    allfunctions.filter(x => GetNodeProp(x, NodeProperties.MethodType) === meth).map(fun => {\r\n                        found = true;\r\n                        agmCombos.push({\r\n                            agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            function: GetNodeProp(fun, NodeProperties.CodeName),\r\n                            method: GetNodeProp(fun, NodeProperties.MethodType)\r\n                        });\r\n                    });\r\n                    if (!found) {\r\n\r\n                        agmCombos.push({\r\n                            agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            method: meth\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n        })\r\n\r\n        nodes.map(node => {\r\n            var agent = GetNodeProp(node, NodeProperties.ExecutorAgent);\r\n            var model = GetNodeProp(node, NodeProperties.ExecutorModel);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var agentNode = GraphMethods.GetNode(graph, agent);\r\n            var funct = GetNodeProp(node, NodeProperties.ExecutorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var functType = GetNodeProp(node, NodeProperties.ExecutorFunctionType);\r\n            var functionNode = GraphMethods.GetNode(graph, funct);\r\n            var executor = GetNodeProp(node, NodeProperties.Executor);\r\n            let executorProperties = GraphMethods.getValidatorProperties(executor);\r\n            var validation_test_vectors = [];\r\n            let amdid = GetNodeProp(agentNode, NodeProperties.CodeName) + GetNodeProp(modelNode, NodeProperties.CodeName) + GetNodeProp(functionNode, NodeProperties.MethodType);\r\n            agentModelDic[amdid] = agentModelDic[amdid] || [];\r\n\r\n            agentModelDic[amdid].push({\r\n                agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                functType,\r\n                funct: GetNodeProp(functNode, NodeProperties.CodeName)\r\n            })\r\n\r\n            let propertyValidationStatements = Object.keys(executorProperties).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = executorProperties[property];\r\n\r\n                let properties = Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"_____\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    attribute_type_arguments = temp.filter(x => x).unique(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    let template = `result{{model_property}} = data{{model_property}};`;\r\n                    switch (validators.type) {\r\n                        case ExecutorRules.AgentReference:\r\n                            template = `result{{model_property}} = agent.Id;`\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    var templateRes = bindTemplate(template, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`\r\n                    });\r\n                    return ExecutorGenerator.Tabs(4) + templateRes + NEW_LINE\r\n                }).unique(x => x).join('');\r\n\r\n\r\n                return properties;\r\n            }).unique(x => x).join('');\r\n            let template = '{{not-defined template}}';\r\n            switch (functType) {\r\n                case Methods.Create:\r\n                    template = _executor_create;\r\n                    break;\r\n                case Methods.Update:\r\n                    template = _executor_update;\r\n                    break;\r\n            }\r\n            var templateRes = bindTemplate(template, {\r\n                property_sets: propertyValidationStatements,\r\n                model: `${GetNodeProp(modelNode, NodeProperties.CodeName)}`\r\n            });\r\n\r\n            // var vectors = ExecutorGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n\r\n            var templateRes = bindTemplate(_executor_methods, {\r\n                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                method_name: GetNodeProp(functionNode, NodeProperties.CodeName),\r\n                parameters: bindTemplate(`{{data}} data, {{agent}} agent, {{change}} change`, {\r\n                    data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                    change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`\r\n                }),\r\n                data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n            var templateResInterface = bindTemplate(_executor_methods_interface, {\r\n                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                method_name: GetNodeProp(functionNode, NodeProperties.CodeName),\r\n                parameters: bindTemplate(`{{data}} data, {{agent}} agent, {{change}} change`, {\r\n                    data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                    change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`\r\n                }),\r\n                data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n\r\n            // var testTemplate = bindTemplate(_testClass, {\r\n            //     name: GetNodeProp(node, NodeProperties.CodeName),\r\n            //     tests: testProps.join(NEW_LINE)\r\n            // });\r\n            agentFunctionInterfaceDic[agent] = agentFunctionInterfaceDic[agent] || [];\r\n            agentFunctionDic[agent] = agentFunctionDic[agent] || [];\r\n            agentFunctionDic[agent].push(templateRes)\r\n            agentFunctionInterfaceDic[agent].push(templateResInterface)\r\n\r\n        });\r\n        let lastCase;\r\n        let static_methods = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                model,\r\n                method,\r\n            } = amd;\r\n            let cases = (agentModelDic[agent + model + amd.method] || []).map(_cases => {\r\n                var {\r\n                    agent,\r\n                    model,\r\n                    functType,\r\n                    funct\r\n                } = _cases;\r\n                let _case = bindTemplate(_exe_case, {\r\n                    agent,\r\n                    model,\r\n                    func_name: funct\r\n                });\r\n                return _case + NEW_LINE;\r\n            }).unique(x => x).join('');\r\n            return bindTemplate(_exe_method, {\r\n                agent,\r\n                model,\r\n                cases,\r\n                change: `${model}`,\r\n                method\r\n            }) + NEW_LINE\r\n        });\r\n        let static_methods_interface = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                model,\r\n                method,\r\n            } = amd;\r\n            return bindTemplate(_exe_method_interface, {\r\n                agent,\r\n                model,\r\n                change: `${model}`,\r\n                method\r\n            }) + NEW_LINE\r\n        });\r\n        Object.keys(agentFunctionDic).map(agent => {\r\n\r\n            var node = GraphMethods.GetNode(graph, agent);\r\n            let templateRes = bindTemplate(_executor_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionDic[agent].join(''),\r\n                staticentry: static_methods.unique(x => x).join('')\r\n            });\r\n\r\n            let templateInterfaceRes = bindTemplate(_executor_class_interface, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionInterfaceDic[agent].unique(x => x).join(''),\r\n                staticentry: static_methods_interface.unique(x => x).join('')\r\n\r\n            })\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}ExecutorTests`,\r\n                iname: `I${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Executors\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: templateInterfaceRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                // test: NamespaceGenerator.Generate({\r\n                //     template: testTemplate,\r\n                //     usings: [\r\n                //         ...STANDARD_CONTROLLER_USING,\r\n                //         ...STANDARD_TEST_USING,\r\n                //         `${namespace}${NameSpace.Executors}`,\r\n                //         `${namespace}${NameSpace.Model}`,\r\n                //         `${namespace}${NameSpace.Constants}`],\r\n                //     namespace,\r\n                //     space: NameSpace.Tests\r\n                // }),\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/returns/returns_class.tpl';\r\nconst RETURN_GET_FUNCTION = './app/templates/models/returns/returns_funcs.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf-8');\r\n        let _return_get_methods = fs.readFileSync(RETURN_GET_FUNCTION, 'utf-8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n            var methods = allfilters.filter(x => GetNodeProp(x, NodeProperties.FilterAgent) === agent.id).map(filterNode => {\r\n                let model = GraphMethods.GetNode(graphRoot, GetNodeProp(filterNode, NodeProperties.FilterModel));\r\n                let properties = GraphMethods.getNodesByLinkType(graph, {\r\n                    id: model.id,\r\n                    direction: GraphMethods.SOURCE,\r\n                    type: LinkType.PropertyLink\r\n                }).filter(t => GetNodeProp(filterNode, NodeProperties.FilterPropreties) ? GetNodeProp(filterNode, NodeProperties.FilterPropreties)[t.id] : '')\r\n                    .map(t => {\r\n                        return `           result.${GetNodeProp(t, NodeProperties.CodeName)} = model.${GetNodeProp(t, NodeProperties.CodeName)};`\r\n                    }).join(NEW_LINE);\r\n                return bindTemplate(_return_get_methods, {\r\n                    function: GetNodeProp(filterNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    set_properties: properties\r\n                });\r\n            }).join(NEW_LINE);\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Return`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/exceptions/exceptions_class.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf-8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Exceptions`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst MODEL_GET_CLASS = './app/templates/models/gets/model_get_class.tpl';\r\nconst MODEL_GET_FUNCTION = './app/templates/models/gets/model_get_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION = './app/templates/models/gets/model_get_many_to_many_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD = './app/templates/models/gets/model_get_many_to_many_function_get_child.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelGetGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ModelGetGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _get_class = fs.readFileSync(MODEL_GET_CLASS, 'utf-8');\r\n        let _get_methods = fs.readFileSync(MODEL_GET_FUNCTION, 'utf-8');\r\n        let _get_methods_many_to_many = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION, 'utf-8');\r\n        let _get_method_many_to_many_get_child = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD, 'utf-8');\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        allmodels.map(agent => {\r\n            var methods = allmodels.filter(x => x.id !== agent.id)\r\n                .filter(x => {\r\n                    if (GetNodeProp(agent, NodeProperties.HasLogicalChildren) && (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []).some(v => v === x.id)) {\r\n                        if (!GetNodeProp(agent, NodeProperties.ManyToManyNexus))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                })\r\n                .map(model => {\r\n                    return bindTemplate(_get_methods, {\r\n                        agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    });\r\n                });\r\n\r\n            if (GetNodeProp(agent, NodeProperties.ManyToManyNexus)) {\r\n                var childrenTypes = (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []);\r\n                if (childrenTypes && childrenTypes.length) {\r\n                    let namesAreUnique = childrenTypes.map(t => GetNodeProp(GraphMethods.GetNode(graph, t), NodeProperties.CodeName)).unique(x => x).length === childrenTypes.length;\r\n                    childrenTypes.map(ct => {\r\n                        methods.push(bindTemplate(_get_method_many_to_many_get_child, {\r\n                            model: GetNodeProp(GraphMethods.GetNode(graph, ct), NodeProperties.CodeName),\r\n                            many_to_many: GetNodeProp(agent, NodeProperties.CodeName)\r\n                        }));\r\n                    })\r\n                    enumerate([].interpolate(0, childrenTypes.length, function () {\r\n                        return childrenTypes.length + 1;\r\n                    })).filter(x => x.length === x.unique(t => t).length)\r\n                        .map(model => {\r\n                            let params = model.subset(0, model.length).map((t, index) => {\r\n                                if (childrenTypes.length === t) {\r\n                                    return false;\r\n                                }\r\n                                let paramName = `x${index}`;\r\n                                if (namesAreUnique) {\r\n                                    paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                }\r\n                                return bindTemplate(`{{_type}} ${paramName}`, {\r\n                                    _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                })\r\n                            }).filter(x => x);\r\n                            if (params.length) {\r\n                                methods.push(bindTemplate(_get_methods_many_to_many, {\r\n                                    parameters: params.join(', '),\r\n                                    query: model.subset(0, model.length).map((t, index) => {\r\n                                        if (childrenTypes.length === t) {\r\n                                            return false;\r\n                                        }\r\n\r\n                                        let paramName = `x${index}`;\r\n                                        if (namesAreUnique) {\r\n                                            paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                        }\r\n\r\n                                        return bindTemplate(`item.{{_type}} == ${paramName}.Id`, {\r\n                                            _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                        })\r\n                                    }).filter(x => x).join(' && '),// \r\n                                    model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                                }));\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n            let templateRes = bindTemplate(_get_class, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods.unique(x => x).join(NEW_LINE)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Get`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import ControllerGenerator from \"./controllergenerator\";\r\nimport * as Titles from \"../components/titles\";\r\nimport { NodeTypes, GeneratedTypes, Methods, GeneratedConstants, NodeProperties, ConstantsDeclaration, MakeConstant } from \"../constants/nodetypes\";\r\nimport ModelGenerator from \"./modelgenerators\";\r\nimport ExtensionGenerator from \"./extensiongenerator\";\r\nimport MaestroGenerator from \"./maestrogenerator\";\r\nimport ChangeParameterGenerator from \"./changeparametergenerator\";\r\nimport ConstantsGenerator from \"./constantsgenerator\";\r\nimport PermissionGenerator from \"./permissiongenerator\";\r\nimport StreamProcessGenerator from \"./streamprocessgenerator\";\r\nimport { NodesByType, GetNodeProp } from \"../actions/uiactions\";\r\nimport StreamProcessOrchestrationGenerator from \"./streamprocessorchestrationgenerator\";\r\nimport ChangeResponseGenerator from \"./changeresponsegenerator\";\r\nimport ValidationRuleGenerator from \"./validationrulegenerator\";\r\nimport ExecutorGenerator from \"./executiongenerator\";\r\nimport ModelReturnGenerator from './modelreturngenerator';\r\nimport ModelExceptionGenerator from './modelexceptiongenerator';\r\nimport ModelItemFilter from './modelitemfiltergenerator';\r\nimport ModelGetGenerator from './modelgetgenerators';\r\nexport default class Generator {\r\n    static generate(options) {\r\n        var { state, type, key } = options;\r\n        switch (type) {\r\n            case NodeTypes.Controller:\r\n                let temp = ControllerGenerator.Generate({ state, key });\r\n                return temp;\r\n            case NodeTypes.Model:\r\n                return ModelGenerator.Generate({ state, key });\r\n            case NodeTypes.ExtensionType:\r\n                return ExtensionGenerator.Generate({ state, key });\r\n            case NodeTypes.Maestro:\r\n                return MaestroGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeParameter:\r\n                return ChangeParameterGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeResponse:\r\n                return ChangeResponseGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Constants:\r\n                //Add enumerations here.\r\n                let models = NodesByType(state, NodeTypes.Model);\r\n                let functions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n                let enumerations = NodesByType(state, NodeTypes.Enumeration).map(node => {\r\n                    var enums = GetNodeProp(node, NodeProperties.Enumeration);\r\n                    var larg = {};\r\n                    enums.map(t => {\r\n                        larg[MakeConstant(t)] = t;\r\n                    })\r\n                    return {\r\n                        name: GetNodeProp(node, NodeProperties.CodeName),\r\n                        model: larg\r\n                    }\r\n                });\r\n                let streamTypes = {};\r\n                models.map(t => {\r\n                    streamTypes[GetNodeProp(t, NodeProperties.CodeName).toUpperCase()] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                let functionsTypes = {};\r\n                functions.map(t => {\r\n                    functionsTypes[GetNodeProp(t, NodeProperties.CodeName)] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                return ConstantsGenerator.Generate({\r\n                    values: [{\r\n                        name: GeneratedConstants.Methods,\r\n                        model: Methods\r\n                    }, {\r\n                        name: GeneratedConstants.StreamTypes,\r\n                        model: streamTypes\r\n                    }, {\r\n                        name: GeneratedConstants.FunctionName,\r\n                        model: functionsTypes\r\n                    }, ...enumerations],\r\n                    state,\r\n                    key\r\n                });\r\n            case GeneratedTypes.Permissions:\r\n                return PermissionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcess:\r\n                return StreamProcessGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcessOrchestration:\r\n                return StreamProcessOrchestrationGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ValidationRule:\r\n                return ValidationRuleGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Executors:\r\n                return ExecutorGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelGet:\r\n                return ModelGetGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelReturn:\r\n                return ModelReturnGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelExceptions:\r\n                return ModelExceptionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelItemFilter:\r\n                return ModelItemFilter.Generate({ state, key });\r\n        }\r\n    }\r\n}","import { HandlerEvents } from '../ipc/handler-events';\r\nimport { uuidv4, GraphKeys } from '../methods/graph_methods';\r\nimport { GetRootGraph, NodesByType, GetNodeProp, NodeProperties } from './uiactions';\r\nimport fs from 'fs';\r\nconst { ipcRenderer } = require('electron');\r\nimport path from 'path';\r\nimport { GeneratedTypes, NodeTypes } from '../constants/nodetypes';\r\nimport Generator from '../generators/generator';\r\nimport { fstat, writeFileSync } from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\n\r\nconst hub = {};\r\nipcRenderer.on('message-reply', (event, arg) => {\r\n    console.log(arg) // prints \"pong\"\r\n    let reply = JSON.parse(arg);\r\n    if (hub[reply.id]) {\r\n        hub[reply.id].resolve(reply.msg);\r\n    }\r\n    delete hub[reply.id];\r\n});\r\n\r\nfunction message(msg, body) {\r\n    return {\r\n        msg,\r\n        body,\r\n        id: uuidv4()\r\n    }\r\n}\r\nfunction send(mess, body) {\r\n    var m = message(mess, body);\r\n    hub[m.id] = {};\r\n    let result = Promise.resolve().then(() => {\r\n        return new Promise((resolve, fail) => {\r\n            hub[m.id].resolve = resolve;\r\n            hub[m.id].fail = fail;\r\n        })\r\n    });\r\n    ipcRenderer.send('message', JSON.stringify(m));\r\n    return result;\r\n}\r\n\r\nexport function scaffoldProject(options = {}) {\r\n    var { filesOnly } = options;\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let root = GetRootGraph(state);\r\n        let solutionName = root.title.split(' ').join('.');\r\n\r\n        (filesOnly ? Promise.resolve() : send(HandlerEvents.scaffold.message, {\r\n            solutionName,\r\n            workspace: path.join(root.workspace, root.title)\r\n        })).then(res => {\r\n            console.log('Finished Scaffolding.');\r\n\r\n            generateFiles(path.join(root.workspace, root.title), solutionName, state);\r\n        }).then(() => {\r\n\r\n            let namespace = root ? root[GraphKeys.NAMESPACE] : null;\r\n            let server_side_setup = root ? root[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            if (server_side_setup) {\r\n\r\n                return generateFolderStructure(path.join(`./app/templates/net_core_mvc/identity/${server_side_setup}`), {\r\n                    model: GetNodeProp(userNode, NodeProperties.CodeName),\r\n                    namespace\r\n                }, null, path.join(path.join(root.workspace, root.title), solutionName + path.join('.Web')));\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction generateFolderStructure(dir, lib, relative, target_dir) {\r\n    let directories = fs.readdirSync(dir);\r\n    relative = relative || dir;\r\n    directories.map(item => {\r\n        let dirPath = path.join(dir, item);\r\n        if (fs.existsSync(dirPath) && fs.lstatSync(dirPath).isDirectory()) {\r\n            let reldir = dir.substr(relative.length)\r\n            ensureDirectory(path.join(target_dir, reldir, item));\r\n            generateFolderStructure(dirPath, lib, relative, target_dir);\r\n        }\r\n        else if (fs.existsSync(dirPath)) {\r\n            let file = fs.readFileSync(dirPath, 'utf-8');\r\n            let reldir = dir.substr(relative.length)\r\n            file = bindTemplate(file, lib);\r\n            fs.writeFileSync(path.join(target_dir, reldir, item), file, 'utf-8');\r\n        }\r\n    })\r\n}\r\nfunction generateFiles(workspace, solutionName, state) {\r\n\r\n\r\n    var code_types = [\r\n        NodeTypes.Controller,\r\n        NodeTypes.Model,\r\n        NodeTypes.ExtensionType,\r\n        NodeTypes.Maestro,\r\n        ...Object.values(GeneratedTypes)\r\n    ];\r\n    let root = GetRootGraph(state);\r\n    code_types.map(code_type => {\r\n\r\n        var temp = Generator.generate({\r\n            type: code_type,\r\n            state\r\n        });\r\n        let area = CodeTypeToArea[code_type];\r\n        path.join();\r\n        for (var fileName in temp) {\r\n            ensureDirectory(path.join(workspace, solutionName + area))\r\n            writeFileSync(path.join(workspace, solutionName + area, `${temp[fileName].name}.cs`), temp[fileName].template)\r\n            if (temp[fileName].interface) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Interfaces'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Interfaces', `${temp[fileName].iname || fileName}.cs`), temp[fileName].interface);\r\n            }\r\n            if (temp[fileName].test) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Tests', `${temp[fileName].tname || fileName}.cs`), temp[fileName].test);\r\n\r\n            }\r\n        }\r\n    })\r\n    if (root) {\r\n        ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Tests', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n        ensureDirectory(path.join(workspace, solutionName + '.Web'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Web', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n    }\r\n}\r\n\r\nfunction ensureDirectory(dir) {\r\n    if (!fs.existsSync(dir)) {\r\n        console.log('doesnt exist : ' + dir);\r\n    }\r\n    else {\r\n    }\r\n\r\n    if (!fs.existsSync(dir)) {\r\n        fs.mkdirSync(dir);\r\n    }\r\n    else {\r\n    }\r\n};\r\n\r\nconst CodeTypeToArea = {\r\n    [NodeTypes.Controller]: path.join('.Web', 'Controllers'),\r\n    [NodeTypes.Model]: '.Models',\r\n    [NodeTypes.ExtensionType]: '.Models',\r\n    [NodeTypes.Maestro]: '.Controllers',\r\n    [GeneratedTypes.ChangeParameter]: '.Models',\r\n    [GeneratedTypes.ChangeResponse]: '.Models',\r\n    [GeneratedTypes.ValidationRule]: '.Models',\r\n    [GeneratedTypes.Executors]: '.Controllers',\r\n    [GeneratedTypes.ModelGet]: '.Controllers',\r\n    [GeneratedTypes.ModelReturn]: '.Controllers',\r\n    [GeneratedTypes.ModelExceptions]: '.Controllers',\r\n    [GeneratedTypes.Constants]: '.Models',\r\n    [GeneratedTypes.Permissions]: '.Controllers',\r\n    [GeneratedTypes.ModelItemFilter]: '.Controllers',\r\n    [GeneratedTypes.StreamProcess]: '.Controllers',\r\n    [GeneratedTypes.StreamProcessOrchestration]: '.Controllers'\r\n\r\n}","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as _ from './array';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as IPCEvents from '../actions/ipcActions';\r\nexport function mapStateToProps(state) {\r\n    return {\r\n        state\r\n    };\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({ ...UIA, ...IPCEvents }, dispatch);\r\n}\r\n\r\n\r\nexport function UIConnect(component) {\r\n    return connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(component);\r\n}\r\nString.prototype.padding = function (n, c) {\r\n    var val = this.valueOf();\r\n    if (Math.abs(n) <= val.length) {\r\n        return val;\r\n    }\r\n    var m = Math.max((Math.abs(n) - this.length) || 0, 0);\r\n    var pad = Array(m + 1).join(String(c || ' ').charAt(0));\r\n    //      var pad = String(c || ' ').charAt(0).repeat(Math.abs(n) - this.length);\r\n    return (n < 0) ? pad + val : val + pad;\r\n    //      return (n < 0) ? val + pad : pad + val;\r\n};\r\n\r\nString.prototype.unCamelCase = function () {\r\n    var str = this || '';\r\n    return str\r\n        // insert a space between lower & upper\r\n        .replace(/([a-z])([A-Z])/g, '$1 $2')\r\n        // space before last upper in a sequence followed by lower\r\n        .replace(/\\b([A-Z]+)([A-Z])([a-z])/, '$1 $2$3')\r\n        // uppercase the first character\r\n        .replace(/^./, function (str) { return str.toUpperCase(); }).trim();\r\n};\r\nexport function enumerate(vects, j = 0) {\r\n    var results = [];\r\n\r\n    if (j < vects.length)\r\n        for (var i = 0; i < vects[j]; i++) {\r\n            var rest = enumerate(vects, j + 1);\r\n            var temp = [i];\r\n            if (rest.length) {\r\n                rest.map(r => {\r\n                    results.push([...temp, ...r])\r\n                });\r\n            }\r\n            else {\r\n                results.push(temp);\r\n            }\r\n        }\r\n    return results;\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <a className=\"logo\">\r\n                <span className=\"logo-mini\"><b>R</b>QB</span>\r\n                <span className=\"logo-lg\"><b>Red</b>QuickBuilder</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"main-header\">\r\n                {this.props.children}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-static-top\">\r\n                {this.props.children}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nclass SidebarToggle extends Component {\r\n    render() {\r\n        var me = this;\r\n        return (\r\n            <a\r\n                onClick={() => {\r\n                    me.props.toggleDashboardMinMax();\r\n                }}\r\n                className=\"sidebar-toggle\"\r\n                data-toggle=\"push-menu\" role=\"button\">\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SidebarToggle);","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-custom-menu\">\r\n                <ul className=\"nav navbar-nav\">\r\n                    {this.props.children}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenu extends Component {\r\n    menuType() {\r\n        return 'messages-menu';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'open' : '';\r\n    }\r\n    ariaExpanded() {\r\n        return this.props.open ? 'true' : 'false';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    label() {\r\n        return null;//<span className=\"label label-success\">4</span>\r\n    }\r\n    usermode() {\r\n        return this.props.usermode;\r\n    }\r\n    usermenu() {\r\n        return this.props.usermode ? 'user user-menu' : '';\r\n    }\r\n    userbody() {\r\n        return this.props.usermode ? 'user user-body' : '';\r\n    }\r\n    userheader() {\r\n        return this.props.usermode ? 'header' : 'header';\r\n    }\r\n    render() {\r\n        var ops = {};\r\n        if (this.props.width) {\r\n            ops.style = { width: this.props.width }\r\n        }\r\n        return (\r\n            <li className={`dropdown ${this.usermenu()} ${this.menuType()} ${this.open()}`}>\r\n                <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded={this.ariaExpanded()} onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.label()}\r\n                </a>\r\n                <ul className=\"dropdown-menu\" {...ops}>\r\n                    {this.props.headerText ? <li className={this.userheader()}>{this.props.headerText}</li> : null}\r\n                    {this.props.header ? <li className={this.userheader()}>{this.props.header}</li> : null}\r\n                    {this.usermode() ? (<li className={this.userbody()}>\r\n                        <div className=\"row\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </li>) : (<li className={this.userbody()}>\r\n                        <ul className=\"menu\">\r\n                            {this.props.children}\r\n                        </ul>\r\n                    </li>)}\r\n                    {this.props.footer ? this.props.footer : null}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenuItem extends Component {\r\n\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <div className=\"pull-left\">\r\n                        <i style={{ fontSize: 34 }} className={this.icon()}></i>\r\n                    </div>\r\n                    <h4>\r\n                        {this.props.title}\r\n                        {/* <small><i className=\"fa fa-clock-o\"></i> 5 mins</small> */}\r\n                    </h4>\r\n                    <p>{this.props.description}</p>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <aside className=\"main-sidebar\">\r\n                <section className=\"sidebar\" style={{ height: 'auto' }}>\r\n                    {this.props.children}\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class SideBarHeader extends Component {\r\n    render() {\r\n        return (<li className=\"header\">{this.props.title}</li>);\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"sidebar-menu tree\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TreeViewMenu extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'menu-open' : '';\r\n    }\r\n    display() {\r\n        return this.props.open ? 'block' : 'block';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-dashboard\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={`treeview ${this.active()} ${this.open()}`}>\r\n                <a onClick={() => {\r\n                    if (this.props.toggle)\r\n                        this.props.toggle()\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    {this.props.hideIcon ? null : <i className={`${this.icon()}`}></i>}\r\n                    <span>{this.props.title}</span>\r\n                    {this.props.hideArrow ? null : (<span className=\"pull-right-container\">\r\n                        <i className=\"fa fa-angle-left pull-right\"></i>\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                    {!this.props.hideArrow && this.props.right ? null : (<span className=\"pull-right-container\">\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                </a>\r\n                <ul className=\"treeview-menu\" style={{ display: this.display() }}>\r\n                    {this.props.children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItem extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick)\r\n                        this.props.onClick();\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.props.title}\r\n                    {this.props.right ? (<span class=\"pull-right-container\">\r\n                        {this.props.right}\r\n                    </span>) : null}\r\n                </a>\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Content extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"content-wrapper\" style={{ minHeight: '946px' }}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBar extends Component {\r\n    open() {\r\n        return this.props.open ? 'control-sidebar-open' : '';\r\n    }\r\n    extraWidth() {\r\n        return this.props.extraWide ? 'extra-wide' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className={`control-sidebar control-sidebar-dark ${this.open()} ${this.extraWidth()}`}>\r\n                {this.props.children}\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTabs extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs nav-justified control-sidebar-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTab extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-wrench\";\r\n    }\r\n    active() {\r\n        return this.props.active ? 'active' : \"\";\r\n    }\r\n    ariaExapanded() {\r\n        return this.props.active ? 'true' : 'false';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded={this.ariaExapanded()}>\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class ControlSideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"control-sidebar-menu\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class ControlSideBarMenuItem extends Component {\r\n    icon() {\r\n        return this.props.icon || 'fa fa-birthday-cake';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={`menu-icon ${this.icon()} bg-red`}></i>\r\n\r\n                    <div className=\"menu-info\">\r\n                        <h4 className=\"control-sidebar-subheading\">{this.props.title || ''}</h4>\r\n\r\n                        <p>{this.props.description || ''}</p>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ControlSideBarMenuHeader extends Component {\r\n    render() {\r\n        return (\r\n            <h3 className=\"control-sidebar-heading\">{this.props.title}</h3>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabPane extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-pane ${this.active()}`}>\r\n                {this.props.active ? this.props.children : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class FormControl extends Component {\r\n    _class() {\r\n        return this.props.sidebarform ? 'sidebar-form' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <form role=\"form\" className={this._class()} {...{ style: this.props.style || {} }}>\r\n                {this.props.children}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class TextInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    placeholder() {\r\n        return this.props.placeholder || '';\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.props.inputgroup ? 'input-group' : \"form-group\"}>\r\n                {this.props.inputgroup ? null : <label>{this.label()}</label>}\r\n                <input type=\"text\" disabled={this.disabled()} className={\"form-control\"} value={this.value()} onChange={(v) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(v.target.value);\r\n                    }\r\n                }} placeholder={this.placeholder()} />\r\n                {this.props.inputgroup ? (<span className=\"input-group-btn\">\r\n                    <button type=\"submit\" onClick={() => {\r\n                        if (this.props.onClick) {\r\n                            this.props.onClick();\r\n                        }\r\n                    }} name=\"search\" id=\"search-btn\" className=\"btn btn-flat\"><i className=\"fa fa-edit\"></i>\r\n                    </button>\r\n                </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as Titles from './titles';\r\n\r\nexport default class SelectInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    options() {\r\n        if (this.props.options) {\r\n            return this.props.options.map((t, index) => {\r\n                return (<option key={`option-${index}`} value={t.value}>{t.title}</option>)\r\n            })\r\n        }\r\n        return [];\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>{this.label()}</label>\r\n                <select className=\"form-control\" disabled={this.disabled()} onSelect={(evt) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(evt.target.value);\r\n                    }\r\n                }}\r\n                    onChange={(evt) => {\r\n                        if (this.props.onChange) {\r\n                            this.props.onChange(evt.target.value);\r\n                        }\r\n                    }} value={this.value()}>\r\n                    <option value={''}>{this.props.defaultSelectText || Titles.Select}</option>\r\n                    {this.options()}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class CheckBox extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <div className=\"checkbox\">\r\n                    <label title={this.title()}>\r\n                        <input type=\"checkbox\" checked={this.value()} onChange={(v) => {\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange(v.target.checked);\r\n                            }\r\n                        }} />\r\n                        {this.label()}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const ServiceTypes = {\r\n    Facebook: 'Facebook',\r\n    Twitter: 'Twitter',\r\n    Google: 'Google',\r\n    Microsoft: 'Microsoft'\r\n}\r\n\r\nexport const ServiceTypeSetups = {\r\n    [ServiceTypes.Facebook]: {\r\n        properties: {\r\n            UseFacebook: { type: 'boolean' },\r\n            FacebookAppId: { type: 'string' },\r\n            FacebookAppSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Microsoft]: {\r\n        properties: {\r\n            UseMicrosoftAccount: { type: 'boolean' },\r\n            MicrosoftClientId: { type: 'string' },\r\n            MicrosoftClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Google]: {\r\n        properties: {\r\n            UseGoogle: { type: 'boolean' },\r\n            GoogleClientId: { type: 'string' },\r\n            GoogleClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Twitter]: {\r\n        properties: {\r\n            UseTwitter: { type: 'boolean' },\r\n            TwitterConsumerKey: { type: 'string' },\r\n            TwitterConsumerSecret: { type: 'string' }\r\n        }\r\n    }\r\n}\r\n\r\nexport const SystemSettings = {\r\n    Domain: 'Domain'\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nimport { ServiceTypes, ServiceTypeSetups } from '../constants/servicetypes';\r\nclass ServiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Services);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let serviceType = currentNode ? UIA.GetNodeProp(currentNode, NodeProperties.ServiceType) : '';\r\n        let propinputs = [];\r\n        if (serviceType) {\r\n            let serviceTypeSetup = ServiceTypeSetups[serviceType];\r\n            if (serviceTypeSetup && serviceTypeSetup.properties) {\r\n                Object.keys(serviceTypeSetup.properties).map(prop => {\r\n                    var prop_setup = serviceTypeSetup.properties[prop];\r\n                    var value = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ServiceTypeSettings) || {};\r\n                    if (prop_setup && prop_setup.type) {\r\n                        switch (prop_setup.type) {\r\n                            case 'string':\r\n                                propinputs.push(<TextInput\r\n                                    key={`service-type${prop}`}\r\n                                    onChange={(val) => {\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                            id: currentNode.id,\r\n                                            value: { ...value, [prop]: val }\r\n                                        });\r\n                                    }}\r\n                                    label={prop.unCamelCase()}\r\n                                    value={value[prop] || ''} />)\r\n                                break;\r\n                            case 'boolean':\r\n                                    propinputs.push(<CheckBox\r\n                                        key={`service-type${prop}`}\r\n                                        onChange={(val) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                                id: currentNode.id,\r\n                                                value: { ...value, [prop]: val }\r\n                                            });\r\n                                        }}\r\n                                        label={prop.unCamelCase()}\r\n                                        value={value[prop] || ''} />)\r\n                                break;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.ServiceActivity}\r\n                        options={Object.keys(ServiceTypes).map(t => {\r\n                            return { title: t, value: ServiceTypes[t] }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ServiceType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={serviceType} />\r\n                        {propinputs}\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ServiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarContent extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"tab-content\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarButton extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} title={this.title()} data-toggle=\"control-sidebar\">\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","export const GraphOperationMenu = 'GraphOperationMenu';\r\nexport const GraphPropertiesMenu = 'GraphPropertiesMenu';\r\nexport const ApplicationMenu = 'ApplicationMenu';","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","\r\nimport * as d3Zoom from 'd3-zoom'\r\nimport * as d3 from 'd3';\r\nimport * as Cola from 'webcola'\r\nimport * as GraphMethods from '../methods/graph_methods';\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport { NodeTypeColors } from '../actions/uiactions';\r\nimport { LinkStyles, LinkType, LinkPropertyKeys } from '../constants/nodetypes';\r\n\r\nconst MIN_DIMENSIONAL_SIZE = 20;\r\nexport default class MindMap extends Component {\r\n    constructor() {\r\n        super();\r\n        this.textSize = {};\r\n        this.mapScale = 1;\r\n        this.mapTranslate = { x: 0, y: 0 };\r\n        this.state = {\r\n            id: `id-${Date.now()}`,\r\n            graph: {\r\n                \"nodes\": [].map(t => { t.id = t.name; return t; }),\r\n                links: [],\r\n                \"groups\": [\r\n                    // { \"leaves\": [0], \"groups\": [1] },\r\n                    // { \"leaves\": [1, 2] },\r\n                    // { \"leaves\": [3, 4] }\r\n                ]\r\n            }\r\n        }\r\n        this.draw = this.draw.bind(this);\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.mouseMove = this.mouseMove.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // Draw for the first time to initialize.\r\n        this.draw();\r\n\r\n        // Redraw based on the new size whenever the browser window is resized.\r\n        window.addEventListener(\"resize\", this.draw);\r\n        window.addEventListener('mousemove', this.mouseMove);\r\n        window.addEventListener('mouseup', this.mouseUp);\r\n        window.addEventListener('mousedown', this.mouseDown);\r\n    }\r\n    mouseDown(evt) {\r\n        this.mouseStartEvent = evt;\r\n    }\r\n    mouseUp(evt) {\r\n        this.mouseStartEvent = null;\r\n        this.mouseMoved = null;\r\n    }\r\n    mouseMove(evt) {\r\n        if (this.mouseStartEvent) {\r\n            this.mouseMoveEvt = evt;\r\n            this.mouseMoved = {\r\n                x: evt.clientX - this.mouseStartEvent.clientX,\r\n                y: evt.clientY - this.mouseStartEvent.clientY\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.draw);\r\n        window.removeEventListener('mousemove', this.mouseMove);\r\n        window.removeEventListener('mousedown', this.mouseUp);\r\n        window.removeEventListener('mouseup', this.mouseDown);\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n        if (domObj) {\r\n            domObj.innerHTML = '';\r\n        }\r\n    }\r\n    calculateNodeTextSize(text, pad) {\r\n        var div = document.querySelector('#secret-div-space');\r\n        if (!div) {\r\n            div = document.createElement('div');\r\n            div.id = 'secret-div-space';\r\n            div.setAttribute('id', 'secret-div-space');\r\n            div.style.visibility = 'hidden';\r\n            div.style.position = 'absolute';\r\n            div.classList.add('label');\r\n            div.style.whiteSpace = 'normal';\r\n            div.style.maxWidth = (text || '').split(' ').length > 1 ? `200px` : '300px';\r\n            div.style.top = '-10000px';\r\n            div.style.padding = (pad * 2) + 'px';\r\n            document.querySelector(`#${this.state.id}`).appendChild(div);\r\n        }\r\n        div.innerHTML = text;\r\n        return div.getBoundingClientRect();\r\n    }\r\n    draw() {\r\n        var me = this;\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n\r\n        domObj.innerHTML = '';\r\n        var bb = domObj.getBoundingClientRect();\r\n        var force = Cola.d3adaptor(d3);\r\n        var width = bb.width - 10;// 960;\r\n        var height = bb.height - 10;// 800;\r\n        var color = d3.scaleOrdinal(d3.schemeCategory10)\r\n\r\n        var margin = 6, pad = 12;;\r\n        force\r\n            .linkDistance(this.props.linkDistance || 280)\r\n            .avoidOverlaps(true)\r\n            .handleDisconnected(false)\r\n            .size([width, height]);\r\n\r\n        var svg = makeSVG();\r\n        function makeSVG() {\r\n            var outer = d3.select(`#${me.state.id}`).append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"pointer-events\", \"all\");\r\n            // define arrow markers for graph links\r\n            outer.append('svg:defs').append('svg:marker')\r\n                .attr('id', 'end-arrow')\r\n                .attr('viewBox', '0 -5 10 10')\r\n                .attr('refX', 5)\r\n                .attr('markerWidth', 3)\r\n                .attr('markerHeight', 3)\r\n                .attr('orient', 'auto')\r\n                .append('svg:path')\r\n                .attr('d', 'M0,-5L10,0L0,5L2,0')\r\n                .attr('stroke-width', '0px')\r\n                .attr('fill', function (d) {\r\n                    if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                        return LinkStyles[d.properties.type].stroke;\r\n                    }\r\n                    return '#555';\r\n                });\r\n\r\n\r\n            var vis = outer.append('g');\r\n            outer.on(\"wheel\", function (d) {\r\n                me.mapScale += d3.event.wheelDelta / (me.props.zoomFactor || 5000);\r\n                redraw();\r\n            });\r\n            function redraw() {\r\n                var { x = 0, y = 0 } = (me.mouseMoved || {});\r\n                vis.attr('transform', `scale(${me.mapScale || 1}) translate(${me.mapTranslate.x + x}, ${me.mapTranslate.y + y})`);\r\n            }\r\n            outer.on('mousemove', function (x, v) {\r\n                if (me.panning) {\r\n                    redraw();\r\n                }\r\n            });\r\n\r\n            outer.on(\"mousedown\", function (d) {\r\n                me.panning = true;\r\n            });\r\n            outer.on(\"mouseup\", function (d) {\r\n                me.panning = false;\r\n\r\n                if (me.mouseMoved && me.mapTranslate) {\r\n                    me.mapTranslate = {\r\n                        x: me.mapTranslate.x + me.mouseMoved.x,\r\n                        y: me.mapTranslate.y + me.mouseMoved.y\r\n                    }\r\n                }\r\n            });\r\n\r\n            redraw();\r\n            return vis;\r\n        }\r\n        // function gridify(svg, pgLayout, margin, groupMargin) {\r\n        //     var routes = cola.gridify(pgLayout, 5, margin, groupMargin);\r\n        //     svg.selectAll('path').remove();\r\n        //     routes.forEach(route => {\r\n        //         var cornerradius = 5;\r\n        //         var arrowwidth = 3;\r\n        //         var arrowheight = 7;\r\n        //         var p = cola.GridRouter.getRoutePath(route, cornerradius, arrowwidth, arrowheight);\r\n        //         if (arrowheight > 0) {\r\n        //             svg.append('path')\r\n        //                 .attr('class', 'linkarrowoutline')\r\n        //                 .attr('d', p.arrowpath);\r\n        //             svg.append('path')\r\n        //                 .attr('class', 'linkarrow')\r\n        //                 .attr('d', p.arrowpath);\r\n        //         }\r\n        //         svg.append('path')\r\n        //             .attr('class', 'linkoutline')\r\n        //             .attr('d', p.routepath)\r\n        //             .attr('fill', 'none');\r\n        //         svg.append('path')\r\n        //             .attr('class', 'link')\r\n        //             .attr('d', p.routepath)\r\n        //             .attr('fill', 'none');\r\n        //     });\r\n\r\n        //     svg.selectAll(\".label\").transition().attr(\"x\", d => d.routerNode.bounds.cx())\r\n        //         .attr(\"y\", function (d) {\r\n        //             var h = this.getBBox().height;\r\n        //             return d.bounds.cy() + h / 3.5;\r\n        //         });\r\n\r\n        //     svg.selectAll(\".node\").transition().attr(\"x\", d => d.routerNode.bounds.x)\r\n        //         .attr(\"y\", d => d.routerNode.bounds.y)\r\n        //         .attr(\"width\", d => d.routerNode.bounds.width())\r\n        //         .attr(\"height\", d => d.routerNode.bounds.height());\r\n\r\n        //     let groupPadding = margin - groupMargin;\r\n        //     svg.selectAll(\".group\").transition().attr('x', d => d.routerNode.bounds.x - groupPadding)\r\n        //         .attr('y', d => d.routerNode.bounds.y + 2 * groupPadding)\r\n        //         .attr('width', d => d.routerNode.bounds.width() - groupPadding)\r\n        //         .attr('height', d => d.routerNode.bounds.height() - groupPadding);\r\n        // }\r\n        var graph = this.state.graph;\r\n\r\n        graph.nodes.forEach(function (v) {\r\n            var bb = me.calculateNodeTextSize(getLabelText(v), pad);\r\n            v.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n            v.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height);\r\n        })\r\n        graph.groups.forEach(function (g) { g.padding = pad })\r\n\r\n        force.nodes(graph.nodes)\r\n            .groups(graph.groups)\r\n            .links(graph.links)\r\n            .on(\"tick\", tick)\r\n\r\n        var group = svg.selectAll(\".group\")\r\n            .data(graph.groups)\r\n            .enter().append(\"rect\")\r\n            .attr(\"rx\", 8).attr(\"ry\", 8)\r\n            .attr(\"class\", \"group\")\r\n            .style(\"fill\", function (d, i) { return color(i) })\r\n            .call(force.drag)\r\n\r\n        var node = svg.selectAll(\".node\");\r\n        this.$node = node;\r\n        this.buildNode(graph, force, color);\r\n        var link = svg.selectAll(\".link\")\r\n            .data(graph.links)\r\n            .enter().append(\"line\")\r\n            .attr(\"class\", \"link\")\r\n            .style('stroke', function (d) {\r\n                if (d.selected) {\r\n                    return '#ff0000';\r\n                }\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return LinkStyles[LinkType.ErrorLink].stroke;\r\n                }\r\n                else if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                    return LinkStyles[d.properties.type].stroke;\r\n                }\r\n                return '#555';\r\n            })\r\n            .style(\"stroke-dasharray\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return '5,5';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"d\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return 'M5 20 l215 0';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"stroke-width\", function (d) {\r\n                if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].strokeWidth) {\r\n                    return LinkStyles[d.properties.type].strokeWidth;\r\n                }\r\n                return Math.sqrt(d.value);\r\n            });\r\n        link.on('click', (d, index, els) => {\r\n            if (me.props.onLinkClick && d) {\r\n                me.props.onLinkClick({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        });\r\n        link.on('mouseover', (d, index, els) => {\r\n            if (me.props.onLinkHover && d) {\r\n                me.props.onLinkHover({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        })\r\n        var label = svg.selectAll(\".label\")\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append(\"foreignObject\")\r\n            .attr(\"class\", \"label\");\r\n        label.on('click', (d, index, els) => {\r\n            if (me.props.onNodeClick && d && d.id) {\r\n                me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n            }\r\n        })\r\n\r\n        var features = svg.selectAll('.features')\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', 'features')\r\n\r\n        features.append(\"rect\")\r\n            .attr(\"width\", function (d) { return d.selected ? 5 : 0; })\r\n            .attr(\"height\", function (d) { return d.height - 10; })\r\n            .attr('x', 3)\r\n            .attr('y', 5)\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d.selected && me.props.selectedColor) {\r\n                    return me.props.selectedColor;\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n\r\n        var titles = label.append('xhtml:div')\r\n            .style('width', x => {\r\n                return `${x.width - pad / 2}px`\r\n            })\r\n            .style('white-space', 'normal')\r\n            .style('text-align', 'start')\r\n            //.style('word-break', 'break-all')\r\n            .style('height', x => {\r\n                return `${x.height - pad / 2}px`\r\n            })\r\n            .text(function (d) { return `${getLabelText(d)}` })\r\n            .call(force.drag);\r\n\r\n        this.$force = force;\r\n        this.setState({\r\n            $node: node,\r\n            $color: color\r\n        })\r\n\r\n        function getLabelText(d) {\r\n            return d && d.properties ? d.properties.text || d.name : d.name;\r\n        }\r\n\r\n        function rotate(source, degree = Math.PI / 2) {\r\n            var { innerBounds, x, y } = source;\r\n            var rise = innerBounds.y - innerBounds.Y;\r\n            var run = innerBounds.x - innerBounds.X;\r\n\r\n            return Object.assign(innerBounds, {\r\n                x: 1 + innerBounds.x,\r\n                y: rise ? ((run / rise) * 1) + innerBounds.y : innerBounds.y,\r\n                X: 1 + innerBounds.X,\r\n                Y: rise ? ((run / rise) * 1) + innerBounds.Y : innerBounds.Y\r\n            });\r\n        }\r\n\r\n        function tick() {\r\n            if (me.$_nodes) {\r\n                me.$_nodes.each(function (d) {\r\n                    var bb = me.calculateNodeTextSize(getLabelText(d), pad);\r\n                    d.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n                    d.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height)\r\n                    d.innerBounds = d.bounds.inflate(- margin);\r\n                });\r\n            }\r\n\r\n            // link.attr(\"x1\", function (d) { return d.source.x; })\r\n            //     .attr(\"y1\", function (d) { return d.source.y; })\r\n            //     .attr(\"x2\", function (d) { return d.target.x; })\r\n            //     .attr(\"y2\", function (d) { return d.target.y; });\r\n\r\n\r\n            if (me.$_nodes) {\r\n                me.$_nodes\r\n                    .attr(\"width\", function (d) { return d.width; })\r\n                    .attr(\"height\", function (d) { return d.height; })\r\n                    .attr(\"x\", function (d) { return d.x - d.width / 2 })\r\n                    .attr(\"y\", function (d) { return d.y - d.height / 2 })\r\n            }\r\n\r\n            group.attr(\"x\", function (d) { return d.bounds.x })\r\n                .attr(\"y\", function (d) { return d.bounds.y })\r\n                .attr(\"width\", function (d) { return d.bounds.width() })\r\n                .attr(\"height\", function (d) { return d.bounds.height() })\r\n\r\n            link.each(function (d) {\r\n                d.route = Cola.makeEdgeBetween(rotate(d.source), rotate(d.target, -Math.PI / 2), 5);\r\n            });\r\n\r\n            link.attr(\"x1\", function (d) { return d.route.sourceIntersection.x; })\r\n                .attr(\"y1\", function (d) { return d.route.sourceIntersection.y; })\r\n                .attr(\"x2\", function (d) { return d.route.arrowStart.x; })\r\n                .attr(\"y2\", function (d) { return d.route.arrowStart.y; });\r\n\r\n            features.attr(\"transform\", function (d) {\r\n                var y = d.y - d.height / 2;\r\n                var x = d.x - d.width / 2;\r\n                return `translate(${x},${y})`;\r\n            })\r\n\r\n\r\n            label\r\n                .attr(\"x\", function (d) {\r\n                    return d.x - d.width / 2\r\n                }).attr(\"y\", function (d) {\r\n                    var innerbit = this.querySelector('div');\r\n                    var h = innerbit ? innerbit.getBoundingClientRect().height : 0;\r\n\r\n                    return d.y + h / 2 - d.height + pad / 2;\r\n                })\r\n            titles.text(function (d) {\r\n                return getLabelText(d);\r\n            })\r\n        }\r\n        force.start();\r\n    }\r\n    buildNode(graph, cola, color) {\r\n        var me = this;\r\n        var node = this.$node.data(cola.nodes(), x => x.id || x.name);\r\n        var temp = node.enter().append(\"rect\")\r\n            .attr(\"class\", \"node\")\r\n            .attr(\"width\", function (d) { return d.width; })\r\n            .attr(\"height\", function (d) { return d.height; })\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d && d.properties && d.properties.nodeType && NodeTypeColors[d.properties.nodeType]) {\r\n                    return NodeTypeColors[d.properties.nodeType]\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n            .on('click', (d, index, els) => {\r\n                if (me.props.onNodeClick && d) {\r\n                    me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n                }\r\n            })\r\n            .call(cola.drag);\r\n\r\n        node.exit().remove();\r\n        this.$_nodes = temp;\r\n    }\r\n    applyNodeVisualData(nn) {\r\n        nn.width = 40;\r\n        nn.height = 40;\r\n        nn.name = nn.id;\r\n        return nn;\r\n    }\r\n    componentWillReceiveProps(props, state) {\r\n        if (props.graph) {\r\n            var { graph } = props;\r\n            var draw = true;\r\n            // d3.event.stopPropagation();\r\n            this.$force.stop();\r\n            if (graph.nodes && this.state && this.state.graph && this.state.graph.nodes) {\r\n                var removedNodes = this.state.graph.nodes.relativeCompliment(graph.nodes, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.nodes.indexOf(t);\r\n                });\r\n                this.state.graph.nodes.removeIndices(removedNodes);\r\n                var newNodes = graph.nodes.relativeCompliment(this.state.graph.nodes, (x, y) => x === y.id);\r\n                newNodes.map(nn => {\r\n                    this.state.graph.nodes.push(\r\n                        this.applyNodeVisualData(GraphMethods.duplicateNode(graph.nodeLib[nn]))\r\n                    );\r\n                });\r\n\r\n                if (props.selectedNodes) {\r\n                    this.state.graph.nodes.map(nn => {\r\n                        nn.selected = !!props.selectedNodes.find(t => t == nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.nodes.map(nn => {\r\n                    var nl = graph.nodeLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                })\r\n\r\n                draw = true;\r\n            }\r\n            if (graph.links && this.state && this.state.graph && this.state.graph.links) {\r\n                let removedLinks = this.state.graph.links.relativeCompliment(graph.links, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.links.indexOf(t);\r\n                });\r\n                this.state.graph.links.removeIndices(removedLinks);\r\n                let newLinks = graph.links.relativeCompliment(this.state.graph.links, (x, y) => x === y.id);\r\n                newLinks.map(nn => {\r\n                    this.state.graph.links.push(\r\n                        (duplicateLink(graph.linkLib[nn], this.state.graph.nodes))\r\n                    );\r\n                });\r\n                if (props.selectedLinks) {\r\n                    this.state.graph.links.map(nn => {\r\n                        nn.selected = !!props.selectedLinks.find(t => t.id === nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.links.map(nn => {\r\n                    let nl = graph.linkLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                });\r\n                draw = true;\r\n            }\r\n\r\n            if (graph.groups && this.state && this.state.graph && this.state.graph.groups) {\r\n                let graph_groups = graph.groups.filter(x => graph.groupLib[x].leaves || graph.groupLib[x].groups);\r\n                let removedGroups = this.state.graph.groups.relativeCompliment(graph_groups, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.groups.indexOf(t);\r\n                });\r\n                this.state.graph.groups.removeIndices(removedGroups);\r\n                let newGroups = graph_groups\r\n                    .relativeCompliment(this.state.graph.groups, (x, y) => x === y.id)\r\n                    .filter(x => graph.groupLib[x] && (graph.groupLib[x].leaves || graph.groupLib[x].groups));\r\n                newGroups.map(nn => {\r\n                    this.state.graph.groups.push(\r\n                        (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                    )\r\n                })\r\n                graph_groups.forEach(group => {\r\n                    let g = this.state.graph.groups.find(x => x.id === group);\r\n                    applyGroup(g, graph.groupLib[group], this.state.graph.groups, this.state.graph.nodes);\r\n                    // (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                })\r\n\r\n                // this.state.graph.groups.map(group => {\r\n                //     var _group = graph.groupLib[group.id];\r\n                // })\r\n            }\r\n\r\n\r\n            if (draw) {\r\n                this.draw();\r\n            }\r\n        }\r\n    }\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div id={this.state.id} className=\"mindmap\" style={{ minHeight: 946 }}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.findIndex(x => x.id === nn.source),\r\n        target: nodes.findIndex(x => x.id === nn.target)\r\n    };\r\n}\r\nfunction applyGroup(mindmapgroup, _group, groups, nodes) {\r\n    if (_group) {\r\n        if (_group.leaves && _group.leaves.length) {\r\n            mindmapgroup.leaves = (mindmapgroup.leaves || []);\r\n            mindmapgroup.leaves.length = 0\r\n            mindmapgroup.leaves.push(..._group.leaves.map(l => nodes.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.leaves\r\n        }\r\n\r\n        if (_group.groups && _group.groups.length) {\r\n            mindmapgroup.groups = (mindmapgroup.groups || []);\r\n            mindmapgroup.groups.length = 0;\r\n            mindmapgroup.groups.push(..._group.groups.map(l => groups.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.groups\r\n        }\r\n\r\n        // if (nn.leaves) {\r\n        //     let leaves = nn.leaves.map(l => nodes.findIndex(x => x.id === l));\r\n        //     temp.leaves = leaves;\r\n        // }\r\n        // if (groups && nn.groups) {\r\n        //     let groups = nn.groups.map(l => groups.findIndex(x => x.id === l));\r\n        //     temp.groups = groups;\r\n        // }\r\n    }\r\n}\r\nfunction duplicateGroup(nn, nodes, groups) {\r\n    let temp = {\r\n        ...nn,\r\n    };\r\n    delete temp.leaves;\r\n    delete temp.groups;\r\n    return temp;\r\n}","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport TabPane from './tabpane';\r\n\r\n\r\nexport default class ButtonList extends Component {\r\n    render() {\r\n        return (\r\n            <TabPane active={this.props.active}>\r\n                {(this.props.items || []).map((item) => {\r\n                    return <div\r\n                        key={`allowed-${item.id}`} className={`external-event ${this.props.isSelected(item) ? 'bg-red' : 'bg-green'}`}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis'\r\n                        }} onClick={() => {\r\n                            if (this.props.onClick) {\r\n                                this.props.onClick(item);\r\n                            }\r\n                        }} > {item.title}</div>;\r\n                })\r\n                }\r\n            </TabPane >)\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass ModelActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var is_parent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsParent);\r\n        var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n        var permission_nodes = UIA.NodesByType(state, UIA.NodeTypes.Permission).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.IsAgent}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsAgent] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {is_agent ? (<SelectInput\r\n                        label={Titles.UserModel}\r\n                        options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                            return {\r\n                                value: node.id,\r\n                                title: UIA.GetNodeTitle(node)\r\n                            }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIUser],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.UserLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIUser,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.UserLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIUser] : ''} />) : null}\r\n                    <CheckBox\r\n                        label={Titles.IsUser}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsUser] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsUser,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.ManyToManyNexus}\r\n                        title={Titles.ManyToManyNexusDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {many_to_many_enabled ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.ManyToManyNexusModel}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    linkType: UIA.LinkProperties.ManyToManyLink.type\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                </FormControl>) : null}\r\n\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PROPERTY_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.PropertyLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddProperty} description={Titles.AddPropertyDescription} />\r\n                </ControlSideBarMenu>\r\n                {is_agent ? (<SelectInput\r\n                    label={Titles.PermissionType}\r\n                    options={permission_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.PermissionLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.IsParent}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsParent] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsParent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {is_parent ? (<SelectInput\r\n                    label={Titles.ParentTo}\r\n                    options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                        return {\r\n                            value: node.id,\r\n                            title: UIA.GetNodeTitle(node)\r\n                        }\r\n                    })}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                            source: id,\r\n                            linkType: UIA.LinkProperties.ParentLink.type\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIChoiceNode,\r\n                            id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.ParentLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {is_agent ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PERMISSION_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.PermissionLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddPermission} description={Titles.AddPermissionDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, HTTP_METHODS } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass FunctionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Function);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var agent_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).filter(x => UIA.GetNodeProp(x, UIA.NodeProperties.IsAgent)).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var function_types = Object.keys(Functions).map(funcKey => {\r\n            return {\r\n                title: Functions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                  {currentNode ? (<SelectInput\r\n                    label={Titles.AgentOperator}\r\n                    options={agent_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n              \r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.CustomFunction}\r\n                    title={Titles.CustomFunctionDescription}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseScopeGraph] : ''}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseScopeGraph,\r\n                            id: currentNode.id,\r\n                            value: value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.APPLY_FUNCTION_CONSTRAINTS, {\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PARAMETER_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddParameter} description={Titles.AddParameterDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_FUNCTION_OUTPUT_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddFunctionOutput} description={Titles.AddFunctionOutputDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(FunctionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\nclass PropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Property);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var show_dependent = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseUIDependsOn];;\r\n            var use_model_as_type = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseModelAsType);\r\n            var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n            var property_nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).filter(x => {\r\n                return x.id !== currentNode.id;\r\n            }).map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseDependentProperty}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIDependsOn] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIDependsOn,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_dependent ? (<SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        options={property_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIDependsOn,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIDependsOn] : ''} />) : null}\r\n                </FormControl>) : null}\r\n\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                </FormControl>) : null}\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.ManyToManyNexus}\r\n                        title={Titles.ManyToManyNexusDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.ManyToManyNexusType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }].filter(x => x));\r\n                        }} />\r\n                    {many_to_many_enabled ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).filter(x => UIA.GetNodeProp(x, NodeProperties.ManyToManyNexus)).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.ManyToManyNexus}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusType)} />) : null}\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseModelAsType}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseModelAsType] : ''}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UseModelAsType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.UIModelType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {!use_model_as_type ? (<SelectInput\r\n                        options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />) : null}\r\n                    {use_model_as_type ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyModelType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UIModelType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIModelType] : ''} />) : null}\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_ATTRIBUTE_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.AttributeLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddAttribute} description={Titles.AddAttributeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass AttributeFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Attribute);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var choice_nodes = UIA.NodesByType(state, UIA.NodeTypes.ChoiceList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var validation_nodes = UIA.NodesByType(state, UIA.NodeTypes.ValidationList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var show_choice = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UIAttributeType] == UIA.NodeAttributePropertyTypes.CHOICE;\r\n        var show_validations = UIA.Use(currentNode, UIA.NodeProperties.UseUIValidations);\r\n        var show_options = UIA.Use(currentNode, UIA.NodeProperties.UseUIOptions);\r\n        var show_extenions = UIA.Use(currentNode, UIA.NodeProperties.UseUIExtensionList);\r\n        var option_nodes = UIA.NodesByType(state, UIA.NodeTypes.OptionList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        \r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        title={Titles.UINameDescription}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.NodeAttributePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodeAttributePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />\r\n                    {show_choice ? (<SelectInput\r\n                        label={Titles.ChoiceTypes}\r\n                        options={choice_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceType] : ''} />) : null}\r\n                    {show_choice ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CHOICE_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddChoice}\r\n                                description={Titles.AddChoiceDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UISingular}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UISingular] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UISingular,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.UseUIValidations}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIValidations] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIValidations,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_validations ? (<SelectInput\r\n                        label={Titles.ValidationTypes}\r\n                        options={validation_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIValidationType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValdationLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />) : null}\r\n                    {show_validations ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_VALIDATION_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddValidationList}\r\n                                description={Titles.AddValidationListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UseUIOptions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIOptions] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIOptions,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_options ? (<SelectInput\r\n                        label={Titles.OptionsType}\r\n                        options={option_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />) : null}\r\n                    {show_options ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_OPTION_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseUIExtensions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIExtensionList] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIExtensionList,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                    {show_extenions ? (<SelectInput\r\n                        label={Titles.ExtensionTypes}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtensionList],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionList,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtensionList] : ''} />) : null}\r\n                    {show_extenions ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_EXTENSION_LIST_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddExtensionList}\r\n                                description={Titles.AddExtensionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(AttributeFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass NodeList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n\r\n        let nodeProperty = this.props.nodeProperty;\r\n        let currentNode = this.props.node;\r\n        if (!currentNode) {\r\n            return <div></div>\r\n        }\r\n        let linkType = this.props.linkType;\r\n        let items = this.props.items;\r\n        //  (UIA.GetNodeProp(currentNode, nodeProperty) || []).map(t => {\r\n        //     let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n        //     if (node) {\r\n        //         return {\r\n        //             title: UIA.GetNodeTitle(node),\r\n        //             id: node.id\r\n        //         }\r\n        //     }\r\n        // });\r\n        let { state } = this.props;\r\n\r\n        return <ButtonList active={true} isSelected={(item) => {\r\n            var types = UIA.GetNodeProp(currentNode, nodeProperty) || [];\r\n            if (types && types.some)\r\n                return item && types.some(x => x === item.id);\r\n        }}\r\n            items={items}\r\n            onClick={(item) => {\r\n                if (this.props.removeLink) {\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target: item.value,\r\n                        source: currentNode.id\r\n                    })\r\n                }\r\n                if (this.props.removeNode) {\r\n                    this.props.graphOperation(UIA.REMOVE_NODE, {\r\n                        id: item.value\r\n                    })\r\n                }\r\n            }} />\r\n    }\r\n}\r\nexport default UIConnect(NodeList)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport NodeList from './nodelist';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetManyToManyNodes, getPropertyNodes } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass PermissionMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Permission);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var permissions = currentNode ? { ...Methods, ...(currentNode.properties[UIA.NodeProperties.UIPermissions] || {}) } : null;\r\n        var model_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).toNodeSelect();\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var targetNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionTarget] : '';\r\n\r\n        var requestorNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionRequester] : '';\r\n        var propertyNodes = null;\r\n        if (targetNodeId) {\r\n            propertyNodes = getNodesByLinkType(graph, { id: targetNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            if (propertyNodes)\r\n                propertyNodes = propertyNodes.toNodeSelect()\r\n        }\r\n        var requestorPropertyNodes = null;\r\n        if (requestorNodeId) {\r\n            requestorPropertyNodes = getNodesByLinkType(graph, { id: requestorNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            requestorPropertyNodes = (requestorPropertyNodes || []).toNodeSelect();\r\n        }\r\n        let method_nodes = UIA.NodesByType(state, NodeTypes.Method).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        let currentRequester = UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionRequester);\r\n        let currentTarget = UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionTarget);\r\n        let manyToManyNodes = [];\r\n        if (currentRequester && currentTarget) {\r\n            manyToManyNodes = GetManyToManyNodes(graph, [currentRequester, currentTarget]);\r\n        }\r\n\r\n        let manyToManyNodeId = UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionManyToMany);\r\n        let manyToManyProperties = [];\r\n        if (manyToManyNodeId) {\r\n            manyToManyProperties = getPropertyNodes(graph, manyToManyNodeId).toNodeSelect();\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n                {/* <CheckBox label={Titles.MatchIds}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.MatchIds)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchIds,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />\r\n                <CheckBox label={Titles.ConnectionExists}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ConnectionExists)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ConnectionExists,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />\r\n                {\r\n                    currentNode ? (<SelectInput\r\n                        label={Titles.ManyToManyNexus}\r\n                        options={manyToManyNodes.toNodeSelect()}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.PermissionManyToMany],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.ManyToManyPermissionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.PermissionManyToMany,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ManyToManyPermissionLink }\r\n                            });\r\n                        }}\r\n                        value={manyToManyNodeId} />) : null\r\n                }\r\n                {\r\n                    manyToManyProperties && manyToManyProperties.length ? (<SelectInput\r\n                        label={Titles.PermissionDependsOnProperties}\r\n                        options={manyToManyProperties}\r\n                        onChange={(value) => {\r\n\r\n                            this.props.graphOperation(UIA.NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                links: [{\r\n                                    target: value,\r\n                                    linkProperties: {\r\n                                        mergeProperties: true,\r\n                                        properties: {\r\n                                            ...UIA.LinkProperties.ExistLink,\r\n                                            ...UIA.LinkProperties.PermissionDependencyPropertyManyToManyLink\r\n                                        }\r\n                                    }\r\n                                }],\r\n                                properties: {\r\n                                    [NodeProperties.UIText]: UIA.GetNodeProp(graph.nodeLib[value], NodeProperties.UIText),\r\n                                },\r\n                                groupProperties: {\r\n                                },\r\n                                linkProperties: {\r\n                                    mergeProperties: true,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.PermissionPropertyDependencyManyToManyLink\r\n                                    }\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={''} />) : null\r\n                }\r\n                {\r\n                    currentNode ? (<SelectInput\r\n                        label={Titles.AgentName}\r\n                        options={model_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.PermissionRequester],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.RequestorPermissionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.PermissionRequester,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.RequestorPermissionLink }\r\n                            });\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionRequester)} />) : null\r\n                }\r\n\r\n                {\r\n                    currentNode ? (<SelectInput\r\n                        label={Titles.TargetModel}\r\n                        options={model_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.PermissionTarget],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.AppliedPermissionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.PermissionTarget,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.AppliedPermissionLink }\r\n                            });\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionTarget)} />) : null\r\n                }\r\n                {\r\n                    currentNode ? <NodeList\r\n                        node={currentNode}\r\n                        removeLink={false}\r\n                        removeNode={true}\r\n                        linkType={UIA.LinkProperties.ManyToManyPermissionLink}\r\n                        nodeProperty={UIA.NodeProperties.PermissionManyToMany}\r\n                        items={getNodesByLinkType(graph, {\r\n                            id: currentNode.id,\r\n                            type: LinkType.PermissionPropertyDependency\r\n                        }).toNodeSelect()} /> : null\r\n                } */}\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ChoiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {/* <ControlSideBarMenuHeader title={Titles.ChoiceListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_CHOICE_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddChoiceItem}\r\n                        description={Titles.AddChoiceItemDescription} />\r\n                </ControlSideBarMenu> */}\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItemContainer extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                {this.props.title}\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        let agents = UIA.NodesByType(state, NodeTypes.Model).filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent)).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n\r\n        var input = currentNode ? (<SelectInput\r\n            label={Titles.Models}\r\n            options={nodes}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterModel),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterModel,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterModel)} />) : null;\r\n        var agentinput = currentNode ? (<SelectInput\r\n            label={Titles.Agents}\r\n            options={agents}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterAgent,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.AgentTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent)} />) : null;\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {input}\r\n                    {agentinput}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ValidationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.ValidationListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_VALIDATION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidationLinkItem\r\n                                }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddValidationItem}\r\n                        description={Titles.AddValidationItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass ValidationItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.ValidationRules).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.ValidationRules[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.ValidationType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />\r\n\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nclass ValidatorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.MethodF, UIA.NodeTypes.Function]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorFunction] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass OptionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.OptionListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_OPTION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.OptionItemLink }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddOptionItem}\r\n                        description={Titles.AddOptionItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createExecutor();\r\n                            executor = addValidatator(executor, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Executor,\r\n                                value: executor\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ExecutorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveExecutorPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport TextInput from './textinput';\r\nclass ConditionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Condition);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var conditionType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ConditionType);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var methods = currentNode ? GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }, {\r\n                type: LinkType.FunctionOperator,\r\n                direction: TARGET\r\n            }]\r\n        }) : [];\r\n        let ref2_properties = [];\r\n        let ref1_properties = [];\r\n        let matchRef = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        var model_options = [];\r\n        var functions = methods.map(x => UIA.GetNodeProp(x, NodeProperties.FunctionType)).filter(x => x);\r\n        if (ConditionFunctionSetups[conditionType] && ConditionFunctionSetups[conditionType].functions && functions && functions.length === 1) {\r\n            let { constraints } = ConditionFunctionSetups[conditionType].functions[functions[0]];\r\n            if (constraints) {\r\n                let methodProps = UIA.GetNodeProp(methods[0], NodeProperties.MethodProps);\r\n                model_options = Object.keys(constraints).filter(t => constraints[t].nodeTypes.indexOf(NodeTypes.Model) !== -1)\r\n                    .map(x => {\r\n                        if (methodProps && methodProps[x]) {\r\n                            return {\r\n                                title: `${UIA.GetNodeProp(GetNode(graph, methodProps[x]), NodeProperties.UIText) || x}(${x})`,\r\n                                value: x\r\n                            }\r\n                        }\r\n                        return {\r\n                            title: x,\r\n                            value: x\r\n                        }\r\n                    });\r\n\r\n                if (methodProps) {\r\n\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    if (temp.ref2) {\r\n                        ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n                    }\r\n                    if (temp.ref1) {\r\n                        ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <TextInput\r\n                    label={Titles.NodeLabel}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                    }} />\r\n                <SelectInput\r\n                    label={Titles.ConditionType}\r\n                    options={Object.keys(ConditionTypes).map(t => ({ title: t, value: ConditionTypes[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ConditionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={conditionType} />\r\n                {this.getMatchManyReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getEnumeration({\r\n                    conditionType,\r\n                    graph,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getMatchReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods,\r\n                    graph\r\n                })}\r\n            </TabPane>\r\n        );\r\n    }\r\n\r\n    getProperties(methodProps, temp, state, key = 'ref2') {\r\n        let refId = methodProps[temp[key]];\r\n        let properties = [];\r\n        let nodeProperties = GetLinkChain(state, {\r\n            id: refId,\r\n            links: [{\r\n                type: LinkType.PropertyLink,\r\n                direction: SOURCE\r\n            }]\r\n        });\r\n        if (nodeProperties) {\r\n            properties = nodeProperties.toNodeSelect();\r\n        }\r\n        return properties;\r\n    }\r\n    getEnumeration(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            graph,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {};\r\n        if (conditionType !== ConditionTypes.InEnumerable) {\r\n            return [];\r\n        }\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var permissionNode = GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }]\r\n        })[0]\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {\r\n            ref1: GetNodeProp(permissionNode, UIA.NodeProperties.PermissionRequester)\r\n        };\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        var enumeration = temp && temp[UIA.NodeProperties.Enumeration] ? temp[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (temp && temp[UIA.NodeProperties.AllowedEnumValues] ? temp[UIA.NodeProperties.AllowedEnumValues] : []);\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).toNodeSelect();\r\n        return [\r\n            (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.EnumerationReference,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ),\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    temp.ref1Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />,\r\n            currentNode ? (<SelectInput\r\n                label={Titles.Enumeration}\r\n                options={enumeration_nodes}\r\n                key={`${currentNode.id}-enum`}\r\n                onChange={(value) => {\r\n                    var id = currentNode.id;\r\n                    let target = temp[UIA.NodeProperties.Enumeration] || '';\r\n                    temp[UIA.NodeProperties.Enumeration] = value;\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target,\r\n                        source: id,\r\n                        linkType: UIA.LinkProperties.EnumerationReferenceLink.type\r\n                    })\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id,\r\n                        value: temp\r\n                    });\r\n                    this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                        target: value,\r\n                        source: id,\r\n                        properties: { ...UIA.LinkProperties.EnumerationReferenceLink }\r\n                    });\r\n                }}\r\n                value={temp[UIA.NodeProperties.Enumeration] || ''} />) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-allowed-enum-title`} title={Titles.AllowedEnums} />,\r\n            allowed && allowed.length ? allowed.map((_enum) => {\r\n                return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed].filter(x => x !== _enum);\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-disalloweditem-title`} title={Titles.DisallowedEnums} />,\r\n            disallowed && disallowed.length ? disallowed.map((_enum) => {\r\n                return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed, _enum].unique();\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null\r\n        ]\r\n    }\r\n\r\n    getMatchManyReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ) : null,\r\n            matchRef.ref1 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref1UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref1UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && !temp.ref1UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref1_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref1Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1Property} />\r\n            ) : null,\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref2 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref2UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref2UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref2 && !temp.ref2UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref2_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref2Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2Property} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.ManyToManyNexus}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp[ConditionTypeParameters.RefManyToMany] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef[ConditionTypeParameters.RefManyToMany]} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.ManyToManyExists}\r\n                    value={matchRef.refManyToManyExists}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyExists = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={refManyToMany_properties}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyProperty = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.refManyToManyProperty} />\r\n            ) : null,\r\n            matchRef.refManyToManyProperty && matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (<SelectInput\r\n                title={Titles.Condition}\r\n                label={Titles.Condition}\r\n                options={[...Object.keys(ConditionTypeOptions)].map(t => ({ title: t, value: t }))}\r\n                value={matchRef.refManyToManyCondition}\r\n                onChange={(value) => {\r\n                    temp.refManyToManyCondition = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                        id: currentNode.id,\r\n                        value\r\n                    });\r\n                }} />) : null\r\n        ].filter((x) => x).map((x, index) => {\r\n\r\n            return x;\r\n        });\r\n    }\r\n\r\n    getMatchReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        if (conditionType !== ConditionTypes.MatchReference) {\r\n            return null;\r\n        }\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var propertyType = UIA.NodeProperties.MatchReference;\r\n\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [(\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1} />\r\n        ),\r\n        matchRef.ref1 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref1UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref1 && !temp.ref1UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp[ConditionTypeParameters.Ref1Property] = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />\r\n        ) : null,\r\n        (\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2} />\r\n        ),\r\n        matchRef.ref2 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref2UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref2 && !temp.ref2UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref2_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2Property} />\r\n        ) : null\r\n        // matchRef.ref1 && matchRef.ref2 ? (\r\n        //     <SelectInput\r\n        //         label={Titles.ManyToManyNexus}\r\n        //         options={model_options}\r\n        //         onChange={(value) => {\r\n        //             var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        //             temp[ConditionTypeParameters.RefManyToMany] = value;\r\n        //             this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n        //                 prop: propertyType,\r\n        //                 id: currentNode.id,\r\n        //                 value: temp\r\n        //             });\r\n        //         }}\r\n        //         value={matchRef[ConditionTypeParameters.RefManyToMany]} />\r\n        // ) : null,\r\n        // matchRef.ref1 && matchRef.ref2 ? (\r\n        //     <SelectInput\r\n        //         label={Titles.Property}\r\n        //         options={refManyToMany_properties}\r\n        //         onChange={(value) => {\r\n        //             var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        //             temp.refManyToManyProperty = value;\r\n        //             this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n        //                 prop: propertyType,\r\n        //                 id: currentNode.id,\r\n        //                 value: temp\r\n        //             });\r\n        //         }}\r\n        //         value={matchRef.refManyToManyProperty} />\r\n        // ) : null,\r\n        // matchRef.refManyToManyProperty && matchRef.ref1 && matchRef.ref2 ? (<SelectInput\r\n        //     title={Titles.Condition}\r\n        //     label={Titles.Condition}\r\n        //     options={[...Object.keys(ConditionTypeOptions)].map(t => ({ title: t, value: t }))}\r\n        //     value={matchRef.refManyToManyCondition}\r\n        //     onChange={(value) => {\r\n        //         var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        //         temp.refManyToManyCondition = value;\r\n        //         this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n        //             prop: propertyType,\r\n        //             id: currentNode.id,\r\n        //             value: temp\r\n        //         });\r\n        //    }} />) : null\r\n        ].filter(x => x)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ConditionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SelectInput from './selectinput';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { getNodeLinks, getNodesLinkedFrom } from '../methods/graph_methods';\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\nimport { FunctionConstraintKeys } from '../constants/functiontypes';\r\nclass ParameterActivityMenu extends Component {\r\n    mustBeModel(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsModel]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeProperty(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsProperty]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeFunction(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsFunction]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Parameter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var linkedNodes = [];\r\n        var nodes = [];\r\n        if (currentNode && active) {\r\n            linkedNodes = getNodesLinkedFrom(UIA.GetCurrentGraph(state), { id: currentNode.id });\r\n            var musBeModel = this.mustBeModel(currentNode);\r\n            if (musBeModel) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeProperty(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeFunction(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Function).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode && linkedNodes.length === 0 ? (<SelectInput\r\n                    label={Titles.ParameterType}\r\n                    options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                        return {\r\n                            value: UIA.NodePropertyTypes[x],\r\n                            title: x\r\n                        }\r\n                    })}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.CodePropertyType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodePropertyType] : ''} />) : null}\r\n\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.ChoiceTypes}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIChoiceNode,\r\n                            id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ParameterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass OptionItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var show_custom = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseCustomUIOption];\r\n\r\n        var custom_options = UIA.NodesByType(state, UIA.NodeTypes.OptionCustom).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseCustomOption}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseCustomUIOption] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseCustomUIOption,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_custom ? (<SelectInput\r\n                        options={custom_options}\r\n                        label={Titles.OptionsType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionTypeCustom,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionCustomLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom] : ''} />) : (<SelectInput\r\n                            options={Object.keys(UIA.OptionsTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                return {\r\n                                    value: UIA.OptionsTypes[x],\r\n                                    title: x\r\n                                }\r\n                            })}\r\n                            label={Titles.OptionsType}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIOptionType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />)}\r\n                    {show_custom ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CUSTOM_OPTION, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nexport default class EnumerationEditMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput onClick={() => {\r\n                    if (this.props.onComplete) {\r\n                        this.props.onComplete(this.state.value);\r\n                        this.setState({ value: '' })\r\n                    }\r\n                }} value={this.state.value} onChange={(value) => {\r\n                    this.setState({ value })\r\n                }} inputgroup={true} placeholder={Titles.Enumeration} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum] = !item.enumeration[_enum];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (old_one) {\r\n                                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                        target: old_one,\r\n                                        source: id,\r\n                                    });\r\n                                }\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Executor,\r\n                                    value: validator\r\n                                })\r\n                                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.ExecutorModelItemLink,\r\n                                        ...createEventProp(LinkEvents.Remove, {\r\n                                            property: this.props.property,\r\n                                            validator: this.props.validator,\r\n                                            function: 'OnRemoveExecutorItemPropConnection',\r\n                                            node: item.node\r\n                                        })\r\n                                    }\r\n                                });\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, ExecutorUI } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, removeValidator, removeValidatorValidation, uuidv4 } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType || UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, this.props.modelKey || UIA.NodeProperties.ExecutorModel)) {\r\n\r\n            executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor);\r\n        }\r\n        let _ui = this.props.ui || ExecutorUI;\r\n        let propertyExecutors = <div></div>;\r\n        if (executor && executor.properties) {\r\n            propertyExecutors = Object.keys(executor.properties).map(key => {\r\n                let _validates = executor.properties[key];\r\n                let visualKey = `ExecutorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n\r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v]\r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ExecutorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(_ui).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(executorUI => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${executorUI}-afjlskf-asfd`}\r\n                            title={executorUI}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n                                executor = addValidatator(executor, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: executorUI,\r\n                                        ..._ui[executorUI]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                    value: executor\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveExecution} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedExecutors}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-executions`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectExecution}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectexecution`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyExecutors = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyExecutors}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyExecutors\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass ExecutorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(Methods).map(t => ({ title: t, value: t }))}\r\n                        label={Titles.Methods}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunctionType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunctionType] : ''} />\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunction] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = [];\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let visualKey = `ValidatorPropertyMenu${key}-${currentNode.id}`;\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                            validator = addValidatator(validator, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Validator,\r\n                                value: validator\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidatorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveValidationPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum] = !item.enumeration[_enum];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (old_one) {\r\n                                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                        target: old_one,\r\n                                        source: id,\r\n                                    });\r\n                                }\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.ValidatorModelItemLink,\r\n                                        ...createEventProp(LinkEvents.Remove, {\r\n                                            property: this.props.property,\r\n                                            validator: this.props.validator,\r\n                                            function: 'OnRemoveValidationItemPropConnection',\r\n                                            node: item.node\r\n                                        })\r\n                                    }\r\n                                });\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ValidatorItem from './validatoritem';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, ValidationUI } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, removeValidator, removeValidatorValidation, uuidv4 } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = <div></div>;\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let _validates = validator.properties[key];\r\n                let visualKey = `ValidatorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n \r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v] \r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: NodeProperties.Validator,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ValidatorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(ValidationUI).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(valiationUi => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${valiationUi}-afjlskf-asfd`}\r\n                            title={valiationUi}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                validator = addValidatator(validator, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: valiationUi,\r\n                                        ...ValidationUI[valiationUi]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveValidation} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedValidations}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-validations`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectValidation}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectvalidation`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyValidations\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport SelectInput from './selectinput';\r\nclass ExtensionListActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionTypeList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\r\n        var extentiontypes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={extentiontypes}\r\n                        label={Titles.ExtensionOptions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ExtensionListTypeActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_EXTENTION_NODE, {\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddExtensionNode}\r\n                        description={Titles.AddExtensionNodeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionListActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\nimport SidebarButton from './sidebarbutton';\r\n\r\nclass PermissionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Permission);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var permissions = currentNode ? { ...Methods, ...(currentNode.properties[UIA.NodeProperties.UIPermissions] || {}) } : null;\r\n        var model_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var targetNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionTarget] : '';\r\n\r\n        var requestorNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionRequester] : '';\r\n        var propertyNodes = null;\r\n        if (targetNodeId) {\r\n            propertyNodes = getNodesByLinkType(graph, { id: targetNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            if (propertyNodes)\r\n                propertyNodes = propertyNodes.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                })\r\n        }\r\n        var requestorPropertyNodes = null;\r\n        if (requestorNodeId) {\r\n            requestorPropertyNodes = getNodesByLinkType(graph, { id: requestorNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            requestorPropertyNodes = requestorPropertyNodes.map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionAttributes} />\r\n                {currentNode ? (<CheckBox\r\n                    title={Titles.OwnedResourcesDescription}\r\n                    label={Titles.OwnedResources}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsOwned]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsOwned,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                <ControlSideBarMenuHeader title={Titles.PermissionActions} />\r\n                {\r\n                    permissions ? (<FormControl>{(Object.keys(permissions).map(key => {\r\n                        return (<CheckBox key={`permissions-${key}`}\r\n                            label={Titles.Permissions[key]}\r\n                            value={permissions[key]}\r\n                            onChange={(value) => {\r\n                                permissions[key] = value;\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIPermissions,\r\n                                    id: currentNode.id,\r\n                                    value: {\r\n                                        ...permissions\r\n                                    }\r\n                                });\r\n                            }} />);\r\n                    }))}</FormControl>) : null\r\n                }\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    this.props.graphOperation(UIA.NEW_CONDITION_NODE, {\r\n                        parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                        groupProperties: {\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.ConditionLink }\r\n                        }\r\n                    });\r\n                }}>{Titles.AddCondition}</button>\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nclass ReferenceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = !!(UIA.Application(state, UIA.GRAPH_SCOPE) || []).length;\r\n        var referencable_nodes = (UIA.NodesByType(state, NodeTypes.Model, { useRoot: true }) || []).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.AddReference}\r\n                        options={referencable_nodes}\r\n                        onChange={(id) => {\r\n                            var node = UIA.GetNodeFromRoot(state, id);\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.ADD_NEW_REFERENCE_NODE,\r\n                                options: {\r\n                                    node,\r\n                                    rootNode: UIA.GetRootGraph(state)\r\n                                }\r\n                            }])\r\n                            // this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            //     target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                            //     source: id\r\n                            // })\r\n                            // this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            //     prop: UIA.NodeProperties.UIDependsOn,\r\n                            //     id,\r\n                            //     value\r\n                            // });\r\n                            // this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            //     target: value,\r\n                            //     source: id,\r\n                            //     properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            // });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ReferenceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as UIA from '../actions/uiactions';\r\n\r\nexport default class NavBarButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: UIA.GUID()\r\n        }\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    menuItems() {\r\n        var result = [];\r\n        var { menuItems } = this.props;\r\n        if (menuItems) {\r\n            menuItems.map((mi, index) => {\r\n                if (mi.onClick && mi.icon) {\r\n                    result.push((\r\n                        <a key={`goo-menu-${this.state.id}-icon-index-${index}`} title={mi.title} className=\"menu-item\" onClick={mi.onClick} style={{ pointerEvents: 'all' }}> <i className={mi.icon}></i> </a>\r\n                    ));\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        if (!this.props.visible) {\r\n            return <div></div>\r\n        }\r\n        var menuItems = this.menuItems();\r\n        return (\r\n            <div className=\"goo-menu container\" style={{\r\n                position: 'fixed',\r\n                transition: 'all 200ms',\r\n                top: this.props.top || 0,\r\n                left: this.props.left || 0\r\n            }}>\r\n                <nav className=\"menu\" style={{ pointerEvents: 'none' }}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={() => {\r\n                            if (this.props.onToggle) {\r\n                                this.props.onToggle();\r\n                            }\r\n                        }}\r\n                        checked={this.props.open}\r\n                        style={{ pointerEvents: 'all' }}\r\n                        href=\"#\" className=\"menu-open\"\r\n                        id={`${this.state.id}`} />\r\n                    <label className=\"menu-open-button\" htmlFor={`${this.state.id}`} style={{ pointerEvents: 'all' }}>\r\n                        <span className=\"hamburger hamburger-1\"></span>\r\n                        <span className=\"hamburger hamburger-2\"></span>\r\n                        <span className=\"hamburger hamburger-3\"></span>\r\n                    </label>\r\n                    {menuItems}\r\n                    {/* <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-bar-chart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-plus\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-heart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-envelope\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-cog\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-ellipsis-h\"></i> </a> */}\r\n                </nav>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport class GooMenuSVG extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'none' }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n                    <defs>\r\n                        <filter id=\"shadowed-goo\">\r\n\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feGaussianBlur in=\"goo\" stdDeviation=\"3\" result=\"shadow\" />\r\n                            <feColorMatrix in=\"shadow\" mode=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 -0.2\" result=\"shadow\" />\r\n                            <feOffset in=\"shadow\" dx=\"1\" dy=\"1\" result=\"shadow\" />\r\n                            <feComposite in2=\"shadow\" in=\"goo\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                        <filter id=\"goo\">\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                    </defs>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Box extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title() {\r\n        return this.props.title || '{title}';\r\n    }\r\n    primary() {\r\n        return this.props.primary ? 'box-primary' : '';\r\n    }\r\n    render() {\r\n        var style = {};\r\n        if (this.props.maxheight) {\r\n            style.maxHeight = `${this.props.maxheight}px`;\r\n            style.overflowY = 'scroll';\r\n        }\r\n        return (\r\n            <div className={`box ${this.primary()}`}>\r\n                <div className=\"box-header with-border\">\r\n                    <h3 className=\"box-title\">{this.title()}</h3>\r\n                </div>\r\n                <div className=\"box-body\" style={{ ...style }}>\r\n                    {this.props.children}\r\n                </div>\r\n                <div className=\"box-footer\">\r\n                    {this.props.footer}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport Box from './box';\r\nclass ChoiceListItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceListItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let properties = [];\r\n        if (currentNode) {\r\n            let model = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel);\r\n            properties = (getNodesByLinkType(graph, {\r\n                id: model,\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }) || []).map(t => {\r\n                return (<CheckBox\r\n                    key={`checkbox-${t.id}`}\r\n                    label={UIA.GetNodeTitle(t)}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties)[t.id] : ''}\r\n                    onChange={(value) => {\r\n                        let fprops = UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) || {};\r\n                        fprops[t.id] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FilterPropreties,\r\n                            id: currentNode.id,\r\n                            value: fprops\r\n                        });\r\n                    }} />)\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {properties}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Slider extends Component {\r\n    min() {\r\n        return this.props.min || \"1\";\r\n    }\r\n    max() {\r\n        return this.props.max || \"100\";\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"slidecontainer\">\r\n                <input type=\"range\" min={this.min()} onChange={(evt) => {\r\n                    if (this.props.onChange && !isNaN(evt.target.value)) {\r\n                        this.props.onChange(parseFloat(evt.target.value));\r\n                    }\r\n                }} max={this.max()} value={this.value()} className=\"slider\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContent extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-content`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className=\"user-footer\">\r\n                {this.props.children} \r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`nav-tabs-custom`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class EnumeratedTable extends Component {\r\n    render() {\r\n        var me = this;\r\n        var dataFunc = me.props.dataFunc || ((y) => y || '');\r\n        var rows = (me.props.data || []).map((x, xi) => {\r\n            return (<tr key={`${xi}-row`}>\r\n                {(me.props.columns || []).map((c, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell`}>{dataFunc(x[c.value], c.value, xi)}</td>)\r\n                })\r\n                }\r\n                {(me.props.columnButtons || []).map((fx, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell-btn`}>{fx(x, xi)}</td>)\r\n                })}\r\n            </tr>);\r\n        });\r\n        var headers = (me.props.columns || []).map((x, index) => {\r\n            return (<th key={`col-${index}`}>{x.title}</th>)\r\n        });\r\n\r\n        (me.props.columnButtons || []).map((fx, inde) => {\r\n            headers.push(<th key={`${inde}-cell-header`}></th>)\r\n        })\r\n        var ops = {};\r\n        ops.style = { maxHeight: this.props.maxHeight || 500, overflowY: 'auto' }\r\n        return (\r\n            <div {...ops}>\r\n                <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {headers}\r\n                        </tr>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport DropDownMenu from './dropdown';\r\nimport Box from './box';\r\nimport TabContent from './tabcontent';\r\nimport UserFooter from './userfooter';\r\nimport TabContainer from './tabcontainer';\r\nimport EnumeratedTable from './enumeratedtable';\r\n\r\nimport { createExtensionDefinition, defaultExtensionDefinitionType } from '../methods/graph_methods';\r\nconst EXTENSION_DEFINITION_MENU = 'EXTENSION_DEFINITION_MENU';\r\nconst EDITMODE = 'EDITMODE';\r\nclass ExtensionDefinitionMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            property: ''\r\n        }\r\n    }\r\n    form() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            if (def) {\r\n\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    editKey(k) {\r\n        return `${k}-edit`\r\n    }\r\n    tabKey(k) {\r\n        return `${k}-tabkey`;\r\n    }\r\n    footer() {\r\n        //\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active && currentNode) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            var addBtn = def && def.config.isEnumeration ? (<div className=\"pull-right\">\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    def.config.list = [...def.config.list, {}];\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                        id: currentNode.id,\r\n                        value: { ...def }\r\n                    });\r\n                }}>{Titles.Add}</button>\r\n            </div>) : null;\r\n            var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n            var btns = (<div className=\"pull-left\">\r\n                <div className=\"btn-group\">\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionDefinition)}\r\n                        type=\"button\"\r\n                        title={Titles.ExtensionDefinition}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-pencil-square\" /></button>\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionConfig)}\r\n                        type=\"button\" title={Titles.ExtensionConfig}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-book\" /></button>\r\n                    <button onClick={() => {\r\n                        if (!def) {\r\n                            def = createExtensionDefinition();\r\n                        }\r\n                        this.props.setVisual(tab_key, Titles.DependsOn);\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                            id: currentNode.id,\r\n                            value: def\r\n                        });\r\n                    }}\r\n                        type=\"button\" title={Titles.DependsOn}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-balance-scale\" /></button>\r\n                </div>\r\n                <div className=\"btn-group\">\r\n                    {UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? (<button onClick={() => {\r\n                        if (this.state.property) {\r\n                            if (!def) {\r\n                                def = createExtensionDefinition();\r\n                            }\r\n                            def.definition[this.state.property] = defaultExtensionDefinitionType();\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: def\r\n                            });\r\n\r\n                            this.setState({ property: '' });\r\n                        }\r\n                    }}\r\n                        type=\"button\" className=\"btn btn-default btn-flat\">{Titles.Add}</button>) : null}\r\n                </div>\r\n            </div>\r\n            )\r\n            return (<UserFooter>\r\n                {btns}\r\n                {addBtn}\r\n            </UserFooter>)\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var form = this.form();\r\n        var footer = this.footer();\r\n        var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n        var properties = currentNode ? UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        }) : [];\r\n        return (\r\n            <TabPane active={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                {!UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    {def ? <CheckBox\r\n                        label={Titles.Enumerable}\r\n                        value={def.config.isEnumeration}\r\n                        onChange={(value) => {\r\n                            def.config.isEnumeration = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, config: { ...def.config } }\r\n                            });\r\n                        }} /> : null}\r\n\r\n                    <TextInput\r\n                        value={this.state.property}\r\n                        label={Titles.Property}\r\n                        onChange={(val) => {\r\n                            this.setState({ property: val });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionConfig) ? (\r\n                    <EnumeratedTable columns={Object.keys(def.definition).map(key => {\r\n                        return { title: key, value: key }\r\n                    })}\r\n                        dataFunc={(x, key, index) => {\r\n                            return (<TextInput\r\n                                label={Titles.Value}\r\n                                value={x}\r\n                                onChange={(value) => {\r\n                                    if (def.config.isEnumeration) {\r\n                                        if (def.config && def.config.list && def.config.list[index]) {\r\n                                            def.config.list[index][key] = value;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (def.config && def.config.dictionary) {\r\n                                            def.config.dictionary[key] = value;\r\n                                        }\r\n                                    }\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def, config: { ...def.config, dictionary: { ...def.config.dictionary }, list: [...def.config.list] } }\r\n                                    });\r\n                                }}\r\n                            />)\r\n                        }}\r\n                        columnButtons={def.config.isEnumeration ? [(x, xi) => {\r\n                            return <div className=\"pull-right\"><button onClick={() => {\r\n                                if (def.config.isEnumeration) {\r\n                                    if (def.config && def.config.list && def.config.list[xi]) {\r\n                                        def.config.list = [...def.config.list.filter((a, i) => i !== xi)];\r\n                                    }\r\n                                    // delete def.definition[x.name];\r\n                                    // def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n                                }\r\n\r\n                            }} className=\"btn btn-block btn-default\"><i className=\"fa fa-trash\" /></button></div>\r\n                        }] : []}\r\n                        data={(def.config.isEnumeration ? def.config.list.map(obj => {\r\n                            return {\r\n                                ...obj\r\n                            }\r\n                        }) : ([{ ...def.config.dictionary }]))}\r\n                    />\r\n                ) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? <EnumeratedTable columns={[{ title: Titles.Name, value: 'name' }]}\r\n                    columnButtons={[(x) => {\r\n                        return <div className=\"pull-right\">\r\n                            <div class=\"btn-group\">\r\n                                <button title={Titles.KeyField} onClick={() => {\r\n                                    def.config = { ...def.config, keyField: x.name };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className={`btn   ${x.name === def.config.keyField ? 'btn-success' : 'btn-default'}`}><i className={`fa fa-anchor`} /></button>\r\n                                <button onClick={() => {\r\n                                    delete def.definition[x.name];\r\n                                    def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className=\"btn btn-default\">x</button>\r\n                            </div>\r\n                        </div>\r\n                    }]}\r\n                    data={Object.keys(def.definition).map(key => {\r\n                        return {\r\n                            name: key\r\n                        }\r\n                    })}\r\n                /> : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.DependsOn}\r\n                        title={Titles.DependsOnDescription}\r\n                        value={def.definition.dependsOn}\r\n                        onChange={(value) => {\r\n                            def.definition.dependsOn = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        title={Titles.DependentPropertyDescription}\r\n                        options={properties}\r\n                        value={def.definition.property}\r\n                        onChange={(value) => {\r\n                            def.definition.property = value;\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionDependencyLink }\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <TextInput\r\n                        label={Titles.MatchingValue}\r\n                        title={Titles.MatchingValueDescription}\r\n                        value={def.definition.match}\r\n                        onChange={(value) => {\r\n                            def.definition.match = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {footer}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionDefinitionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, HTTP_METHODS, MethodFunctions } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\n\r\nclass MethodActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var agent_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).filter(x => UIA.GetNodeProp(x, UIA.NodeProperties.IsAgent)).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var permission_nodes = UIA.NodesByType(state, UIA.NodeTypes.Permission).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var function_types = Object.keys(MethodFunctions).map(funcKey => {\r\n            return {\r\n                title: MethodFunctions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                {/* {currentNode ? (<SelectInput\r\n                    label={Titles.AgentOperator}\r\n                    options={agent_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.PermissionImpl}\r\n                    options={permission_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.PermissionImpl],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.PermissionImpl,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.PermissionLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionImpl] : ''} />) : null} */}\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_MODEL_ITEM_FILTER, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.ModelItemFilter }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddModelItemFilter} description={Titles.AddModelItemFilterDescription} />) : null}\r\n                    {/* {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_FUNCTION_OUTPUT_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddFunctionOutput} description={Titles.AddFunctionOutputDescription} />) : null} */}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass MethodPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var functionType = UIA.GetNodeProp(currentNode, NodeProperties.FunctionType);\r\n        let functionObject = MethodFunctions[functionType];\r\n        let methodparams = [];\r\n        if (functionObject && functionObject.constraints) {\r\n            methodparams = Object.values(functionObject.constraints).map(constraint => {\r\n                let nodes = UIA.NodesByType(state, constraint.nodeTypes).filter(node => {\r\n                    return !Object.keys(constraint).filter(x => x != 'key' && x !== 'nodeTypes')\r\n                        .find(x => UIA.GetNodeProp(node, x) !== constraint[x])\r\n                }).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n                return (<SelectInput\r\n                    key={constraint.key}\r\n                    label={constraint.key}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        let methodProps = UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) || {};\r\n                        let oldConnect = methodProps[constraint.key];\r\n                        methodProps[constraint.key] = value;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: oldConnect,\r\n                            source: id,\r\n                            linkType: UIA.LinkProperties.FunctionOperator.type\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodProps,\r\n                            id: currentNode.id,\r\n                            value: methodProps\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) ? UIA.GetNodeProp(currentNode, NodeProperties.MethodProps)[constraint.key] : ''} />);\r\n            })\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {methodparams}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst MAESTRO_DETAILS_MENU = 'MAESTRO_DETAILS_MENU';\r\n\r\nclass MaestroDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                active={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(MAESTRO_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-maestro-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewItem from './treeviewitem';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nconst NODE_MANAGEMENT_MENU = 'NODE_MANAGEMENT_MENU';\r\nconst NODE_MANAGEMENT = 'NODE_MANAGEMENT';\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let filter = (this.state.filter || '').toLowerCase();\r\n        let groups = UIA.GetNodes(state).filter(x => {\r\n            if (!filter) {\r\n                return false;\r\n            }\r\n            var str = this.toFilterString(x);\r\n            return str.indexOf(filter) !== -1;\r\n        }).groupBy(x => UIA.GetNodeProp(x, NodeProperties.NODEType));\r\n        let body = [];\r\n        body = Object.keys(groups).filter(group => groups[group].length).map((group, gi) => {\r\n            let groupKey = `NodeManagement-${group}`;\r\n            let groupNodes = groups[group].map((gn, gni) => {\r\n                return (\r\n                    <TreeViewMenu key={`node-${group}-${gi}-${gni}`}\r\n                        hideArrow={true}\r\n                        title={UIA.GetNodeProp(gn, NodeProperties.UIText)}\r\n                        icon={!UIA.GetNodeProp(gn, NodeProperties.Pinned) ? \"fa fa-circle-o\" : 'fa fa-check-circle-o'}\r\n                        toggle={() => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Pinned,\r\n                                id: gn.id,\r\n                                value: !UIA.GetNodeProp(gn, NodeProperties.Pinned)\r\n                            });\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            })\r\n            return (\r\n                <TreeViewMenu title={group} key={`node-${group}-${gi}`}\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    open={UIA.Visual(state, groupKey)}\r\n                    active={UIA.Visual(state, groupKey)}\r\n                    right={<span className=\"label label-primary \">{groups[group].length}</span>}\r\n                    toggle={() => {\r\n                        this.props.toggleVisual(groupKey)\r\n                    }}>\r\n                    {groupNodes}\r\n                </TreeViewMenu>\r\n            );\r\n        })\r\n        return (\r\n            <TreeViewMenu\r\n                title={`${Titles.Nodes} ${graph ? Object.keys(graph.visibleNodes || {}).length : ''}`}\r\n                icon={'fa fa-object-group'}\r\n                open={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                active={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(NODE_MANAGEMENT)\r\n                }}>\r\n\r\n                <TreeViewMenu\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    title={Titles.Menu}\r\n                    open={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    active={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    onClick={() => {\r\n                        this.props.toggleVisual(NODE_MANAGEMENT_MENU)\r\n                    }}>\r\n                    <div className=\"pull-left\">\r\n                        <div className=\"btn-group\">\r\n                            <button onClick={() => {\r\n                                this.props.graphOperation(UIA.GetNodes(state).filter(x => UIA.GetNodeProp(x, NodeProperties.Pinned)).map(node => {\r\n                                    return {\r\n                                        operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                        options: {\r\n                                            prop: UIA.NodeProperties.Pinned,\r\n                                            id: node.id,\r\n                                            value: false\r\n                                        }\r\n                                    }\r\n                                }));\r\n                            }}\r\n                                type=\"button\" title={Titles.ClearPinned}\r\n                                className=\"btn btn-default btn-flat\"><i className=\"fa fa-times\" /></button>\r\n                        </div>\r\n                    </div>\r\n                </TreeViewMenu>\r\n                <FormControl sidebarform={true}>\r\n                    <TextInput value={this.state.filter} onChange={(value) => {\r\n                        this.setState({ filter: value });\r\n                    }} inputgroup={true} placeholder={Titles.Filter} />\r\n                </FormControl>\r\n                {body}\r\n            </TreeViewMenu >\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode } from '../constants/nodetypes';\r\nclass CommonActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType)];\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextBox\r\n                        label={Titles.CodeName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodeName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.CodeName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <TextBox\r\n                        label={Titles.ValueName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValueName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValueName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <TextBox\r\n                        label={Titles.AgentName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.AgentName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.AgentName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CommonActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, GetLinkChain, GetLinkChainItem, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions, FunctionTypes, FunctionTemplateKeys } from '../constants/functiontypes';\r\n\r\nclass ModelFilterItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelItemFilter);\r\n        var propertyNodes = [];\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var methodNode = GetLinkChainItem(state, {\r\n                id: currentNode.id,\r\n                links: [{\r\n                    direction: TARGET,\r\n                    type: LinkType.ModelItemFilter\r\n                }]\r\n            });\r\n            var node = null;\r\n            var methodProps = UIA.GetMethodProps(methodNode);\r\n            if (methodProps) {\r\n                switch (UIA.GetFunctionType(methodNode)) {\r\n                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                        node = GetNode(graph, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                        break;\r\n                }\r\n            }\r\n            if (node) {\r\n                propertyNodes = GetLinkChain(state, {\r\n                    id: node.id,\r\n                    links: [{\r\n                        direction: SOURCE,\r\n                        type: LinkType.PropertyLink\r\n                    }]\r\n                }).toNodeSelect();\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.NodeLabel}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                        }} />\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let executor = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createExecutor();\r\n                            executor = addValidatator(executor, { id: value });\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: executor\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.ModelItemFilter,\r\n                                    value: node.id\r\n                                }\r\n                            }])\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ModelItemFilter,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveModelFilterPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass ModelRelationshipMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var hasLogicalChildren = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren);\r\n        var hasLogicalNieces = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalChildren}\r\n                        title={Titles.HasLogicalChildrenDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalChildren,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalChildren ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalChildrenTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalChildren ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalNieces}\r\n                        title={Titles.HasLogicalNiecesDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalNieces,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalNieces ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalNieceTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalNieces ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelRelationshipMenu)","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewItem from './treeviewitem';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport { uuidv4 } from '../methods/graph_methods';\r\n\r\nconst NODE_MANAGEMENT = 'NODE_MANAGEMENT';\r\nexport default class RadioButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: '',\r\n            id: uuidv4()\r\n        };\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let values = this.props.values || [];\r\n        return (\r\n            <div className=\"form-group\">\r\n                {values.map((val, index) => {\r\n                    let { value, title } = val;\r\n                    return (<div className=\"radio\" key={`${index}-radio-${this.state.id}`}>\r\n                        <label>\r\n                            <input type=\"radio\" name={this.state.id} id={this.state.id} value={this.props.value === value} onChange={() => {\r\n                                this.props.onChange(value);\r\n                            }} checked={this.props.value === value ? 'checked' : ''} />\r\n                            {title}\r\n                        </label>\r\n                    </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport FormControl from './formcontrol';\r\n\r\nimport RadioButton from './radiobutton';\r\nimport * as UIA from '../actions/uiactions';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport Box from './box';\r\nimport * as Titles from './titles';\r\n\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        if (!graph) {\r\n\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <Box title={Titles.Depth}>\r\n                <FormControl>\r\n                    <RadioButton value={graph.depth} onChange={(val) => {\r\n                        this.props.graphOperation([{ operation: UIA.SET_DEPTH, options: { depth: val } }]);\r\n                    }} values={[].interpolate(0, 7, x => ({ title: 'Depth  ' + x, value: x }))} />\r\n                </FormControl>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions, FunctionConstraintKeys } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\n\r\nclass MaestroActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Functions}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddFunction}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.FunctionLink\r\n                            }\r\n                        });\r\n\r\n                        var inputVariables = getNodesLinkedTo(graph, {\r\n                            id: value,\r\n                            constraints: {\r\n                                [FunctionConstraintKeys.IsInputVariable]: true\r\n                            }\r\n                        });\r\n\r\n                        inputVariables.map(inputVariable => {\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                source: inputVariable.id,\r\n                                target: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.FunctionVariable,\r\n                                    [LinkPropertyKeys.FUNCTION_ID]: value\r\n                                }\r\n                            });\r\n                        })\r\n                    }}\r\n                    value={''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst CONTROLLER_DETAILS_MENU = 'CONTROLLER_DETAILS_MENU';\r\n\r\nclass ControllerDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                active={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(CONTROLLER_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-controller-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, FunctionConstraintKeys, HTTP_METHODS } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys, NodeProperties, ExcludeDefaultNode } from '../constants/nodetypes';\r\n\r\nclass ControllerActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Controller);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, UIA.NodeTypes.Maestro).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Maestros}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddMaestros}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.MaestroLink\r\n                            }\r\n                        });\r\n                    }}\r\n                    value={''} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.CodeUser}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.CodeUser)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.CodeUser\r\n                        })\r\n                    }} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties } from '../constants/nodetypes';\r\n\r\nclass PermissionDependencyActivityMenu extends Component {\r\n    getTargetNodes(graph, currentNode) {\r\n        let targetPropertyNodes = [];\r\n        if (currentNode) {\r\n            targetPropertyNodes = getNodesByLinkType(graph, {\r\n                id: currentNode.id,\r\n                direction: SOURCE,\r\n                type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n            });\r\n            if (!targetPropertyNodes.length) {\r\n                targetPropertyNodes = getNodesByLinkType(graph, {\r\n                    id: currentNode.id,\r\n                    direction: SOURCE,\r\n                    type: LinkType.PermissionDependencyProperty\r\n                });\r\n            }\r\n        }\r\n        return targetPropertyNodes;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.PermissionDependency);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n\r\n        var extensionNodeId = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : '';\r\n        var ext_allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedExtensionValues] : []) || [];\r\n        var ext_disallowed = [];\r\n\r\n        if (extensionNodeId) {\r\n            var extensionNode = GetNode(graph, extensionNodeId);\r\n            if (extensionNode) {\r\n                var def = UIA.GetNodeProp(extensionNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n                if (def && def.config) {\r\n                    if (def.config.isEnumeration) {\r\n                        var extensionValues = def.config.list.map(t => {\r\n                            return t[def.config.keyField || Object.keys(t)[0]];\r\n                        })\r\n                        ext_allowed = ext_allowed.intersection(extensionValues);\r\n                        ext_disallowed = extensionValues.relativeCompliment(ext_allowed);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var enumeration = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedEnumValues] : []) || [];\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let targetPropertyNodes = this.getTargetNodes(graph, currentNode);\r\n        let targetNodeType = null;\r\n        let targetPropertyNode = null;\r\n        if (targetPropertyNodes.length) {\r\n            targetPropertyNode = targetPropertyNodes[0];\r\n            targetNodeType = UIA.GetNodeProp(targetPropertyNode, UIA.NodeProperties.UIAttributeType);\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionsDependencyAttribute} />\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN ? (<CheckBox\r\n                    title={Titles.UseEqualDescription}\r\n                    label={Titles.UseEqual}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEqual]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEqual,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN && UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseEqual) ? (<SelectInput\r\n                    title={Titles.IsEqualToDescription}\r\n                    label={Titles.IsEqualTo}\r\n                    options={['true', 'false'].map(t => ({ title: t, value: t }))}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsEqualTo]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsEqualTo,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.IncludedInListDescription}\r\n                    label={Titles.IncludedInList}\r\n                    value={currentNode.properties[UIA.NodeProperties.IncludedInList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IncludedInList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.ExcludedFromListDescription}\r\n                    label={Titles.ExcludedFromList}\r\n                    value={currentNode.properties[UIA.NodeProperties.ExcludedFromList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ExcludedFromList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseEnumeration}\r\n                    label={Titles.UseEnumeration}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEnumeration]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEnumeration,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseUIExtensions}\r\n                    label={Titles.UseUIExtensions}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseExtension]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && ext_allowed && ext_allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_allowed.map((_enum) => {\r\n                    return <div key={`ext_allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed].filter(x => x !== _enum))\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && ext_disallowed && ext_disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_disallowed.map((_enum) => {\r\n                    return <div key={`ext_disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed, _enum].unique())\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? (<SelectInput\r\n                        label={Titles.Extensions}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.ExtensionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />) : null\r\n                }\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? (<SelectInput\r\n                        label={Titles.Enumeration}\r\n                        options={enumeration_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.Enumeration],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.EnumerationLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Enumeration,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.EnumerationLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : ''} />) : null\r\n                }\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && allowed && allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? allowed.map((_enum) => {\r\n                    return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && disallowed && disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? disallowed.map((_enum) => {\r\n                    return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionDependencyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport DropDownMenu from './dropdown';\r\nimport DropDownMenuItem from './dropdownmenuitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst GRAPH_MENU = 'GRAPH_MENU';\r\nclass GraphMenu extends Component {\r\n    render() {\r\n        var me = this;\r\n        var { state } = me.props;\r\n        return (\r\n            <DropDownMenu icon={'fa fa-cart-plus'} open={UIA.Visual(state, GRAPH_MENU)} onClick={() => {\r\n                this.props.toggleVisual(GRAPH_MENU)\r\n            }}>\r\n                <DropDownMenuItem icon={\"fa fa-plus\"}\r\n                    title={Titles.AddNewSection}\r\n                    onClick={() => {\r\n                        this.props.addNewSubGraph();\r\n                    }}\r\n                    description={Titles.AddNewSectionDescription}></DropDownMenuItem>\r\n            </DropDownMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(GraphMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst SECTION_LIST = 'SECTION_LIST';\r\nclass SectionList extends Component {\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n        let sections = [];\r\n        let subGraphs = UIA.GetSubGraphs(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        if (subGraphs) {\r\n            subGraphs.map(sg => {\r\n                sections.push((\r\n                    <TreeViewItem\r\n                        key={sg.id}\r\n                        title={sg.title || Titles.Unknown}\r\n                        right={<span className=\"label label-primary pull-right\">{sg.nodes.length}</span>}\r\n                        onClick={() => {\r\n                            me.props.setApplication(UIA.GRAPH_SCOPE, [sg.id]);\r\n                        }} ></TreeViewItem>\r\n                ))\r\n            })\r\n        }\r\n        let body = sections;\r\n        if (rootGraph) {\r\n            body = (\r\n                <TreeViewMenu\r\n                    hideIcon={true}\r\n                    right={<span className=\"label label-primary pull-right\">{rootGraph.nodes.length}</span>}\r\n                    title={rootGraph.title || Titles.Unknown}\r\n                    hideArrow={true}\r\n                    open={true}\r\n                    active={true}\r\n                    onClick={() => {\r\n                        me.props.setApplication(UIA.GRAPH_SCOPE, null);\r\n                    }}>\r\n                    {sections}\r\n                </TreeViewMenu>)\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                title={Titles.Sections}\r\n                icon={'fa fa-cart-plus'}\r\n                open={UIA.Visual(state, SECTION_LIST)}\r\n                active={UIA.Visual(state, SECTION_LIST)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(SECTION_LIST)\r\n                }}>\r\n                {body}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SectionList);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nclass EnumerationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Enumeration);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n        return (\r\n            <TabPane active={active} >\r\n                <EnumerationEditMenu onComplete={(val) => {\r\n                    if (val) {\r\n                        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums, val].unique()\r\n                        });\r\n                    }\r\n                }\r\n                } />\r\n                {active && enums && enums.length ? enums.map((_enum) => {\r\n                    return <div className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums].filter(x => x !== _enum)\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(EnumerationActivityMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nclass SectionEdit extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        var section = UIA.GetCurrentScopedGraph(state);\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput value={section ? section.title : ''} onChange={(value) => {\r\n                    this.props.graphOperation(UIA.UPDATE_GRAPH_TITLE, { text: value });\r\n                }} inputgroup={true} placeholder={Titles.SectionEdit} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(SectionEdit)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nexport default class TopViewer extends Component {\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var style = {\r\n            position: 'relative',\r\n            width: '100%'\r\n        }\r\n        let active = this.active();\r\n        let height = 600;\r\n        return (\r\n            <div style={style}>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    transition: 'all 1s',\r\n                    pointerEvents: active ? 'all' : 'none',\r\n                    top: active ? 0 : '-1000px',\r\n                    backgroundColor: '#dd4b39d2'\r\n                }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export default {\n  \"hljs\": {\n    \"display\": \"block\",\n    \"overflowX\": \"auto\",\n    \"padding\": \"0.5em\",\n    \"color\": \"#000\",\n    \"background\": \"#f8f8ff\"\n  },\n  \"hljs-comment\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-quote\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-keyword\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-selector-tag\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-literal\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-subst\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-number\": {\n    \"color\": \"#40a070\"\n  },\n  \"hljs-string\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-doctag\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-selector-id\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-selector-class\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-section\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-type\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-params\": {\n    \"color\": \"#00f\"\n  },\n  \"hljs-title\": {\n    \"color\": \"#458\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-tag\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-name\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-attribute\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-template-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-regexp\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-link\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-symbol\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-bullet\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-built_in\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-builtin-name\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-meta\": {\n    \"color\": \"#999\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-deletion\": {\n    \"background\": \"#fdd\"\n  },\n  \"hljs-addition\": {\n    \"background\": \"#dfd\"\n  },\n  \"hljs-emphasis\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-strong\": {\n    \"fontWeight\": \"bold\"\n  }\n};","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded=\"true\">{this.title()}</a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tabs extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport TopViewer from './topviewer';\r\nimport Box from './box';\r\nimport SelectInput from './selectinput';\r\nimport { NodeTypes, NodeProperties, NameSpace, GeneratedTypes, GeneratedTypesMatch, GeneratedConstants, IdentityManagement } from '../constants/nodetypes';\r\nimport ModelGenerator from '../generators/modelgenerators';\r\nimport NamespaceGenerator from '../generators/namespacegenerator';\r\nimport ExtensionsGenerator from '../generators/extensiongenerator';\r\nimport ControllerGenerator from '../generators/controllergenerator';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport TextInput from './textinput';\r\nimport { GraphKeys } from '../methods/graph_methods';\r\n\r\nimport Tab from './tab';\r\nimport TabContainer from './tabcontainer';\r\nimport TabContent from './tabcontent';\r\nimport Tabs from './tabs';\r\nimport Generator from '../generators/generator';\r\nimport ButtonList from './buttonlist';\r\n\r\nconst MODEL_CODE = 'MODEL_CODE';\r\nconst SELECTED_CODE_TYPE = 'SELECTED_CODE_TYPE';\r\nconst CLASS_KEY = 'CLASS_KEY';\r\nconst CODE_VIEW_TAB = 'CODE_VIEW_TAB';\r\n\r\nclass CodeView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        let active = this.active();\r\n\r\n        let codeString = '';\r\n        let info = UIA.Visual(state, MODEL_CODE) || null;\r\n        let graphRoot = UIA.GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphKeys.NAMESPACE] : null;\r\n        let server_side_setup = graphRoot ? graphRoot[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n\r\n\r\n        let controllers = [];\r\n        let generatedContent = null;\r\n        if (state && graphRoot && active) {\r\n            var viewTab = UIA.Visual(state, CODE_VIEW_TAB);\r\n            var classKey = this.state[UIA.Visual(state, CODE_VIEW_TAB)];\r\n\r\n            var temp = Generator.generate({\r\n                type: viewTab,\r\n                key: classKey,\r\n                state\r\n            });\r\n            generatedContent = temp;\r\n\r\n            if (temp && temp[classKey]) {\r\n                codeString = temp[classKey].template;\r\n            }\r\n        }\r\n\r\n\r\n        var code_types = [\r\n            NodeTypes.Controller,\r\n            NodeTypes.Model,\r\n            NodeTypes.ExtensionType,\r\n            NodeTypes.Maestro,\r\n            ...Object.values(GeneratedTypes)\r\n        ];\r\n        let modelType = UIA.Visual(state, CODE_VIEW_TAB);\r\n        let models = [];\r\n        if (generatedContent) {\r\n            Object.keys(generatedContent).map(gcKey => {\r\n                models.push({\r\n                    id: gcKey,\r\n                    title: generatedContent[gcKey].name,\r\n                    value: generatedContent[gcKey].name\r\n                })\r\n            })\r\n        }\r\n\r\n        return (\r\n            <TopViewer active={active}>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <Box primary={true} title={Titles.Project}>\r\n                                <TextInput\r\n                                    onChange={(val) => {\r\n                                        this.props.setRootGraph(GraphKeys.NAMESPACE, val);\r\n                                        this.props.setAppsettingsAssemblyPrefixes(val);\r\n                                    }}\r\n                                    label={Titles.NameSpace}\r\n                                    value={namespace} />\r\n                                <SelectInput\r\n                                    label={Titles.ServerSideSetup}\r\n                                    options={Object.keys(IdentityManagement).map(t => {\r\n                                        return { title: t, value: IdentityManagement[t] };\r\n                                    })}\r\n                                    onChange={(value) => {\r\n                                        this.props.setRootGraph(GraphKeys.SERVER_SIDE_SETUP, value);\r\n                                    }}\r\n                                    value={server_side_setup} />\r\n                            </Box>\r\n                            <Box primary={true} title={Titles.CodeTypes}>\r\n                                <ButtonList active={true} isSelected={(item) => {\r\n                                    return item && this.state[UIA.Visual(state, CODE_VIEW_TAB)] === item.id;\r\n                                }}\r\n                                    items={models}\r\n                                    onClick={(item) => {\r\n                                        this.setState({\r\n                                            [UIA.Visual(state, CODE_VIEW_TAB)]: item.id\r\n                                        });\r\n                                    }} />\r\n                            </Box>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <TabContainer>\r\n                                <Tabs>\r\n                                    {code_types ? code_types.map(ct => {\r\n                                        return (<Tab key={ct} active={UIA.VisualEq(state, CODE_VIEW_TAB, ct)}\r\n                                            title={ct} onClick={() => {\r\n                                                this.props.setVisual(CODE_VIEW_TAB, ct)\r\n                                            }} />\r\n                                        );\r\n                                    }) : null}\r\n                                </Tabs>\r\n                            </TabContainer>\r\n                            <TabContent>\r\n                                <TabPane active={UIA.Visual(state, CODE_VIEW_TAB)}>\r\n                                    <Box title={Titles.Code} primary={true} maxheight={700}>\r\n                                        {codeString ? <SyntaxHighlighter language='csharp' style={docco}>{codeString}</SyntaxHighlighter> : null}\r\n                                    </Box>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </TopViewer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CodeView)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../constants/routes';\r\nimport { UIConnect } from '../utils/utils';\r\nimport DashboardLogo from './dashboardlogo';\r\nimport Header from './header';\r\nimport DashboardNavBar from './dashboardnavbar';\r\nimport SidebarToggle from './sidebartoggle';\r\nimport * as UIA from '../actions/uiactions';\r\nimport NavBarMenu from './navbarmenu';\r\nimport DropDownMenu from './dropdown';\r\nimport DropDownMenuItem from './dropdownmenuitem';\r\nimport MainSideBar from './mainsidebar';\r\nimport SideBarHeader from './sidebarheader';\r\nimport * as Titles from './titles';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport Content from './content';\r\nimport SideBar from './sidebar';\r\nimport SideBarTabs from './sidebartabs';\r\nimport SideBarTab from './sidebartab';\r\nimport ServiceActivityMenu from './serviceactivitymenu';\r\nimport SideBarContent from './sidebarcontent';\r\nimport NavBarButton from './navbarbutton';\r\nimport CheckBox from './checkbox';\r\nimport * as VC from '../constants/visual';\r\nimport MindMap from './mindmap';\r\nimport ModelActivityMenu from './modelactivitymenu';\r\nimport FunctionActivityMenu from './functionactivitymenu';\r\nimport PropertyActivityMenu from './propertyactivitymenu';\r\nimport AttributeFormControl from './attributeformcontrol';\r\nimport PermissionMenu from './permissionmenu';\r\nimport ChoiceActivityMenu from './choiceactivitymenu';\r\nimport TreeViewItemContainer from './treeviewitemcontainer';\r\nimport ModelFilterActivityMenu from './modelfilteractivitymenu';\r\nimport ValidationActivityMenu from './validationactivitymenu';\r\nimport ValidationItemFormControl from './validationitemactivitymenu';\r\nimport ValidatorActivityMenu from './validatoractivitymenu';\r\nimport OptionActivityMenu from './optionactivitymenu';\r\nimport ExecutorPropertyMenu from './executorpropertymenu';\r\nimport ConditionActivityMenu from './conditionactivitymenu';\r\nimport ParameterActivityMenu from './parameteractivitymenu';\r\nimport OptionItemFormControl from './optionitemformcontrol';\r\nimport ExecutorPropertyActivityMenu from './executorpropertyactivitymenu';\r\nimport ExecutorActivityMenu from './executoractivitymenu';\r\nimport ValidatorPropertyMenu from './validatorpropertymenu';\r\nimport ValidatorPropertyActivityMenu from './validatorpropertyactivitymenu';\r\nimport ExtensionListActivityMenu from './ExtensionListActivityMenu';\r\nimport PermissionActivityMenu from './permissionsactivitymenu';\r\nimport ReferenceActivityMenu from './referenceactivitymenu';\r\nimport { GooMenuSVG } from './goomenu';\r\nimport ChoiceListItemActivityMenu from './choicelistitemactivitymenu';\r\nimport GooMenu from './goomenu';\r\nimport FormControl from './formcontrol';\r\nimport ModelFilterMenu from './modelfiltermenu';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport Slider from './slider';\r\nimport ExtensionDefinitionMenu from './extensiondefinitionmenu';\r\nimport MethodActivityMenu from './methodactivitymenu';\r\nimport MethodPropertyMenu from './methodpropertymenu';\r\nimport MaestroDetailsMenu from './maestrodetailsmenu';\r\nimport NodeManagement from './nodemanagement';\r\nimport CommonActivityMenu from './commonactivitymenu';\r\nimport ModelFilterItemActivityMenu from './modelfilteritemactivitymenu';\r\nimport ModelRelationshipMenu from './modelrelationshipmenu';\r\nimport DepthChoice from './depthchoice';\r\nimport MaestroActivityMenu from './maestroactivitymenu';\r\nimport SidebarButton from './sidebarbutton';\r\nimport ControllerDetailsMenu from './controllerdetailsmenu';\r\nimport ControllerActivityMenu from './controlleractivitymenu';\r\nimport PermissionDependencyActivityMenu from './permissionsdependentactivitymenu';\r\nimport GraphMenu from './graphmenu';\r\nimport SectionList from './sectionlist';\r\nimport EnumerationActivityMenu from './enumerationactivitymenu'\r\nimport SectionEdit from './sectionedit'; import { NotSelectableNodeTypes, NodeProperties, NodeTypes, LinkType, LinkProperties, ExcludeDefaultNode, FilterUI } from '../constants/nodetypes';\r\nimport CodeView from './codeview';\r\nimport { findLinkInstance, getLinkInstance } from '../methods/graph_methods';\r\nconst SIDE_PANEL_OPEN = 'side-panel-open';\r\nconst NODE_MENU = 'NODE_MENU';\r\nconst CONNECTING_NODE = 'CONNECTING_NODE';\r\nconst LINK_DISTANCE = 'LINK_DISTANCE';\r\nconst MAIN_CONTENT = 'MAIN_CONTENT';\r\nconst MIND_MAP = 'MIND_MAP';\r\nconst CODE_VIEW = 'CODE_VIEW';\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setState();\r\n    }\r\n    minified() {\r\n        var { state } = this.props;\r\n        return UIA.GetC(state, UIA.VISUAL, UIA.DASHBOARD_MENU) ? 'sidebar-collapse' : '';\r\n    }\r\n    nodeSelectionMenuItems() {\r\n        var result = [];\r\n        var { state } = this.props;\r\n        if (UIA.Visual(state, UIA.SELECTED_NODE)) {\r\n            var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n            switch (UIA.GetNodeProp(currentNode, NodeProperties.NODEType)) {\r\n                case NodeTypes.Method:\r\n                case NodeTypes.Action:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnScreenLink);\r\n                        },\r\n                        icon: 'fa fa-download',\r\n                        title: Titles.OnLoad\r\n                    }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnSuccessLink);\r\n                            },\r\n                            icon: 'fa  fa-trophy',\r\n                            title: Titles.OnSuccessLink\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnItemSelection);\r\n                            },\r\n                            icon: 'fa  fa-tasks',\r\n                            title: Titles.OnItemSelection\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnAction);\r\n                            },\r\n                            icon: 'fa  fa-tasks',\r\n                            title: Titles.OnAction\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnFailureLink);\r\n                            },\r\n                            icon: 'fa  fa-frown-o',\r\n                            title: Titles.OnFailureLink\r\n                        });\r\n                    break;\r\n                case NodeTypes.ScreenItem:\r\n                case NodeTypes.ScreenCollection:\r\n                case NodeTypes.ScreenContainer:\r\n                case NodeTypes.Screen:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.ChildLink);\r\n                        },\r\n                        icon: 'fa  fa-share-alt',\r\n                        title: Titles.ChildLink\r\n                    });\r\n                    break;\r\n            }\r\n            result.push({\r\n                onClick: () => {\r\n                    this.props.setVisual(CONNECTING_NODE, true);\r\n                },\r\n                icon: 'fa fa-link',\r\n                title: Titles.GenericLink\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var selected_node_bb = UIA.Visual(state, UIA.SELECTED_NODE_BB);\r\n        var menu_left = 0;\r\n        var menu_top = 0;\r\n        if (selected_node_bb) {\r\n            menu_left = selected_node_bb.right;\r\n            menu_top = selected_node_bb.top;\r\n        }\r\n        var nodeSelectionMenuItems = this.nodeSelectionMenuItems();\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let graph = UIA.GetCurrentGraph(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        let vgraph = UIA.GetVisualGraph(state);\r\n        let main_content = UIA.Visual(state, MAIN_CONTENT);\r\n        let version = '0.0.0';\r\n        let workspace = null;\r\n        if (rootGraph) {\r\n            version = `${rootGraph.version.major}.${rootGraph.version.minor}.${rootGraph.version.build}`;\r\n            workspace = rootGraph.workspace;\r\n        }\r\n        let hoveredLink = null;\r\n        if (UIA.Visual(state, UIA.HOVERED_LINK)) {\r\n            hoveredLink = getLinkInstance(rootGraph, UIA.Visual(state, UIA.HOVERED_LINK));\r\n        }\r\n        return (\r\n            <div className={`skin-red sidebar-mini skin-red ${this.minified()}`} style={{\r\n                height: 'auto',\r\n                minHeight: '100vh'\r\n            }}>\r\n                <div className=\"wrapper\" style={{ height: '100vh' }} >\r\n                    <GooMenuSVG />\r\n                    <GooMenu\r\n                        visible={UIA.Visual(state, UIA.SELECTED_NODE)}\r\n                        left={menu_left - 20}\r\n                        open={UIA.Visual(state, NODE_MENU)}\r\n                        onToggle={() => {\r\n                            this.props.toggleVisual(NODE_MENU);\r\n                        }}\r\n                        top={menu_top + 30}\r\n                        menuItems={nodeSelectionMenuItems}\r\n                    />\r\n                    <div data-tid=\"container\">\r\n                        <Header>\r\n                            <DashboardLogo />\r\n                            <DashboardNavBar>\r\n                                <SidebarToggle />\r\n                                <NavBarMenu>\r\n                                    {UIA.Visual(state, UIA.SELECTED_LINK) ? <NavBarButton icon={'fa fa-minus-square'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, UIA.Visual(state, UIA.SELECTED_LINK));\r\n                                        this.props.setVisual(UIA.SELECTED_LINK, null);\r\n                                    }} /> : null}\r\n                                    <GraphMenu />\r\n                                    <NavBarButton icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.NEW_NODE);\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n\r\n                                    <NavBarButton icon={'fa fa-minus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_NODE, { id: UIA.Visual(state, UIA.SELECTED_NODE) });\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, false);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                    <NavBarButton onClick={() => {\r\n                                        this.props.toggleVisual('side-panel-open')\r\n                                    }} />\r\n                                </NavBarMenu>\r\n                            </DashboardNavBar>\r\n                        </Header>\r\n                        <MainSideBar>\r\n                            <SideBarMenu>\r\n                                <SideBarHeader title={Titles.MainNavigation} />\r\n                                <TreeViewMenu active={main_content === MIND_MAP || !main_content} hideArrow={true} title={Titles.MindMap} icon={'fa fa-map'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, MIND_MAP);\r\n                                }} />\r\n                                <TreeViewMenu active={main_content === CODE_VIEW} hideArrow={true} title={Titles.CodeView} icon={'fa fa-code'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, CODE_VIEW);\r\n                                }} />\r\n\r\n                                {hoveredLink && hoveredLink.properties ? <SideBarHeader title={hoveredLink.properties.type} /> : null}\r\n                                <SideBarHeader title={Titles.FileMenu} />\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    active={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    title={Titles.AppMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.ApplicationMenu)\r\n                                    }}>\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.New} icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.newRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Open} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.openRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Save} icon={'fa fa-save'} onClick={() => {\r\n                                        this.props.saveGraphToFile();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Scaffold} icon={'fa fa-cog'} onClick={() => {\r\n                                        this.props.scaffoldProject();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.PublishFiles} icon={'fa fa-cog'} onClick={() => {\r\n                                        this.props.scaffoldProject({ filesOnly: true });\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.SetWorkingDirectory} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.setWorkingDirectory();\r\n                                    }} />\r\n                                    <TreeViewMenu title={version} hideArrow={true} />\r\n                                    {workspace ? <TreeViewMenu hideArrow={true} title={workspace} icon={'fa fa-cog'} /> : null}\r\n                                    <SectionEdit />\r\n                                </TreeViewMenu>\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    active={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    title={Titles.GraphPropertiesMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.GraphPropertiesMenu)\r\n                                    }}>\r\n                                    <TreeViewItemContainer>\r\n                                        <Slider min={30} max={500}\r\n                                            onChange={(value) => {\r\n                                                this.props.setVisual(LINK_DISTANCE, value);\r\n                                            }}\r\n                                            value={UIA.Visual(state, LINK_DISTANCE)} />\r\n                                    </TreeViewItemContainer>\r\n                                    <TreeViewItemContainer>\r\n                                        <DepthChoice />\r\n                                    </TreeViewItemContainer>\r\n                                </TreeViewMenu>\r\n                                <SectionList />\r\n                                <NodeManagement />\r\n                                <MaestroDetailsMenu />\r\n                                <ControllerDetailsMenu />\r\n                            </SideBarMenu>\r\n                        </MainSideBar>\r\n                        <Content>\r\n                            <CodeView active={UIA.Visual(state, MAIN_CONTENT) === CODE_VIEW} />\r\n                            <MindMap\r\n                                linkDistance={UIA.Visual(state, LINK_DISTANCE)}\r\n                                onNodeClick={(nodeId, boundingBox) => {\r\n                                    if (UIA.Visual(state, CONNECTING_NODE)) {\r\n                                        let selectedId = UIA.Visual(state, UIA.SELECTED_NODE);\r\n                                        console.log(`selectedId:${selectedId} => nodeId:${nodeId}`)\r\n                                        let properties = UIA.Visual(state, CONNECTING_NODE);\r\n                                        if (properties === true) {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId\r\n                                            });\r\n                                        }\r\n                                        else {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId,\r\n                                                properties\r\n                                            });\r\n                                        }\r\n                                        this.props.setVisual(CONNECTING_NODE, false);\r\n                                        this.props.setVisual(UIA.SELECTED_NODE, null);\r\n                                    }\r\n                                    else {\r\n                                        if ([UIA.Visual(state, UIA.SELECTED_NODE)].indexOf(nodeId) === -1) {\r\n                                            this.props.SelectedNode(nodeId);\r\n                                            this.props.setVisual(UIA.SELECTED_NODE_BB, boundingBox);\r\n                                            this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        }\r\n                                        else {\r\n                                            this.props.SelectedNode(null);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                onLinkClick={(linkId, boundingBox) => {\r\n                                    console.log(`link id : ${linkId}`)\r\n                                    this.props.setVisual(UIA.SELECTED_LINK, linkId);\r\n\r\n                                    this.props.setVisual(UIA.HOVERED_LINK, linkId);\r\n                                }}\r\n\r\n                                selectedColor={UIA.Colors.SelectedNode}\r\n                                selectedLinks={[UIA.Visual(state, UIA.SELECTED_LINK)].filter(x => x)}\r\n                                selectedNodes={[UIA.Visual(state, UIA.SELECTED_NODE)].filter(x => x)}\r\n                                graph={vgraph || graph}></MindMap>\r\n                        </Content>\r\n                        <SideBar open={UIA.Visual(state, SIDE_PANEL_OPEN)} extraWide={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                            <SideBarTabs>\r\n                                <SideBarTab\r\n                                    icon=\"fa fa-cog\"\r\n                                    active={UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB)} onClick={() => {\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, PARAMETER_TAB)\r\n                                }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, SCOPE_TAB)\r\n                                }} />\r\n                            </SideBarTabs>\r\n                            {UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB) ? (<SideBarContent>\r\n                                {currentNode && !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, NodeProperties.NODEType)] ? (<FormControl>\r\n                                    <TextInput\r\n                                        label={Titles.NodeLabel}\r\n                                        value={currentNode.properties ? currentNode.properties.text : ''}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                                        }} />\r\n                                    {NotSelectableNodeTypes[currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null] ? null : (<SelectInput\r\n                                        disabled={!UIA.CanChangeType(currentNode)}\r\n                                        label={Titles.NodeType}\r\n                                        options={Object.keys(UIA.NodeTypes).filter(x => !NotSelectableNodeTypes[UIA.NodeTypes[x]]).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                            return {\r\n                                                value: UIA.NodeTypes[x],\r\n                                                title: x\r\n                                            }\r\n                                        })}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, { prop: UIA.NodeProperties.NODEType, id: currentNode.id, value })\r\n                                        }}\r\n                                        value={currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null} />)}\r\n                                    <CheckBox\r\n                                        label={Titles.Collapsed}\r\n                                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Collapsed)}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.Collapsed,\r\n                                                id: currentNode.id,\r\n                                                value\r\n                                            });\r\n                                        }} />\r\n                                    <CheckBox\r\n                                        label={Titles.Pinned}\r\n                                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Pinned)}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.Pinned,\r\n                                                id: currentNode.id,\r\n                                                value\r\n                                            });\r\n                                        }} />\r\n                                </FormControl>) : null}\r\n                                <ChoiceListItemActivityMenu />\r\n                                <ConditionActivityMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (<SideBarContent>\r\n                                <ControllerActivityMenu />\r\n                                <ModelFilterItemActivityMenu />\r\n                                <CommonActivityMenu />\r\n                                <FunctionActivityMenu />\r\n                                <MethodActivityMenu />\r\n                                <AttributeFormControl />\r\n                                <ParameterActivityMenu />\r\n                                <ModelActivityMenu />\r\n                                <ValidatorActivityMenu />\r\n                                <ExecutorActivityMenu />\r\n                                <PropertyActivityMenu />\r\n                                <ValidationItemFormControl />\r\n                                <ChoiceActivityMenu />\r\n                                <MaestroActivityMenu />\r\n                                <ValidationActivityMenu />\r\n                                <OptionActivityMenu />\r\n                                <ExtensionListActivityMenu />\r\n                                <OptionItemFormControl />\r\n                                <PermissionActivityMenu />\r\n                                <ExtensionDefinitionMenu />\r\n                                <ModelFilterActivityMenu />\r\n                                <PermissionDependencyActivityMenu />\r\n                                <EnumerationActivityMenu />\r\n                                <ServiceActivityMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<SideBarContent>\r\n                                <ValidatorPropertyMenu />\r\n                                <ReferenceActivityMenu />\r\n                                <ExecutorPropertyMenu />\r\n                                <ModelRelationshipMenu />\r\n                                <MethodPropertyMenu />\r\n                                <PermissionMenu />\r\n                                <ModelFilterMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ValidatorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ExecutorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ExecutorPropertyActivityMenu ui={FilterUI} modelKey={NodeProperties.ModelItemFilter} nodeType={NodeTypes.ModelItemFilter} nodeProp={NodeProperties.FilterModel} />) : null}\r\n                        </SideBar>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\nconst SELECTED_TAB = 'SELECTED_TAB';\r\nconst DEFAULT_TAB = 'DEFAULT_TAB';\r\nconst PARAMETER_TAB = 'PARAMETER_TAB';\r\nconst SCOPE_TAB = 'SCOPE_TAB';\r\nexport default UIConnect(Dashboard)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport Routes from '../Routes';\r\n\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    const { store, history } = this.props;\r\n    return (\r\n      <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n          <Routes />\r\n        </ConnectedRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport routes from './constants/routes';\r\nimport App from './containers/App';\r\nimport Dashboard from './components/dashboard';\r\nexport default () => (\r\n  <App>\r\n    <Switch>\r\n      <Route path={routes.HOME} component={Dashboard} />\r\n    </Switch>\r\n  </App>\r\n);\r\n","// @flow\r\nimport type { GetState, Dispatch } from '../reducers/types';\r\n\r\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\r\n\r\nexport function increment() {\r\n  return {\r\n    type: INCREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function decrement() {\r\n  return {\r\n    type: DECREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function incrementIfOdd() {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    const { counter } = getState();\r\n\r\n    if (counter % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch(increment());\r\n  };\r\n}\r\n\r\nexport function incrementAsync(delay: number = 1000) {\r\n  return (dispatch: Dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(increment());\r\n    }, delay);\r\n  };\r\n}\r\n","// @flow\r\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER } from '../actions/counter';\r\nimport type { Action } from './types';\r\n\r\nexport default function counter(state: number = 0, action: Action) {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return state + 1;\r\n    case DECREMENT_COUNTER:\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// @flow\r\nimport * as UIA from '../actions/uiactions';\r\nexport function updateUI(state, action) {\r\n    var newstate = { ...state };\r\n    newstate[action.section] = { ...newstate[action.section] || {} }\r\n    newstate[action.section][action.item] = action.value;\r\n    return newstate;\r\n}\r\nexport function makeDefaultState() {\r\n    return {};\r\n}\r\nexport default function uiReducer(state, action) {\r\n    state = state || makeDefaultState();\r\n    switch (action.type) {\r\n        case UIA.UI_UPDATE:\r\n            return updateUI(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport counter from './counter';\r\nimport uiReducer from './uiReducer';\r\nexport default function createRootReducer(history) {\r\n  return combineReducers({\r\n    router: connectRouter(history),\r\n    counter,\r\n    uiReducer\r\n  });\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware, routerActions } from 'connected-react-router';\r\nimport { createLogger } from 'redux-logger';\r\nimport createRootReducer from '../reducers';\r\nimport * as counterActions from '../actions/counter';\r\nimport type { counterStateType } from '../reducers/types';\r\n\r\nconst history = createHashHistory();\r\n\r\nconst rootReducer = createRootReducer(history);\r\n\r\nconst configureStore = (initialState?: counterStateType) => {\r\n  // Redux Configuration\r\n  const middleware = [];\r\n  const enhancers = [];\r\n\r\n  // Thunk Middleware\r\n  middleware.push(thunk);\r\n\r\n  // Logging Middleware\r\n  const logger = createLogger({\r\n    level: 'info',\r\n    collapsed: true\r\n  });\r\n\r\n  // Skip redux logs in console during the tests\r\n  if (process.env.NODE_ENV !== 'test') {\r\n    middleware.push(logger);\r\n  }\r\n\r\n  // Router Middleware\r\n  const router = routerMiddleware(history);\r\n  middleware.push(router);\r\n\r\n  // Redux DevTools Configuration\r\n  const actionCreators = {\r\n    ...counterActions,\r\n    ...routerActions\r\n  };\r\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n  /* eslint-disable no-underscore-dangle */\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Options: http://extension.remotedev.io/docs/API/Arguments.html\r\n        actionCreators\r\n      })\r\n    : compose;\r\n  /* eslint-enable no-underscore-dangle */\r\n\r\n  // Apply Middleware & Compose Enhancers\r\n  enhancers.push(applyMiddleware(...middleware));\r\n  const enhancer = composeEnhancers(...enhancers);\r\n\r\n  // Create Store\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\r\n      '../reducers',\r\n      // eslint-disable-next-line global-require\r\n      () => store.replaceReducer(require('../reducers').default)\r\n    );\r\n  }\r\n\r\n  return store;\r\n};\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from '../reducers';\r\nconst history = createHashHistory();\r\nconst rootReducer = createRootReducer(history);\r\nconst router = routerMiddleware(history);\r\nconst enhancer = applyMiddleware(thunk, router);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, enhancer);\r\n}\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport configureStoreDev from './configureStore.dev';\r\nimport configureStoreProd from './configureStore.prod';\r\n\r\nconst selectedConfigureStore =\r\n  process.env.NODE_ENV === 'production'\r\n    ? configureStoreProd\r\n    : configureStoreDev;\r\n\r\nexport const { configureStore } = selectedConfigureStore;\r\n\r\nexport const { history } = selectedConfigureStore;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport Root from './containers/Root';\r\nimport { configureStore, history } from './store/configureStore';\r\nimport './app.global.css';\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n  <AppContainer>\r\n    <Root store={store} history={history} />\r\n  </AppContainer>,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./containers/Root', () => {\r\n    // eslint-disable-next-line global-require\r\n    const NextRoot = require('./containers/Root').default;\r\n    render(\r\n      <AppContainer>\r\n        <NextRoot store={store} history={history} />\r\n      </AppContainer>,\r\n      document.getElementById('root')\r\n    );\r\n  });\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _reactRouter = require('react-router');\n\nvar _actions = require('./actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar createConnectedRouter = function createConnectedRouter(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n  /*\n   * ConnectedRouter listens to a history object passed from props.\n   * When history is changed, it dispatches action to redux store.\n   * Then, store will pass props to component to render.\n   * This creates uni-directional flow from history->store->router->components.\n   */\n\n  var ConnectedRouter = function (_get__2) {\n    _inherits(ConnectedRouter, _get__2);\n\n    function ConnectedRouter(props, context) {\n      _classCallCheck(this, ConnectedRouter);\n\n      var _this = _possibleConstructorReturn(this, (ConnectedRouter.__proto__ || Object.getPrototypeOf(ConnectedRouter)).call(this, props));\n\n      _this.inTimeTravelling = false;\n\n      // Subscribe to store changes\n      _this.unsubscribe = context.store.subscribe(function () {\n        // Extract store's location\n        var _toJS = toJS(getIn(context.store.getState(), ['router', 'location'])),\n            pathnameInStore = _toJS.pathname,\n            searchInStore = _toJS.search,\n            hashInStore = _toJS.hash;\n        // Extract history's location\n\n\n        var _props$history$locati = props.history.location,\n            pathnameInHistory = _props$history$locati.pathname,\n            searchInHistory = _props$history$locati.search,\n            hashInHistory = _props$history$locati.hash;\n\n        // If we do time travelling, the location in store is changed but location in history is not changed\n\n        if (pathnameInHistory !== pathnameInStore || searchInHistory !== searchInStore || hashInHistory !== hashInStore) {\n          _this.inTimeTravelling = true;\n          // Update history's location to match store's location\n          props.history.push({\n            pathname: pathnameInStore,\n            search: searchInStore,\n            hash: hashInStore\n          });\n        }\n      });\n\n      var handleLocationChange = function handleLocationChange(location, action) {\n        // Dispatch onLocationChanged except when we're in time travelling\n        if (!_this.inTimeTravelling) {\n          props.onLocationChanged(location, action);\n        } else {\n          _this.inTimeTravelling = false;\n        }\n      };\n\n      // Listen to history changes\n      _this.unlisten = props.history.listen(handleLocationChange);\n      // Dispatch a location change action for the initial location\n      handleLocationChange(props.history.location, props.history.action);\n      return _this;\n    }\n\n    _createClass(ConnectedRouter, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.unlisten();\n        this.unsubscribe();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            history = _props.history,\n            children = _props.children;\n\n\n        return _get__('React').createElement(\n          _get__('Router'),\n          { history: history },\n          children\n        );\n      }\n    }]);\n\n    return ConnectedRouter;\n  }(_get__('Component'));\n\n  ConnectedRouter.contextTypes = {\n    store: _get__('PropTypes').shape({\n      getState: _get__('PropTypes').func.isRequired,\n      subscribe: _get__('PropTypes').func.isRequired\n    }).isRequired\n  };\n\n  ConnectedRouter.propTypes = {\n    history: _get__('PropTypes').shape({\n      action: _get__('PropTypes').string.isRequired,\n      listen: _get__('PropTypes').func.isRequired,\n      location: _get__('PropTypes').object.isRequired,\n      push: _get__('PropTypes').func.isRequired\n    }).isRequired,\n    location: _get__('PropTypes').oneOfType([_get__('PropTypes').object, _get__('PropTypes').string]).isRequired,\n    action: _get__('PropTypes').string.isRequired,\n    basename: _get__('PropTypes').string,\n    children: _get__('PropTypes').oneOfType([_get__('PropTypes').func, _get__('PropTypes').node]),\n    onLocationChanged: _get__('PropTypes').func.isRequired\n  };\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      action: getIn(state, ['router', 'action']),\n      location: getIn(state, ['router', 'location'])\n    };\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      onLocationChanged: function onLocationChanged(location, action) {\n        return dispatch(_get__('onLocationChanged')(location, action));\n      }\n    };\n  };\n\n  return _get__('connect')(mapStateToProps, mapDispatchToProps)(ConnectedRouter);\n};\n\nexports.default = _get__('createConnectedRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'Component':\n      return _react.Component;\n\n    case 'PropTypes':\n      return _propTypes2.default;\n\n    case 'onLocationChanged':\n      return _actions.onLocationChanged;\n\n    case 'connect':\n      return _reactRedux.connect;\n\n    case 'createConnectedRouter':\n      return createConnectedRouter;\n\n    case 'React':\n      return _react2.default;\n\n    case 'Router':\n      return _reactRouter.Router;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectedRouter === 'undefined' ? 'undefined' : _typeof(createConnectedRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectedRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectedRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * This action type will be dispatched when your history\n * receives a location change.\n */\nvar LOCATION_CHANGE = exports.LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\n\nvar onLocationChanged = exports.onLocationChanged = function onLocationChanged(location, action) {\n  return {\n    type: _get__('LOCATION_CHANGE'),\n    payload: {\n      location: location,\n      action: action\n    }\n  };\n};\n\n/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\nvar CALL_HISTORY_METHOD = exports.CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\n\nvar updateLocation = function updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: _get__('CALL_HISTORY_METHOD'),\n      payload: {\n        method: method,\n        args: args\n      }\n    };\n  };\n};\n\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\nvar push = exports.push = _get__('updateLocation')('push');\nvar replace = exports.replace = _get__('updateLocation')('replace');\nvar go = exports.go = _get__('updateLocation')('go');\nvar goBack = exports.goBack = _get__('updateLocation')('goBack');\nvar goForward = exports.goForward = _get__('updateLocation')('goForward');\n\nvar routerActions = exports.routerActions = { push: _get__('push'), replace: _get__('replace'), go: _get__('go'), goBack: _get__('goBack'), goForward: _get__('goForward') };\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return LOCATION_CHANGE;\n\n    case 'CALL_HISTORY_METHOD':\n      return CALL_HISTORY_METHOD;\n\n    case 'updateLocation':\n      return updateLocation;\n\n    case 'push':\n      return push;\n\n    case 'replace':\n      return replace;\n\n    case 'go':\n      return go;\n\n    case 'goBack':\n      return goBack;\n\n    case 'goForward':\n      return goForward;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _actions = require('./actions');\n\nvar actions = _interopRequireWildcard(_actions);\n\nvar _ConnectedRouter = require('./ConnectedRouter');\n\nvar _ConnectedRouter2 = _interopRequireDefault(_ConnectedRouter);\n\nvar _reducer = require('./reducer');\n\nvar _reducer2 = _interopRequireDefault(_reducer);\n\nvar _middleware = require('./middleware');\n\nvar _middleware2 = _interopRequireDefault(_middleware);\n\nvar _selectors = require('./selectors');\n\nvar _selectors2 = _interopRequireDefault(_selectors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar createAll = function createAll(structure) {\n  return _extends({}, _get__('actions'), _get__('createSelectors')(structure), {\n    ConnectedRouter: _get__('createConnectedRouter')(structure),\n    connectRouter: _get__('createConnectRouter')(structure),\n    routerMiddleware: _get__('routerMiddleware')\n  });\n};\n\nexports.default = _get__('createAll');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'actions':\n      return _filterWildcardImport__(actions);\n\n    case 'createSelectors':\n      return _selectors2.default;\n\n    case 'createConnectedRouter':\n      return _ConnectedRouter2.default;\n\n    case 'createConnectRouter':\n      return _reducer2.default;\n\n    case 'routerMiddleware':\n      return _middleware2.default;\n\n    case 'createAll':\n      return createAll;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createAll === 'undefined' ? 'undefined' : _typeof(createAll);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createAll, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createAll)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nfunction _filterWildcardImport__() {\n  var wildcardImport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__' && propertyName !== '__RewireAPI__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = exports.createMatchSelector = exports.getAction = exports.getLocation = exports.routerMiddleware = exports.connectRouter = exports.ConnectedRouter = exports.routerActions = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.CALL_HISTORY_METHOD = exports.LOCATION_CHANGE = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createAll = require('./createAll');\n\nvar _createAll2 = _interopRequireDefault(_createAll);\n\nvar _plain = require('./structure/plain');\n\nvar _plain2 = _interopRequireDefault(_plain);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _get__2 = _get__('createAll')(_get__('plainStructure'));\n\nvar LOCATION_CHANGE = _get__2.LOCATION_CHANGE,\n    CALL_HISTORY_METHOD = _get__2.CALL_HISTORY_METHOD,\n    push = _get__2.push,\n    replace = _get__2.replace,\n    go = _get__2.go,\n    goBack = _get__2.goBack,\n    goForward = _get__2.goForward,\n    routerActions = _get__2.routerActions,\n    ConnectedRouter = _get__2.ConnectedRouter,\n    connectRouter = _get__2.connectRouter,\n    routerMiddleware = _get__2.routerMiddleware,\n    getLocation = _get__2.getLocation,\n    getAction = _get__2.getAction,\n    createMatchSelector = _get__2.createMatchSelector;\nexports.LOCATION_CHANGE = LOCATION_CHANGE;\nexports.CALL_HISTORY_METHOD = CALL_HISTORY_METHOD;\nexports.push = push;\nexports.replace = replace;\nexports.go = go;\nexports.goBack = goBack;\nexports.goForward = goForward;\nexports.routerActions = routerActions;\nexports.ConnectedRouter = ConnectedRouter;\nexports.connectRouter = connectRouter;\nexports.routerMiddleware = routerMiddleware;\nexports.getLocation = getLocation;\nexports.getAction = getAction;\nexports.createMatchSelector = createMatchSelector;\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'createAll':\n      return _createAll2.default;\n\n    case 'plainStructure':\n      return _plain2.default;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\nvar routerMiddleware = function routerMiddleware(history) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        // eslint-disable-line no-unused-vars\n        if (action.type !== _get__('CALL_HISTORY_METHOD')) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n\n        history[method].apply(history, _toConsumableArray(args));\n      };\n    };\n  };\n};\n\nexports.default = _get__('routerMiddleware');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'CALL_HISTORY_METHOD':\n      return _actions.CALL_HISTORY_METHOD;\n\n    case 'routerMiddleware':\n      return routerMiddleware;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof routerMiddleware === 'undefined' ? 'undefined' : _typeof(routerMiddleware);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(routerMiddleware, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(routerMiddleware)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: history.location,\n      action: history.action\n    });\n\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === _get__('LOCATION_CHANGE')) {\n        return merge(state, payload);\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexports.default = _get__('createConnectRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return _actions.LOCATION_CHANGE;\n\n    case 'createConnectRouter':\n      return createConnectRouter;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectRouter === 'undefined' ? 'undefined' : _typeof(createConnectRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _reactRouter = require('react-router');\n\nvar createSelectors = function createSelectors(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n\n  var getLocation = function getLocation(state) {\n    return toJS(getIn(state, ['router', 'location']));\n  };\n  var getAction = function getAction(state) {\n    return toJS(getIn(state, ['router', 'action']));\n  };\n\n  // It only makes sense to recalculate the `matchPath` whenever the pathname\n  // of the location changes. That's why `createMatchSelector` memoizes\n  // the latest result based on the location's pathname.\n  var createMatchSelector = function createMatchSelector(path) {\n    var lastPathname = null;\n    var lastMatch = null;\n\n    return function (state) {\n      var _ref = getLocation(state) || {},\n          pathname = _ref.pathname;\n\n      if (pathname === lastPathname) {\n        return lastMatch;\n      }\n      lastPathname = pathname;\n      var match = _get__('matchPath')(pathname, path);\n      if (!match || !lastMatch || match.url !== lastMatch.url) {\n        lastMatch = match;\n      }\n\n      return lastMatch;\n    };\n  };\n\n  return { getLocation: getLocation, getAction: getAction, createMatchSelector: createMatchSelector };\n};\n\nexports.default = _get__('createSelectors');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'matchPath':\n      return _reactRouter.matchPath;\n\n    case 'createSelectors':\n      return createSelectors;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createSelectors === 'undefined' ? 'undefined' : _typeof(createSelectors);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createSelectors, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createSelectors)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* Code from github.com/erikras/redux-form by Erik Rasmussen */\n\nvar getIn = function getIn(state, path) {\n  if (!state) {\n    return state;\n  }\n\n  var length = path.length;\n  if (!length) {\n    return undefined;\n  }\n\n  var result = state;\n  for (var i = 0; i < length && !!result; ++i) {\n    result = result[path[i]];\n  }\n\n  return result;\n};\n\nexports.default = _get__(\"getIn\");\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getIn\":\n      return getIn;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === \"undefined\" ? \"undefined\" : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof getIn === \"undefined\" ? \"undefined\" : _typeof(getIn);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(getIn, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(getIn)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _getIn = require('./getIn');\n\nvar _getIn2 = _interopRequireDefault(_getIn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar structure = {\n  fromJS: function fromJS(value) {\n    return value;\n  },\n  getIn: _get__('getIn'),\n  merge: function merge(state, payload) {\n    return _extends({}, state, payload);\n  },\n  toJS: function toJS(value) {\n    return value;\n  }\n};\n\nexports.default = _get__('structure');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'getIn':\n      return _getIn2.default;\n\n    case 'structure':\n      return structure;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof structure === 'undefined' ? 'undefined' : _typeof(structure);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(structure, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(structure)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = false;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","module.exports = require(\"d3\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"history\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-hot-loader\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-router\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"react-syntax-highlighter\");","module.exports = require(\"redux\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"util\");","module.exports = require(\"webcola\");"],"sourceRoot":""}