{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/containers/App.js","webpack:///./app/components/titles.js","webpack:///./app/constants/nodetypes.js","webpack:///./app/constants/functiontypes.js","webpack:///./app/methods/graph_methods.js","webpack:///./app/actions/uiactions.js","webpack:///./app/ipc/handler-events.js","webpack:///./app/generators/namespacegenerator.js","webpack:///./app/generators/controllergenerator.js","webpack:///./app/generators/modelgenerators.js","webpack:///./app/generators/extensiongenerator.js","webpack:///./app/generators/permissiongenerator.js","webpack:///./app/generators/validationrulegenerator.js","webpack:///./app/generators/streamprocessorchestrationgenerator.js","webpack:///./app/generators/modelitemfiltergenerator.js","webpack:///./app/generators/maestrogenerator.js","webpack:///./app/generators/changeparametergenerator.js","webpack:///./app/generators/constantsgenerator.js","webpack:///./app/generators/streamprocessgenerator.js","webpack:///./app/generators/changeresponsegenerator.js","webpack:///./app/generators/executiongenerator.js","webpack:///./app/generators/modelreturngenerator.js","webpack:///./app/generators/modelexceptiongenerator.js","webpack:///./app/generators/modelgetgenerators.js","webpack:///./app/generators/generator.js","webpack:///./app/actions/ipcActions.js","webpack:///./app/utils/utils.js","webpack:///./app/components/dashboardlogo.js","webpack:///./app/components/header.js","webpack:///./app/components/dashboardnavbar.js","webpack:///./app/components/sidebartoggle.js","webpack:///./app/components/navbarmenu.js","webpack:///./app/components/dropdown.js","webpack:///./app/components/dropdownmenuitem.js","webpack:///./app/components/mainsidebar.js","webpack:///./app/components/sidebarheader.js","webpack:///./app/components/sidebarmenu.js","webpack:///./app/components/treeviewmenu.js","webpack:///./app/components/treeviewitem.js","webpack:///./app/components/content.js","webpack:///./app/components/sidebar.js","webpack:///./app/components/sidebartabs.js","webpack:///./app/components/sidebartab.js","webpack:///./app/components/controlsidebarmenu.js","webpack:///./app/components/tabpane.js","webpack:///./app/components/formcontrol.js","webpack:///./app/components/textinput.js","webpack:///./app/components/selectinput.js","webpack:///./app/components/checkbox.js","webpack:///./app/constants/servicetypes.js","webpack:///./app/components/serviceactivitymenu.js","webpack:///./app/components/sidebarcontent.js","webpack:///./app/components/navbarbutton.js","webpack:///./app/constants/visual.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./app/components/mindmap.js","webpack:///./app/components/buttonlist.js","webpack:///./app/components/modelactivitymenu.js","webpack:///./app/components/functionactivitymenu.js","webpack:///./app/components/propertyactivitymenu.js","webpack:///./app/components/attributeformcontrol.js","webpack:///./app/components/nodelist.js","webpack:///./app/components/permissionmenu.js","webpack:///./app/components/choiceactivitymenu.js","webpack:///./app/components/treeviewitemcontainer.js","webpack:///./app/components/modelfilteractivitymenu.js","webpack:///./app/components/validationactivitymenu.js","webpack:///./app/components/validationitemactivitymenu.js","webpack:///./app/components/validatoractivitymenu.js","webpack:///./app/components/optionactivitymenu.js","webpack:///./app/components/executorpropertymenu.js","webpack:///./app/components/conditionactivitymenu.js","webpack:///./app/components/parameteractivitymenu.js","webpack:///./app/components/optionitemformcontrol.js","webpack:///./app/components/enumerationeditmenu.js","webpack:///./app/components/executoritem.js","webpack:///./app/components/executorpropertyactivitymenu.js","webpack:///./app/components/executoractivitymenu.js","webpack:///./app/components/validatorpropertymenu.js","webpack:///./app/components/validatoritem.js","webpack:///./app/components/validatorpropertyactivitymenu.js","webpack:///./app/components/ExtensionListActivityMenu.js","webpack:///./app/components/permissionsactivitymenu.js","webpack:///./app/components/referenceactivitymenu.js","webpack:///./app/components/goomenu.js","webpack:///./app/components/box.js","webpack:///./app/components/choicelistitemactivitymenu.js","webpack:///./app/components/modelfiltermenu.js","webpack:///./app/components/slider.js","webpack:///./app/components/tabcontent.js","webpack:///./app/components/userfooter.js","webpack:///./app/components/tabcontainer.js","webpack:///./app/components/enumeratedtable.js","webpack:///./app/components/extensiondefinitionmenu.js","webpack:///./app/components/methodactivitymenu.js","webpack:///./app/components/methodpropertymenu.js","webpack:///./app/components/maestrodetailsmenu.js","webpack:///./app/components/nodemanagement.js","webpack:///./app/components/commonactivitymenu.js","webpack:///./app/components/modelfilteritemactivitymenu.js","webpack:///./app/components/modelrelationshipmenu.js","webpack:///./app/components/radiobutton.js","webpack:///./app/components/depthchoice.js","webpack:///./app/components/maestroactivitymenu.js","webpack:///./app/components/controllerdetailsmenu.js","webpack:///./app/components/controlleractivitymenu.js","webpack:///./app/components/permissionsdependentactivitymenu.js","webpack:///./app/components/graphmenu.js","webpack:///./app/components/sectionlist.js","webpack:///./app/components/enumerationactivitymenu.js","webpack:///./app/components/sectionedit.js","webpack:///./app/components/topviewer.js","webpack:///./node_modules/react-syntax-highlighter/dist/esm/styles/hljs/docco.js","webpack:///./app/components/tab.js","webpack:///./app/components/tabs.js","webpack:///./app/components/codeview.js","webpack:///./app/components/dashboard.js","webpack:///./app/containers/Root.js","webpack:///./app/Routes.js","webpack:///./app/actions/counter.js","webpack:///./app/reducers/counter.js","webpack:///./app/reducers/uiReducer.js","webpack:///./app/reducers/index.js","webpack:///./app/store/configureStore.dev.js","webpack:///./app/store/configureStore.prod.js","webpack:///./app/store/configureStore.js","webpack:///./app/index.js","webpack:///./node_modules/connected-react-router/lib/ConnectedRouter.js","webpack:///./node_modules/connected-react-router/lib/actions.js","webpack:///./node_modules/connected-react-router/lib/createAll.js","webpack:///./node_modules/connected-react-router/lib/index.js","webpack:///./node_modules/connected-react-router/lib/middleware.js","webpack:///./node_modules/connected-react-router/lib/reducer.js","webpack:///./node_modules/connected-react-router/lib/selectors.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/getIn.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/index.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_function-to-string.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/redux-logger/dist/redux-logger.js","webpack:///external \"d3\"","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"history\"","webpack:///external \"path\"","webpack:///external \"react\"","webpack:///external \"react-dom\"","webpack:///external \"react-hot-loader\"","webpack:///external \"react-redux\"","webpack:///external \"react-router\"","webpack:///external \"react-router-dom\"","webpack:///external \"react-syntax-highlighter\"","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"util\"","webpack:///external \"webcola\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","React","render","children","this","props","_jsx","external_react_","RemoveValidation","RemoveExecution","SelectValidation","SelectExecution","SelectedValidations","Remove","ServerSideSetup","AddCondition","GraphPropertiesMenu","NodeLabel","NodeType","Nodes","Models","ConditionType","Reference","Depth","New","ServiceActivity","CodeTypes","Project","NameSpace","Pinned","Collapsed","GenericLink","OnLoad","ChildLink","OnFailureLink","OnAction","OnItemSelection","OnSuccessLink","SelectedExecutors","Agents","SelectProperty","DisallowedEnums","Methods","AllowedEnums","ModelActions","AddProperty","PermissionsDependencyAttribute","KeyField","UseEnumeration","Enumeration","CodeUser","AddPropertyDescription","AddAttribute","AddAttributeDescription","UIName","UINameDescription","UISingular","Unknown","PropertyValueType","PropertyModelType","AddReference","AgentOperator","Enumerable","Value","AppMenu","CodeName","ValueName","AgentName","FileMenu","Code","MainNavigation","AddParameter","AddParameterDescription","AddFunctionOutput","Menu","AddFunctionOutputDescription","IsAgent","IsUser","ParameterType","OwnedResources","AddModelItemFilter","AddModelItemFilterDescription","PermissionType","PermissionAttributes","OwnedResourcesDescription","PermissionActions","Permissions","Create","Get","GetAll","Getall","Delete","Getbyowner","Update","ChoiceTypes","AddChoice","AddChoiceDescription","AddPermissionDescription","AddPermission","Select","ValidationListActions","AddValidationItem","AddValidationItemDescription","UseUIValidations","AddValidationList","AddValidationListDescription","Add","ValidationTypes","ValidationType","OptionListActions","AddOptionItem","AddOptionItemDescription","Name","OptionsType","UseCustomOption","UseUIOptions","AddOptionList","AddOptionListDescription","DependentProperty","UseDependentProperty","UseUIExtensions","IncludedInList","IsEqualTo","UseEqualDescription","UseEqual","IsEqualToDescription","ExcludedFromList","ExcludedFromListDescription","IncludedInListDescription","ExtensionTypes","AddExtensionList","AddExtensionListDescription","ExtensionListTypeActions","AddExtensionNode","ExtensionOptions","AddExtensionNodeDescription","ExtensionDefinition","Extensions","ExtensionConfig","DependsOn","UseId","Property","Condition","DependsOnDescription","DependentPropertyDescription","MatchingValue","MatchingValueDescription","FunctionTypes","Functions","AddFunction","MaestroDetails","HttpMethod","AddMaestros","HttpRoute","Maestros","Save","Open","PublishFiles","Scaffold","SetWorkingDirectory","MindMap","CodeView","ParentTo","IsParent","UserModel","ManyToManyNexus","ManyToManyExists","ManyToManyNexusModel","ManyToManyNexusDescription","HasLogicalChildren","LogicalChildrenTypes","LogicalNieceTypes","HasLogicalChildrenDescription","HasLogicalNieces","HasLogicalNiecesDescription","UseModelAsType","CustomFunction","CustomFunctionDescription","AddNewSection","Sections","AddNewSectionDescription","SectionEdit","DefaultGraphTitle","DefaultSubGraphTitle","ClearPinned","Filter","NodeTypes","Concept","Model","ModelFilter","ScreenContainer","Screen","ScreenCollection","ScreenItem","Attribute","ChoiceList","Permission","PermissionDependency","ModelItemFilter","ValidationList","ValidationListItem","Validator","Executor","OptionList","OptionListItem","OptionCustom","ExtensionTypeList","ExtensionType","Function","Method","Action","Parameter","FunctionOutput","Controller","Maestro","Services","ReferenceNode","ClassNode","ExcludeDefaultNode","[object Object]","GeneratedTypes","ChangeParameter","ChangeResponse","Constants","Executors","ModelReturn","ModelGet","ModelExceptions","StreamProcess","StreamProcessOrchestration","ValidationRule","IdentityManagement","RedQuickViews","STANDARD_TEST_USING","STANDARD_CONTROLLER_USING","GeneratedConstants","StreamTypes","FunctionName","ColorStates","NotSelectableNodeTypes","NodeTypeColors","FunctionGroups","External","Internal","Core","GroupProperties","IsExternal","FunctionGroup","Tests","Controllers","Validations","Parameters","Interface","NodeProperties","MatchReference","MatchManyReferenceParameter","EnumerationReference","AllowedExtensionValues","ServiceType","DisallowedExtensionValues","AllowedEnumValues","DisallowedEnumValues","ServiceTypeSettings","ValidatorModel","ExecutorAgent","ExecutorFunction","ExecutorModel","ExecutorFunctionType","ValidatorFunction","FilterModel","FilterAgent","ValidatorAgent","UseExtension","UIUser","IsSharedResource","UIPermissions","IsOwned","UIText","UIChoice","UIChoiceType","UIChoiceNode","PermissionRequester","PermissionManyToMany","MatchIds","ConnectionExists","PermissionTarget","UIDependsOn","UseUIDependsOn","UIOptionType","UseCustomUIOption","UIOptionTypeCustom","UIOption","UseUIExtensionList","UIExtensionList","UIExtension","UIExtensionDefinition","MethodProps","FilterPropreties","UIValidationType","NODEType","ReferenceType","UIAttributeType","ManyToManyNexusType","ManyToManyNexusTypes","MethodType","UIModelType","UseScopeGraph","ScopeGraph","Groups","GroupParent","CodePropertyType","FunctionType","PermissionImpl","ClassConstructionInformation","codeTypeWord","x","split","filter","y","indexOf","toLowerCase","join","NodePropertiesDirtyChain","chainProp","chainFunc","letters","allowedchars","MakeConstant","val","isNaN","toUpperCase","LinkEvents","LinkType","Choice","ExecutorItem","ExecutorProperty","Validation","ValidationItem","ValidatorProperty","ValidatorModelItem","Option","OptionItem","ExtensionList","Extension","LogicalChildren","LogicalNieces","ManyToManyLink","AppliedPermissionLink","RequestorPermissionLink","ManyToManyPermissionLink","ExtensionDependencyLink","FunctionOperator","FunctionLink","OnScreenLink","FunctionVariable","PropertyLink","ParentLink","FunctionConstraintLink","ErrorLink","RequiredClassLink","ModelTypeLink","AgentTypeLink","UserLink","MaestroLink","AttributeLink","PermissionFunction","Exist","PermissionPropertyDependency","PermissionDependencyProperty","PermissionDependencyPropertyManyToManyLink","PermissionPropertyDependencyManyToManyLink","LinkStyles","type","stroke","strokeWidth","LinkPropertyKeys","TYPE","CONSTRAINTS","VALID_CONSTRAINTS","FUNCTION_ID","LinkProperties","EnumerationLink","EnumerationReferenceLink","ConditionLink","PermissionFunctionLink","PermissionDependencyPropertyLink","PermissionPropertyDependencyLink","ExistLink","exist","ChoiceLink","PermissionLink","ValdationLink","ValidationLinkItem","ValidatorAgentLink","ValidatorModelLink","ValidatorModelItemLink","ValidatorPropertyLink","ExecutorLink","ExecutorLinkItem","ExecutorAgentLink","ExecutorModelLink","ExecutorModelItemLink","ExecutorPropertyLink","ValidatorFunctionLink","ExecutorFunctionLink","OptionLink","OptionItemLink","OptionCustomLink","DependsOnLink","ExtensionListLink","ExtensionLink","keys","map","propTypes","ValidationRules","CVV","AlphaNumericLike","AlphaNumericPuncLike","AlphaOnly","NumericOnly","Numeric","Empty","AlphaOnlyWithSpaces","NotEmpty","UrlEmpty","IsTrue","IsFalse","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","EqualTo","Any","Url","EmailEmpty","Credit","Email","ExpirationMonth","BeforeNow","Year","Debit","ExpirationYear","PastDate","ZipEmpty","Zip","SocialSecurity","OneOf","NodePropertyTypes","STRING","LISTOFSTRINGS","DATETIME","INT","FLOAT","DOUBLE","BOOLEAN","EMAIL","PHONENUMBER","NEW_LINE","ProgrammingLanguages","CSHARP","NodePropertyTypesByLanguage","Usings","COMMON_DATETIME_ARGS","nodeType","COMMON_STRING_ARGS","ValidationCases","types","vectors","content","length","cases","$true","e","interpolate","Math","floor","random","long","short","invalid","empty","$empty","invalid2","false","$false","true","self","b","$greater","notgreater","$less","notless","$equal_to","not_equal","id","ExecutorRules","ModelReference","Copy","AgentReference","ExecutorUI","code","arguments","reference","FilterRules","EqualsTrue","EqualsFalse","FilterUI","ValidationUI","Create_ManyToMany_Agent_Value__IListChild","Update_ManyToMany_Agent_Value__IListChild","Get_ManyToMany_Agent_Value__IListChild","Delete_ManyToMany_Agent_Value__IListChild","Create_Parent$Child_Agent_Value__IListChild","Update_Parent$Child_Agent_Value__IListChild","Get_Parent$Child_Agent_Value__IListChild","Delete_Parent$Child_Agent_Value__IListChild","Create_Object_Agent_Value__IListObject","Update_Object_Agent_Value__IListObject","Get_Object_Agent_Value__IListObject","Delete_Object_Agent_Value__IListObject","Create_Parent_Child_Agent_Value__Child","Update_Parent_Child_Agent_Value__Child","Get_Parent_Child_Agent_Value__Child","Delete_Parent_Child_Agent_Value__Child","Create_Object_Agent_Value__Object","Update_Object_Agent_Value__Object","Get_Object_Agent_Value__Object","Delete_Object_Agent_Value__Object","Can_Execute_Agent_Parent_In_Valid_List","FunctionTemplateKeys","Bool","CanExecute","ModelDeterminingProperty","AgentDeterminingProperty","Parent","AgentInstance","Agent","AgentType","User","ManyToManyModel","UserInstance","FunctionConstraintKeys","IsTypeOf","IsChild","IsList","IsSingleLink","IsModel","IsFunction","IsProperty","IsEnumerable","IsInstanceVariable","IsInputVariable","COMMON_CONSTRAINTS","COMMON_CONSTRAINTS_AGENT_OBJECT","COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD","nodeTypes","COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD","COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD","COMMON_OUTPUT","INTERNAL_TEMPLATE_REQUIREMENTS","METHODS","PARAMETERS","PARAMETERSCLASS","CHANGECLASS","RESPONSECLASS","STREAMPROCESS","DETERMINING_PROPERTY","PARENTS_ID_PROPERTY","MODEL","CONSTRUCTORS","TEMPLATE","INTERFACE","PARENT","PROPERTY","METHOD","CREATE","UPDATE","PROCESS","FUNCTION_REQUIREMENT_KEYS","CLASSES","COMMON_FUNCTION_REQUIREMENTS","fs","readFileSync","attachment_methods","propreties","ToInterface","HTTP_METHODS","POST","GET","DELETE","PATCH","COMMON_FUNCTION_TEMPLATE_KEYS","model","function_name","user","user_instance","agent","agent_type","title","template","interface","constraints","output","isList","method","template_keys","MethodFunctions","parentGet","ConditionTypes","InEnumerable","InExtension","ConditionCases","$matching","notmatching","ConditionTypeParameters","RefManyToMany","RefManyToManyProperty","Ref1","Ref2","Ref1UseId","Ref2UseId","Ref1Property","ConditionTypeOptions","ConditionFunctionSetups","functions","bindTemplate","templateString","data","RegExp","test","subregex","replace","createGraph","uuidv4","version","major","minor","build","workspace","Titles","path","namespace","groups","groupLib","groupsNodes","nodesGroups","childGroups","parentGroup","referenceNodes","nodeLib","nodes","nodeLinks","nodeConnections","linkLib","links","graphs","classNodes","functionNodes","updated","visibleNodes","appConfig","Logging","IncludeScopes","LogLevel","Default","System","Microsoft","AppSettings","Local-AuthorizationKey","Local-EndPointUrl","use_local","EndPointUrl","AuthorizationKey","DatabaseId","AssemblyPrefixes","Use-SingleCollection","storage-key","single-thread","ConfirmEmailController","ConfirmEmailAction","HomeAction","HomeController","ResetPasswordAction","ResetPasswordController","SecurityKey","Domain","TokenExpirationInMinutes","DomainPort","GraphKeys","NAMESPACE","SERVER_SIDE_SETUP","incrementBuild","graph","getScopedGraph","options","scope","newGroup","callback","group","createGroup","result","addGroup","addLeaf","ops","leaf","leaves","unique","addGroupToGroup","groupId","removeGroupFromGroup","clearGroup","createValidator","properties","createExecutor","addValidatator","validator","validators","validatorArgs","removeValidator","getValidatorItem","item","getValidatorProperties","removeNode","existNodes","getNodesByLinkType","direction","TARGET","groupsContainingNode","removeLeaf","clearGroupDeep","success","v","removeNodeFromGroups","linksToRemove","source","target","getAllLinksWithNode","link","removeLink","clearLinks","en","GetManyToManyNodes","state","ids","NodesByType","GetNodeProp","some","addNode","node","addNewNodeOfType","parent","linkProperties","groupProperties","createNode","apply","JSON","parse","stringify","updateNode","rootNode","newLink","updateNodeProperty","prop","hasGroup","nodeGroupProp","getGroup","grandParent","gparentGroup","ancestores","getGroupAncenstors","anc","updateNodeGroup","GetNode","applyConstraints","functionType","functionConstraintObject","checkConstraints","functionConstraints","getNodesLinkedTo","validatorProperties","applyValidationNodeRules","currentGraph","Array","isArray","excludeRefs","RequiredClassName","cls","node_name","getNodesFunctionsConnected","constraintKey","_link","getNodeLinksWithKey","ftk","functionTemplateKey","constraintObj","valid","FunctionMeetsConstraint","meets","updateLinkProperty","applyFunctionConstraints","getNodeFunctionConstraintLinks","linkConstraint","findMatchingConstraints","hasMatchingConstraints","GetLinkProperty","nodeToRemove","linkId","GetTargetNode","console","warn","core_group","internal_group","external_group","existingGroups","GetGroupProperty","_group","updateGroupProperty","constraintKeys","constraint","new_node","core","internal","external","lcj","find","f","_targetNode","targetNode","targetNodeType","targetConstraint","linkWithConstraints","findLinkWithConstraint","linkWithConstraint","nodeToMatchWith","linkToParentParameter","getNodeLinkedTo","relationshipLink","findLink","nodeId","SOURCE","getNodeLinks","res","addLink","createLink","getNodeLinked","matchObject","obj1","obj2","GetLinkChainItem","chains","GetLinkChain","GetCurrentGraph","op","il","newids","newnodes","_id","link_constraints","matchOneWay","temp","noSameLink","oldLink","findLinkInstance","executeEvents","evt","on","args","function","EventFunctions","executeRemoveEvents","addEventFunction","func","isUIExtensionEnumerable","_node","config","isEnumeration","GetUIExentionEnumeration","list","GetUIExentionKeyField","keyField","removeValidatorItem","_validator","createEventProp","linkType","update_link","del_link","additionalChange","dirty","text","copyLink","toString","GetNodesInsideGroup","seenGroups","GroupImportanceOrder","getDepth","VisualProcess","vgraph","collapsedNodes","filteredGraph","sort","a","push","FilterGraph","depth","h","SetVisible","collapsingGroups","t_importance","sortedGroups","nodeGroupKey","_type","smallestsNonCrossingGroups","cg","g_","disappearingNodes","dt","head","mostimportant","_nodes","dupLink","vgroups","groupIndex","oldgroup","newgroup","og","require","ipcRenderer","remote","dialog","VISUAL","APPLICATION","GRAPHS","VISUAL_GRAPH","DASHBOARD_MENU","SELECTED_NODE_BB","SIDE_PANEL_EXTRA_WIDTH","NodeConstants","NodeAttributePropertyTypes","ROUTINGNUMBER","CURRENCY","CARMAKE","SOCIALSECURITY","PHONE","CARMODEL","CARYEAR","VIN","LONGSTRING","CREDITCARD","LENGTH","INCH","DIMENSION","MONEY","COUNTRY","DEBIT","MONTH","STATE","CHOICE","NUMBER","SLIDER","DATE","TIME","ACCOUNTNUMBER","ADDRESS","COLLECTION","OBJECT","RADIO","CHECKLIST","GEOLOCATION","YEAR","OptionsTypes","CHOICELIST","CAPITALIZE_FIRST_LETTER","UI_UPDATE","GetC","section","uiReducer","Visual","IsCurrentNodeA","currentNode","Node","SELECTED_NODE","Use","GraphMethods","GetState","GetCodeName","GetMethodPropNode","methodProps","VisualEq","Application","GetVisualGraph","SaveApplication","dispatch","UIC","Graphs","SaveGraph","visualGraph","Date","now","toggleVisual","getState","GUID","setVisual","setApplication","SELECTED_LINK","HOVERED_LINK","SelectedNode","toggleDashboardMinMax","GetNodeTitle","GetNodes","CanChangeType","useRoot","GetRootGraph","GetNodeFromRoot","NodesConnectedTo","_getState","setState","GetFunctionType","methodNode","GetMethodNodeProp","GetMethodProps","GetPermissionMethod","permission","CURRENT_GRAPH","GetCurrentScopedGraph","GetSubGraphs","addNewSubGraph","rootGraph","newgraph","setRootGraph","setAppsettingsAssemblyPrefixes","prefixes","GRAPH_SCOPE","GetSelectedSubgraph","root","UPDATE_GRAPH_TITLE","NEW_NODE","REMOVE_NODE","NEW_LINK","CHANGE_NODE_TEXT","CHANGE_NODE_PROPERTY","NEW_PROPERTY_NODE","NEW_PERMISSION_NODE","NEW_ATTRIBUTE_NODE","ADD_LINK_BETWEEN_NODES","NEW_CONDITION_NODE","REMOVE_LINK_BETWEEN_NODES","REMOVE_LINK","NEW_CHOICE_ITEM_NODE","NEW_PARAMETER_NODE","NEW_FUNCTION_OUTPUT_NODE","NEW_MODEL_ITEM_FILTER","NEW_VALIDATION_ITEM_NODE","NEW_CHOICE_TYPE","NEW_VALIDATION_TYPE","NEW_OPTION_ITEM_NODE","NEW_OPTION_NODE","NEW_CUSTOM_OPTION","NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE","NEW_EXTENSION_LIST_NODE","NEW_EXTENTION_NODE","ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY","APPLY_FUNCTION_CONSTRAINTS","ADD_NEW_REFERENCE_NODE","SET_DEPTH","graphOperation","operation","operations","classes_that_must_exist","function_node","functionConstraintRequiredClasses","j","constraintModelKey","constraint_nodes","nodes_one_step_down_the_line","cn","nextNodes","functionNode","class","matching_nodes","_cnode","error","scopedGraph","masterNode","refNode","referenceType","Colors","openRedQuickBuilderGraph","showOpenDialog","getCurrentWindow","filters","extensions","RED_QUICK_FILE_EXT$","fileName","undefined","endsWith","RED_QUICK_FILE_EXT","log","readFile","encoding","err","message","opened_graph","newRedQuickBuilderGraph","event","arg","saveGraphToFile","showSaveDialog","writeFile","setWorkingDirectory","HandlerEvents","scaffold","reply","NAME_SPACE_TEMPLATE","NamespaceGenerator","space","usings","namespaceTemplate","imports","body","CONTROLLER_CLASS_TEMPLATE","CONTROLLER_CLASS_FUNCTION_TEMPLATE","CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE","ControllerGenerator","TAB","graphRoot","controllers","_controllerTemplateClass","_controllerTemplateFunction","_controllerTemplateFunctionGet","controller","controllerTemplateClass","codeName","userNode","maestro_functions","maestro","tempfunctions","maestroName","maestro_function","ft","tempFunction","parameters","parameter_route","parameter_values","paramName","functionName","httpMethod","httpRoute","methodProperties","modelNode","output_type","http_route","http_method","maestro_interface","input_type","jNL","codeName#alllower","Generate","MODEL_TEMPLATE","MODEL_PROPERTY_TEMPLATE","MODEL_STATIC_TEMPLATES","MODEL_ATTRIBUTE_TEMPLATE","ModelGenerator","models","GenerateModel","templateSwapDictionary","base_model","account_enabling_func","attributes","connectedProperties","propertyTemplate","attributeTemplate","staticFunctionTemplate","validatorFunctions","tabs","staticFunctions","propNode","connectedAttributes","property_instance_template","np","propType","propSwapDictionary","property_type","attr","options_lists","options_list","ol","_ols","ReverseRules","_key","validations","vnode","vnodeItem","choice_name","validation_rules","validation_list","choice_type","attributeSwapDictionary","ui_title","singular","uiValidationType","staticDic","modelTemplate","EXTENSION_CLASS_TEMPLATE","EXTENSION_PROPERTY_TEMPLATE","EXTENSION_NEW_INSTANCE","EXTENSION_NEW_PROPERTY","EXTENSION_NEW_INSTANCE_LIST","EXTENSION_NEW_INSTANCE_LIST_ADD","EXTENSION_NEW_INSTANCE_DICTIONARY","EXTENSION_NEW_INSTANCE_DICTIONARY_ADD","EXTENSION_NEW_TEMPLATE_LIST","PROPERTY_TABS","ExtensionGenerator","extensionNode","def","Error","_extensionClassTemplate","_extensionPropertyTemplate","_extensionNewInstance","_extensionNewProperty","_extensionNewInstanceList","_extensionNewInstanceListAdd","_extensionNewInstanceDictionary","extension","extensionClassTemplate","statics","constants","uiExtensionDefinition","modelName","definition","extensionPropertyTemplate","instances","instance","item_index","NL","Tabs","dictionary","temp_instance","inst","addings","co","ConstantsDeclaration","TEST_CASE","TEST_CLASS","TEST_CASE_PROPERTY","PERMISSIONS_INTERFACE","PERMISSIONS_CASE_EXTENSION","PERMISSIONS_CASE_ENUMERATION","PERMISSIONS_CASE_INCLUDED_IN_LIST","PERMISSIONS_METHODS","PERMISSIONS_ARBITER_PROP","PERMISSIONS_IMPL","PERMISSIONS_INTERFACE_METHODS","MATCH_TO_MANY_REFERENCE_PARAMETER","MATCH_REFERENCE","PermissionGenerator","dNode","enu","ea","dpNode","enumerationNode","ext_allowed","enumerationName","ext_disallowed","createInstanceEnumerationListName","_createEnumerationInstanceList","constants_allowed","extensionName","_createExtensionInstanceList","dependingPermissionNodes","listOfCases","propertyNodeLinkedToByDependencyPermissionNode","propertyNodes","propertyNode","agentLinkExists","extentionNode","useEnumeration","useExtension","tempBindingValues","parent_property","value_property","casename","instance_list","variable","permissionCaseEnumerationTemplate","enumInstance","createEnumerationInstanceList","allowed-values-list","permissionCaseExtensionTemplate","extensionInstance","createExtensionInstanceList","extension_propery_key","extension_value_property","appliedPermissionLinks","values","conditionNodes","conditionNode","conditionType","mmrp","neg","enumRef","enumerationNodeName","getReferencedNodeName","constList","getReference","disAllowedConstList","_createConstantList","enumNotAllowed","nameEnum","propertyEnum","ref","extensionsNotAllowed","_getNotAllowedExtectionConstances","nameExt","propertyExt","getReferencedValue","_manyToManyMatchCondition","_matchReferenceCondition","permissionsEnabledFor","conditions","index","ref1UseId","ref2UseId","data_property","relationship","arbiter","ine","ref1","createStringList","enumerate","GetTestExtensionNodeValues","enums","EnumerateCases","testCaseProperty","_enum","ispositive","which","is_model_parameter","_case","ref2Model","ref1Property","resultSuccess","manyToMany","many_to_many_register","testCase","ref1type","ref2type","ref2","EnumeratePermissionCases","testIndex","templates","set_agent_properties","set_model_properties","set_parent_properties","set_match_reference_properties","set_match_many_reference_properties","many_to_many","permissions","agents","_testTemplate","_permissionInterface","_permissionImplementation","_permissionInterfaceMethods","_permissionMethods","_permissionArbiters","streamProcessChangeClassExtension","permissionInterface","testPermission","methodImplementations","methodInterfaces","testMethodPermisionCases","arbiters","matchingPermissionNodes","PermissionMatches","permissionCases","permissionCodeNames","matchingPermissionNode","GenerateCases","testTemp","GenerateTestCases","perms","permKey","permissionMethods","permissionInterfaceMethods","case_result","methods","tname","iname","tests","VALIDATION_CLASS","VALIDATION_TEST","VALIDATION_PROPERTY","ValidationRuleGenerator","validation_test_vectors","vects","results","rest","validatorNode","validatorPs","vld","attribute_type_arguments","_ _","ext","enumeration","enumName","enumerateValidationTestVectors","vector","successCase","propertyInformation","properylines","vindex","projected_value","propline","set_properties","_validation_class","_validation_property","_validation_test","_testClass","funct","functNode","propertyValidationStatements","attribute_type","model_property","testProps","test_name","attribute_parameters","expected_value","templateRes","testTemplate","STREAM_PROCESS_ORCHESTRATION_TEMPLATE","STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE","STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES","STREAM_METHOD_TESTS","CREATE_MODEL_TESTS","StreamProcessOrchestrationGenerator","_streamProcessFunctionTemplate","streamProcessFunctionTemplate","modelCode","model#allupper","model#lower","_streamAgentMethods","modelexecution","agent_type#lower","_stramMethodTests","_createModelTests","agentTypeNode","func_Cases","permissionNode","GetFunctionValidators","validatorCases","GenerateValidationCases","isModel","caseindex","v1","v2","agent_properties","model_properties","set_agent_propeties","test_result","_streamProcessTemplate","_streamProcessInterfaceTemplate","agent_methods","GenerateAgentMethods","agent_methods_interface","GenerateAgentInterfaceMethods","GenerateStaticMethods","strappers","GenerateStrappers","strapperInstances","GenerateStrappersInstances","static_methods","agent_type_methods","arbiters_strappers","arbiter_instances","GenerateProcessTests","RETURN_GET_CLASS","FILTER_PROPERTY_FUNCTION_VALUE","FILTER_PROPERTY_FUNCTION_VALUE_EQUALS","ModelItemFilterGenerator","_return_get_class","modelitemfilter","itemFilter","filterModel","funcs","filterPropFunction","propName","validatorName","validatorValue","filterPropFunctionValueEquals","code_name","MAESTRO_CLASS_TEMPLATE","MAESTRO_INTERFACE_TEMPLATE","MAESTRO_FUNCTION_TESTS","MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS","get_agent_manytomany_listchild_interface","MAESTRO_FUNCTION_GET_TESTS","MaestroGenerator","maestros","_maestroTemplateClass","_MAESTRO_INTERFACE_TEMPLATE","testFunctionTemplate","testFunctionGetSameParentTemplate","testFunctionGetTemplate","maestroTemplateClass","functionsInterface","permissionValidationCases","function_type","interfaceFunction","value_type","parent_type","userTypeNode","parentNode","modelFilterNode","manyToManyNode","predicates","modelItemFilters","model_type","methodType","connect_type","manyNodes","manyNode","agentAndModelIsTheSame","bindOptions","filter_function","permission_function","EnumerateFunctionValidators","pvc","pvc2","agentProperties","findIndex","agentProps","itemProperties","itemProps","templ","set_many_to_many_properties","testname","injectedServices","injectedPermissionServices","set_permissions","permissions_properties","injected_services","ti","maestro_interface_template","STREAM_PROCESS_CHANGE_CLASS_EXTENSION","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS","ChangeParameterGenerator","_streamProcessChangeClassExtension","_streamProcessChangeClassConstructors","_streamProcessChangeClassConstrictorsTest","testClass","constructors","streamProcessChangeClassConstructors","change_type","streamProcessChangeClassConstrictorsTest","CONSTANTS_CLASS","ConstantsGenerator","_constantsClass","constantsClass","consts","constants_type","STREAM_PROCESS_TEMPLATE","STREAM_PROCESS_TEMPLATE_TESTS","STREAM_PROCESS_FUNCTION_TEMPLATE","StreamProcessGenerator","staticMethods","_streamProcessTemplateTests","staticTests","GenerateStaticMethodTests","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED","ChangeResponseGenerator","_streamProcessChangeClassConstructorsTest","_streamProcessChangeClassConstructorsFailed","_test","model2","streamProcessChangeClassConstructorsFailed","streamProcessChangeClassConstructorsTest","parameterTemplate","arrange","parameter_properties","act","parameters_property","assert","EXECUTOR_CLASS","EXECUTOR_INTERFACE","EXECUTOR_CREATE","EXECUTOR_ENTRY_METHODS","EXECUTOR_ENTRY_METHODS_INTERFACE","EXECUTOR_METHOD_CASE","EXECUTOR_UPDATE","EXECUTOR_METHODS","EXECUTOR_METHODS_INTERFACE","ExecutorGenerator","_executor_class","_executor_class_interface","_executor_methods","_executor_methods_interface","_executor_create","_executor_update","_exe_method","_exe_method_interface","_exe_case","agentFunctionDic","agentFunctionInterfaceDic","agentModelDic","agmCombos","allmodels","allagents","allfunctions","meth","found","fun","agentNode","functType","executorProperties","amdid","property_sets","templateResInterface","method_name","change","method_guts","amd","_cases","func_name","static_methods_interface","staticentry","templateInterfaceRes","RETURN_GET_FUNCTION","ModelReturnGenerator","_return_get_methods","allfilters","filterNode","MODEL_GET_CLASS","MODEL_GET_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD","ModelGetGenerator","_get_class","_get_methods","_get_methods_many_to_many","_get_method_many_to_many_get_child","childrenTypes","namesAreUnique","ct","params","subset","query","Generator","enumerations","larg","streamTypes","functionsTypes","ModelExceptionGenerator","hub","send","mess","msg","Promise","resolve","then","fail","scaffoldProject","filesOnly","solutionName","code_types","code_type","generate","area","CodeTypeToArea","ensureDirectory","writeFileSync","generateFiles","server_side_setup","generateFolderStructure","dir","lib","relative","target_dir","directories","readdirSync","dirPath","existsSync","lstatSync","isDirectory","reldir","substr","file","mkdirSync","mapStateToProps","mapDispatchToProps","bindActionCreators","UIA","IPCEvents","UIConnect","component","connect","String","padding","valueOf","abs","max","pad","charAt","unCamelCase","str","trim","array","relativeCompliment","writable","configurable","othercollection","intersection","toNodeSelect","finalresult","removeIndices","indices","orderBy","collection","splice","start","stop","Float32Array","groupBy","min","dashboardlogo_jsx","className","Header","Component","_ref","header_jsx","dashboardnavbar_jsx","sidebartoggle_jsx","me","onClick","data-toggle","role","sidebartoggle_ref","NavBarMenu","navbarmenu_jsx","DropDownMenu","menuType","open","ariaExpanded","icon","label","usermode","usermenu","userbody","userheader","width","style","dropdown_jsx","aria-expanded","external_react_default","createElement","_extends","headerText","header","footer","DropDownMenuItem","dropdownmenuitem_jsx","fontSize","description","mainsidebar_jsx","height","SideBarHeader","sidebarheader_jsx","SideBarMenu","sidebarmenu_jsx","treeviewmenu_jsx","TreeViewMenu","active","display","toggle","hideIcon","hideArrow","treeviewmenu_ref","right","TreeViewItem","treeviewitem_jsx","Content","content_jsx","minHeight","SideBar","extraWidth","extraWide","sidebar_jsx","SideBarTabs","sidebartabs_jsx","SideBarTab","ariaExapanded","sidebartab_jsx","ControlSideBarMenu","controlsidebarmenu_jsx","ControlSideBarMenuItem","ControlSideBarMenuHeader","TabPane","tabpane_jsx","FormControl","_class","sidebarform","formcontrol_extends","textinput_jsx","TextInput","placeholder","disabled","inputgroup","onChange","textinput_ref","SelectInput","selectinput_jsx","onSelect","defaultSelectText","CheckBox","checkbox_jsx","checked","ServiceTypes","Facebook","Twitter","Google","ServiceTypeSetups","UseFacebook","FacebookAppId","FacebookAppSecret","UseMicrosoftAccount","MicrosoftClientId","MicrosoftClientSecret","UseGoogle","GoogleClientId","GoogleClientSecret","UseTwitter","TwitterConsumerKey","TwitterConsumerSecret","serviceType","propinputs","serviceTypeSetup","prop_setup","serviceactivitymenu_jsx","textinput_TextInput","checkbox_CheckBox","tabpane_TabPane","formcontrol_FormControl","selectinput_SelectInput","SideBarContent","sidebarcontent_jsx","NavBarButton","navbarbutton_jsx","ApplicationMenu","noop","dispatch_dispatch","_","Dispatch","set","slice","concat","constructor","typename","T","copy","that","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","src_namespace","prefix","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","nextId","Local","remove","matcher","selector","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","none","src_selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","sparse","update","EnterNode","datum","_next","_parent","appendChild","child","insertBefore","next","keyPrefix","bindIndex","enter","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending","NaN","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_names","getAttribute","classedAdd","names","add","classedRemove","setAttribute","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","dispatchEvent","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","match","size","each","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","merge","selection","groups0","groups1","m0","m1","merges","group0","group1","order","compare","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","append","insert","before","typenames","on_parseTypenames","src_selection","DragEvent","subject","dx","dy","identifier","define","factory","extend","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","k","pow","darker","round","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","t2","t3","labConvert","Lab","Hcl","cos","sin","rgb2xyz","xyz2lab","lab","lab2xyz","xyz2rgb","hcl","atan2","sqrt","hclConvert","z","A","B","C","D","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v3","cosh","sinh","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","number","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","lastIndex","q","one","zero","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","scale","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","taskHead","taskTail","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","tween","tick","duration","ease","schedule_create","init","schedule","schedule_get","schedule_set","interrupt","tweenValue","transition","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","custom","polyIn","exponent","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","Transform","point","applyX","applyY","invert","location","invertX","invertY","rescaleX","domain","range","rescaleY","MIN_DIMENSIONAL_SIZE","super","textSize","mapScale","mapTranslate","draw","mouseDown","mouseUp","mouseMove","componentDidMount","mouseStartEvent","mouseMoved","mouseMoveEvt","clientX","clientY","componentWillUnmount","domObj","calculateNodeTextSize","div","visibility","position","whiteSpace","maxWidth","top","getBoundingClientRect","bb","force","Cola","d3","margin","linkDistance","avoidOverlaps","handleDisconnected","outer","vis","redraw","wheelDelta","zoomFactor","panning","makeSVG","forEach","getLabelText","$_nodes","innerBounds","bounds","inflate","route","sourceIntersection","arrowStart","features","innerbit","titles","drag","$node","buildNode","selected","els","onLinkClick","onLinkHover","onNodeClick","selectedColor","degree","rise","Y","run","X","assign","$force","$color","cola","applyNodeVisualData","nn","componentWillReceiveProps","removedNodes","selectedNodes","nl","removedLinks","duplicateLink","selectedLinks","graph_groups","removedGroups","duplicateGroup","mindmapgroup","applyGroup","shouldComponentUpdate","mindmap_jsx","ButtonList","buttonlist_jsx","items","isSelected","cursor","overflow","textOverflow","is_agent","is_parent","many_to_many_enabled","permission_nodes","modelactivitymenu_jsx","buttonlist_ButtonList","controlsidebarmenu_ControlSideBarMenuHeader","controlsidebarmenu_ControlSideBarMenu","controlsidebarmenu_ControlSideBarMenuItem","agent_nodes","function_types","funcKey","functionactivitymenu_jsx","show_dependent","use_model_as_type","property_nodes","propertyactivitymenu_jsx","localeCompare","choice_nodes","validation_nodes","show_choice","show_validations","show_options","show_extenions","option_nodes","extension_nodes","attributeformcontrol_jsx","nodelist_jsx","nodeProperty","nodelist_ref","targetNodeId","requestorNodeId","currentRequester","currentTarget","manyToManyNodes","manyToManyNodeId","manyToManyProperties","getPropertyNodes","permissionmenu_jsx","choiceactivitymenu_jsx","xi","TreeViewItemContainer","treeviewitemcontainer_jsx","input","modelfilteractivitymenu_jsx","agentinput","validationactivitymenu_jsx","validationitemactivitymenu_jsx","modelNodes","MethodF","validatoractivitymenu_jsx","optionactivitymenu_jsx","executorpropertymenu_jsx","executor","ref2_properties","ref1_properties","model_options","getProperties","conditionactivitymenu_jsx","getMatchManyReferenceProperty","getEnumeration","getMatchReferenceProperty","nodeProperties","allowed","disallowed","enumerationValues","matchRef","enumeration_nodes","refManyToMany_properties","ref2Property","refManyToManyExists","refManyToManyProperty","refManyToManyCondition","propertyType","mustBeModel","mustBeProperty","mustBeFunction","linkedNodes","parameteractivitymenu_jsx","show_custom","custom_options","optionitemformcontrol_jsx","EnumerationEditMenu","enumerationeditmenu_jsx","onComplete","executoritem_jsx","validatorItem","_nodes_types","editlist","list_enums","list_key_field","old_one","executoritem_ref","_ref2","_ref3","executorpropertyactivitymenu_jsx","modelKey","nodeProp","_ui","ui","propertyExecutors","executorpropertyactivitymenu_ref","_validates","visualKey","selectedValidations","selKInner","treeviewmenu_TreeViewMenu","executoritem","validationUis","reverse","executorUI","mainsidebar_Header","sidebar_SideBar","sidebarmenu_SideBarMenu","executoractivitymenu_jsx","propertyValidations","validatorpropertymenu_jsx","validatoritem_jsx","validatoritem_ref","validatoritem_ref2","validatoritem_ref3","validatorpropertyactivitymenu_jsx","validatorpropertyactivitymenu_ref","validatoritem","valiationUi","extentiontypes","ExtensionListActivityMenu_jsx","permissionsactivitymenu_jsx","referencable_nodes","referenceactivitymenu_jsx","goomenu_jsx","menuItems","mi","pointerEvents","visible","goomenu_ref","left","onToggle","href","htmlFor","goomenu_ref2","goomenu_ref3","_ref4","in","stdDeviation","in2","GooMenuSVG","_ref5","Box","primary","maxheight","maxHeight","overflowY","box_jsx","choicelistitemactivitymenu_jsx","modelfiltermenu_jsx","fprops","Slider","slider_jsx","parseFloat","TabContent","tabcontent_jsx","Tab","userfooter_jsx","TabContainer","tabcontainer_jsx","EnumeratedTable","dataFunc","rows","enumeratedtable_jsx","columns","inde","columnButtons","fx","headers","extensiondefinitionmenu_jsx","form","editKey","tabKey","addBtn","tab_key","btns","extensiondefinitionmenu_ref","extensiondefinitionmenu_ref2","extensiondefinitionmenu_ref3","userfooter_Tab","enumeratedtable_EnumeratedTable","extensiondefinitionmenu_ref4","obj","extensiondefinitionmenu_ref5","dependsOn","methodactivitymenu_jsx","functionObject","methodparams","methodpropertymenu_jsx","oldConnect","MAESTRO_DETAILS_MENU","maestrodetailsmenu_jsx","othernodes","onode","treeviewitem_TreeViewItem","maestrodetailsmenu_ref","NODE_MANAGEMENT_MENU","NODE_MANAGEMENT","nodemanagement_jsx","toFilterString","gi","groupKey","groupNodes","gn","gni","nodemanagement_ref","commonactivitymenu_jsx","modelfilteritemactivitymenu_jsx","hasLogicalChildren","hasLogicalNieces","modelrelationshipmenu_jsx","RadioButton","radiobutton_jsx","depthchoice_jsx","box_Box","radiobutton_RadioButton","depthchoice_ref","maestroactivitymenu_jsx","inputVariable","CONTROLLER_DETAILS_MENU","controllerdetailsmenu_jsx","controllerdetailsmenu_ref","controlleractivitymenu_jsx","getTargetNodes","targetPropertyNodes","extensionNodeId","extensionValues","targetPropertyNode","permissionsdependentactivitymenu_jsx","GRAPH_MENU","graphmenu_jsx","dropdown_DropDownMenu","dropdownmenuitem_DropDownMenuItem","SECTION_LIST","sections","subGraphs","sg","sectionlist_jsx","enumerationactivitymenu_jsx","enumerationeditmenu_EnumerationEditMenu","sectionedit_jsx","TopViewer","topviewer_jsx","backgroundColor","docco","hljs","overflowX","background","hljs-comment","fontStyle","hljs-quote","hljs-keyword","hljs-selector-tag","hljs-literal","hljs-subst","hljs-number","hljs-string","hljs-doctag","hljs-selector-id","hljs-selector-class","hljs-section","hljs-type","hljs-params","hljs-title","fontWeight","hljs-tag","hljs-name","hljs-attribute","hljs-variable","hljs-template-variable","hljs-regexp","hljs-link","hljs-symbol","hljs-bullet","hljs-built_in","hljs-builtin-name","hljs-meta","hljs-deletion","hljs-addition","hljs-emphasis","hljs-strong","tab_jsx","tabs_jsx","MODEL_CODE","CODE_VIEW_TAB","codeString","generatedContent","viewTab","classKey","gcKey","codeview_jsx","topviewer_TopViewer","tabcontainer_TabContainer","tabs_Tabs","tab_Tab","tabcontent_TabContent","external_react_syntax_highlighter_default","language","SIDE_PANEL_OPEN","NODE_MENU","CONNECTING_NODE","LINK_DISTANCE","MAIN_CONTENT","MIND_MAP","CODE_VIEW","dashboard_jsx","goomenu_GooMenuSVG","dashboardlogo_Header","sidebartoggle","graphmenu","sectionedit","treeviewitemcontainer_TreeViewItemContainer","depthchoice","sectionlist","nodemanagement","maestrodetailsmenu","controllerdetailsmenu","choicelistitemactivitymenu","conditionactivitymenu","sidebarcontent_SideBarContent","controlleractivitymenu","modelfilteritemactivitymenu","commonactivitymenu","functionactivitymenu","methodactivitymenu","attributeformcontrol","parameteractivitymenu","modelactivitymenu","validatoractivitymenu","executoractivitymenu","propertyactivitymenu","validationitemactivitymenu","choiceactivitymenu","maestroactivitymenu","validationactivitymenu","optionactivitymenu","components_ExtensionListActivityMenu","optionitemformcontrol","permissionsactivitymenu","extensiondefinitionmenu","modelfilteractivitymenu","permissionsdependentactivitymenu","enumerationactivitymenu","serviceactivitymenu","validatorpropertymenu","referenceactivitymenu","executorpropertymenu","modelrelationshipmenu","methodpropertymenu","permissionmenu","modelfiltermenu","validatorpropertyactivitymenu","executorpropertyactivitymenu","SELECTED_TAB","DEFAULT_TAB","PARAMETER_TAB","SCOPE_TAB","minified","nodeSelectionMenuItems","selected_node_bb","menu_left","menu_top","main_content","hoveredLink","getLinkInstance","dashboard_ref","goomenu_NavBarButton","data-tid","header_Header","dashboard_ref2","dashboardnavbar_Header","dashboard_ref3","navbarmenu_NavBarMenu","navbarbutton_NavBarButton","dashboard_ref4","sidebarheader_SideBarHeader","VC","dashboard_ref5","slider_Slider","_ref6","_ref7","_ref8","_ref9","_ref10","content_Content","codeview","mindmap_MindMap","boundingBox","selectedId","sidebartabs_SideBarTabs","sidebartab_SideBarTab","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","Root_jsx","Routes_jsx","App_App","external_react_router_","routes","HOME","Dashboard","INCREMENT_COUNTER","DECREMENT_COUNTER","increment","decrement","incrementIfOdd","counter","incrementAsync","action","newstate","updateUI","createRootReducer","history","combineReducers","router","connectRouter","createHashHistory","rootReducer","routerMiddleware","enhancer","applyMiddleware","thunk","selectedConfigureStore","configureStore","initialState","createStore","store","app_jsx","external_react_hot_loader_","external_react_redux_","connected_react_router_lib","Root_ref","getElementById","__RewireAPI__","__ResetDependency__","__set__","__Rewire__","__GetDependency__","__get__","_typeof","iterator","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_propTypes2","_reactRedux","_reactRouter","_actions","default","createConnectedRouter","structure","getIn","toJS","ConnectedRouter","_get__2","context","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","inTimeTravelling","unsubscribe","subscribe","_toJS","pathnameInStore","pathname","searchInStore","search","hashInStore","hash","_props$history$locati","pathnameInHistory","searchInHistory","hashInHistory","handleLocationChange","onLocationChanged","unlisten","listen","subClass","superClass","setPrototypeOf","_inherits","_get__","_props","contextTypes","shape","isRequired","oneOfType","basename","_getGlobalObject","global","theGlobalVariable","_RewireModuleId__","_getRewireModuleId__","globalVariable","__$$GLOBAL_REWIRE_NEXT_MODULE_ID__","_getRewireRegistry__","__$$GLOBAL_REWIRE_REGISTRY__","_getRewiredData__","registry","rewireData","INTENTIONAL_UNDEFINED","_RewireAPI__","variableName","Router","_get_original__","_set__","_reset__","_with__","rewiredVariableNames","previousValues","reset","catch","addPropertyToAPIObject","_typeOfOriginalExport","addNonEnumerableProperty","isExtensible","LOCATION_CHANGE","CALL_HISTORY_METHOD","payload","updateLocation","_len","go","goBack","goForward","routerActions","actions","newObj","_interopRequireWildcard","_ConnectedRouter2","_reducer2","_middleware2","_selectors2","createAll","wildcardImport","propertyName","reduce","filteredWildcardImport","_filterWildcardImport__","createMatchSelector","getAction","getLocation","_createAll2","_plain2","_action$payload","arr","arr2","from","_toConsumableArray","createConnectRouter","fromJS","initialRouterState","createSelectors","lastPathname","lastMatch","url","matchPath","_getIn","_getIn2","it","UNSCOPABLES","ArrayProto","isObject","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","O","aFunction","invoke","arraySlice","factories","fn","partArgs","bound","F","len","construct","__e","is","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","expProto","U","W","R","__g","dP","createDesc","un","cof","propertyIsEnumerable","setToStringTag","IteratorPrototype","NAME","LIBRARY","Iterators","$iterCreate","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","done","anObject","dPs","enumBugKeys","IE_PROTO","createDict","iframeDocument","iframe","src","contentWindow","write","lt","close","Properties","IE8_DOM_DEFINE","toPrimitive","Attributes","getKeys","has","toObject","ObjectProto","arrayIndexOf","$keys","bitmap","SRC","$toString","TPL","inspectSource","safe","isFunction","tag","stat","shared","uid","copyright","toInteger","ceil","IObject","defined","px","USE_SYMBOL","addToUnscopables","step","iterated","_t","_i","_k","Arguments","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","ReactPropTypesSecret","emptyFunction","shim","componentName","propFullName","secret","getShim","ReactPropTypes","bool","symbol","any","arrayOf","element","instanceOf","objectOf","oneOf","exact","checkPropTypes","PropTypes","super_","u","N","prefilter","normalize","lhs","rhs","w","groupCollapsed","groupEnd","logger","actionTransformer","titleFormatter","timestamp","toFixed","collapsed","level","diff","started","startedTime","prevState","took","nextState","L","M","stateTransformer","errorTransformer","predicate","logErrors","diffPredicate","getHours","getMinutes","getSeconds","getMilliseconds","DeepDiff","observableDiff","applyDiff","applyChange","revertChange","isConflict","noConflict","transformer","defaults","createLogger"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,UAIAlC,IAAAmC,EAAA,q+KC9Ee,MAAMC,UAAYC,YAE/BC,SACE,MAAMC,SAAEA,GAAaC,KAAKC,MAC1B,kbAAOC,CAACC,EAAA,SAAD,UAAiBJ,4JCRrB,MAEMK,EAAmB,oBACnBC,EAAkB,mBAClBC,EAAmB,oBACnBC,EAAkB,mBAClBC,EAAsB,uBACtBC,EAAS,SAETC,EAAkB,qBAClBC,EAAe,gBACfC,EAAsB,mBACtBC,EAAY,aACZC,EAAW,YACXC,EAAQ,QACRC,EAAS,SACTC,EAAgB,iBAChBC,EAAY,YACZC,EAAQ,QAERC,EAAM,MAENC,EAAkB,mBAClBC,EAAY,aACZC,EAAU,UACVC,EAAY,YACZC,EAAS,SACTC,EAAY,YACZC,EAAc,eACdC,EAAS,UACTC,EAAY,aACZC,EAAgB,oBAChBC,EAAW,YACXC,EAAkB,oBAClBC,EAAgB,sBAChBC,EAAoB,sBACpBC,EAAS,SACTC,EAAiB,kBACjBC,EAAkB,oBAClBC,EAAU,UACVC,EAAe,iBACfC,EAAe,gBACfC,GAAc,eAEdC,GAAiC,kCAEjCC,GAAW,yDAGXC,GAAiB,kBACjBC,GAAc,cAEdC,GAAW,YACXC,GAAyB,8BACzBC,GAAe,gBACfC,GAA0B,mCAC1BC,GAAS,UACTC,GAAoB,+CACpBC,GAAa,cAGbC,GAAU,UACVC,GAAoB,sBACpBC,GAAoB,sBACpBC,GAAe,qBAEfC,GAAgB,iBAChBC,GAAa,aACbC,GAAQ,QACRC,GAAU,mBACVC,GAAW,YACXC,GAAY,aACZC,GAAY,aACZC,GAAW,YACXC,GAAO,OACPC,GAAiB,kBACjBC,GAAe,gBACfC,GAA0B,mFAC1BC,GAAoB,sBACpBC,GAAO,OACPC,GAA+B,6BAC/BC,GAAU,QACVC,GAAS,OACTC,GAAgB,iBAChBC,GAAiB,kBACjBC,GAAqB,wBACrBC,GAAgC,0CAChCC,GAAiB,cACjBC,GAAuB,wBACvBC,GAA4B,gEAC5BC,GAAoB,qBACpBC,GAAc,CACvBC,OAAQ,SACRC,IAAK,OACLC,OAAQ,WACRC,OAAQ,WACRC,OAAQ,SACRC,WAAY,eACZC,OAAQ,UAECC,GAAc,eAEdC,GAAY,aACZC,GAAuB,kBACvBC,GAA2B,iFAC3BC,GAAgB,uBAGhBC,GAAS,SAETC,GAAwB,qBACxBC,GAAoB,sBACpBC,GAA+B,mCAC/BC,GAAmB,iBACnBC,GAAoB,sBACpBC,GAA+B,sCAE/BC,GAAM,MACNC,GAAkB,mBAClBC,GAAiB,kBACjBC,GAAoB,iBACpBC,GAAgB,aAChBC,GAA2B,wBAC3BC,GAAO,OACPC,GAAc,eACdC,GAAkB,oBAClBC,GAAe,cACfC,GAAgB,2BAChBC,GAA2B,8BAC3BC,GAAoB,aACpBC,GAAuB,yBACvBC,GAAkB,iBAClBC,GAAiB,mBACjBC,GAAY,WACZC,GAAsB,kBACtBC,GAAW,YACXC,GAAuB,kCACvBC,GAAmB,qBACnBC,GAA+B,uEAC/BC,GAA6B,sEAC7BC,GAAiB,kBACjBC,GAAmB,2BACnBC,GAA8B,4CAC9BC,GAA2B,yBAC3BC,GAAmB,gBACnBC,GAAmB,eAEnBC,GAA8B,iCAC9BC,GAAsB,uBAEtBC,GAAa,aAEbC,GAAkB,mBAClBC,GAAY,aACZC,GAAQ,SACRC,GAAW,WACXC,GAAY,YACZC,GAAuB,sIACvBC,GAA+B,6DAC/BC,GAAgB,iBAChBC,GAA2B,4FAG3BC,GAAgB,iBAiBhBC,GAAY,YACZC,GAAc,eACdC,GAAiB,kBAEjBC,GAAa,eACbC,GAAc,cACdC,GAAY,sBACZC,GAAW,WACXC,GAAO,OACPC,GAAO,OAGPC,GAAe,gBACfC,GAAW,WACXC,GAAsB,wBAEtBC,GAAU,WACVC,GAAW,YAEXC,GAAW,YACXC,GAAW,YACXC,GAAY,aAEZC,GAAkB,eAClBC,GAAmB,gCACnBC,GAAuB,qBAEvBC,GAA6B,uEAG7BC,GAAqB,uBACrBC,GAAuB,yBACvBC,GAAoB,sBACpBC,GAAgC,yEAChCC,GAAmB,qBACnBC,GAA8B,2IAC9BC,GAAiB,oBACjBC,GAAiB,kBACjBC,GAA4B,oDAE5BC,GAAgB,kBAChBC,GAAW,WACXC,GAA2B,wCAC3BC,GAAc,uBACdC,GAAoB,kBACpBC,GAAuB,sBACvBC,GAAc,eACdC,GAAS,SClOTC,GAAY,CACrBC,QAAS,UACTC,MAAO,QACP/C,SAAU,iBACVgD,YAAa,eACbC,gBAAiB,mBACjBC,OAAQ,SACRC,iBAAkB,oBAClBC,WAAY,cACZC,UAAW,qBACXC,WAAY,cACZC,WAAY,aACZC,qBAAsB,wBACtBvD,UAAW,YACXwD,gBAAiB,oBACjBrJ,YAAa,cAEbsJ,eAAgB,kBAChBC,mBAAoB,uBACpBC,UAAW,YACXC,SAAU,WACVC,WAAY,cACZC,eAAgB,mBAChBC,aAAc,gBACdC,kBAAmB,sBACnBC,cAAe,iBACfC,SAAU,WACVC,OAAQ,SACRC,OAAQ,SACRC,UAAW,YACXC,eAAgB,kBAChBC,WAAY,aACZC,QAAS,UACTC,SAAU,WACVC,cAAe,gBACfC,UAAW,cAEFC,GAAqB,CAC9BC,CAACjC,GAAU5C,YAAY,EACvB6E,CAACjC,GAAUY,kBAAkB,GAEpBsB,GAAiB,CAC1BC,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,YACXzI,YAAa,wBACb0I,UAAW,YACX1B,gBAAiB,oBACjB2B,YAAa,eACbC,SAAU,YACVC,gBAAiB,mBACjBC,cAAe,iBACfC,2BAA4B,+BAC5BC,eAAgB,mBAEPC,GAAqB,CAC9BC,cAAe,iBAENC,GAAsB,CAC/B,+CACA,mBACA,sBACA,MACA,UACA,4BACA,yBACA,2CAESC,GAA4B,CACrC,gBACA,sBACA,sBACA,sBACA,gCACA,8BACA,yBACA,gBACA,sBACA,2BACA,cACA,SACA,qBACA,6BACA,cACA,aACA,kBACA,0BAESC,GAAqB,CAC9BjM,QAAS,UACTkM,YAAa,aACbC,aAAc,gBAKLC,IAFyBpD,GAAUE,MAGrC,SAEEmD,GAAyB,CAClCpB,CAACjC,GAAU8B,gBAAgB,EAC3BG,CAACjC,GAAUW,uBAAuB,EAClCsB,CAACjC,GAAU5C,YAAY,GAEdkG,GAAiB,CAC1BrB,CAACmB,IAAoB,UACrBnB,CAACjC,GAAUC,SAAU,UACrBgC,CAACjC,GAAUY,iBAAkB,UAC7BqB,CAACjC,GAAUE,OAAQ,UACnB+B,CAACjC,GAAU7C,UAAW,UACtB8E,CAACjC,GAAUK,QAAS,UACpB4B,CAACjC,GAAUQ,WAAY,UACvByB,CAACjC,GAAUS,YAAa,UACxBwB,CAACjC,GAAUa,gBAAiB,UAC5BoB,CAACjC,GAAUc,oBAAqB,UAChCmB,CAACjC,GAAUiB,YAAa,UACxBgB,CAACjC,GAAUkB,gBAAiB,UAC5Be,CAACjC,GAAUmB,cAAe,UAC1Bc,CAACjC,GAAUoB,mBAAoB,UAC/Ba,CAACjC,GAAUqB,eAAgB,UAC3BY,CAACjC,GAAUuB,QAAS,UACpBU,CAACjC,GAAUU,YAAa,UACxBuB,CAACjC,GAAUsB,UAAW,UACtBW,CAACjC,GAAUyB,WAAY,UACvBQ,CAACjC,GAAU0B,gBAAiB,UAC5BO,CAACjC,GAAU6B,UAAW,UACtBI,CAACjC,GAAU+B,WAAY,UACvBE,CAACjC,GAAU4B,SAAU,UACrBK,CAACjC,GAAU5C,WAAY,UACvB6E,CAACjC,GAAUe,WAAY,UACvBkB,CAACjC,GAAUG,aAAc,UACzB8B,CAACjC,GAAUgB,UAAW,UACtBiB,CAACjC,GAAU8B,eAAgB,UAC3BG,CAACjC,GAAUM,kBAAmB,UAC9B2B,CAACjC,GAAUO,YAAa,UACxB0B,CAACjC,GAAUI,iBAAkB,WAIpBmD,GAAiB,CAC1BC,SAAU,WACVC,SAAU,WACVC,KAAM,QAEGC,GAAkB,CAC3BC,WAAY,aACZC,cAAe,iBAEN3N,GAAY,CACrBgK,MAAO,UACPwC,cAAe,gBACfJ,UAAW,aACXwB,MAAO,SACP/G,WAAY,cACZgH,YAAa,eACbC,YAAa,eACb3B,UAAW,aACXzI,YAAa,eACbqK,WAAY,cACZC,UAAW,cAGFC,GAAiB,CAC1B5M,YAAa,cACb5B,cAAe,gBACfyO,eAAgB,iBAChBC,4BAA6B,8BAC7BC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,YAAa,cACbC,0BAA2B,4BAC3BC,kBAAmB,0BACnBC,qBAAsB,uBACtBC,oBAAqB,sBACrBC,eAAgB,iBAChBC,cAAe,gBACfC,iBAAkB,mBAClBC,cAAe,gBACfC,qBAAsB,uBACtBC,kBAAmB,oBACnB5N,eAAgB,iBAChBpB,UAAW,YACXiP,YAAa,cACbC,YAAa,cACbrE,UAAW,YACXH,gBAAiB,kBACjBI,SAAU,WACVqE,eAAgB,iBAChBjP,UAAW,YACXkP,aAAc,cACdvJ,eAAgB,iBAChB5F,OAAQ,SACRiG,iBAAkB,iBAClBF,SAAU,WACVF,UAAW,YACXxE,SAAU,WACVuG,UAAW,YACXF,WAAY,aACZ3E,QAAS,UACTuF,SAAU,WACVtF,OAAQ,SACRoM,OAAQ,SACRC,iBAAkB,mBAClBC,cAAe,gBACfC,QAAS,UACT9N,OAAQ,SAER+N,OAAQ,OAER7N,WAAY,aACZ8N,SAAU,WACVC,aAAc,eACdC,aAAc,eACdC,oBAAqB,wBACrBC,qBAAsB,2BACtBC,SAAU,aACVC,iBAAkB,oBAClBC,iBAAkB,qBAElBC,YAAa,cACbC,eAAgB,iBAChB5K,aAAc,eACd6K,aAAc,eAGdC,kBAAmB,oBACnBC,mBAAoB,qBAEpBC,SAAU,WAEVC,mBAAoB,qBACpBC,gBAAiB,kBACjBC,YAAa,cACbC,sBAAuB,wBACvBC,YAAa,mBACbC,iBAAkB,mBAClBC,iBAAkB,mBAClBnM,iBAAkB,mBAClBoM,SAAU,WACVC,cAAe,gBAEfC,gBAAiB,kBACjB9H,eAAgB,iBAEhBN,mBAAoB,qBACpBC,qBAAsB,uBACtBG,iBAAkB,mBAClBF,kBAAmB,oBAEnBN,gBAAiB,kBACjByI,oBAAqB,sBACrBC,qBAAsB,uBAEtBC,WAAY,aACZC,YAAa,cAEbC,cAAe,gBACfC,WAAY,cAGZC,OAAQ,SACRC,YAAa,cACbpP,SAAU,WACVC,UAAW,YACXC,UAAW,YACXmP,iBAAkB,eAClBC,aAAc,eACdC,eAAgB,4BAChBC,6BAA8B,gCAGlC,SAASC,GAAaC,GAClB,MAAiB,iBAANA,EACAA,EAAEC,MAAM,IAAIC,OAAOC,IAA6E,IAAxE,0CAA0CC,QAAQD,EAAEE,gBAAuBC,KAAK,IAE5GN,EAGJ,MACMO,GAA2B,CACpCvG,CAACkC,GAAeK,aAAc,CAAC,CAC3BiE,UAAWtE,GAAe5L,SAC1BmQ,UAAWV,IACZ,CACCS,UAAWtE,GAAe1L,UAC1BiQ,UAAWV,IACZ,CACCS,UAAWtE,GAAe3L,UAC1BkQ,UAAWV,IACZ,CACCS,UAAWtE,GAAevM,OAC1B8Q,UAAWV,IACZ,CACCS,UAAWtE,GAAewB,OAC1B+C,UAAWV,KAEf/F,CAACkC,GAAewB,QAAS,CAAC,CACtB8C,UAAWtE,GAAe5L,SAC1BmQ,UAAWV,IACZ,CACCS,UAAWtE,GAAe1L,UAC1BiQ,UAAWV,IACZ,CACCS,UAAWtE,GAAe3L,UAC1BkQ,UAAWV,IACZ,CACCS,UAAWtE,GAAepG,UAC1B2K,UAAYT,GACS,iBAANA,EACAA,EAAEC,MAAM,KAAKK,KAAK,KAAKD,cAE3BL,GAEZ,CACCQ,UAAWtE,GAAevM,OAC1B8Q,UAAYT,GACDA,KAIbU,GAAU,6BAEVC,GADgBD,GAAU,aACK,IAC9B,SAASE,GAAaC,GACzB,GAAIA,EACA,OAAKC,MAAMD,IAIXA,GADAA,KAASA,KACCZ,MAAM,IAAIC,OAAOF,IAAgD,IAA3CW,GAAaP,QAAQJ,EAAEK,gBAAuBC,KAAK,KACpC,IAA3CI,GAAQN,QAAQS,EAAI,GAAGR,iBACvBQ,EAAM,IAAMA,GAETA,EAAIZ,MAAM,KAAKK,KAAK,KAAKS,mBAPjBF,KASnB,KAAM,sBAeH,MAAMG,GAAa,CACtB9T,OAAQ,UAEC+T,GAAW,CACpBC,OAAQ,SAERnI,SAAU,WACVoI,aAAc,gBACdC,iBAAkB,oBAClBrE,cAAe,iBAEf5H,UAAW,WACXwD,gBAAiB,oBAEjB0I,WAAY,aACZC,eAAgB,kBAChBxI,UAAW,YACXyI,kBAAmB,qBACnB3E,eAAgB,kBAEhBE,iBAAkB,oBAClBG,kBAAmB,qBACnBuE,mBAAoB,uBACpBpE,eAAgB,kBAChBqE,OAAQ,SACRC,WAAY,cACZxI,aAAc,gBACdlE,UAAW,aACX2M,cAAe,iBACfC,UAAW,YACXtS,YAAa,cACb+M,qBAAsB,wBACtBwF,gBAAiB,mBACjBC,cAAe,iBACfC,eAAgB,iBAChBtJ,WAAY,aACZuJ,sBAAuB,qBACvBC,wBAAyB,0BACzBC,yBAA0B,+BAC1BC,wBAAyB,4BACzBC,iBAAkB,oBAClBC,aAAc,gBACdC,aAAc,cACd5T,cAAe,kBACfH,cAAe,kBACfC,SAAU,YACVF,UAAW,aACXG,gBAAiB,oBACjB8T,iBAAkB,oBAClBC,aAAc,gBACdC,WAAY,cACZC,uBAAwB,2BACxBC,UAAW,aACXC,kBAAmB,sBACnBC,cAAe,kBACfC,cAAe,kBACfC,SAAU,YACVC,YAAa,eACbC,cAAe,iBACfC,mBAAoB,sBACpBC,MAAO,QACPC,6BAA8B,iCAC9BC,6BAA8B,iCAC9BC,2CAA4C,8CAC5CC,2CAA4C,+CAGnCC,GAAa,CACtBxJ,CAACiH,GAASoB,cAAe,CACrBoB,KAAMxC,GAASoB,aACfqB,OAAQrI,GAAetD,GAAUsB,WAErCW,CAACiH,GAAS0B,WAAY,CAClBc,KAAMxC,GAAS0B,UACfe,OAAQrI,GAAeF,KAE3BnB,CAACiH,GAASqB,cAAe,CACrBmB,KAAMxC,GAASqB,aACfoB,OAAQ,UACRC,YAba,GAejB3J,CAACiH,GAASvS,eAAgB,CACtB+U,KAAMxC,GAASvS,cACfgV,OAAQ,UACRC,YAlBa,GAoBjB3J,CAACiH,GAAS1S,eAAgB,CACtBkV,KAAMxC,GAAS1S,cACfmV,OAAQ,UACRC,YAvBa,GAyBjB3J,CAACiH,GAASxS,iBAAkB,CACxBgV,KAAMxC,GAASxS,gBACfiV,OAAQ,UACRC,YA5Ba,GA8BjB3J,CAACiH,GAASzS,UAAW,CACjBiV,KAAMxC,GAASzS,SACfkV,OAAQ,UACRC,YAjCa,GAmCjB3J,CAACiH,GAAS3S,WAAY,CAClBmV,KAAMxC,GAAS3S,UACfoV,OAAQ,UACRC,YAtCa,GAwCjB3J,CAACiH,GAASyB,wBAAyB,CAC/Be,KAAMxC,GAASyB,uBACfgB,OAAQrI,GAAetD,GAAUsB,WAErCW,CAACiH,GAASmB,kBAAmB,CACzBqB,KAAMxC,GAASmB,iBACfsB,OAAQrI,GAAetD,GAAUsB,WAErCW,CAACiH,GAASuB,cAAe,CACrBiB,KAAMxC,GAASuB,aACfkB,OAAQrI,GAAetD,GAAU7C,WAErC8E,CAACiH,GAASC,QAAS,CACfuC,KAAMxC,GAASC,OACfwC,OAAQrI,GAAetD,GAAUS,aAErCwB,CAACiH,GAASxI,YAAa,CACnBgL,KAAMxC,GAASxI,WACfiL,OAAQrI,GAAetD,GAAUU,aAErCuB,CAACiH,GAASe,uBAAwB,CAC9ByB,KAAMxC,GAASe,sBACf0B,OAAQrI,GAAetD,GAAUU,aAErCuB,CAACiH,GAASI,YAAa,CACnBoC,KAAMxC,GAASI,WACfqC,OAAQrI,GAAetD,GAAUa,iBAErCoB,CAACiH,GAASnI,WAAY,CAClB2K,KAAMxC,GAASnI,UACf4K,OAAQrI,GAAetD,GAAUe,YAErCkB,CAACiH,GAASQ,QAAS,CACfgC,KAAMxC,GAASQ,OACfiC,OAAQrI,GAAetD,GAAUiB,aAGrCgB,CAACiH,GAAS/H,cAAe,CACrBuK,KAAMxC,GAAS/H,aACfwK,OAAQrI,GAAetD,GAAUmB,eAErCc,CAACiH,GAASjM,WAAY,CAClByO,KAAMxC,GAASjM,UACf0O,OAAQrI,GAAetD,GAAU7C,WAErC8E,CAACiH,GAASU,eAAgB,CACtB8B,KAAMxC,GAASU,cACf+B,OAAQrI,GAAetD,GAAUoB,oBAErCa,CAACiH,GAASW,WAAY,CAClB6B,KAAMxC,GAASW,UACf8B,OAAQrI,GAAetD,GAAUqB,gBAIrCY,CAACiH,GAASkB,yBAA0B,CAChCsB,KAAMxC,GAASkB,wBACfuB,OAAQrI,GAAetD,GAAUoB,qBAI5ByK,GAAmB,CAC5BC,KAAM,OACNC,YAAa,cACbC,kBAAmB,oBACnBC,YAAa,eAGJC,GAAiB,CAC1BC,gBAAiB,CACbT,KAAMxC,GAAS3R,aAEnBqJ,gBAAiB,CACb8K,KAAMxC,GAAStI,iBAEnBwL,yBAA0B,CACtBV,KAAMxC,GAAS5E,sBAEnB+H,cAAe,CACXX,KAAMxC,GAAS9L,WAEnB0M,gBAAiB,CACb4B,KAAMxC,GAASY,iBAEnBC,cAAe,CACX2B,KAAMxC,GAASa,eAEnBC,eAAgB,CACZ0B,KAAMxC,GAASc,gBAEnBsC,uBAAwB,CACpBZ,KAAMxC,GAASiC,oBAEnBX,iBAAkB,CACdkB,KAAMxC,GAASsB,iBACfvI,CAAC4J,GAAiBI,aAAc,MAEpCM,iCAAkC,CAC9Bb,KAAMxC,GAASoC,8BAEnBC,2CAA4C,CACxCG,KAAMxC,GAASqC,4CAEnBiB,iCAAkC,CAC9Bd,KAAMxC,GAASmC,8BAEnBG,2CAA4C,CACxCE,KAAMxC,GAASsC,4CAEnBN,cAAe,CACXQ,KAAMxC,GAASgC,eAEnBuB,UAAW,CACPC,MAAOxD,GAASkC,OAEpBN,cAAe,CACXY,KAAMxC,GAAS4B,eAEnBC,cAAe,CACXW,KAAMxC,GAAS6B,eAEnBF,kBAAmB,CACfa,KAAMxC,GAAS2B,mBAEnBN,aAAc,CACVmB,KAAMxC,GAASqB,cAEnB5T,cAAe,CACX+U,KAAMxC,GAASvS,eAEnBH,cAAe,CACXkV,KAAMxC,GAAS1S,eAEnBE,gBAAiB,CACbgV,KAAMxC,GAASxS,iBAEnBD,SAAU,CACNiV,KAAMxC,GAASzS,UAEnBF,UAAW,CACPmV,KAAMxC,GAAS3S,WAEnB+T,aAAc,CACVoB,KAAMxC,GAASoB,cAEnBD,iBAAkB,CACdqB,KAAMxC,GAASmB,kBAEnBM,uBAAwB,CACpBe,KAAMxC,GAASyB,wBAEnBgC,WAAY,CACRjB,KAAMxC,GAASC,QAEnByD,eAAgB,CACZlB,KAAMxC,GAASxI,YAEnBuJ,sBAAuB,CACnByB,KAAMxC,GAASe,uBAEnBC,wBAAyB,CACrBwB,KAAMxC,GAASgB,yBAEnBC,yBAA0B,CACtBuB,KAAMxC,GAASiB,0BAEnB0C,cAAe,CACXnB,KAAMxC,GAASI,YAEnBwD,mBAAoB,CAChBpB,KAAMxC,GAASK,gBAEnBwD,mBAAoB,CAChBrB,KAAMxC,GAAS7D,gBAEnB2H,mBAAoB,CAChBtB,KAAMxC,GAASrE,gBAEnBoI,uBAAwB,CACpBvB,KAAMxC,GAASO,oBAEnByD,sBAAuB,CACnBxB,KAAMxC,GAASM,mBAGnB2D,aAAc,CACVzB,KAAMxC,GAASI,YAEnB8D,iBAAkB,CACd1B,KAAMxC,GAASK,gBAEnB8D,kBAAmB,CACf3B,KAAMxC,GAAS7D,gBAEnBiI,kBAAmB,CACf5B,KAAMxC,GAASlE,eAEnBuI,sBAAuB,CACnB7B,KAAMxC,GAASO,oBAEnB+D,qBAAsB,CAClB9B,KAAMxC,GAASM,mBAGnBiE,sBAAuB,CACnB/B,KAAMxC,GAAShE,mBAEnBwI,qBAAsB,CAClBhC,KAAMxC,GAASnE,kBAEnB4I,WAAY,CACRjC,KAAMxC,GAASQ,QAEnBkE,eAAgB,CACZlC,KAAMxC,GAASS,YAGnBkE,iBAAkB,CACdnC,KAAMxC,GAAS/H,cAEnB2M,cAAe,CACXpC,KAAMxC,GAASjM,WAEnB8Q,kBAAmB,CACfrC,KAAMxC,GAASU,eAEnBoE,cAAe,CACXtC,KAAMxC,GAASW,WAInBO,wBAAyB,CACrBsB,KAAMxC,GAASkB,yBAEnBK,aAAc,CACViB,KAAMxC,GAASuB,cAEnBC,WAAY,CACRgB,KAAMxC,GAASwB,YAEnBM,SAAU,CACNU,KAAMxC,GAAS8B,UAEnBC,YAAa,CACTS,KAAMxC,GAAS+B,cAGvBjY,OAAOib,KAAK/B,IAAgBgC,IAAIC,IACxBjC,GAAeiC,IAAcjC,GAAeiC,GAAWzC,OACvDQ,GAAeiC,GAAWjC,GAAeiC,GAAWzC,MAAQ,MAG7D,MAAM1U,GAAU,CACnB6C,OAAQ,SACRC,IAAK,MACLC,OAAQ,SACRI,OAAQ,SACRF,OAAQ,UAKCmU,GAAkB,CAC3BC,IAAK,MACLC,iBAAkB,mBAClBC,qBAAsB,uBACtBC,UAAW,YACXC,YAAa,cACbC,QAAS,UACTC,MAAO,QACPC,oBAAqB,sBACrBC,SAAU,WACVC,SAAU,YACVC,OAAQ,UACRC,QAAS,WACTC,YAAa,eACbC,qBAAsB,wBACtBC,SAAU,YACVC,kBAAmB,qBACnBC,QAAS,WACTC,IAAK,MACLC,IAAK,MACLC,WAAY,cACZC,OAAQ,SACRC,MAAO,QACPC,gBAAiB,kBACjBC,UAAW,YACXC,KAAM,OACNC,MAAO,QACPC,eAAgB,iBAChBC,SAAU,WACVC,SAAU,WACVC,IAAK,MACLC,eAAgB,iBAChBC,MAAO,UAkBEC,GAAoB,CAC7BC,OAAQ,SACRC,cAAe,gBACfC,SAAU,WACVC,IAAK,MACLC,MAAO,QACPC,OAAQ,SACRC,QAAS,UACTC,MAAO,QACPC,YAAa,eAEJC,GAAY,KAEZC,GAAuB,CAChCC,OAAQ,UAECC,GAA8B,CACvCjP,CAAC+O,GAAqBC,QAAS,CAC3BhP,CAACoO,GAAkBG,UAAW,WAC9BvO,CAACoO,GAAkBC,QAAS,SAC5BrO,CAACoO,GAAkBE,eAAgB,gBACnCtO,CAACoO,GAAkBI,KAAM,MACzBxO,CAACoO,GAAkBK,OAAQ,QAC3BzO,CAACoO,GAAkBM,QAAS,SAC5B1O,CAACoO,GAAkBO,SAAU,OAC7B3O,CAACoO,GAAkBQ,OAAQ,QAC3B5O,CAACoO,GAAkBS,aAAc,gBAK5BK,GAAS,CAClBlP,CAAC+O,GAAqBC,QAAS,CAC3BhP,CAACoO,GAAkBQ,OAAQ,CAJL,gBACM,uBAI5B5O,CAACoO,GAAkBS,aAAc,CALX,gBACM,yBA8C9BM,GAAuB,CACzB7d,MAAO,CACHmY,KAAM2E,GAAkBG,SACxBa,SAAUrR,GAAU7C,WAItBmU,GAAqB,CACvB/d,MAAO,CACHmY,KAAM2E,GAAkBC,OACxBe,SAAUrR,GAAU7C,WAyBrB,MAAMoU,GAAkB,CAC3BtP,CAACmM,GAAgB+B,gBAAiB,CAC9BqB,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgBM,SAC1BiD,QAAQ,GAEZC,MAAO,CACHC,MAAS,SAAUC,GACf,UAAW,GAAGC,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9E4J,KAAQ,WACJ,UAAW,GAAGJ,YAAY,EAAG,GAAID,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE/E6J,MAAS,WACL,UAAW,GAAGL,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9E8J,QAAW,WACP,UAAW,GAAGN,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,SAE9E+J,MAAS,WACL,UAAW,GAAGP,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,UAItFtG,CAACmM,GAAgB8B,KAAM,CACnBsB,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgB6B,UAC1B0B,QAAQ,GAEZC,MAAO,CACHC,MAAS,SAAUC,GACf,UAAW,GAAGC,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9E4J,KAAQ,WACJ,UAAW,GAAGJ,YAAY,EAAG,GAAID,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE/E6J,MAAS,WACL,UAAW,GAAGL,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9E8J,QAAW,WACP,UAAW,GAAGN,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,SAE9E+J,MAAS,WACL,UAAW,GAAGP,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,UAItFtG,CAACmM,GAAgB6B,UAAW,CACxBuB,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,SAAS,EACTC,QAAQ,GAEZC,MAAO,CACHC,MAAS,WACL,UAAW,GAAGE,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9E4J,KAAQ,WACJ,UAAW,GAAGJ,YAAY,EAAG,GAAID,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE/E6J,MAAS,WACL,UAAW,GAAGL,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9EgK,OAAU,WACN,UAAW,GAAGR,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9E8J,QAAW,WACP,UAAW,GAAGN,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,SAE9EiK,SAAY,WACR,UAAW,GAAGT,YAAY,EAAG,EAAGD,GAAK,KAAKvJ,KAAK,UAI3DtG,CAACmM,GAAgB4B,UAAW,CACxBwB,MAAO,CAACnB,GAAkBG,UAC1BiB,QAAS,CACLle,OAAO,GAEXqe,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,4BAEZW,MAAS,WACL,MAAQ,+BAKpBxQ,CAACmM,GAAgBwB,WAAY,CACzB4B,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLle,OAAO,GAEXqe,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,6BAEZW,MAAS,WACL,MAAQ,8BAIpBxQ,CAACmM,GAAgBsB,OAAQ,CACrB8B,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,SAAS,GAEbE,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,mBAEZW,MAAS,WACL,MAAQ,2BAEZH,MAAS,WACL,MAAQ,QAIpBrQ,CAACmM,GAAgBoB,YAAa,CAC1BgC,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,SAAS,GAEbE,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,oBAEZW,MAAS,WACL,MAAQ,4BAEZF,OAAU,WACN,MAAQ,QAIpBtQ,CAACmM,GAAgBqB,QAAS,CACtB+B,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,SAAS,EACTC,QAAQ,GAEZC,MAAO,CACHC,MAAS,WACL,UAAW,GAAGE,YAAY,EAAG,GAAID,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE/E4J,KAAQ,WACJ,UAAW,GAAGJ,YAAY,EAAG,GAAID,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE/E6J,MAAS,WACL,UAAW,GAAGL,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9EgK,OAAU,WACN,UAAW,GAAGR,YAAY,EAAG,EAAGD,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,QAE9E8J,QAAW,WACP,UAAW,GAAGN,YAAY,EAAG,GAAID,GAAKE,KAAKC,MAAsB,GAAhBD,KAAKE,WAAgB3J,KAAK,SAE/EiK,SAAY,WACR,UAAW,GAAGT,YAAY,EAAG,GAAID,GAAK,KAAKvJ,KAAK,UAI5DtG,CAACmM,GAAgBmB,KAAM,CACnBiC,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgBU,WAE9B8C,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,sBAEZW,MAAS,WACL,MAAQ,4BAEZH,MAAS,WACL,MAAQ,QAIpBrQ,CAACmM,GAAgBU,UAAW,CACxB0C,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgBkB,MAE9BsC,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,sBAEZW,MAAS,WACL,MAAQ,4BAEZF,OAAU,WACN,MAAQ,QAIpBtQ,CAACmM,GAAgBO,OAAQ,CACrB6C,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgBkB,KAC1BqC,QAAQ,GAEZC,MAAO,CACHa,MAAS,WACL,MAAQ,UAEZF,OAAU,WACN,MAAQ,QAIpBtQ,CAACmM,GAAgBS,UAAW,CACxB2C,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgBkB,KAC1BqC,QAAQ,GAEZC,MAAO,CACHc,OAAU,WACN,MAAQ,UAEZJ,MAAS,WACL,MAAQ,QAIpBrQ,CAACmM,GAAgBK,aAAc,CAC3BgD,QAAS,CACLC,QAAS,CAACtD,GAAgBM,UAE9B8C,MAAO,CAACnB,GAAkBC,QAC1BsB,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,UAEZW,MAAS,WACL,MAAQ,6BAEZH,MAAS,WACL,MAAQ,QAIpBrQ,CAACmM,GAAgBM,SAAU,CACvB+C,QAAS,CACLC,QAAS,CAACtD,GAAgBG,uBAE9BiD,MAAO,CAACnB,GAAkBC,QAC1BsB,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,aAEZW,MAAS,WACL,MAAQ,UAEZH,MAAS,WACL,MAAQ,QAKpBrQ,CAACmM,GAAgBG,sBAAuB,CACpCkD,QAAS,CACLC,QAAS,CAACtD,GAAgBkB,MAE9BkC,MAAO,CAACnB,GAAkBC,QAC1BsB,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,oCAEZQ,MAAS,WACL,MAAQ,QAIpBrQ,CAACmM,GAAgBE,kBAAmB,CAChCmD,QAAS,CACLC,QAAS,CAACtD,GAAgBG,uBAE9BiD,MAAO,CAACnB,GAAkBC,QAC1BsB,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,kBAEZW,MAAS,WACL,MAAQ,6BAEZF,OAAU,WACN,MAAQ,QAIpBtQ,CAACmM,GAAgBI,WAAY,CACzBgD,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgBQ,sBAE9BgD,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,gBAEZW,MAAS,WACL,MAAQ,gCAEZH,MAAS,WACL,MAAQ,QAIpBrQ,CAACmM,GAAgBQ,qBAAsB,CACnC4C,MAAO,CAACnB,GAAkBC,QAC1BmB,QAAS,CACLC,QAAS,CAACtD,GAAgBG,uBAE9BqD,MAAO,CACHC,MAAS,SAAUC,GACf,MAAQ,iBAEZY,OAAU,WACN,MAAQ,gCAEZJ,MAAS,WACL,MAAQ,QAIpBrQ,CAACmM,GAAgBW,QAAS,CACtByC,MAAO,CAACnB,GAAkBO,SAC1Ba,QAAS,CACLle,MAAO,CAAC6a,GAAgBkB,MAE5BsC,MAAO,CACHC,MAAS,WACL,MAAO,QAEXY,MAAS,WACL,MAAO,WAInBxQ,CAACmM,GAAgBY,SAAU,CACvBwC,MAAO,CAACnB,GAAkBO,SAC1Ba,QAAS,CACLle,MAAO,CAAC6a,GAAgBkB,MAE5BsC,MAAO,CACHe,KAAQ,WACJ,MAAO,QAEXD,OAAU,WACN,MAAO,WAInBzQ,CAACmM,GAAgBc,sBAAuB,CACpCsC,MAAO,CAACnB,GAAkBM,OAAQN,GAAkBK,MAAOL,GAAkBI,KAC7EgB,QAAS,CACLle,MAAO,CACH0O,CAACmM,GAAgBa,aAAc,SAAU2D,EAAMC,KAG/C5Q,CAACmM,GAAgBc,sBAAuB,SAAU0D,EAAMC,KAGxD5Q,CAACmM,GAAgBiB,SAAU,SAAUuD,EAAMC,KAG3C5Q,CAACmM,GAAgBe,UAAW,SAAUyD,EAAMC,KAG5C5Q,CAACmM,GAAgBgB,mBAAoB,SAAUwD,EAAMC,OAK7DjB,MAAO,CACHkB,SAAY,WACR,MAAO,QAEXC,WAAc,WACV,MAAO,UAInB9Q,CAACmM,GAAgBa,aAAc,CAC3BuC,MAAO,CAACnB,GAAkBM,OAAQN,GAAkBK,MAAOL,GAAkBI,KAC7EgB,QAAS,CACLle,MAAO,CACH0O,CAACmM,GAAgBa,aAAc,SAAU2D,EAAMC,KAG/C5Q,CAACmM,GAAgBc,sBAAuB,SAAU0D,EAAMC,KAGxD5Q,CAACmM,GAAgBiB,SAAU,SAAUuD,EAAMC,KAG3C5Q,CAACmM,GAAgBe,UAAW,SAAUyD,EAAMC,KAG5C5Q,CAACmM,GAAgBgB,mBAAoB,SAAUwD,EAAMC,OAK7DjB,MAAO,CACHkB,SAAY,WACR,MAAO,OAEXC,WAAc,WACV,MAAO,SAInB9Q,CAACmM,GAAgBe,UAAW,CACxBqC,MAAO,CAACnB,GAAkBM,OAAQN,GAAkBK,MAAOL,GAAkBI,KAC7EgB,QAAS,CACLle,MAAO,CACH0O,CAACmM,GAAgBa,aAAc,SAAU2D,EAAMC,KAG/C5Q,CAACmM,GAAgBc,sBAAuB,SAAU0D,EAAMC,KAGxD5Q,CAACmM,GAAgBiB,SAAU,SAAUuD,EAAMC,KAG3C5Q,CAACmM,GAAgBe,UAAW,SAAUyD,EAAMC,KAG5C5Q,CAACmM,GAAgBgB,mBAAoB,SAAUwD,EAAMC,OAK7DjB,MAAO,CACHoB,MAAS,WACL,MAAO,OAEXC,QAAW,WACP,MAAO,SAInBhR,CAACmM,GAAgBiB,SAAU,CACvBmC,MAAO,CAACnB,GAAkBM,OAAQN,GAAkBK,MAAOL,GAAkBI,KAC7EgB,QAAS,CACLle,MAAO,CACH0O,CAACmM,GAAgBa,aAAc,SAAU2D,EAAMC,KAG/C5Q,CAACmM,GAAgBc,sBAAuB,SAAU0D,EAAMC,KAGxD5Q,CAACmM,GAAgBiB,SAAU,SAAUuD,EAAMC,KAG3C5Q,CAACmM,GAAgBe,UAAW,SAAUyD,EAAMC,KAG5C5Q,CAACmM,GAAgBgB,mBAAoB,SAAUwD,EAAMC,OAK7DjB,MAAO,CACHsB,UAAa,WACT,MAAO,OAEXC,UAAa,WACT,MAAO,UAKvBngB,OAAOib,KAAKsD,IAAiBrD,IAAI1a,IAC7B+d,GAAgB6B,GAAK5f,IAElB,MAAM6f,GAAgB,CACzBC,eAAgB,kBAChBC,KAAM,OACNC,eAAgB,mBAEPC,GAAa,CACtBxR,CAACoR,GAAcC,gBAAiB,CAC5BI,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,kBAEnC0C,UAAW,IACJrC,GACHD,SAAUrR,GAAUE,MACpB0T,UAAW,CACPpC,MAAO,CAACxR,GAAUE,UAI9B+B,CAACoR,GAAcG,gBAAiB,CAC5BE,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,kBAEnC0C,UAAW,IACJrC,GACHD,SAAUrR,GAAUE,MACpB0T,UAAW,CACPpC,MAAO,CAACxR,GAAUE,UAI9B+B,CAACoR,GAAcE,MAAO,CAClBG,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,QAEnC0C,UAAW,IAAKrC,MAGxBte,OAAOib,KAAKwF,IAAYvF,IAAI1a,IACxBigB,GAAWjgB,GAAGkY,KAAOlY,IAElB,MAAMqgB,GAAc,CACvBC,WAAY,cACZC,YAAa,gBAEJC,GAAW,CACpB/R,CAAC4R,GAAYC,YAAa,CACtBJ,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,cAEnC0C,UAAW,IACJrC,GACH5F,KAAM2E,GAAkBO,UAGhC3O,CAAC4R,GAAYE,aAAc,CACvBL,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,eAEnC0C,UAAW,IACJrC,GACH5F,KAAM2E,GAAkBO,WAIpC5d,OAAOib,KAAK+F,IAAU9F,IAAI1a,IACtBwgB,GAASxgB,GAAGkY,KAAOlY,IAEhB,MAAMygB,GAAe,CACxBhS,CAACmM,GAAgBgC,OAAQ,CACrBsD,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,kBAEnC0C,UAAW,IACJrC,GACHD,SAAUrR,GAAUzI,YACpBqc,UAAW,CACPpC,MAAO,CAACxR,GAAUzI,YAAayI,GAAUqB,kBAIrDY,CAACmM,GAAgB+B,gBAAiB,CAC9BuD,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,2BAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgB8B,KAAM,CACnBwD,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,gBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgB6B,UAAW,CACxByD,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,qBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgB4B,UAAW,CACxB0D,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,qBAEnC0C,UAAW,IAAKvC,KAEpBnP,CAACmM,GAAgBwB,WAAY,CACzB8D,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,sBAEnC0C,UAAW,IAAKvC,KAEpBnP,CAACmM,GAAgBsB,OAAQ,CACrBgE,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,kBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgBqB,QAAS,CACtBiE,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,uBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgBoB,YAAa,CAC1BkE,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,uBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgBmB,KAAM,CACnBmE,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,gBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgBU,UAAW,CACxB4E,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,qBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgBE,kBAAmB,CAChCoF,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,6BAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgBI,WAAY,CACzBkF,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,sBAEnC0C,UAAW,IAAKrC,KAEpBrP,CAACmM,GAAgBQ,qBAAsB,CACnC8E,KAAM,CACFzR,CAAC+O,GAAqBC,QAAS,qBAEnC0C,UAAW,IAAKrC,MAGxBte,OAAOib,KAAKgG,IAAc/F,IAAI1a,IAC1BygB,GAAazgB,GAAGkY,KAAOlY,8BC9+CpB,MAAMiK,GAAgB,CAEzByW,0CAA2C,gDAC3CC,0CAA2C,gDAC3CC,uCAAwC,6CACxCC,0CAA2C,gDAG3CC,4CAA6C,kDAC7CC,4CAA6C,kDAC7CC,yCAA0C,+CAC1CC,4CAA6C,kDAG7CC,uCAAwC,6CACxCC,uCAAwC,6CACxCC,oCAAqC,0CACrCC,uCAAwC,6CAGxCC,uCAAwC,2CACxCC,uCAAwC,2CACxCC,oCAAqC,wCACrCC,uCAAwC,2CAGxCC,kCAAmC,sCACnCC,kCAAmC,sCACnCC,+BAAgC,mCAChCC,kCAAmC,sCAGnCC,uCAAwC,0CAK/BC,GAAuB,CAChCrV,MAAO,QACPsV,KAAM,OACNC,WAAY,cACZC,yBAA0B,6BAC1BC,yBAA0B,6BAC1BxY,SAAU,WACVyY,OAAQ,SACRC,cAAe,iBACfC,MAAO,QACPC,UAAW,aACXC,KAAM,OACNC,gBAAiB,eACjBvV,WAAY,aACZwV,aAAc,gBACd/V,YAAa,eACb9H,MAAO,SAGE8d,GAAyB,CAClCjd,QAAS,UACTC,OAAQ,SACRid,SAAU,WACV3X,SAAU,WACV4X,QAAS,UACTC,OAAQ,SACRC,aAAc,eACdC,QAAS,UACTC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdC,mBAAoB,qBACpBC,gBAAiB,mBAGfC,GAAqB,CACvB7U,CAACsT,GAAqBE,YAAa,CAC/BxT,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBM,aAAa,EACrC5iB,IAAK0hB,GAAqBE,YAE9BxT,CAACsT,GAAqBrV,OAAQ,CAC1B+B,CAACkU,GAAuBE,SAAUd,GAAqBK,OACvD3T,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBrV,OAE9B+B,CAACsT,GAAqBG,0BAA2B,CAC7CzT,CAACkU,GAAuBE,SAAUd,GAAqBrV,MACvD+B,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBO,aAAa,EACrC7iB,IAAK0hB,GAAqBG,0BAE9BzT,CAACsT,GAAqBK,QAAS,CAC3B3T,CAACkU,GAAuB1X,UAAW8W,GAAqBrV,MACxD+B,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBK,QAE9B3T,CAACsT,GAAqBQ,WAAY,CAC9B9T,CAACkU,GAAuBjd,UAAU,EAClC+I,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBQ,WAE9B9T,CAACsT,GAAqBS,MAAO,CACzB/T,CAACkU,GAAuBhd,SAAS,EACjC8I,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBS,MAE9B/T,CAACsT,GAAqBW,cAAe,CACjCjU,CAACkU,GAAuBC,UAAWb,GAAqBS,KACxD/T,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBW,aAC1BjU,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,GAE9C5U,CAACsT,GAAqBld,OAAQ,CAC1B4J,CAACkU,GAAuBC,UAAWb,GAAqBrV,MACxD+B,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBld,MAC1B4J,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,IAM5CE,GAAkC,CACpC9U,CAACsT,GAAqBrV,OAAQ,CAC1B+B,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBrV,OAE9B+B,CAACsT,GAAqBQ,WAAY,CAC9B9T,CAACkU,GAAuBjd,UAAU,EAClC+I,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBQ,WAE9B9T,CAACsT,GAAqBS,MAAO,CACzB/T,CAACkU,GAAuBhd,SAAS,EACjC8I,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBS,MAE9B/T,CAACsT,GAAqBW,cAAe,CACjCjU,CAACkU,GAAuBC,UAAWb,GAAqBS,KACxD/T,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBW,aAC1BjU,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,GAE9C5U,CAACsT,GAAqBld,OAAQ,CAC1B4J,CAACkU,GAAuBC,UAAWb,GAAqBrV,MACxD+B,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBld,MAC1B4J,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,IAK5CG,GAAyC,CAC3C/U,CAACsT,GAAqBrV,OAAQ,CAC1BrM,IAAK0hB,GAAqBrV,MAC1B+W,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBO,OAAQ,CAC1B7T,CAACkC,GAAejL,UAAU,EAC1BrF,IAAK0hB,GAAqBO,MAC1BmB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBS,MAAO,CACzB/T,CAACkC,GAAehL,SAAS,EACzBtF,IAAK0hB,GAAqBS,KAC1BiB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqB7U,YAAa,CAC/B7M,IAAK0hB,GAAqB7U,WAC1BuW,UAAW,CAACjX,GAAUU,aAE1BuB,CAACsT,GAAqBpV,aAAc,CAChCtM,IAAK0hB,GAAqBpV,YAC1B8W,UAAW,CAACjX,GAAUG,eAKxB+W,GAA+C,CACjDjV,CAACsT,GAAqBrV,OAAQ,CAC1BrM,IAAK0hB,GAAqBrV,MAC1B+W,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBK,QAAS,CAC3B/hB,IAAK0hB,GAAqBK,OAC1BqB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBpY,UAAW,CAC7BtJ,IAAK0hB,GAAqBpY,SAC1B8Z,UAAW,CAACjX,GAAU7C,WAE1B8E,CAACsT,GAAqBO,OAAQ,CAC1B7T,CAACkC,GAAejL,UAAU,EAC1BrF,IAAK0hB,GAAqBO,MAC1BmB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBS,MAAO,CACzB/T,CAACkC,GAAehL,SAAS,EACzBtF,IAAK0hB,GAAqBS,KAC1BiB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqB7U,YAAa,CAC/B7M,IAAK0hB,GAAqB7U,WAC1BuW,UAAW,CAACjX,GAAUU,aAE1BuB,CAACsT,GAAqBU,iBAAkB,CACpChU,CAACkC,GAAexF,kBAAkB,EAClC9K,IAAK0hB,GAAqBU,gBAC1BgB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBpV,aAAc,CAChCtM,IAAK0hB,GAAqBpV,YAC1B8W,UAAW,CAACjX,GAAUG,eAKxBgX,GAA6C,CAC/ClV,CAACsT,GAAqBrV,OAAQ,CAC1BrM,IAAK0hB,GAAqBrV,MAC1B+W,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBK,QAAS,CAC3B/hB,IAAK0hB,GAAqBK,OAC1BqB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBO,OAAQ,CAC1B7T,CAACkC,GAAejL,UAAU,EAC1BrF,IAAK0hB,GAAqBO,MAC1BmB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBS,MAAO,CACzB/T,CAACkC,GAAehL,SAAS,EACzBtF,IAAK0hB,GAAqBS,KAC1BiB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqBU,iBAAkB,CACpChU,CAACkC,GAAexF,kBAAkB,EAClC9K,IAAK0hB,GAAqBU,gBAC1BgB,UAAW,CAACjX,GAAUE,QAE1B+B,CAACsT,GAAqB7U,YAAa,CAC/B7M,IAAK0hB,GAAqB7U,WAC1BuW,UAAW,CAACjX,GAAUU,aAE1BuB,CAACsT,GAAqBpV,aAAc,CAChCtM,IAAK0hB,GAAqBpV,YAC1B8W,UAAW,CAACjX,GAAUG,eAKxBiX,GACI,CACFnV,CAACkU,GAAuBC,UAAWb,GAAqBrV,MACxD+B,CAACkU,GAAuBG,SAAS,GAHnCc,GAKI,CACFnV,CAACkU,GAAuBC,UAAWb,GAAqBC,MAGnD6B,GAAiC,CAC1CC,QAAS,UACTC,WAAY,aACZC,gBAAiB,aACjBC,YAAa,SACbC,cAAe,WACfC,cAAe,gBACfC,qBAAsB,uBACtBC,oBAAqB,mBACrBC,MAAO,QACPC,aAAc,eACdC,SAAU,WACVC,UAAW,YACXC,OAAQ,SACRC,SAAU,WACVC,OAAQ,CACJC,OAAQ,SACRC,OAAQ,SACRC,QAAS,YAGJC,GAA4B,CACrCC,QAAS,WAEPC,GAA+B,CACjCzW,CAACuW,GAA0BC,SAAU,CACjCxW,CAACoV,GAA+BG,iBAAkB,CAC9CvV,CAACoV,GAA+BW,UAAWW,KAAGC,aAAa,oEAAqE,SAChI3W,CAACoV,GAA+BU,cAAeY,KAAGC,aAAa,oEAAqE,SACpI3W,CAACoV,GAA+BS,OAAQvC,GAAqBrV,MAC7D+B,CAACoV,GAA+BC,SAAU,CACtCrV,CAACoV,GAA+Be,OAAOC,QAAS,CAC5CpW,CAACoV,GAA+BE,YAAa,CACzChC,GAAqBQ,UACrBR,GAAqBrV,QAG7B+B,CAACoV,GAA+Be,OAAOE,QAAS,CAC5CrW,CAACoV,GAA+BE,YAAa,CACzChC,GAAqBQ,UACrBR,GAAqBrV,UAKrC+B,CAACoV,GAA+BI,aAAc,CAC1CxV,CAACoV,GAA+BW,UAAWW,KAAGC,aAAa,iEAAkE,SAC7H3W,CAACoV,GAA+BU,cAAeY,KAAGC,aAAa,iEAAkE,SACjI3W,CAACoV,GAA+BS,OAAQvC,GAAqBrV,MAC7D+B,CAACoV,GAA+BC,SAAU,CACtCrV,CAACoV,GAA+Be,OAAOC,QAAS,CAC5CpW,CAACoV,GAA+BE,YAAa,CACzCF,GAA+BG,oBAK/CvV,CAACoV,GAA+BK,eAAgB,CAC5CzV,CAACoV,GAA+BS,OAAQvC,GAAqBrV,MAC7D+B,CAACoV,GAA+BC,SAAU,CACtCrV,CAACoV,GAA+Be,OAAOC,QAAS,CAC5CpW,CAACoV,GAA+BE,YAAa,CACzCF,GAA+BG,qBAMnDqB,mBAAoB,CAChB5W,CAACoV,GAA+BM,eAAgB,CAC5C1V,CAACoV,GAA+BS,OAAQvC,GAAqBrV,MAC7D+B,CAACoV,GAA+BC,SAAU,CACtCrV,CAACoV,GAA+Be,OAAOG,SAAU,CAC7CtW,CAACoV,GAA+BE,YAAa,CACzCF,GAA+BI,iBAMnDqB,WAAY,CACR7W,CAACoV,GAA+BO,sBAAuB,CACnD3V,CAACoV,GAA+BS,OAAQvC,GAAqBrV,MAC7D+B,CAACoV,GAA+Bc,UAAW5C,GAAqBpY,YASrE,SAAS4b,GAAYzmB,GACxB,UAAWA,IAER,MAAM0mB,GAAe,CACxBC,KAAM,WACNC,IAAK,UACLC,OAAQ,aACRC,MAAO,aAEEC,GAAgC,CACzCC,MAAO,QACPC,cAAe,gBACfC,KAAM,OACNC,cAAe,gBACflmB,MAAO,QACPmmB,MAAO,QACPC,WAAY,cAEHjc,GAAY,CACrBuE,CAACxE,GAAciX,wCAAyC,CACpDkF,MFpN8C,0CEqN9CC,SAAUlB,KAAGC,aAAa,6DAA8D,SACxFkB,UAAWnB,KAAGC,aAAa,uEAAwE,SACnGmB,YAAa,IACNhD,IACJiD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ6C,OAChBsgB,cAAe,IAAKd,KACrBpX,CAACxE,GAAckX,wCAAyC,CACvDiF,MF/N8C,0CEgO9CC,SAAUlB,KAAGC,aAAa,6DAA8D,SACxFkB,UAAWnB,KAAGC,aAAa,uEAAwE,SACnGmB,YAAa,IACNhD,IACJiD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQmD,OAChBggB,cAAe,IAAKd,KACrBpX,CAACxE,GAAcoX,wCAAyC,CACvD+E,MF1O8C,0CE2O9CC,SAAUlB,KAAGC,aAAa,6DAA8D,SACxFkB,UAAWnB,KAAGC,aAAa,uEAAwE,SACnGmB,YAAa,IACNhD,IACJiD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQiD,OAChBkgB,cAAe,IAAKd,KACrBpX,CAACxE,GAAcmX,qCAAsC,CACpDgF,MFrP2C,uCEsP3CC,SAAUlB,KAAGC,aAAa,0DAA2D,SACrFkB,UAAWnB,KAAGC,aAAa,oEAAqE,SAChGmB,YAAa,IACNhD,IACJiD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ+C,OAChBogB,cAAe,IAAKd,KACrBpX,CAACxE,GAAc6W,6CAA8C,CAC5DsF,MFxQmD,sCEyQnDC,SAAUlB,KAAGC,aAAa,yDAA0D,SACpFkB,UAAWnB,KAAGC,aAAa,mEAAoE,SAC/FmB,YAAa,IAAKjD,IAClBkD,OAAQ,IACD5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ6C,UACb6e,GACHyB,cAAe,IAAKd,KACrBpX,CAACxE,GAAc8W,6CAA8C,CAC5DqF,MFnRmD,sCEoRnDC,SAAUlB,KAAGC,aAAa,yDAA0D,SACpFkB,UAAWnB,KAAGC,aAAa,mEAAoE,SAC/FmB,YAAa,IAAKjD,IAClBkD,OAAQ,IACD5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQmD,UACbue,GACHyB,cAAe,IAAKd,KACrBpX,CAACxE,GAAc+W,0CAA2C,CACzDoF,MF9RgD,mCE+RhDC,SAAUlB,KAAGC,aAAa,sDAAuD,SACjFiB,SAAUlB,KAAGC,aAAa,gEAAiE,SAC3FmB,YAAa,IAAKjD,IAClBkD,OAAQ,IACD5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ+C,UACb2e,GACHyB,cAAe,IAAKd,KACrBpX,CAACxE,GAAc6X,wCAAyC,CACvDsE,MFpS8C,yCEqS9CC,SAAUlB,KAAGC,aAAa,qEAAsE,SAChGmB,YAAa,CACT9X,CAACsT,GAAqBQ,WAAY,CAC9B9T,CAACkU,GAAuBjd,UAAU,EAClC+I,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBQ,WAE9B9T,CAACsT,GAAqBI,0BAA2B,CAC7C1T,CAACkU,GAAuBE,SAAUd,GAAqBQ,UACvD9T,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBO,aAAa,EACrC7iB,IAAK0hB,GAAqBI,0BAE9B1T,CAACsT,GAAqBrV,OAAQ,CAC1B+B,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBrV,OAE9B+B,CAACsT,GAAqBG,0BAA2B,CAC7CzT,CAACkU,GAAuBE,SAAUd,GAAqBrV,MACvD+B,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBO,aAAa,EACrCzU,CAACkU,GAAuBQ,eAAe,EACvC9iB,IAAK0hB,GAAqBG,0BAE9BzT,CAACsT,GAAqBM,eAAgB,CAClC5T,CAACkU,GAAuBC,UAAWb,GAAqBQ,UACxD9T,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBM,cAC1B5T,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,GAE9C5U,CAACsT,GAAqBld,OAAQ,CAC1B4J,CAACkU,GAAuBC,UAAWb,GAAqBrV,MACxD+B,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBld,MAC1B4J,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,IAGlDmD,OAAQ,IACD5C,IAEPnV,CAACuW,GAA0BC,SAAU,GACrCI,mBAAoB,GACpBC,WAAY,GACZqB,cAAe,IAAKd,MAKfe,GAAkB,CAC3BnY,CAACxE,GAAciX,wCAAyC,CACpDkF,MF/V8C,0CEgW9CC,SAAUlB,KAAGC,aAAa,6DAA8D,SACxFkB,UAAWnB,KAAGC,aAAa,uEAAwE,SACnGmB,YAAa,IACN/C,IACJgD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ6C,OAChBsgB,cAAe,IAAKd,KAExBpX,CAACxE,GAAckX,wCAAyC,CACpDiF,MF3W8C,0CE4W9CC,SAAUlB,KAAGC,aAAa,6DAA8D,SACxFkB,UAAWnB,KAAGC,aAAa,uEAAwE,SACnGmB,YAAa,IACN/C,IACJgD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQmD,OAChBggB,cAAe,IAAKd,KAExBpX,CAACxE,GAAcoX,wCAAyC,CACpD+E,MFvX8C,0CEwX9CC,SAAUlB,KAAGC,aAAa,6DAA8D,SACxFkB,UAAWnB,KAAGC,aAAa,uEAAwE,SACnGmB,YAAa,IACN/C,IACJgD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQiD,OAChBkgB,cAAe,IAAKd,KAExBpX,CAACxE,GAAcmX,qCAAsC,CACjDgF,MFnY2C,uCEoY3CC,SAAUlB,KAAGC,aAAa,0DAA2D,SACrFkB,UAAWnB,KAAGC,aAAa,oEAAqE,SAChGmB,YAAa,IACN/C,IACJgD,OAAQ,IACJ5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ+C,OAChBogB,cAAe,IAAKd,KAExBpX,CAACxE,GAAc6W,6CAA8C,CACzDsF,MFvZmD,sCEwZnDC,SAAUlB,KAAGC,aAAa,yDAA0D,SACpFkB,UAAWnB,KAAGC,aAAa,mEAAoE,SAC/FmB,YAAa,IAAK7C,IAClB8C,OAAQ,IACD5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ6C,UACb6e,GACHyB,cAAe,IAAKd,KAExBpX,CAACxE,GAAc8W,6CAA8C,CACzDqF,MFnamD,sCEoanDC,SAAUlB,KAAGC,aAAa,yDAA0D,SACpFkB,UAAWnB,KAAGC,aAAa,mEAAoE,SAC/FmB,YAAa,IAAK7C,IAClB8C,OAAQ,IACD5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQmD,UACbue,GACHyB,cAAe,IAAKd,KAExBpX,CAACxE,GAAc+W,0CAA2C,CACtDoF,MF/agD,mCEgbhDC,SAAUlB,KAAGC,aAAa,sDAAuD,SACjFkB,UAAWnB,KAAGC,aAAa,gEAAiE,SAC5FmB,YAAa,IAAK7C,IAClB8C,OAAQ,IACD5C,IAEP6C,QAAQ,EACRI,WAAW,EACXH,OAAQljB,GAAQ+C,UACb2e,GACHyB,cAAe,IAAKd,KAExBpX,CAACxE,GAAc2W,wCAAyC,CACpDwF,MFpc8C,mCEqc9CC,SAAUlB,KAAGC,aAAa,8DAA+D,SACzFkB,UAAWnB,KAAGC,aAAa,wEAAyE,SACpGmB,YAAa,IACN5C,IACJ6C,OAAQ,IACJ5C,IAEPiD,WAAW,EACXJ,QAAQ,EACRC,OAAQljB,GAAQ+C,OAChBogB,cAAe,IAAKd,KAExBpX,CAACxE,GAAcyW,2CAA4C,CACvD0F,MFjdiD,sCEkdjDC,SAAUlB,KAAGC,aAAa,iEAAkE,SAC5FkB,UAAWnB,KAAGC,aAAa,2EAA4E,SACvGmB,YAAa,IAAK5C,IAClB6C,OAAQ,IACD5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQ6C,UACb6e,GACHyB,cAAe,IAAKd,KAExBpX,CAACxE,GAAc0W,2CAA4C,CACvDyF,MF7diD,sCE8djDC,SAAUlB,KAAGC,aAAa,iEAAkE,SAC5FkB,UAAWnB,KAAGC,aAAa,2EAA4E,SACvGmB,YAAa,IAAK5C,IAClB6C,OAAQ,IACD5C,IAEP6C,QAAQ,EACRC,OAAQljB,GAAQmD,UACbue,GACHyB,cAAe,IAAKd,KAExBpX,CAACxE,GAAc6X,wCAAyC,CACpDsE,MF/d8C,yCEge9CC,SAAUlB,KAAGC,aAAa,qEAAsE,SAChGmB,YAAa,CACT9X,CAACsT,GAAqBQ,WAAY,CAC9B9T,CAACkU,GAAuBjd,UAAU,EAClC+I,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBQ,WAE9B9T,CAACsT,GAAqBI,0BAA2B,CAC7C1T,CAACkU,GAAuBE,SAAUd,GAAqBQ,UACvD9T,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBO,aAAa,EACrC7iB,IAAK0hB,GAAqBI,0BAE9B1T,CAACsT,GAAqBrV,OAAQ,CAC1B+B,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBK,UAAU,EAClC3iB,IAAK0hB,GAAqBrV,OAE9B+B,CAACsT,GAAqBG,0BAA2B,CAC7CzT,CAACkU,GAAuBE,SAAUd,GAAqBrV,MACvD+B,CAACkU,GAAuBI,eAAe,EACvCtU,CAACkU,GAAuBO,aAAa,EACrCzU,CAACkU,GAAuBQ,eAAe,EACvC9iB,IAAK0hB,GAAqBG,0BAE9BzT,CAACsT,GAAqBM,eAAgB,CAClC5T,CAACkU,GAAuBC,UAAWb,GAAqBQ,UACxD9T,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBM,cAC1B5T,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,GAE9C5U,CAACsT,GAAqBld,OAAQ,CAC1B4J,CAACkU,GAAuBC,UAAWb,GAAqBrV,MACxD+B,CAACkU,GAAuBI,eAAe,EACvC1iB,IAAK0hB,GAAqBld,MAC1B4J,CAACkU,GAAuBS,qBAAqB,EAC7C3U,CAACkU,GAAuBU,kBAAkB,IAGlDmD,OAAQ,IACD5C,IAEPnV,CAACuW,GAA0BC,SAAU,GACrCI,mBAAoB,GACpBC,WAAY,GACZqB,cAAe,IAAKd,MASfiB,GAAiB,CAC1BC,aAAc,iBACdC,YAAa,eACbpW,eAAgB,kBAChBC,4BAA6B,kCAEpBoW,GAAiB,CAC1BxY,CAACqY,GAAelW,gBAAiB,CAC7BsW,WAAW,EACXC,aAAa,GAEjB1Y,CAACqY,GAAejW,6BAA8B,CAC1CqW,WAAW,EACXC,aAAa,IAGRC,GAA0B,CACnCC,cAAe,gBACfC,sBAAuB,wBACvBC,KAAM,OACNC,KAAM,OACNC,UAAW,YACXC,UAAW,YACXC,aAAc,gBAGLC,GAAuB,CAChCpM,QAAS,WACTD,OAAQ,WAGCsM,GAA0B,CACnCpZ,CAACqY,GAAelW,gBAAiB,GACjCnC,CAACqY,GAAejW,6BAA8B,GAC9CpC,CAACqY,GAAeC,cAAe,IAEnCvnB,OAAOib,KAAKmM,IAAiBlM,IAAIra,IACzBumB,GAAgBvmB,GAAKkmB,cACrBsB,GAAwBf,GAAelW,gBAAgBkX,UAAYD,GAAwBf,GAAelW,gBAAgBkX,WAAa,GACvID,GAAwBf,GAAelW,gBAAgBkX,UAAUznB,GAAO,CACpEkmB,YAAa,IAAKK,GAAgBvmB,GAAKkmB,cAG3CsB,GAAwBf,GAAejW,6BAA6BiX,UAAYD,GAAwBf,GAAejW,6BAA6BiX,WAAa,GACjKD,GAAwBf,GAAejW,6BAA6BiX,UAAUznB,GAAO,CACjFkmB,YAAa,IAAKK,GAAgBvmB,GAAKkmB,cAG3CsB,GAAwBf,GAAeC,cAAce,UAAYD,GAAwBf,GAAeC,cAAce,WAAa,GACnID,GAAwBf,GAAeC,cAAce,UAAUznB,GAAO,CAClEkmB,YAAa,IAAKK,GAAgBvmB,GAAKkmB,iBAyB5C,SAASwB,GAAaC,EAAgBC,GAKzC,GAHY,IAAIC,OAAO,8BAAsD,KACrDC,KAAKH,GAGzB,IAAK,IAAIhoB,KAAKioB,EAAM,CAChB,IAAIG,EAAW,IAAIF,OAAO,OAASloB,EAAI,OAAQ,KAC3CsV,EAAM2S,EAAKjoB,GACfgoB,EAAiBA,EAAeK,QAAQD,EAAU9S,QAAoC,GAAKA,GAInG,OAAO0S,EC9xBJ,SAASM,KACZ,MAAO,CACH1I,GAAI2I,KACJC,QAAS,CACLC,MAAO,EACPC,MAAO,EACPC,MAAO,GAEXC,UAAW,GACXxC,MAAOyC,GACPC,KAAM,GACNC,UAAW,GAEXC,OAAQ,GACRC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GAGbC,eAAgB,GAEhBC,QAAS,GACTC,MAAO,GACPC,UAAW,GACXC,gBAAiB,GACjBC,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRC,WAAY,GACZC,cAAe,GACfC,QAAS,KACTC,aAAc,GACdC,UAAW,CACPC,QAAW,CACPC,eAAiB,EACjBC,SAAY,CACRC,QAAW,QACXC,OAAU,cACVC,UAAa,gBAGrBC,YAAe,CACXC,yBAA0B,2FAC1BC,oBAAqB,yBACrBC,UAAa,OACbC,YAAe,GACfC,iBAAoB,GACpBC,WAAc,aACdC,iBAAoB,iBACpBC,uBAAwB,OACxBC,cAAe,6BACfC,iBAAiB,EACjBC,uBAA0B,UAC1BC,mBAAsB,eACtBC,WAAc,QACdC,eAAkB,OAClBC,oBAAuB,gBACvBC,wBAA2B,UAC3BC,YAAe,yDACfC,OAAU,0BACVC,yBAA4B,MAC5BC,WAAc,WAKvB,MAAMC,GAAY,CACrBC,UAAW,YACXC,kBAAmB,qBAQhB,SAASC,GAAeC,GAE3B,OADAA,EAAM1D,QAAQG,QACPuD,EA2CJ,SAASC,GAAeD,EAAOE,GAClC,IAAIC,MAAEA,GAAUD,EAOhB,OANIC,GAASA,EAAMlO,QAEfkO,EAAM3R,IAAI,CAAC7Z,EAAG/B,KACVotB,EAAQA,EAAMrC,OAAOhpB,KAGtBqrB,EAqBJ,SAASI,GAASJ,EAAOK,GAC5B,IAAIC,EAAQC,KACRC,EAASC,GAAST,EAAOM,GAI7B,OAHID,GACAA,EAASC,GAENE,EAEJ,SAASE,GAAQV,EAAOW,GAC3B,IAAIC,KAAEA,EAAFlN,GAAQA,GAAOiN,EACnB,IAAIE,EAASb,EAAMjD,SAASrJ,GAAImN,QAAU,GAoB1C,OAnBAA,EAAS,IAAIA,EAAQD,GAAME,OAAOvY,GAAKA,GAGvCyX,EAAMhD,YAAYtJ,GAAMsM,EAAMhD,YAAYtJ,IAAO,GACjDsM,EAAMhD,YAAYtJ,GAAIkN,IAAQ,EAC9BZ,EAAMhD,YAAc,IACbgD,EAAMhD,aAIbgD,EAAM/C,YAAY2D,GAAQZ,EAAM/C,YAAY2D,IAAS,GACrDZ,EAAM/C,YAAY2D,GAAMlN,IAAM,EAC9BsM,EAAM/C,YAAc,IACb+C,EAAM/C,aAKb+C,EAAMjD,SAASrJ,GAAImN,OAASA,EACrBb,EAyCJ,SAASe,GAAgBf,EAAOW,GACnC,IAAIK,QAAEA,EAAFtN,GAAWA,GAAOiN,EAClBL,EAAQN,EAAMjD,SAASrJ,GACvBoJ,EAASwD,EAAMxD,QAAU,GAc7B,OAZAwD,EAAMxD,OAAS,IAAIA,EAAQkE,GAASF,OAAOvY,GAAKA,GAChDyX,EAAMjD,SAASrJ,GAAM4M,EACrBN,EAAMjD,SAAW,IAAKiD,EAAMjD,UAG5BiD,EAAM9C,YAAYxJ,GAAMsM,EAAM9C,YAAYxJ,IAAO,GACjDsM,EAAM9C,YAAYxJ,GAAIsN,IAAW,EAEjChB,EAAM7C,YAAY6D,GAAWhB,EAAM7C,YAAY6D,IAAY,GAC3DhB,EAAM7C,YAAY6D,GAAStN,IAAM,EAG1BsM,EAEJ,SAASiB,GAAqBjB,EAAOW,GACxC,IAAIK,QAAEA,EAAFtN,GAAWA,GAAOiN,EAClBL,EAAQN,EAAMjD,SAASrJ,GAoB3B,OAlBA4M,EAAMxD,OAAS,IAAIwD,EAAMxD,OAAOrU,OAAOF,GAAKA,IAAMyY,IAClDhB,EAAMjD,SAASrJ,GAAM,IAAK4M,GACtBN,EAAM9C,cACF8C,EAAM9C,YAAYxJ,YACXsM,EAAM9C,YAAYxJ,GAAIsN,GACxB1tB,OAAOib,KAAKyR,EAAM9C,YAAYxJ,IAAKzB,eAC7B+N,EAAM9C,YAAYxJ,IAI7BsM,EAAM7C,YAAY6D,YACXhB,EAAM7C,YAAY6D,GAAStN,GAC7BpgB,OAAOib,KAAKyR,EAAM7C,YAAY6D,IAAU/O,eAClC+N,EAAM9C,YAAY8D,KAK9BhB,EAEJ,SAASkB,GAAWlB,EAAOW,GAC9B,IAAIjN,GAAEA,GAAOiN,EACb,IAAK,IAAI/tB,KAAKotB,EAAMhD,YAAYtJ,GACxBsM,EAAM/C,YAAYrqB,YACXotB,EAAM/C,YAAYrqB,GAAG8gB,GACqB,IAA7CpgB,OAAOib,KAAKyR,EAAM/C,YAAYrqB,IAAIqf,eAC3B+N,EAAM/C,YAAYrqB,IAIrC,IAAK,IAAIA,KAAKotB,EAAM9C,YAAYxJ,GACxBsM,EAAM7C,YAAYvqB,YACXotB,EAAM7C,YAAYvqB,GAAG8gB,GACqB,IAA7CpgB,OAAOib,KAAKyR,EAAM7C,YAAYvqB,IAAIqf,eAC3B+N,EAAM7C,YAAYvqB,IASrC,OALAotB,EAAMlD,OAAS,IAAIkD,EAAMlD,OAAOrU,OAAOF,GAAKA,IAAMmL,WAC3CsM,EAAMjD,SAASrJ,UACfsM,EAAM9C,YAAYxJ,UAClBsM,EAAMhD,YAAYtJ,GAElBsM,EAEJ,SAASmB,KACZ,MAAO,CACHC,WAAY,IAGb,MAAMC,GAAiBF,GAQvB,SAASG,GAAeC,EAAWrB,GAKtC,OAJAqB,EAAUH,WAAWlB,EAAQxM,IAAM6N,EAAUH,WAAWlB,EAAQxM,KANzD,CACH8N,WAAY,IAMZtB,EAAQqB,YACRA,EAAUH,WAAWlB,EAAQxM,IAAI8N,WAAWtB,EAAQqB,WAAarB,EAAQuB,eAEtEF,EAQJ,SAASG,GAAgBH,EAAWrB,GAEvC,cADOqB,EAAUH,WAAWlB,EAAQxM,IAC7B6N,EAGJ,SAASI,GAAiBC,EAAM1B,GACnC,IAAI3rB,SAAEA,EAAFgtB,UAAYA,GAAcrB,EAC9B,OAAO0B,EAAKR,WAAW7sB,GAAUitB,WAAWD,GAGzC,SAASM,GAAuBN,GACnC,OAAOA,EAAYA,EAAUH,WAAa,KA6BvC,SAASU,GAAW9B,EAAOE,EAAU,IACxC,IAAIxM,GAAEA,GAAOwM,EACT6B,EAAaC,GAAmBhC,EAAO,CAAEhT,OAAO,EAAM0G,KAAIuO,UAAWC,GAAQlW,KAAMxC,GAASkC,QAyBhG,OAlBAsU,EAiFG,SAA8BA,EAAOE,GACxC,IAAIxM,GAAEA,GAAOwM,EACTiC,EAAuB,GAEvBnC,EAAM/C,YAAYvJ,KAClByO,EAAuB7uB,OAAOib,KAAKyR,EAAM/C,YAAYvJ,KAChClF,IAAI8R,IACrBN,EA9QL,SAAoBA,EAAOW,GAC9B,IAAIC,KAAEA,EAAFlN,GAAQA,GAAOiN,EACnB,IAAIL,EAAQN,EAAMjD,SAASrJ,GAC3B,GAAI4M,EAAO,CACP,IAAIO,EAASP,EAAMO,QAAU,GAC7BA,EAAS,IAAIA,EAAOpY,OAAO3U,GAAKA,IAAM8sB,IACtCZ,EAAMjD,SAASrJ,GAAImN,OAASA,EA6BhC,OA3BIb,EAAMhD,YAAYtJ,KACdsM,EAAMhD,YAAYtJ,GAAIkN,WACfZ,EAAMhD,YAAYtJ,GAAIkN,GAEiB,IAA9CttB,OAAOib,KAAKyR,EAAMhD,YAAYtJ,IAAKzB,gBAC5B+N,EAAMhD,YAAYtJ,GACzBsM,EAAMlD,OAAS,IAAIkD,EAAMlD,OAAOrU,OAAOF,GAAKA,IAAMmL,WAC3CsM,EAAMjD,SAASrJ,IAE1BsM,EAAMhD,YAAc,IACbgD,EAAMhD,cAIbgD,EAAM/C,YAAY2D,KACdZ,EAAM/C,YAAY2D,GAAMlN,WACjBsM,EAAM/C,YAAY2D,GAAMlN,GAEiB,IAAhDpgB,OAAOib,KAAKyR,EAAM/C,YAAY2D,IAAO3O,eAC9B+N,EAAM/C,YAAY2D,GAE7BZ,EAAM/C,YAAc,IACb+C,EAAM/C,cAKV+C,EA2OSoC,CAAWpC,EAAO,CAAEY,KAAMlN,EAAIA,GAAI4M,MAK9CN,EAAMhD,aACNmF,EAAqB3T,IAAI8R,IACjBN,EAAMhD,YAAYsD,KACdN,EAAMhD,YAAYsD,GAAO5M,WAClBsM,EAAMhD,YAAYsD,GAAO5M,GAGiB,IAAjDpgB,OAAOib,KAAKyR,EAAMhD,YAAYsD,IAAQrO,eAC/B+N,EAAMhD,YAAYsD,IAGjCN,EAlEZ,SAASqC,EAAerC,EAAOE,GAC3B,IAAIxM,GAAEA,EAAF2M,SAAMA,GAAaH,EACvB,IAAIoC,GAAU,EACd,GAAItC,EAAM9C,YAAYxJ,GAClB,IAAK,IAAI9gB,KAAKotB,EAAM9C,YAAYxJ,GAAK,QAEjCsM,EAAQqC,EAAerC,EAAO,CAC1BtM,GAAI9gB,EACJytB,SAAWkC,IACFA,EACLD,EAAUA,GAAWC,MAGhBrF,YAAYxJ,GAAI9gB,GAGrC,GAAI0vB,GAEA,KAAKtC,EAAMjD,SAASrJ,KAAQsM,EAAMjD,SAASrJ,GAAImN,SAAWb,EAAMjD,SAASrJ,GAAImN,OAAO5O,WAC3E+N,EAAMjD,SAASrJ,KAAQsM,EAAMjD,SAASrJ,GAAIoJ,SAAWkD,EAAMjD,SAASrJ,GAAIoJ,OAAO7K,iBAEzE+N,EAAMjD,SAASrJ,GACtBsM,EAAMlD,OAAS,IAAIkD,EAAMlD,OAAOrU,OAAOF,GAAKA,IAAMmL,WAC3CsM,EAAM9C,YAAYxJ,GACrBsM,EAAM7C,YAAYzJ,IAAK,CACvB,IAAK,IAAI9gB,KAAKotB,EAAM7C,YAAYzJ,GAC5BsM,EAAQiB,GAAqBjB,EAAO,CAAEgB,QAAStN,EAAIA,GAAI9gB,KACvDotB,EAAQqC,EAAerC,EAAO,CAAEtM,GAAI9gB,KAC1BsqB,YAAYtqB,WACXotB,EAAM9C,YAAYtqB,GAAG8gB,UAE7BsM,EAAM7C,YAAYzJ,SAMjC2M,GACAA,GAAS,GAGjB,OAAOL,EAyBSqC,CAAerC,EAAO,CAAEtM,GAAI4M,MAK5C,OAAON,EA7GCwC,CAHRxC,EAkHG,SAAoBA,EAAOE,GAC9B,IAAIxM,GAAEA,GAAOwM,EACTuC,EAmgCD,SAA6BzC,EAAOtM,GACvC,OAAOsM,EAAMtC,MAAMjV,OAAOF,GAAKyX,EAAMvC,QAAQlV,GAAGma,SAAWhP,GAAMsM,EAAMvC,QAAQlV,GAAGoa,SAAWjP,GApgCzEkP,CAAoB5C,EAAOtM,GAC/C,IAAK,IAAI9gB,EAAI,EAAGA,EAAI6vB,EAAcxQ,OAAQrf,IAAK,CAC3C,IAAIiwB,EAAOJ,EAAc7vB,GACzBotB,EAAQ8C,GAAW9C,EAAO6C,GAE9B,OAAO7C,EAzHC+C,CAFR/C,EAAQD,GAAeC,GAEGE,GAGUA,IAE1BrC,eAAiBmC,EAAMnC,cAAcnK,YACpCsM,EAAMnC,cAAcnK,GAC3BsM,EAAMnC,cAAgB,IAAKmC,EAAMnC,gBAEjCmC,EAAMpC,YAAcoC,EAAMpC,WAAWlK,YAC9BsM,EAAMpC,WAAWlK,GACxBsM,EAAMpC,WAAa,IAAKoC,EAAMpC,oBAE3BoC,EAAM3C,QAAQ3J,GACrBsM,EAAM3C,QAAU,IAAK2C,EAAM3C,SAC3B2C,EAAM1C,MAAQ,IAAI0C,EAAM1C,MAAM7U,OAAOF,GAAKA,IAAMmL,IAC5CqO,GACAA,EAAWvT,IAAIwU,IACXhD,EAAQ8B,GAAW9B,EAAO,CAAEtM,GAAIsP,EAAGtP,OAGpCsM,EAGJ,SAASiD,GAAmBC,EAAOC,GACtC,OAAID,GAASC,GAAOA,EAAIlR,OAEbmR,GAAYF,EAAO5iB,GAAUE,OAAOiI,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAexF,kBAAkBwJ,OAAOF,KACjG4a,GAAO,IAAIG,KAAKxvB,IAC8D,KAA3EuvB,GAAY9a,EAAG9D,GAAekD,uBAAyB,IAAIgB,QAAQ7U,KAIhF,GA4FJ,SAASyvB,GAAQvD,EAAOwD,GAM3B,OALAxD,EAAM3C,QAAQmG,EAAK9P,IAAM8P,EACzBxD,EAAM3C,QAAU,IAAK2C,EAAM3C,SAC3B2C,EAAM1C,MAAQ,IAAI0C,EAAM1C,MAAOkG,EAAK9P,IAEpCsM,EAAQD,GADRC,EAAQ,IAAKA,IAIV,SAASS,GAAST,EAAOM,GAK5B,OAJAN,EAAMjD,SAASuD,EAAM5M,IAAM4M,EAC3BN,EAAMjD,SAAW,IAAKiD,EAAMjD,UAC5BiD,EAAMlD,OAAS,IAAIkD,EAAMlD,OAAQwD,EAAM5M,IAAIoN,OAAOvY,GAAKA,GACvDyX,EAAQ,IAAKA,GAYV,SAASyD,GAAiBzD,EAAOE,EAASvO,EAAU0O,GACvD,IAAIqD,OAAEA,EAAFC,eAAUA,EAAVC,gBAA0BA,GAAoB1D,EAC9CsD,EAAOK,GAAWlS,GAwBtB,GAvBIuO,EAAQsD,QARhB,SAAoBA,EAAMtD,GAClBA,EAAQsD,MACRlwB,OAAOwwB,MAAMN,EAAKpC,WAAY2C,KAAKC,MAAMD,KAAKE,UAAU/D,EAAQsD,KAAKpC,cAOrE8C,CAAWV,EAAMtD,GACbvO,IAAarR,GAAU8B,eACnB8d,EAAQiE,WACRjE,EAAQiE,SAAS/G,eAAe4C,EAAMtM,IAAM,IACpCwM,EAAQiE,SAAS/G,eAAe4C,EAAMtM,KAAO,GAE7CnR,CAACihB,EAAK9P,IAAKwM,EAAQsD,KAAK9P,MAM5CsM,EAAQuD,GAAQvD,EAAOwD,GACnBE,IACA1D,EAAQoE,GAAQpE,EAAO,CAAE0C,OAAQgB,EAAQf,OAAQa,EAAK9P,GAAI0N,WAAYuC,EAAiBA,EAAevC,WAAa,QAEnHlB,EAAQxC,OACRwC,EAAQxC,MAAMlP,IAAIqU,IACd7C,EAAQoE,GAAQpE,EAAO,CAAE0C,OAAQc,EAAK9P,GAAIiP,OAAQE,EAAKF,OAAQvB,WAAYyB,EAAKc,eAAiBd,EAAKc,eAAevC,WAAa,SAG1IpB,EAAQqE,GAAmBrE,EAAO,CAAEtM,GAAI8P,EAAK9P,GAAI4Q,KAAM7f,GAAe8C,SAAU1T,MAAO8d,IACnFuO,EAAQkB,WACR,IAAK,IAAI1sB,KAAKwrB,EAAQkB,WAClBpB,EAAQqE,GAAmBrE,EAAO,CAAEtM,GAAI8P,EAAK9P,GAAI4Q,KAAM5vB,EAAGb,MAAOqsB,EAAQkB,WAAW1sB,KAU5F,OAPIkvB,IACA5D,EAQD,SAAyBA,EAAOE,GACnC,IAAIxM,GAAEA,EAAFkQ,gBAAMA,EAANF,OAAuBA,GAAWxD,EAClCI,EAAQ,KACZ,GAuDJ,SAAkBN,EAAO0D,GACrB,SAAU1D,EAAM3C,QAAQqG,KAAWL,GAAYrD,EAAM3C,QAAQqG,GAASjf,GAAeuD,SAxDhFuc,CAASvE,EAAO0D,GA2BhB,CACD,IAAIc,EAAgBnB,GAAYrD,EAAM3C,QAAQqG,GAASjf,GAAeuD,QACtEsY,EAuBR,SAAkBN,EAAOtM,GACrB,OAAOsM,EAAMjD,SAASrJ,GAxBV+Q,CAASzE,EAAOwE,EAAclE,WA7BZ,CAC1B,IAAIA,EAAQC,KAQRmE,EAAcrB,IADlBrD,EAAQU,GALRV,EAAQqE,GADRrE,EAAQS,GAAST,EAAOM,GACU,CAC9B5M,GAAIgQ,EACJ7vB,MAAO,CAAEysB,MAAOA,EAAM5M,IACtB4Q,KAAM7f,GAAeuD,SAEF,CAAE4Y,KAAM8C,EAAQhQ,GAAI4M,EAAM5M,MACb2J,QAAQqG,GAASjf,GAAewD,aACpE,GAAIyc,GAAe1E,EAAMjD,SAAS2H,GAAc,CAC5C,IAAIC,EAAe3E,EAAMjD,SAAS2H,GAClC,GAAIC,EAAc,CACd,IAAIC,EA8BpB,SAASC,EAAmB7E,EAAOtM,GAC/B,IAAI8M,EAAS,GACb,GAAIR,EAAM7C,YAAYzJ,GAClB,IAAK,IAAI9gB,KAAKotB,EAAM7C,YAAYzJ,GAC5B8M,EAAS,IAAIA,KAAWqE,EAAmB7E,EAAOptB,IAG1D,OAAO4tB,EArCsBqE,CAAmB7E,EAAO2E,EAAajR,IACxDsM,EAAQe,GAAgBf,EAAO,CAC3BtM,GAAIiR,EAAajR,GACjBsN,QAASV,EAAM5M,KAEnBkR,EAAWpW,IAAIsW,IACX9E,EAAQe,GAAgBf,EAAO,CAC3BtM,GAAIoR,EACJ9D,QAASV,EAAM5M,SAW/B4M,IAEAN,EAAQqE,GADRrE,EAAQU,GAAQV,EAAO,CAAEY,KAAMlN,EAAIA,GAAI4M,EAAM5M,KACX,CAC9BA,KACA7f,MAAOysB,EAAM5M,GACb4Q,KAAM7f,GAAewD,eAI7B,OAAO+X,EApDK+E,CAAgB/E,EAAO,CAAEtM,GAAI8P,EAAK9P,GAAIkQ,kBAAiBF,YAE/DrD,GACAA,EAASmD,GAGNxD,EA+DJ,SAASgF,GAAQhF,EAAOtM,GAC3B,OAAIsM,GAASA,EAAM3C,QACR2C,EAAM3C,QAAQ3J,GAElB,KAQJ,SAASuR,GAAiBjF,GAC7B,IAAInC,EAAgBmC,EAAMnC,cAC1B,GAAIA,EACA,IAAK,IAAIjrB,KAAKirB,EAAe,CACzB,IAAI2F,EAAOwB,GAAQhF,EAAOptB,GAC1B,GAAI4wB,EAAM,CACN,IAAI0B,EAAe7B,GAAYG,EAAM/e,GAAe0D,cACpD,GAAI+c,EAAc,CACd,IAAIC,EAA2BnnB,GAAUknB,GACrCC,IACAnF,EAAQoF,GAAiBpF,EAAO,CAAEtM,GAAI9gB,EAAGyyB,oBAAqBF,OAUlF,OAJsB/B,GAAYpD,EAAO1f,GAAUe,WACnCmN,IAAIjG,IAChByX,EAKR,SAAkCA,EAAOwD,GAErC,IAAIjC,EAAY8B,GAAYG,EAAM/e,GAAepD,WACjD,GAAIkgB,EAAW,CACM+D,GAAiBtF,EAAO,CAAEtM,GAAI8P,EAAK9P,KAApD,IACI6R,EAAsB1D,GAAuBN,GACjDjuB,OAAOib,KAAKgX,GAAqB/W,IAAIja,IAC7ByrB,EAAMzC,UAAUhpB,IAAayrB,EAAMzC,UAAUhpB,GAAUivB,EAAK9P,MAQxE,OAAOsM,EApBKwF,CAAyBxF,EAAOzX,KAErCyX,EAqBX,SAASoD,GAAYpD,EAAOrO,EAAUuO,EAAU,IAE5C,IAAIuF,EAAezF,EACnB,OAAIyF,GACKC,MAAMC,QAAQhU,KACfA,EAAW,CAACA,IAET8T,EAAanI,MACf7U,OAAOF,GAAKkd,EAAapI,QAAQ9U,GAAG6Y,aACmD,IAAnFzP,EAAShJ,QAAQ8c,EAAapI,QAAQ9U,GAAG6Y,WAAW3c,GAAe8C,aAClE2Y,EAAQ0F,aAAeH,EAAapI,QAAQ9U,GAAG6Y,WAAW3c,GAAe+C,iBAAmBmK,GACjGnD,IAAIjG,GAAKkd,EAAapI,QAAQ9U,KAEhC,GA8IJ,SAASsd,GAAkBC,EAAKC,GACnC,SAAUA,IAAYD,IAGnB,SAASE,GAA2BhG,EAAOE,GAC9C,IAAIxM,GAAEA,EAAFuS,cAAMA,GAAkB/F,EAK5B,OAiNJ,SAA6BF,EAAOE,GAChC,IAAIxM,GAAEA,EAAFvf,IAAMA,GAAQ+rB,EAElB,GAAIF,EAAMxC,gBAAgB9J,GACtB,OAAOpgB,OAAOib,KAAKyR,EAAMxC,gBAAgB9J,IAAKlF,IAAIqU,IAC9C,IAAIqD,EAAQlG,EAAMvC,QAAQoF,GAC1B,OAAOqD,IACRzd,OAAOyd,GACCA,GAASA,EAAMxD,SAAWhP,GAAMwS,EAAM9E,YAAc8E,EAAM9E,WAAW/G,aAAe6L,EAAM9E,WAAW/G,YAAYlmB,MAAQA,GAIxI,MAVa,GArNDgyB,CAAoBnG,EAAO,CAAEtM,KAAIvf,IAAK8xB,IAErCzX,IAAIqU,GACN7C,EAAM3C,QAAQwF,EAAKF,SAK3B,SAASyC,GAAiBpF,EAAOE,GACpC,IAAIxM,GAAEA,EAAF2R,oBAAMA,GAAwBnF,EAClC,GAAIF,EAAMxC,gBAAgB9J,GAAK,CAC3B,IAAI8P,EAAOxD,EAAM3C,QAAQ3J,GACzBpgB,OAAOib,KAAKyR,EAAMxC,gBAAgB9J,IAAKlF,IAAIqU,IAEvC,IAAIzB,WAAEA,GAAepB,EAAMvC,QAAQoF,GAC/BqD,EAAQlG,EAAMvC,QAAQoF,GAC1B,GAAIzB,EAAY,CACZ,IAAI/G,YAAEA,GAAgB+G,EAClB/G,GACA/mB,OAAOib,KAAKsH,IAAsBrH,IAAI4X,IAClC,IAAIC,EAAsBxQ,GAAqBuQ,GAC3CE,EAAgBjB,EAAoBhL,YAAYgM,GACpD,GAAIC,GAAiBJ,GAASA,EAAM9E,YAAc8E,EAAM9E,WAAW/G,aAAe6L,EAAM9E,WAAW/G,YAAYlmB,KACvG+xB,EAAM9E,WAAW/G,YAAYlmB,MAAQmyB,EAAcnyB,IAAK,CACxD,IAAIoyB,EAAQC,GAAwBC,MAAMH,EAAejM,EAAa6L,EAAO1C,EAAMxD,GACnFA,EAAQ0G,GAAmB1G,EAAO,CAC9BtM,GAAIwS,EAAMxS,GACV4Q,KAAMnY,GAAiBG,kBACvBzY,QAAS0yB,UASzC,OAAOvG,EAGJ,SAAS2G,GAAyB3G,EAAOE,GAC5C,IAAIxM,GAAEA,EAAF7f,MAAMA,GAAUqsB,EAEhBmF,EAAsBrnB,GAAUnK,GACpC,GAAIwxB,GACIA,EAAoBhL,YAAa,CAE7B2F,EAAMxC,gBAAgB9J,IACtBkT,GAA+B5G,EAAO,CAAEtM,OAAMlF,IAAIqU,IAE9C,IAgLpB,SAAgCgE,EAAgBxB,GAC5C,QAASyB,GAAwBD,EAAgBxB,GAjL5B0B,CADkBC,GAAgBnE,EAAM1W,GAAiBE,aAChBgZ,EAAoBhL,aAAc,CAC5E,IAAI4M,EAkZrB,SAAuBjH,EAAOkH,GACjC,GAAIlH,GAASA,EAAMvC,SAAWuC,EAAMvC,QAAQyJ,GAAS,CACjD,IAAIvE,EAAS3C,EAAMvC,QAAQyJ,GAAQvE,OACnC,OAAO3C,EAAM3C,QAAQsF,GAEzB,OAAO,KAvZgCwE,CAAcnH,EAAO6C,EAAKnP,IAEzCuT,EACAjH,EAAQ8B,GAAW9B,EAAO,CAAEtM,GAAIuT,EAAavT,KAG7C0T,QAAQC,KAAK,yCAK7B,IAAIC,EAAa,KACbC,EAAiB,KACjBC,EAAiB,KACjBhE,EAAOxD,EAAM3C,QAAQ3J,GAEzB,IAAI+T,EAAiBpE,GAAYG,EAAM/e,GAAeuD,QAEtD,GAAIyf,EACA,IAAK,IAAI70B,KAAK60B,EACVzH,EAAQkB,GAAWlB,EAAO,CAAEtM,GAAI+T,EAAe70B,KAIvD,GAAIotB,EAAM/C,YAAYvJ,GAClB,IAAK,IAAI9gB,KAAKotB,EAAM/C,YAAYvJ,GAC5B,OAAQgU,GAAiB1H,EAAMjD,SAASnqB,GAAIqR,GAAgBE,gBACxD,KAAKN,GAAeG,KAChBsjB,EAAatH,EAAMjD,SAASnqB,GAKvC00B,IACDtH,EAAQI,GAASJ,EAAQ2H,IACrBL,EAAaK,EACb3H,EAAQ4H,GAAoB5H,EAAO,CAC/BtM,GAAIiU,EAAOjU,GACX4Q,KAAMrgB,GAAgBE,cACtBtQ,MAAOgQ,GAAeG,UAK7BujB,IACDvH,EAAQI,GAASJ,EAAQ2H,IACrBJ,EAAiBI,EACjB3H,EAAQ4H,GAAoB5H,EAAO,CAC/BtM,GAAIiU,EAAOjU,GACX4Q,KAAMrgB,GAAgBE,cACtBtQ,MAAOgQ,GAAeE,cAK7ByjB,IACDxH,EAAQI,GAASJ,EAAQ2H,IACrBH,EAAiBG,EACjB3H,EAAQ4H,GAAoB5H,EAAO,CAC/BtM,GAAIiU,EAAOjU,GACX4Q,KAAMrgB,GAAgBE,cACtBtQ,MAAOgQ,GAAeC,cAK7Bkc,EAAMhD,YAAYwK,EAAe9T,KAAQsM,EAAMhD,YAAYwK,EAAe9T,IAAIA,KAC/EsM,EAAQU,GAAQV,EAAO,CAAEY,KAAMlN,EAAIA,GAAI8T,EAAe9T,MAGrDsM,EAAM9C,YAAYqK,EAAe7T,KAAQsM,EAAM9C,YAAYqK,EAAe7T,IAAI8T,EAAe9T,MAC9FsM,EAAQe,GAAgBf,EAAO,CAAEgB,QAASuG,EAAe7T,GAAIA,GAAI8T,EAAe9T,MAG/EsM,EAAM9C,YAAYoK,EAAW5T,KAAQsM,EAAM9C,YAAYoK,EAAW5T,IAAI6T,EAAe7T,MACtFsM,EAAQe,GAAgBf,EAAO,CAAEgB,QAASsG,EAAW5T,GAAIA,GAAI6T,EAAe7T,MAIhF,IACImU,EADoBjB,GAA+B5G,EAAO,CAAEtM,OACzBlF,IAAIqU,IAEvC,OAAOiE,GADgBE,GAAgBnE,EAAM1W,GAAiBE,aACbgZ,EAAoBhL,eAGzE/mB,OAAOib,KAAK8W,EAAoBhL,aAAa7L,IAAIsZ,KAED,IAAxCD,EAAelf,QAAQmf,KACvB9H,EAAQyD,GAAiBzD,EAAO,CAC5B0D,OAAQF,EAAK9P,GACbiQ,eAAgB,CACZvC,WAAY,CACRpV,KAAMxC,GAASyB,uBACfoP,YAAa,IACNgL,EAAoBhL,YAAYyN,OAIhDxnB,GAAUyB,UAAYgmB,IACrB/H,EAAQqE,GAAmBrE,EAAO,CAAEtM,GAAIqU,EAASrU,GAAI4Q,KAAM7f,GAAewB,OAAQpS,MAAOi0B,SAM/ElB,GAA+B5G,EAAO,CAAEtM,GAAI8P,EAAK9P,KAEvDlF,IAAKqU,IACjB,IAAIkF,EAAW/H,EAAM3C,QAAQwF,EAAKF,QAClC,IAAImF,EAAad,GAAgBnE,EAAM1W,GAAiBE,aAGpD2T,EAFA8H,GAAcA,EAAW3zB,KAAOkxB,EAAoBhL,YAAYyN,EAAW3zB,MAC3EkxB,EAAoBhL,YAAYyN,EAAW3zB,KAAKsiB,GAAuBU,iBAC/DuJ,GAAQV,EAAO,CAAEY,KAAMmH,EAASrU,GAAIA,GAAI6T,EAAe7T,KAGvDgN,GAAQV,EAAO,CAAEY,KAAMmH,EAASrU,GAAIA,GAAI4T,EAAW5T,OAI/DsM,EAAMxC,gBAAgB9J,IACtBpgB,OAAOib,KAAKyR,EAAMxC,gBAAgB9J,IAAKlF,IAAIqU,IAEvC,IAAIzB,WAAEA,GAAepB,EAAMvC,QAAQoF,GAC/BqD,EAAQlG,EAAMvC,QAAQoF,GAC1B,GAAIzB,EAAY,CACZ,IAAI/G,YAAEA,GAAgB+G,EAClB/G,GACA/mB,OAAOib,KAAKsH,IAAsBrH,IAAI4X,IAClC,IAAIC,EAAsBxQ,GAAqBuQ,GAC3CE,EAAgBjB,EAAoBhL,YAAYgM,GACpD,GAAIC,GAAiBJ,GAASA,EAAM9E,YAAc8E,EAAM9E,WAAW/G,aAAe6L,EAAM9E,WAAW/G,YAAYlmB,KACvG+xB,EAAM9E,WAAW/G,YAAYlmB,MAAQmyB,EAAcnyB,IAAK,CACxD,IAAIoyB,EAAQC,GAAwBC,MAAMH,EAAejM,EAAa6L,EAAO1C,EAAMxD,GACnFA,EAAQ0G,GAAmB1G,EAAO,CAC9BtM,GAAIwS,EAAMxS,GACV4Q,KAAMnY,GAAiBG,kBACvBzY,QAAS0yB,UASzCvG,EAAQqE,GAAmBrE,EAAO,CAC9BtM,KACA4Q,KAAM7f,GAAeuD,OACrBnU,MAAO,CACHm0B,KAAMV,EAAW5T,GACjBuU,SAAUV,EAAe7T,GACzBwU,SAAUV,EAAe9T,MAMzC,OAAOsM,EAqBX,SAAS8G,GAAwBD,EAAgBxB,GAC7C,IAAI8C,EAAMpE,KAAKE,UAAU4C,GACzB,OAAOvzB,OAAOib,KAAK8W,GAAqB+C,KAAKC,GAAKtE,KAAKE,UAAUoB,EAAoBgD,MAAQF,GAGjG,SAASvB,GAA+B5G,EAAOE,GAC3C,IAAIxM,GAAEA,GAAOwM,EACb,OAAIF,GAASA,EAAMxC,iBAAmBwC,EAAMxC,gBAAgB9J,GACjDpgB,OAAOib,KAAKyR,EAAMxC,gBAAgB9J,IAAKjL,OAAOoa,GAC1CmE,GAAgBhH,EAAMvC,QAAQoF,GAAO1W,GAAiBC,QAAU5C,GAASyB,wBACjFuD,IAAIqU,GAAQ7C,EAAMvC,QAAQoF,IAG1B,GAGJ,MAAM2D,GAA0B,CACnCC,MAAO,CAACH,EAAejM,EAAawI,EAAMW,EAAMxD,KAC5C,GAAIsG,EAAe,CACf,IAAIgC,EAActI,EAAM3C,QAAQwF,EAAKF,QAErC,OADgB2C,GAAiBtF,EAAO,CAAEtM,GAAI4U,EAAY5U,KACzC0U,KAAKG,GACXj1B,OAAOib,KAAK+X,GAAe8B,KAAKN,IACnC,IAAItH,GAAS,EACb,IAAe,IAAXA,EAAJ,CAGA,OAAQsH,GAKJ,KAAKrR,GAAuBjd,QACpB+uB,GACKlF,GAAYkF,EAAY9jB,GAAejL,WAK5CgnB,GAAS,GAEb,MACJ,KAAK/J,GAAuBhd,OACpB8uB,GACKlF,GAAYkF,EAAY9jB,GAAehL,UAK5C+mB,GAAS,GAEb,MACJ,KAAK/J,GAAuBC,SAExB,IAAK4P,EAAc7P,GAAuBU,iBACtC,GAAIoR,EAAY,CACZ,IAAIC,EAAiBnF,GAAYkF,EAAY9jB,GAAe8C,UACxDkhB,EAAmBnC,EAAcwB,GAEjCY,EAAsBC,GAAuBnF,EAAK9P,GAAIsM,EAAOyI,GACjE,GAAIC,EAAoBzW,OAAQ,CAOP,IANTyW,EAAoBjgB,OAAOmgB,IAInC,OAD0BvF,GADJrD,EAAM3C,QAAQuL,EAAmBjG,QACAle,GAAe8C,YACtCihB,IAE1BvW,SACNuO,GAAS,QAIbA,GAAS,OAIbA,GAAS,EAGjB,MACJ,KAAK/J,GAAuBE,QAiC5B,KAAKF,GAAuB1X,SACxB,GAAIwpB,EAAY,CAEZ,IAAIE,EAAmBnC,EAAcwB,GAEjCY,EAAsBC,GAAuBnF,EAAK9P,GAAIsM,EAAOyI,GACjE,GAAIC,EAAqB,CAeA,IAdTA,EAAoBjgB,OAAOmgB,IACnC,IAAIC,EAAkB7I,EAAM3C,QAAQuL,EAAmBjG,QACnDmG,EAAwBC,GAAgB/I,EAAO,CAAEtM,GAAImV,EAAgBnV,KACzE,IAAIoV,IAAyBA,EAAsB7W,OAM/C,OAAO,EANgD,CACvD,IAAI+W,EAAmBC,GAASjJ,EAAO,CAAE2C,OAAQ4F,EAAW7U,GAAIgP,OAAQoG,EAAsB,GAAGpV,KACjG,IAAKsV,GAAoBhC,GAAgBgC,EAAkB7c,GAAiBC,QAAUI,GAAexB,WAAWgB,KAC5G,OAAO,EAKf,OAAO,IAGDiG,SACNuO,GAAS,QAIbA,GAAS,OAIbA,GAAS,EAqCrB,OAAOA,MAKnB,OAAO,IAGf,SAASmI,GAAuBO,EAAQlJ,EAAOyI,GAC3C,OAAOn1B,OAAOib,KAAKyR,EAAMxC,gBAAgB0L,IAASzgB,OAAO3U,GAAKksB,EAAMxC,gBAAgB0L,GAAQp1B,KAAOq1B,IAAQ1gB,OAAOoa,MAC1GA,GAAQ7C,EAAMvC,SAAWuC,EAAMvC,QAAQoF,IAAS7C,EAAMvC,QAAQoF,GAAMzB,YAAcpB,EAAMvC,QAAQoF,GAAMzB,WAAW/G,aAC9G2F,EAAMvC,QAAQoF,GAAMzB,WAAW/G,YAAYlmB,MAAQs0B,IAC/CzI,EAAMvC,QAAQoF,IAG1BrU,IAAIqU,GAAQ7C,EAAMvC,QAAQoF,IAE1B,SAASuG,GAAapJ,EAAOtM,EAAIuO,GACpC,OAAIjC,GAASA,EAAMxC,gBACRlqB,OAAOib,KAAKyR,EAAMxC,gBAAgB9J,IAAKjL,OAAOF,IAC7C0Z,GACOjC,EAAMxC,gBAAgB9J,GAAInL,KAAO0Z,GAG7CzT,IAAIqU,GAAQ7C,EAAMvC,QAAQoF,IAE1B,GAEX,SAASoG,GAASjJ,EAAOE,GACrB,IAAIyC,OAAEA,EAAFD,OAAUA,GAAWxC,EACrBmJ,EAAMrJ,EAAMtC,MAAM0K,KAAKvF,GAChB7C,EAAMvC,SAAWuC,EAAMvC,QAAQoF,IAAS7C,EAAMvC,QAAQoF,GAAMF,SAAWA,GAAU3C,EAAMvC,QAAQoF,GAAMH,SAAWA,GAE3H,OAAI2G,EACOrJ,EAAMvC,QAAQ4L,GAElB,KAEJ,SAASjF,GAAQpE,EAAOE,GAC3B,IAAIyC,OAAEA,EAAFD,OAAUA,EAAVtB,WAAkBA,GAAelB,EAErC,OAAOoJ,GAAQtJ,EAAOE,EADXqJ,GAAW5G,EAAQD,EAAQtB,IAenC,SAASkE,GAAiBtF,EAAOE,GACpC,OAAO6I,GAAgB/I,EAAOE,GAE3B,SAAS6I,GAAgB/I,EAAOE,GACnC,OAAOsJ,GAAcxJ,EAAO,IAAME,GAAW,GAAK+B,UAAWkH,KAmB1D,SAASM,GAAYC,EAAMC,GAC9B,GAAIr2B,OAAOib,KAAKmb,GAAMzX,SAAW3e,OAAOib,KAAKob,GAAM1X,OAC/C,OAAO,EAEX,IAAK,IAAIrf,KAAK82B,EACV,GAAIA,EAAK92B,KAAO+2B,EAAK/2B,GACjB,OAAO,EAIf,OAAO,EAQJ,SAASg3B,GAAiB1G,EAAOhD,GACpC,IAAI2J,EAASC,GAAa5G,EAAOhD,GAEjC,OAAI2J,GAAUA,EAAO5X,OACV4X,EAAO,GAEX,KAEJ,SAASC,GAAa5G,EAAOhD,GAChC,IAAIF,EAAQ+J,GAAgB7G,GAC5B,IAAIxP,GAAEA,EAAFgK,MAAMA,GAAUwC,EAChBiD,EAAM,CAACzP,GACP8M,EAAS,GAkBb,OAjBA9C,EAAMlP,IAAI,CAACwb,EAAIC,KACX,IAAIC,EAAS,GACb/G,EAAI3U,IAAI5b,IACJ,IAAIu3B,EAAWnI,GAAmBhC,EAAO,CACrCtM,GAAI9gB,KACDo3B,IAEHC,IAAOvM,EAAMzL,OAAS,EACtBuO,EAAS2J,EAGTD,EAAS,IAAIA,KAAWC,EAAS3b,IAAI1a,GAAKA,EAAE4f,OAGpDwW,EAASA,EAAOpJ,OAAOvY,GAAKA,GAC5B4a,EAAM+G,IAEH1J,EAEJ,SAASwB,GAAmBhC,EAAOE,GACtC,GAAIA,EAAS,CACT,IAAIxM,GAAEA,EAAFuO,UAAMA,EAANjW,KAAiBA,EAAjBgB,MAAuBA,GAAUkT,EACrC,GAAIF,GAASA,EAAMxC,iBAAmB9J,EAAI,CACtC,IAAI6J,EAAYyC,EAAMxC,gBAAgB9J,GACtC,GAAI6J,EACA,OAAOjqB,OAAOib,KAAKgP,GACd9U,OAAOF,GAAKgV,EAAUhV,IACtBiG,IAAI4b,IACD,IAAIzH,EAAS3C,EAAMvC,QAAQ2M,GAAQnI,IAAcC,GAASlC,EAAMvC,QAAQ2M,GAAK1H,OAAS1C,EAAMvC,QAAQ2M,GAAKzH,OAAU,KAEnH,OAAKA,EAID3V,GAASgT,EAAMvC,QAAQ2M,GAAKhJ,YAAcpB,EAAMvC,QAAQ2M,GAAKhJ,WAAWpU,MACjEgT,EAAM3C,QAAQsF,IAEpB3W,GAAQgU,EAAMvC,QAAQ2M,GAAKhJ,aAC3BpB,EAAMvC,QAAQ2M,GAAKhJ,WAAWpV,OAASA,GACpCgU,EAAMvC,QAAQ2M,GAAKhJ,WAAWpV,IAC3BgU,EAAM3C,QAAQsF,GAElB,MAXHyE,QAAQC,KAAK,4BACN,QAWZ5e,OAAOF,GAAKA,IAK/B,MAAO,GAEJ,SAASihB,GAAcxJ,EAAOE,GACjC,GAAIA,EAAS,CACT,IAAIxM,GAAEA,EAAFuO,UAAMA,EAAN5H,YAAiBA,GAAgB6F,EACrC,GAAIF,GAASA,EAAMxC,iBAAmB9J,EAAI,CACtC,IAAI6J,EAAYyC,EAAMxC,gBAAgB9J,GACtC,GAAI6J,EACA,OAAOjqB,OAAOib,KAAKgP,GAAW9U,OAAOF,GAAKgV,EAAUhV,KAAO0Z,GAAWzT,IAAI4b,IACtE,IAAIzH,EAAS3C,EAAMvC,QAAQ2M,GAAQnI,IAAcC,GAASlC,EAAMvC,QAAQ2M,GAAK1H,OAAS1C,EAAMvC,QAAQ2M,GAAKzH,OAAU,KACnH,IAAKA,EAED,OADAyE,QAAQC,KAAK,4BACN,KAEX,GAAIhN,EAAa,CACb,IACIgQ,EAAmBrD,GADZhH,EAAMvC,QAAQ2M,GACoBje,GAAiBE,aAC9D,OAjHjB,SAAqBqd,EAAMC,GAC9B,GAAID,IAASC,EACT,OAAO,EAEX,IAAKD,EACD,OAAO,EAEX,IAAKC,EACD,OAAO,EAEX,IAAK,IAAI/2B,KAAK82B,EACV,GAAIA,EAAK92B,KAAO+2B,EAAK/2B,GACjB,OAAO,EAGf,OAAO,EAkGiB03B,CAAYjQ,EAAagQ,GAClBrK,EAAM3C,QAAQsF,GAGd,KAGf,OAAO3C,EAAM3C,QAAQsF,KACtBla,OAAOF,GAAKA,IAI3B,MAAO,GAEJ,MAAM4gB,GAAS,SACTjH,GAAS,SACf,SAASoH,GAAQtJ,EAAOE,EAAS2C,GACpC,IAAIF,OAAEA,EAAFD,OAAUA,GAAWxC,EACzB,GAAIyC,GAAUD,GAAUC,IAAWD,GAC3B1C,EAAM3C,QAAQsF,IAAW3C,EAAM3C,QAAQqF,GAAS,CAChD,GAgXZ,SAAoB1C,EAAOW,GACvB,OAAQX,EAAMtC,MAAM4F,KAAK/a,IACrB,IAAIgiB,EAAOvK,EAAMvC,QAAQlV,GACzB,OAAOgiB,EAAK7H,SAAW/B,EAAI+B,QAAU6H,EAAK5H,SAAWhC,EAAIgC,SAnXjD6H,CAAWxK,EAAO,CAAE2C,SAAQD,WAC5B1C,EAAMvC,QAAQoF,EAAKnP,IAAMmP,EACzB7C,EAAMvC,QAAU,IAAKuC,EAAMvC,SAC3BuC,EAAMtC,MAAQ,IAAIsC,EAAMtC,MAAOmF,EAAKnP,IAGpCsM,EAAMxC,gBAAgBqF,EAAKH,QAAU,IAC7B1C,EAAMxC,gBAAgBqF,EAAKH,SAAW,GAEtCngB,CAACsgB,EAAKnP,IAAKyV,IAKnBnJ,EAAMxC,gBAAgBqF,EAAKF,QAAU,IAC7B3C,EAAMxC,gBAAgBqF,EAAKF,SAAW,GAEtCpgB,CAACsgB,EAAKnP,IAAKwO,IAKnBlC,EAAMzC,UAAUsF,EAAKH,QAAU,IACvB1C,EAAMzC,UAAUsF,EAAKH,SAAW,GAEhCngB,CAACsgB,EAAKF,QAAS3C,EAAMzC,UAAUsF,EAAKH,SAAW1C,EAAMzC,UAAUsF,EAAKH,QAAQG,EAAKF,SAAW,GAAK,EAAI,GAI7G3C,EAAMzC,UAAUsF,EAAKF,QAAU,IACxB3C,EAAMzC,UAAUsF,EAAKF,QAEpBpgB,CAACsgB,EAAKH,QAAS1C,EAAMzC,UAAUsF,EAAKF,SAAW3C,EAAMzC,UAAUsF,EAAKF,QAAQE,EAAKH,SAAW,GAAK,EAAI,OAI5G,CACD,IAAI+H,EAAUxB,GAASjJ,EAAO,CAAE2C,SAAQD,WACpC+H,IAGAA,EAAQrJ,WAAa,IACdqJ,EAAQrJ,cACRyB,EAAKzB,WACFpV,KAAMye,EAAQrJ,WAAWpV,OAI3CgU,EAAMzC,UAAY,IAAKyC,EAAMzC,WAC7ByC,EAAQ,IAAKA,GAGrB,OAAOA,EAUJ,SAAS0K,GAAiB1K,EAAOE,GACpC,IAAIyC,OAAEA,EAAFD,OAAUA,GAAWxC,EAEzB,OADWF,EAAMtC,MAAM0K,KAAK7f,GAAKyX,EAAMvC,QAAQlV,GAAGma,SAAWA,GAAU1C,EAAMvC,QAAQlV,GAAGoa,QAAUA,GAqB/F,SAASgI,GAAc3K,EAAO6C,EAAM+H,GACvC,OAAQA,GACJ,KAAKrhB,GAAW9T,OACZuqB,EAYL,SAA6BA,EAAO6C,GACnCA,GAAQA,EAAKzB,YAAcyB,EAAKzB,WAAWyJ,IAAMhI,EAAKzB,WAAWyJ,GAAGthB,GAAW9T,SAC/EotB,EAAKzB,WAAWyJ,GAAGthB,GAAW9T,QAAQ+Y,IAAIsc,IAClCA,EAAKC,UAAYC,GAAeF,EAAKC,YACrC/K,EAAQgL,GAAeF,EAAKC,UAAU/K,EAAO6C,EAAMiI,EAAKC,SAAUD,MAI9E,OAAO9K,EApBSiL,CAAoBjL,EAAO6C,GAG3C,OAAO7C,EAEJ,MAAMgL,GAAiB,GACvB,SAASE,GAAiB/2B,EAAKg3B,GAClCH,GAAe72B,GAAOg3B,EAenB,SAASC,GAAwB5H,GACpC,IAAI6H,EAAQhI,GAAYG,EAAM/e,GAAe0C,uBAC7C,GAAIkkB,GAASA,EAAMC,OACf,OAAOD,EAAMC,OAAOC,cAGrB,SAASC,GAAyBhI,GACrC,GAAI4H,GAAwB5H,GAAO,CAE/B,OADYH,GAAYG,EAAM/e,GAAe0C,uBAChCmkB,OAAOG,KAExB,OAAO,KAEJ,SAASC,GAAsBlI,GAClC,GAAI4H,GAAwB5H,GAAO,CAE/B,OADYH,GAAYG,EAAM/e,GAAe0C,uBAChCmkB,OAAOK,SAExB,OAAO,KA4DJ,SAASC,GAAoBC,EAAY3L,GAC5C,IAAI3rB,SAAEA,EAAFgtB,UAAYA,GAAcrB,SACvB2L,EAAWzK,WAAW7sB,GAAUitB,WAAWD,GAE/C,SAASuK,GAAgB9f,EAAMkU,EAAU,IAC5C,IAAImJ,EAAM,CAAEwB,GAAI,IAChB,OAAQ7e,GACJ,KAAKzC,GAAW9T,OACZ4zB,EAAIwB,GAAG7e,GAAQ,CAAC,IACTkU,IAKf,OAAOmJ,EAEJ,SAASvG,GAAW9C,EAAO6C,EAAM3C,EAAU,IAC9C,GAAI2C,GAAQ3C,EAAQ6L,SAAU,CAC1B,IAAIC,EAAchM,EAAMvC,QAAQoF,GAMhC,GALImJ,GAAeA,EAAY5K,YAAc4K,EAAY5K,WAAWlB,EAAQ6L,kBACjEC,EAAY5K,WAAWlB,EAAQ6L,UAItCC,GAAe14B,OAAOib,KAAKyd,EAAY5K,YAAYnP,OAAS,EAC5D,MAAO,IAAK+N,GAGpB,GAAI6C,EAAM,CACN7C,EAAMtC,MAAQ,IAAIsC,EAAMtC,MAAMjV,OAAOF,GAAKA,IAAMsa,IAChD,IAAIoJ,EAAWjM,EAAMvC,QAAQoF,GACzBoJ,EAAS7K,YACL6K,EAAS7K,WAAWyJ,IAAMoB,EAAS7K,WAAWyJ,GAAGthB,GAAW9T,UAC5DuqB,EAAQ2K,GAAc3K,EAAOiM,EAAU1iB,GAAW9T,gBAGnDuqB,EAAMvC,QAAQoF,GACrB7C,EAAMvC,QAAU,IAAKuC,EAAMvC,SAC3BuC,EAAMzC,UAAU0O,EAASvJ,QAAU,IAC5B1C,EAAMzC,UAAU0O,EAASvJ,QAExBngB,CAAC0pB,EAAStJ,QAAS3C,EAAMzC,UAAU0O,EAASvJ,SAAW1C,EAAMzC,UAAU0O,EAASvJ,QAAQuJ,EAAStJ,SAAW,GAAK,EAAI,GAGzH3C,EAAMzC,UAAU0O,EAASvJ,UAAY1C,EAAMzC,UAAU0O,EAASvJ,QAAQuJ,EAAStJ,iBACxE3C,EAAMzC,UAAU0O,EAASvJ,QAAQuJ,EAAStJ,QACY,IAAzDrvB,OAAOib,KAAKyR,EAAMzC,UAAU0O,EAASvJ,SAASzQ,eACvC+N,EAAMzC,UAAU0O,EAASvJ,SAGxC1C,EAAMzC,UAAU0O,EAAStJ,QAAU,IAC5B3C,EAAMzC,UAAU0O,EAAStJ,QAExBpgB,CAAC0pB,EAASvJ,QAAS1C,EAAMzC,UAAU0O,EAAStJ,SAAW3C,EAAMzC,UAAU0O,EAAStJ,QAAQsJ,EAASvJ,SAAW,GAAK,EAAI,GAGzH1C,EAAMzC,UAAU0O,EAAStJ,UAAY3C,EAAMzC,UAAU0O,EAAStJ,QAAQsJ,EAASvJ,iBACxE1C,EAAMzC,UAAU0O,EAAStJ,QAAQsJ,EAASvJ,QACY,IAAzDpvB,OAAOib,KAAKyR,EAAMzC,UAAU0O,EAAStJ,SAAS1Q,eACvC+N,EAAMzC,UAAU0O,EAAStJ,SAKpC3C,EAAMxC,gBAAgByO,EAASvJ,SAAW1C,EAAMxC,gBAAgByO,EAASvJ,QAAQuJ,EAASvY,YACnFsM,EAAMxC,gBAAgByO,EAASvJ,QAAQuJ,EAASvY,IAEQ,IAA/DpgB,OAAOib,KAAKyR,EAAMxC,gBAAgByO,EAASvJ,SAASzQ,eAC7C+N,EAAMxC,gBAAgByO,EAASvJ,QAItC1C,EAAMxC,gBAAgByO,EAAStJ,SAAW3C,EAAMxC,gBAAgByO,EAAStJ,QAAQsJ,EAASvY,YACnFsM,EAAMxC,gBAAgByO,EAAStJ,QAAQsJ,EAASvY,IAEQ,IAA/DpgB,OAAOib,KAAKyR,EAAMxC,gBAAgByO,EAAStJ,SAAS1Q,eAC7C+N,EAAMxC,gBAAgByO,EAAStJ,QAI9C,MAAO,IAAK3C,GAsBT,SAASqE,GAAmBrE,EAAOE,GACtC,IAAIxM,GAAEA,EAAF7f,MAAMA,EAANywB,KAAaA,GAASpE,EACtBgM,EAAmB,GACvB,GAAIxY,GAAM4Q,GAAQtE,EAAM3C,SAAW2C,EAAM3C,QAAQ3J,GAAK,CAClD,GAAI5K,GAAyBwb,GAAO,CACpBxb,GAAyBwb,GAC/B9V,IAAI+b,IACDvK,EAAM3C,QAAQ3J,GAAIyY,MAAM5B,EAAKxhB,aAC9BmjB,EAAiB3B,EAAKxhB,WAAawhB,EAAKvhB,UAAUnV,MAI9DmsB,EAAM3C,QAAQ3J,GAAM,IACbsM,EAAM3C,QAAQ3J,GACbyY,MAAO,CACH5pB,CAAC+hB,IAAO,KACJtE,EAAM3C,QAAQ3J,GAAIyY,OAAS,IAEnC/K,WAAY,IACJpB,EAAM3C,QAAQ3J,GAAI0N,YAAc,GACpC7e,CAAC+hB,GAAOzwB,KACLq4B,IAIX5H,IAAS7f,GAAe8C,UAAY1T,IAAUyM,GAAUsB,SACxDoe,EAAMnC,cAAgB,IAAKmC,EAAMnC,cAAoBtb,CAACmR,IAAK,GAGvDsM,EAAMnC,cAAcnK,IAAO4Q,IAAS7f,GAAe8C,kBAC5CyY,EAAMnC,cAAcnK,GAC3BsM,EAAMnC,cAAgB,IAAKmC,EAAMnC,gBAIrCyG,IAAS7f,GAAe8C,UAAY1T,IAAUyM,GAAU+B,UACxD2d,EAAMpC,WAAa,IAAKoC,EAAMpC,WAAiBrb,CAACmR,IAAK,GAGjDsM,EAAMpC,WAAWlK,IAAO4Q,IAAS7f,GAAe8C,kBACzCyY,EAAMpC,WAAWlK,GACxBsM,EAAMpC,WAAa,IAAKoC,EAAMpC,aAI1C,OAAOoC,EAGJ,SAAS0G,GAAmB1G,EAAOE,GACtC,IAAIxM,GAAEA,EAAF7f,MAAMA,EAANywB,KAAaA,GAASpE,EAW1B,OAVIxM,GAAM4Q,GAAQtE,EAAMvC,SAAWuC,EAAMvC,QAAQ/J,KAC7CsM,EAAMvC,QAAQ/J,GAAM,IACbsM,EAAMvC,QAAQ/J,GACb0N,WAAY,IACJpB,EAAMvC,QAAQ/J,GAAI0N,YAAc,GACpC7e,CAAC+hB,GAAOzwB,KAKjBmsB,EAGJ,SAAS4H,GAAoB5H,EAAOE,GACvC,IAAIxM,GAAEA,EAAF7f,MAAMA,EAANywB,KAAaA,GAASpE,EAW1B,OAVIxM,GAAM4Q,GAAQtE,EAAMjD,UAAYiD,EAAMjD,SAASrJ,KAC/CsM,EAAMjD,SAASrJ,GAAM,IACdsM,EAAMjD,SAASrJ,GACd0N,WAAY,IACJpB,EAAMjD,SAASrJ,GAAI0N,YAAc,GACrC7e,CAAC+hB,GAAOzwB,KAKjBmsB,EASX,SAASO,KACL,MAAO,CACH7M,GAAI2I,KACJwE,OAAQ,GACR/D,OAAQ,GACRsE,WAAY,IAGpB,SAASyC,GAAWlS,GAChB,MAAO,CACH+B,GAAI2I,KACJ8P,MAAO,GAGP/K,WAAY,CACRgL,KAAMza,GAAYgL,KAI9B,SAAS4M,GAAW5G,EAAQD,EAAQtB,GAEhC,OADAA,EAAaA,GAAc,GACpB,CACH1N,GAAI2I,KACJqG,SACAC,SACAvB,cAGR,SAASiL,GAASxJ,GACd,MAAO,IACCkB,KAAKC,MAAMD,KAAKE,UAAUpB,KAgB/B,SAASxG,KACZ,MAAO,uCAAuCF,QAAQ,QAAS,SAAUlpB,GACrE,IAAIS,EAAoB,GAAhB4e,KAAKE,SAAgB,EAC7B,OADyC,KAALvf,EAAWS,EAAS,EAAJA,EAAU,GACrD44B,SAAS,MAG1B,SAASC,GAAoBvM,EAAOlsB,EAAG04B,EAAa,IAChD,IAAInD,EAAM,IAAI/1B,OAAOib,KAAKyR,EAAMhD,YAAYlpB,KAC5C,IAAK,IAAIlB,KAAKotB,EAAM9C,YAAYppB,GACvB04B,EAAW55B,KACZ45B,EAAa,IACNA,EACHjqB,CAAC3P,IAAI,GAETy2B,EAAM,IAAIA,KAAQkD,GAAoBvM,EAAOptB,EAAG45B,KAIxD,OAAOnD,EApTX6B,GAAiB,mCAAoC,CAAClL,EAAO6C,EAAMsI,KAC/D,IAAIzI,OAAEA,EAAFC,OAAUA,GAAWE,EACrBW,EAAOwB,GAAQhF,EAAO0C,GAG1B,OAFIc,GAAQA,EAAKpC,YACbM,GAAgB2B,GAAYG,EAAM/e,GAAepD,WAAY,CAAEqS,GAAIiP,IAChE3C,IAEXkL,GAAiB,iCAAkC,CAAClL,EAAO6C,EAAMsI,KAC7D,IAAIzI,OAAEA,EAAFC,OAAUA,GAAWE,EACrBW,EAAOwB,GAAQhF,EAAO0C,GAG1B,OAFIc,GAAQA,EAAKpC,YACbM,GAAgB2B,GAAYG,EAAM/e,GAAenD,UAAW,CAAEoS,GAAIiP,IAC/D3C,IAGXkL,GAAiB,oCAAqC,CAAClL,EAAO6C,EAAMsI,KAChE,IAAIzI,OAAEA,EAAFC,OAAUA,GAAWE,EACrBW,EAAOwB,GAAQhF,EAAO0C,GAG1B,OAFIc,GAAQA,EAAKpC,YACbM,GAAgB2B,GAAYG,EAAM/e,GAAevD,iBAAkB,CAAEwS,GAAIiP,IACtE3C,IAGXkL,GAAiB,uCAAwC,CAAClL,EAAO6C,EAAMsI,EAAML,KACzE,IAAIpI,OAAEA,EAAFC,OAAUA,GAAWE,EACrBW,EAAOwB,GAAQhF,EAAO0C,IACtBnuB,SAAEA,EAAFgtB,UAAYA,GAAeuJ,GAAQ,GAEvC,IAAIe,EAAaxI,GAAYG,EAAM/e,GAAepD,WASlD,OARImiB,GAAQA,EAAKpC,YACbyK,EAAWzK,YACXyK,EAAWzK,WAAW7sB,IACtBs3B,EAAWzK,WAAW7sB,GAAUitB,YAChCqK,EAAWzK,WAAW7sB,GAAUitB,WAAWD,IAC3CsK,EAAWzK,WAAW7sB,GAAUitB,WAAWD,GAAWiC,OAASb,GAC/DiJ,GAAoBC,EAAY,IAAKf,EAAMpX,GAAIiP,IAE5C3C,IAGXkL,GAAiB,qCAAsC,CAAClL,EAAO6C,EAAMsI,EAAML,KACvE,IAAIpI,OAAEA,EAAFC,OAAUA,GAAWE,EACrBW,EAAOwB,GAAQhF,EAAO0C,IACtBnuB,SAAEA,EAAFgtB,UAAYA,GAAeuJ,GAAQ,GAEvC,IAAIe,EAAaxI,GAAYG,EAAM/e,GAAenD,UASlD,OARIkiB,GAAQA,EAAKpC,YACbyK,EAAWzK,YACXyK,EAAWzK,WAAW7sB,IACtBs3B,EAAWzK,WAAW7sB,GAAUitB,YAChCqK,EAAWzK,WAAW7sB,GAAUitB,WAAWD,IAC3CsK,EAAWzK,WAAW7sB,GAAUitB,WAAWD,GAAWiC,OAASb,GAC/DiJ,GAAoBC,EAAY,IAAKf,EAAMpX,GAAIiP,IAE5C3C,IAgQJ,MAAMyM,GAAuB,CAChClqB,CAACjC,GAAUE,OAAQ,EACnB+B,CAACjC,GAAUsB,UAAW,EACtBW,CAACjC,GAAUuB,QAAS,EACpBU,CAACjC,GAAU7C,UAAW,EACtB8E,CAACjC,GAAUa,gBAAiB,EAC5BoB,CAACjC,GAAUiB,YAAa,EACxBgB,CAACjC,GAAUyB,WAAY,EACvBQ,CAACjC,GAAUU,YAAa,EACxBuB,CAACjC,GAAUQ,WAAY,EACvByB,CAACjC,GAAUa,gBAAiB,GAC5BoB,CAACjC,GAAUc,oBAAqB,GAChCmB,CAACjC,GAAUY,iBAAkB,IAqBjC,SAASwrB,GAAS1L,EAAShB,GACvB,IAAIqJ,EAAM,EACV,GAAIrJ,EAAMjD,SAASiE,GAAU,CACzB,GAAIhB,EAAM7C,YAAY6D,GAAU,CAC5B,IAAI0C,EAASpwB,OAAOib,KAAKyR,EAAM7C,YAAY6D,IAAU,GACjD0C,IACA2F,GAAYqD,GAAShJ,EAAQ1D,IAGrCqJ,GAAY,EAEhB,OAAOA,EAyFJ,SAASsD,GAAc3M,GAC1B,IAAI4M,EAASxQ,KACbwQ,EAAOlZ,GAAKsM,EAAMtM,GAGlB,IAAImZ,GADJ7M,EA3FG,SAAqBA,GACxB,IAAI8M,EAAgB1Q,KAoFpB,OAnFA0Q,EAAcpZ,GAAKsM,EAAMtM,GACzBoZ,EAAcrP,QAAU,IAAKuC,EAAMvC,SACnCqP,EAAc7P,YAAc,IAAK+C,EAAM/C,aACvC6P,EAAc9P,YAAc,IAAKgD,EAAMhD,aACvC8P,EAAchQ,OAAS,IAAIkD,EAAMlD,QACjCgQ,EAAc/P,SAAW,IAAKiD,EAAMjD,UACpC+P,EAAc5P,YAAc,IAAK8C,EAAM9C,aACvC4P,EAAc3P,YAAc,IAAK6C,EAAM7C,aACvC2P,EAAcpP,MAAQ,IAAIsC,EAAMtC,MAAMjV,OAAOye,IACzC,IAAIvE,OAAEA,EAAFD,OAAUA,GAAW1C,EAAMvC,QAAQyJ,GACvC,SAAIlH,EAAMjC,aAAa4E,KAAW3C,EAAMjC,aAAa2E,aAG1CoK,EAAcrP,QAAQyJ,IAE1B,MAEX5zB,OAAOib,KAAKyR,EAAM/C,aAAazO,IAAI0a,IAC/B,IAAKlJ,EAAMjC,aAAamL,GAAS,CAC7B,IAAIqB,EAAOvK,EAAM/C,YAAYiM,GAC7B,IAAK,IAAIt2B,KAAK23B,EACVuC,EAAc9P,YAAYpqB,GAAK,IAAKk6B,EAAc9P,YAAYpqB,WACvDk6B,EAAc9P,YAAYpqB,GAAGs2B,GACqB,IAArD51B,OAAOib,KAAKue,EAAc9P,YAAYpqB,IAAIqf,eACnC6a,EAAc9P,YAAYpqB,UAGlCk6B,EAAc7P,YAAYiM,MAGzC51B,OAAOib,KAAKue,EAAc/P,UAAUgQ,KAAK,CAAC5Z,EAAG6Z,IAClCN,GAASM,EAAGhN,GAAS0M,GAASvZ,EAAG6M,IACzCxR,IAAI8R,IACCwM,EAAc/P,SAASuD,GAAOO,SAC9BiM,EAAc/P,SAASuD,GAAS,IAAKwM,EAAc/P,SAASuD,IAC5DwM,EAAc/P,SAASuD,GAAOO,OAAS,IAAIiM,EAAc/P,SAASuD,GAAOO,OAAOpY,OAAOF,GAAKyX,EAAMjC,aAAaxV,KAC/GukB,EAAc/P,SAASuD,GAAOxD,OAAS,IAAIgQ,EAAc/P,SAASuD,GAAOxD,OAAOrU,OAAOF,GAAKukB,EAAc/P,SAASxU,KAC9GukB,EAAc/P,SAASuD,GAAOO,OAAO5O,QAAW6a,EAAc/P,SAASuD,GAAOxD,OAAO7K,SACtF6a,EAAchQ,OAAS,IAAIgQ,EAAchQ,OAAOrU,OAAOF,GAAKA,IAAM+X,WAC3DwM,EAAc/P,SAASuD,OAI1ChtB,OAAOib,KAAKyR,EAAM9C,aAAa1O,IAAI8R,IAC/B,GAAKwM,EAAc9P,YAAYsD,GAI3B,IAAK,IAAIxsB,KAAKg5B,EAAc5P,YAAYoD,GAC/BwM,EAAc9P,YAAYlpB,KAC3Bg5B,EAAc5P,YAAYoD,GAAS,IAAKwM,EAAc5P,YAAYoD,WAC3DwM,EAAc5P,YAAYoD,GAAOxsB,gBANzCg5B,EAAc5P,YAAYoD,KAWzChtB,OAAOib,KAAKyR,EAAM7C,aAAa3O,IAAI8R,IAC/B,GAAKwM,EAAc9P,YAAYsD,GAI3B,IAAK,IAAIxsB,KAAKg5B,EAAc3P,YAAYmD,GAC/BwM,EAAc9P,YAAYlpB,KAC3Bg5B,EAAc3P,YAAYmD,GAAS,IAAKwM,EAAc3P,YAAYmD,WAC3DwM,EAAc3P,YAAYmD,GAAOxsB,gBANzCg5B,EAAc3P,YAAYmD,KAWzChtB,OAAOib,KAAKyR,EAAMjC,cAAcvP,IAAI0a,IAChC4D,EAAczP,QAAQ6L,GAAUlJ,EAAM3C,QAAQ6L,GAC9C4D,EAAcxP,MAAM2P,KAAK/D,GACzB4D,EAActP,gBAAgB0L,GAAU,IAAKlJ,EAAMxC,gBAAgB0L,IACnE4D,EAAcvP,UAAU2L,GAAU,IAAKlJ,EAAMzC,UAAU2L,IAEvD51B,OAAOib,KAAKyR,EAAMzC,UAAU2L,IAAW,IAAI1a,IAAI1a,IACtCg5B,EAAcrP,QAAQ3pB,KACvBg5B,EAAcvP,UAAU2L,GAAU,IAAK4D,EAAcvP,UAAU2L,WACxD4D,EAAcvP,UAAU2L,GAAQp1B,QAK5Cg5B,EAMCI,CADRlN,EAzHG,SAAoBA,GAgBvB,OAfAA,EAAMjC,aAAe,GACrBiC,EAAM1C,MAAM9O,IAAI1a,IACRuvB,GAAY2B,GAAQhF,EAAOlsB,GAAI2Q,GAAehO,UAC9CupB,EAAMjC,aAAajqB,IAAK,KAG5BksB,EAAMmN,OACN,GAAG9a,YAAY,EAAG2N,EAAMmN,MAAO5kB,IAC3BjV,OAAOib,KAAKyR,EAAMjC,cAAcvP,IAAI1a,IAChC,IAAK,IAAIs5B,KAAKpN,EAAMzC,UAAUzpB,GAC1BksB,EAAMjC,aAAaqP,IAAK,MAKjCpN,EAyGCqN,CAAWrN,KAEQ1C,MAAM7U,OAAO+a,GAAQH,GAAYrD,EAAM3C,QAAQmG,GAAO/e,GAAe/N,YAC5F42B,EAAmB,GACvBT,EAAere,IAAI1a,IACf,GAAIksB,EAAM/C,YAAYnpB,GAAI,CACtB,IAAIy5B,EAAed,GAAqBpJ,GAAYrD,EAAM3C,QAAQvpB,GAAI2Q,GAAe8C,YAAc,IACnG,IAAIimB,EAAel6B,OAAOib,KAAKyR,EAAM/C,YAAYnpB,IAAI2U,OAAOglB,IAexD,OAbmBlB,GAAoBvM,EAAOyN,GACTrF,KAAK/zB,IACtC,GAAIA,IAAMP,EACN,OAAO,EAEX,IAAI45B,EAAQrK,GAAYrD,EAAM3C,QAAQhpB,GAAIoQ,GAAe8C,UAGzD,SAFmBklB,GAAqBiB,IAAU,KAE/BH,OASxBR,KAAK,CAAC5Z,EAAG6Z,IACD15B,OAAOib,KAAKyR,EAAMhD,YAAYgQ,IAAI/a,OAAS3e,OAAOib,KAAKyR,EAAMhD,YAAY7J,IAAIlB,QAEpFub,EAAavb,SACbqb,EAAiBE,EAAa,KAAM,MAIhD,IAAIG,EAA6Br6B,OAAOib,KAAK+e,GAAkB7kB,OAAOmlB,IAClE,IAAK,IAAIC,KAAM7N,EAAM7C,YAAYyQ,GAC7B,GAAIN,EAAiBO,GACjB,OAAO,EAGf,OAAO,IAEPC,EAAoB,GACxBH,EAA2Bnf,IAAI1a,IAC3B,IAAIi6B,EAAK,GACLC,EAAO,KACPC,EAAgB,IAChBC,EAAS3B,GAAoBvM,EAAOlsB,GAUxC,IAAK,IAAIlB,KATTs7B,EAAOzlB,OAAO3U,IACV,IAAIkY,EAAO0b,GAAiB1H,EAAM3C,QAAQvpB,GAAI2Q,GAAe8C,UAC7DwmB,EAAGj6B,IAAK,EACJ24B,GAAqBzgB,GAAQiiB,IAC7BD,EAAOl6B,EACPm6B,EAAgBxB,GAAqBzgB,aAGtC+hB,EAAGC,GACID,EACVA,EAAGn7B,GAAKo7B,EAEZF,EAAoB,IAAKA,KAAsBC,KAGnDnB,EAAOtP,MAAQ,IAAI0C,EAAM1C,MAAM7U,OAAOF,IAAMulB,EAAkBvlB,KAC9DqkB,EAAOvP,QAAU,GACjBuP,EAAOtP,MAAM9O,IAAI1a,IAAO84B,EAAOvP,QAAQvpB,GAAKksB,EAAM3C,QAAQvpB,KAC1D84B,EAAOlP,MAAQsC,EAAMtC,MAAMlP,IAAIjG,IAE3B,IACI4lB,GADAzL,OAAEA,EAAFC,OAAUA,GAAW3C,EAAMvC,QAAQlV,GAEvC,QAAIulB,EAAkBpL,KAAWoL,EAAkBnL,MAI1CmL,EAAkBpL,KACvByL,EAAU9B,GAASrM,EAAMvC,QAAQlV,KACzBma,OAASoL,EAAkBpL,GACnCyL,EAAQza,MAAQya,EAAQzL,SAASyL,EAAQxL,SACzCiK,EAAOnP,WAAW0Q,EAAQzL,SAASyL,EAAQxL,UAAYwL,GAElDL,EAAkBnL,KACvBwL,EAAU9B,GAASrM,EAAMvC,QAAQlV,KACzBoa,OAASmL,EAAkBnL,GACnCwL,EAAQza,MAAQya,EAAQzL,SAASyL,EAAQxL,SACzCiK,EAAOnP,WAAW0Q,EAAQzL,SAASyL,EAAQxL,UAAYwL,KAGvDA,EAAU9B,GAASrM,EAAMvC,QAAQlV,KACzBmL,MAAQya,EAAQzL,SAASyL,EAAQxL,SACzCiK,EAAOnP,WAAW0Q,EAAQzL,SAASyL,EAAQxL,UAAYwL,GAEvDA,EAAQzL,SAAWyL,EAAQxL,QAGxBwL,EAAQza,MAChBjL,OAAOF,GAAKA,GAEf,IAAI6lB,EAAUpO,EAAMlD,OAAOtO,IAAI,CAAC8R,EAAO+N,KACnC,IAAIC,EAAWtO,EAAMjD,SAASuD,GAC1BiO,EAAWhO,KASf,OARAgO,EAAS7a,MAAQ4a,EAAS5a,KACtB4a,GAAYA,EAASzN,QACrByN,EAASzN,OAAOrS,IAAIoS,IACZgM,EAAOvP,QAAQuD,IACf2N,EAAS1N,OAAOoM,KAAKrM,KAI7B2N,EAAS1N,OAAO5O,QAChB2a,EAAO7P,SAASwR,EAAS7a,IAAM6a,EAExBA,EAAS7a,IAEb,OACRjL,OAAOF,GAAKA,GAUf,OATA6lB,EAAQ5f,IAAK8R,IACTsM,EAAO7P,SAASuD,GAAOxD,QAAUkD,EAAMjD,SAASuD,GAAOxD,QAAU,IAAIrU,OAAO+lB,KACpE5B,EAAO7P,SAASyR,MAM5B5B,EAAO9P,OAASsR,EACTxB,ECxlEX,IAAI3T,GAAKwV,EAAQ,MACjB,MAAMC,YAAEA,IAAgBD,EAAQ,YAC1BE,GAASF,EAAQ,YAAYE,OACnC,IAAIC,GAASD,GAAOC,OAKb,MAAMC,GAAS,SACTC,GAAc,cACdC,GAAS,SACTC,GAAe,eACfC,GAAiB,iBACjBC,GAAmB,mBACnBC,GAAyB,yBACzB7uB,GAAY8uB,GACZxrB,GAAiBwrB,GACjB3qB,GAAiB2qB,GACjB5iB,GAAiB4iB,GACjBC,GHmxB6B,CAEtCC,cAAe,gBACfC,SAAU,WACVC,QAAS,UACTC,eAAgB,iBAChBte,MAAO,QACPue,MAAO,QACPC,SAAU,WACVC,QAAS,UACTC,IAAK,MACLC,WAAY,aACZC,WAAY,aACZC,OAAQ,SACRC,KAAM,OACNC,UAAW,YACXC,MAAO,QACPC,QAAS,UACTC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,KAAM,OACNC,KAAM,OACN1f,QAAS,UACT2f,cAAe,gBACfC,QAAS,UACTC,WAAY,aACZC,OAAQ,SACRC,MAAO,QACPC,UAAW,YACXtgB,OAAQ,SACRugB,YAAa,cACbC,KAAM,QGrzBGzgB,GAAoBye,GACpB1gB,GAAkB0gB,GAClBiC,GHuuBe,CACxBC,WAAY,aACZC,wBAAyB,2BGvuBhBC,GAAY,YAClB,SAASC,GAAKvO,EAAOwO,EAAS9P,GACjC,OAAIsB,GAASA,EAAMyO,WAAazO,EAAMyO,UAAUD,GACrCxO,EAAMyO,UAAUD,GAAS9P,GAE7B,KAEJ,SAASgQ,GAAO1O,EAAO/uB,GAC1B,OAAOs9B,GAAKvO,EAAO2L,GAAQ16B,GAExB,SAAS09B,GAAe3O,EAAOlX,GAClC,IAAI8lB,EAAcC,GAAK7O,EAAO0O,GAAO1O,EAAO8O,KAC5C,OAAOF,GAAeA,EAAY1Q,YAAc0Q,EAAY1Q,WAAWzP,WAAa3F,EAEjF,SAASimB,GAAIzO,EAAMc,GACtB,OAAOd,GAAQA,EAAKpC,YAAcoC,EAAKpC,WAAWkD,GAE/C,SAASjB,GAAYG,EAAMc,GAC9B,OAAOd,GAAQA,EAAKpC,YAAcoC,EAAKpC,WAAWkD,GAE/C,SAASsF,GAAiB1J,GAC7B,OAAOgS,GAA8BC,KAAYjS,GAE9C,SAASkS,GAAY5O,GAIxB,MAHsB,iBAAVA,IACRA,EAAO0O,GAAqBnI,GAAgBoI,MAAa3O,IAEtDH,GAAYG,EAAM/e,GAAe5L,UAErC,SAASw5B,GAAkBrS,EAAOwD,EAAMrvB,GAC3C,IAAIm+B,EAAcjP,GAAYG,EAAM/e,GAAe2C,aACnD,OAAIkrB,EACOJ,GAAqBlS,EAAOsS,EAAYn+B,IAAQ,MAEpD,KAEJ,SAAS6yB,GAAgBnE,EAAMyB,GAClC,OAAOzB,GAAQA,EAAKzB,YAAcyB,EAAKzB,WAAWkD,GAG/C,SAASoD,GAAiBpH,EAAOgE,GACpC,OAAOhE,GAASA,EAAMc,YAAcd,EAAMc,WAAWkD,GAGlD,SAASiO,GAASrP,EAAO/uB,EAAKN,GACjC,OAAO+9B,GAAO1O,EAAO/uB,KAASN,EAE3B,SAASk+B,GAAK7O,EAAOgG,GAExB,IAAIzD,EAAesE,GAAgB7G,GACnC,OAAIuC,GAAgBA,EAAapI,QACtBoI,EAAapI,QAAQ6L,GAEzB,KAEJ,SAASsJ,GAAYtP,EAAO/uB,GAC/B,OAAOs9B,GAAKvO,EAAO4L,GAAa36B,GAE7B,SAASs+B,GAAevP,GAC3B,IAAIuC,EAAesE,GAAgB7G,GACnC,OAAOuC,EAAegM,GAAKvO,EAAO8L,GAAcvJ,EAAa/R,IAAM,KAEhE,SAASgf,GAAgB7+B,EAAOM,EAAKw+B,GACxCA,EAASC,GAAI9D,GAAa36B,EAAKN,IAE5B,SAASg/B,GAAO3P,EAAO/uB,GAC1B,OAAOs9B,GAAKvO,EAAO6L,GAAQ56B,GAExB,SAAS2+B,GAAU9S,EAAO2S,GAO7B,IAAII,EAAcb,GANlBlS,EAAQ,IACDA,EAEClC,QAASkV,KAAKC,QAIlBF,GACAJ,EAASC,GAAI5D,GAAc+D,EAAYrf,GAAIqf,IAC/CJ,EAASC,GAAI7D,GAAQ/O,EAAMtM,GAAIsM,IAE5B,SAAS4S,GAAIlB,EAAS9P,EAAM/tB,GAC/B,MAAO,CACHmY,KAAMwlB,GACN5P,OACA/tB,QACA69B,WAGD,SAASwB,GAAa/+B,GACzB,MAAO,CAACw+B,EAAUQ,KACd,IAAIjQ,EAAQiQ,IACZR,EAASC,GAAI/D,GAAQ16B,GAAQs9B,GAAKvO,EAAO2L,GAAQ16B,MAKlD,SAASi/B,KACZ,MAAO,uCAAuCjX,QAAQ,QAAS,SAAUlpB,GACrE,IAAIS,EAAoB,GAAhB4e,KAAKE,SAAgB,EAC7B,OADyC,KAALvf,EAAWS,EAAS,EAAJA,EAAU,GACrD44B,SAAS,MAGnB,SAAS+G,GAAUl/B,EAAKN,GAC3B,MAAO,CAAC8+B,EAAUQ,KACFA,IACZR,EAASC,GAAI/D,GAAQ16B,EAAKN,KAI3B,SAASy/B,GAAen/B,EAAKN,GAChC,MAAO,CAAC8+B,EAAUQ,KACFA,IACZR,EAASC,GAAI9D,GAAa36B,EAAKN,KAIhC,MAAM0/B,GAAgB,gBAChBC,GAAe,eACfxB,GAAgB,gBACtB,SAASyB,GAAavK,GACzB,MAAO,CAACyJ,EAAUQ,KACdR,EAASC,GAAI/D,GAAQmD,GAAe9I,KAGrC,SAASwK,KACZ,OAAOR,GAAajE,IAEjB,SAAS0E,GAAanQ,GACzB,OAAKA,EACEA,EAAKpC,YAAaoC,EAAKpC,WAAWgL,MAAkB5I,EAAK9P,GAD5CiJ,GAGjB,SAASiX,GAAS1Q,GACrB,IAAIuC,EAAesE,GAAgB7G,GACnC,OAAIuC,EACO,IAAIA,EAAanI,MAAM9O,IAAI1a,GAAK2xB,EAAapI,QAAQvpB,KAEzD,GAEJ,SAAS+/B,GAAcrQ,GAE1B,OADeH,GAAYG,EAAM/e,GAAe8C,WAE5C,KAAKjH,GAAU8B,cACX,OAAO,EACX,QACI,OAAO,GAGZ,SAASghB,GAAYF,EAAOvR,EAAUuO,EAAU,IAEnD,IAAIuF,EAAevF,EAAQ4T,QAAUC,GAAa7Q,GAAS6G,GAAgB7G,GAC3E,OAAIuC,GACKC,MAAMC,QAAQhU,KACfA,EAAW,CAACA,IAET8T,EAAanI,MACf7U,OAAOF,GAAKkd,EAAapI,QAAQ9U,GAAG6Y,aACmD,IAAnFzP,EAAShJ,QAAQ8c,EAAapI,QAAQ9U,GAAG6Y,WAAW3c,GAAe8C,aAClE2Y,EAAQ0F,aAAeH,EAAapI,QAAQ9U,GAAG6Y,WAAW3c,GAAe+C,iBAAmBmK,GACjGnD,IAAIjG,GAAKkd,EAAapI,QAAQ9U,KAEhC,GAGJ,SAASyrB,GAAgB9Q,EAAOxP,GACnC,IAAIsM,EAAQ+T,GAAa7Q,GACzB,OAAIlD,EACOkS,GAAqBlS,EAAOtM,GAEhC,KAGJ,SAASugB,GAAiB/Q,EAAOgG,GACpC,IAAIzD,EAAesE,GAAgB7G,GACnC,OAAIuC,EACQ3xB,IACJ,GAAI2xB,EAAahI,QAAQ3pB,EAAE4f,IACvB,OAAO+R,EAAahI,QAAQ3pB,EAAE4f,IAAIwV,IAIvC,KAAM,EAEjB,IAAIgL,GACG,SAAS/B,KACZ,OAAO+B,KAEJ,SAASC,KACZ,MAAO,CAACxB,EAAUQ,KACde,GAAYf,GAGb,SAASiB,GAAgBC,GAC5B,OAAOhR,GAAYgR,EAAY5vB,GAAe0D,cAE3C,SAASmsB,GAAkBD,EAAYlgC,GAC1C,OAAQkvB,GAAYgR,EAAY5vB,GAAe2C,cAAgB,IAAIjT,GAEhE,SAASogC,GAAeF,EAAYlgC,GACvC,OAAQkvB,GAAYgR,EAAY5vB,GAAe2C,cAAgB,GAE5D,SAASotB,GAAoBC,GAChC,OAAO7K,GAAiB,CACpBlW,GAAI+gB,EAAW/gB,GACfgK,MAAO,CAAC,CACJ1R,KAAMojB,GAAuBzkB,iBAC7BsX,UAAWiQ,OAIhB,SAASnI,GAAgB7G,GACTsP,GAAYtP,EAAOwR,IAEtC,OADkBC,GAAsBzR,GAOrC,SAAS6Q,GAAa7Q,EAAOyP,GAChC,IAAIlN,EAAe+M,GAAYtP,EAAOwR,IAStC,OARIjP,EACAA,EAAeoN,GAAO3P,EAAOuC,GAExBkN,GAELD,IADAjN,EAAeyM,MACcxe,GAAIghB,GAAe/B,GAG7ClN,EAEJ,SAASmP,GAAa1R,GACzB,ID7IyBlD,EC6IrByF,EAAe+M,GAAYtP,EAAOwR,IACtC,GAAIjP,EAAc,CAGd,OAFAA,EAAeoN,GAAO3P,EAAOuC,ID/IRzF,ECgJqByF,ID/I9BzF,EAAMrC,OAASrqB,OAAOib,KAAKyR,EAAMrC,QAAU,IAAInP,IAAI1a,GAAKksB,EAAMrC,OAAO7pB,IAAM,GCkJ3F,OAAO,KAEJ,SAAS+gC,KACZ,MAAO,CAAClC,EAAUQ,KACd,IAAI2B,EAAYf,GAAaZ,IAAYR,GAEzCG,GADAgC,EDnKD,SAAwB9U,GAC3B,IAAI+U,EAAW3Y,KAGf,OAFA2Y,EAAS7a,MAAQyC,GACjBqD,EAAMrC,OAAOoX,EAASrhB,IAAMqhB,EACrB/U,EC+JSkS,CAA4B4C,GACnBnC,IAItB,SAASqC,GAAa7gC,EAAKN,GAC9B,MAAO,CAAC8+B,EAAUQ,KACd,IAAI2B,EAAYf,GAAaZ,IAAYR,GAIzCG,GAHAgC,EAAY,IACLA,EAAgBvyB,CAACpO,GAAMN,GAET8+B,IAGtB,SAASsC,GAA+BC,GAC3C,MAAO,CAACvC,EAAUQ,KACd,IAAI2B,EAAYf,GAAaZ,IAAYR,GACzCmC,EAAU9W,UAAUO,YAAYO,iBAAmB,CAAC,WAAYoW,GAAUpU,OAAOvY,GAAKA,GAAGM,KAAK,KAC9FiqB,GAAUgC,EAAWnC,IAGtB,SAASgC,GAAsBzR,EAAOyP,GACzC,IAAIlN,EAAe+M,GAAYtP,EAAOwR,IACtC,IAAIvU,EAAQqS,GAAYtP,EAAOiS,KAAgB,GAc/C,OAZK1P,GAODA,EAAeoN,GAAO3P,EAAOuC,GACzBtF,EAAMlO,SACNwT,EAAeyM,GAA4BzM,EAAc,CAAEtF,YAR3DwS,GAEAD,IADAjN,EAAeyM,MACcxe,GAAIghB,GAAe/B,GASjDlN,EAEJ,SAAS2P,GAAoBlS,GAChC,ID5LwBlD,EACpBQ,EC2LA6U,EAAOtB,GAAa7Q,GACxB,GAAImS,EAAM,CACN,IAAIlV,EAAQqS,GAAYtP,EAAOiS,IAC/B,GAAIhV,GAASA,EAAMlO,OACf,OD/LJuO,EADoBR,ECgMgBqV,EAAMlV,ED7LvC3R,IAAI2R,IACPK,EAASR,EAAMrC,OAAOwC,KAGnBK,EC4LP,OAAO,KAEJ,MAAM8U,GAAqB,qBACrBC,GAAW,WACXC,GAAc,cACdC,GAAW,WACXC,GAAmB,mBACnBhB,GAAgB,gBAChBS,GAAc,cACdQ,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAyB,yBACzBC,GAAqB,qBACrBC,GAA4B,4BAC5BC,GAAc,cACdC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAA2B,2BAC3BC,GAAkB,kBAClBC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAAkB,kBAClBC,GAAoB,oBACpBC,GAA0C,0CAC1CC,GAA0B,0BAC1BC,GAAqB,qBACrBC,GAA2C,2CAC3CC,GAA6B,6BAC7BC,GAAyB,0BACzBC,GAAY,YAElB,SAASC,GAAeC,EAAWnX,GACtC,MAAO,CAACyS,EAAUQ,KACd,IAAIjQ,EAAQiQ,IACZ,IAAI2B,EAAY,KAChB,IAAIrP,EAAe+M,GAAYtP,EAAOwR,IACtC,IAAIvU,EAAQqS,GAAYtP,EAAOiS,KAAgB,GAC1C1P,GAODqP,EADArP,EAAeoN,GAAO3P,EAAOuC,GAEzBtF,EAAMlO,SACNwT,EAAeyM,GAA4BzM,EAAc,CAAEtF,aAP/DuS,IADAjN,EAAeyM,MACcxe,GAAIghB,GAAe/B,GAChDmC,EAAYrP,GAShB,IAAI6R,EAAaD,EACZ3R,MAAMC,QAAQ0R,KACfC,EAAa,CAAC,CAAED,UAAWA,EAAWnX,aAE1CoX,EAAW7uB,OAAOF,GAAKA,GAAGiG,IAAIwb,IAC1B,IAAIqN,UAAEA,EAAFnX,QAAaA,GAAY8J,EAC7B,OAAQqN,GACJ,KAAKF,GACD1R,EDxCb,SAAkBzF,EAAOE,GAC5B,IAAIiN,MAAEA,GAAUjN,EAGhB,OAFAF,EAAMmN,MAAQA,EAEPnN,ECoCwBkS,CAAsBzM,EAAcvF,GACnD,MACJ,KAAKqV,GACD9P,EDrCb,SAAiBzF,GAEpB,OAAOuD,GAAQvD,EADJ6D,MCoCoBqO,CAAqBzM,GACpC4N,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKqC,GACD/P,EAAeyM,GAAwBzM,EAAcvF,GACrD,MACJ,KAAKoV,GACD7P,ED/Rb,SAA0BzF,EAAOW,GACpC,IAAIyL,KAAEA,GAASzL,EAEf,OADAX,EAAM9F,MAAQkS,EACPpM,EC4RwBkS,CAA8BzM,EAAcvF,GAC3D,MACJ,KAAKuV,GACDhQ,EAAeyM,GAAqBzM,EAAcvF,GAClD,MACJ,KAAK6V,GACDtQ,ED4kCb,SAA6BzF,EAAOE,GACvC,IAAIyC,OAAEA,EAAFD,OAAUA,EAAVtB,WAAkBA,GAAelB,EACrC,GAAIyC,IAAWD,EAEX,OAAO4G,GAAQtJ,EAAOE,EADXqJ,GAAW5G,EAAQD,EAAQtB,IAG1C,OAAOpB,ECllCwBkS,CAAiCzM,EAAcvF,GAC9D,MACJ,KAAK+V,GACDxQ,EDgmCb,SAAgCzF,EAAOE,GAE1C,OAAO4C,GAAW9C,EADP0K,GAAiB1K,EAAOE,GACJA,GClmCAgS,CAAoCzM,EAAcvF,GACjE,MACJ,KAAKgW,GACDzQ,EDimCb,SAAwBzF,EAAOE,GAElC,OAAO4C,GAAW9C,EADPA,EAAMvC,QAAQyC,EAAQxM,KClmCFwe,CAA4BzM,EAAcvF,GACzD,MACJ,KAAKwV,GACDjQ,EAAeyM,GAAgCzM,EAAc,IAAKvF,EAASoE,KAAM,SACjF,MACJ,KAAKqR,GACDlQ,EAAeyM,GAAgCzM,EAAcvF,GAC7D,MACJ,KAAK0V,GACDnQ,EDuGb,SAA4BzF,EAAOE,GACtC,OAAOuD,GAAiBzD,EAAOE,EAAS5f,GAAU7C,UCxGnBy0B,CAAgCzM,EAAcvF,GAC7DmT,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK2C,GACDrQ,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUQ,WAC9EuyB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK6C,GACDvQ,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAU5C,WAC9E21B,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKmD,GACD7Q,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUY,iBAC9EmyB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKsD,GACDhR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUa,gBAC9EkyB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK0D,GACDpR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUW,sBAC9EoyB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKqD,GACD/Q,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUS,YAC9EsyB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKiD,GACD3Q,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUyB,WAC9EsxB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKkD,GACD5Q,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAU0B,gBAC9EqxB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK0C,GACDpQ,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUU,YAC9EqyB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKwD,GACDlR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUiB,YAC9E8xB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKyD,GACDnR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUmB,cAC9E4xB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK+D,GACDzR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAU8B,eAC9EixB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK2D,GACDrR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUoB,mBAC9E2xB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKoD,GACD9Q,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUc,oBAC9EiyB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK4D,GACDtR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUqB,eAC9E0xB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAKuD,GACDjR,EAAeyM,GAA8BzM,EAAcvF,EAAS5f,GAAUkB,gBAC9E6xB,GAAUrB,GAAevM,EAAanI,MAAMmI,EAAanI,MAAMrL,OAAS,GAAxEohB,CAA4EV,EAAUQ,GACtF,MACJ,KAAK8D,GACDxR,EAAeyM,GAAsCzM,EAAcvF,GAO3EuF,ED2OL,SAA+BzF,GAClC,IAAInC,EAAgBmC,EAAMnC,cAE1B,GAAIA,EAAe,CACf,IAAI0Z,EAA0B,GAC9B,IAAK,IAAI3kC,KAAKirB,EAAe,CACzB,IAAI2Z,EAAgBxS,GAAQhF,EAAOptB,GACnC,GAAI4kC,EAAe,CACf,IAAItS,EAAe7B,GAAYmU,EAAe/yB,GAAe0D,cAC7D,GAAI+c,EAAc,CACd,IAAIC,EAA2BnnB,GAAUknB,GACzC,GAAIC,GAA4BA,EAAyBrM,GAA0BC,SAAU,CACzF,IAAI0e,EAAoCtS,EAAyBrM,GAA0BC,SAC3F,GAAI0e,EACA,IAAK,IAAIC,KAAKD,EAAmC,CAG7C,IAAIE,EAAqBF,EAAkCC,GAAG/f,GAA+BS,OAC7F,GAAIuf,EAAoB,CACpB,IAAIC,EAAmB5R,GAA2BhG,EAAO,CAAEtM,GAAI9gB,EAAGqzB,cAAe0R,IAC7EE,EAA+B,GACnCD,EAAiBppB,IAAIspB,IACjB,IAAIC,EAAYzS,GAAiBtF,EAAO,CAAEtM,GAAIokB,EAAGpkB,KACjDmkB,EAA6B5K,QAAQ8K,KAEzCF,EAA6BrpB,IAAIgV,IAC7B+T,EAAwBtK,KAAK,CACzB/D,OAAQ1F,EAAK9P,GACbskB,aAAcR,EAAc9jB,GAC5Bvf,IAAKwjC,EACLM,MAAOP,UASvCH,EAA0B,IAAIA,EAAwBzW,OAAOvY,GAClDwb,KAAKE,UAAU1b,KAG1BjV,OAAOib,KAAKyR,EAAMpC,YAAYpP,IAAI5b,IACzB2kC,EAAwBnP,KAAKtC,GAGvB2D,GADGpG,GADGrD,EAAM3C,QAAQzqB,GACG6R,GAAe4D,8BACrByd,MAExB9F,EAAQ8B,GAAW9B,EAAO,CAAEtM,GAAI9gB,OAOxC2kC,EAAwB/oB,IAAIsX,IACxB,IAAIoS,EAAiB5kC,OAAOib,KAAKyR,EAAMpC,YAAYnV,OAAO7V,KAIlD62B,GADMpG,GADGrD,EAAM3C,QAAQzqB,GACG6R,GAAe4D,8BACxByd,IAOzB,GAA8B,IAA1BoS,EAAejmB,OAEf+N,EAAQyD,GAAiBzD,EAAO,CAC5B0D,OAAQoC,EAAIkS,aACZrU,eAAgB,CACZvC,WAAY,IAAK5U,GAAerB,qBAErC7K,GAAU+B,UAAY0lB,IACrB/H,EAAQqE,GAAmBrE,EAAO,CAC9BtM,GAAIqU,EAASrU,GACb4Q,KAAM7f,GAAewB,OACrBpS,MAAOgyB,GACHC,EAAImS,MACJ5U,GAAY2B,GAAQhF,EAAO8F,EAAIoD,QAASzkB,GAAe5L,aAG/DmnB,EAAQqE,GAAmBrE,EAAO,CAC9BtM,GAAIqU,EAASrU,GACb4Q,KAAM7f,GAAe4D,6BACrBxU,MAAOiyB,WAId,GAA8B,IAA1BoS,EAAejmB,OAAc,CAClC,IAAIkmB,EAASnY,EAAM3C,QAAQ6a,EAAe,IAE1ClY,EAAQqE,GAAmBrE,EAAO,CAC9BtM,GAAIykB,EAAOzkB,GACX4Q,KAAM7f,GAAewB,OACrBpS,MAAOgyB,GAAkBC,EAAImS,MAAO5U,GAAY2B,GAAQhF,EAAO8F,EAAIoD,QAASzkB,GAAe5L,kBAI/FuuB,QAAQgR,MAAM,0CAM9B,OAAOpY,ECtVgBkS,CADfzM,EAAeyM,GAA8BzM,MAWjDqN,GADAgC,ED4MD,SAA8BO,GACjC,GAAIA,GAAQA,EAAKjY,eACb,IAAK,IAAI+C,KAASkV,EAAKjY,eACnB,GAAIiY,EAAK1X,QAAU0X,EAAK1X,OAAOwC,GAAQ,CACnC,IAAIkY,EAAchD,EAAK1X,OAAOwC,GAC9B,IAAK,IAAI+I,KAAUmM,EAAKjY,eAAe+C,GAAQ,CAC3C,IAAImY,EAAajD,EAAKhY,QAAQgY,EAAKjY,eAAe+C,GAAO+I,IACzD,GAAIoP,EAAY,CACZ,IAAIC,EAAUvT,GAAQqT,EAAanP,GAC/BqP,IAEAA,EAAQnX,WAAWgL,KAAOkM,EAAWlX,WAAWgL,KAChDmM,EAAQnX,WAAWoX,cAAgBF,EAAWlX,WAAWzP,YAQjF,OAAO0jB,EChOSnD,CALR4C,EADA3U,EAAMlO,ODzVX,SAAwBojB,EAAMnV,GACjC,IAAIC,MAAEA,EAAFH,MAASA,GAAUE,EACvB,GAAIC,GAASA,EAAMlO,OAAQ,CACvB,IAAIwT,EAAe4P,EACnBlV,EAAM3R,IAAI,CAAC7Z,EAAG/B,KACNA,IAAMutB,EAAMlO,OAAS,EACrBwT,EAAa9H,OAAOhpB,GAAKqrB,EAEzByF,EAAeA,EAAa9H,OAAOhpB,UAK3C0gC,EAAOrV,EAEX,OAAOqV,EC2UanD,CAA4B4C,EAAW,CAAE3U,QAAOH,MAAOyF,IAGvDA,GAGKkN,IAItB,MAAM8F,GAAS,CAClBhF,aAAc,WAGX,SAASiF,KACZ,MAAO,CAAC/F,EAAUQ,KACdvE,GAAO+J,eACHhK,GAAOiK,mBACP,CACIC,QAAS,CACL,CAAE1lC,KAAM,oBAAqB2lC,WAAY,CAACC,MAE9C3X,WAAY,CAAC,aAEhB4X,SACoBC,IAAbD,GAKAA,EAAS/mB,QAAUyT,MAAMC,QAAQqT,KACjCA,EAAWA,EAAS,IAGnBA,EAASE,SAASC,MACnBH,KAAcA,IAAWG,MAE7B/R,QAAQgS,IAAIJ,GACZ/f,GAAGogB,SAASL,EAAU,CAAEM,SAAU,SAAW,CAACC,EAAKlQ,KAC/C,GAAIkQ,EAGA,OAFAnS,QAAQgR,MAAM,qCAAuCmB,EAAIC,cACzDpS,QAAQgS,IAAIG,GAGhB,IACI,IAAIE,EAAe1V,KAAKC,MAAMqF,GAC9B,GAAIoQ,EAGA/G,IADA+G,EAAe,IADKvH,QACkBuH,IACT/lB,GAAIghB,GAAe/B,GAChDG,GAAU2G,EAAc9G,GAE9B,MAAOvgB,GACLgV,QAAQgS,IAAIhnB,GAEhBgV,QAAQC,KAAK,0CA7BbD,QAAQgS,IAAI,+BAmCzB,SAASM,KACZ,MAAO,CAAC/G,EAAUQ,KACd,IACIsG,EAAe,IADCvH,MAEpBQ,GAAgB+G,EAAa/lB,GAAIghB,GAAe/B,GAChDG,GAAU2G,EAAc9G,IAGhCjE,GAAY7D,GAAG,2BAA4B,CAAC8O,EAAOC,KAC/CxS,QAAQgS,IAAIQ,KAET,MAAMT,GAAqB,OACrBJ,GAAsB,MAC5B,SAASc,KACZ,MAAO,CAAClH,EAAUQ,KACd,IAAI1N,EAAesO,GAAaZ,KAEhC,GAAI1N,EAAc,CACd,IAAIzT,EAAU+R,KAAKE,UAAUwB,GAC7BmJ,GAAOkL,eACHnL,GAAOiK,mBACP,CACIC,QAAS,CACL,CAAE1lC,KAAM,oBAAqB2lC,WAAY,CAACC,OAGjDC,SACoBC,IAAbD,GAKCA,EAASE,SAASC,MACnBH,KAAcA,IAAWG,MAE7B/R,QAAQgS,IAAIJ,GACZ/f,GAAG8gB,UAAUf,EAAUhnB,EAAUunB,IAC7B,GAAIA,EAGA,OAFAnS,QAAQgR,MAAM,qCAAuCmB,EAAIC,cACzDpS,QAAQgS,IAAIG,GAIhBnS,QAAQC,KAAK,0CAfbD,QAAQgS,IAAI,gCAsB7B,SAASY,KACZ,MAAO,CAACrH,EAAUQ,KACd,IAAI1N,EAAesO,GAAaZ,KAE5B1N,GACAmJ,GAAO+J,eACHhK,GAAOiK,mBACP,CACIxX,WAAY,CAAC,kBAEhB4X,SACoBC,IAAbD,GAKJ5R,QAAQgS,IAAIJ,GAEZlG,GADArN,EDxhBb,SAAyBzF,EAAOE,GACnC,IAAIxD,UAAEA,GAAcwD,EAEpB,OADAF,EAAMtD,UAAYA,EACXsD,ECqhBwBkS,CAA6BzM,EAAc,CAAE/I,UAAWsc,EAAS,KACxDrG,IANpBvL,QAAQgS,IAAI,+BC/lB7B,MAAMa,GAAgB,CACzBC,SAAU,CACNV,QAAS,mBACTW,MAAO,uDCGf,MAAMC,GAAsB,gCAEb,MAAMC,GACjB93B,gBAAgB2d,GACZ,IAAI/F,SAAEA,EAAF0C,UAAYA,EAAZyd,MAAuBA,EAAvBC,OAA8BA,GAAWra,EAC7C,IAAIsa,EAAoBvhB,KAAGC,aAAakhB,GAAqB,SAS7D,OAPAI,EAAoB3e,GAAa2e,EAAmB,CAChD3d,YACAyd,QACAG,QAASF,EAASA,EAAO/rB,IAAIjG,YAAaA,MAAMuY,OAAOvY,GAAKA,GAAGM,KAAK,QAAU,KAC9E6xB,KAAMvgB,KCVlB,MAAMwgB,GAA4B,4CAC5BC,GAAqC,sDACrCC,GAAyC,0DAGhC,MAAMC,GACjBv4B,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EAEX9mB,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtEob,EAAc7X,GAAYF,EAAO5iB,GAAU2B,YAE3Ci5B,EAA2BjiB,KAAGC,aAAayhB,GAA2B,SACtEQ,EAA8BliB,KAAGC,aAAa0hB,GAAoC,SAClFQ,EAAiCniB,KAAGC,aAAa2hB,GAAwC,SACzFxF,EAAOtB,GAAa7Q,GACpB1C,EAAS,GA8Gb,OA7GAya,EAAYzsB,IAAI6sB,IACZ,IAAIC,EAA0BJ,EAC1Btf,EAAY,GAEZ2f,KAAclY,GAAYgY,EAAY52B,GAAe5L,YACrD2iC,EAAWpY,GAAYF,EAAO5iB,GAAUE,OAAO4nB,KAAK7f,GAAK8a,GAAY9a,EAAG9D,GAAehL,SACvFgiC,EAAoB,GACTvJ,GAAgCmD,EAAM,CACjD3hB,GAAI2nB,EAAW3nB,GACf1H,KAAMxC,GAAS+B,YACf0W,UAAWiQ,KACZ1jB,IAAIktB,IACH,IAAIC,EAAgBzJ,GAAgCmD,EAAM,CACtD3hB,GAAIgoB,EAAQhoB,GACZ1H,KAAMxC,GAASoB,aACfqX,UAAWiQ,KAEX0J,EAAcvY,GAAYqY,EAASj3B,GAAe5L,WACtD4iC,EAAoBE,GACE1pB,QAClBwpB,EAAkBjtB,IAAIqtB,IAClB,IAAIC,EAAKphB,GAAgB2I,GAAYwY,EAAkBp3B,GAAe0D,eACtE,GAAI2zB,EAAI,CACJ,IAAIC,EAAeZ,EACfa,EAAa,GACbC,EAAkB,GAClBC,EAAmB,GAEvB,GAAI7Y,GAAYwY,EAAkBp3B,GAAemD,cAAgBtQ,GAAQ8C,IAAK,CAC1E2hC,EAAeX,EACf,IAAIe,EAAY,UACZL,EAAGnhB,YACHwhB,EAAY,YAEhBH,YAAuBG,IACvBF,OAAuBE,KACvBD,KAAsBC,IAEX9Y,GAAYwY,EAAkBp3B,GAAe5L,UAA5D,IACI8iC,EAAgBzJ,GAAgCmD,EAAM,CACtD3hB,GAAImoB,EAAiBnoB,GACrB1H,KAAMxC,GAASyB,uBACfgX,UAAWiQ,KAGXkK,KAAkB/Y,GAAYwY,EAAkBp3B,GAAe5L,YAC/DwjC,KAAgBhZ,GAAYwY,EAAkBp3B,GAAetG,cAC7Dm+B,KAAejZ,GAAYwY,EAAkBp3B,GAAepG,aAC5Dk+B,EAAmBlZ,GAAYwY,EAAkBp3B,GAAe2C,aACpE,IAAKm1B,EAAkB,OACRZ,EAAcvT,KAAKt0B,GAAKuvB,GAAYvvB,EAAG2Q,GAAe5L,YAAcgd,GAAqBW,cAAxG,IACIgmB,EAAYtK,GAAqBmD,EAAMkH,EAAiB3iB,OACxD6iB,EAAc,uCACdD,IACAC,EAAcpZ,GAAYmZ,EAAW/3B,GAAe5L,WAAa4jC,EAC7DX,EAAGvhB,SACHkiB,WAAuBA,OAG/BV,EAAelgB,GAAakgB,EAAc,CACtCK,aAAcA,EACdP,iBAAkBO,EAClBJ,aACAE,mBACAD,kBACAS,WAAYJ,GAAa,oCACzBK,YAAaN,GAAc,oCAC3BtiB,cAAeshB,EAAahY,GAAYgY,EAAY52B,GAAe3M,UAAY,mCAC/E2kC,YAAaA,EACbG,kBAAmBvjB,GAAYuiB,GAC/BiB,WAAYL,EAAYnZ,GAAYmZ,EAAW/3B,GAAe5L,UAAY,yCAU9E+iB,GAAakhB,GAAMf,KAK/BT,EAA0Bzf,GAAayf,EAAyB,CAC5DC,SAAUA,EACVwB,oBAAqBxB,EAAS3yB,cAC9BmR,cAAeshB,EAAahY,GAAYgY,EAAY52B,GAAe3M,UAAY,mCAC/EgiB,KAAM0hB,EAAWnY,GAAYmY,EAAU/2B,GAAe5L,UAAY,mCAClE+iB,gBAGR4E,EAAO6C,GAAYgY,EAAY52B,GAAe5L,WAAa,CACvD6a,GAAI2P,GAAYgY,EAAY52B,GAAe5L,UAC3C1F,KAAMkwB,GAAYgY,EAAY52B,GAAe5L,UAC7CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAUmhB,EACVf,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,QACzB,4BAEJqc,YACAyd,MAAO9jC,GAAU6N,iBAKtBmc,GAIf,MAEMsc,GAAO,KAEP/B,GAAO,MC/IPkC,GAAiB,mCACjBC,GAA0B,4CAC1BC,GAAyB,2CACzBC,GAA2B,8CAClB,MAAMC,GACjB96B,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBoa,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCggB,EAAS,GAUb,OATA8c,EAAO9uB,IAAIoL,IACP,IAAIyP,EAAMgU,GAAeE,cAAc,CACnCvd,MAAOgb,EACP9R,OAAQtP,EAAMlG,GACdwP,UAEJ1C,EAAO6I,EAAI3V,IAAM2V,IAGd7I,EAEXje,qBAAqB2d,GACjB,IAAIgD,MAAEA,EAAFlD,MAASA,EAATkJ,OAAgBA,GAAWhJ,EAE3Bqa,EAAS,GACTiD,EAAyB,GAC7B,IAAIxC,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAG1E,IAAI2D,EAAO0O,GAAqBlS,EAAOkJ,GACvC,IAAK1F,EACD,OAAO,KAEXga,EAAuB5jB,MAAQyJ,GAAYG,EAAM/e,GAAe5L,UAChE2kC,EAAuBC,WAAapa,GAAYG,EAAM/e,GAAehL,QAAU,UAAY,YAC3F+jC,EAAuBE,sBAAwB,GAC3Cra,GAAYG,EAAM/e,GAAehL,UACjC+jC,EAAuBE,sBAAyB,2dAmBpDF,EAAuBG,WAAa,GACpC,IAAIC,EAAsB1L,GAAgClS,EAAO,CAC7DtM,GAAI8P,EAAK9P,GACT1H,KAAMxC,GAASuB,aACfkX,UAAWiQ,KAEf,IAAI2L,EAAmB5kB,KAAGC,aAAagkB,GAAyB,SAC5DY,EAAoB7kB,KAAGC,aAAakkB,GAA0B,SAC9DW,EAAyB9kB,KAAGC,aAAaikB,GAAwB,SAEjEa,EAAqB9L,GAAgClS,EAAO,CAC5DtM,GAAIwV,EACJld,KAAMxC,GAASrE,eACf8c,UAAWiQ,KACZ1jB,IAAI1a,GAAKuvB,GAAYvvB,EAAG2Q,GAAe5L,WAAW2V,IAAI1a,GAAKupC,GAAeY,KAAK,OAASnqC,KAAOud,IAAUxI,KAAK,IACjH20B,EAAuBG,WAAaK,EAEpC,IAAIE,EAAkB,GAClB9c,EAAawc,EAAoBpvB,IAAI2vB,IACrC,IAAIC,EAAsBlM,GAAgClS,EAAO,CAC7DtM,GAAIyqB,EAASzqB,GACb1H,KAAMxC,GAASgC,cACfyW,UAAWiQ,KAEf,IAAImM,EAA6BR,EAC7BS,EAAKjb,GAAY8a,EAAU15B,GAAegD,iBAC1CgK,GAAOH,GAAqBC,QAAQ+sB,IACpC/D,EAAOtN,QACAxb,GAAOH,GAAqBC,QAAQ+sB,MACpCzhB,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU6G,cAEjC,IAAIkhC,EAAW/sB,GAA4BF,GAAqBC,QAAQ+sB,GACpEjb,GAAY8a,EAAU15B,GAAeoD,eACrC02B,EAAW,UAEf,IAAIC,EAAqB,CACrB5kB,MAAOyJ,GAAYG,EAAM/e,GAAe5L,UACxC4lC,cAAeF,EACfhqC,SAAU8uB,GAAY8a,EAAU15B,GAAe5L,UAC/C8kC,WAAYS,EAAoB5vB,IAAIkwB,IAChC,IAAIC,EAAgBzM,GAAgClS,EAAO,CACvDtM,GAAIgrB,EAAKhrB,GACT1H,KAAMxC,GAASQ,OACfiY,UAAWiQ,KAEf,IAAI0M,EAAe,GACnBD,EAAcnwB,IAAIqwB,IACJ3M,GAAgClS,EAAO,CAC7CtM,GAAImrB,EAAGnrB,GACP1H,KAAMxC,GAASS,WACfgY,UAAWiQ,KAEX1jB,IAAIswB,IACAzb,GAAYyb,EAAMr6B,GAAeoC,mBACjC+3B,EAAa3R,KAAK5J,GAAYyb,EAAMr6B,GAAeqC,qBAGnD83B,EAAa3R,KAAK5J,GAAYyb,EAAMr6B,GAAemC,mBAI/Dg4B,EAAeA,EAAa9d,SAAStS,IAAI1a,kBAAoBA,KAE7D,IAAIirC,EAAe,GACnBzrC,OAAOib,KAAKG,IAAiBF,IAAIwwB,IAC7BD,EAAarwB,GAAgBswB,IAASA,IAE1C,IAAIC,EAAc,GACd5b,GAAYqb,EAAMj6B,GAAetJ,mBACjC+2B,GAAgClS,EAAO,CACnCtM,GAAIgrB,EAAKhrB,GACT1H,KAAMxC,GAASI,WACfqY,UAAWiQ,KACZ1jB,IAAI0wB,IACHhN,GAAgClS,EAAO,CACnCtM,GAAIwrB,EAAMxrB,GACV1H,KAAMxC,GAASK,eACfoY,UAAWiQ,KACZ1jB,IAAI2wB,IACHF,EAAYhS,wBAAwB8R,EAAa1b,GAAY8b,EAAW16B,GAAe6C,0BAInG,IAAI83B,EAAc,KACd/b,GAAYqb,EAAMj6B,GAAewC,kBACjCirB,GAAgClS,EAAO,CACnCtM,GAAIgrB,EAAKhrB,GACT1H,KAAMxC,GAASW,UACf8X,UAAWiQ,KACZ1jB,IAAI0wB,IACHE,EAAc/b,GAAY6b,EAAOz6B,GAAe5L,YAIxD,IAAIqnB,EAAU0e,GAAgBA,EAAa3sB,OAAS4J,GAAc,+CAA+C,CAC7G+iB,aAAcA,EAAapwB,IAAI1a,MAAQA,KAAK+U,KAAK,QAChD,GAEDw2B,EAAmBJ,GAAeA,EAAYhtB,OAAS4J,GAAc,0DAA0D,CAC/HyjB,gBAAiBL,EAAYzwB,IAAI1a,MAAQA,KAAK+U,KAAK,QAClD,GAGD02B,EAAcH,EAAcvjB,GAAa,qCAAsC,CAC/E0jB,YAAaH,IACZ,GAEDI,EAA0B,CAC1BjrC,SAAU8uB,GAAY8a,EAAU15B,GAAe5L,UAC/C4lC,cAAepb,GAAY8a,EAAU15B,GAAe9E,gBAAkB0jB,GAAY8a,EAAU15B,GAAeoD,aAAewb,GAAY8a,EAAU15B,GAAegD,iBAC/Jg4B,SAAUpc,GAAY8a,EAAU15B,GAAevM,QAC/CwnC,SAAUrc,GAAY8a,EAAU15B,GAAerM,YAAc,OAAS,QACtE8nB,UACAqf,cACAF,oBAIJ,OAFIX,GAAQA,EAAKiB,iBAEV9jB,GAAaiiB,EAAmB0B,KACxC/2B,OAAOF,GAAKA,GAAGM,KAAK,SAI3B,OADAw1B,EAA6BxiB,GAAawiB,EAA4BG,KAGtEnb,GAAYG,EAAM/e,GAAepF,qBAAuBgkB,GAAYG,EAAM/e,GAAexF,mBACxFokB,GAAYG,EAAM/e,GAAenF,uBAAyB,IAAIkP,IAAI1a,IAC/D,IAAIqqC,EAAWjM,GAAqBnI,GAAgB7G,GAAQpvB,GACxD0qC,EAAqB,CACrBC,cAAejtB,GAA4BF,GAAqBC,QAAQZ,GAAkBC,QAC1Frc,SAAU8uB,GAAY8a,EAAU15B,GAAe5L,UAC/C8kC,WAAY,IAGhBvc,EAAW6L,KAAKpR,GAAagiB,EAAkBW,MAGvD,IAAIoB,EAAY,CACZhmB,MAAOyJ,GAAYG,EAAM/e,GAAe5L,YAE5CqlC,EAAgBjR,KAAKpR,GAAakiB,EAAwB6B,IAEtDvc,GAAYG,EAAM/e,GAAehL,UACjB2pB,GAAYF,EAAO5iB,GAAUE,OAAOiI,OAAOF,GAAKA,EAAEmL,KAAO8P,EAAK9P,IAAM2P,GAAY9a,EAAG9D,GAAejL,UACxGgV,IAAIwL,IAEV,IAAIqkB,EAA6BR,EAMjCQ,EAA6BxiB,GAAawiB,EALjB,CACrBI,cAAejtB,GAA4BF,GAAqBC,QAAQZ,GAAkBC,QAC1Frc,SAAU8uB,GAAYrJ,EAAOvV,GAAe5L,UAC5C8kC,WAAY,KAGhBvc,EAAW6L,KAAKoR,KAGxBb,EAAuBpc,WAAaA,EAAWvY,KAAK,IACpD20B,EAAuBU,gBAAkBA,EAAgBpd,OAAOvY,GAAKA,GAAGM,KAAK,MAC7Eue,QAAQgS,IAAIoE,EAAuBpc,YACnC,IAAIye,EAAgB5mB,KAAGC,aAAa+jB,GAAgB,SAgBpD,OAfA4C,EAAgBhkB,GAAagkB,EAAerC,GAE/B,CACT9pB,GAAI2P,GAAYG,EAAM/e,GAAe5L,UACrC1F,KAAMkwB,GAAYG,EAAM/e,GAAe5L,UACvCshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU0lB,EACVtF,OAAQ,IAAIA,EACP,2BACF1d,IAAYrmB,GAAU8N,iBACtBhB,IACHuZ,YACAyd,MAAO9jC,GAAUgK,SAK7B+B,YAAYtP,GACR,IAAIo2B,EAAM,GAEV,IADA,IACSz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAFM,KAIV,OAAOA,GChPf,MAAMyW,GAA2B,4CAC3BC,GAA8B,sDAC9BC,GAAyB,wDACzBC,GAAyB,mEAEzBC,GAA8B,6DAC9BC,GAAkC,iEAElCC,GAAoC,mEACpCC,GAAwC,uEACxCC,GAA8B,0DAC9BC,GAAgB,EACP,MAAMC,GACjBj+B,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EAEX9mB,8BAA8Bk+B,GAC1B,IAAIC,EAAMrd,GAAYod,EAAeh8B,GAAe0C,uBACpD,GAAIu5B,GAAOA,EAAIpV,QACPoV,EAAIpV,OAAOC,cAIX,OAHsBmV,EAAIpV,OAAOG,KAAKjd,IAAI1a,GAC/B4sC,EAAIpV,OAAOK,SAAW73B,EAAE4sC,EAAIpV,OAAOK,UAAY73B,EAAER,OAAOib,KAAKza,GAAG,KAKnF,MAAM,IAAI6sC,MAAM,8DAEpBp+B,kCAAkC2d,GAC9B,IAAIsD,KAAEA,EAAFrwB,KAAQA,GAAS+sB,EAErB,OAAOrE,GADgB5C,KAAGC,aAAaonB,GAA6B,SAC9B,CAClCntC,OACAymB,MAAOyJ,GAAYG,EAAM/e,GAAe5L,YAGhD0J,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI4Y,EAAa1V,GAAYF,EAAO5iB,GAAUqB,eAC1Cq5B,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtE+gB,EAA0B3nB,KAAGC,aAAa4mB,GAA0B,SACpEe,EAA6B5nB,KAAGC,aAAa6mB,GAA6B,SAC1Ee,EAAwB7nB,KAAGC,aAAa8mB,GAAwB,SAChEe,EAAwB9nB,KAAGC,aAAa+mB,GAAwB,SAChEe,EAA4B/nB,KAAGC,aAAagnB,GAA6B,SACzEe,EAA+BhoB,KAAGC,aAAainB,GAAiC,SAChFe,EAAkCjoB,KAAGC,aAAaknB,GAAmC,SAErF5f,GADqCvH,KAAGC,aAAamnB,GAAuC,SACnF,IAmHb,OAlHAvH,EAAWtqB,IAAI2yB,IACX,IAAIC,EAAyBR,EACzBxf,EAAa,GACbigB,EAAU,GACd,IAAIC,EAAY,GAChB,IAAIC,EAAwBle,GAAY8d,EAAW18B,GAAe0C,uBAClE,GAAIo6B,EAAuB,CACvB,IAAIC,EAAYne,GAAY8d,EAAW18B,GAAe5L,WAClDyyB,OAAEA,EAAFmW,WAAUA,GAAeF,EAC7B,GAAIE,IACAA,EAAa,IAAKA,EAAY9oC,MAAO,UACrCyoB,EAAa9tB,OAAOib,KAAKkzB,GAAYjzB,IAAI4D,IACrC,IAAIsvB,EAA4Bb,EAOhC,OALAa,EAA4B7lB,GAAa6lB,EAA2B,CAChEvuC,KAAMquC,EACNjtC,SAAU6d,EACVpG,KAAMy1B,EAAWrvB,OAGtBvJ,KAAK,IACJyiB,GAAQ,CACR,IAAIqW,EAAY,GAChB,IAAIC,EAAW,GACf,GAAItW,EAAOC,cACPoW,EAAYrW,EAAOG,KAAKjd,IAAI,CAACoT,EAAMigB,KAE/B,IAAItX,EADJ3I,EAAO,IAAKA,EAAMjpB,MAAQkpC,EAAa,GAEvC,IAAI5sC,EAAQ3B,OAAOib,KAAKqT,GAAMpT,IAAIra,IAC9B,IAAIo2B,EAAOwW,EAUX,OATAxW,EAAO1O,GAAa0O,EAAM,CACtBh2B,SAAUJ,EACVN,MAAOsV,GAAayY,EAAKztB,MAEzBkV,MAAMuY,EAAKztB,KACXmtC,EAAUrU,KAAK,CACX95B,KAAMgW,GAAayY,EAAKztB,IACxBN,UAAW+tB,EAAKztB,QAEjBo2B,IACR1hB,SAASi5B,MAMZ,OAJAvX,EAAO1O,GADP0O,EAAOuW,EACmB,CACtB1f,WAAY0b,GAAM0D,GAAmBuB,KAAKxB,IAAiBtrC,EAC3D2kB,MAAO4nB,UAKd,CACD,IAAIjX,EACAt1B,EAAQ3B,OAAOib,KAAK+c,EAAO0W,YAAYxzB,IAAIra,IAC3C,IAAIo2B,EAAOwW,EACPnf,EAAO,IAAK0J,EAAO0W,YAUvB,OATAzX,EAAO1O,GAAa0O,EAAM,CACtBh2B,SAAUJ,EACVN,MAAOsV,GAAayY,EAAKztB,MAEzBkV,MAAMuY,EAAKztB,KACXmtC,EAAUrU,KAAK,CACX95B,KAAMgW,GAAayY,EAAKztB,IACxBN,UAAW+tB,EAAKztB,QAEjBo2B,IACR1hB,SAASi5B,MAEZvX,EAAO1O,GADP0O,EAAOuW,EACmB,CACtB1f,WAAY0b,GAAM0D,GAAmBuB,KAAKxB,IAAiBtrC,EAC3D2kB,MAAO4nB,IAGX,IAAIS,EAAgBf,EAKpBU,EAJAK,EAAgBpmB,GAAaomB,EAAe,CACxCL,SAHJA,EAAWrX,EAIP3Q,MAAO4nB,IAIfG,EAAYA,EAAUnzB,IAAI0zB,IACtB,IAAI3X,EAAO0W,EAKX,OAHA1W,EAAO1O,GAAa0O,EAAM,CACtBqX,SAAUM,MAMlBb,EAAUxlB,GADKmlB,EACkB,CAC7BmB,QAASR,EAAU94B,KAAK,IACxB+Q,MAAO4nB,IACN1E,GAAM8E,GAIvBR,EAAyBvlB,GAAaulB,EAAwB,CAC1DjuC,KAAMkwB,GAAY8d,EAAW18B,GAAe5L,UAC5CuoB,aACAigB,QAASA,EACTC,UAAWA,EAAUxgB,OAAOvY,GAAKA,GAAGiG,IAAI4zB,GAAMtF,GAAM0D,GAAmBuB,KAAK,GRkLrF,SAA8B7hB,GACjC,IAAI/sB,KAAEA,EAAFU,MAAQA,GAAUqsB,EAEtB,6BAA8B/sB,OAAUU,KQrLqDwuC,CAAqBD,IAAKv5B,KAAK,MAGpH2X,EAAO6C,GAAY8d,EAAW18B,GAAe5L,WAAa,CACtD6a,GAAI2P,GAAY8d,EAAW18B,GAAe5L,UAC1C1F,KAAMkwB,GAAY8d,EAAW18B,GAAe5L,UAC5CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAUinB,EACV7G,OAAQ,IAAIj3B,IACZuZ,YACAyd,MAAO9jC,GAAU6G,gBAKtBmjB,GAGf,MAAMshB,GAAM,yBAENhF,GAAO,KAEP/B,GAAO,gBC7Kb,MAAMuH,GAAY,kDACZC,GAAa,kCACbC,GAAqB,2DACrBC,GAAwB,wDACxBC,GAA6B,mDAC7BC,GAA+B,+DAC/BC,GAAoC,oEACpCC,GAAsB,qDACtBC,GAA2B,2DAC3BC,GAAmB,mDACnBC,GAAgC,gEAChCC,GAAoC,iEACpCC,GAAkB,kDAGT,MAAMC,GACjB5gC,yBAAyBkyB,EAAYza,EAAOJ,GACxC,IAAIya,EAAaG,GAAoBC,GACrC,GAAIJ,EAAY,CAEZ,OADoBD,GAAgBC,IAGhC,KAAKt2B,GAAc+W,yCACnB,KAAK/W,GAAc2W,uCAGf,OAFa4f,GAAkBD,EAAYxe,GAAqBO,SAAW4D,EAAMtG,IAC7E4gB,GAAkBD,EAAYxe,GAAqBK,UAAY0D,EAAMlG,GAE7E,QAGI,OAFa4gB,GAAkBD,EAAYxe,GAAqBO,SAAW4D,EAAMtG,IAC7E4gB,GAAkBD,EAAYxe,GAAqBrV,SAAWoZ,EAAMlG,IAKpF,OAAO,EAEXnR,yCAAyC6gC,EAAOC,EAAK7oB,EAAQxO,EAAO,SAChE,aAAcA,IAAOqX,GAAY+f,EAAO3+B,GAAe5L,WAAauqC,IAAQ/f,GAAYggB,EAAK5+B,GAAe5L,WAAawqC,IAAM7oB,IAGnIjY,2BAA2BpP,EAAMmuC,GAI7B,OAHaA,EAAU9yB,IAAI80B,MACbnwC,KAAQgW,GAAam6B,MAKvC/gC,sCAAsCghC,EAAQC,EAAiBhpB,GAC3D,IAAIipB,EAAcpgB,GAAYkgB,EAAQ9+B,GAAeO,oBAAsB,GAC3E,IAAI0+B,EAAkBrgB,GAAYmgB,EAAiB/+B,GAAe5L,UAIlE,OAHwB4qC,EAAYj1B,IAAI80B,MAC1BI,KAAmBv6B,GAAam6B,MAIlD/gC,gCAAgCghC,EAAQC,EAAiBhpB,GACrD,IAAImpB,EAAiBtgB,GAAYkgB,EAAQ9+B,GAAeQ,uBAAyB,GACjF,IAAIy+B,EAAkBrgB,GAAYmgB,EAAiB/+B,GAAe5L,UAIlE,OAH2B8qC,EAAen1B,IAAI80B,MAChCI,KAAmBv6B,GAAam6B,MAIlD/gC,qCAAqCghC,EAAQC,EAAiBhpB,GAS1D,aAPW2oB,GAAoBS,kCAAkCL,EAAQC,EAAiBhpB,2BAClE2oB,GAAoBU,+BAA+BN,EAAQC,EAAiBhpB,GAMvChM,IAAI1a,GAAKgpC,GAAMiF,GAAK,GAAKjuC,GAAG+U,UAAUi0B,GAAMiF,GAAK,OAAOjF,KAEzHv6B,wBAAwB2d,GACpB,IAAI/sB,KAAEA,EAAF2wC,kBAAQA,EAARJ,gBAA2BA,GAAoBxjB,EAKnD,aAAc/sB,2BAJd2wC,EAAoBA,EAAkBt1B,IAAI80B,MAC5BI,KAAmBv6B,GAAam6B,OAGe90B,IAAI1a,GAAKgpC,GAAMiF,GAAK,GAAKjuC,GAAG+U,UAAUi0B,GAAMiF,GAAK,OAAOjF,KAEzHv6B,oCAAoCghC,EAAQ9C,EAAejmB,EAAQxO,EAAO,SACtE,IAAIy3B,EAAcpgB,GAAYkgB,EAAQ9+B,GAAeI,yBAA2B,GAChF,IAAIk/B,EAAgB1gB,GAAYod,EAAeh8B,GAAe5L,UAO9D,OAJwB4qC,EAAYj1B,IAAI80B,MAC1BS,KAAiB56B,GAAam6B,MAMhD/gC,yCAAyCghC,EAAQ9C,EAAejmB,EAAQxO,EAAO,SAC3E,IAAI23B,EAAiBtgB,GAAYkgB,EAAQ9+B,GAAeM,4BAA8B,GACtF,IAAIg/B,EAAgB1gB,GAAYod,EAAeh8B,GAAe5L,UAO9D,OAJ2B8qC,EAAen1B,IAAI80B,MAChCS,KAAiB56B,GAAam6B,MAMhD/gC,mCAAmCghC,EAAQ9C,EAAejmB,EAAQxO,EAAO,SAKrE,aAJWm3B,GAAoBS,kCAAkCL,EAAQ9C,EAAejmB,EAAQ,sCAExE2oB,GAAoBa,6BAA6BT,EAAQ9C,EAAejmB,EAAQxO,GAE3CwC,IAAI1a,GAAKgpC,GAAMiF,GAAK,GAAKjuC,GAAG+U,UAAUi0B,GAAMiF,GAAK,OAAOjF,KAGzHv6B,mBAAmByd,EAAOpG,EAAO6a,GAK7B,QAJqBvC,GAAgClS,EAAO,CACxDtM,GAAI+gB,EAAW/gB,GACf1H,KAAMxC,GAASgB,0BAEK4d,KAAK5E,GAClBA,EAAK9P,KAAOkG,EAAMlG,IAGjCnR,8BAA8Byd,EAAOyU,EAAYja,EAAQR,EAAOJ,GAE5D,IAAIqqB,EAA2B/R,GAAgClS,EAAO,CAClEtM,GAAI+gB,EAAW/gB,GACf1H,KAAMxC,GAASmC,+BAEnB,IAAIu4B,EAAc,GAoGlB,OAnGAD,EAAyBz1B,IAAI+0B,IACzB,IAKIY,EALkDjS,GAAgClS,EAAO,CACzFtM,GAAI6vB,EAAO7vB,GACX1H,KAAMxC,GAASmC,+BAGkF,GACrG,IAAKw4B,EACD,OAEJ,IAAIC,EAAgBlS,GAAgClS,EAAO,CACvDtM,GAAIywB,EAA+CzwB,GACnD1H,KAAMxC,GAASoC,+BAEfy4B,EAAe,KACnB,GAA6B,IAAzBD,EAAcnyB,OAId,OAHAoyB,EAAeD,EAAc,GAKjC,IAAIE,EP4gBT,SAA2BtkB,EAAOE,GACrC,IAAIwC,OAAEA,EAAFC,OAAUA,EAAV3W,KAAkBA,GAASkU,EAC3B2C,EAAOoG,GAASjJ,EAAO,CAAE0C,SAAQC,WACrC,QAAIE,GACOmE,GAAgBnE,EAAM1W,GAAiBC,QAAUJ,EOhhB9BkmB,CAA+BlS,EAAO,CAAE2C,OAAQ0hB,EAAa3wB,GAAIgP,OAAQ1I,EAAMtG,GAAI1H,KAAMxC,GAASuB,eACxH,IAAIy4B,EAAkBtR,GAAqBlS,EAAOqD,GAAYkgB,EAAQ9+B,GAAe5M,cACjF0sC,EAAgBrS,GAAqBlS,EAAOqD,GAAYkgB,EAAQ9+B,GAAeyC,cAC/Es9B,EAAiBnhB,GAAYkgB,EAAQ9+B,GAAe7M,gBACpD6sC,EAAephB,GAAYkgB,EAAQ9+B,GAAemB,cAGtD,GAFwByd,GAAYkgB,EAAQ9+B,GAAepI,gBAEpC,CAenB,IAAIkuB,EAAO1O,GAdwB5C,KAAGC,aAAa0pB,GAAmC,SAClF8B,EAAoB,CACpBlqB,SAEAkJ,UAAWL,GAAYrJ,EAAOvV,GAAe1L,YAAc,UAAU6P,cACrE+7B,gBAAiB,KAEjB9wC,SAAUywC,EAAkB,QAAU,SAAS17B,cAC/Cg8B,eAAgBvhB,GAAY8gB,EAAgD1/B,GAAe5L,UAC3F+gB,MAAO,OACPirB,SAAUxhB,GAAYkgB,EAAQ9+B,GAAe5L,UAC7CsoC,UAAW9d,GAAYkhB,EAAe9/B,GAAe5L,UACrDisC,cAAe,KAInBZ,EAAYjX,KAAK,CACb8X,eAAgBL,EAAkBlqB,SAASkqB,EAAkB9qB,QAAQ8qB,EAAkBG,WACvF1qB,SAAUoQ,IAGlB,GAAIia,EAAgB,CAChB,IAAIQ,EAAoC/rB,KAAGC,aAAaypB,GAA8B,SAClFsC,EAAe9B,GAAoB+B,8BAA8B3B,EAAQC,EAAiBhpB,GAC1FrnB,EAAOgwC,GAAoBS,kCAAkCL,EAAQC,EAAiBhpB,GAC1F,IAAIkqB,EAUJ,IAAIna,EAAO1O,GAAampB,EAVpBN,EAAoB,CACpBlqB,SACA3mB,SAAUywC,EAAkB,QAAU,SAAS17B,cAC/Cg8B,eAAgBvhB,GAAY8gB,EAAgD1/B,GAAe5L,UAC3F+gB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzCgsC,SAAUxhB,GAAYkgB,EAAQ9+B,GAAe5L,UAC7CssC,sBAAuBhyC,EACvBguC,UAAW9d,GAAYkhB,EAAe9/B,GAAe5L,UACrDisC,cAAeG,IAInBf,EAAYjX,KAAK,CACb8X,eAAgBL,EAAkBlqB,SAASkqB,EAAkB9qB,QAAQ8qB,EAAkBG,WACvF1qB,SAAUoQ,IAKlB,GAAIka,EAAc,CACd,IAAIhD,EAAape,GAAYkhB,EAAe9/B,GAAe0C,uBACvDi+B,EAAkCnsB,KAAGC,aAAawpB,GAA4B,SAC9E2C,EAAoBlC,GAAoBmC,4BAA4B/B,EAAQgB,EAAe/pB,GAC3FrnB,EAAOgwC,GAAoBS,kCAAkCL,EAAQgB,EAAe/pB,EAAQ,cAC5FkqB,EAAoB,CACpBlqB,SACA3mB,MAAQ,QACR+wC,eAAgBvhB,GAAY8gB,EAAgD1/B,GAAe5L,UAC3F+gB,MAAO,OACPirB,SAAUxhB,GAAYkgB,EAAQ9+B,GAAe5L,UAC7C0sC,sBAAuB9D,GAAcA,EAAWnW,OAASmW,EAAWnW,OAAOK,SAAW,KACtF6Z,yBAA0B,QAC1BL,sBAAuBhyC,EACvBguC,UAAW9d,GAAYkhB,EAAe9/B,GAAe5L,UACrDisC,cAAeO,GAEf9a,EAAO1O,GAAaupB,EAAiCV,GAEzDR,EAAYjX,KAAK,CACb8X,eAAgBL,EAAkBlqB,SAASkqB,EAAkB9qB,QAAQ8qB,EAAkBG,WACvF1qB,SAAUoQ,OAKf2Z,EAEX3hC,2BAA2Byd,EAAOyU,EAAY4P,GAC1C,IAAIoB,EAAyBvT,GAAgClS,EAAO,CAChEtM,GAAI+gB,EAAW/gB,GACf1H,KAAMxC,GAASe,wBAGnB,GAAIk7B,GAA0BA,EAAuBxzB,QP6jCtD,SAAwB+N,EAAOE,GAClC,IAAIwC,OAAEA,EAAFC,OAAUA,GAAWzC,EACzB,OAAO5sB,OAAOoyC,OAAO1lB,EAAMvC,SAAS2K,KAAKt0B,GAC9BA,EAAE4uB,SAAWA,GAAU5uB,EAAE6uB,SAAWA,GO/jC5BuP,CAA4BlS,EAAO,CAC1C0C,OAAQ+iB,EAAuB,GAAG/xB,GAClCiP,OAAQ0hB,EAAa3wB,KAGrB,OAAO,EAGf,OAAO,EAEXnR,kCAAkCyd,EAAOyU,EAAYja,EAAQR,EAAOJ,GAEhE,IAAI+rB,EAAiBzT,GAAgClS,EAAO,CACxDtM,GAAI+gB,EAAW/gB,GACf1H,KAAMxC,GAAS9L,YAEnB,IAAIwmC,EAAc,GAyElB,OAxEAyB,EAAen3B,IAAIo3B,IAKf,IAAIC,EAAgBxiB,GAAYuiB,EAAenhC,GAAexO,eAC9D,OAAQ4vC,GACJ,KAAKjrB,GAAelW,eAChB,IAAIohC,EAAOziB,GAAYuiB,EAAenhC,GAAeC,gBACrDw/B,EAAYjX,KAAK,CACbjhB,KAAM65B,EACNH,OAAQ,CAAC3qB,GAAeH,GAAelW,gBAAgBsW,WACvD+qB,IAAK,CAAChrB,GAAeH,GAAelW,gBAAgBuW,aACpDiF,QAAS,IAAK4lB,KAGlB,MACJ,KAAKlrB,GAAejW,4BACZmhC,EAAOziB,GAAYuiB,EAAenhC,GAAeE,6BACrDu/B,EAAYjX,KAAK,CACbjhB,KAAM65B,EACNH,OAAQ,CAAC3qB,GAAeH,GAAejW,6BAA6BqW,WACpE+qB,IAAK,CAAChrB,GAAeH,GAAejW,6BAA6BsW,aACjEiF,QAAS,IAAK4lB,KAGlB,MACJ,KAAKlrB,GAAeC,aAEhB,IAAImrB,EAAU3iB,GAAYuiB,EAAenhC,GAAeG,sBACpDqhC,EAAsB9C,GAAoB+C,sBAAsBlmB,EAAOgmB,EAASvhC,GAAe5M,aAC/FsuC,EAAYhD,GAAoBiD,aAAaJ,EAASvhC,GAAeO,mBACrEqhC,EAAsBlD,GAAoBiD,aAAaJ,EAASvhC,GAAeQ,sBACnF,IAAIggC,EAAe9B,GAAoBmD,oBAAoBL,EAAqBE,GAC5EI,EAAiBpD,GAAoBmD,oBAAoBL,EAAqBI,GAC9EG,EAAWrD,GAAoBS,kCAAkCgC,EAAeK,EAAqBzrB,GACrGisB,EAAetD,GAAoB+C,sBAAsBlmB,EAAOgmB,EAAS9qB,GAAwBO,cAErGyoB,EAAYjX,KAAK,CACbjhB,KAAM65B,EACN1yC,KAAMqzC,EACNE,IAAKV,EAAQ9qB,GAAwBG,MACrC9mB,SAAUkyC,EACVf,OAAQT,EACRc,IAAKQ,EACLrmB,QAAS,IAAK8lB,KAGlB,MACJ,KAAKprB,GAAeE,YAChB,IAAI2mB,EAAape,GAAYuiB,EAAenhC,GAAe0C,uBACvDk+B,EAAoBlC,GAAoBa,6BAA6B4B,EAAerB,cAAe/pB,GACnGmsB,EAAuBxD,GAAoByD,kCAAkChB,EAAerB,cAAe/pB,GAC3GqsB,EAAU1D,GAAoBS,kCAAkCgC,EAAerB,cAAe/pB,EAAQ,cACtGssB,EAAczjB,GAAY8gB,+CAAgD1/B,GAAe5L,UAG7FqrC,EAAYjX,KAAK,CACbjhB,KAAM65B,EACN1yC,KAAM0zC,EACNtyC,SAAUuyC,EACVpB,OAAQL,EACRU,IAAKY,EACLzmB,QAAS,IAAKuhB,QASvByC,EAEX3hC,6BAA6Byd,EAAOgmB,EAASh6B,GACzC,OAAOqX,GAAY8f,GAAoB4D,mBAAmB/mB,EAAOgmB,EAASh6B,GAAOvH,GAAe5L,UAEpG0J,0BAA0Byd,EAAOgmB,EAASh6B,GACtC,OAAOkmB,GAAqBlS,EAAOgmB,EAAQh6B,IAE/CzJ,oBAAoByjC,EAASh6B,GACzB,OAAOg6B,EAAQh6B,GAEnBzJ,qBAAqB2gB,EAAOuR,EAAYza,EAAOJ,GAC3C,IAAIoG,EAAQ+J,GAAgB7G,GAC5B,IAAI8jB,EAA4B/tB,KAAGC,aAAa+pB,GAAmC,SAC/EgE,EAA2BhuB,KAAGC,aAAagqB,GAAiB,SAC5D1iB,EAAS,GACb,GAAIiU,EACA,IAAK,IAAIja,KAAUljB,GAAS,CACxB,IAAI4vC,EAAwB7jB,GAAYoR,EAAYhwB,GAAesB,eACnE,GAAImhC,GAAyBA,EAAsB1sB,GAAS,CACxD,IAAItI,EAAQ,GACRi1B,EAAajV,GAA0BhP,EAAO,CAC9CxP,GAAI+gB,EAAW/gB,GACfgK,MAAO,CAAC,CACJ1R,KAAMxC,GAAS9L,UACfukB,UAAWiQ,OAGfiV,GAAcA,EAAWl1B,QACzBk1B,EAAW34B,IAAI,CAAC1a,EAAGszC,KACf,IAAIrC,EAAW,YAAcqC,EAC7B,OAAQ/jB,GAAYvvB,EAAG2Q,GAAexO,gBAClC,KAAK2kB,GAAelW,eAEhB,GADIohC,EAAOziB,GAAYvvB,EAAG2Q,GAAeC,gBAC/B,CACN,IAAIy5B,EAAWjM,GAAqBlS,EAAO8lB,EAAK5qB,GAAwBG,OAWxE,IAAIb,EAVU0X,GAA0BhP,EAAO,CAC3CxP,GAAI+gB,EAAW/gB,GACfgK,MAAO,CAAC,CACJ1R,KAAMxC,GAAS9L,UACfukB,UAAWiQ,IACZ,CACClmB,KAAMxC,GAASmB,iBACfsX,UAAWiQ,OAGE9J,KAAK7f,GAAKA,GAC/B,GAAIiS,EAAQ,CAER,GADkB6I,GAAY7I,EAAQ/V,GAAe2C,aACpC,CACb,IAAIigC,EAAYvB,EAAK5qB,GAAwBK,WACzC+rB,EAAYxB,EAAK5qB,GAAwBM,WAC7CtJ,EAAM+a,KAAK,CACP9S,SAAU0B,GAAaorB,EAA0B,CAC7ClC,WACAH,eAAgByC,EAAY,KAAO,GACnCE,cAAeD,EAAY,KAAO,GAClCE,aAAcnkB,GAAYmkB,EAAc/iC,GAAe5L,UACvDtE,SAAU8uB,GAAY8a,EAAU15B,GAAe5L,YAEnDksC,eAKhB,MACJ,KAAKnqB,GAAejW,4BAChB,IAAImhC,EACJ,GADIA,EAAOziB,GAAYvvB,EAAG2Q,GAAeE,6BAC/B,CACFw5B,EAAWjM,GAAqBlS,EAAO8lB,EAAK5qB,GAAwBE,wBAWxE,IAAIZ,EAVU0X,GAA0BhP,EAAO,CAC3CxP,GAAI+gB,EAAW/gB,GACfgK,MAAO,CAAC,CACJ1R,KAAMxC,GAAS9L,UACfukB,UAAWiQ,IACZ,CACClmB,KAAMxC,GAASmB,iBACfsX,UAAWiQ,OAGE9J,KAAK7f,GAAKA,GAC/B,GAAIiS,EAAQ,CACR,IAAI8X,EAAcjP,GAAY7I,EAAQ/V,GAAe2C,aACrD,GAAIkrB,EAAa,CACb,IAAIkV,EAAetV,GAAqBlS,EAAOsS,EAAYwT,EAAK5qB,GAAwBC,iBACxFjJ,EAAM+a,KAAK,CACPwa,QAASpkB,GAAYmkB,EAAc/iC,GAAe5L,UAClDshB,SAAU0B,GAAamrB,EAA2B,CAC9CjC,WACAyC,aAAcnkB,GAAYmkB,EAAc/iC,GAAe5L,UACvDtE,SAAU8uB,GAAY8a,EAAU15B,GAAe5L,YAEnDksC,eAKhB,MACJ,KAAKnqB,GAAeC,aAChB,IAAI6sB,EAAMrkB,GAAYvvB,EAAG2Q,GAAeG,sBACxC,GAAI8iC,EAAK,CACL,IAAIC,EAAOD,EAAIxsB,GAAwBG,MAEnCmoB,EAAkBtR,GAAqBlS,EAAO0nB,EAAIjjC,GAAe5M,cACrE,GAAI2rC,EAAiB,CACjB,IAAIqB,EAAWxhB,GAAYvvB,EAAG2Q,GAAe5L,WAAawqB,GAAYvvB,EAAG2Q,GAAe8C,UACpFpU,KAAU0xC,gBACVG,EAAoC/rB,KAAGC,aAAaypB,GAA8B,SAClFsC,EAAe9B,GAAoByE,iBAAiB,CACpDz0C,OACA2wC,kBAAmB4D,EAAIjjC,GAAeO,mBACtC0+B,gBAAiBrgB,GAAYmgB,EAAiB/+B,GAAe5L,YAE7DsrC,EAAiDjS,GAAqBlS,EAAO0nB,EAAIxsB,GAAwBO,eAC7G,IAAIipB,EAAoB,CACpBlqB,SACA3mB,SAAmB,UAAT8zC,EAAmB,QAAU,SAAS/+B,cAChDg8B,eAAgBvhB,GAAY8gB,EAAgD1/B,GAAe5L,UAC3F+gB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,WAAawqB,GAAYzJ,EAAOnV,GAAe8C,UACxFs9B,WACAM,sBAAuBhyC,EACvB2xC,cAAeG,GAEnB,IAAI1a,EAAO1O,GAAampB,EAAmCN,GAE3DxyB,EAAM+a,KAAK,CACP8X,eAAgBL,EAAkBlqB,SAASkqB,EAAkB9qB,QAAQ8qB,EAAkBG,WACvF1qB,SAAUoQ,SAStC/J,EAAOhG,GAAUtI,GAI7B,OAAOsO,EAGXje,sBAAsB2P,GAIlB,OAAO21B,GAHK31B,EAAM1D,IAAIjG,IACVA,GAAKA,EAAEm9B,OAASn9B,EAAEm9B,OAAOzzB,OAAS,IAAM1J,GAAKA,EAAEw9B,IAAMx9B,EAAEw9B,IAAI9zB,OAAS,KAIpF1P,gCAAgCyd,EAAOyU,EAAYja,EAAQR,EAAOJ,GAC9D,KAAK6a,GAAeja,GAAWR,GAAUJ,GACrC,MAAO,GAGX,IAAI1H,EAAQixB,GAAoB2E,2BAA2B9nB,EAAOyU,EAAYja,EAAQR,EAAOJ,GACzFmuB,EAAQ5E,GAAoB6E,eAAe91B,GAC3C+1B,EAAmBhvB,KAAGC,aAAaspB,GAAoB,SASvDlQ,EAAcjP,GARDuG,GAAiB,CAC9BlW,GAAI+gB,EAAW/gB,GACfgK,MAAO,CAAC,CACJ1R,KAAMxC,GAASmB,iBACfsX,UAAWiQ,OAIuBztB,GAAe2C,aAkJzD,OAhJU2gC,EAAMv5B,IAAK05B,IACjB,IAAIjzC,EAAQ,GACRmsB,EAAa,GACb+mB,GAAa,EAkIjB,OAjIAD,EAAM15B,IAAI,CAAC45B,EAAOhB,KACd,IAEIiB,EAFAC,EAAQp2B,EAAMk1B,GAGlB,OAFAe,EAAaA,GAAcG,EAAM5C,OAAOzzB,OAASm2B,EAEzCE,EAAMt8B,MACV,KAAK4O,GAAejW,4BAChB,GAAI2jC,EAAMpoB,SACNooB,EAAMpoB,QAAQhF,GAAwBG,OACtCitB,EAAMpoB,QAAQhF,GAAwBI,OACtCgX,GACAA,EAAYgW,EAAMpoB,QAAQhF,GAAwBG,QAClDiX,EAAYgW,EAAMpoB,QAAQhF,GAAwBI,QAClDgtB,EAAMpoB,QAAQhF,GAAwBG,QAAUitB,EAAMpoB,QAAQhF,GAAwBI,MAAO,CAC7F,IAAIitB,EAAYD,EAAMpoB,QAAQhF,GAAwBI,MACtD,OAAQgtB,EAAMpoB,QAAQhF,GAAwBI,OAC1C,KAAKzF,GAAqBQ,UACtB,KAAM,2BAEd,GAAIkyB,EAAW,CACX,IAIIpuB,EAJAquB,EAAe,KACdF,EAAMpoB,QAAQhF,GAAwBK,aACvCitB,EAAeF,EAAMpoB,QAAQhF,GAAwBO,eAGzD,IAAI8iB,EAAW+J,EAAMpoB,QAAQhF,GAAwBG,MAErD,OAAQkjB,GACJ,KAAK1oB,GAAqBO,MAC1B,KAAKP,GAAqBrV,MAC1B,KAAKqV,GAAqBK,OACtBiE,EAAW0B,GAAaosB,EAAkB,CACtCruB,MAAO2kB,EACPhqC,aAAci0C,IACd30C,MAAQ,YAEZoB,EAAMg4B,KAAK,CACPh4B,MAAOkzC,EAAa,GAAKhuB,EACzBnO,KAAMs8B,EAAMt8B,OAEhBoV,EAAW6L,KAAK,CACZ14B,aAAci0C,IACd30C,SAAU00C,SAEd,MACJ,KAAK1yB,GAAqBQ,UACtB,KAAM,2BACV,QACI,KAAM,gCAItB,MACJ,KAAKuE,GAAelW,eAEhB,GAAI4jC,EAAMpoB,SACNooB,EAAMpoB,QAAQhF,GAAwBG,OACtCitB,EAAMpoB,QAAQhF,GAAwBI,OACtCgtB,EAAMpoB,QAAQhF,GAAwBG,QAAUitB,EAAMpoB,QAAQhF,GAAwBI,MAAO,CAC7F,IAAIitB,EAAYD,EAAMpoB,QAAQhF,GAAwBI,MACtD,OAAQgtB,EAAMpoB,QAAQhF,GAAwBI,OAC1C,KAAKzF,GAAqBQ,UACtB,KAAM,2BAGd,GAAIkyB,EAAW,CACX,IAIIpuB,EAJAquB,EAAe,KACdF,EAAMpoB,QAAQhF,GAAwBK,aACvCitB,EAAeF,EAAMpoB,QAAQhF,GAAwBO,eAGzD,IAAI8iB,EAAW+J,EAAMpoB,QAAQhF,GAAwBG,MACrD,OAAQkjB,GACJ,KAAK1oB,GAAqBO,MAC1B,KAAKP,GAAqBrV,MAC1B,KAAKqV,GAAqBK,OACtBiE,EAAW0B,GAAaosB,EAAkB,CACtCruB,MAAO2kB,EACPhqC,aAAci0C,IACd30C,MAAQs0C,KAA4BI,OAAf,YAEzBtzC,EAAMg4B,KAAK,CACPh4B,MAAOklB,EACPnO,KAAM4O,GAAelW,iBAEzB0c,EAAW6L,KAAK,CACZ14B,aAAci0C,IACd30C,SAAU00C,SAEd,MACJ,KAAK1yB,GAAqBQ,UACtB,KAAM,2BACV,QACI,KAAM,gCAItB,MACJ,QACIgyB,EAAmC,UAAdC,EAAM5B,IAC3B,IAAI7yC,EAAQy0C,EAAM5C,OAAOzzB,QAAUm2B,EAAQE,EAAMvC,IAAIqC,EAAQE,EAAM5C,OAAOzzB,QAAUq2B,EAAM5C,OAAO0C,GAC7F7d,EAAO1O,GAAaosB,EAAkB,CACtCruB,MAAOyuB,EAAqB,QAAU,QACtC9zC,aAAc+zC,EAAM/zC,WACpBV,MAAOA,IAEPw0C,GACApzC,EAAMg4B,KAAK,CAAEh4B,MAAOs1B,EAAMve,KAAM6J,GAAqBrV,QACrD4gB,EAAW6L,KAAK,CACZh4B,MAAO,CACHV,SAAU+zC,EAAM/zC,SAChBV,SAEJmY,KAAM6J,GAAqBrV,UAI/BvL,EAAMg4B,KAAK,CAAEh4B,MAAOs1B,EAAMve,KAAM6J,GAAqBO,QACrDgL,EAAW6L,KAAK,CACZh4B,MAAO,CACHV,SAAU+zC,EAAM/zC,SAChBV,SAEJmY,KAAM6J,GAAqBO,YAOxC,CACHnhB,MAAO,IACAA,GAEPmsB,WAAY,IACLA,GAEPqnB,cAAeN,KAM3B5lC,yBAAyB2gB,EAAOuR,EAAYza,EAAOJ,GAC/C,IAAIoG,EAAQ+J,GAAgB7G,GAC5B,IAAIQ,EAAS,KACTglB,EAAa,KACbC,EAAwB,GACxBC,EAAW3vB,KAAGC,aAAaopB,GAAW,SACtC9hB,EAAS,GACT6T,EAAaI,EAAa7K,GAAiB,CAC3ClW,GAAI+gB,EAAW/gB,GACfgK,MAAO,CAAC,CACJ1R,KAAMxC,GAASmB,iBACfsX,UAAWiQ,OAEd,KAKL,OAJAxO,EAAS2O,GAAkBrS,EAAOqU,EAAYxe,GAAqBK,QACnEwyB,EAAarW,GAAkBrS,EAAOqU,EAAYxe,GAAqBU,iBACvEoyB,EAAwB1vB,KAAGC,aAAa,8DAA+D,SAE/FmK,GAAYgR,EAAY5vB,GAAe0D,eAC3C,KAAKpK,GAAc2W,uCACfk0B,EAAW3vB,KAAGC,aAAa,+EAAgF,SAC3GyvB,EAAwB9sB,GAAa8sB,EAAuB,CACxDE,SAAUzW,GAAY1O,GACtBikB,KAAM9xB,GAAqBK,OAC3B4yB,SAAU1W,GAAYxY,GACtBmvB,KAAMlzB,GAAqBrV,QAE/B,MACJ,KAAKzC,GAAc+W,yCACf8zB,EAAW3vB,KAAGC,aAAa,iFAAkF,SAC7GyvB,EAAwB9sB,GAAa8sB,EAAuB,CACxDE,SAAUzW,GAAY1O,GACtBikB,KAAM9xB,GAAqBK,OAC3B4yB,SAAU1W,GAAYpY,GACtB+uB,KAAMlzB,GAAqBO,QAIvC,GAAIie,EACA,IAAK,IAAI7Z,KAAUljB,GAAS,CACxB,IAAI4vC,EAAwB7jB,GAAYoR,EAAYhwB,GAAesB,eACnE,GAAI0uB,GAAcyS,GAAyBA,EAAsB1sB,GAAS,CACtE,IAAI6O,EAAM8Z,GAAoB6F,yBAAyBhpB,EAAOyU,EAAYja,EAAQR,EAAOJ,GAEzFyP,EAAMA,EAAI7a,IAAI,CAAC1a,EAAGm1C,KACd,IAAIh0C,MAAEA,EAAFwzC,cAASA,EAATS,UAAwBA,EAAY,IAAOp1C,EAE/C,OAAO+nB,GAAaA,GAAa+sB,EAAU,CACvCD,0BACA,CACIQ,qBAAsBl0C,EAAMwT,OAAOF,GAAKA,EAAEyD,OAAS6J,GAAqBO,OAAO5H,IAAI1a,GAAKA,EAAEmB,OAAO4T,KAAKwI,IACtG+3B,qBAAsBn0C,EAAMwT,OAAOF,GAAKA,EAAEyD,OAAS6J,GAAqBrV,OAAOgO,IAAI1a,GAAKA,EAAEmB,OAAO4T,KAAKwI,IACtGg4B,sBAAuBp0C,EAAMwT,OAAOF,GAAKA,EAAEyD,OAAS6J,GAAqBK,QAAQ1H,IAAI1a,GAAKA,EAAEmB,OAAO4T,KAAKwI,IACxGi4B,+BAAgCr0C,EAAMwT,OAAOF,GAAKA,EAAEyD,OAAS4O,GAAelW,gBAAgB8J,IAAI1a,GAAKA,EAAEmB,OAAO4T,KAAKwI,IACnHk4B,oCAAqCt0C,EAAMwT,OAAOF,GAAKA,EAAEyD,OAAS4O,GAAejW,6BAA6B6J,IAAI1a,GAAKA,EAAEmB,OAAO4T,KAAKwI,IACrI4I,WAAYmY,GAAYpY,GACxBJ,MAAOwY,GAAYxY,GACnB4vB,aAAcpX,GAAYsW,GAE1BhlB,OAAQ0O,GAAY1O,GACpBlJ,SACAyB,SAAUmW,GAAYpY,MAAUoY,GAAYxY,MAAUY,KAAUyuB,IAChEzoB,OAAQioB,EAAgB,OAAS,QACjC5uB,cAAeuY,GAAYqC,GAAcja,KACtC0uB,MAGf1oB,EAAS,IAAIA,KAAW6I,IAIpC,OAAO7I,EA4BXje,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAIod,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCipC,EAAcrmB,GAAYF,EAAO5iB,GAAUU,YAC3C0oC,EAASpM,EAAO70B,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAC1DwhC,EAAYjH,GAAa7Q,GAEzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtE8pB,EAAgB1wB,KAAGC,aAAaqpB,GAAY,SAC5CqH,EAAuB3wB,KAAGC,aAAaupB,GAAuB,SAC9DoH,EAA4B5wB,KAAGC,aAAa6pB,GAAkB,SAC9D+G,EAA8B7wB,KAAGC,aAAa8pB,GAA+B,SAC7E+G,EAAqB9wB,KAAGC,aAAa2pB,GAAqB,SAC1DmH,EAAsB/wB,KAAGC,aAAa4pB,GAA0B,SAChEtiB,EAAS,GAyHb,OAvHAkpB,EAAOl7B,IAAIwL,IAEP,IAAIiwB,EAAoCJ,EACpCK,EAAsBN,EACtBO,EAAiBR,EACjBS,EAAwB,GACxBC,EAAmB,GACnBC,EAA2B,GAC3BC,EAAW,GACfjN,EAAO9uB,IAAIoL,IACP,IAAI4wB,EAA0Bf,EAAYhhC,OAAOgsB,GAAc0O,GAAoBsH,kBAAkBhW,EAAYza,EAAOJ,IACxH,IAAK4wB,IAA4BA,EAAwBv4B,OACrD,OAEJ,IAAIy4B,EAAkB,GAClBC,EAAsB,GAC1BH,EAAwBh8B,IAAIo8B,IACxB,GAAIA,EAAwB,CACxBD,EAAoB1d,KAAK5J,GAAYunB,EAAwBnmC,GAAe5L,WAC5E,IAAI0xB,EAAO4Y,GAAoB0H,cAAc3nB,EAAO0nB,EAAwB5wB,EAAOJ,GAC/EkxB,EAAW3H,GAAoB4H,kBAAkB7nB,EAAO0nB,EAAwB5wB,EAAOJ,GAC3F8wB,EAAgBzd,KAAK1C,GACrB+f,EAAyBrd,QAAQ6d,MAGzCJ,EAAgBl8B,IAAI,CAACw8B,EAAO5D,KACxB,IAAK,IAAI6D,KAAWD,EAAO,CACvB,IAAI94B,EAAQ84B,EAAMC,GAClB/4B,EAAM1D,IAAI1a,IACFA,GAAKA,EAAE2zC,SACP8C,EAAStd,KAAKn5B,KAGtB,IAAIo3C,EAAoBnB,EACpBoB,EAA6BrB,EACjCoB,EAAoBrvB,GAAaqvB,EAAmB,CAChDtxB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzChF,MAAQ,OACRomB,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9CghB,cAAe8wB,EAAoBvD,GAAS6D,EAC5CjxB,MAAQ,QACRQ,OAAQywB,EACR/4B,MAAOA,EAAM1D,IAAIvb,GAAK6pC,GAAMiF,GAAK,GAAK9uC,EAAEknB,UAAUtR,KAAK,IACvDuiC,YAAatO,GAAMiF,GAAK,eAAiB7vB,EAAM1D,IAAIvb,GAAKA,EAAE8xC,UAAUl8B,KAAK,aAE7EsiC,EAA6BtvB,GAAasvB,EAA4B,CAClEvxB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzCghB,cAAe8wB,EAAoBvD,GAAS6D,EAC5Cp3C,MAAQ,OACRomB,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9CmhB,MAAQ,QACRQ,OAAQywB,IAEZZ,EAAiBpd,KAAKke,GACtBf,EAAsBnd,KAAKie,QAIpCriC,KAAKi0B,IACRyN,EAAWA,EAAS/7B,IAAI1a,GAAKA,EAAE2zC,SAAS3mB,OAAOvY,GAAKA,GAAGiG,IAAI1a,GAChD+nB,GAAamuB,EAAqB,CACrCvC,QAAS3zC,KAEd+U,KAAKi0B,IACRmN,EAAoCpuB,GAAaouB,EAAmC,CAChFhwB,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9C0xC,WACAc,QAASjB,EAAsBvhC,KAAKi0B,GAAMA,MAE9CoN,EAAsBruB,GAAaquB,EAAqB,CACpDjwB,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9CwyC,QAAShB,EAAiBxhC,KAAKi0B,GAAMA,MAEzCtc,EAAO6C,GAAYrJ,EAAOvV,GAAe5L,WAAa,CAClD1F,mBAAoBkwB,GAAYrJ,EAAOvV,GAAe5L,YACtDyyC,oBAAqBjoB,GAAYrJ,EAAOvV,GAAe5L,iBACvD0yC,qBAAsBloB,GAAYrJ,EAAOvV,GAAe5L,YACxDshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU8vB,EACV1P,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAU6G,gBACtBwf,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAUgO,YACzB+lC,GAAYA,EAASt4B,UAAY4K,IAAYrmB,GAAU6N,cAAgB,QACpEwY,IAAYrmB,GAAUmM,aAAa8F,OAAOF,GAAKA,GACtDsU,YACAyd,MAAO9jC,GAAU0D,cAErBkgB,UAAWigB,GAAmB2C,SAAS,CACnC7iB,SAAU+vB,EACV3P,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUgK,SAE7Bqc,YACAyd,MAAO9jC,GAAUgO,YAErByX,KAAMoe,GAAmB2C,SAAS,CAC9B7iB,SAAU0B,GAAasuB,EAAgB,CACnCqB,MAAOlB,EAAyBzhC,KAAKwI,IACrCle,mBAAoBkwB,GAAYrJ,EAAOvV,GAAe5L,cAE1D0hC,OAAQ,IACDj3B,MACAD,MACAwZ,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAU0D,iBACtB2iB,IAAYrmB,GAAU6G,gBACtBwf,IAAYrmB,GAAUmM,eACtBka,IAAYrmB,GAAUgK,SAE7Bqc,YACAyd,MAAO9jC,GAAU4N,WAKtBoc,GAGf,MAEMsc,GAAO,KAEP/B,GAAO,MAEb,SAASgH,GAAK9uC,GACV,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EC33BX,MAAMoiB,GAAmB,kDACnBC,GAAkB,kDAClBnJ,GAAa,kCACboJ,GAAsB,qDAEb,MAAMC,GACjBrpC,sCAAsCspC,GAClC,IAAIC,EAAQD,EAAwBr9B,IAAIjG,GAC7BjV,OAAOib,KAAKhG,EAAEm9B,OAAOxzB,OAAOD,QAIvC,OADkB25B,GAAwB/D,UAAUiE,GAGxDvpC,iBAAiBupC,EAAOpU,EAAI,GACxB,IAAIqU,EAAU,GAEd,GAAIrU,EAAIoU,EAAM75B,OACV,IAAK,IAAIrf,EAAI,EAAGA,EAAIk5C,EAAMpU,GAAI9kC,IAAK,CAC/B,IAAIo5C,EAAOJ,GAAwB/D,UAAUiE,EAAOpU,EAAI,GACpDnN,EAAO,CAAC33B,GACRo5C,EAAK/5B,OACL+5B,EAAKx9B,IAAI9a,IACLq4C,EAAQ9e,KAAK,IAAI1C,KAAS72B,MAI9Bq4C,EAAQ9e,KAAK1C,GAGzB,OAAOwhB,EAEXxpC,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAQ,OAEZ,OAAOA,EAEX9mB,+BAA+Byd,EAAOisB,GAElC,IAAIryB,EAAQyJ,GAAY4oB,EAAexnC,GAAeU,gBAEtD,IAAIogB,EAAsB2M,GADV7O,GAAY4oB,EAAexnC,GAAepD,YAE1D,IAAIwqC,EAA0B,GA6F9B,OA5FAv4C,OAAOib,KAAKgX,GAAqB/W,IAAIja,IACjC,IAAI8vC,EAAenS,GAAqBlS,EAAOzrB,GAC3C23C,EAAc3mB,EAAoBhxB,GAEtC,OAAOjB,OAAOib,KAAK29B,EAAY1qB,YAAYhT,IAAI29B,IAC3C,IAAI3qB,EAAa0qB,EAAY1qB,WAAW2qB,GACpC3oB,EAAO0O,GAAqBlS,EAAOwB,EAAWgC,MAC9C4oB,EAA2B,GAC/B,GAAI5oB,EACA,OAAQH,GAAYG,EAAM/e,GAAe8C,WACrC,KAAKjH,GAAUqB,cACX,GAAI6f,GAAcA,EAAW2f,UAAW,CACpC,IAAI5W,EAAO,CAAE8hB,MAAO,aACpBD,EAA2B94C,OAAOib,KAAKiT,EAAW2f,WAAW3yB,IAAI89B,IAC7D,GAAI9qB,EAAW2f,UAAUmL,GAErB,OADA/hB,MAAS+hB,QAAYjpB,GAAYG,EAAM/e,GAAe5L,aAAasQ,GAAamjC,KACzE/hB,MAAS+hB,OAErB7jC,OAAOF,GAAKA,GAEfsjC,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ,CAAExzB,MAAOqY,EAAM5X,QAAS,CAAE05B,OAAO,MAE7CD,4CACdA,EAAyBvjC,KAAK,uBAGpB,MACJ,KAAKvI,GAAUzI,YACX,GAAI2pB,GAAcA,EAAW+qB,YAAa,CACtC,IACIC,EAAWnpB,GADA6O,GAAqBlS,EAAOwB,EAAWgC,MACjB/e,GAAe5L,UACpDuzC,EAA2B94C,OAAOib,KAAKiT,EAAW+qB,aAAa/9B,IAAI89B,IAC/D,GAAI9qB,EAAW+qB,YAAYD,GACvB,SAAUE,KAAYrjC,GAAamjC,OAExC7jC,OAAOF,GAAKA,GAEfsjC,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ,CAAExzB,MAAO,IAAIk6B,GAA2Bz5B,QAAS,CAAE05B,OAAO,MAEtED,gDACVA,EAAyBvjC,KAAK,4BAMhCgJ,GAAgB2P,EAAWxV,OAC3B6/B,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ7zB,GAAgB2P,EAAWxV,YAKrC4/B,GAAwBa,+BAA+BZ,GAE7Cr9B,IAAI,CAACk+B,EAAQtF,KACjC,IAAIuF,GAAc,EACdC,EAAsB,GACtBC,EAAeH,EAAOl+B,IAAI,CAAC+T,EAAGuqB,KAC9B,IAAIC,EAAkBz5C,OAAOoyC,OAAOmG,EAAwBiB,GAAQpH,OAAOxzB,OAAOqQ,GAC9E+lB,EAAQh1C,OAAOib,KAAKs9B,EAAwBiB,GAAQpH,OAAOxzB,OAAOqQ,GACrC,mBAArBwqB,EACRA,EAAkBA,IAGdlB,EAAwBiB,IAAWjB,EAAwBiB,GAAQpH,QAAUmG,EAAwBiB,GAAQpH,OAAO/yB,UAAYk5B,EAAwBiB,GAAQpH,OAAO/yB,QAAQ21B,KAC/KA,EAAQ,MAGhBqE,EAAcA,GAAyC,OAAzBrE,GAAS,EAAC,IAAQ,GAChD,IAAI0E,EAAWpB,GAAwB7J,KAAK,gBAAkB8J,EAAwBiB,GAAQv4C,cAAcw4C,KAM5G,OALAH,EAAoB3f,KAAK,CACrBggB,eAAgBD,EAChBz4C,SAAUs3C,EAAwBiB,GAAQv4C,SAC1CyX,KAAMqX,GAAY6O,GAAqBlS,EAAOpG,GAAQnV,GAAe5L,YAElEm0C,IACRnkC,KAAKwI,IAQR,MAPW,CACPo3B,cAAekE,EACfC,sBACAK,eAAgBJ,EAChB7gC,KAAMqX,GAAY6O,GAAqBlS,EAAOpG,GAAQnV,GAAe5L,aAOjF0J,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KACtEG,EAAQ+T,GAAa7Q,GACrB1C,EAAS,GAETlD,EAAQ8F,GAAYF,EAAO5iB,GAAUe,WACrC6rC,EAAoBj0B,KAAGC,aAAauyB,GAAkB,SACtD0B,EAAuBl0B,KAAGC,aAAayyB,GAAqB,SAC5DyB,EAAmBn0B,KAAGC,aAAawyB,GAAiB,SACpD2B,EAAap0B,KAAGC,aAAaqpB,GAAY,SA6J7C,OA5JAjlB,EAAM9O,IAAIgV,IACMH,GAAYG,EAAM/e,GAAekB,gBAA7C,IACIiU,EAAQyJ,GAAYG,EAAM/e,GAAeU,gBACzCq3B,EAAYtK,GAAqBlS,EAAOpG,GACxC0zB,EAAQjqB,GAAYG,EAAM/e,GAAee,mBACzC+nC,EAAYrb,GAAqBlS,EAAOstB,GAE5C,IAAI/nB,EAAsB2M,GADV7O,GAAYG,EAAM/e,GAAepD,YAEjD,IAAIwqC,EAA0B,GAC9B,IAAI2B,EAA+Bl6C,OAAOib,KAAKgX,GAAqB/W,IAAIja,IACpE,IAAI8vC,EAAenS,GAAqBlS,EAAOzrB,GAC3C23C,EAAc3mB,EAAoBhxB,GAEtC,OAAOjB,OAAOib,KAAK29B,EAAY1qB,YAAYhT,IAAI29B,IAC3C,IAAI3qB,EAAa0qB,EAAY1qB,WAAW2qB,GACpC3oB,EAAO0O,GAAqBlS,EAAOwB,EAAWgC,MAC9C4oB,EAA2B,GAC/B,GAAI5oB,EACA,OAAQH,GAAYG,EAAM/e,GAAe8C,WACrC,KAAKjH,GAAUqB,cACX,GAAI6f,GAAcA,EAAW2f,UAAW,CACpC,IAAI5W,EAAO,CAAE8hB,MAAO,aACpBD,EAA2B94C,OAAOib,KAAKiT,EAAW2f,WAAW3yB,IAAI89B,IAC7D,GAAI9qB,EAAW2f,UAAUmL,GAErB,OADA/hB,MAAS+hB,QAAYjpB,GAAYG,EAAM/e,GAAe5L,aAAasQ,GAAamjC,KACzE/hB,MAAS+hB,OAErB7jC,OAAOF,GAAKA,GAEfsjC,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ,CAAExzB,MAAOqY,EAAM5X,QAAS,CAAE05B,OAAO,MAE7CD,4CAClBA,EAAyBvjC,KAAK,uBAGhB,MACJ,KAAKvI,GAAUzI,YACX,GAAI2pB,GAAcA,EAAW+qB,YAAa,CACtC,IACIC,EAAWnpB,GADA6O,GAAqBlS,EAAOwB,EAAWgC,MACjB/e,GAAe5L,UACpDuzC,EAA2B94C,OAAOib,KAAKiT,EAAW+qB,aAAa/9B,IAAI89B,IAC/D,GAAI9qB,EAAW+qB,YAAYD,GACvB,SAAUE,KAAYrjC,GAAamjC,OAExC7jC,OAAOF,GAAKA,GAEfsjC,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ,CAAExzB,MAAO,IAAIk6B,GAA2Bz5B,QAAS,CAAE05B,OAAO,MAEtED,gDACdA,EAAyBvjC,KAAK,4BAiBhC,OAXIgJ,GAAgB2P,EAAWxV,OAC3B6/B,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ7zB,GAAgB2P,EAAWxV,QAGzB6P,GAAasxB,EAAsB,CACjDM,eAAgBjsB,EAAWxN,KAAK1C,GAAqBC,QACrD66B,2BACAsB,mBAAoBrqB,GAAYghB,EAAc5/B,GAAe5L,cAE5CwY,KACtBxI,KAAK,MACTA,KAAK,IAGR,IAAI8kC,EAFU/B,GAAwBa,+BAA+BZ,GAE7Cr9B,IAAI,CAACk+B,EAAQtF,KACjC,IACIuF,GAAc,EACdE,EAAeH,EAAOl+B,IAAI,CAAC+T,EAAGuqB,KAC9B,IAAIC,EAAkBz5C,OAAOoyC,OAAOmG,EAAwBiB,GAAQpH,OAAOxzB,OAAOqQ,GAC9E+lB,EAAQh1C,OAAOib,KAAKs9B,EAAwBiB,GAAQpH,OAAOxzB,OAAOqQ,GAUtE,MATiC,mBAArBwqB,EACRA,EAAkBA,IAGdlB,EAAwBiB,IAAWjB,EAAwBiB,GAAQpH,QAAUmG,EAAwBiB,GAAQpH,OAAO/yB,UAAYk5B,EAAwBiB,GAAQpH,OAAO/yB,QAAQ21B,KAC/KA,EAAQ,MAGhBqE,EAAcA,GAAyC,OAAzBrE,GAAS,EAAC,IAAQ,GACzCsD,GAAwB7J,KAAK,YAAc8J,EAAwBiB,GAAQv4C,cAAcw4C,OACjGlkC,KAAKwI,IAYR,OAXWwK,GAAauxB,EAAkB,CACtCxzB,MAAOyJ,GAAYmZ,EAAW/3B,GAAe5L,UAC7C+0C,iBAAkBxG,IAClByG,qBAAsB,GACtBC,eAAgBnB,EAAc,OAAS,QACvCM,eAAgBJ,EAChBY,kBAAmBpqB,GAAYG,EAAM/e,GAAe5L,qBACpDuoB,WAAYosB,EACZxhC,KAAMqX,GAAY6O,GAAqBlS,EAAOpG,GAAQnV,GAAe5L,cAM7E,IAAIk1C,EAAclyB,GAAaqxB,EAAmB,CAC9CtzB,MAAOyJ,GAAYG,EAAM/e,GAAe5L,UACxCghB,cAAewJ,GAAYkqB,EAAW9oC,GAAe5L,UACrDuoB,WAAYosB,EACZxhC,KAAMqX,GAAY6O,GAAqBlS,EAAOpG,GAAQnV,GAAe5L,YAErEm1C,EAAenyB,GAAawxB,EAAY,CACxCl6C,KAAMkwB,GAAYG,EAAM/e,GAAe5L,UACvC2yC,MAAOmC,EAAU9kC,KAAKwI,MAG1B08B,EAAclyB,GAAaqxB,EAAmB,CAC1CtzB,MAAOyJ,GAAYG,EAAM/e,GAAe5L,UACxCghB,cAAewJ,GAAYkqB,EAAW9oC,GAAe5L,UACrDuoB,WAAYosB,EACZxhC,KAAMqX,GAAY6O,GAAqBlS,EAAOpG,GAAQnV,GAAe5L,YAKzE2nB,EAAO6C,GAAYG,EAAM/e,GAAe5L,WAAa,CACjD6a,GAAI2P,GAAYG,EAAM/e,GAAe5L,UACrC1F,QAASkwB,GAAYG,EAAM/e,GAAe5L,qBAC1CyyC,SAAUjoB,GAAYG,EAAM/e,GAAe5L,0BAC3CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU4zB,EACVxT,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU6G,gBACtBwf,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU8N,cAErB2X,KAAMoe,GAAmB2C,SAAS,CAC9B7iB,SAAU6zB,EACVzT,OAAQ,IACDj3B,MACAD,MACAwZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU8N,iBACtBuY,IAAYrmB,GAAU6G,gBACtBwf,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU4N,WAMtBoc,GCjTf,MAAMytB,GAAwC,kEACxCC,GAAkD,4EAClDC,GAA6C,oFAC7CC,GAAuD,8FACvDC,GAA8C,0FAC9CC,GAAsB,0EACtBC,GAAqB,8DACrBhM,GAAa,kCACJ,MAAMiM,GACjBjsC,6BAA6B+6B,GAEzB,IAAImR,EAAiCx1B,KAAGC,aAAam1B,GAA6C,SAalG,OAZoB/Q,EAAO9uB,IAAIoL,IAC3B,IAAI80B,EAAgCD,EAChCE,EAAYtrB,GAAYzJ,EAAOnV,GAAe5L,UAOlD,OANUgjB,GAAa6yB,EAA+B,CAClD90B,MAAO+0B,EACPC,iBAAoBD,EAAUrlC,cAC9BulC,cAAiBF,EAAU/lC,gBAGlBk0B,KAKrBv6B,4BAA4B2gB,GACxB,IAAIoa,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCkpC,EAASpM,EAAO70B,OAAOmR,GAASyJ,GAAYzJ,EAAOnV,GAAejL,UAClEs1C,EAAsB71B,KAAGC,aAAai1B,GAA4C,SAElF3tB,EAAS,GACTuuB,EAAiB,GAoBrB,OAnBAzR,EAAO9uB,IAAIoL,IACPm1B,EAAe9hB,KAAK8U,GAAK,mBAAqB1e,GAAYzJ,EAAOnV,GAAe5L,sBAAwBikC,MAE5Gtc,EAAOyM,2FACb8hB,EAAelmC,KAAK,oBAGd6gC,EAAOl7B,IAAIwL,IACPsjB,EAAO9uB,IAAIoL,IACP,IAAIyP,EAAMxN,GAAaizB,EAAqB,CACxCl1B,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzCg2C,cAAexrB,GAAYzJ,EAAOnV,GAAe5L,UAAU+P,cAC3DqR,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9Cm2C,mBAAoB3rB,GAAYrJ,EAAOvV,GAAe5L,UAAU+P,gBAEpE4X,EAAOyM,KAAK5D,OAIb7I,EAAO3X,KAAK,IAEvBtG,qCAAqC2gB,GACjC,IAAIoa,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCkpC,EAASpM,EAAO70B,OAAOmR,GAASyJ,GAAYzJ,EAAOnV,GAAejL,UAClEs1C,EAAsB71B,KAAGC,aAAak1B,GAAsD,SAE5F5tB,EAAS,GAab,OAZAkpB,EAAOl7B,IAAIwL,IACPsjB,EAAO9uB,IAAIoL,IACP,IAAIyP,EAAMxN,GAAaizB,EAAqB,CACxCl1B,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzCg2C,cAAexrB,GAAYzJ,EAAOnV,GAAe5L,UAAU+P,cAC3DqR,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9Cm2C,mBAAoB3rB,GAAYrJ,EAAOvV,GAAe5L,UAAU+P,gBAEpE4X,EAAOyM,KAAK5D,OAIb7I,EAAO3X,KAAK,IAEvBtG,yBAAyB+6B,GACrB,IAAI9c,EAAS,GAYb,OAXAA,EAAOyM,KAAK8U,GAAK,GAAM,iDAAkDjF,IACzEQ,EAAO9uB,IAAIoL,IACP,IAAI4nB,EAAYne,GAAYzJ,EAAOnV,GAAe5L,UAClD2nB,EAAOyM,KAAK8U,GAAK,MAAQP,EAAU54B,0DAA0D44B,SAAmB1E,IAChHtc,EAAOyM,KAAK8U,GAAK,MAAQP,EAAU54B,gEAAgE44B,eAAyB1E,IACxHzZ,GAAYzJ,EAAOnV,GAAejL,WAClCgnB,EAAOyM,KAAK8U,GAAK,MAAQP,EAAU54B,kEAAkE44B,iBAA2B1E,IAChItc,EAAOyM,KAAK8U,GAAK,MAAQP,EAAU54B,gDAAgD44B,gBAA0B1E,OAI9Gtc,EAAO3X,KAAK,IAEvBtG,kCAAkC+6B,GAC9B,IAAI9c,EAAS,GAcb,OAZAA,EAAOyM,KAAK8U,GAAK,GAAM,+BAAgCjF,IACvDQ,EAAO9uB,IAAIoL,IACP,IAAI4nB,EAAYne,GAAYzJ,EAAOnV,GAAe5L,UAClD2nB,EAAOyM,KAAK8U,GAAK,yBAA2BP,MAAcA,EAAU54B,wBAA0Bk0B,IAC9Ftc,EAAOyM,KAAK8U,GAAK,yBAA2BP,YAAoBA,EAAU54B,8BAAgCk0B,IACtGzZ,GAAYzJ,EAAOnV,GAAejL,WAClCgnB,EAAOyM,KAAK8U,GAAK,yBAA2BP,cAAsBA,EAAU54B,gCAAkCk0B,IAC9Gtc,EAAOyM,KAAK8U,GAAK,cAAgBP,aAAqBA,EAAU54B,yBAA2Bk0B,OAK5Ftc,EAAO3X,KAAK,IAEvBtG,4BAA4B2gB,GACxB,IAAIlD,EAAQ+T,GAAa7Q,GACrBtH,EAAYwH,GAAYF,EAAO5iB,GAAUuB,QACzCwnB,EAAM,GAEN4lB,EAAoBh2B,KAAGC,aAAao1B,GAAqB,SACzDY,EAAoBj2B,KAAGC,aAAaq1B,GAAoB,SAE5DllB,EAAMzN,EAAUpN,IAAI,CAAC2c,EAAMic,KACvB,IAAI9U,EAAcjP,GAAY8H,EAAM1mB,GAAe2C,aACtCic,GAAY8H,EAAM1mB,GAAemD,YAE9C,GAAI0qB,EACA,KAAI6c,EAAgBjd,GAAqBlS,EAAOsS,EAAYzc,GAAqBQ,YAC7EmmB,EAAYtK,GAAqBlS,EAAOsS,EAAYzc,GAAqBrV,QAC1D0xB,GAAqBlS,EAAOsS,EAAYzc,GAAqBS,OAC3D4b,GAAqBlS,EAAOsS,EAAYzc,GAAqB7U,aAKtF,GAAIw7B,GAAa2S,GAAiBhkB,EAC9B,OAAOtP,GAAaozB,EAAmB,CACnCr1B,MAAOyJ,GAAYmZ,EAAW/3B,GAAe5L,UAC7CohB,WAAYoJ,GAAY8rB,EAAe1qC,GAAe5L,UACtDghB,cAAewJ,GAAY8H,EAAM1mB,GAAe5L,UAChD+0C,aAAcvqB,GAAY8H,EAAM1mB,GAAe5L,oBAGxD4P,OAAOF,GAAKA,GAAGM,KAAKwI,IACvB,IAAI+9B,EAAa,GAkDjB,OAjDAxzB,EAAUpN,IAAI,CAAC2c,EAAMic,KACjB,IAAI9U,EAAcjP,GAAY8H,EAAM1mB,GAAe2C,aAC/CoT,EAAS6I,GAAY8H,EAAM1mB,GAAemD,YAE9C,GAAI0qB,EAAa,CACb,IAAI6c,EAAgBjd,GAAqBlS,EAAOsS,EAAYzc,GAAqBQ,YAC7EmmB,EAAYtK,GAAqBlS,EAAOsS,EAAYzc,GAAqBrV,QACzE6uC,EAAiBnd,GAAqBlS,EAAOsS,EAAYzc,GAAqB7U,aAClF,GAAIgf,GAASqvB,GAAkB70B,GAAU20B,GAAiB3S,EAAW,CACjE,IAAIhb,EAAagtB,GAAoCc,sBAAsBpsB,EAAOiI,GAC9EokB,EAAiB,KACjB/tB,GAAcA,EAAWvP,SACzBs9B,EAAiB/tB,EAAWhT,IAAI+S,IACrB,CACHrP,MAAO05B,GAAwB4D,wBAAwBxvB,EAAOuB,GAC9DkuB,QAASpsB,GAAY9B,EAAW9c,GAAeU,kBAAoBmtB,EAAYzc,GAAqBrV,WAI5G+uC,GACA1H,GAAU0H,EAAe/gC,IAAIjG,GAAKA,EAAE2J,MAAMD,SAASzD,IAAI,CAAC05B,EAAOwH,KAC3D,IAAIC,EAAKJ,EAAe,GAAGr9B,MAAMg2B,EAAM,IACnC0H,EAAKL,EAAe,GAAGr9B,MAAMg2B,EAAM,IACnC2H,EAAmB,GACnBC,EAAmB,GAClBP,EAAe,GAAGE,SAKnBI,EAAmBh0B,GAAa+zB,EAAG3C,eAAgB,CAAErzB,MAAO,UAC5Dk2B,EAAmBj0B,GAAa8zB,EAAG1C,eAAgB,CAAErzB,MAAO,YAL5Di2B,EAAmBh0B,GAAa+zB,EAAG3C,eAAgB,CAAErzB,MAAO,UAC5Dk2B,EAAmBj0B,GAAa8zB,EAAG1C,eAAgB,CAAErzB,MAAO,WAOhEw1B,EAAWniB,KAAKpR,GAAaqzB,EAAmB,CAC5Ct1B,MAAOyJ,GAAYmZ,EAAW/3B,GAAe5L,UAC7CohB,WAAYoJ,GAAY8rB,EAAe1qC,GAAe5L,UACtDk3C,oBAAqBF,EACrBzG,qBAAsB0G,EACtBj2B,cAAewJ,GAAY8H,EAAM1mB,GAAe5L,UAChDm3C,cAAeL,EAAGlH,eAAiBmH,EAAGnH,eACtCmF,aAAcvqB,GAAY8H,EAAM1mB,GAAe5L,YAAY62C,iBAOhF7mC,KAAKwI,IACDgY,EAAMhY,GAAW+9B,EAAWvmC,KAAKwI,IAE5C9O,mCAAmC2gB,EAAOiI,GACtC,IAAInL,EAAQ+T,GAAa7Q,GACrBoP,EAAcjP,GAAY8H,EAAM1mB,GAAe2C,aAC/Coa,EAAagtB,GAAoCc,sBAAsBpsB,EAAOiI,GAC9EokB,EAAiB,KASrB,OARI/tB,GAAcA,EAAWvP,SACzBs9B,EAAiB/tB,EAAWhT,IAAI+S,IACrB,CACHrP,MAAO05B,GAAwB4D,wBAAwBxvB,EAAOuB,GAC9DkuB,QAASpsB,GAAY9B,EAAW9c,GAAeU,kBAAoBmtB,EAAYzc,GAAqBrV,WAIzGqnC,IAAW0H,GAAkB,IAAI/gC,IAAIjG,GAAKA,EAAE2J,MAAMD,SAASzD,IAAI,CAAC05B,EAAOwH,KAC1E,IAAIC,EAAKJ,EAAe,GAAGr9B,MAAMg2B,EAAM,IACnC0H,EAAKL,EAAe,GAAGr9B,MAAMg2B,EAAM,IACnC2H,EAAmB,GACnBC,EAAmB,GACvB,OAAKP,EAAe,GAAGE,SAWnBI,EAAmBh0B,GAAa+zB,EAAG3C,eAAgB,CAAErzB,MAAO,UAC5Dk2B,EAAmBj0B,GAAa8zB,EAAG1C,eAAgB,CAAErzB,MAAO,UAC5Dg2B,EAAGhD,oBAAoBp+B,IAAI1a,GAAKA,EAAEm5C,eAAiBpxB,GAAa/nB,EAAEm5C,eAAgB,CAAErzB,MAAO,WAC3F+1B,EAAG/C,oBAAoBp+B,IAAI1a,GAAKA,EAAEm5C,eAAiBpxB,GAAa/nB,EAAEm5C,eAAgB,CAAErzB,MAAO,WACpF,CACHA,MAAOg2B,EACP51B,MAAO21B,KAhBXE,EAAmBh0B,GAAa+zB,EAAG3C,eAAgB,CAAErzB,MAAO,UAC5Dk2B,EAAmBj0B,GAAa8zB,EAAG1C,eAAgB,CAAErzB,MAAO,UAC5Dg2B,EAAGhD,oBAAoBp+B,IAAI1a,GAAKA,EAAEm5C,eAAiBpxB,GAAa/nB,EAAEm5C,eAAgB,CAAErzB,MAAO,WAC3F+1B,EAAG/C,oBAAoBp+B,IAAI1a,GAAKA,EAAEm5C,eAAiBpxB,GAAa/nB,EAAEm5C,eAAgB,CAAErzB,MAAO,WACpF,CACHI,MAAO41B,EACPh2B,MAAO+1B,MAevBptC,6BAA6B2gB,EAAOoqB,GAChC,OAAOlqB,GAAYF,EAAO5iB,GAAUe,WAAWoH,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAee,qBAAuB8nC,EAAM55B,IAE1HnR,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EAErB,IAAIod,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCw6B,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KACtEowB,EAAyBh3B,KAAGC,aAAa+0B,GAAuC,SAChFiC,EAAkCj3B,KAAGC,aAAag1B,GAAiD,SACnGb,EAAap0B,KAAGC,aAAaqpB,GAAY,SACzC4N,EAAgB3B,GAAoC4B,qBAAqBltB,GACzEmtB,EAA0B7B,GAAoC8B,8BAA8BptB,GAC5Fme,EAAUmN,GAAoC+B,sBAAsBjT,GACpEkT,EAAYhC,GAAoCiC,kBAAkBnT,GAClEoT,EAAoBlC,GAAoCmC,2BAA2BrT,GACvF2S,EAAyBp0B,GAAao0B,EAAwB,CAC1DW,eAAgBvP,EAAQx4B,KAAK,IAC7BgoC,mBAAoBV,EACpBW,mBAAoBN,EACpBO,kBAAmBL,IAEvB,IACI1C,EAAenyB,GAAawxB,EAAY,CACxCl6C,KApB+B,6BAqB/Bq4C,MAHuBgD,GAAoCwC,qBAAqB9tB,KAQpF,OAHAgtB,EAAkCr0B,GAAaq0B,EAAiC,CAC5EW,mBAAoBR,IAEjB,CACHptC,2BAA8B,CAC1ByQ,GA5B2B,6BA6B3BvgB,KA7B2B,6BA8B3Bo4C,MAAQ,8BACRD,MAAQ,kCACRnxB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU81B,EACV1V,OAAQ,IACDj3B,GACH,6BACGuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUoM,eACtBia,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAUwM,gBAErBoX,UAAWigB,GAAmB2C,SAAS,CACnC7iB,SAAU+1B,EACV3V,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAUwM,gBAErBiZ,KAAMoe,GAAmB2C,SAAS,CAC9B7iB,SAAU6zB,EACVzT,OAAQ,IACDj3B,MACAD,MACAwZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUwM,mBACtB6Z,IAAYrmB,GAAUoM,eACtBia,IAAYrmB,GAAU6G,gBACtBwf,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU4N,WAMrC,MAEM04B,GAAO,KAEP/B,GAAO,MAEb,SAASgH,GAAK9uC,GACV,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EChUX,MAAM4nB,GAAmB,qDACnBC,GAAiC,wEACjCC,GAAwC,+EAI/B,MAAMC,GACjB7uC,kBAAkB+a,GACd,OAAOA,EAAM9O,IAAIjG,MAAQ6pB,GAAY7pB,eAEzChG,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtEW,GADQuT,GAAa7Q,GACZ,IAETmuB,EAAoBp4B,KAAGC,aAAa+3B,GAAkB,SACzC7tB,GAAYF,EAAO5iB,GAAUG,aA8D9C,OA7DuB2iB,GAAYF,EAAO5iB,GAAUY,iBACnCsN,IAAI8iC,IAGjB,IAAIC,EAAaluB,GAAYiuB,EAAiB7sC,GAAevD,iBACzDswC,EAAcnuB,GAAYiuB,EAAiB7sC,GAAegB,aAC1DgsC,EAAQ,GACZ,GAAID,GAAeA,EAAYpwB,WAAY,CACvC,IAAIswB,EAAqBz4B,KAAGC,aAAag4B,GAAgC,SACrErY,EAAU,GACdvlC,OAAOib,KAAKijC,EAAYpwB,YAAY5S,IAAI8V,IACpC,IAAIqtB,EAAWvf,GAAY9N,GACvBktB,EAAYpwB,WAAWkD,IACvBhxB,OAAOib,KAAKijC,EAAYpwB,WAAWkD,GAAM9C,YAAYhT,IAAI+S,IACrD,IAAIqwB,EAAgBJ,EAAYpwB,WAAWkD,GAAM9C,WAAWD,GACxDswB,EAAiB,GAErB,GAAID,GAAiBA,EAAc5lC,KAC/B,OAAQ4lC,EAAc5lC,MAClB,KAAKmI,GAAYC,WACby9B,EAAiB,OACjB,MACJ,KAAK19B,GAAYE,YACbw9B,EAAiB,QAG7B,IAAIC,EAAgC74B,KAAGC,aAAai4B,GAAuC,SAC3FtY,EAAQ5L,KAAKpR,GAAai2B,EAA+B,CACrDv9C,SAAUo9C,EACV99C,MAAOg+C,EACP9mB,SAdY,YAmB5B0mB,EAAMxkB,KAAKpR,GAAa61B,EAAoB,CACxCjpC,OAAQowB,EAAQhwB,KAAK,IACrB+Q,MAAOwY,GAAYmf,MAG3B,IAAIxD,EAAclyB,GAAaw1B,EAAmB,CAC9CU,UAAW1uB,GAAYiuB,EAAiB7sC,GAAe5L,UACvD4P,OAAQgpC,IAGZjxB,EAAO6C,GAAYiuB,EAAiB7sC,GAAe5L,WAAa,CAC5D6a,GAAI2P,GAAYiuB,EAAiB7sC,GAAe5L,UAChD1F,QAASkwB,GAAYiuB,EAAiB7sC,GAAe5L,YACrDshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU4zB,EACVxT,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU6N,iBAKtBmc,GC9Ef,MAAMwxB,GAAyB,sCACzBC,GAA6B,uCAE7B1P,GAAa,kCACb2P,GAAyB,4CACzBC,GAA0C,6DAC1CC,GAA2C,6EAC3CC,GAA6B,gDAEpB,MAAMC,GACjB/vC,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EAGX9mB,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtE0yB,EAAWnvB,GAAYF,EAAO5iB,GAAU4B,SAExCswC,EAAwBv5B,KAAGC,aAAa84B,GAAwB,SAChES,EAA8Bx5B,KAAGC,aAAa+4B,GAA4B,SAC1E5E,EAAap0B,KAAGC,aAAaqpB,GAAY,SACzCmQ,EAAuBz5B,KAAGC,aAAag5B,GAAwB,SAC/DS,EAAoC15B,KAAGC,aAAai5B,GAAyC,SAE7FS,EAA0B35B,KAAGC,aAAam5B,GAA4B,SACtEhd,EAAOtB,GAAa7Q,GACpBlD,EAAQ+J,GAAgB7G,GACxB1C,EAAS,GAySb,OAxSA+xB,EAAS/jC,IAAIktB,IACT,IAAImX,EAAuBL,EACvB52B,EAAY,GACZk3B,EAAqB,GAErBvX,KAAclY,GAAYqY,EAASj3B,GAAe5L,YAElD4iC,EAAoB,GACpBE,EAAgBzJ,GAAgCmD,EAAM,CACtD3hB,GAAIgoB,EAAQhoB,GACZ1H,KAAMxC,GAASoB,aACfqX,UAAWiQ,KAEXqY,EAAW,GACXd,EAAc,GACd7N,EAAcvY,GAAYqY,EAASj3B,GAAe5L,UAElDk6C,EAA4B,IADhCtX,EAAoBE,GAEE1pB,QAClBwpB,EAAkBjtB,IAAIqtB,IAClB,IAAImX,EAAgB3vB,GAAYwY,EAAkBp3B,GAAe0D,cACjE,IAAI2zB,EAAKphB,GAAgBs4B,GACzB,GAAIlX,EAAI,CAEJ,IAAIC,EAAeD,EAAG3hB,SAClB84B,EAAoBnX,EAAG1hB,UACvB84B,EAAa,GACbC,EAAc,GACdrX,EAAGnhB,YACHu4B,EAAa,UAEjB,IAAI9W,KAAkB/Y,GAAYwY,EAAkBp3B,GAAe5L,YAC/DwjC,KAAgBhZ,GAAYwY,EAAkBp3B,GAAetG,cAC7Dm+B,KAAejZ,GAAYwY,EAAkBp3B,GAAepG,aAC5D8wC,EAAgB,KAChBiE,EAAe,KACfC,EAAa,KACbhE,EAAiB,KACjBiE,EAAkB,KAClBC,EAAiB,KACjB/W,EAAY,KACZlK,EAAcjP,GAAYwY,EAAkBp3B,GAAe2C,aAC3DosC,EAAa,GACjB,GAAIlhB,EAAa,CACb6c,EAAgBjd,GAAqB8I,EAAW1I,EAAYzc,GAAqBQ,YACjFmmB,EAAYtK,GAAqB8I,EAAW1I,EAAYzc,GAAqBrV,QAC7E4yC,EAAelhB,GAAqB8I,EAAW1I,EAAYzc,GAAqBS,OAChF+4B,EAAiBnd,GAAqB8I,EAAW1I,EAAYzc,GAAqB7U,aAClFsyC,EAAkBphB,GAAqB8I,EAAW1I,EAAYzc,GAAqBpV,cACnF8yC,EAAiBrhB,GAAqB8I,EAAW1I,EAAYzc,GAAqBU,kBAClF88B,EAAanhB,GAAqB8I,EAAW1I,EAAYzc,GAAqBK,SAC9Eq9B,EAAiBrhB,GAAqB8I,EAAW1I,EAAYzc,GAAqBU,kBAClF,IAAIk9B,EAAmBvhB,GAA0BhP,EAAO,CACpDxP,GAAImoB,EAAiBnoB,GACrBgK,MAAO,CAAC,CACJ1R,KAAMxC,GAAStI,gBACf+gB,UAAWiQ,OAKfshB,GAFJA,EAAapC,GAAyBoC,WAAWC,IAClCxhC,OACE,IAAMuhC,EAAW3qC,OAGjB,GAIrB,IAAImR,EAAQm1B,KAAmB9rB,GAAY8rB,EAAe1qC,GAAe5L,YAAY+P,cAAiB,2CAClG8qC,EAAalX,EAAYnZ,GAAYmZ,EAAW/3B,GAAe5L,UAAa,mCAC5EohB,EAAak1B,KAAmB9rB,GAAY8rB,EAAe1qC,GAAe5L,YAAe,2CACzF86C,EAAatwB,GAAYwY,EAAkBp3B,GAAemD,YAC1DgsC,EAAeL,EAAiBlwB,GAAYkwB,EAAgB9uC,GAAe5L,UAAY,oCAC3Fs6C,EAAcE,EAAahwB,GAAYgwB,EAAY5uC,GAAe5L,UAAY,wBAC1Ew6C,GACA9I,EAAStd,KAAKkmB,GAClB,IAAIU,EAAY3hB,GAAgC8I,EAAW,GAACwB,GAAYA,EAAU9oB,GAAYy7B,EAAgBA,EAAcz7B,GAAK,MAAMjL,OAAOF,GAAKA,KAAO,GAC1JgiC,EAAStd,QAAQ4mB,EAAUrlC,IAAIslC,GACpBzwB,GAAYywB,EAAUrvC,GAAe5L,YAEhD0xC,EAAStd,KAAKhT,EAAYy5B,GAC1BjK,EAAYxc,KAAK,CAAEhT,aAAYy5B,eAC/B,IAAI7/C,EAAQ,GACRkgD,GAAyB,EACzBjY,EAAGnhB,WACH9mB,EAAQw/C,KAAgBhwB,GAAYgwB,EAAY5uC,GAAe5L,YAAY+P,cAAgB,wBACvFumC,GAAiBkE,IACjBU,EAAyB5E,EAAcz7B,KAAO2/B,EAAW3/B,KAI7D7f,EAAQ2oC,KAAenZ,GAAYmZ,EAAW/3B,GAAe5L,YAAY+P,cAAiB,mCAG9F,IAAIorC,EAAc,CACdn6B,cAAeuiB,EACfniB,WAAYA,EACZk5B,cACAn5B,MAAOA,EACPk5B,aACAr/C,QACA+lB,MAAO85B,EACPE,eACAJ,aACA3X,iBAAkBO,EAClB6X,gBAAiBX,EAAkBjwB,GAAYiwB,EAAiB7uC,GAAe5L,UAAY,wBAC3FihB,KAAMs5B,EAAe/vB,GAAY+vB,EAAc3uC,GAAe5L,UAAa,kCAC3E6jC,WAAYJ,GAAa,iCACzBK,YAAaN,GAAc,iCAC3BtiB,cAAeq5B,KAAkB/vB,GAAY+vB,EAAc3uC,GAAe5L,YAAY+P,cAAiB,sCACvG6zB,YAAaD,EAAYnZ,GAAYmZ,EAAW/3B,GAAe5L,UAAY,oCAC3E+jC,kBAAmBvjB,GAAYuiB,GAC/BsY,oBAAqB7E,EAAiBhsB,GAAYgsB,EAAgB5qC,GAAe5L,UAAY86C,EAAc,gCAC3G9W,WAAYL,EAAYnZ,GAAYmZ,EAAW/3B,GAAe5L,UAAY,qCAE9EkjC,EAAelgB,GAAakgB,EAAciY,GAC1Cf,EAAoBp3B,GAAao3B,EAAmBe,GAEpDp4B,GAAakhB,GAAMf,EACnB+W,GAAsBhW,GAAMmW,EAE5B,IAAI/gC,EAAQixB,GAAoB6F,yBAAyBhpB,EAAOqvB,EAAgBsE,EAAYxE,EAAe3S,GAC3G,IAAIhb,EAAagtB,GAAoC2F,4BAA4BjxB,EAAO2Y,GACpFra,GAActP,IACdsP,EAAWhT,IAAI+S,IACXrP,EAAM1D,IAAI85B,IACN,IAAI8L,EAAM,GACNC,EAAO,GACX,GAAI9yB,GAAaA,EAAUvH,OAASsuB,EAAMgM,gBAAiB,CACvD,IAAI/pB,EAAO,IACJhJ,EAAUvH,MAAM4yB,oBAAoBp+B,IAAI1a,GAAKA,EAAEm5C,mBAC/C3E,EAAMlnB,WAAW3Y,OAAOF,GAAKA,EAAEyD,OAAS6J,GAAqBO,OAAO5H,IAAI1a,GAAKA,EAAEmB,OAAOuZ,IAAI,CAAC1a,EAAGszC,KACN,IAAnF7lB,EAAUvH,MAAM4yB,oBAAoB2H,UAAUhsC,GAAKA,EAAEhU,WAAaT,EAAES,WAGjE+zC,EAAMkM,WAAWpN,IACzB3+B,OAAOF,GAAKA,IACjBM,KAAKwI,IACP+iC,EAAIp6B,MAASuQ,EAEjB,GAAIhJ,GAAaA,EAAU3H,OAAS0uB,EAAMmM,eAAgB,CAClDlqB,EAAO,IACJhJ,EAAU3H,MAAMgzB,oBAAoBp+B,IAAI1a,GAAKA,EAAEm5C,mBAC/C3E,EAAM7/B,OAAOF,GAAKA,EAAEyD,OAAS6J,GAAqBrV,OAAOgO,IAAI1a,GAAKA,EAAEmB,OAAOuZ,IAAI,CAAC1a,EAAGszC,KACK,IAAnF7lB,EAAU3H,MAAMgzB,oBAAoB2H,UAAUhsC,GAAKA,EAAEhU,WAAaT,EAAES,WAGjE+zC,EAAMoM,UAAUtN,IACxB3+B,OAAOF,GAAKA,IACjBM,KAAKwI,IACP+iC,EAAIx6B,MAAS2Q,EAGjB,GAAIhJ,GAAaA,EAAUvH,OAASsuB,EAAMgM,gBAAiB,CACnD/pB,EAAO,IACJ+d,EAAMgM,gBAAgB9lC,IAAI,CAAC1a,EAAGszC,IAAUkB,EAAMkM,WAAWpN,OACzD7lB,EAAUvH,MAAM4yB,oBAAoBp+B,IAAI,CAAC1a,EAAGszC,KAC8B,IAArEkB,EAAMgM,gBAAgBC,UAAUhsC,GAAKA,EAAEhU,WAAaT,EAAES,WAGnDgtB,EAAUvH,MAAM4yB,oBAAoBxF,GAAO6F,gBACnDxkC,OAAOF,GAAKA,IACjBM,KAAKwI,IACPgjC,EAAKr6B,MAASuQ,EAElB,GAAIhJ,GAAaA,EAAU3H,OAAS0uB,EAAMmM,eAAgB,CAClDlqB,EAAO,IACJ+d,EAAMmM,eAAejmC,IAAI,CAAC1a,EAAGszC,IAAUkB,EAAMoM,UAAUtN,OACvD7lB,EAAU3H,MAAMgzB,oBAAoBp+B,IAAI,CAAC1a,EAAGszC,KAC6B,IAApEkB,EAAMmM,eAAeF,UAAUhsC,GAAKA,EAAEhU,WAAaT,EAAES,WAGlDgtB,EAAU3H,MAAMgzB,oBAAoBxF,GAAO6F,gBACnDxkC,OAAOF,GAAKA,IACjBM,KAAKwI,IACPgjC,EAAKz6B,MAAS2Q,EAGlBwoB,EAA0B9lB,KAAKonB,GAC/BtB,EAA0B9lB,KAAKmnB,OAIvCrB,EAA4BA,EAA0BvkC,IAAI,CAAC4lC,EAAKhN,KAE5D,IAAIuN,EAAQjC,EACZ,OAAQ5W,EAAGthB,QACP,KAAKljB,GAAQ8C,IACb,KAAK9C,GAAQ+C,OACTs6C,EAAQ/B,EACJmB,IACAY,EAAQhC,GAIpB,OAAQK,GACJ,KAAKj1C,GAAc2W,uCACfigC,EAAQ17B,KAAGC,aAAak5B,GAA0C,SAG1E,OAAOv2B,GAAa84B,EAAO,CACvB36B,MAAOC,EACPuvB,aAAcnmB,GAAYkwB,EAAgB9uC,GAAe5L,UACzD6qB,OAAQL,GAAYgwB,EAAY5uC,GAAe5L,UAC/C+7C,4BAA6B,kBAC7B/gD,MAAO2oC,KAAenZ,GAAYmZ,EAAW/3B,GAAe5L,YAAY+P,cAAiB,mCACzFgR,MAAO85B,EACP75B,cAAeuiB,EACfV,QAASE,EACTuN,qBAAsBiL,EAAIp6B,MAC1BF,KAAMs5B,EAAe/vB,GAAY+vB,EAAc3uC,GAAe5L,UAAa,kCAC3EuwC,qBAAsBgL,EAAIx6B,MAC1Bi7B,YAAazY,QAAmBgL,YASxDmD,EAAWA,EAASzpB,SACpB2oB,EAAcA,EAAY3oB,OAAOvY,MAAQA,EAAE0R,cAC3C,IAAI66B,EAAmBvK,EAAS/7B,IAAIjG,kBAAoBA,cAAcA,KAClEwsC,EAA6BtL,EAAYj7B,IAAIjG,kBAAoBA,EAAE0R,eAAe1R,EAAE0R,WAAWrR,4BAC/FqkC,EAAiB1C,EAAS/7B,IAAIjG,GAAKu0B,GAAMwV,GAAiBvQ,KAAK,aAAex5B,eAAeA,MAC7FysC,EAAkBvL,EAAYj7B,IAAIjG,GAAKu0B,GAAMwV,GAAiBvQ,KAAK,MAAQx5B,EAAE0R,WAAWrR,+BAA+BL,EAAE0R,WAAWrR,6BACpIwY,EAAampB,EAAS/7B,IAAIjG,GAAKu0B,GAAMwV,GAAiBvQ,KAAK,mCAAqCx5B,aAAaA,MAC7G0sC,EAAyBxL,EAAYj7B,IAAIjG,GAAKu0B,GAAMwV,GAAiBvQ,KAAK,mCAAqCx5B,EAAE0R,cAAc1R,EAAE0R,WAAWrR,6BAChJ,IAAIolC,EAAenyB,GAAawxB,EAAY,CACxCl6C,KAAMooC,EACNiQ,MAAOuH,EAA0BlqC,KAAKwI,MAE1CwhC,EAAuBh3B,GAAag3B,EAAsB,CACtDtX,SAAUA,EACV0R,eAAgB,IAAIA,KAAmB+H,GAAiBnsC,KAAKi0B,IAC7D1b,WAAY,IAAI6zB,KAA2B7zB,GAAYvY,KAAK,KAC5DqsC,kBAAmB,IAAIJ,KAAqBC,GAA4BvmC,IAAI,CAAC1a,EAAGqhD,IAAQrY,GAAMwV,GAAiBvQ,KAAK,GAAKjuC,GAAI+U,KAAK,KAClIk0B,oBAAqBxB,EAAS3yB,cAC9BgT,cAEJ,IAAIw5B,EAA6Bv5B,GAAa42B,EAA6B,CACvElX,SAAUA,EACV0R,eAAgB,IAAIA,KAAmB+H,GAAiBnsC,KAAKi0B,IAC7D1b,WAAY,IAAI6zB,KAA2B7zB,GAAYvY,KAAK,KAC5DqsC,kBAAmB,IAAIJ,KAAqBC,GAA4BvmC,IAAI,CAAC1a,EAAGqhD,IAAQrY,GAAMwV,GAAiBvQ,KAAK,GAAKjuC,GAAI+U,KAAK,KAClIk0B,oBAAqBxB,EAAS3yB,cAC9BgT,UAAWk3B,IAEftyB,EAAO6C,GAAYqY,EAASj3B,GAAe5L,WAAa,CACpD6a,GAAI2P,GAAYqY,EAASj3B,GAAe5L,UACxC1F,KAAMkwB,GAAYqY,EAASj3B,GAAe5L,UAC1C0yC,UAAWloB,GAAYqY,EAASj3B,GAAe5L,YAC/CyyC,SAAUjoB,GAAYqY,EAASj3B,GAAe5L,iBAC9CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU04B,EACVtY,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUwM,mBACtB6Z,IAAYrmB,GAAUmM,eACtBka,IAAYrmB,GAAU0D,iBACtB2iB,IAAYrmB,GAAU+N,cAC7BsY,YACAyd,MAAO9jC,GAAU6N,cAErB+V,UAAWigB,GAAmB2C,SAAS,CACnC7iB,SAAUi7B,EACV7a,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAUgO,aAC7BqY,YACAyd,MAAO9jC,GAAU6N,cAErB4X,KAAMoe,GAAmB2C,SAAS,CAC9B7iB,SAAU6zB,EACVzT,OAAQ,IACDj3B,MACAD,MACAwZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUwM,mBACtB6Z,IAAYrmB,GAAU0D,iBACtB2iB,IAAYrmB,GAAU6N,iBACtBwY,IAAYrmB,GAAUoM,eACtBia,IAAYrmB,GAAU6G,gBACtBwf,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU4N,WAKtBoc,GAIf,MAEMsc,GAAO,KAEP/B,GAAO,MCvVPwH,GAAa,kCACb8S,GAAwC,2EACxCC,GAA0C,6EAC1CC,GAAgD,mFAEhDpY,GAAyB,2CAEhB,MAAMqY,GACjBjzC,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EAEX9mB,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAIod,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCkpC,EAASpM,EAAO70B,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAC1DwhC,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtEwtB,EAAap0B,KAAGC,aAAaqpB,GAAY,SACzCkT,EAAqCx8B,KAAGC,aAAam8B,GAAuC,SAC5FK,EAAwCz8B,KAAGC,aAAao8B,GAAyC,SACjGK,EAA4C18B,KAAGC,aAAaq8B,GAA+C,SAC3G/0B,EAAS,GAgFb,OA/EA8c,EAAO9uB,IAAIwL,IACP,IAAIiwB,EAAoCwL,EACpCG,EAAYvI,EAGZwI,EAAe,GACfrK,EAAQ,GACRzN,EAAyB9kB,KAAGC,aAAaikB,GAAwB,SACrEuM,EAAOl7B,IAAIoL,IACPtmB,OAAOoyC,OAAOpuC,IAASmR,OAAOF,GAAKA,IAAMjR,GAAQ8C,KAAKoU,IAAIgM,IAEtD,IAAIs7B,EAAuCJ,EAE3CI,EAAuCj6B,GAAai6B,EAAsC,CACtFl8B,MAAOyJ,GAAYrJ,EAAOvV,GAAe5L,UACzChF,MAAOwvB,GAAYrJ,EAAOvV,GAAe3L,YAAc,QACvDmhB,WAAYoJ,GAAYzJ,EAAOnV,GAAe5L,UAC9CmhB,MAAOqJ,GAAYzJ,EAAOnV,GAAe1L,YAAc,QACvDg9C,uBAAwBv7B,IACxBA,WAEJ,IAAIw7B,EAA2CL,EAE/CK,EAA2Cn6B,GAAam6B,EAA0C,CAC9Fp8B,MAAOyJ,GAAYrJ,EAAOvV,GAAe5L,UACzChF,MAAOwvB,GAAYrJ,EAAOvV,GAAe3L,YAAc,QACvDmhB,WAAYoJ,GAAYzJ,EAAOnV,GAAe5L,UAC9CmhB,MAAOqJ,GAAYzJ,EAAOnV,GAAe1L,YAAc,QACvDg9C,uBAAwBv7B,IACxBA,WAEJq7B,EAAa5oB,KAAK6oB,GAClBtK,EAAMve,KAAK+oB,OAGhBntC,KAAKi0B,IAER,IAAI8C,EAAY,CACZhmB,SAAUyJ,GAAYrJ,EAAOvV,GAAe5L,mBAEhDg9C,EAAa5oB,KAAKpR,GAAakiB,EAAwB6B,IACvDqK,EAAoCpuB,GAAaouB,EAAmC,CAChFrwB,MAAOyJ,GAAYrJ,EAAOvV,GAAe5L,UACzCg9C,aAAcA,EAAahtC,KAAKi0B,MAGpC8Y,EAAY/5B,GAAa+5B,EAAW,CAChCziD,QAASkwB,GAAYrJ,EAAOvV,GAAe5L,kBAC3C2yC,MAAOA,EAAM1qB,OAAOvY,GAAKA,GAAGM,KAAK,MAIrC2X,EAAO6C,GAAYrJ,EAAOvV,GAAe5L,WAAa,CAClD6a,GAAI2P,GAAYrJ,EAAOvV,GAAe5L,UACtC1F,QAASkwB,GAAYrJ,EAAOvV,GAAe5L,kBAC3CyyC,SAAUjoB,GAAYrJ,EAAOvV,GAAe5L,uBAC5CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU8vB,EACV1P,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUmM,eACtBka,IAAYrmB,GAAUgK,SAC7Bqc,YACAyd,MAAO9jC,GAAU+N,aAErB0X,KAAMoe,GAAmB2C,SAAS,CAC9B7iB,SAAUy7B,EACVrb,OAAQ,IACDj3B,MACAD,MACAwZ,IAAYrmB,GAAUmM,eACtBka,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUgK,SAC7Bqc,YACAyd,MAAO9jC,GAAU4N,WAKtBoc,GAGf,MAEMsc,GAAO,KAEP/B,GAAO,MCjHPkb,GAAkB,gCAET,MAAMC,GACjB3zC,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EAEX9mB,gBAAgB2d,GACZ,IAAIwlB,OAAEA,EAAS,GAAXxiB,MAAeA,GAAUhD,EAC7B,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtEs2B,EAAkBl9B,KAAGC,aAAa+8B,GAAiB,SACnDz1B,EAAS,GA+Bb,OA9BAklB,EAAOl3B,IAAI3a,IACP,IAAI+lB,MAAEA,EAAFzmB,KAASA,GAASU,EAClBuiD,EAAiBD,EAErB,IAAIE,EAAS/iD,OAAOib,KAAKqL,GAAOpL,IAAIra,IAChC,IACIo2B,EAAO1O,GADK,8CACkB,CAC9B1oB,KAAMgB,EACNN,MAAO+lB,EAAMzlB,KAEjB,OAAO+hD,GAAmBnU,KAAK,GAAKxX,IACrC1hB,KAAKi0B,IAERsZ,EAAiBv6B,GAAau6B,EAAgB,CAC1C9U,UAAW+U,EACXC,eAAgBnjD,IAGpBqtB,EAAOrtB,GAAQ,CACXugB,GAAIvgB,EACJA,KAAMA,EACNgnB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAUi8B,EACV7b,OAAQ,IAAIj3B,IACZuZ,YACAyd,MAAO9jC,GAAUmM,eAKtB6d,GAGf,MAEMsc,GAAO,KAEP/B,GAAO,MCtDPwH,GAAa,kCACbgU,GAA0B,oDAC1BC,GAAgC,0DAChCC,GAAmC,6DAE1B,MAAMC,GACjBn0C,6BAA6B+6B,GACzB,IAAIoM,EAASpM,EAAO70B,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAC1Di1C,EAAiCx1B,KAAGC,aAAau9B,GAAkC,SACnFE,EAAgB,GAcpB,OAbAjN,EAAOl7B,IAAIwL,IACPsjB,EAAO9uB,IAAIoL,IACP,IAAI80B,EAAgCD,EAChCE,EAAYtrB,GAAYzJ,EAAOnV,GAAe5L,UAC9CwwB,EAAMxN,GAAa6yB,EAA+B,CAClD90B,MAAO+0B,EACP10B,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9C+1C,iBAAoBD,EAAUrlC,gBAGlCqtC,EAAc1pB,KAAK5D,EAAMyT,QAG1B6Z,EAEXp0C,iCAAiC+6B,GAC7B,IAAIoM,EAASpM,EAAO70B,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAE1Di1C,EAD8Bx1B,KAAGC,aAAas9B,GAA+B,SAE7EG,EAAgB,GAcpB,OAbAjN,EAAOl7B,IAAIwL,IACPsjB,EAAO9uB,IAAIoL,IACP,IAAI80B,EAAgCD,EAChCE,EAAYtrB,GAAYzJ,EAAOnV,GAAe5L,UAC9CwwB,EAAMxN,GAAa6yB,EAA+B,CAClD90B,MAAO+0B,EACP10B,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9C+1C,iBAAoBD,EAAUrlC,gBAGlCqtC,EAAc1pB,KAAK5D,EAAMyT,QAG1B6Z,EAAc71B,OAAOvY,GAAKA,GAErChG,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAIod,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCw6B,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KACtEowB,EAAyBh3B,KAAGC,aAAaq9B,GAAyB,SAClEK,EAA8B39B,KAAGC,aAAaqpB,GAAY,SAC1DlB,EAAUqV,GAAuBnG,sBAAsBjT,GACvDuZ,EAAcH,GAAuBI,0BAA0BxZ,GAUnE,OATA2S,EAAyBp0B,GAAao0B,EAAwB,CAC1DW,eAAgBvP,EAAQx4B,KAAK,MAGjC+tC,EAA8B/6B,GAAa+6B,EAA6B,CACpEpL,MAAOqL,EAAYhuC,KAAK,IACxB1V,KAAM,kBAGH,CACH6P,cAAiB,CACb0Q,GAAI,gBACJvgB,KAAM,gBACNgnB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU81B,EACV1V,OAAQ,IACDj3B,GACH,sBACGuZ,IAAYrmB,GAAUmM,eACtBka,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUgK,SAC7Bqc,YACAyd,MAAO9jC,GAAUwM,gBAErBiZ,KAAMoe,GAAmB2C,SAAS,CAC9B7iB,SAAUy8B,EACVrc,OAAQ,IACDj3B,MACAD,GACH,sBACGwZ,IAAYrmB,GAAUmM,eACtBka,IAAYrmB,GAAUwM,mBACtB6Z,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUgK,SAC7Bqc,YACAyd,MAAO9jC,GAAU4N,WAMrC,MAEM04B,GAAO,KCjGPuY,GAAwC,6EACxCC,GAA0C,yFAC1CyB,GAA+C,+FAC/CC,GAAiD,gGACjDzU,GAAa,kCAEJ,MAAM0U,GACjB10C,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAO0R,GAEX,OAAO1R,EAEX9mB,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAIod,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCkpC,EAASpM,EAAO70B,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAC1DwhC,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtE41B,EAAqCx8B,KAAGC,aAAam8B,GAAuC,SAC5FK,EAAwCz8B,KAAGC,aAAao8B,GAAyC,SACjG4B,EAA4Cj+B,KAAGC,aAAa69B,GAA8C,SAC1GI,EAA8Cl+B,KAAGC,aAAa89B,GAAgD,SAC9GI,EAAQn+B,KAAGC,aAAaqpB,GAAY,SACpC/hB,EAAS,GAuIb,OAtIAkpB,EAAOl7B,IAAIwL,IACP,IAAI67B,EAAe,GACfrK,EAAQ,GAGRvB,EAAoCwL,EACpCx5B,EAAOm7B,EACX9Z,EAAO9uB,IAAI6oC,IACP/Z,EAAO9uB,IAAIoL,IACPtmB,OAAOoyC,OAAOpuC,IAASmR,OAAOF,GAAKA,IAAMjR,GAAQ8C,KAAOmO,IAAMjR,GAAQ+C,QAAQmU,IAAIgM,IAE9E,IAAIs7B,EAAuCJ,EACvC4B,EAA6CH,EAC7CI,EAA2CL,EAC3CM,EAAoB,KACpBC,EAAU,GACVj9B,IAAWljB,GAAQiD,QACnBi9C,KAAuBn0B,GAAYg0B,EAAQ5yC,GAAe5L,mCAC1D4+C,gCACDp0B,GAAYg0B,EAAQ5yC,GAAe5L,yFAKlC2+C,KAAuBn0B,GAAYg0B,EAAQ5yC,GAAe5L,2BAA2BwqB,GAAYzJ,EAAOnV,GAAe5L,cAAcwqB,GAAYzJ,EAAOnV,GAAe3L,YAAc,IAAI8P,gBACzL6uC,gCACDp0B,GAAYg0B,EAAQ5yC,GAAe5L,qDACrCwqB,GAAYzJ,EAAOnV,GAAe5L,+IAKnC,IAAI6+C,mBACdl9B,IAAWljB,GAAQiD,OAAS,sCACV8oB,GAAYzJ,EAAOnV,GAAe3L,YAAc,IAAI8P,wIAIxD+uC,kCACCt0B,GAAYrJ,EAAOvV,GAAe5L,qBAAqB2hB,oBAM5Ds7B,EAAuCj6B,GAAai6B,EAAsC,CACtFl8B,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzChF,MAAOwvB,GAAYzJ,EAAOnV,GAAe3L,YAAc,QACvDmhB,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9CmhB,MAAOqJ,GAAYrJ,EAAOvV,GAAe1L,YAAc,QACvDg9C,uBAAwBv7B,KACxBA,SACAwhB,WAAYwb,EACZI,oBAAqBF,IAGzBH,EAA2C17B,GAAa07B,EAA0C,CAC9F39B,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzCw+C,OAAQh0B,GAAYg0B,EAAQ5yC,GAAe5L,UAC3ChF,MAAOwvB,GAAYzJ,EAAOnV,GAAe3L,YAAc,QACvDmhB,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9CmhB,MAAOqJ,GAAYrJ,EAAOvV,GAAe1L,YAAc,QACvDg9C,uBAAwBv7B,KACxBA,SACAq9B,OAvBU,6IAwBVF,MACAF,UACAzb,WAAYwb,EACZI,oBAAqBF,IAGzBJ,EAA6Cz7B,GAAay7B,EAA4C,CAClG19B,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzChF,MAAOwvB,GAAYzJ,EAAOnV,GAAe3L,YAAc,QACvDmhB,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9CmhB,MAAOqJ,GAAYrJ,EAAOvV,GAAe1L,YAAc,QACvDg9C,uBAAwBv7B,KACxBA,SACAwhB,WAAYwb,EACZI,oBAAqBF,IAEpBlM,EAAMloB,KAAK/a,GAAKA,IAAMgvC,IACvB/L,EAAMve,KAAKsqB,IAEqD,IAAhE1B,EAAaltC,QAAQmtC,IACrBD,EAAa5oB,KAAK6oB,IAEoD,IAAtED,EAAaltC,QAAQ2uC,IACrBzB,EAAa5oB,KAAKqqB,SAMlCrN,EAAoCpuB,GAAaouB,EAAmC,CAChFrwB,MAAOyJ,GAAYrJ,EAAOvV,GAAe5L,UACzCg9C,aAAcA,EAAahtC,KAAKi0B,IAChC1b,WAAY,KAEhBnF,EAAOJ,GAAaI,EAAM,CACtBrC,MAAOyJ,GAAYrJ,EAAOvV,GAAe5L,UACzCg9C,aAAcA,EAAahtC,KAAKi0B,IAChC3pC,QAASkwB,GAAYrJ,EAAOvV,GAAe5L,oBAC3CuoB,WAAY,GACZoqB,MAAOA,EAAM3iC,KAAKi0B,MAGtBtc,EAAO6C,GAAYrJ,EAAOvV,GAAe5L,WAAa,CAClD6a,GAAI2P,GAAYrJ,EAAOvV,GAAe5L,UACtC1F,QAASkwB,GAAYrJ,EAAOvV,GAAe5L,oBAC3CyyC,SAAUjoB,GAAYrJ,EAAOvV,GAAe5L,yBAC5CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU8vB,EACV1P,OAAQ,IACDj3B,MACAuZ,KAAarmB,GAAUmM,gBACvBka,KAAarmB,GAAUgK,UAC9Bqc,YACAyd,MAAO9jC,GAAU+N,aAErB0X,KAAMoe,GAAmB2C,SAAS,CAC9B7iB,SAAU8B,EACVse,OAAQ,IACDj3B,MACAD,MACAwZ,KAAarmB,GAAU+N,iBACvBsY,KAAarmB,GAAUmM,gBACvBka,KAAarmB,GAAUgK,UAC9Bqc,YACAyd,MAAO9jC,GAAU+N,gBAKtBic,GAGf,MAEMsc,GAAO,qBAEP/B,GAAO,MCtKP+c,GAAiB,8CACjBC,GAAqB,wDACrBC,GAAkB,sCAClBC,GAAyB,sDACzBC,GAAmC,gEACnCC,GAAuB,iDACvBC,GAAkB,sCAClB7V,GAAa,kCACb8V,GAAmB,gDACnBC,GAA6B,0DAEpB,MAAMC,GACjBh2C,sCAAsCspC,GAClC,IAAIC,EAAQD,EAAwBr9B,IAAIjG,GAAKjV,OAAOib,KAAKhG,EAAEm9B,OAAOxzB,OAAOD,QAGzE,OADkBsmC,GAAkBvQ,eAAe8D,GAGvDvpC,sBAAsBupC,EAAOpU,EAAI,GAC7B,OAAOmQ,GAAUiE,EAAOpU,GAE5Bn1B,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAQ,OAEZ,OAAOA,EAEX9mB,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KACtEG,EAAQ+T,GAAa7Q,GACrB1C,EAAS,GAETlD,EAAQ8F,GAAYF,EAAO5iB,GAAUgB,UACrCk3C,EAAkBv/B,KAAGC,aAAa4+B,GAAgB,SAClDW,EAA4Bx/B,KAAGC,aAAa6+B,GAAoB,SAChEW,EAAoBz/B,KAAGC,aAAam/B,GAAkB,SACtDM,EAA8B1/B,KAAGC,aAAao/B,GAA4B,SAC1EM,EAAmB3/B,KAAGC,aAAa8+B,GAAiB,SACpDa,EAAmB5/B,KAAGC,aAAak/B,GAAiB,SACpDU,EAAc7/B,KAAGC,aAAa++B,GAAwB,SACtDc,EAAwB9/B,KAAGC,aAAag/B,GAAkC,SAC1Ec,EAAY//B,KAAGC,aAAai/B,GAAsB,SAElDc,GADahgC,KAAGC,aAAaqpB,GAAY,SACtB,IACnB2W,EAA4B,GAE5BC,EAAgB,GAChBC,EAAY,GACZC,EAAYj2B,GAAYF,EAAO5iB,GAAUE,OACzC84C,EAAYD,EAAU5wC,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAChE+/C,EAAen2B,GAAYF,EAAO,CAAC5iB,GAAUsB,SAAUtB,GAAUuB,SACrEw3C,EAAU7qC,IAAIoL,IACV0/B,EAAU9qC,IAAIwL,IACV1mB,OAAOib,KAAKjX,IAASkX,IAAIgrC,IACrB,IAAIC,GAAQ,EACZF,EAAa9wC,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAemD,cAAgB4xC,GAAMhrC,IAAIkrC,IAC7ED,GAAQ,EACRL,EAAUnsB,KAAK,CACXjT,MAAOqJ,GAAYrJ,EAAOvV,GAAe5L,UACzC+gB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzCkyB,SAAU1H,GAAYq2B,EAAKj1C,GAAe5L,UAC1C2hB,OAAQ6I,GAAYq2B,EAAKj1C,GAAemD,gBAG3C6xC,GAEDL,EAAUnsB,KAAK,CACXjT,MAAOqJ,GAAYrJ,EAAOvV,GAAe5L,UACzC+gB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzC2hB,OAAQg/B,UAO5Bl8B,EAAM9O,IAAIgV,IACN,IAAIxJ,EAAQqJ,GAAYG,EAAM/e,GAAeW,eACzCwU,EAAQyJ,GAAYG,EAAM/e,GAAea,eACzCk3B,EAAYtK,GAAqBlS,EAAOpG,GACxC+/B,EAAYznB,GAAqBlS,EAAOhG,GACxCszB,EAAQjqB,GAAYG,EAAM/e,GAAeY,kBACzCkoC,EAAYrb,GAAqBlS,EAAOstB,GACxCsM,EAAYv2B,GAAYG,EAAM/e,GAAec,sBAC7CyyB,EAAe9F,GAAqBlS,EAAOstB,GAE/C,IAAIuM,EAAqB3nB,GADV7O,GAAYG,EAAM/e,GAAenD,WAEhD,IAAIuqC,EAA0B,GAC9B,IAAIiO,EAAQz2B,GAAYs2B,EAAWl1C,GAAe5L,UAAYwqB,GAAYmZ,EAAW/3B,GAAe5L,UAAYwqB,GAAY2U,EAAcvzB,GAAemD,YACzJuxC,EAAcW,GAASX,EAAcW,IAAU,GAE/CX,EAAcW,GAAO7sB,KAAK,CACtBjT,MAAOqJ,GAAYs2B,EAAWl1C,GAAe5L,UAC7C+gB,MAAOyJ,GAAYmZ,EAAW/3B,GAAe5L,UAC7C+gD,YACAtM,MAAOjqB,GAAYkqB,EAAW9oC,GAAe5L,YAGjD,IAAI20C,EAA+Bl6C,OAAOib,KAAKsrC,GAAoBrrC,IAAIja,IACnE,IAAI8vC,EAAenS,GAAqBlS,EAAOzrB,GAC3C23C,EAAc2N,EAAmBtlD,GAsDrC,OApDiBjB,OAAOib,KAAK29B,EAAY1qB,YAAYhT,IAAI29B,IACrD,IAAI3qB,EAAa0qB,EAAY1qB,WAAW2qB,GACpC3oB,EAAO0O,GAAqBlS,EAAOwB,EAAWgC,MAC9C4oB,EAA2B,GAC/B,GAAI5oB,EACA,OAAQH,GAAYG,EAAM/e,GAAe8C,WACrC,KAAKjH,GAAUqB,cACX,GAAI6f,GAAcA,EAAW2f,UAAW,CACpC,IAAI5W,EAAO,CAAE8hB,MAAO,WACpBD,EAA2B94C,OAAOib,KAAKiT,EAAW2f,WAAW3yB,IAAI89B,IAC7D,GAAI9qB,EAAW2f,UAAUmL,GAErB,OADA/hB,KAAQ+hB,QAAYjpB,GAAYG,EAAM/e,GAAe5L,aAAasQ,GAAamjC,KACxE/hB,KAAQ+hB,OAEpB7jC,OAAOF,GAAKA,GACf6jC,EAA2B7hB,EAAK9hB,OAAOF,GAAKA,GAAGuY,OAAOvY,GAAKA,GAAGM,OAC9DgjC,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ,CAAExzB,MAAOqY,KAErB6hB,4CAClBA,mBAGc,MACJ,KAAK9rC,GAAUzI,aAInBga,GAAgB2P,EAAWxV,OAC3B6/B,EAAwB5e,KAAK,CACzB14B,SAAU8uB,GAAYghB,EAAc5/B,GAAe5L,UACnD6sC,OAAQ7zB,GAAgB2P,EAAWxV,QAG3C,IAAImO,EAAY,qDAChB,OAAQqH,EAAWxV,MACf,KAAK2H,GAAcG,eACfqG,EAAY,uCAKpB,IAAI4zB,EAAclyB,GAAa1B,EAAU,CACrCszB,eAAgBjsB,EAAWxN,KAAK1C,GAAqBC,QACrD66B,2BACAsB,mBAAoBrqB,GAAYghB,EAAc5/B,GAAe5L,cAEjE,OAAO0/C,GAAkBxW,KAAK,GAAKgM,EAAc18B,KAClDyP,OAAOvY,GAAKA,GAAGM,KAAK,MAIxBiY,OAAOvY,GAAKA,GAAGM,KAAK,IACnBsR,EAAW,2BACf,OAAQy/B,GACJ,KAAKtiD,GAAQ6C,OACTggB,EAAWy+B,EACX,MACJ,KAAKthD,GAAQmD,OACT0f,EAAW0+B,EAGnB,IAAI9K,EAAclyB,GAAa1B,EAAU,CACrC4/B,cAAevM,EACf5zB,SAAUyJ,GAAYmZ,EAAW/3B,GAAe5L,cAmBhDmhD,GAbAjM,EAAclyB,GAAa68B,EAAmB,CAC9C9+B,MAAOyJ,GAAYmZ,EAAW/3B,GAAe5L,UAC7CohD,YAAa52B,GAAY2U,EAAcvzB,GAAe5L,UACtDmjC,WAAYngB,GAAc,oDAAoD,CAC1EE,KAAMsH,GAAYmZ,EAAW/3B,GAAe5L,UAC5CmhB,MAAOqJ,GAAYs2B,EAAWl1C,GAAe5L,UAC7CqhD,UAAW72B,GAAYmZ,EAAW/3B,GAAe5L,oBAErDkjB,KAAMsH,GAAYmZ,EAAW/3B,GAAe5L,UAC5CmhB,MAAOqJ,GAAYs2B,EAAWl1C,GAAe5L,UAC7CqhD,UAAW72B,GAAYmZ,EAAW/3B,GAAe5L,kBACjDshD,YAAapM,IAEUlyB,GAAa88B,EAA6B,CACjE/+B,MAAOyJ,GAAYmZ,EAAW/3B,GAAe5L,UAC7CohD,YAAa52B,GAAY2U,EAAcvzB,GAAe5L,UACtDmjC,WAAYngB,GAAc,oDAAoD,CAC1EE,KAAMsH,GAAYmZ,EAAW/3B,GAAe5L,UAC5CmhB,MAAOqJ,GAAYs2B,EAAWl1C,GAAe5L,UAC7CqhD,UAAW72B,GAAYmZ,EAAW/3B,GAAe5L,oBAErDkjB,KAAMsH,GAAYmZ,EAAW/3B,GAAe5L,UAC5CmhB,MAAOqJ,GAAYs2B,EAAWl1C,GAAe5L,UAC7CqhD,UAAW72B,GAAYmZ,EAAW/3B,GAAe5L,kBACjDshD,YAAapM,KAOjBmL,EAA0Bl/B,GAASk/B,EAA0Bl/B,IAAU,GACvEi/B,EAAiBj/B,GAASi/B,EAAiBj/B,IAAU,GACrDi/B,EAAiBj/B,GAAOiT,KAAK8gB,GAC7BmL,EAA0Bl/B,GAAOiT,KAAK+sB,KAI1C,IAAIpJ,EAAiBwI,EAAU5qC,IAAI4rC,IAC/B,IAAIpgC,MACAA,EADAJ,MAEAA,EAFAY,OAGAA,GACA4/B,EACJ,IAAIloC,GAASinC,EAAcn/B,EAAQJ,EAAQwgC,EAAI5/B,SAAW,IAAIhM,IAAI6rC,IAC9D,IAAIrgC,MACAA,EADAJ,MAEAA,EAFAggC,UAGAA,EAHAtM,MAIAA,GACA+M,EAMJ,OALYx+B,GAAam9B,EAAW,CAChCh/B,QACAJ,QACA0gC,UAAWhN,IAEAj8B,KAChByP,OAAOvY,GAAKA,GAAGM,KAAK,IACvB,OAAOgT,GAAai9B,EAAa,CAC7B9+B,QACAJ,QACA1H,QACAgoC,UAAWtgC,IACXY,WACCnJ,KAELkpC,EAA2BnB,EAAU5qC,IAAI4rC,IACzC,IAAIpgC,MACAA,EADAJ,MAEAA,EAFAY,OAGAA,GACA4/B,EACJ,OAAOv+B,GAAak9B,EAAuB,CACvC/+B,QACAJ,QACAsgC,UAAWtgC,IACXY,WACCnJ,KA4DT,OA1DA/d,OAAOib,KAAK0qC,GAAkBzqC,IAAIwL,IAE9B,IAAIwJ,EAAO0O,GAAqBlS,EAAOhG,GACvC,IAAI+zB,EAAclyB,GAAa28B,EAAiB,CAC5C5+B,MAAOyJ,GAAYG,EAAM/e,GAAe5L,UACxCwyC,QAAS4N,EAAiBj/B,GAAOnR,KAAK,IACtC2xC,YAAa5J,EAAe9vB,OAAOvY,GAAKA,GAAGM,KAAK,MAGhD4xC,EAAuB5+B,GAAa48B,EAA2B,CAC/D7+B,MAAOyJ,GAAYG,EAAM/e,GAAe5L,UACxCwyC,QAAS6N,EAA0Bl/B,GAAO8G,OAAOvY,GAAKA,GAAGM,KAAK,IAC9D2xC,YAAaD,EAAyBz5B,OAAOvY,GAAKA,GAAGM,KAAK,MAM9D2X,EAAO6C,GAAYG,EAAM/e,GAAe5L,WAAa,CACjD6a,GAAI2P,GAAYG,EAAM/e,GAAe5L,UACrC1F,QAASkwB,GAAYG,EAAM/e,GAAe5L,oBAC1CyyC,SAAUjoB,GAAYG,EAAM/e,GAAe5L,yBAC3C0yC,UAAWloB,GAAYG,EAAM/e,GAAe5L,oBAC5CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU4zB,EACVxT,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAUoM,YAErBwX,UAAWigB,GAAmB2C,SAAS,CACnC7iB,SAAUsgC,EACVlgB,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAU+N,gBACtBsY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAUgO,eAgBtBgc,GCzTf,MAAMywB,GAAmB,mDACnByJ,GAAsB,mDAGb,MAAMC,GAEjBp4C,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KACtEG,EAAQ+T,GAAa7Q,GACrB1C,EAAS,GAET6wB,EAAoBp4B,KAAGC,aAAa+3B,GAAkB,SACtD2J,EAAsB3hC,KAAGC,aAAawhC,GAAqB,SAC3DG,EAAaz3B,GAAYF,EAAO5iB,GAAUG,aAyC9C,OAxCgB2iB,GAAYF,EAAO5iB,GAAUE,OACnBiI,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAC1DgV,IAAIwL,IACV,IAAIqxB,EAAUwP,EAAWpyC,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAeiB,eAAiBsU,EAAMtG,IAAIlF,IAAIssC,IAC9F,IAAIlhC,EAAQsY,GAAqB8I,EAAW3X,GAAYy3B,EAAYr2C,GAAegB,cAC/E2b,EAAa8Q,GAAgClS,EAAO,CACpDtM,GAAIkG,EAAMlG,GACVuO,UAAWiQ,GACXlmB,KAAMxC,GAASuB,eAChBtC,OAAO3U,GAAKuvB,GAAYy3B,EAAYr2C,GAAe4C,kBAAoBgc,GAAYy3B,EAAYr2C,GAAe4C,kBAAkBvT,EAAE4f,IAAM,IACtIlF,IAAI1a,wBAC2BuvB,GAAYvvB,EAAG2Q,GAAe5L,qBAAqBwqB,GAAYvvB,EAAG2Q,GAAe5L,cAC9GgQ,KAAKwI,IACZ,OAAOwK,GAAa++B,EAAqB,CACrC7vB,SAAU1H,GAAYy3B,EAAYr2C,GAAe5L,UACjDmhB,MAAOqJ,GAAYrJ,EAAOvV,GAAe5L,UACzC+gB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,UACzCo0C,eAAgB7rB,MAErBvY,KAAKwI,IACR,IAAI08B,EAAclyB,GAAaw1B,EAAmB,CAC9Cr3B,MAAOqJ,GAAYrJ,EAAOvV,GAAe5L,UACzC+iB,UAAWyvB,IAEf7qB,EAAO6C,GAAYrJ,EAAOvV,GAAe5L,WAAa,CAClD6a,GAAI2P,GAAYrJ,EAAOvV,GAAe5L,UACtC1F,QAASkwB,GAAYrJ,EAAOvV,GAAe5L,kBAC3CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU4zB,EACVxT,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU6N,iBAKtBmc,GCxDf,MAAMywB,GAAmB,yDAGV,MAAM0J,GAEjBp4C,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KAEtEW,GADQuT,GAAa7Q,GACZ,IAETmuB,EAAoBp4B,KAAGC,aAAa+3B,GAAkB,SACzC7tB,GAAYF,EAAO5iB,GAAUG,aAwB9C,OAvBgB2iB,GAAYF,EAAO5iB,GAAUE,OACnBiI,OAAOF,GAAK8a,GAAY9a,EAAG9D,GAAejL,UAC1DgV,IAAIwL,IAEV,IAAI+zB,EAAclyB,GAAaw1B,EAAmB,CAC9Cr3B,MAAOqJ,GAAYrJ,EAAOvV,GAAe5L,YAE7C2nB,EAAO6C,GAAYrJ,EAAOvV,GAAe5L,WAAa,CAClD6a,GAAI2P,GAAYrJ,EAAOvV,GAAe5L,UACtC1F,QAASkwB,GAAYrJ,EAAOvV,GAAe5L,sBAC3CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU4zB,EACVxT,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU6N,iBAKtBmc,GCrCf,MAAMu6B,GAAkB,kDAClBC,GAAqB,qDACrBC,GAAkC,kEAClCC,GAA4C,4EAInC,MAAMC,GACjB54C,sCAAsCspC,GAClC,IAAIC,EAAQD,EAAwBr9B,IAAIjG,GAAKjV,OAAOib,KAAKhG,EAAEm9B,OAAOxzB,OAAOD,QAGzE,OADkBkpC,GAAkBnT,eAAe8D,GAGvDvpC,sBAAsBupC,EAAOpU,EAAI,GAC7B,OAAOmQ,GAAUiE,EAAOpU,GAE5Bn1B,YAAYtP,GACR,IAAIo2B,EAAM,GACV,IAAK,IAAIz2B,EAAI,EAAGA,EAAIK,EAAGL,IACnBy2B,GAAQ,OAEZ,OAAOA,EAEX9mB,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAF/uB,IAASA,GAAQ+rB,EACrB,IAAI8a,EAAYjH,GAAa7Q,GACzBrG,EAAYme,EAAYA,EAAU9I,GAAuBrS,WAAa,KACtEG,EAAQ+T,GAAa7Q,GACrB1C,EAAS,GAET46B,EAAaniC,KAAGC,aAAa6hC,GAAiB,SAC9CM,EAAepiC,KAAGC,aAAa8hC,GAAoB,SACnDM,EAA4BriC,KAAGC,aAAa+hC,GAAiC,SAC7EM,EAAqCtiC,KAAGC,aAAagiC,GAA2C,SAChG7B,EAAYj2B,GAAYF,EAAO5iB,GAAUE,OAsF7C,OArFA64C,EAAU7qC,IAAIwL,IACV,IAAIqxB,EAAUgO,EAAU5wC,OAAOF,GAAKA,EAAEmL,KAAOsG,EAAMtG,IAC9CjL,OAAOF,MACA8a,GAAYrJ,EAAOvV,GAAepF,uBAAwBgkB,GAAYrJ,EAAOvV,GAAenF,uBAAyB,IAAIgkB,KAAKf,GAAKA,IAAMha,EAAEmL,KACtI2P,GAAYrJ,EAAOvV,GAAexF,mBAK9CuP,IAAIoL,GACMiC,GAAaw/B,EAAc,CAC9BphC,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9C+gB,MAAOyJ,GAAYzJ,EAAOnV,GAAe5L,aAIrD,GAAIwqB,GAAYrJ,EAAOvV,GAAexF,iBAAkB,CACpD,IAAIu8C,EAAiBn4B,GAAYrJ,EAAOvV,GAAenF,uBAAyB,GAChF,GAAIk8C,GAAiBA,EAAcvpC,OAAQ,CACvC,IAAIwpC,EAAiBD,EAAchtC,IAAI1a,GAAKuvB,GAAY6O,GAAqBlS,EAAOlsB,GAAI2Q,GAAe5L,WAAWioB,OAAOvY,GAAKA,GAAG0J,SAAWupC,EAAcvpC,OAC1JupC,EAAchtC,IAAIktC,IACdrQ,EAAQpe,KAAKpR,GAAa0/B,EAAoC,CAC1D3hC,MAAOyJ,GAAY6O,GAAqBlS,EAAO07B,GAAKj3C,GAAe5L,UACnE2wC,aAAcnmB,GAAYrJ,EAAOvV,GAAe5L,eAGxDgvC,GAAU,GAAGx1B,YAAY,EAAGmpC,EAAcvpC,OAAQ,WAC9C,OAAOupC,EAAcvpC,OAAS,KAC9BxJ,OAAOF,GAAKA,EAAE0J,SAAW1J,EAAEuY,OAAOhtB,GAAKA,GAAGme,QACzCzD,IAAIoL,IACD,IAAI+hC,EAAS/hC,EAAMgiC,OAAO,EAAGhiC,EAAM3H,QAAQzD,IAAI,CAAC1a,EAAGszC,KAC/C,GAAIoU,EAAcvpC,SAAWne,EACzB,OAAO,EAEX,IAAIqoC,MAAgBiL,IAIpB,OAHIqU,IACAtf,EAAY9Y,GAAY6O,GAAqBlS,EAAOw7B,EAAc1nD,IAAK2Q,GAAe5L,UAAU+P,eAE7FiT,gBAA0BsgB,IAAa,CAC1CzO,MAAOrK,GAAY6O,GAAqBlS,EAAOw7B,EAAc1nD,IAAK2Q,GAAe5L,cAEtF4P,OAAOF,GAAKA,GACXozC,EAAO1pC,QACPo5B,EAAQpe,KAAKpR,GAAay/B,EAA2B,CACjDtf,WAAY2f,EAAO9yC,KAAK,MACxBgzC,MAAOjiC,EAAMgiC,OAAO,EAAGhiC,EAAM3H,QAAQzD,IAAI,CAAC1a,EAAGszC,KACzC,GAAIoU,EAAcvpC,SAAWne,EACzB,OAAO,EAGX,IAAIqoC,MAAgBiL,IAKpB,OAJIqU,IACAtf,EAAY9Y,GAAY6O,GAAqBlS,EAAOw7B,EAAc1nD,IAAK2Q,GAAe5L,UAAU+P,eAG7FiT,wBAAkCsgB,OAAgB,CACrDzO,MAAOrK,GAAY6O,GAAqBlS,EAAOw7B,EAAc1nD,IAAK2Q,GAAe5L,cAEtF4P,OAAOF,GAAKA,GAAGM,KAAK,QACvB+Q,MAAOyJ,GAAYrJ,EAAOvV,GAAe5L,gBAMjE,IAAIk1C,EAAclyB,GAAau/B,EAAY,CACvCnhC,WAAYoJ,GAAYrJ,EAAOvV,GAAe5L,UAC9C+iB,UAAWyvB,EAAQvqB,OAAOvY,GAAKA,GAAGM,KAAKwI,MAE3CmP,EAAO6C,GAAYrJ,EAAOvV,GAAe5L,WAAa,CAClD6a,GAAI2P,GAAYrJ,EAAOvV,GAAe5L,UACtC1F,QAASkwB,GAAYrJ,EAAOvV,GAAe5L,eAC3CshB,SAAUkgB,GAAmB2C,SAAS,CAClC7iB,SAAU4zB,EACVxT,OAAQ,IACDj3B,MACAuZ,IAAYrmB,GAAUgK,WACtBqc,IAAYrmB,GAAUgO,eACtBqY,IAAYrmB,GAAUmM,aAC7Bka,YACAyd,MAAO9jC,GAAU6N,iBAKtBmc,GC/GA,MAAMs7B,GACjBv5C,gBAAgB2d,GACZ,IAAIgD,MAAEA,EAAFlX,KAASA,EAAT7X,IAAeA,GAAQ+rB,EAC3B,OAAQlU,GACJ,KAAK1L,GAAU2B,WAEX,OADW64B,GAAoBkC,SAAS,CAAE9Z,QAAO/uB,QAErD,KAAKmM,GAAUE,MACX,OAAO68B,GAAeL,SAAS,CAAE9Z,QAAO/uB,QAC5C,KAAKmM,GAAUqB,cACX,OAAO6+B,GAAmBxD,SAAS,CAAE9Z,QAAO/uB,QAChD,KAAKmM,GAAU4B,QACX,OAAOowC,GAAiBtV,SAAS,CAAE9Z,QAAO/uB,QAC9C,KAAKqO,GAAeC,gBAChB,OAAO+yC,GAAyBxY,SAAS,CAAE9Z,QAAO/uB,QACtD,KAAKqO,GAAeE,eAChB,OAAOu0C,GAAwBja,SAAS,CAAE9Z,QAAO/uB,QACrD,KAAKqO,GAAeG,UAEhB,IAAI26B,EAASla,GAAYF,EAAO5iB,GAAUE,OACtCob,EAAYwH,GAAYF,EAAO,CAAC5iB,GAAUsB,SAAUtB,GAAUuB,SAC9Dk6C,EAAe34B,GAAYF,EAAO5iB,GAAUzI,aAAa2W,IAAIgV,IAC7D,IAAIukB,EAAQ1kB,GAAYG,EAAM/e,GAAe5M,aACzCmkD,EAAO,GAIX,OAHAjU,EAAMv5B,IAAI1a,IACNkoD,EAAK7yC,GAAarV,IAAMA,IAErB,CACHX,KAAMkwB,GAAYG,EAAM/e,GAAe5L,UACvC+gB,MAAOoiC,KAGXC,EAAc,GAClB3e,EAAO9uB,IAAI1a,IACPmoD,EAAY54B,GAAYvvB,EAAG2Q,GAAe5L,UAAUyQ,eAAiB+Z,GAAYvvB,EAAG2Q,GAAe5L,UAAUyQ,gBAEjH,IAAI4yC,EAAiB,GAIrB,OAHAtgC,EAAUpN,IAAI1a,IACVooD,EAAe74B,GAAYvvB,EAAG2Q,GAAe5L,WAAawqB,GAAYvvB,EAAG2Q,GAAe5L,UAAUyQ,gBAE/F4sC,GAAmBlZ,SAAS,CAC/B0I,OAAQ,CAAC,CACLvyC,KAAMoQ,GAAmBjM,QACzBsiB,MAAOtiB,IACR,CACCnE,KAAMoQ,GAAmBC,YACzBoW,MAAOqiC,GACR,CACC9oD,KAAMoQ,GAAmBE,aACzBmW,MAAOsiC,MACLH,GACN74B,QACA/uB,QAER,KAAKqO,GAAetI,YAChB,OAAOipC,GAAoBnG,SAAS,CAAE9Z,QAAO/uB,QACjD,KAAKqO,GAAeQ,cAChB,OAAO0zC,GAAuB1Z,SAAS,CAAE9Z,QAAO/uB,QACpD,KAAKqO,GAAeS,2BAChB,OAAOurC,GAAoCxR,SAAS,CAAE9Z,QAAO/uB,QACjE,KAAKqO,GAAeU,eAChB,OAAO0oC,GAAwB5O,SAAS,CAAE9Z,QAAO/uB,QACrD,KAAKqO,GAAeI,UAChB,OAAO21C,GAAkBvb,SAAS,CAAE9Z,QAAO/uB,QAC/C,KAAKqO,GAAeM,SAChB,OAAOq4C,GAAkBne,SAAS,CAAE9Z,QAAO/uB,QAC/C,KAAKqO,GAAeK,YAChB,OAAO83C,GAAqB3d,SAAS,CAAE9Z,QAAO/uB,QAClD,KAAKqO,GAAeO,gBAChB,OAAOo5C,GAAwBnf,SAAS,CAAE9Z,QAAO/uB,QACrD,KAAKqO,GAAetB,gBAChB,OAAOA,GAAgB87B,SAAS,CAAE9Z,QAAO/uB,UCtFzD,MAAQu6B,YAAWA,IAAKD,EAAQ,YAO1B2tB,GAAM,GAiBZ,SAASC,GAAKC,EAAM5hB,GAChB,IAAI1nC,EARR,SAAiBupD,EAAK7hB,GAClB,MAAO,CACH6hB,MACA7hB,OACAhnB,GAAI2I,MAIAmd,CAAQ8iB,EAAM5hB,GACtB0hB,GAAIppD,EAAE0gB,IAAM,GACZ,IAAI8M,EAASg8B,QAAQC,UAAUC,KAAK,IACzB,IAAIF,QAAQ,CAACC,EAASE,KACzBP,GAAIppD,EAAE0gB,IAAI+oC,QAAUA,EACpBL,GAAIppD,EAAE0gB,IAAIipC,KAAOA,KAIzB,OADAjuB,GAAY2tB,KAAK,UAAWt4B,KAAKE,UAAUjxB,IACpCwtB,EAGJ,SAASo8B,GAAgB18B,EAAU,IACtC,IAAI28B,UAAEA,GAAc38B,EACpB,MAAO,CAACyS,EAAUQ,KACd,IAAIjQ,EAAQiQ,IACZ,IAAIkC,EAAOtB,GAAa7Q,GACpB45B,EAAeznB,EAAKnb,MAAM1R,MAAM,KAAKK,KAAK,MAE7Cg0C,EAAYL,QAAQC,UAAYJ,GAAKpiB,GAAcC,SAASV,QAAS,CAClEsjB,eACApgC,UAAWE,KAAK/T,KAAKwsB,EAAK3Y,UAAW2Y,EAAKnb,UAC1CwiC,KAAKrzB,IACLjC,QAAQgS,IAAI,yBAoCxB,SAAuB1c,EAAWogC,EAAc55B,GAG5C,IAAI65B,EAAa,CACbz8C,GAAU2B,WACV3B,GAAUE,MACVF,GAAUqB,cACVrB,GAAU4B,WACP5O,OAAOoyC,OAAOljC,KAErB,IAAI6yB,EAAOtB,GAAa7Q,GACxB65B,EAAWvuC,IAAIwuC,IAEX,IAAIzyB,EAAOuxB,GAAUmB,SAAS,CAC1BjxC,KAAMgxC,EACN95B,UAEJ,IAAIg6B,EAAOC,GAAeH,GAE1B,IAAK,IAAIhkB,KADTpc,KAAK/T,OACgB0hB,EACjB6yB,GAAgBxgC,KAAK/T,KAAK6T,EAAWogC,EAAeI,IACpDG,yBAAczgC,KAAK/T,KAAK6T,EAAWogC,EAAeI,KAAS3yB,EAAKyO,GAAU7lC,WAAYo3B,EAAKyO,GAAU7e,UACjGoQ,EAAKyO,GAAU5e,YACfgjC,GAAgBxgC,KAAK/T,KAAK6T,EAAWogC,EAAe,gBACpDO,yBAAczgC,KAAK/T,KAAK6T,EAAWogC,EAAe,iBAAkBvyB,EAAKyO,GAAUuS,OAASvS,QAAgBzO,EAAKyO,GAAU5e,YAE3HmQ,EAAKyO,GAAU/c,OACfmhC,GAAgBxgC,KAAK/T,KAAK6T,EAAWogC,EAAe,WACpDO,yBAAczgC,KAAK/T,KAAK6T,EAAWogC,EAAe,YAAavyB,EAAKyO,GAAUsS,OAAStS,QAAgBzO,EAAKyO,GAAU/c,SAK9HoZ,IACA+nB,GAAgBxgC,KAAK/T,KAAK6T,EAAWogC,EAAe,WACpDO,yBAAczgC,KAAK/T,KAAK6T,EAAWogC,EAAe,SAAW,oBAAoB/4B,KAAKE,UAAUoR,EAAKrX,UAAW,KAAM,IACtHo/B,GAAgBxgC,KAAK/T,KAAK6T,EAAWogC,EAAe,SACpDO,yBAAczgC,KAAK/T,KAAK6T,EAAWogC,EAAe,OAAS,oBAAoB/4B,KAAKE,UAAUoR,EAAKrX,UAAW,KAAM,KAvEhHs/B,CAAc1gC,KAAK/T,KAAKwsB,EAAK3Y,UAAW2Y,EAAKnb,OAAQ4iC,EAAc55B,KACpEw5B,KAAK,KAEJ,IAAI7/B,EAAYwY,EAAOA,EAAKzV,GAAUC,WAAa,KAC/C09B,EAAoBloB,EAAOA,EAAKzV,GAAUE,mBAAqB,KAC/D0b,EAAWpY,GAAYF,EAAO5iB,GAAUE,OAAO4nB,KAAK7f,GAAK8a,GAAY9a,EAAG9D,GAAehL,SAC3F,GAAI8jD,EAEA,OAQhB,SAASC,EAAwBC,EAAKC,EAAKC,EAAUC,GACjD,IAAIC,EAAc5kC,KAAG6kC,YAAYL,GACjCE,EAAWA,GAAYF,EACvBI,EAAYrvC,IAAIoT,IACZ,IAAIm8B,EAAUnhC,KAAK/T,KAAK40C,EAAK77B,GAC7B,GAAI3I,KAAG+kC,WAAWD,IAAY9kC,KAAGglC,UAAUF,GAASG,cAAe,CAC/D,IAAIC,EAASV,EAAIW,OAAOT,EAAS1rC,QACjCmrC,GAAgBxgC,KAAK/T,KAAK+0C,EAAYO,EAAQv8B,IAC9C47B,EAAwBO,EAASL,EAAKC,EAAUC,QAE/C,GAAI3kC,KAAG+kC,WAAWD,GAAU,CAC7B,IAAIM,EAAOplC,KAAGC,aAAa6kC,EAAS,SAChCI,EAASV,EAAIW,OAAOT,EAAS1rC,QACjCosC,EAAOxiC,GAAawiC,EAAMX,GAC1BzkC,KAAGokC,cAAczgC,KAAK/T,KAAK+0C,EAAYO,EAAQv8B,GAAOy8B,EAAM,YAtBjDb,CAAwB5gC,KAAK/T,8CAA8C00C,KAAsB,CACpG3jC,MAAOyJ,GAAYmY,EAAU/2B,GAAe5L,UAC5CgkB,aACD,KAAMD,KAAK/T,KAAK+T,KAAK/T,KAAKwsB,EAAK3Y,UAAW2Y,EAAKnb,OAAQ4iC,EAAelgC,KAAK/T,KAAK,aAgEnG,SAASu0C,GAAgBK,GAChBxkC,KAAG+kC,WAAWP,IACfr2B,QAAQgS,IAAI,kBAAoBqkB,GAK/BxkC,KAAG+kC,WAAWP,IACfxkC,KAAGqlC,UAAUb,GA7HrB/uB,GAAY7D,GAAG,gBAAiB,CAAC8O,EAAOC,KACpCxS,QAAQgS,IAAIQ,GACZ,IAAIO,EAAQpW,KAAKC,MAAM4V,GACnBwiB,GAAIjiB,EAAMzmB,KACV0oC,GAAIjiB,EAAMzmB,IAAI+oC,QAAQtiB,EAAMoiB,YAEzBH,GAAIjiB,EAAMzmB,MA6HrB,MAAMypC,GAAiB,CACnB56C,CAACjC,GAAU2B,YAAa2a,KAAK/T,KAAK,OAAQ,eAC1CtG,CAACjC,GAAUE,OAAQ,UACnB+B,CAACjC,GAAUqB,eAAgB,UAC3BY,CAACjC,GAAU4B,SAAU,eACrBK,CAACC,GAAeC,iBAAkB,UAClCF,CAACC,GAAeE,gBAAiB,UACjCH,CAACC,GAAeU,gBAAiB,UACjCX,CAACC,GAAeI,WAAY,eAC5BL,CAACC,GAAeM,UAAW,eAC3BP,CAACC,GAAeK,aAAc,eAC9BN,CAACC,GAAeO,iBAAkB,eAClCR,CAACC,GAAeG,WAAY,UAC5BJ,CAACC,GAAetI,aAAc,eAC9BqI,CAACC,GAAetB,iBAAkB,eAClCqB,CAACC,GAAeQ,eAAgB,eAChCT,CAACC,GAAeS,4BAA6B,gBC3J1C,SAASs7C,GAAgBr7B,GAC5B,MAAO,CACHA,SAID,SAASs7B,GAAmB7rB,GAC/B,OAAO8rB,6BAAmB,IAAKC,KAAQC,GAAahsB,GAIjD,SAASisB,GAAUC,GACtB,OAAOC,kBACHP,GACAC,GAFGM,CAGLD,GA6MC,SAAShX,GAAUiE,EAAOpU,EAAI,GACjC,IAAIqU,EAAU,GAEd,GAAIrU,EAAIoU,EAAM75B,OACV,IAAK,IAAIrf,EAAI,EAAGA,EAAIk5C,EAAMpU,GAAI9kC,IAAK,CAC/B,IAAIo5C,EAAOnE,GAAUiE,EAAOpU,EAAI,GAC5BnN,EAAO,CAAC33B,GACRo5C,EAAK/5B,OACL+5B,EAAKx9B,IAAI9a,IACLq4C,EAAQ9e,KAAK,IAAI1C,KAAS72B,MAI9Bq4C,EAAQ9e,KAAK1C,GAGzB,OAAOwhB,0bA3NXgT,OAAOvqD,UAAUwqD,QAAU,SAAU3qD,EAAGpB,GACpC,IAAImW,EAAMpU,KAAKiqD,UACf,GAAI3sC,KAAK4sC,IAAI7qD,IAAM+U,EAAI6I,OACnB,OAAO7I,EAEX,IAAIpW,EAAIsf,KAAK6sC,IAAK7sC,KAAK4sC,IAAI7qD,GAAKW,KAAKid,QAAW,EAAG,GAC/CmtC,EAAM15B,MAAM1yB,EAAI,GAAG6V,KAAKk2C,OAAO9rD,GAAK,KAAKosD,OAAO,IAEpD,OAAQhrD,EAAI,EAAK+qD,EAAMh2C,EAAMA,EAAMg2C,GAIvCL,OAAOvqD,UAAU8qD,YAAc,WAE3B,OADUtqD,MAAQ,IAGbmnB,QAAQ,kBAAmB,SAE3BA,QAAQ,2BAA4B,WAEpCA,QAAQ,KAAM,SAAUojC,GAAO,OAAOA,EAAIj2C,gBAAkBk2C,QAErE,CAAEC,IACE,IAAKA,EAAMC,mBAAoB,CAqBtBD,EAAMC,oBACPpsD,OAAOC,eAAeksD,EAAO,qBArBK,CAClCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUgsD,EAAiB10B,EAAM7Q,GACpC,IACIkG,EAAS,GAEb2K,EAAOA,GAAQ,SAAU5iB,EAAGG,GAAK,OAAOH,IAAMG,GAC9C,IAAK,IAAI9V,EAJQoC,KAIOid,OAAQrf,KACvBitD,EAAgBv8B,KAAK6H,EAAK/2B,KAAK,KALvBY,KAKwCpC,KAG5C0nB,GACLA,EAAO2S,KATEj4B,KAScpC,IAHvB4tB,EAAOyM,KANEj4B,KAMcpC,IAM/B,OAAO4tB,KAQdi/B,EAAMK,cACPxsD,OAAOC,eAAeksD,EAAO,eAAgB,CACzCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUgsD,EAAiB10B,GAC9B,IACI3K,EAAS,GACb2K,EAAOA,GAAQ,SAAU5iB,EAAGG,GAAK,OAAOH,IAAMG,GAC9C,IAAK,IAAI9V,EAHQoC,KAGOid,OAAQrf,KAC5B,IAAK,IAAI8kC,EAAImoB,EAAgB5tC,OAAQylB,KACjC,GAAKvM,EAAK00B,EAAgBnoB,GALjB1iC,KAKgCpC,IAAM,CAC3C4tB,EAAOyM,KANFj4B,KAMkBpC,IACvB,MAIZ,OAAO4tB,KAIdi/B,EAAMM,cACPzsD,OAAOC,eAAeksD,EAAO,eAAgB,CACzCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,WAEH,OADiBmB,KACCwZ,IAAIgV,IACX,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,SAMvCi8B,EAAM3+B,QACPxtB,OAAOC,eAAeksD,EAAO,SAAU,CACnCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUs3B,GACb,IAAI3K,EAAS,GACTw/B,EAAc,GAClB70B,EAAOA,GAAQ,SAAU5iB,GAAK,OAAOA,GAErC,IADA,IACS3V,EAAI,EAAGA,EADCoC,KACcid,OAAQrf,KAEU,IAAzC4tB,EAAO7X,QAAQwiB,EAHNn2B,KAGsBpC,OAC/B4tB,EAAOyM,KAAK9B,EAJHn2B,KAImBpC,KAC5BotD,EAAY/yB,KALHj4B,KAKmBpC,KAIpC,OAAOotD,KAKdP,EAAMQ,eAEP3sD,OAAOC,eAAeksD,EAAO,gBAAiB,CAC1CjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUqsD,GACbA,EAAUA,EAAQC,QAAQ,SAAU53C,EAAGG,GAAK,OAAOA,EAAIH,IACvD,IAAI63C,EAAaprD,KAKjB,OAJAkrD,EAAQ1xC,IAAI,SAAU44B,GAClBgZ,EAAWC,OAAOjZ,EAAO,KAGtBgZ,KAIdX,EAAMptC,aACP/e,OAAOC,eAAeksD,EAAO,cAAe,CACxCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUysD,EAAOC,EAAMp1B,GAE1BA,EAAOA,GAAQ,SAAU5iB,GAAK,OAAOA,GACrC,IAAK,IAAI3V,EAAI0tD,EAAO1tD,EAAI2tD,EAAM3tD,IAFboC,gBAGawrD,aAHbxrD,KAIEpC,EAAI0tD,GAAUn1B,EAAKv4B,GAJrBoC,KAOEi4B,KAAK9B,EAAKv4B,EAAGA,EAAI0tD,IAEpC,OATiBtrD,QAaxByqD,EAAMU,SACP7sD,OAAOC,eAAeksD,EAAO,UAAW,CACpCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUs3B,GAEb,OADiBn2B,KAAKwZ,IAAI,SAAUjG,GAAK,OAAOA,IAC9BwkB,KAAK5B,MAK9Bs0B,EAAMgB,SACPntD,OAAOC,eAAeksD,EAAO,UAAW,CACpCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUs3B,GAGb,IAFA,IACI3K,EAAS,GACJ5tB,EAAI,EAAGA,EAFCoC,KAEcid,OAAQrf,IAAK,CACxC,IAAIkB,EAAIq3B,EAHKn2B,KAGWpC,IACxB4tB,EAAO1sB,GAAK0sB,EAAO1sB,IAAM,GACzB0sB,EAAO1sB,GAAGm5B,KALGj4B,KAKapC,IAE9B,OAAO4tB,KAKdi/B,EAAM7D,QACPtoD,OAAOC,eAAeksD,EAAO,SAAU,CACnCjsD,YAAY,EACZmsD,UAAU,EACVC,cAAc,EACd/rD,MAAO,SAAUysD,EAAOC,GAEpBA,EAAOjuC,KAAKouC,IADK1rD,KACUid,OAAQsuC,QADlBvrD,KACmEid,OAASsuC,GAE7FD,GADAA,EAAQhuC,KAAKouC,IAFI1rD,KAEWid,OAAQquC,QAFnBtrD,KAEsEid,OAASquC,IAChF,EAAI,EAAIA,EACxBC,EAAOA,EAAO,EAAI,EAAIA,EAEtB,IADA,IAAI//B,EAASxrB,gBAAgBwrD,aAAe,IAAIA,aAAaD,EAAOD,GAAS,GACpE1tD,EAAI0tD,EAAO1tD,EAAI2tD,EAAM3tD,IACtBoC,gBAAgBwrD,aAChBhgC,EAAO5tB,EAAI0tD,GARFtrD,KAQsBpC,GAG/B4tB,EAAOyM,KAXEj4B,KAWcpC,IAI/B,OAAO4tB,MA9KvB,CAkLGkF,MAAMlxB,2BCtNGmsD,GAAA,KAAGC,UAAU,aAAb,EACID,GAAA,QAAMC,UAAU,kBAAhB,EAA4BD,GAAA,mBAA5B,MACAA,GAAA,QAAMC,UAAU,gBAAhB,EAA0BD,GAAA,qBAA1B,iBALD,MAAME,WAAeC,YAChChsD,SACI,OAAAisD,ICFO,MAAMF,WAAeC,YAChChsD,SACI,qbACIksD,CAAA,UAAQJ,UAAU,oBAAlB,EACK5rD,KAAKC,MAAMF,WCJb,MAAM8rD,WAAeC,YAChChsD,SACI,qbACImsD,CAAA,OAAKL,UAAU,iCAAf,EACK5rD,KAAKC,MAAMF,mcCOZmsD,GAAA,QAAMN,UAAU,gBAAhB,uBAKDhC,+BAff,cAA4BkC,YACxBhsD,SACI,IAAIqsD,EAAKnsD,KACT,OACIksD,GAAA,KACIE,QAAS,KACLD,EAAGlsD,MAAMy+B,yBAEbktB,UAAU,iBACVS,cAAY,YAAYC,KAAK,eALjC,EAAAC,wbCLG,MAAMC,WAAmBV,YACpChsD,SACI,OACI2sD,GAAA,OAAKb,UAAU,2BAAf,EACIa,GAAA,MAAIb,UAAU,uBAAd,EACK5rD,KAAKC,MAAMF,8oBCLjB,MAAM2sD,WAAqBZ,YACtCa,WACI,MAAO,gBAEXC,OACI,OAAO5sD,KAAKC,MAAM2sD,KAAO,OAAS,GAEtCC,eACI,OAAO7sD,KAAKC,MAAM2sD,KAAO,OAAS,QAEtCE,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,mBAE9BC,QACI,OAAO,KAEXC,WACI,OAAOhtD,KAAKC,MAAM+sD,SAEtBC,WACI,OAAOjtD,KAAKC,MAAM+sD,SAAW,iBAAmB,GAEpDE,WACI,OAAOltD,KAAKC,MAAM+sD,SAAW,iBAAmB,GAEpDG,aACI,OAAOntD,KAAKC,MAAM+sD,SAAW,SAEjCltD,SACI,IAAI6rB,EAAM,GAIV,OAHI3rB,KAAKC,MAAMmtD,QACXzhC,EAAI0hC,MAAQ,CAAED,MAAOptD,KAAKC,MAAMmtD,QAGhCE,GAAA,MAAI1B,sBAAuB5rD,KAAKitD,cAAcjtD,KAAK2sD,cAAc3sD,KAAK4sD,eAAtE,EACIU,GAAA,KAAG1B,UAAU,kBAAkBS,cAAY,WAAWkB,gBAAevtD,KAAK6sD,eAAgBT,QAAS,KAC3FpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,iBAFnB,EAKIkB,GAAA,KAAG1B,UAAW5rD,KAAK8sD,SAClB9sD,KAAK+sD,SAEVS,EAAAx1B,EAAAy1B,cAAA,KAAAC,GAAA,CAAI9B,UAAU,iBAAoBjgC,GAC7B3rB,KAAKC,MAAM0tD,WAAaL,GAAA,MAAI1B,UAAW5rD,KAAKmtD,mBAApB,EAAmCntD,KAAKC,MAAM0tD,YAAmB,KACzF3tD,KAAKC,MAAM2tD,OAASN,GAAA,MAAI1B,UAAW5rD,KAAKmtD,mBAApB,EAAmCntD,KAAKC,MAAM2tD,QAAe,KACjF5tD,KAAKgtD,WAAcM,GAAA,MAAI1B,UAAW5rD,KAAKktD,iBAApB,EAChBI,GAAA,OAAK1B,UAAU,YAAf,EACK5rD,KAAKC,MAAMF,WAEVutD,GAAA,MAAI1B,UAAW5rD,KAAKktD,iBAApB,EACNI,GAAA,MAAI1B,UAAU,aAAd,EACK5rD,KAAKC,MAAMF,WAGnBC,KAAKC,MAAM4tD,OAAS7tD,KAAKC,MAAM4tD,OAAS,ybCvD9C,MAAMC,WAAyBhC,YAE1CgB,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,mBAE9BhtD,SACI,OACIiuD,GAAA,eACIA,GAAA,KAAG3B,QAAS,KACJpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,iBAFnB,EAKI2B,GAAA,OAAKnC,UAAU,kBAAf,EACImC,GAAA,KAAGV,MAAO,CAAEW,SAAU,IAAMpC,UAAW5rD,KAAK8sD,UAEhDiB,GAAA,eACK/tD,KAAKC,MAAMilB,OAGhB6oC,GAAA,cAAI/tD,KAAKC,MAAMguD,icCpBpB,MAAMpC,WAAeC,YAChChsD,SACI,OACIouD,GAAA,SAAOtC,UAAU,qBAAjB,EACIsC,GAAA,WAAStC,UAAU,UAAUyB,MAAO,CAAEc,OAAQ,cAA9C,EACKnuD,KAAKC,MAAMF,YCLjB,MAAMquD,WAAsBtC,YACvChsD,SACI,qbAAQuuD,CAAA,MAAIzC,UAAU,eAAd,EAAwB5rD,KAAKC,MAAMilB,QCFpC,MAAMopC,WAAoBxC,YACrChsD,SACI,qbACIyuD,CAAA,MAAI3C,UAAU,0BAAd,EACK5rD,KAAKC,MAAMF,2dCqBJyuD,GAAA,KAAG5C,UAAU,gCA1BtB,MAAM6C,WAAqB3C,YACtC4C,SACI,OAAO1uD,KAAKC,MAAMyuD,OAAS,SAAW,GAE1C9B,OACI,OAAO5sD,KAAKC,MAAM2sD,KAAO,YAAc,GAE3C+B,UACI,OAAO3uD,KAAKC,MAAM2sD,KAAO,QAE7BE,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,kBAE9BhtD,SACI,OACI0uD,GAAA,MAAI5C,sBAAuB5rD,KAAK0uD,YAAY1uD,KAAK4sD,eAAjD,EACI4B,GAAA,KAAGpC,QAAS,KACJpsD,KAAKC,MAAM2uD,QACX5uD,KAAKC,MAAM2uD,SACX5uD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,iBAJnB,EAOKpsD,KAAKC,MAAM4uD,SAAW,KAAOL,GAAA,KAAG5C,aAAc5rD,KAAK8sD,WACpD0B,GAAA,iBAAOxuD,KAAKC,MAAMilB,OACjBllB,KAAKC,MAAM6uD,UAAY,KAAQN,GAAA,QAAM5C,UAAU,6BAAhB,EAAAmD,GAE3B/uD,KAAKC,MAAM+uD,MAAQhvD,KAAKC,MAAM+uD,MAAQ,OAEzChvD,KAAKC,MAAM6uD,WAAa9uD,KAAKC,MAAM+uD,MAAQ,KAAQR,GAAA,QAAM5C,UAAU,6BAAhB,EAChD5rD,KAAKC,MAAM+uD,MAAQhvD,KAAKC,MAAM+uD,MAAQ,OAG/CR,GAAA,MAAI5C,UAAU,gBAAgByB,MAAO,CAAEsB,QAAS3uD,KAAK2uD,iBAArD,EACK3uD,KAAKC,MAAMF,6bCjCjB,MAAMkvD,WAAqBnD,YACtCgB,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,iBAE9BhtD,SACI,OACIovD,GAAA,eACIA,GAAA,KAAG9C,QAAS,KACJpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,iBAFnB,EAII8C,GAAA,KAAGtD,UAAW5rD,KAAK8sD,SAClB9sD,KAAKC,MAAMilB,MACXllB,KAAKC,MAAM+uD,MAASE,GAAA,QAAMjsB,MAAM,6BAAZ,EAChBjjC,KAAKC,MAAM+uD,OACL,MAEdhvD,KAAKC,MAAMF,WCjBb,MAAMovD,WAAgBrD,YACjChsD,SACI,qbACIsvD,CAAA,OAAKxD,UAAU,kBAAkByB,MAAO,CAAEgC,UAAW,eAArD,EACKrvD,KAAKC,MAAMF,WCJb,MAAMuvD,WAAgBxD,YACjCc,OACI,OAAO5sD,KAAKC,MAAM2sD,KAAO,uBAAyB,GAEtD2C,aACI,OAAOvvD,KAAKC,MAAMuvD,UAAY,aAAe,GAEjD1vD,SACI,qbACI2vD,CAAA,SAAO7D,kDAAmD5rD,KAAK4sD,UAAU5sD,KAAKuvD,qBAA9E,EACKvvD,KAAKC,MAAMF,WCVb,MAAM2vD,WAAoB5D,YACrChsD,SACI,qbACI6vD,CAAA,MAAI/D,UAAU,wDAAd,EACK5rD,KAAKC,MAAMF,4bCJb,MAAM6vD,WAAmB9D,YACpCgB,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,eAE9B4B,SACI,OAAO1uD,KAAKC,MAAMyuD,OAAS,SAAW,GAE1CmB,gBACI,OAAO7vD,KAAKC,MAAMyuD,OAAS,OAAS,QAExC5uD,SACI,OACIgwD,GAAA,MAAIlE,UAAW5rD,KAAK0uD,eAApB,EACIoB,GAAA,KAAGzD,cAAY,MAAMD,QAAS,KACtBpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,WAEhBmB,gBAAevtD,KAAK6vD,sBAJvB,EAKIC,GAAA,KAAGlE,UAAW5rD,KAAK8sD,6bClBxB,MAAMiD,WAA2BjE,YAC5ChsD,SACI,OACIkwD,GAAA,MAAIpE,UAAU,6BAAd,EACK5rD,KAAKC,MAAMF,WAOrB,MAAMkwD,WAA+BnE,YACxCgB,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,sBAE9BhtD,SACI,OACIkwD,GAAA,eACIA,GAAA,KAAG5D,QAAS,KACJpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,iBAFnB,EAKI4D,GAAA,KAAGpE,uBAAwB5rD,KAAK8sD,kBAEhCkD,GAAA,OAAKpE,UAAU,kBAAf,EACIoE,GAAA,MAAIpE,UAAU,mCAAd,EAA4C5rD,KAAKC,MAAMilB,OAAS,IAEhE8qC,GAAA,cAAIhwD,KAAKC,MAAMguD,aAAe,QAQ/C,MAAMiC,WAAiCpE,YAC1ChsD,SACI,OACIkwD,GAAA,MAAIpE,UAAU,gCAAd,EAAyC5rD,KAAKC,MAAMilB,QCxCjD,MAAMirC,WAAgBrE,YACjC4C,SACI,OAAO1uD,KAAKC,MAAMyuD,OAAS,SAAW,GAE1C5uD,SACI,qbACIswD,CAAA,OAAKxE,sBAAuB5rD,KAAK0uD,iBAAjC,EACK1uD,KAAKC,MAAMyuD,OAAS1uD,KAAKC,MAAMF,SAAW,wNCN5C,MAAMswD,WAAoBvE,YACrCwE,SACI,OAAOtwD,KAAKC,MAAMswD,YAAc,eAAiB,GAErDzwD,SACI,OACI0tD,EAAAx1B,EAAAy1B,cAAA,OAAA+C,GAAA,CAAMlE,KAAK,OAAOV,UAAW5rD,KAAKswD,UAAc,CAAEjD,MAAOrtD,KAAKC,MAAMotD,OAAS,KACxErtD,KAAKC,MAAMF,ycCiBkD0wD,GAAA,KAAG7E,UAAU,eA3B5E,MAAM8E,WAAkB5E,YACnCiB,QACI,OAAO/sD,KAAKC,MAAM8sD,OAAS,UAE/BluD,QACI,OAAOmB,KAAKC,MAAMpB,OAAS,GAE/B8xD,cACI,OAAO3wD,KAAKC,MAAM0wD,aAAe,GAErCC,WACI,OAAO5wD,KAAKC,MAAM2wD,SAAW,WAAa,GAE9C9wD,SACI,OACI2wD,GAAA,OAAK7E,UAAW5rD,KAAKC,MAAM4wD,WAAa,cAAgB,mBAAxD,EACK7wD,KAAKC,MAAM4wD,WAAa,KAAOJ,GAAA,kBAAQzwD,KAAK+sD,SAC7C0D,GAAA,SAAOz5C,KAAK,OAAO45C,SAAU5wD,KAAK4wD,WAAYhF,UAAW,eAAgB/sD,MAAOmB,KAAKnB,QAASiyD,SAAWvjC,IACjGvtB,KAAKC,MAAM6wD,UACX9wD,KAAKC,MAAM6wD,SAASvjC,EAAEI,OAAO9uB,QAElC8xD,YAAa3wD,KAAK2wD,gBACpB3wD,KAAKC,MAAM4wD,WAAcJ,GAAA,QAAM7E,UAAU,wBAAhB,EACtB6E,GAAA,UAAQz5C,KAAK,SAASo1C,QAAS,KACvBpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,WAEhBjuD,KAAK,SAASugB,GAAG,aAAaktC,UAAU,qBAJ3C,EAAAmF,KAMO,wbC1BZ,MAAMC,WAAoBlF,YACrCiB,QACI,OAAO/sD,KAAKC,MAAM8sD,OAAS,UAE/BluD,QACI,OAAOmB,KAAKC,MAAMpB,OAAS,GAE/BqsB,UACI,OAAIlrB,KAAKC,MAAMirB,QACJlrB,KAAKC,MAAMirB,QAAQ1R,IAAI,CAAC1a,EAAGszC,IACtB6e,GAAA,UAAgCpyD,MAAOC,EAAED,iBAAlBuzC,IAA0BtzC,EAAEomB,QAG5D,GAEX0rC,WACI,OAAO5wD,KAAKC,MAAM2wD,SAAW,WAAa,GAE9C9wD,SACI,OACImxD,GAAA,OAAKrF,UAAU,mBAAf,EACIqF,GAAA,kBAAQjxD,KAAK+sD,SACbkE,GAAA,UAAQrF,UAAU,eAAegF,SAAU5wD,KAAK4wD,WAAYM,SAAWt7B,IAC/D51B,KAAKC,MAAM6wD,UACX9wD,KAAKC,MAAM6wD,SAASl7B,EAAIjI,OAAO9uB,QAGnCiyD,SAAWl7B,IACH51B,KAAKC,MAAM6wD,UACX9wD,KAAKC,MAAM6wD,SAASl7B,EAAIjI,OAAO9uB,QAEpCA,MAAOmB,KAAKnB,cATnB,EAUIoyD,GAAA,UAAQpyD,MAAO,SAAf,EAAoBmB,KAAKC,MAAMkxD,mBAAqBxpC,IACnD3nB,KAAKkrB,8bCjCX,MAAMkmC,WAAiBtF,YAClCiB,QACI,OAAO/sD,KAAKC,MAAM8sD,OAAS,UAE/BluD,QACI,OAAOmB,KAAKC,MAAMpB,OAAS,GAE/BqmB,QACI,OAAOllB,KAAKC,MAAMilB,OAAS,GAE/BplB,SACI,OACIuxD,GAAA,OAAKzF,UAAU,mBAAf,EACIyF,GAAA,OAAKzF,UAAU,iBAAf,EACIyF,GAAA,SAAOnsC,MAAOllB,KAAKklB,cAAnB,EACImsC,GAAA,SAAOr6C,KAAK,WAAWs6C,QAAStxD,KAAKnB,QAASiyD,SAAWvjC,IACjDvtB,KAAKC,MAAM6wD,UACX9wD,KAAKC,MAAM6wD,SAASvjC,EAAEI,OAAO2jC,YAGpCtxD,KAAK+sD,gCCxBvB,MAAMwE,GAAe,CACxBC,SAAU,WACVC,QAAS,UACTC,OAAQ,SACRpoC,UAAW,aAGFqoC,GAAoB,CAC7BpkD,CAACgkD,GAAaC,UAAW,CACrBplC,WAAY,CACRwlC,YAAa,CAAE56C,KAAM,WACrB66C,cAAe,CAAE76C,KAAM,UACvB86C,kBAAmB,CAAE96C,KAAM,YAGnCzJ,CAACgkD,GAAajoC,WAAY,CACtB8C,WAAY,CACR2lC,oBAAqB,CAAE/6C,KAAM,WAC7Bg7C,kBAAmB,CAAEh7C,KAAM,UAC3Bi7C,sBAAuB,CAAEj7C,KAAM,YAGvCzJ,CAACgkD,GAAaG,QAAS,CACnBtlC,WAAY,CACR8lC,UAAW,CAAEl7C,KAAM,WACnBm7C,eAAgB,CAAEn7C,KAAM,UACxBo7C,mBAAoB,CAAEp7C,KAAM,YAGpCzJ,CAACgkD,GAAaE,SAAU,CACpBrlC,WAAY,CACRimC,WAAY,CAAEr7C,KAAM,WACpBs7C,mBAAoB,CAAEt7C,KAAM,UAC5Bu7C,sBAAuB,CAAEv7C,KAAM,qcCkD5B4yC,gBArEf,cAAkCkC,YAC9BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcv8C,UACjD2vB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACpD,IAAI8I,EAAc11B,EAAc4sB,GAAgB5sB,EAAartB,GAAeK,aAAe,GACvF2iD,EAAa,GACjB,GAAID,EAAa,CACb,IAAIE,EAAmBf,GAAkBa,GACrCE,GAAoBA,EAAiBtmC,YACrC9tB,OAAOib,KAAKm5C,EAAiBtmC,YAAY5S,IAAI8V,IACzC,IAAIqjC,EAAaD,EAAiBtmC,WAAWkD,GACzCzwB,EAAQ6qD,GAAgB5sB,EAAa4sB,GAAmBx5C,sBAAwB,GACpF,GAAIyiD,GAAcA,EAAW37C,KACzB,OAAQ27C,EAAW37C,MACf,IAAK,SACDy7C,EAAWx6B,KAAK26B,GAACC,GAAD,CAEZ/B,SAAW18C,IACPpU,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBx5C,oBACzBwO,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAKA,EAAO0O,CAAC+hB,GAAOlb,MAGnC24C,MAAOz9B,EAAKg7B,cACZzrD,MAAOA,EAAMywB,IAAS,mBATFA,MAUxB,MACJ,IAAK,UACGmjC,EAAWx6B,KAAK26B,GAACE,GAAD,CAEZhC,SAAW18C,IACPpU,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBx5C,oBACzBwO,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAKA,EAAO0O,CAAC+hB,GAAOlb,MAGnC24C,MAAOz9B,EAAKg7B,cACZzrD,MAAOA,EAAMywB,IAAS,mBATFA,SAgBpD,OACIsjC,GAACG,GAAD,CAASrE,OAAQA,QAAjB,EACIkE,GAACI,GAAD,UACIJ,GAACK,GAAD,CACIlG,MAAOplC,EACPuD,QAAS5sB,OAAOib,KAAKg4C,IAAc/3C,IAAI1a,IAC5B,CAAEomB,MAAOpmB,EAAGD,MAAO0yD,GAAazyD,MAE3CgyD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB55C,YACzB4O,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAO2zD,IACNC,OCxEV,MAAMS,WAAuBpH,YACxChsD,SACI,qbACIqzD,CAAA,MAAIvH,UAAU,oBAAd,EACK5rD,KAAKC,MAAMF,4bCJb,MAAMqzD,WAAqBtH,YACtCgB,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,cAE9B5nC,QACI,OAAOllB,KAAKC,MAAMilB,OAAS,GAE/BplB,SACI,OACIuzD,GAAA,eACIA,GAAA,KAAGjH,QAAS,KACJpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,WAEhBlnC,MAAOllB,KAAKklB,QAASmnC,cAAY,wBAJpC,EAKIgH,GAAA,KAAGzH,UAAW5rD,KAAK8sD,YCnBhC,MACMlsD,GAAsB,sBACtB0yD,GAAkB,kBCF/B,IAAAC,GAAA,CAAY10D,MAAA,cAEZ,SAAS20D,KACT,QAA8C10D,EAA9ClB,EAAA,EAAAyB,EAAA4f,UAAAhC,OAAAw2C,EAAA,GAAkD71D,EAAAyB,IAAOzB,EAAA,CACzD,KAAAkB,EAAAmgB,UAAArhB,GAAA,KAAAkB,KAAA20D,EAAA,UAAA9nB,MAAA,iBAAA7sC,GACA20D,EAAA30D,GAAA,GAEA,WAAA40D,GAAAD,GAGA,SAAAC,GAAAD,GACAzzD,KAAAyzD,IAqDA,SAAAh1D,GAAAuY,EAAA7Y,GACA,QAAAF,EAAAL,EAAA,EAAAyB,EAAA2X,EAAAiG,OAAqCrf,EAAAyB,IAAOzB,EAC5C,IAAAK,EAAA+Y,EAAApZ,IAAAO,SACA,OAAAF,EAAAY,MAKA,SAAA80D,GAAA38C,EAAA7Y,EAAAktB,GACA,QAAAztB,EAAA,EAAAyB,EAAA2X,EAAAiG,OAAkCrf,EAAAyB,IAAOzB,EACzC,GAAAoZ,EAAApZ,GAAAO,SAAA,CACA6Y,EAAApZ,GAAA21D,GAAAv8C,IAAA48C,MAAA,EAAAh2D,GAAAi2D,OAAA78C,EAAA48C,MAAAh2D,EAAA,IACA,MAIA,OADA,MAAAytB,GAAArU,EAAAihB,KAAA,CAAmC95B,OAAAU,MAAAwsB,IACnCrU,EAzDA08C,GAAAl0D,UAAqBg0D,GAAQh0D,UAAA,CAC7Bs0D,YAAAJ,GACA79B,GAAA,SAAAk+B,EAAA1oC,GACA,IAEAvsB,EAdAge,EAYA22C,EAAAzzD,KAAAyzD,EACAO,GAbAl3C,EAaA22C,GAAAM,EAAA,IAZAvJ,OAAAh3C,MAAA,SAAAgG,IAAA,SAAA1a,GACA,IAAAX,EAAA,GAAAP,EAAAkB,EAAA6U,QAAA,KAEA,GADA/V,GAAA,IAAAO,EAAAW,EAAA80D,MAAAh2D,EAAA,GAAAkB,IAAA80D,MAAA,EAAAh2D,IACAkB,IAAAge,EAAArd,eAAAX,GAAA,UAAA6sC,MAAA,iBAAA7sC,GACA,OAAYkY,KAAAlY,EAAAX,WAUZP,GAAA,EACAyB,EAAA20D,EAAA/2C,OAGA,KAAAgC,UAAAhC,OAAA,IAOA,SAAAoO,GAAA,mBAAAA,EAAA,UAAAsgB,MAAA,qBAAAtgB,GACA,OAAAztB,EAAAyB,GACA,GAAAP,GAAAi1D,EAAAC,EAAAp2D,IAAAoZ,KAAAy8C,EAAA30D,GAAA60D,GAAAF,EAAA30D,GAAAi1D,EAAA51D,KAAAktB,QACA,SAAAA,EAAA,IAAAvsB,KAAA20D,IAAA30D,GAAA60D,GAAAF,EAAA30D,GAAAi1D,EAAA51D,KAAA,MAGA,OAAA6B,KAZA,OAAApC,EAAAyB,GAAA,IAAAP,GAAAi1D,EAAAC,EAAAp2D,IAAAoZ,QAAAlY,EAAAL,GAAAg1D,EAAA30D,GAAAi1D,EAAA51D,OAAA,OAAAW,GAcAm1D,KAAA,WACA,IAAAA,EAAA,GAAiBR,EAAAzzD,KAAAyzD,EACjB,QAAA30D,KAAA20D,EAAAQ,EAAAn1D,GAAA20D,EAAA30D,GAAA80D,QACA,WAAAF,GAAAO,IAEAl2D,KAAA,SAAAiZ,EAAAk9C,GACA,IAAA70D,EAAA4f,UAAAhC,OAAA,aAAA5d,EAAAP,EAAAg3B,EAAA,IAAApF,MAAArxB,GAAAzB,EAAA,EAAkFA,EAAAyB,IAAOzB,EAAAk4B,EAAAl4B,GAAAqhB,UAAArhB,EAAA,GACzF,IAAAoC,KAAAyzD,EAAAh0D,eAAAuX,GAAA,UAAA20B,MAAA,iBAAA30B,GACA,IAAApZ,EAAA,EAAAyB,GAAAP,EAAAkB,KAAAyzD,EAAAz8C,IAAAiG,OAA+Crf,EAAAyB,IAAOzB,EAAAkB,EAAAlB,GAAAiB,MAAAiwB,MAAAolC,EAAAp+B,IAEtDhH,MAAA,SAAA9X,EAAAk9C,EAAAp+B,GACA,IAAA91B,KAAAyzD,EAAAh0D,eAAAuX,GAAA,UAAA20B,MAAA,iBAAA30B,GACA,QAAAlY,EAAAkB,KAAAyzD,EAAAz8C,GAAApZ,EAAA,EAAAyB,EAAAP,EAAAme,OAAmDrf,EAAAyB,IAAOzB,EAAAkB,EAAAlB,GAAAiB,MAAAiwB,MAAAolC,EAAAp+B,KAuB3C,IAAAq+B,GAAA,GCnFRC,GAAA,+BAEQC,GAAA,CACfC,IAAA,6BACAF,SACAG,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCCLeC,GAAA,SAAAv2D,GACf,IAAAw2D,EAAAx2D,GAAA,GAAAP,EAAA+2D,EAAAhhD,QAAA,KAEA,OADA/V,GAAA,cAAA+2D,EAAAx2D,EAAAy1D,MAAA,EAAAh2D,MAAAO,IAAAy1D,MAAAh2D,EAAA,IACSy2D,GAAU50D,eAAAk1D,GAAA,CAA2BrvB,MAAO+uB,GAAUM,GAAAC,MAAAz2D,GAAsBA,GCctE,IAAA02D,GAAA,SAAA12D,GACf,IAAA22D,EAAiBJ,GAASv2D,GAC1B,OAAA22D,EAAAF,MARA,SAAAE,GACA,kBACA,OAAA90D,KAAA+0D,cAAAC,gBAAAF,EAAAxvB,MAAAwvB,EAAAF,SAZA,SAAAz2D,GACA,kBACA,IAAA82D,EAAAj1D,KAAA+0D,cACAG,EAAAl1D,KAAAm1D,aACA,OAAAD,IAAmBd,IAAKa,EAAAG,gBAAAD,eAA8Cf,GACtEa,EAAAxH,cAAAtvD,GACA82D,EAAAD,gBAAAE,EAAA/2D,MAcA22D,ICvBAO,GAAA,EAMA,SAAAC,KACAt1D,KAAAyzD,EAAA,OAAA4B,IAAA/9B,SAAA,IAGAg+B,GAAA91D,UARe,WACf,WAAA81D,IAOA91D,UAAA,CACAs0D,YAAAwB,GACA72D,IAAA,SAAA+vB,GAEA,IADA,IAAA9P,EAAA1e,KAAAyzD,IACA/0C,KAAA8P,IAAA,KAAAA,IAAA6vB,YAAA,OACA,OAAA7vB,EAAA9P,IAEAi1C,IAAA,SAAAnlC,EAAA3vB,GACA,OAAA2vB,EAAAxuB,KAAAyzD,GAAA50D,GAEA02D,OAAA,SAAA/mC,GACA,OAAAxuB,KAAAyzD,KAAAjlC,YAAAxuB,KAAAyzD,IAEAn8B,SAAA,WACA,OAAAt3B,KAAAyzD,ICxBA,IAAA+B,GAAA,SAAAC,GACA,kBACA,OAAAz1D,KAAA01D,QAAAD,KAIA,uBAAAR,SAAA,CACA,IAAMU,GAAOV,SAAAG,gBACb,IAAOO,GAAOD,QAAA,CACd,IAAAE,GAAwBD,GAAOE,uBACpBF,GAAOG,mBACPH,GAAOI,oBACPJ,GAAOK,iBAClBR,GAAA,SAAAC,GACA,kBACA,OAAAG,GAAA73D,KAAAiC,KAAAy1D,MAMe,IAAAQ,GAAA,GCrBfC,GAAA,GAEWC,GAAK,KAEhB,oBAAAlB,WAEA,iBADaA,SAAAG,kBAEbc,GAAA,CAAoBE,WAAA,YAAAC,WAAA,cAIpB,SAAAC,GAAAC,EAAAnkB,EAAA9mB,GAEA,OADAirC,EAAAC,GAAAD,EAAAnkB,EAAA9mB,GACA,SAAAqZ,GACA,IAAA8xB,EAAA9xB,EAAA+xB,cACAD,QAAAz2D,MAAA,EAAAy2D,EAAAE,wBAAA32D,QACAu2D,EAAAx4D,KAAAiC,KAAA2kC,IAKA,SAAA6xB,GAAAD,EAAAnkB,EAAA9mB,GACA,gBAAAsrC,GACA,IAAAC,EAAiBV,GACbA,GAAKS,EACT,IACAL,EAAAx4D,KAAAiC,UAAA82D,SAAA1kB,EAAA9mB,GACK,QACC6qC,GAAKU,IAaX,SAAAE,GAAAhD,GACA,kBACA,IAAAl+B,EAAA71B,KAAAg3D,KACA,GAAAnhC,EAAA,CACA,QAAAx3B,EAAAqkC,EAAA,EAAA9kC,GAAA,EAAAI,EAAA63B,EAAA5Y,OAA6CylB,EAAA1kC,IAAO0kC,EACpDrkC,EAAAw3B,EAAA6M,GAAAqxB,EAAA/8C,MAAA3Y,EAAA2Y,OAAA+8C,EAAA/8C,MAAA3Y,EAAAF,OAAA41D,EAAA51D,KAGA03B,IAAAj4B,GAAAS,EAFA2B,KAAAi3D,oBAAA54D,EAAA2Y,KAAA3Y,EAAAk4D,SAAAl4D,EAAA64D,WAKAt5D,EAAAi4B,EAAA5Y,OAAArf,SACAoC,KAAAg3D,OAIA,SAAAG,GAAApD,EAAAl1D,EAAAq4D,GACA,IAAAE,EAAAlB,GAAAz2D,eAAAs0D,EAAA/8C,MAAAs/C,GAAAE,GACA,gBAAAt4D,EAAAN,EAAA0tB,GACA,IAAAjtB,EAAAw3B,EAAA71B,KAAAg3D,KAAAT,EAAAa,EAAAv4D,EAAAjB,EAAA0tB,GACA,GAAAuK,EAAA,QAAA6M,EAAA,EAAA1kC,EAAA63B,EAAA5Y,OAA0CylB,EAAA1kC,IAAO0kC,EACjD,IAAArkC,EAAAw3B,EAAA6M,IAAA1rB,OAAA+8C,EAAA/8C,MAAA3Y,EAAAF,OAAA41D,EAAA51D,KAIA,OAHA6B,KAAAi3D,oBAAA54D,EAAA2Y,KAAA3Y,EAAAk4D,SAAAl4D,EAAA64D,SACAl3D,KAAAq3D,iBAAAh5D,EAAA2Y,KAAA3Y,EAAAk4D,WAAAl4D,EAAA64D,gBACA74D,EAAAQ,SAIAmB,KAAAq3D,iBAAAtD,EAAA/8C,KAAAu/C,EAAAW,GACA74D,EAAA,CAAS2Y,KAAA+8C,EAAA/8C,KAAA7Y,KAAA41D,EAAA51D,KAAAU,QAAA03D,WAAAW,WACTrhC,EACAA,EAAAoC,KAAA55B,GADA2B,KAAAg3D,KAAA,CAAA34D,ICvEA,SAAAi5D,MAEe,IAAAC,GAAA,SAAA9B,GACf,aAAAA,EAAA6B,GAAA,WACA,OAAAt3D,KAAAw3D,cAAA/B,KCJA,SAASgC,KACT,SAGe,IAAAC,GAAA,SAAAjC,GACf,aAAAA,EAA4BgC,GAAK,WACjC,OAAAz3D,KAAA23D,iBAAAlC,KCNemC,GAAA,SAAAC,GACf,WAAAnnC,MAAAmnC,EAAA56C,SCMO,SAAA66C,GAAAppC,EAAAqpC,GACP/3D,KAAA+0D,cAAArmC,EAAAqmC,cACA/0D,KAAAm1D,aAAAzmC,EAAAymC,aACAn1D,KAAAg4D,MAAA,KACAh4D,KAAAi4D,QAAAvpC,EACA1uB,KAAA82D,SAAAiB,EAGAD,GAAAt4D,UAAA,CACAs0D,YAAAgE,GACAI,YAAA,SAAAC,GAAgC,OAAAn4D,KAAAi4D,QAAAG,aAAAD,EAAAn4D,KAAAg4D,QAChCI,aAAA,SAAAD,EAAAE,GAAuC,OAAAr4D,KAAAi4D,QAAAG,aAAAD,EAAAE,IACvCb,cAAA,SAAA/B,GAAqC,OAAAz1D,KAAAi4D,QAAAT,cAAA/B,IACrCkC,iBAAA,SAAAlC,GAAwC,OAAAz1D,KAAAi4D,QAAAN,iBAAAlC,KCpBzB,ICIf6C,GAAA,IAEA,SAAAC,GAAA7pC,EAAApD,EAAAktC,EAAAX,EAAAY,EAAA1xC,GASA,IARA,IACAyH,EADA5wB,EAAA,EAEA86D,EAAAptC,EAAArO,OACA07C,EAAA5xC,EAAA9J,OAKQrf,EAAA+6D,IAAgB/6D,GACxB4wB,EAAAlD,EAAA1tB,KACA4wB,EAAAsoC,SAAA/vC,EAAAnpB,GACAi6D,EAAAj6D,GAAA4wB,GAEAgqC,EAAA56D,GAAA,IAAqBk6D,GAASppC,EAAA3H,EAAAnpB,IAK9B,KAAQA,EAAA86D,IAAiB96D,GACzB4wB,EAAAlD,EAAA1tB,MACA66D,EAAA76D,GAAA4wB,GAKA,SAAAoqC,GAAAlqC,EAAApD,EAAAktC,EAAAX,EAAAY,EAAA1xC,EAAA5nB,GACA,IAAAvB,EACA4wB,EAKAqqC,EAJAC,EAAA,GACAJ,EAAAptC,EAAArO,OACA07C,EAAA5xC,EAAA9J,OACA87C,EAAA,IAAAroC,MAAAgoC,GAKA,IAAA96D,EAAA,EAAaA,EAAA86D,IAAiB96D,GAC9B4wB,EAAAlD,EAAA1tB,MACAm7D,EAAAn7D,GAAAi7D,EAAAP,GAAAn5D,EAAApB,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,GACAutC,KAAAC,EACAL,EAAA76D,GAAA4wB,EAEAsqC,EAAAD,GAAArqC,GAQA,IAAA5wB,EAAA,EAAaA,EAAA+6D,IAAgB/6D,GAE7B4wB,EAAAsqC,EADAD,EAAAP,GAAAn5D,EAAApB,KAAA2wB,EAAA3H,EAAAnpB,KAAAmpB,MAEA8wC,EAAAj6D,GAAA4wB,EACAA,EAAAsoC,SAAA/vC,EAAAnpB,GACAk7D,EAAAD,GAAA,MAEAL,EAAA56D,GAAA,IAAqBk6D,GAASppC,EAAA3H,EAAAnpB,IAK9B,IAAAA,EAAA,EAAaA,EAAA86D,IAAiB96D,GAC9B4wB,EAAAlD,EAAA1tB,KAAAk7D,EAAAC,EAAAn7D,MAAA4wB,IACAiqC,EAAA76D,GAAA4wB,GClDA,SAAAwqC,GAAAhhC,EAAA7Z,GACA,OAAA6Z,EAAA7Z,GAAA,EAAA6Z,EAAA7Z,EAAA,EAAA6Z,GAAA7Z,EAAA,EAAA86C,ICoBe,IC1CAC,GAAA,SAAA1qC,GACf,OAAAA,EAAAumC,eAAAvmC,EAAAumC,cAAAoE,aACA3qC,EAAAymC,UAAAzmC,GACAA,EAAA2qC,aC4BO,SAAAC,GAAA5qC,EAAArwB,GACP,OAAAqwB,EAAA6+B,MAAAgM,iBAAAl7D,IACS+6D,GAAW1qC,GAAA8qC,iBAAA9qC,EAAA,MAAA6qC,iBAAAl7D,GCjCpB,SAAAo7D,GAAAC,GACA,OAAAA,EAAAhP,OAAAh3C,MAAA,SAGA,SAAAimD,GAAAjrC,GACA,OAAAA,EAAAirC,WAAA,IAAAC,GAAAlrC,GAGA,SAAAkrC,GAAAlrC,GACAxuB,KAAAq2B,MAAA7H,EACAxuB,KAAA25D,OAAAJ,GAAA/qC,EAAAorC,aAAA,cAuBA,SAAAC,GAAArrC,EAAAsrC,GAEA,IADA,IAAArjC,EAAAgjC,GAAAjrC,GAAA5wB,GAAA,EAAAyB,EAAAy6D,EAAA78C,SACArf,EAAAyB,GAAAo3B,EAAAsjC,IAAAD,EAAAl8D,IAGA,SAAAo8D,GAAAxrC,EAAAsrC,GAEA,IADA,IAAArjC,EAAAgjC,GAAAjrC,GAAA5wB,GAAA,EAAAyB,EAAAy6D,EAAA78C,SACArf,EAAAyB,GAAAo3B,EAAA8+B,OAAAuE,EAAAl8D,IA3BA87D,GAAAl6D,UAAA,CACAu6D,IAAA,SAAA57D,GACA6B,KAAA25D,OAAAhmD,QAAAxV,GACA,IACA6B,KAAA25D,OAAA1hC,KAAA95B,GACA6B,KAAAq2B,MAAA4jC,aAAA,QAAAj6D,KAAA25D,OAAA9lD,KAAA,QAGA0hD,OAAA,SAAAp3D,GACA,IAAAP,EAAAoC,KAAA25D,OAAAhmD,QAAAxV,GACAP,GAAA,IACAoC,KAAA25D,OAAAtO,OAAAztD,EAAA,GACAoC,KAAAq2B,MAAA4jC,aAAA,QAAAj6D,KAAA25D,OAAA9lD,KAAA,QAGAqmD,SAAA,SAAA/7D,GACA,OAAA6B,KAAA25D,OAAAhmD,QAAAxV,IAAA,IC7BA,SAAAg8D,KACAn6D,KAAAo6D,YAAA,GCDA,SAAAC,KACAr6D,KAAAs6D,UAAA,GCDA,SAAAC,KACAv6D,KAAAw6D,aAAAx6D,KAAAq+C,WAAA6Z,YAAAl4D,MCDA,SAAAy6D,KACAz6D,KAAA06D,iBAAA16D,KAAAq+C,WAAA+Z,aAAAp4D,UAAAq+C,WAAAsc,YCEA,SAAAC,KACA,YCJA,SAAArF,KACA,IAAA7mC,EAAA1uB,KAAAq+C,WACA3vB,KAAAmsC,YAAA76D,MCAA,SAAA86D,GAAAtsC,EAAAxX,EAAA2vC,GACA,IAAAoU,EAAe7B,GAAW1qC,GAC1BmW,EAAAo2B,EAAAC,YAEA,mBAAAr2B,EACAA,EAAA,IAAAA,EAAA3tB,EAAA2vC,IAEAhiB,EAAAo2B,EAAA9F,SAAAgG,YAAA,SACAtU,GAAAhiB,EAAAu2B,UAAAlkD,EAAA2vC,EAAAwU,QAAAxU,EAAAyU,YAAAz2B,EAAA02B,OAAA1U,EAAA0U,QACA12B,EAAAu2B,UAAAlkD,GAAA,OAGAwX,EAAAssC,cAAAn2B,GAee,ICCJ22B,GAAI,OAER,SAAAC,GAAAzzC,EAAA0zC,GACPx7D,KAAAy7D,QAAA3zC,EACA9nB,KAAA07D,SAAAF,EAGA,SAASG,KACT,WAAAJ,GAAA,EAAAtG,SAAAG,kBAAqDkG,IAGrDC,GAAA/7D,UAAsBm8D,GAASn8D,UAAA,CAC/Bs0D,YAAAyH,GACAK,OCxCe,SAAAA,GACf,mBAAAA,MAA6CrE,GAAQqE,IAErD,QAAA9zC,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAA4+C,EAAA,IAAAnrC,MAAA1yB,GAAA0kC,EAAA,EAAqFA,EAAA1kC,IAAO0kC,EAC5F,QAAAlU,EAAAstC,EAAAxwC,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAA8+C,EAAAF,EAAAn5B,GAAA,IAAAhS,MAAArxB,GAAAzB,EAAA,EAA+GA,EAAAyB,IAAOzB,GACtH4wB,EAAAlD,EAAA1tB,MAAAk+D,EAAAF,EAAA79D,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,MACA,aAAAkD,IAAAstC,EAAAhF,SAAAtoC,EAAAsoC,UACAiF,EAAAn+D,GAAAk+D,GAKA,WAAaP,GAASM,EAAA77D,KAAA07D,WD6BtBM,UEzCe,SAAAJ,GACf,mBAAAA,MAA6ClE,GAAWkE,IAExD,QAAA9zC,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAA4+C,EAAA,GAAAL,EAAA,GAAA94B,EAAA,EAAyFA,EAAA1kC,IAAO0kC,EAChG,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAArf,EAAA,EAA8DA,EAAAyB,IAAOzB,GACrE4wB,EAAAlD,EAAA1tB,MACAi+D,EAAA5jC,KAAA2jC,EAAA79D,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,IACAkwC,EAAAvjC,KAAAzJ,IAKA,WAAa+sC,GAASM,EAAAL,IF8BtB/nD,OG1Ce,SAAAwoD,GACf,mBAAAA,MAA2ChG,GAAOgG,IAElD,QAAAn0C,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAA4+C,EAAA,IAAAnrC,MAAA1yB,GAAA0kC,EAAA,EAAqFA,EAAA1kC,IAAO0kC,EAC5F,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAA8+C,EAAAF,EAAAn5B,GAAA,GAAA9kC,EAAA,EAA4FA,EAAAyB,IAAOzB,GACnG4wB,EAAAlD,EAAA1tB,KAAAq+D,EAAAl+D,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,IACAywC,EAAA9jC,KAAAzJ,GAKA,WAAa+sC,GAASM,EAAA77D,KAAA07D,WHgCtB30C,Kb8Be,SAAAloB,EAAAM,GACf,IAAAN,EAGA,OAFAkoB,EAAA,IAAA2J,MAAA1wB,KAAAk8D,QAAAx5B,GAAA,EACA1iC,KAAAm8D,KAAA,SAAAj+D,GAA2B6oB,IAAA2b,GAAAxkC,IAC3B6oB,EAGA,IDnFexT,ECmFfnU,EAAAD,EAAAy5D,GAAAL,GACAiD,EAAAx7D,KAAA07D,SACA5zC,EAAA9nB,KAAAy7D,QAEA,mBAAA58D,IDvFe0U,ECuFoC1U,EAAnDA,EDtFA,WACA,OAAA0U,ICuFA,QAAAvV,EAAA8pB,EAAA7K,OAAA46C,EAAA,IAAAnnC,MAAA1yB,GAAAw6D,EAAA,IAAA9nC,MAAA1yB,GAAAy6D,EAAA,IAAA/nC,MAAA1yB,GAAA0kC,EAAA,EAAsGA,EAAA1kC,IAAO0kC,EAAA,CAC7G,IAAAhU,EAAA8sC,EAAA94B,GACApX,EAAAxD,EAAA4a,GACAg2B,EAAAptC,EAAArO,OACA8J,EAAAloB,EAAAd,KAAA2wB,OAAAooC,SAAAp0B,EAAA84B,GACA7C,EAAA5xC,EAAA9J,OACAm/C,EAAA5D,EAAA91B,GAAA,IAAAhS,MAAAioC,GACA0D,EAAAxE,EAAAn1B,GAAA,IAAAhS,MAAAioC,GAGAv5D,EAAAsvB,EAAApD,EAAA8wC,EAAAC,EAFA5D,EAAA/1B,GAAA,IAAAhS,MAAAgoC,GAEA3xC,EAAA5nB,GAKA,QAAAm9D,EAAAjE,EAAAkE,EAAA,EAAAC,EAAA,EAA4CD,EAAA5D,IAAiB4D,EAC7D,GAAAD,EAAAF,EAAAG,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACAlE,EAAAgE,EAAAG,SAAA7D,IACA2D,EAAAtE,MAAAK,GAAA,MAQA,OAHAR,EAAA,IAAe0D,GAAS1D,EAAA2D,IACxBiB,OAAAjE,EACAX,EAAA6E,MAAAjE,EACAZ,GarEAW,Mf5Ce,WACf,WAAa+C,GAASv7D,KAAAy8D,QAAAz8D,KAAAy7D,QAAAjiD,IAAiCo+C,IAAM53D,KAAA07D,We4C7DjD,KI7Ce,WACf,WAAa8C,GAASv7D,KAAA08D,OAAA18D,KAAAy7D,QAAAjiD,IAAgCo+C,IAAM53D,KAAA07D,WJ6C5DiB,MK/Ce,SAAAC,GAEf,QAAAC,EAAA78D,KAAAy7D,QAAAqB,EAAAF,EAAAnB,QAAAsB,EAAAF,EAAA5/C,OAAA+/C,EAAAF,EAAA7/C,OAAAjf,EAAAsf,KAAAouC,IAAAqR,EAAAC,GAAAC,EAAA,IAAAvsC,MAAAqsC,GAAAr6B,EAAA,EAA8JA,EAAA1kC,IAAO0kC,EACrK,QAAAlU,EAAA0uC,EAAAL,EAAAn6B,GAAAy6B,EAAAL,EAAAp6B,GAAArjC,EAAA69D,EAAAjgD,OAAA0/C,EAAAM,EAAAv6B,GAAA,IAAAhS,MAAArxB,GAAAzB,EAAA,EAAwHA,EAAAyB,IAAOzB,GAC/H4wB,EAAA0uC,EAAAt/D,IAAAu/D,EAAAv/D,MACA++D,EAAA/+D,GAAA4wB,GAKA,KAAQkU,EAAAq6B,IAAQr6B,EAChBu6B,EAAAv6B,GAAAm6B,EAAAn6B,GAGA,WAAa64B,GAAS0B,EAAAj9D,KAAA07D,WLkCtB0B,MMlDe,WAEf,QAAAt1C,EAAA9nB,KAAAy7D,QAAA/4B,GAAA,EAAA1kC,EAAA8pB,EAAA7K,SAA4DylB,EAAA1kC,GAC5D,QAAAwwB,EAAAlD,EAAAxD,EAAA4a,GAAA9kC,EAAA0tB,EAAArO,OAAA,EAAAo7C,EAAA/sC,EAAA1tB,KAA4EA,GAAA,IAC5E4wB,EAAAlD,EAAA1tB,MACAy6D,OAAA7pC,EAAAgsC,aAAAnC,EAAAha,WAAA+Z,aAAA5pC,EAAA6pC,GACAA,EAAA7pC,GAKA,OAAAxuB,MNwCA+3B,KZjDe,SAAAslC,GAGf,SAAAC,EAAAtlC,EAAA7Z,GACA,OAAA6Z,GAAA7Z,EAAAk/C,EAAArlC,EAAA8+B,SAAA34C,EAAA24C,WAAA9+B,GAAA7Z,EAHAk/C,MAAArE,IAMA,QAAAlxC,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAAsgD,EAAA,IAAA7sC,MAAA1yB,GAAA0kC,EAAA,EAAsFA,EAAA1kC,IAAO0kC,EAAA,CAC7F,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAAugD,EAAAD,EAAA76B,GAAA,IAAAhS,MAAArxB,GAAAzB,EAAA,EAAwGA,EAAAyB,IAAOzB,GAC/G4wB,EAAAlD,EAAA1tB,MACA4/D,EAAA5/D,GAAA4wB,GAGAgvC,EAAAzlC,KAAAulC,GAGA,WAAa/B,GAASgC,EAAAv9D,KAAA07D,UAAA0B,SYkCtBr/D,KOpDe,WACf,IAAAstB,EAAApM,UAAA,GAGA,OAFAA,UAAA,GAAAjf,KACAqrB,EAAAyD,MAAA,KAAA7P,WACAjf,MPiDAsoB,MQrDe,WACf,IAAAA,EAAA,IAAAoI,MAAA1wB,KAAAk8D,QAAAt+D,GAAA,EAEA,OADAoC,KAAAm8D,KAAA,WAAwB7zC,IAAA1qB,GAAAoC,OACxBsoB,GRmDAkG,KStDe,WAEf,QAAA1G,EAAA9nB,KAAAy7D,QAAA/4B,EAAA,EAAA1kC,EAAA8pB,EAAA7K,OAA2DylB,EAAA1kC,IAAO0kC,EAClE,QAAApX,EAAAxD,EAAA4a,GAAA9kC,EAAA,EAAAyB,EAAAisB,EAAArO,OAAwDrf,EAAAyB,IAAOzB,EAAA,CAC/D,IAAA4wB,EAAAlD,EAAA1tB,GACA,GAAA4wB,EAAA,OAAAA,EAIA,aT8CA0tC,KUvDe,WACf,IAAAA,EAAA,EAEA,OADAl8D,KAAAm8D,KAAA,aAAwBD,IACxBA,GVqDAt+C,MWxDe,WACf,OAAA5d,KAAAwuB,QXwDA2tC,KYzDe,SAAA9wC,GAEf,QAAAvD,EAAA9nB,KAAAy7D,QAAA/4B,EAAA,EAAA1kC,EAAA8pB,EAAA7K,OAA2DylB,EAAA1kC,IAAO0kC,EAClE,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAA9kC,EAAA,EAAAyB,EAAAisB,EAAArO,OAA8Drf,EAAAyB,IAAOzB,GACrE4wB,EAAAlD,EAAA1tB,KAAAytB,EAAAttB,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,GAIA,OAAAtrB,MZkDA0pC,KXhBe,SAAAvrC,EAAAU,GACf,IAAAi2D,EAAiBJ,GAASv2D,GAE1B,GAAA8gB,UAAAhC,OAAA,GACA,IAAAuR,EAAAxuB,KAAAwuB,OACA,OAAAsmC,EAAAF,MACApmC,EAAAivC,eAAA3I,EAAAxvB,MAAAwvB,EAAAF,OACApmC,EAAAorC,aAAA9E,GAGA,OAAA90D,KAAAm8D,MAAA,MAAAt9D,EACAi2D,EAAAF,MA7CA,SAAAE,GACA,kBACA90D,KAAA09D,kBAAA5I,EAAAxvB,MAAAwvB,EAAAF,SARA,SAAAz2D,GACA,kBACA6B,KAAA29D,gBAAAx/D,KAiDA,mBAAAU,EACAi2D,EAAAF,MApBA,SAAAE,EAAAj2D,GACA,kBACA,IAAA0uB,EAAA1uB,EAAAiwB,MAAA9uB,KAAAif,WACA,MAAAsO,EAAAvtB,KAAA09D,kBAAA5I,EAAAxvB,MAAAwvB,EAAAF,OACA50D,KAAA49D,eAAA9I,EAAAxvB,MAAAwvB,EAAAF,MAAArnC,KAZA,SAAApvB,EAAAU,GACA,kBACA,IAAA0uB,EAAA1uB,EAAAiwB,MAAA9uB,KAAAif,WACA,MAAAsO,EAAAvtB,KAAA29D,gBAAAx/D,GACA6B,KAAAi6D,aAAA97D,EAAAovB,KAyBAunC,EAAAF,MAnCA,SAAAE,EAAAj2D,GACA,kBACAmB,KAAA49D,eAAA9I,EAAAxvB,MAAAwvB,EAAAF,MAAA/1D,KARA,SAAAV,EAAAU,GACA,kBACAmB,KAAAi6D,aAAA97D,EAAAU,MAuCAi2D,EAAAj2D,KWIAwuD,MTrCe,SAAAlvD,EAAAU,EAAAg/D,GACf,OAAA5+C,UAAAhC,OAAA,EACAjd,KAAAm8D,MAAA,MAAAt9D,EAtBA,SAAAV,GACA,kBACA6B,KAAAqtD,MAAAyQ,eAAA3/D,KAqBA,mBAAAU,EAXA,SAAAV,EAAAU,EAAAg/D,GACA,kBACA,IAAAtwC,EAAA1uB,EAAAiwB,MAAA9uB,KAAAif,WACA,MAAAsO,EAAAvtB,KAAAqtD,MAAAyQ,eAAA3/D,GACA6B,KAAAqtD,MAAA0Q,YAAA5/D,EAAAovB,EAAAswC,KAVA,SAAA1/D,EAAAU,EAAAg/D,GACA,kBACA79D,KAAAqtD,MAAA0Q,YAAA5/D,EAAAU,EAAAg/D,MAiBA1/D,EAAAU,EAAA,MAAAg/D,EAAA,GAAAA,IACAzE,GAAAp5D,KAAAwuB,OAAArwB,ISgCAoB,SaxCe,SAAApB,EAAAU,GACf,OAAAogB,UAAAhC,OAAA,EACAjd,KAAAm8D,MAAA,MAAAt9D,EAtBA,SAAAV,GACA,yBACA6B,KAAA7B,KAqBA,mBAAAU,EAXA,SAAAV,EAAAU,GACA,kBACA,IAAA0uB,EAAA1uB,EAAAiwB,MAAA9uB,KAAAif,WACA,MAAAsO,SAAAvtB,KAAA7B,GACA6B,KAAA7B,GAAAovB,IAVA,SAAApvB,EAAAU,GACA,kBACAmB,KAAA7B,GAAAU,KAiBAV,EAAAU,IACAmB,KAAAwuB,OAAArwB,IbmCA6/D,QRAe,SAAA7/D,EAAAU,GACf,IAAAi7D,EAAAP,GAAAp7D,EAAA,IAEA,GAAA8gB,UAAAhC,OAAA,GAEA,IADA,IAAAwZ,EAAAgjC,GAAAz5D,KAAAwuB,QAAA5wB,GAAA,EAAAyB,EAAAy6D,EAAA78C,SACArf,EAAAyB,GAAA,IAAAo3B,EAAAyjC,SAAAJ,EAAAl8D,IAAA,SACA,SAGA,OAAAoC,KAAAm8D,MAAA,mBAAAt9D,EAfA,SAAAi7D,EAAAj7D,GACA,mBACAA,EAAAiwB,MAAA9uB,KAAAif,WAAA46C,GAAAG,IAAAh6D,KAAA85D,KAcAj7D,EA5BA,SAAAi7D,GACA,kBACAD,GAAA75D,KAAA85D,KAIA,SAAAA,GACA,kBACAE,GAAAh6D,KAAA85D,MAsBAA,EAAAj7D,KQXAu4B,KP7Ce,SAAAv4B,GACf,OAAAogB,UAAAhC,OACAjd,KAAAm8D,KAAA,MAAAt9D,EACAs7D,IAAA,mBAAAt7D,EAVA,SAAAA,GACA,kBACA,IAAA0uB,EAAA1uB,EAAAiwB,MAAA9uB,KAAAif,WACAjf,KAAAo6D,YAAA,MAAA7sC,EAAA,GAAAA,IATA,SAAA1uB,GACA,kBACAmB,KAAAo6D,YAAAv7D,KAgBAA,IACAmB,KAAAwuB,OAAA4rC,aOwCA6D,KN9Ce,SAAAp/D,GACf,OAAAogB,UAAAhC,OACAjd,KAAAm8D,KAAA,MAAAt9D,EACAw7D,IAAA,mBAAAx7D,EAVA,SAAAA,GACA,kBACA,IAAA0uB,EAAA1uB,EAAAiwB,MAAA9uB,KAAAif,WACAjf,KAAAs6D,UAAA,MAAA/sC,EAAA,GAAAA,IATA,SAAA1uB,GACA,kBACAmB,KAAAs6D,UAAAz7D,KAgBAA,IACAmB,KAAAwuB,OAAA8rC,WMyCAC,ML5De,WACf,OAAAv6D,KAAAm8D,KAAA5B,KK4DAE,MJ7De,WACf,OAAAz6D,KAAAm8D,KAAA1B,KI6DAyD,OchEe,SAAA//D,GACf,IAAAe,EAAA,mBAAAf,IAAmD02D,GAAO12D,GAC1D,OAAA6B,KAAA47D,OAAA,WACA,OAAA57D,KAAAk4D,YAAAh5D,EAAA4vB,MAAA9uB,KAAAif,ed8DAk/C,OH5De,SAAAhgE,EAAAigE,GACf,IAAAl/D,EAAA,mBAAAf,IAAmD02D,GAAO12D,GAC1Dy9D,EAAA,MAAAwC,EAAAxD,GAAA,mBAAAwD,IAAuF7G,GAAQ6G,GAC/F,OAAAp+D,KAAA47D,OAAA,WACA,OAAA57D,KAAAo4D,aAAAl5D,EAAA4vB,MAAA9uB,KAAAif,WAAA28C,EAAA9sC,MAAA9uB,KAAAif,YAAA,SGyDAs2C,OF/De,WACf,OAAAv1D,KAAAm8D,KAAA5G,KE+DAwC,MerEe,SAAAl5D,GACf,OAAAogB,UAAAhC,OACAjd,KAAAT,SAAA,WAAAV,GACAmB,KAAAwuB,OAAAsoC,UfmEAjhC,GnBMe,SAAAk+B,EAAAl1D,EAAAq4D,GACf,IAAgCt5D,EAAAkB,EAAhCu/D,EA5CA,SAAuBA,GACvB,OAAAA,EAAA7T,OAAAh3C,MAAA,SAAAgG,IAAA,SAAA1a,GACA,IAAAX,EAAA,GAAAP,EAAAkB,EAAA6U,QAAA,KAEA,OADA/V,GAAA,IAAAO,EAAAW,EAAA80D,MAAAh2D,EAAA,GAAAkB,IAAA80D,MAAA,EAAAh2D,IACA,CAAYoZ,KAAAlY,EAAAX,UAwCMmgE,CAAcvK,EAAA,IAAA10D,EAAAg/D,EAAAphD,OAEhC,KAAAgC,UAAAhC,OAAA,IAcA,IAFA4Y,EAAAh3B,EAAAs4D,GAAAJ,GACA,MAAAG,OAAA,GACAt5D,EAAA,EAAaA,EAAAyB,IAAOzB,EAAAoC,KAAAm8D,KAAAtmC,EAAAwoC,EAAAzgE,GAAAiB,EAAAq4D,IACpB,OAAAl3D,KAdA,IAAA61B,EAAA71B,KAAAwuB,OAAAwoC,KACA,GAAAnhC,EAAA,QAAAx3B,EAAAqkC,EAAA,EAAA1kC,EAAA63B,EAAA5Y,OAA6CylB,EAAA1kC,IAAO0kC,EACpD,IAAA9kC,EAAA,EAAAS,EAAAw3B,EAAA6M,GAA4B9kC,EAAAyB,IAAOzB,EACnC,IAAAkB,EAAAu/D,EAAAzgE,IAAAoZ,OAAA3Y,EAAA2Y,MAAAlY,EAAAX,OAAAE,EAAAF,KACA,OAAAE,EAAAQ,OmBbA8+B,SD1Ce,SAAA3mB,EAAA2vC,GACf,OAAA3mD,KAAAm8D,MAAA,mBAAAxV,EAPA,SAAA3vC,EAAA2vC,GACA,kBACA,OAAAmU,GAAA96D,KAAAgX,EAAA2vC,EAAA73B,MAAA9uB,KAAAif,cARA,SAAAjI,EAAA2vC,GACA,kBACA,OAAAmU,GAAA96D,KAAAgX,EAAA2vC,MAaA3vC,EAAA2vC,MC0Ce,IAAA4X,GAAA,GgB1EA,SAAAC,GAAA7wC,EAAA3W,EAAAynD,EAAA//C,EAAAgwC,EAAAn7C,EAAAG,EAAAgrD,EAAAC,EAAAhhC,GACf39B,KAAA2tB,SACA3tB,KAAAgX,OACAhX,KAAAy+D,UACAz+D,KAAA4+D,WAAAlgD,EACA1e,KAAA0uD,SACA1uD,KAAAuT,IACAvT,KAAA0T,IACA1T,KAAA0+D,KACA1+D,KAAA2+D,KACA3+D,KAAAyzD,EAAA91B,EAGA6gC,GAAAh/D,UAAAq2B,GAAA,WACA,IAAAh3B,EAAAmB,KAAAyzD,EAAA59B,GAAA/G,MAAA9uB,KAAAyzD,EAAAx0C,WACA,OAAApgB,IAAAmB,KAAAyzD,EAAAzzD,KAAAnB,GCSe,ICxBAggE,GAAA,SAAA/K,EAAAgL,EAAAt/D,GACfs0D,EAAAt0D,UAAAs/D,EAAAt/D,YACAA,EAAAs0D,eAGO,SAAAiL,GAAArwC,EAAA+d,GACP,IAAAjtC,EAAAlB,OAAAY,OAAAwvB,EAAAlvB,WACA,QAAAL,KAAAstC,EAAAjtC,EAAAL,GAAAstC,EAAAttC,GACA,OAAAK,ECNO,SAAAw/D,MAEA,IAGPC,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,IAAAt4C,OAAA,WAAAi4C,UAAA,QACAM,GAAA,IAAAv4C,OAAA,WAAAm4C,UAAA,QACAK,GAAA,IAAAx4C,OAAA,YAAAi4C,SAAAC,IAAA,QACAO,GAAA,IAAAz4C,OAAA,YAAAm4C,SAAAD,IAAA,QACAQ,GAAA,IAAA14C,OAAA,WAAAk4C,GAAAC,OAAA,QACAQ,GAAA,IAAA34C,OAAA,YAAAk4C,GAAAC,MAAAD,IAAA,QAEAU,GAAA,CACAC,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAYe,SAASC,GAAKC,GAC7B,IAAAlrE,EAEA,OADAkrE,KAAA,IAAA1e,OAAA52C,eACA5V,EAAAohE,GAAA+J,KAAAD,IAAA,IAAAE,IAAAprE,EAAAqrE,SAAArrE,EAAA,cAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,IACAA,EAAAqhE,GAAA8J,KAAAD,IAAAI,GAAAD,SAAArrE,EAAA,SACAA,EAAAshE,GAAA6J,KAAAD,IAAA,IAAAE,GAAAprE,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAuhE,GAAA4J,KAAAD,IAAA,IAAAE,GAAA,IAAAprE,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAwhE,GAAA2J,KAAAD,IAAAK,GAAAvrE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAAyhE,GAAA0J,KAAAD,IAAAK,GAAA,IAAAvrE,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAA0hE,GAAAyJ,KAAAD,IAAAM,GAAAxrE,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA2hE,GAAAwJ,KAAAD,IAAAM,GAAAxrE,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACA4hE,GAAAngE,eAAAypE,GAAAI,GAAA1J,GAAAsJ,IACA,gBAAAA,EAAA,IAAAE,GAAAnQ,YAAA,GACA,KAGA,SAAAqQ,GAAAjqE,GACA,WAAA+pE,GAAA/pE,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,SAAAkqE,GAAA7qE,EAAA+qE,EAAAtrD,EAAA6Z,GAEA,OADAA,GAAA,IAAAt5B,EAAA+qE,EAAAtrD,EAAA86C,KACA,IAAAmQ,GAAA1qE,EAAA+qE,EAAAtrD,EAAA6Z,GAGO,SAAA0xC,GAAArrE,GAEP,OADAA,aAAA2gE,KAAA3gE,EAAiC4qE,GAAK5qE,IACtCA,EAEA,IAAA+qE,IADA/qE,IAAAsrE,OACAjrE,EAAAL,EAAAorE,EAAAprE,EAAA8f,EAAA9f,EAAAurE,SAFA,IAAAR,GAKO,SAASS,GAAGnrE,EAAA+qE,EAAAtrD,EAAAyrD,GACnB,WAAA3qD,UAAAhC,OAAAysD,GAAAhrE,GAAA,IAAA0qE,GAAA1qE,EAAA+qE,EAAAtrD,EAAA,MAAAyrD,EAAA,EAAAA,GAGO,SAAAR,GAAA1qE,EAAA+qE,EAAAtrD,EAAAyrD,GACP5pE,KAAAtB,KACAsB,KAAAypE,KACAzpE,KAAAme,KACAne,KAAA4pE,WA+BA,SAAAJ,GAAApxC,EAAAz4B,EAAA9B,EAAAm6B,GAIA,OAHAA,GAAA,EAAAI,EAAAz4B,EAAA9B,EAAAo7D,IACAp7D,GAAA,GAAAA,GAAA,EAAAu6B,EAAAz4B,EAAAs5D,IACAt5D,GAAA,IAAAy4B,EAAA6gC,KACA,IAAA6Q,GAAA1xC,EAAAz4B,EAAA9B,EAAAm6B,GA6BO,SAAA+xC,GAAA3xC,EAAAz4B,EAAA9B,EAAA+rE,GACP,WAAA3qD,UAAAhC,OA3BO,SAAA5e,GACP,GAAAA,aAAAyrE,GAAA,WAAAA,GAAAzrE,EAAA+5B,EAAA/5B,EAAAsB,EAAAtB,EAAAR,EAAAQ,EAAAurE,SAEA,GADAvrE,aAAA2gE,KAAA3gE,EAAiC4qE,GAAK5qE,KACtCA,EAAA,WAAAyrE,GACA,GAAAzrE,aAAAyrE,GAAA,OAAAzrE,EAEA,IAAAK,GADAL,IAAAsrE,OACAjrE,EAAA,IACA+qE,EAAAprE,EAAAorE,EAAA,IACAtrD,EAAA9f,EAAA8f,EAAA,IACAutC,EAAApuC,KAAAouC,IAAAhtD,EAAA+qE,EAAAtrD,GACAgsC,EAAA7sC,KAAA6sC,IAAAzrD,EAAA+qE,EAAAtrD,GACAia,EAAA6gC,IACAt5D,EAAAwqD,EAAAuB,EACA7tD,GAAAssD,EAAAuB,GAAA,EAUA,OATA/rD,GACAy4B,EAAA15B,IAAAyrD,GAAAsf,EAAAtrD,GAAAxe,EAAA,GAAA8pE,EAAAtrD,GACAsrD,IAAAtf,GAAAhsC,EAAAzf,GAAAiB,EAAA,GACAjB,EAAA+qE,GAAA9pE,EAAA,EACAA,GAAA9B,EAAA,GAAAssD,EAAAuB,EAAA,EAAAvB,EAAAuB,EACAtzB,GAAA,IAEAz4B,EAAA9B,EAAA,GAAAA,EAAA,IAAAu6B,EAEA,IAAA0xC,GAAA1xC,EAAAz4B,EAAA9B,EAAAQ,EAAAurE,SAIAI,CAAA5xC,GAAA,IAAA0xC,GAAA1xC,EAAAz4B,EAAA9B,EAAA,MAAA+rE,EAAA,EAAAA,GAGA,SAAAE,GAAA1xC,EAAAz4B,EAAA9B,EAAA+rE,GACA5pE,KAAAo4B,KACAp4B,KAAAL,KACAK,KAAAnC,KACAmC,KAAA4pE,WAiCA,SAAAK,GAAA7xC,EAAA4kC,EAAAkN,GACA,OAGA,KAHA9xC,EAAA,GAAA4kC,GAAAkN,EAAAlN,GAAA5kC,EAAA,GACAA,EAAA,IAAA8xC,EACA9xC,EAAA,IAAA4kC,GAAAkN,EAAAlN,IAAA,IAAA5kC,GAAA,GACA4kC,GA9JA6B,GAAMG,GAAQiK,GAAK,CACnBkB,YAAA,WACA,OAAAnqE,KAAA2pE,MAAAQ,eAEA7yC,SAAA,WACA,OAAAt3B,KAAA2pE,MAAA,MA+CA9K,GAAMuK,GAAMS,GAAK9K,GAAMC,GAAA,CACvBoL,SAAA,SAAAC,GAEA,OADAA,EAAA,MAAAA,EA3NO,EADA,GA4NP/sD,KAAAgtD,IA3NO,EADA,GA4NPD,GACA,IAAAjB,GAAAppE,KAAAtB,EAAA2rE,EAAArqE,KAAAypE,EAAAY,EAAArqE,KAAAme,EAAAksD,EAAArqE,KAAA4pE,UAEAW,OAAA,SAAAF,GAEA,OADAA,EAAA,MAAAA,EAhOO,GAgOP/sD,KAAAgtD,IAhOO,GAgOPD,GACA,IAAAjB,GAAAppE,KAAAtB,EAAA2rE,EAAArqE,KAAAypE,EAAAY,EAAArqE,KAAAme,EAAAksD,EAAArqE,KAAA4pE,UAEAD,IAAA,WACA,OAAA3pE,MAEAmqE,YAAA,WACA,UAAAnqE,KAAAtB,GAAAsB,KAAAtB,GAAA,KACA,GAAAsB,KAAAypE,GAAAzpE,KAAAypE,GAAA,KACA,GAAAzpE,KAAAme,GAAAne,KAAAme,GAAA,KACA,GAAAne,KAAA4pE,SAAA5pE,KAAA4pE,SAAA,GAEAtyC,SAAA,WACA,IAAAU,EAAAh4B,KAAA4pE,QACA,YADyB5xC,EAAA3jB,MAAA2jB,GAAA,EAAA1a,KAAA6sC,IAAA,EAAA7sC,KAAAouC,IAAA,EAAA1zB,KACzB,gBACA1a,KAAA6sC,IAAA,EAAA7sC,KAAAouC,IAAA,IAAApuC,KAAAktD,MAAAxqE,KAAAtB,IAAA,SACA4e,KAAA6sC,IAAA,EAAA7sC,KAAAouC,IAAA,IAAApuC,KAAAktD,MAAAxqE,KAAAypE,IAAA,SACAnsD,KAAA6sC,IAAA,EAAA7sC,KAAAouC,IAAA,IAAApuC,KAAAktD,MAAAxqE,KAAAme,IAAA,KACA,IAAA6Z,EAAA,SAAAA,EAAA,SAgDA6mC,GAAMiL,GAAAC,GAAWhL,GAAMC,GAAA,CACvBoL,SAAA,SAAAC,GAEA,OADAA,EAAA,MAAAA,EAnSO,EADA,GAoSP/sD,KAAAgtD,IAnSO,EADA,GAoSPD,GACA,IAAAP,GAAA9pE,KAAAo4B,EAAAp4B,KAAAL,EAAAK,KAAAnC,EAAAwsE,EAAArqE,KAAA4pE,UAEAW,OAAA,SAAAF,GAEA,OADAA,EAAA,MAAAA,EAxSO,GAwSP/sD,KAAAgtD,IAxSO,GAwSPD,GACA,IAAAP,GAAA9pE,KAAAo4B,EAAAp4B,KAAAL,EAAAK,KAAAnC,EAAAwsE,EAAArqE,KAAA4pE,UAEAD,IAAA,WACA,IAAAvxC,EAAAp4B,KAAAo4B,EAAA,SAAAp4B,KAAAo4B,EAAA,GACAz4B,EAAA0U,MAAA+jB,IAAA/jB,MAAArU,KAAAL,GAAA,EAAAK,KAAAL,EACA9B,EAAAmC,KAAAnC,EACAqsE,EAAArsE,KAAA,GAAAA,EAAA,EAAAA,GAAA8B,EACAq9D,EAAA,EAAAn/D,EAAAqsE,EACA,WAAAd,GACAa,GAAA7xC,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA4kC,EAAAkN,GACAD,GAAA7xC,EAAA4kC,EAAAkN,GACAD,GAAA7xC,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA4kC,EAAAkN,GACAlqE,KAAA4pE,UAGAO,YAAA,WACA,UAAAnqE,KAAAL,GAAAK,KAAAL,GAAA,GAAA0U,MAAArU,KAAAL,KACA,GAAAK,KAAAnC,GAAAmC,KAAAnC,GAAA,GACA,GAAAmC,KAAA4pE,SAAA5pE,KAAA4pE,SAAA,MC/TO,IAAAa,GAAAntD,KAAAotD,GAAA,IACAC,GAAA,IAAArtD,KAAAotD,GCIPE,GAAA,OACAC,GAAA,EACAC,GAAA,QACIC,GAAE,KACFC,GAAE,KACNC,GAAA,EAAaD,GAAKA,GAClBE,GAASF,GAAKA,GAAKA,GAEnB,SAAAG,GAAA9sE,GACA,GAAAA,aAAA+sE,GAAA,WAAAA,GAAA/sE,EAAAR,EAAAQ,EAAA25B,EAAA35B,EAAA8f,EAAA9f,EAAAurE,SACA,GAAAvrE,aAAAgtE,GAAA,CACA,IAAAjzC,EAAA/5B,EAAA+5B,EAAkBqyC,GAClB,WAAAW,GAAA/sE,EAAAR,EAAAyf,KAAAguD,IAAAlzC,GAAA/5B,EAAAJ,EAAAqf,KAAAiuD,IAAAnzC,GAAA/5B,EAAAJ,EAAAI,EAAAurE,SAEAvrE,aAAqB+qE,KAAG/qE,EAAOqrE,GAAUrrE,IACzC,IAAA8f,EAAAqtD,GAAAntE,EAAAK,GACAs5B,EAAAwzC,GAAAntE,EAAAorE,GACA5rE,EAAA2tE,GAAAntE,EAAA8f,GACA5K,EAAAk4D,IAAA,SAAAttD,EAAA,SAAA6Z,EAAA,SAAAn6B,GAAA+sE,IACAl3D,EAAA+3D,IAAA,SAAAttD,EAAA,SAAA6Z,EAAA,QAAAn6B,GAAAgtE,IAEA,WAAAO,GAAA,IAAA13D,EAAA,QAAAH,EAAAG,GAAA,KAAAA,EADA+3D,IAAA,SAAAttD,EAAA,QAAA6Z,EAAA,SAAAn6B,GAAAitE,KACAzsE,EAAAurE,SAGe,SAAA8B,GAAA7tE,EAAAm6B,EAAA7Z,EAAAyrD,GACf,WAAA3qD,UAAAhC,OAAAkuD,GAAAttE,GAAA,IAAAutE,GAAAvtE,EAAAm6B,EAAA7Z,EAAA,MAAAyrD,EAAA,EAAAA,GAGO,SAAAwB,GAAAvtE,EAAAm6B,EAAA7Z,EAAAyrD,GACP5pE,KAAAnC,KACAmC,KAAAg4B,KACAh4B,KAAAme,KACAne,KAAA4pE,WA0BA,SAAA6B,GAAA3sE,GACA,OAAAA,EAAAosE,GAAA5tD,KAAAgtD,IAAAxrE,EAAA,KAAAA,EAAAmsE,GAAgDF,GAGhD,SAAAY,GAAA7sE,GACA,OAAAA,EAAaksE,GAAElsE,MAAAmsE,IAAAnsE,EAAyBisE,IAGxC,SAAAa,GAAAr4D,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAA+J,KAAAgtD,IAAA/2D,EAAA,aAGA,SAAAi4D,GAAAj4D,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAA+J,KAAAgtD,KAAA/2D,EAAA,iBAUO,SAAAs4D,GAAAzzC,EAAAn6B,EAAAJ,EAAA+rE,GACP,WAAA3qD,UAAAhC,OARA,SAAA5e,GACA,GAAAA,aAAAgtE,GAAA,WAAAA,GAAAhtE,EAAA+5B,EAAA/5B,EAAAJ,EAAAI,EAAAR,EAAAQ,EAAAurE,SACAvrE,aAAA+sE,KAAA/sE,EAAA8sE,GAAA9sE,IACA,IAAA+5B,EAAA9a,KAAAwuD,MAAAztE,EAAA8f,EAAA9f,EAAA25B,GAAiC2yC,GACjC,WAAAU,GAAAjzC,EAAA,EAAAA,EAAA,IAAAA,EAAA9a,KAAAyuD,KAAA1tE,EAAA25B,EAAA35B,EAAA25B,EAAA35B,EAAA8f,EAAA9f,EAAA8f,GAAA9f,EAAAR,EAAAQ,EAAAurE,SAIAoC,CAAA5zC,GAAA,IAAAizC,GAAAjzC,EAAAn6B,EAAAJ,EAAA,MAAA+rE,EAAA,EAAAA,GAGO,SAAAyB,GAAAjzC,EAAAn6B,EAAAJ,EAAA+rE,GACP5pE,KAAAo4B,KACAp4B,KAAA/B,KACA+B,KAAAnC,KACAmC,KAAA4pE,WAtDA/K,GAAMuM,GAAAM,GAAW3M,GAAOC,GAAK,CAC7BoL,SAAA,SAAAC,GACA,WAAAe,GAAAprE,KAAAnC,EAtCA,IAsCA,MAAAwsE,EAAA,EAAAA,GAAArqE,KAAAg4B,EAAAh4B,KAAAme,EAAAne,KAAA4pE,UAEAW,OAAA,SAAAF,GACA,WAAAe,GAAAprE,KAAAnC,EAzCA,IAyCA,MAAAwsE,EAAA,EAAAA,GAAArqE,KAAAg4B,EAAAh4B,KAAAme,EAAAne,KAAA4pE,UAEAD,IAAA,WACA,IAAAj2D,GAAA1T,KAAAnC,EAAA,QACA0V,EAAAc,MAAArU,KAAAg4B,GAAAtkB,IAAA1T,KAAAg4B,EAAA,IACAi0C,EAAA53D,MAAArU,KAAAme,GAAAzK,IAAA1T,KAAAme,EAAA,IAIA,OAHAzK,EAAAm3D,GAAAc,GAAAj4D,GAGA,IAAe01D,GACfwC,GAAA,WAHAr4D,EAAAq3D,GAAAe,GAAAp4D,IAGA,UAAAG,EAAA,UAFAu4D,EAAAnB,GAAAa,GAAAM,KAGAL,IAAA,QAAAr4D,EAAA,UAAAG,EAAA,QAAAu4D,GACAL,GAAA,SAAAr4D,EAAA,SAAAG,EAAA,UAAAu4D,GACAjsE,KAAA4pE,aAuCA/K,GAAMwM,GAAAQ,GAAW9M,GAAOC,GAAK,CAC7BoL,SAAA,SAAAC,GACA,WAAAgB,GAAArrE,KAAAo4B,EAAAp4B,KAAA/B,EAAA+B,KAAAnC,EA/FA,IA+FA,MAAAwsE,EAAA,EAAAA,GAAArqE,KAAA4pE,UAEAW,OAAA,SAAAF,GACA,WAAAgB,GAAArrE,KAAAo4B,EAAAp4B,KAAA/B,EAAA+B,KAAAnC,EAlGA,IAkGA,MAAAwsE,EAAA,EAAAA,GAAArqE,KAAA4pE,UAEAD,IAAA,WACA,OAAAwB,GAAAnrE,MAAA2pE,UCrGA,IAAAuC,IAAA,OACAC,GAAA,QACAC,IAAA,OACAC,IAAA,OACAC,GAAA,QACAC,GAAAD,GAAAD,GACAG,GAAAF,GAAAH,GACAM,GAAAN,GAAAC,GAAAC,GAAAH,GAgBe,SAASQ,GAASt0C,EAAAz4B,EAAA9B,EAAA+rE,GACjC,WAAA3qD,UAAAhC,OAfA,SAAA5e,GACA,GAAAA,aAAAsuE,GAAA,WAAAA,GAAAtuE,EAAA+5B,EAAA/5B,EAAAsB,EAAAtB,EAAAR,EAAAQ,EAAAurE,SACAvrE,aAAqB+qE,KAAG/qE,EAAOqrE,GAAUrrE,IACzC,IAAAK,EAAAL,EAAAK,EAAA,IACA+qE,EAAAprE,EAAAorE,EAAA,IACAtrD,EAAA9f,EAAA8f,EAAA,IACAtgB,GAAA4uE,GAAAtuD,EAAAouD,GAAA7tE,EAAA8tE,GAAA/C,IAAAgD,GAAAF,GAAAC,IACAI,EAAAzuD,EAAAtgB,EACAwsE,GAAAiC,IAAA7C,EAAA5rE,GAAAuuE,GAAAQ,GAAAP,GACA1sE,EAAA2d,KAAAyuD,KAAA1B,IAAAuC,MAAAN,GAAAzuE,GAAA,EAAAA,IACAu6B,EAAAz4B,EAAA2d,KAAAwuD,MAAAzB,EAAAuC,GAAkCjC,GAAO,IAAA1R,IACzC,WAAA0T,GAAAv0C,EAAA,EAAAA,EAAA,IAAAA,EAAAz4B,EAAA9B,EAAAQ,EAAAurE,SAIAiD,CAAAz0C,GAAA,IAAAu0C,GAAAv0C,EAAAz4B,EAAA9B,EAAA,MAAA+rE,EAAA,EAAAA,GAGO,SAAA+C,GAAAv0C,EAAAz4B,EAAA9B,EAAA+rE,GACP5pE,KAAAo4B,KACAp4B,KAAAL,KACAK,KAAAnC,KACAmC,KAAA4pE,WCnCO,SAAAkD,GAAAC,EAAAC,EAAAryB,EAAAC,EAAAqyB,GACP,IAAAhC,EAAA8B,IAAA7B,EAAAD,EAAA8B,EACA,YAAAA,EAAA,EAAA9B,EAAAC,GAAA8B,GACA,IAAA/B,EAAA,EAAAC,GAAAvwB,GACA,IAAAoyB,EAAA,EAAA9B,EAAA,EAAAC,GAAAtwB,EACAswB,EAAA+B,GAAA,EDiCApO,GAAM8N,GAAYD,GAAW3N,GAAOC,GAAK,CACzCoL,SAAA,SAAAC,GAEA,OADAA,EAAA,MAAAA,EHnCO,EADA,GGoCqB/sD,KAAAgtD,IHnCrB,EADA,GGoCyCD,GAChD,IAAAsC,GAAA3sE,KAAAo4B,EAAAp4B,KAAAL,EAAAK,KAAAnC,EAAAwsE,EAAArqE,KAAA4pE,UAEAW,OAAA,SAAAF,GAEA,OADAA,EAAA,MAAAA,EHxCO,GGwCmB/sD,KAAAgtD,IHxCnB,GGwCqCD,GAC5C,IAAAsC,GAAA3sE,KAAAo4B,EAAAp4B,KAAAL,EAAAK,KAAAnC,EAAAwsE,EAAArqE,KAAA4pE,UAEAD,IAAA,WACA,IAAAvxC,EAAA/jB,MAAArU,KAAAo4B,GAAA,GAAAp4B,KAAAo4B,EAAA,KAAiDqyC,GACjD5sE,GAAAmC,KAAAnC,EACAm6B,EAAA3jB,MAAArU,KAAAL,GAAA,EAAAK,KAAAL,EAAA9B,GAAA,EAAAA,GACAqvE,EAAA5vD,KAAAguD,IAAAlzC,GACA+0C,EAAA7vD,KAAAiuD,IAAAnzC,GACA,WAAegxC,GACf,KAAAvrE,EAAAm6B,GAAAk0C,GAAAgB,EAAAf,GAAAgB,IACA,KAAAtvE,EAAAm6B,GAAAo0C,GAAAc,EAAAb,GAAAc,IACA,KAAAtvE,EAAAm6B,GAAAs0C,GAAAY,IACAltE,KAAA4pE,aCjDe,ICRAwD,GAAA,SAAA75D,GACf,kBACA,OAAAA,ICAA,SAAA85D,GAAAr1C,EAAA95B,GACA,gBAAAY,GACA,OAAAk5B,EAAAl5B,EAAAZ,GAUO,SAASovE,GAAGt1C,EAAA7Z,GACnB,IAAAjgB,EAAAigB,EAAA6Z,EACA,OAAA95B,EAAAmvE,GAAAr1C,EAAA95B,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAof,KAAAktD,MAAAtsE,EAAA,KAAAA,GAAkFkvE,GAAQ/4D,MAAA2jB,GAAA7Z,EAAA6Z,GAGnF,SAAAu1C,GAAA75D,GACP,WAAAA,MAAA85D,GAAA,SAAAx1C,EAAA7Z,GACA,OAAAA,EAAA6Z,EAbA,SAAAA,EAAA7Z,EAAAzK,GACA,OAAAskB,EAAA1a,KAAAgtD,IAAAtyC,EAAAtkB,GAAAyK,EAAAb,KAAAgtD,IAAAnsD,EAAAzK,GAAAskB,EAAAtkB,EAAA,EAAAA,EAAA,SAAA5U,GACA,OAAAwe,KAAAgtD,IAAAtyC,EAAAl5B,EAAAqf,EAAAzK,IAWA+5D,CAAAz1C,EAAA7Z,EAAAzK,GAA0C05D,GAAQ/4D,MAAA2jB,GAAA7Z,EAAA6Z,IAInC,SAAAw1C,GAAAx1C,EAAA7Z,GACf,IAAAjgB,EAAAigB,EAAA6Z,EACA,OAAA95B,EAAAmvE,GAAAr1C,EAAA95B,GAA4BkvE,GAAQ/4D,MAAA2jB,GAAA7Z,EAAA6Z,GCtBrB,IAAA01C,GAAA,SAAAC,EAAAj6D,GACf,IAAAk6D,EAAcL,GAAK75D,GAEnB,SAAAi2D,EAAAre,EAAAuiB,GACA,IAAAnvE,EAAAkvE,GAAAtiB,EAA2Bue,GAAQve,IAAA5sD,GAAAmvE,EAAmBhE,GAAQgE,IAAAnvE,GAC9D+qE,EAAAmE,EAAAtiB,EAAAme,EAAAoE,EAAApE,GACAtrD,EAAAyvD,EAAAtiB,EAAAntC,EAAA0vD,EAAA1vD,GACAyrD,EAAkB4D,GAAOliB,EAAAse,QAAAiE,EAAAjE,SACzB,gBAAA9qE,GAKA,OAJAwsD,EAAA5sD,IAAAI,GACAwsD,EAAAme,IAAA3qE,GACAwsD,EAAAntC,IAAArf,GACAwsD,EAAAse,UAAA9qE,GACAwsD,EAAA,IAMA,OAFAqe,EAAA4D,MAAAI,EAEAhE,EAnBe,CAoBd,GAED,SAAAmE,GAAAC,GACA,gBAAAC,GACA,IAIApwE,EAAAgwE,EAJAvuE,EAAA2uE,EAAA/wD,OACAve,EAAA,IAAAgyB,MAAArxB,GACAoqE,EAAA,IAAA/4C,MAAArxB,GACA8e,EAAA,IAAAuS,MAAArxB,GAEA,IAAAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBgwE,EAAc/D,GAAQmE,EAAApwE,IACtBc,EAAAd,GAAAgwE,EAAAlvE,GAAA,EACA+qE,EAAA7rE,GAAAgwE,EAAAnE,GAAA,EACAtrD,EAAAvgB,GAAAgwE,EAAAzvD,GAAA,EAMA,OAJAzf,EAAAqvE,EAAArvE,GACA+qE,EAAAsE,EAAAtE,GACAtrD,EAAA4vD,EAAA5vD,GACAyvD,EAAAhE,QAAA,EACA,SAAA9qE,GAIA,OAHA8uE,EAAAlvE,IAAAI,GACA8uE,EAAAnE,IAAA3qE,GACA8uE,EAAAzvD,IAAArf,GACA8uE,EAAA,KAKOE,GH7CQ,SAAAp9B,GACf,IAAArxC,EAAAqxC,EAAAzzB,OAAA,EACA,gBAAAne,GACA,IAAAlB,EAAAkB,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAO,EAAA,GAAAie,KAAAC,MAAAze,EAAAO,GACAs7C,EAAAjK,EAAA9yC,GACAg9C,EAAAlK,EAAA9yC,EAAA,GACAovE,EAAApvE,EAAA,EAAA8yC,EAAA9yC,EAAA,KAAA+8C,EAAAC,EACAqyB,EAAArvE,EAAAyB,EAAA,EAAAqxC,EAAA9yC,EAAA,KAAAg9C,EAAAD,EACA,OAAAmyB,IAAAhuE,EAAAlB,EAAAyB,KAAA2tE,EAAAryB,EAAAC,EAAAqyB,MGsCOa,GCpDQ,SAAAp9B,GACf,IAAArxC,EAAAqxC,EAAAzzB,OACA,gBAAAne,GACA,IAAAlB,EAAA0f,KAAAC,QAAAze,GAAA,OAAAA,KAAAO,GACA2tE,EAAAt8B,GAAA9yC,EAAAyB,EAAA,GAAAA,GACAs7C,EAAAjK,EAAA9yC,EAAAyB,GACAu7C,EAAAlK,GAAA9yC,EAAA,GAAAyB,GACA4tE,EAAAv8B,GAAA9yC,EAAA,GAAAyB,GACA,OAAWytE,IAAKhuE,EAAAlB,EAAAyB,KAAA2tE,EAAAryB,EAAAC,EAAAqyB,MD2CT,IErDQgB,GAAA,SAAAj2C,EAAA7Z,GACf,OAAAA,GAAA6Z,KAAA,SAAAl5B,GACA,OAAAk5B,EAAA7Z,EAAArf,ICAAovE,GAAA,8CACAC,GAAA,IAAAnnD,OAAAknD,GAAAxgD,OAAA,KAce,ICff0gD,GACAC,GACAC,GACAC,GDYe/U,GAAA,SAAAxhC,EAAA7Z,GACf,IACAqwD,EACAC,EACAC,EAHAC,EAAAT,GAAAU,UAAAT,GAAAS,UAAA,EAIAhxE,GAAA,EACA+B,EAAA,GACAkvE,EAAA,GAMA,IAHA72C,GAAA,GAAA7Z,GAAA,IAGAqwD,EAAAN,GAAA/E,KAAAnxC,MACAy2C,EAAAN,GAAAhF,KAAAhrD,MACAuwD,EAAAD,EAAAr8B,OAAAu8B,IACAD,EAAAvwD,EAAAy1C,MAAA+a,EAAAD,GACA/uE,EAAA/B,GAAA+B,EAAA/B,IAAA8wE,EACA/uE,IAAA/B,GAAA8wE,IAEAF,IAAA,OAAAC,IAAA,IACA9uE,EAAA/B,GAAA+B,EAAA/B,IAAA6wE,EACA9uE,IAAA/B,GAAA6wE,GAEA9uE,IAAA/B,GAAA,KACAixE,EAAA52C,KAAA,CAAcr6B,IAAA2V,EAAS06D,GAAMO,EAAAC,MAE7BE,EAAAR,GAAAS,UAYA,OARAD,EAAAxwD,EAAAlB,SACAyxD,EAAAvwD,EAAAy1C,MAAA+a,GACAhvE,EAAA/B,GAAA+B,EAAA/B,IAAA8wE,EACA/uE,IAAA/B,GAAA8wE,GAKA/uE,EAAAsd,OAAA,EAAA4xD,EAAA,GA7CA,SAAA1wD,GACA,gBAAArf,GACA,OAAAqf,EAAArf,GAAA,IA4CAgwE,CAAAD,EAAA,GAAAt7D,GApDA,SAAA4K,GACA,kBACA,OAAAA,GAmDA4wD,CAAA5wD,IACAA,EAAA0wD,EAAA5xD,OAAA,SAAAne,GACA,QAAAT,EAAAT,EAAA,EAA4BA,EAAAugB,IAAOvgB,EAAA+B,GAAAtB,EAAAwwE,EAAAjxE,OAAAS,EAAAkV,EAAAzU,GACnC,OAAAa,EAAAkU,KAAA,OE7DAm7D,GAAA,IAAA1xD,KAAAotD,GAEOuE,GAAA,CACPC,WAAA,EACAC,WAAA,EACAC,OAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,GAGeC,GAAA,SAAAx3C,EAAA7Z,EAAAlgB,EAAAC,EAAAkf,EAAAiW,GACf,IAAAi8C,EAAAC,EAAAF,EAKA,OAJAC,EAAAhyD,KAAAyuD,KAAA/zC,IAAA7Z,QAAA6Z,GAAAs3C,EAAAnxD,GAAAmxD,IACAD,EAAAr3C,EAAA/5B,EAAAkgB,EAAAjgB,KAAAD,GAAA+5B,EAAAq3C,EAAAnxE,GAAAigB,EAAAkxD,IACAE,EAAAjyD,KAAAyuD,KAAA9tE,IAAAC,QAAAD,GAAAsxE,EAAArxE,GAAAqxE,EAAAF,GAAAE,GACAv3C,EAAA95B,EAAAigB,EAAAlgB,IAAA+5B,KAAA7Z,KAAAkxD,KAAAC,MACA,CACAJ,WAAA9xD,EACA+xD,WAAA97C,EACA+7C,OAAA9xD,KAAAwuD,MAAA3tD,EAAA6Z,GAAAg3C,GACAK,MAAA/xD,KAAAmyD,KAAAJ,GAAAL,GACAM,SACAC,WCpBA,SAAAG,GAAA1gD,EAAA2gD,EAAAC,EAAAC,GAEA,SAAAC,EAAAnwE,GACA,OAAAA,EAAAsd,OAAAtd,EAAAmwE,MAAA,OAsCA,gBAAA93C,EAAA7Z,GACA,IAAAxe,EAAA,GACAkvE,EAAA,GAOA,OANA72C,EAAAhJ,EAAAgJ,GAAA7Z,EAAA6Q,EAAA7Q,GAtCA,SAAA4xD,EAAAC,EAAAC,EAAAC,EAAAvwE,EAAAkvE,GACA,GAAAkB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAAtyE,EAAA+B,EAAAs4B,KAAA,kBAAA03C,EAAA,KAAAC,GACAf,EAAA52C,KAAA,CAAcr6B,IAAA,EAAA2V,EAAa06D,GAAM8B,EAAAE,IAAS,CAAGryE,IAAA,EAAA2V,EAAa06D,GAAM+B,EAAAE,UAC3DD,GAAAC,IACLvwE,EAAAs4B,KAAA,aAAAg4C,EAAAN,EAAAO,EAAAN,GAkCAO,CAAAn4C,EAAAk3C,WAAAl3C,EAAAm3C,WAAAhxD,EAAA+wD,WAAA/wD,EAAAgxD,WAAAxvE,EAAAkvE,GA9BA,SAAA72C,EAAA7Z,EAAAxe,EAAAkvE,GACA72C,IAAA7Z,GACA6Z,EAAA7Z,EAAA,IAAAA,GAAA,IAAgCA,EAAA6Z,EAAA,MAAAA,GAAA,KAChC62C,EAAA52C,KAAA,CAAcr6B,EAAA+B,EAAAs4B,KAAA63C,EAAAnwE,GAAA,eAAAkwE,GAAA,EAAAt8D,EAAsD06D,GAAMj2C,EAAA7Z,MACrEA,GACLxe,EAAAs4B,KAAA63C,EAAAnwE,GAAA,UAAAwe,EAAA0xD,GA0BAT,CAAAp3C,EAAAo3C,OAAAjxD,EAAAixD,OAAAzvE,EAAAkvE,GAtBA,SAAA72C,EAAA7Z,EAAAxe,EAAAkvE,GACA72C,IAAA7Z,EACA0wD,EAAA52C,KAAA,CAAcr6B,EAAA+B,EAAAs4B,KAAA63C,EAAAnwE,GAAA,cAAAkwE,GAAA,EAAAt8D,EAAqD06D,GAAMj2C,EAAA7Z,KACpEA,GACLxe,EAAAs4B,KAAA63C,EAAAnwE,GAAA,SAAAwe,EAAA0xD,GAmBAR,CAAAr3C,EAAAq3C,MAAAlxD,EAAAkxD,MAAA1vE,EAAAkvE,GAfA,SAAAkB,EAAAC,EAAAC,EAAAC,EAAAvwE,EAAAkvE,GACA,GAAAkB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAAtyE,EAAA+B,EAAAs4B,KAAA63C,EAAAnwE,GAAA,4BACAkvE,EAAA52C,KAAA,CAAcr6B,IAAA,EAAA2V,EAAa06D,GAAM8B,EAAAE,IAAS,CAAGryE,IAAA,EAAA2V,EAAa06D,GAAM+B,EAAAE,UAC3D,IAAAD,GAAA,IAAAC,GACLvwE,EAAAs4B,KAAA63C,EAAAnwE,GAAA,SAAAswE,EAAA,IAAAC,EAAA,KAWAE,CAAAp4C,EAAAs3C,OAAAt3C,EAAAu3C,OAAApxD,EAAAmxD,OAAAnxD,EAAAoxD,OAAA5vE,EAAAkvE,GACA72C,EAAA7Z,EAAA,KACA,SAAArf,GAEA,IADA,IAAAT,EAAAT,GAAA,EAAAyB,EAAAwvE,EAAA5xD,SACArf,EAAAyB,GAAAM,GAAAtB,EAAAwwE,EAAAjxE,OAAAS,EAAAkV,EAAAzU,GACA,OAAAa,EAAAkU,KAAA,MAKO,IAAAw8D,GAAAX,GFtDA,SAAA7wE,GACP,eAAAA,EAA+BowE,IAC/Bb,QAAAnZ,SAAAxH,cAAA,OAAA4gB,GAAApZ,SAAAG,gBAAAkZ,GAAArZ,SAAAkE,aACAiV,GAAA/gB,MAAAijB,UAAAzxE,EACAA,EAAAyvE,GAAAhV,iBAAA+U,GAAAnW,YAAAkW,IAAA,MAAA/U,iBAAA,aACAgV,GAAAxT,YAAAuT,IACAvvE,IAAA+0D,MAAA,MAAApgD,MAAA,KACSg8D,IAAS3wE,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,ME+CgD,qBAC3D0xE,GAAAb,GF7CA,SAAA7wE,GACP,aAAAA,EAA4BowE,IAC5BV,QAAAtZ,SAAAD,gBAAA,mCACAuZ,GAAAtU,aAAA,YAAAp7D,IACAA,EAAA0vE,GAAA+B,UAAAE,QAAAC,gBACA5xE,IAAA6xE,OACSlB,GAAS3wE,EAAAm5B,EAAAn5B,EAAAsf,EAAAtf,EAAAZ,EAAAY,EAAAX,EAAAW,EAAAue,EAAAve,EAAAw0B,IAF+C47C,KEyCC,cC9DlE3xD,KAAAqzD,MCGA,SAASC,GAAGC,GACZ,gBAAAvlB,EAAAuiB,GACA,IAAAz1C,EAAAy4C,GAAAvlB,EAAyBye,GAAQze,IAAAlzB,GAAAy1C,EAAmB9D,GAAQ8D,IAAAz1C,GAC5Dz4B,EAAY6tE,GAAKliB,EAAA3rD,EAAAkuE,EAAAluE,GACjB9B,EAAY2vE,GAAKliB,EAAAztD,EAAAgwE,EAAAhwE,GACjB+rE,EAAkB4D,GAAKliB,EAAAse,QAAAiE,EAAAjE,SACvB,gBAAA9qE,GAKA,OAJAwsD,EAAAlzB,IAAAt5B,GACAwsD,EAAA3rD,IAAAb,GACAwsD,EAAAztD,IAAAiB,GACAwsD,EAAAse,UAAA9qE,GACAwsD,EAAA,KAKeslB,GAAItD,IACEsD,GAAIpD,ICjBzB,SAASsD,GAAGD,GACZ,gBAAAvlB,EAAAuiB,GACA,IAAAz1C,EAAAy4C,GAAAvlB,EAAyBugB,GAAQvgB,IAAAlzB,GAAAy1C,EAAmBhC,GAAQgC,IAAAz1C,GAC5Dn6B,EAAYuvE,GAAKliB,EAAArtD,EAAA4vE,EAAA5vE,GACjBJ,EAAY2vE,GAAKliB,EAAAztD,EAAAgwE,EAAAhwE,GACjB+rE,EAAkB4D,GAAKliB,EAAAse,QAAAiE,EAAAjE,SACvB,gBAAA9qE,GAKA,OAJAwsD,EAAAlzB,IAAAt5B,GACAwsD,EAAArtD,IAAAa,GACAwsD,EAAAztD,IAAAiB,GACAwsD,EAAAse,UAAA9qE,GACAwsD,EAAA,KAKewlB,GAAIxD,IACEwD,GAAItD,ICjBzB,SAASuD,GAASF,GAClB,gBAAAG,EAAAt9D,GAGA,SAAAu9D,EAAA3lB,EAAAuiB,GACA,IAAAz1C,EAAAy4C,GAAAvlB,EAA2BohB,GAAcphB,IAAAlzB,GAAAy1C,EAAmBnB,GAAcmB,IAAAz1C,GAC1Ez4B,EAAc6tE,GAAKliB,EAAA3rD,EAAAkuE,EAAAluE,GACnB9B,EAAc2vE,GAAKliB,EAAAztD,EAAAgwE,EAAAhwE,GACnB+rE,EAAoB4D,GAAKliB,EAAAse,QAAAiE,EAAAjE,SACzB,gBAAA9qE,GAKA,OAJAwsD,EAAAlzB,IAAAt5B,GACAwsD,EAAA3rD,IAAAb,GACAwsD,EAAAztD,IAAAyf,KAAAgtD,IAAAxrE,EAAA4U,IACA43C,EAAAse,UAAA9qE,GACAwsD,EAAA,IAMA,OAlBA53C,KAgBAu9D,EAAA1D,MAAAyD,EAEAC,EAnBA,CAoBG,GAGYF,GAAUzD,IACEyD,GAAUvD,IADtB,ICvBf0D,GACAC,GALIC,GAAK,EACTC,GAAA,EACAC,GAAA,EACAC,GAAA,IAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,iBAAAC,yBAAA3zC,IAAA2zC,YAAA5zC,KACA6zC,GAAA,iBAAA9W,eAAA+W,sBAAA/W,OAAA+W,sBAAA1yE,KAAA27D,QAAA,SAAA1nC,GAAqI0+C,WAAA1+C,EAAA,KAE9H,SAAA4K,KACP,OAAAwzC,KAAAI,GAAAG,IAAAP,GAAAE,GAAA1zC,MAAAyzC,IAGA,SAAAM,KACAP,GAAA,EAGO,SAAAQ,KACPjyE,KAAAkyE,MACAlyE,KAAAmyE,MACAnyE,KAAAg4D,MAAA,KA0BO,SAAAoa,GAAA/mD,EAAAgnD,EAAAC,GACP,IAAAxzE,EAAA,IAAAmzE,GAEA,OADAnzE,EAAAyzE,QAAAlnD,EAAAgnD,EAAAC,GACAxzE,EAcA,SAAA0zE,KACAf,IAAAD,GAAAG,GAAA1zC,OAAAyzC,GACEN,GAAKC,GAAA,EACP,KAdO,WACPpzC,OACImzC,GAEJ,IADA,IAAAh0D,EAAAte,EAAAoyE,GACApyE,IACAse,EAAAq0D,GAAA3yE,EAAAqzE,QAAA,GAAArzE,EAAAozE,MAAAn0E,KAAA,KAAAqf,GACAte,IAAAk5D,QAEIoZ,GAOJqB,GACG,QACCrB,GAAK,EAWT,WACA,IAAAsB,EAAAzH,EAAA8B,EAAAmE,GAAAoB,EAAAK,IACA,KAAA5F,GACAA,EAAAmF,OACAI,EAAAvF,EAAAoF,QAAAG,EAAAvF,EAAAoF,OACAO,EAAA3F,MAAA/U,QAEAiT,EAAA8B,EAAA/U,MAAA+U,EAAA/U,MAAA,KACA+U,EAAA2F,IAAA1a,MAAAiT,EAAAiG,GAAAjG,GAGAkG,GAAAuB,EACAE,GAAAN,GAtBAO,GACApB,GAAA,GAIA,SAAAqB,KACA,IAAA70C,EAAA0zC,GAAA1zC,MAAAo0C,EAAAp0C,EAAAuzC,GACAa,EAAAd,KAAAG,IAAAW,EAAAb,GAAAvzC,GAkBA,SAAA20C,GAAAN,GACMlB,KACNC,QAAA0B,aAAA1B,KACAiB,EAAAb,GACA,IACAa,EAAAK,MAAAtB,GAAAU,WAAAS,GAAAF,EAAAX,GAAA1zC,MAAAyzC,KACAJ,QAAA0B,cAAA1B,OAEAA,KAAAE,GAAAG,GAAA1zC,MAAAqzC,GAAA2B,YAAAH,GAAAvB,KACIH,GAAK,EAAAS,GAAAW,MAjFTP,GAAAzyE,UAAA4yE,GAAA5yE,UAAA,CACAs0D,YAAAme,GACAM,QAAA,SAAAlnD,EAAAgnD,EAAAC,GACA,sBAAAjnD,EAAA,UAAA6nD,UAAA,8BACAZ,GAAA,MAAAA,EAAAr0C,MAAAq0C,IAAA,MAAAD,EAAA,GAAAA,GACAryE,KAAAg4D,OAAAmZ,KAAAnxE,OACAmxE,MAAAnZ,MAAAh4D,KACAkxE,GAAAlxE,KACAmxE,GAAAnxE,MAEAA,KAAAkyE,MAAA7mD,EACArrB,KAAAmyE,MAAAG,EACAM,MAEArnB,KAAA,WACAvrD,KAAAkyE,QACAlyE,KAAAkyE,MAAA,KACAlyE,KAAAmyE,MAAAQ,IACAC,QC1Ce,IAAAO,GAAA,SAAA9nD,EAAAgnD,EAAAC,GACf,IAAAxzE,EAAA,IAAcmzE,GAMd,OALAI,EAAA,MAAAA,EAAA,GAAAA,EACAvzE,EAAAyzE,QAAA,SAAAa,GACAt0E,EAAAysD,OACAlgC,EAAA+nD,EAAAf,IACGA,EAAAC,GACHxzE,GCNAu0E,GAAclf,GAAQ,2BACtBmf,GAAA,GAEOC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEQC,GAAA,SAAAtlD,EAAArwB,EAAAugB,EAAA0zB,EAAA9mB,EAAAyoD,GACf,IAAAC,EAAAxlD,EAAAylD,aACA,GAAAD,GACA,GAAAt1D,KAAAs1D,EAAA,YADAxlD,EAAAylD,aAAA,IAmCA,SAAezlD,EAAA9P,EAAAR,GACf,IACAg2D,EADAF,EAAAxlD,EAAAylD,aAgBA,SAAA3oB,EAAA8nB,GACA,IAAAx1E,EAAA8kC,EAAArjC,EAAAhB,EAGA,GAAA6f,EAAAgQ,QAAAslD,GAAA,OAAAjoB,IAEA,IAAA3tD,KAAAo2E,EAEA,IADA31E,EAAA21E,EAAAp2E,IACAO,OAAA+f,EAAA/f,KAAA,CAKA,GAAAE,EAAA6vB,QAAAwlD,GAAA,OAAsCP,GAAO7nB,GAI7CjtD,EAAA6vB,QAAAylD,IACAt1E,EAAA6vB,MAAA2lD,GACAx1E,EAAA+zE,MAAA7mB,OACAltD,EAAAw3B,GAAA93B,KAAA,YAAAywB,IAAAsoC,SAAAz4D,EAAA+zC,MAAA/zC,EAAAitB,cACA0oD,EAAAp2E,KAMAA,EAAA8gB,IACArgB,EAAA6vB,MAAA2lD,GACAx1E,EAAA+zE,MAAA7mB,cACAyoB,EAAAp2E,IAoBA,GAZIu1E,GAAO,WACXj1D,EAAAgQ,QAAAwlD,KACAx1D,EAAAgQ,MAAAylD,GACAz1D,EAAAk0D,MAAAG,QAAA4B,EAAAj2D,EAAAm0D,MAAAn0D,EAAAo0D,MACA6B,EAAAf,MAMAl1D,EAAAgQ,MAAAulD,GACAv1D,EAAA2X,GAAA93B,KAAA,QAAAywB,IAAAsoC,SAAA54C,EAAAk0B,MAAAl0B,EAAAoN,OACApN,EAAAgQ,QAAAulD,GAAA,CAKA,IAJAv1D,EAAAgQ,MAAAwlD,GAGAQ,EAAA,IAAAxjD,MAAArxB,EAAA6e,EAAAg2D,MAAAj3D,QACArf,EAAA,EAAA8kC,GAAA,EAAuB9kC,EAAAyB,IAAOzB,GAC9BS,EAAA6f,EAAAg2D,MAAAt2E,GAAAiB,MAAAd,KAAAywB,IAAAsoC,SAAA54C,EAAAk0B,MAAAl0B,EAAAoN,UACA4oD,IAAAxxC,GAAArkC,GAGA61E,EAAAj3D,OAAAylB,EAAA,GAGA,SAAAyxC,EAAAf,GAKA,IAJA,IAAAt0E,EAAAs0E,EAAAl1D,EAAAk2D,SAAAl2D,EAAAm2D,KAAAt2E,KAAA,KAAAq1E,EAAAl1D,EAAAk2D,WAAAl2D,EAAAk0D,MAAAG,QAAAhnB,GAAArtC,EAAAgQ,MAAA0lD,GAAA,GACAh2E,GAAA,EACAyB,EAAA60E,EAAAj3D,SAEArf,EAAAyB,GACA60E,EAAAt2E,GAAAG,KAAA,KAAAe,GAIAof,EAAAgQ,QAAA0lD,KACA11D,EAAA2X,GAAA93B,KAAA,MAAAywB,IAAAsoC,SAAA54C,EAAAk0B,MAAAl0B,EAAAoN,OACAigC,KAIA,SAAAA,IAIA,QAAA3tD,KAHAsgB,EAAAgQ,MAAA2lD,GACA31D,EAAAk0D,MAAA7mB,cACAyoB,EAAAt1D,GACAs1D,EAAA,cACAxlD,EAAAylD,aA/FAD,EAAAt1D,GAAAR,EACAA,EAAAk0D,MAAeA,GAEf,SAAAgB,GACAl1D,EAAAgQ,MAAAslD,GACAt1D,EAAAk0D,MAAAG,QAAAjnB,EAAAptC,EAAAm0D,MAAAn0D,EAAAo0D,MAGAp0D,EAAAm0D,OAAAe,GAAA9nB,EAAA8nB,EAAAl1D,EAAAm0D,QAPoB,EAAAn0D,EAAAo0D,MAxClBgC,CAAM9lD,EAAA9P,EAAA,CACRvgB,OACAi0C,QACA9mB,QACAuK,GAAAw9C,GACAa,MAAAZ,GACAhB,KAAAyB,EAAAzB,KACAD,MAAA0B,EAAA1B,MACA+B,SAAAL,EAAAK,SACAC,KAAAN,EAAAM,KACAjC,MAAA,KACAlkD,MAAAqlD,MAIO,SAAAgB,GAAA/lD,EAAA9P,GACP,IAAA81D,EAAiBC,GAAGjmD,EAAA9P,GACpB,GAAA81D,EAAAtmD,MAAAqlD,GAAA,UAAA5nC,MAAA,+BACA,OAAA6oC,EAGO,SAASE,GAAGlmD,EAAA9P,GACnB,IAAA81D,EAAiBC,GAAGjmD,EAAA9P,GACpB,GAAA81D,EAAAtmD,MAAAulD,GAAA,UAAA9nC,MAAA,6BACA,OAAA6oC,EAGO,SAASC,GAAGjmD,EAAA9P,GACnB,IAAA81D,EAAAhmD,EAAAylD,aACA,IAAAO,SAAA91D,IAAA,UAAAitB,MAAA,wBACA,OAAA6oC,EC9Ce,IAAAG,GAAA,SAAAnmD,EAAArwB,GACf,IACAq2E,EACA9lB,EAEA9wD,EAJAo2E,EAAAxlD,EAAAylD,aAGAr2D,GAAA,EAGA,GAAAo2D,EAAA,CAIA,IAAAp2E,KAFAO,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAEA61E,GACAQ,EAAAR,EAAAp2E,IAAAO,UACAuwD,EAAA8lB,EAAAtmD,MAA8BulD,IAAQe,EAAAtmD,MAAqB0lD,GAC3DY,EAAAtmD,MAAqB2lD,GACrBW,EAAApC,MAAA7mB,OACAmD,GAAA8lB,EAAA3+C,GAAA93B,KAAA,YAAAywB,IAAAsoC,SAAA0d,EAAApiC,MAAAoiC,EAAAlpD,cACA0oD,EAAAp2E,IALkDggB,GAAA,EAQlDA,UAAA4Q,EAAAylD,eC+CO,SAAAW,GAAAC,EAAA12E,EAAAU,GACP,IAAA6f,EAAAm2D,EAAAz/C,IAOA,OALAy/C,EAAA1Y,KAAA,WACA,IAAAqY,EAAmBE,GAAG10E,KAAA0e,IACtB81D,EAAA31E,QAAA21E,EAAA31E,MAAA,KAA2CV,GAAAU,EAAAiwB,MAAA9uB,KAAAif,aAG3C,SAAAuP,GACA,OAAWimD,GAAGjmD,EAAA9P,GAAA7f,MAAAV,IC3EC,IAAA22E,GAAA,SAAA98C,EAAA7Z,GACf,IAAAlgB,EACA,wBAAAkgB,EAAkC8vD,GAClC9vD,aAAqB8qD,GAAQyE,IAC7BzvE,EAAagrE,GAAK9qD,OAAAlgB,EAAeyvE,IACzBlU,IAAiBxhC,EAAA7Z,ICAV,ICNX42D,GAAYxW,GAAS/+D,UAAAs0D,YCaV,ICIXkhB,GAAE,EAEC,SAAAC,GAAAntD,EAAA0zC,EAAAr9D,EAAAugB,GACP1e,KAAAy7D,QAAA3zC,EACA9nB,KAAA07D,SAAAF,EACAx7D,KAAAk1E,MAAA/2E,EACA6B,KAAAo1B,IAAA1W,EAOO,SAAAy2D,KACP,QAAWH,GAGX,IAAAI,GAA0B7W,GAAS/+D,UAEnCy1E,GAAAz1E,UAVe,SAAmBrB,GAClC,OAASogE,KAASsW,WAAA12E,IASeqB,UAAA,CACjCs0D,YAAAmhB,GACArZ,OCpCe,SAAAA,GACf,IAAAz9D,EAAA6B,KAAAk1E,MACAx2D,EAAA1e,KAAAo1B,IAEA,mBAAAwmC,MAA6CrE,GAAQqE,IAErD,QAAA9zC,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAA4+C,EAAA,IAAAnrC,MAAA1yB,GAAA0kC,EAAA,EAAqFA,EAAA1kC,IAAO0kC,EAC5F,QAAAlU,EAAAstC,EAAAxwC,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAA8+C,EAAAF,EAAAn5B,GAAA,IAAAhS,MAAArxB,GAAAzB,EAAA,EAA+GA,EAAAyB,IAAOzB,GACtH4wB,EAAAlD,EAAA1tB,MAAAk+D,EAAAF,EAAA79D,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,MACA,aAAAkD,IAAAstC,EAAAhF,SAAAtoC,EAAAsoC,UACAiF,EAAAn+D,GAAAk+D,EACQgY,GAAQ/X,EAAAn+D,GAAAO,EAAAugB,EAAA9gB,EAAAm+D,EAAqC0Y,GAAGjmD,EAAA9P,KAKxD,WAAau2D,GAAUpZ,EAAA77D,KAAA07D,SAAAv9D,EAAAugB,IDqBvBs9C,UErCe,SAAAJ,GACf,IAAAz9D,EAAA6B,KAAAk1E,MACAx2D,EAAA1e,KAAAo1B,IAEA,mBAAAwmC,MAA6ClE,GAAWkE,IAExD,QAAA9zC,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAA4+C,EAAA,GAAAL,EAAA,GAAA94B,EAAA,EAAyFA,EAAA1kC,IAAO0kC,EAChG,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAArf,EAAA,EAA8DA,EAAAyB,IAAOzB,EACrE,GAAA4wB,EAAAlD,EAAA1tB,GAAA,CACA,QAAAu6D,EAAAp4D,EAAA67D,EAAA79D,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,GAAA+pD,EAAyFZ,GAAGjmD,EAAA9P,GAAA2rD,EAAA,EAAAxsE,EAAAkC,EAAAkd,OAAuCotD,EAAAxsE,IAAOwsE,GAC1IlS,EAAAp4D,EAAAsqE,KACYyJ,GAAQ3b,EAAAh6D,EAAAugB,EAAA2rD,EAAAtqE,EAAAs1E,GAGpBxZ,EAAA5jC,KAAAl4B,GACAy7D,EAAAvjC,KAAAzJ,GAKA,WAAaymD,GAAUpZ,EAAAL,EAAAr9D,EAAAugB,IFkBvBjL,OGvCe,SAAAwoD,GACf,mBAAAA,MAA2ChG,GAAOgG,IAElD,QAAAn0C,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAA4+C,EAAA,IAAAnrC,MAAA1yB,GAAA0kC,EAAA,EAAqFA,EAAA1kC,IAAO0kC,EAC5F,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAA8+C,EAAAF,EAAAn5B,GAAA,GAAA9kC,EAAA,EAA4FA,EAAAyB,IAAOzB,GACnG4wB,EAAAlD,EAAA1tB,KAAAq+D,EAAAl+D,KAAAywB,IAAAsoC,SAAAl5D,EAAA0tB,IACAywC,EAAA9jC,KAAAzJ,GAKA,WAAaymD,GAAUpZ,EAAA77D,KAAA07D,SAAA17D,KAAAk1E,MAAAl1E,KAAAo1B,MH6BvBunC,MIzCe,SAAAkY,GACf,GAAAA,EAAAz/C,MAAAp1B,KAAAo1B,IAAA,UAAAuW,MAEA,QAAAkxB,EAAA78D,KAAAy7D,QAAAqB,EAAA+X,EAAApZ,QAAAsB,EAAAF,EAAA5/C,OAAA+/C,EAAAF,EAAA7/C,OAAAjf,EAAAsf,KAAAouC,IAAAqR,EAAAC,GAAAC,EAAA,IAAAvsC,MAAAqsC,GAAAr6B,EAAA,EAA+JA,EAAA1kC,IAAO0kC,EACtK,QAAAlU,EAAA0uC,EAAAL,EAAAn6B,GAAAy6B,EAAAL,EAAAp6B,GAAArjC,EAAA69D,EAAAjgD,OAAA0/C,EAAAM,EAAAv6B,GAAA,IAAAhS,MAAArxB,GAAAzB,EAAA,EAAwHA,EAAAyB,IAAOzB,GAC/H4wB,EAAA0uC,EAAAt/D,IAAAu/D,EAAAv/D,MACA++D,EAAA/+D,GAAA4wB,GAKA,KAAQkU,EAAAq6B,IAAQr6B,EAChBu6B,EAAAv6B,GAAAm6B,EAAAn6B,GAGA,WAAauyC,GAAUhY,EAAAj9D,KAAA07D,SAAA17D,KAAAk1E,MAAAl1E,KAAAo1B,MJ2BvBwnC,UFxCe,WACf,WAAamY,GAAS/0E,KAAAy7D,QAAAz7D,KAAA07D,WEwCtBmZ,WK1Ce,WAKf,IAJA,IAAA12E,EAAA6B,KAAAk1E,MACAI,EAAAt1E,KAAAo1B,IACAmgD,EAAYJ,KAEZrtD,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAAylB,EAAA,EAA2DA,EAAA1kC,IAAO0kC,EAClE,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAArf,EAAA,EAA8DA,EAAAyB,IAAOzB,EACrE,GAAA4wB,EAAAlD,EAAA1tB,GAAA,CACA,IAAAy3E,EAAsBZ,GAAGjmD,EAAA8mD,GACjBxB,GAAQtlD,EAAArwB,EAAAo3E,EAAA33E,EAAA0tB,EAAA,CAChBgnD,KAAA+C,EAAA/C,KAAA+C,EAAAhD,MAAAgD,EAAAjB,SACA/B,MAAA,EACA+B,SAAAiB,EAAAjB,SACAC,KAAAgB,EAAAhB,OAMA,WAAaY,GAAUntD,EAAA9nB,KAAA07D,SAAAv9D,EAAAo3E,ILwBvBx3E,KAAAq3E,GAAAr3E,KACAuqB,MAAA8sD,GAAA9sD,MACAkG,KAAA4mD,GAAA5mD,KACA0tC,KAAAkZ,GAAAlZ,KACAt+C,MAAAw3D,GAAAx3D,MACAu+C,KAAAiZ,GAAAjZ,KACAtmC,GM3Be,SAAA13B,EAAAo4D,GACf,IAAA73C,EAAA1e,KAAAo1B,IAEA,OAAAnW,UAAAhC,OAAA,EACQw3D,GAAGz0E,KAAAwuB,OAAA9P,GAAAmX,MAAA13B,GACX6B,KAAAm8D,KApBA,SAAAz9C,EAAAvgB,EAAAo4D,GACA,IAAAif,EAAAC,EAAAC,EATA,SAAcv3E,GACd,OAAAA,EAAA,IAAAqsD,OAAAh3C,MAAA,SAAAmiE,MAAA,SAAA72E,GACA,IAAAlB,EAAAkB,EAAA6U,QAAA,KAEA,OADA/V,GAAA,IAAAkB,IAAA80D,MAAA,EAAAh2D,KACAkB,GAAA,UAAAA,IAKsB82E,CAAKz3E,GAASo2E,GAAOG,GAC3C,kBACA,IAAAF,EAAAkB,EAAA11E,KAAA0e,GACAmX,EAAA2+C,EAAA3+C,GAKAA,IAAA2/C,IAAAC,GAAAD,EAAA3/C,GAAAo+B,QAAAp+B,GAAA13B,EAAAo4D,GAEAie,EAAA3+C,GAAA4/C,GASAI,CAAAn3D,EAAAvgB,EAAAo4D,KNuBA7sB,KOce,SAAAvrC,EAAAU,GACf,IAAAi2D,EAAiBJ,GAASv2D,GAAAP,EAAA,cAAAk3D,EAAuCyb,GAAuBuE,GACxF,OAAA90E,KAAA81E,UAAA33E,EAAA,mBAAAU,GACAi2D,EAAAF,MAjBA,SAAuBE,EAAAz3C,EAAAxe,GACvB,IAAAk3E,EACAC,EACAC,EACA,kBACA,IAAAC,EAAAC,EAAAt3E,EAAAmB,MACA,SAAAm2E,EAEA,OADAD,EAAAl2E,KAAAy9D,eAAA3I,EAAAxvB,MAAAwvB,EAAAF,UACAuhB,EAAA,KACAD,IAAAH,GAAAI,IAAAH,EAAAC,EACAA,EAAA54D,EAAA04D,EAAAG,EAAAF,EAAAG,GAJAn2E,KAAA09D,kBAAA5I,EAAAxvB,MAAAwvB,EAAAF,SApBA,SAAqBz2D,EAAAkf,EAAAxe,GACrB,IAAAk3E,EACAC,EACAC,EACA,kBACA,IAAAC,EAAAC,EAAAt3E,EAAAmB,MACA,SAAAm2E,EAEA,OADAD,EAAAl2E,KAAA45D,aAAAz7D,MACAg4E,EAAA,KACAD,IAAAH,GAAAI,IAAAH,EAAAC,EACAA,EAAA54D,EAAA04D,EAAAG,EAAAF,EAAAG,GAJAn2E,KAAA29D,gBAAAx/D,MAyBuD22D,EAAAl3D,EAAeg3E,GAAU50E,KAAA,QAAA7B,EAAAU,IAChF,MAAAA,GAAAi2D,EAAAF,MA5DA,SAAqBE,GACrB,kBACA90D,KAAA09D,kBAAA5I,EAAAxvB,MAAAwvB,EAAAF,SARA,SAAmBz2D,GACnB,kBACA6B,KAAA29D,gBAAAx/D,MAgEmE22D,IACnEA,EAAAF,MA5CA,SAAuBE,EAAAz3C,EAAA84D,GACvB,IAAAJ,EACAE,EACA,kBACA,IAAAC,EAAAl2E,KAAAy9D,eAAA3I,EAAAxvB,MAAAwvB,EAAAF,OACA,OAAAshB,IAAAC,EAAA,KACAD,IAAAH,EAAAE,EACAA,EAAA54D,EAAA04D,EAAAG,EAAAC,KAlBA,SAAqBh4E,EAAAkf,EAAA84D,GACrB,IAAAJ,EACAE,EACA,kBACA,IAAAC,EAAAl2E,KAAA45D,aAAAz7D,GACA,OAAA+3E,IAAAC,EAAA,KACAD,IAAAH,EAAAE,EACAA,EAAA54D,EAAA04D,EAAAG,EAAAC,MAgDuDrhB,EAAAl3D,EAAAiB,EAAA,MPlBvDi3E,UQ9Be,SAAA33E,EAAAU,GACf,IAAAM,EAAA,QAAAhB,EACA,GAAA8gB,UAAAhC,OAAA,SAAA9d,EAAAa,KAAAk0E,MAAA/0E,OAAAi3E,OACA,SAAAv3E,EAAA,OAAAmB,KAAAk0E,MAAA/0E,EAAA,MACA,sBAAAN,EAAA,UAAA8sC,MACA,IAAAmpB,EAAiBJ,GAASv2D,GAC1B,OAAA6B,KAAAk0E,MAAA/0E,GAAA21D,EAAAF,MA5BA,SAAAE,EAAAj2D,GACA,SAAAq1E,IACA,IAAA1lD,EAAAxuB,KAAApC,EAAAiB,EAAAiwB,MAAAN,EAAAvP,WACA,OAAArhB,GAAA,SAAAkB,GACA0vB,EAAAovC,eAAA9I,EAAAxvB,MAAAwvB,EAAAF,MAAAh3D,EAAAkB,KAIA,OADAo1E,EAAAkC,OAAAv3E,EACAq1E,GAGA,SAAA/1E,EAAAU,GACA,SAAAq1E,IACA,IAAA1lD,EAAAxuB,KAAApC,EAAAiB,EAAAiwB,MAAAN,EAAAvP,WACA,OAAArhB,GAAA,SAAAkB,GACA0vB,EAAAyrC,aAAA97D,EAAAP,EAAAkB,KAIA,OADAo1E,EAAAkC,OAAAv3E,EACAq1E,IASApf,EAAAj2D,KRyBAwuD,MSNe,SAAAlvD,EAAAU,EAAAg/D,GACf,IAAAjgE,EAAA,cAAAO,GAAA,IAAyCkyE,GAAuByE,GAChE,aAAAj2E,EAAAmB,KACAq2E,WAAAl4E,EA/CA,SAAoBA,EAAAkf,GACpB,IAAA04D,EACAC,EACAC,EACA,kBACA,IAAAC,EAAiB9c,GAAKp5D,KAAA7B,GACtBg4E,GAAAn2E,KAAAqtD,MAAAyQ,eAAA3/D,GAAmDi7D,GAAKp5D,KAAA7B,IACxD,OAAA+3E,IAAAC,EAAA,KACAD,IAAAH,GAAAI,IAAAH,EAAAC,EACAA,EAAA54D,EAAA04D,EAAAG,EAAAF,EAAAG,IAsC4BG,CAAWn4E,EAAAP,IACvCi4B,GAAA,aAAA13B,EAnCA,SAAAA,GACA,kBACA6B,KAAAqtD,MAAAyQ,eAAA3/D,IAiCAo4E,CAAAp4E,IACA6B,KAAAq2E,WAAAl4E,EAAA,mBAAAU,EAnBA,SAAsBV,EAAAkf,EAAAxe,GACtB,IAAAk3E,EACAC,EACAC,EACA,kBACA,IAAAC,EAAiB9c,GAAKp5D,KAAA7B,GACtBg4E,EAAAt3E,EAAAmB,MAEA,OADA,MAAAm2E,IAAAn2E,KAAAqtD,MAAAyQ,eAAA3/D,GAAAg4E,EAAmE/c,GAAKp5D,KAAA7B,IACxE+3E,IAAAC,EAAA,KACAD,IAAAH,GAAAI,IAAAH,EAAAC,EACAA,EAAA54D,EAAA04D,EAAAG,EAAAF,EAAAG,IAUYK,CAAar4E,EAAAP,EAAUg3E,GAAU50E,KAAA,SAAA7B,EAAAU,IA/B7C,SAAsBV,EAAAkf,EAAA84D,GACtB,IAAAJ,EACAE,EACA,kBACA,IAAAC,EAAiB9c,GAAKp5D,KAAA7B,GACtB,OAAA+3E,IAAAC,EAAA,KACAD,IAAAH,EAAAE,EACAA,EAAA54D,EAAA04D,EAAAG,EAAAC,IAyBYM,CAAat4E,EAAAP,EAAAiB,EAAA,IAAAg/D,ITAzBwY,WU7Ce,SAAAl4E,EAAAU,EAAAg/D,GACf,IAAA1+D,EAAA,UAAAhB,GAAA,IACA,GAAA8gB,UAAAhC,OAAA,SAAA9d,EAAAa,KAAAk0E,MAAA/0E,OAAAi3E,OACA,SAAAv3E,EAAA,OAAAmB,KAAAk0E,MAAA/0E,EAAA,MACA,sBAAAN,EAAA,UAAA8sC,MACA,OAAA3rC,KAAAk0E,MAAA/0E,EAhBA,SAAAhB,EAAAU,EAAAg/D,GACA,SAAAqW,IACA,IAAA1lD,EAAAxuB,KAAApC,EAAAiB,EAAAiwB,MAAAN,EAAAvP,WACA,OAAArhB,GAAA,SAAAkB,GACA0vB,EAAA6+B,MAAA0Q,YAAA5/D,EAAAP,EAAAkB,GAAA++D,IAIA,OADAqW,EAAAkC,OAAAv3E,EACAq1E,EAQAmC,CAAAl4E,EAAAU,EAAA,MAAAg/D,EAAA,GAAAA,KVyCAzmC,KD1Ce,SAAAv4B,GACf,OAAAmB,KAAAk0E,MAAA,0BAAAr1E,EARA,SAAqBA,GACrB,kBACA,IAAAs3E,EAAAt3E,EAAAmB,MACAA,KAAAo6D,YAAA,MAAA+b,EAAA,GAAAA,GAMQO,CAAa9B,GAAU50E,KAAA,OAAAnB,IAf/B,SAAqBA,GACrB,kBACAmB,KAAAo6D,YAAAv7D,GAcQ83E,CAAY,MAAA93E,EAAA,GAAAA,EAAA,MCwCpB02D,OHlDe,WACf,OAAAv1D,KAAA61B,GAAA,cATAnX,EASA1e,KAAAo1B,IARA,WACA,IAAA1G,EAAA1uB,KAAAq+C,WACA,QAAAzgD,KAAAoC,KAAAi0E,aAAA,IAAAr2E,IAAA8gB,EAAA,OACAgQ,KAAAmsC,YAAA76D,SAJA,IAAA0e,GG2DAw1D,MLRe,SAAA/1E,EAAAU,GACf,IAAA6f,EAAA1e,KAAAo1B,IAIA,GAFAj3B,GAAA,GAEA8gB,UAAAhC,OAAA,GAEA,IADA,IACAne,EADAo1E,EAAgBO,GAAGz0E,KAAAwuB,OAAA9P,GAAAw1D,MACnBt2E,EAAA,EAAAyB,EAAA60E,EAAAj3D,OAAwCrf,EAAAyB,IAAOzB,EAC/C,IAAAkB,EAAAo1E,EAAAt2E,IAAAO,SACA,OAAAW,EAAAD,MAGA,YAGA,OAAAmB,KAAAm8D,MAAA,MAAAt9D,EAhEA,SAAA6f,EAAAvgB,GACA,IAAAy4E,EAAAC,EACA,kBACA,IAAArC,EAAmBE,GAAG10E,KAAA0e,GACtBw1D,EAAAM,EAAAN,MAKA,GAAAA,IAAA0C,EAEA,QAAAh5E,EAAA,EAAAyB,GADAw3E,EAAAD,EAAA1C,GACAj3D,OAAwCrf,EAAAyB,IAAOzB,EAC/C,GAAAi5E,EAAAj5E,GAAAO,SAAA,EACA04E,IAAAjjB,SACAvI,OAAAztD,EAAA,GACA,MAKA42E,EAAAN,MAAA2C,IAIA,SAAAn4D,EAAAvgB,EAAAU,GACA,IAAA+3E,EAAAC,EACA,sBAAAh4E,EAAA,UAAA8sC,MACA,kBACA,IAAA6oC,EAAmBE,GAAG10E,KAAA0e,GACtBw1D,EAAAM,EAAAN,MAKA,GAAAA,IAAA0C,EAAA,CACAC,GAAAD,EAAA1C,GAAAtgB,QACA,QAAA90D,EAAA,CAAoBX,OAAAU,SAAyBjB,EAAA,EAAAyB,EAAAw3E,EAAA55D,OAA2Brf,EAAAyB,IAAOzB,EAC/E,GAAAi5E,EAAAj5E,GAAAO,SAAA,CACA04E,EAAAj5E,GAAAkB,EACA,MAGAlB,IAAAyB,GAAAw3E,EAAA5+C,KAAAn5B,GAGA01E,EAAAN,MAAA2C,KAmBAn4D,EAAAvgB,EAAAU,KKNAwzE,MW9Ce,SAAAxzE,GACf,IAAA6f,EAAA1e,KAAAo1B,IAEA,OAAAnW,UAAAhC,OACAjd,KAAAm8D,MAAA,mBAAAt9D,EAhBA,SAAA6f,EAAA7f,GACA,kBACI01E,GAAIv0E,KAAA0e,GAAA2zD,OAAAxzE,EAAAiwB,MAAA9uB,KAAAif,aAIR,SAAAP,EAAA7f,GACA,OAAAA,KAAA,WACI01E,GAAIv0E,KAAA0e,GAAA2zD,MAAAxzE,KAUR6f,EAAA7f,IACQ41E,GAAGz0E,KAAAwuB,OAAA9P,GAAA2zD,OXwCX+B,SY/Ce,SAAAv1E,GACf,IAAA6f,EAAA1e,KAAAo1B,IAEA,OAAAnW,UAAAhC,OACAjd,KAAAm8D,MAAA,mBAAAt9D,EAhBA,SAAA6f,EAAA7f,GACA,kBACI61E,GAAG10E,KAAA0e,GAAA01D,UAAAv1E,EAAAiwB,MAAA9uB,KAAAif,aAIP,SAAAP,EAAA7f,GACA,OAAAA,KAAA,WACI61E,GAAG10E,KAAA0e,GAAA01D,SAAAv1E,KAUP6f,EAAA7f,IACQ41E,GAAGz0E,KAAAwuB,OAAA9P,GAAA01D,UZyCXC,KarDe,SAAAx1E,GACf,IAAA6f,EAAA1e,KAAAo1B,IAEA,OAAAnW,UAAAhC,OACAjd,KAAAm8D,KAXA,SAAAz9C,EAAA7f,GACA,sBAAAA,EAAA,UAAA8sC,MACA,kBACI+oC,GAAG10E,KAAA0e,GAAA21D,KAAAx1E,GAQPi4E,CAAAp4D,EAAA7f,IACQ41E,GAAGz0E,KAAAwuB,OAAA9P,GAAA21D,QCZJ,SAAA0C,EAAA35D,GAGP,SAAA45D,EAAAl4E,GACA,OAAAwe,KAAAgtD,IAAAxrE,EAAAse,GAKA,OARAA,KAMA45D,EAAAC,SAAAF,EAEAC,GATO,CAFP,GAcO,SAAAD,EAAA35D,GAGP,SAAA85D,EAAAp4E,GACA,SAAAwe,KAAAgtD,IAAA,EAAAxrE,EAAAse,GAKA,OARAA,KAMA85D,EAAAD,SAAAF,EAEAG,EATO,CAdP,GA0BO,SAAAH,EAAA35D,GAGP,SAAA+5D,EAAAr4E,GACA,QAAAA,GAAA,MAAAwe,KAAAgtD,IAAAxrE,EAAAse,GAAA,EAAAE,KAAAgtD,IAAA,EAAAxrE,EAAAse,IAAA,EAKA,OARAA,KAMA+5D,EAAAF,SAAAF,EAEAI,EATO,CA1BP,GCAA75D,KAAAotD,ICEO,SAAAqM,EAAAp3E,GAGP,SAAAy3E,EAAAt4E,GACA,OAAAA,MAAAa,EAAA,GAAAb,EAAAa,GAKA,OARAA,KAMAy3E,EAAAC,UAAAN,EAEAK,GATO,CAFP,SAcO,SAAAL,EAAAp3E,GAGP,SAAA23E,EAAAx4E,GACA,QAAAA,MAAAa,EAAA,GAAAb,EAAAa,GAAA,EAKA,OARAA,KAMA23E,EAAAD,UAAAN,EAEAO,EATO,CAdP,SA0BO,SAAAP,EAAAp3E,GAGP,SAAA43E,EAAAz4E,GACA,QAAAA,GAAA,KAAAA,MAAAa,EAAA,GAAAb,EAAAa,IAAAb,GAAA,GAAAA,IAAAa,EAAA,GAAAb,EAAAa,GAAA,KAKA,OARAA,KAMA43E,EAAAF,UAAAN,EAEAQ,EATO,CA1BP,aCAAC,GAAA,EAAAl6D,KAAAotD,GCKA+M,IDDO,SAAAV,EAAA/+C,EAAAt4B,GACP,IAAAC,EAAA2d,KAAAo6D,KAAA,GAAA1/C,EAAA1a,KAAA6sC,IAAA,EAAAnyB,MAAAt4B,GAAA83E,IAEA,SAAAG,EAAA74E,GACA,OAAAk5B,EAAA1a,KAAAgtD,IAAA,OAAAxrE,GAAAwe,KAAAiuD,KAAA5rE,EAAAb,GAAAY,GAMA,OAHAi4E,EAAAC,UAAA,SAAA5/C,GAAqC,OAAA++C,EAAA/+C,EAAAt4B,EAAA83E,KACrCG,EAAAE,OAAA,SAAAn4E,GAAkC,OAAAq3E,EAAA/+C,EAAAt4B,IAElCi4E,EAVO,CAHP,EACA,IAeO,SAAAZ,EAAA/+C,EAAAt4B,GACP,IAAAC,EAAA2d,KAAAo6D,KAAA,GAAA1/C,EAAA1a,KAAA6sC,IAAA,EAAAnyB,MAAAt4B,GAAA83E,IAEA,SAAAM,EAAAh5E,GACA,SAAAk5B,EAAA1a,KAAAgtD,IAAA,OAAAxrE,OAAAwe,KAAAiuD,KAAAzsE,EAAAa,GAAAD,GAMA,OAHAo4E,EAAAF,UAAA,SAAA5/C,GAAsC,OAAA++C,EAAA/+C,EAAAt4B,EAAA83E,KACtCM,EAAAD,OAAA,SAAAn4E,GAAmC,OAAAq3E,EAAA/+C,EAAAt4B,IAEnCo4E,EAVO,CAhBP,EACA,IA4BO,SAAAf,EAAA/+C,EAAAt4B,GACP,IAAAC,EAAA2d,KAAAo6D,KAAA,GAAA1/C,EAAA1a,KAAA6sC,IAAA,EAAAnyB,MAAAt4B,GAAA83E,IAEA,SAAAO,EAAAj5E,GACA,QAAAA,EAAA,EAAAA,EAAA,KACAk5B,EAAA1a,KAAAgtD,IAAA,KAAAxrE,GAAAwe,KAAAiuD,KAAA5rE,EAAAb,GAAAY,GACA,EAAAs4B,EAAA1a,KAAAgtD,IAAA,MAAAxrE,GAAAwe,KAAAiuD,KAAA5rE,EAAAb,GAAAY,IAAA,EAMA,OAHAq4E,EAAAH,UAAA,SAAA5/C,GAAwC,OAAA++C,EAAA/+C,EAAAt4B,EAAA83E,KACxCO,EAAAF,OAAA,SAAAn4E,GAAqC,OAAAq3E,EAAA/+C,EAAAt4B,IAErCq4E,EAZO,CA7BP,EACA,ICGA,CACAzF,KAAA,KACAD,MAAA,EACA+B,SAAA,IACAC,KCDO,SAAAv1E,GACP,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,QDGA,SAASk5E,GAAOxpD,EAAA9P,GAEhB,IADA,IAAAq1D,IACAA,EAAAvlD,EAAAylD,iBAAAF,IAAAr1D,KACA,KAAA8P,IAAA6vB,YACA,OAAAo5B,GAAAnF,KAAkCr0C,KAAGw5C,GAGrC,OAAA1D,EEfAxV,GAAS/+D,UAAAm1E,UCFM,SAAAx2E,GACf,OAAA6B,KAAAm8D,KAAA,WACIwY,GAAS30E,KAAA7B,MDCbogE,GAAS/+D,UAAAq1E,WFiBM,SAAA12E,GACf,IAAAugB,EACAq1D,EAEA51E,aAAsB82E,IACtBv2D,EAAAvgB,EAAAi3B,IAAAj3B,IAAA+2E,QAEAx2D,EAASy2D,MAAKpB,EAAA0D,IAAAnF,KAAoCr0C,KAAG9/B,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAGrD,QAAA2pB,EAAA9nB,KAAAy7D,QAAAz9D,EAAA8pB,EAAA7K,OAAAylB,EAAA,EAA2DA,EAAA1kC,IAAO0kC,EAClE,QAAAlU,EAAAlD,EAAAxD,EAAA4a,GAAArjC,EAAAisB,EAAArO,OAAArf,EAAA,EAA8DA,EAAAyB,IAAOzB,GACrE4wB,EAAAlD,EAAA1tB,KACQk2E,GAAQtlD,EAAArwB,EAAAugB,EAAA9gB,EAAA0tB,EAAAyoD,GAAqCiE,GAAOxpD,EAAA9P,IAK5D,WAAau2D,GAAUntD,EAAA9nB,KAAA07D,SAAAv9D,EAAAugB,IIxChB,SAAAu5D,GAAA5N,EAAA92D,EAAAG,GACP1T,KAAAqqE,IACArqE,KAAAuT,IACAvT,KAAA0T,IAGAukE,GAAAz4E,UAAA,CACAs0D,YAAAmkB,GACA7H,MAAA,SAAA/F,GACA,WAAAA,EAAArqE,KAAA,IAAAi4E,GAAAj4E,KAAAqqE,IAAArqE,KAAAuT,EAAAvT,KAAA0T,IAEAy8D,UAAA,SAAA58D,EAAAG,GACA,WAAAH,EAAA,IAAAG,EAAA1T,KAAA,IAAAi4E,GAAAj4E,KAAAqqE,EAAArqE,KAAAuT,EAAAvT,KAAAqqE,EAAA92D,EAAAvT,KAAA0T,EAAA1T,KAAAqqE,EAAA32D,IAEAob,MAAA,SAAAopD,GACA,OAAAA,EAAA,GAAAl4E,KAAAqqE,EAAArqE,KAAAuT,EAAA2kE,EAAA,GAAAl4E,KAAAqqE,EAAArqE,KAAA0T,IAEAykE,OAAA,SAAA5kE,GACA,OAAAA,EAAAvT,KAAAqqE,EAAArqE,KAAAuT,GAEA6kE,OAAA,SAAA1kE,GACA,OAAAA,EAAA1T,KAAAqqE,EAAArqE,KAAA0T,GAEA2kE,OAAA,SAAAC,GACA,QAAAA,EAAA,GAAAt4E,KAAAuT,GAAAvT,KAAAqqE,GAAAiO,EAAA,GAAAt4E,KAAA0T,GAAA1T,KAAAqqE,IAEAkO,QAAA,SAAAhlE,GACA,OAAAA,EAAAvT,KAAAuT,GAAAvT,KAAAqqE,GAEAmO,QAAA,SAAA9kE,GACA,OAAAA,EAAA1T,KAAA0T,GAAA1T,KAAAqqE,GAEAoO,SAAA,SAAAllE,GACA,OAAAA,EAAA0gD,OAAAykB,OAAAnlE,EAAAolE,QAAAn/D,IAAAxZ,KAAAu4E,QAAAv4E,MAAAwZ,IAAAjG,EAAA8kE,OAAA9kE,KAEAqlE,SAAA,SAAAllE,GACA,OAAAA,EAAAugD,OAAAykB,OAAAhlE,EAAAilE,QAAAn/D,IAAAxZ,KAAAw4E,QAAAx4E,MAAAwZ,IAAA9F,EAAA2kE,OAAA3kE,KAEA4jB,SAAA,WACA,mBAAAt3B,KAAAuT,EAAA,IAAAvT,KAAA0T,EAAA,WAAA1T,KAAAqqE,EAAA,MAImB,IAAA4N,GAAA,OAEVA,GAAAz4E,UCMM,kBCzCf,MAAMq5E,GAAuB,GACd,MAAMjvE,WAAgBkiD,YACjCgI,cACIglB,QACA94E,KAAK+4E,SAAW,GAChB/4E,KAAKg5E,SAAW,EAChBh5E,KAAKi5E,aAAe,CAAE1lE,EAAG,EAAGG,EAAG,GAC/B1T,KAAKkuB,MAAQ,CACTxP,SAAUsf,KAAKC,QACfjT,MAAO,CACH1C,MAAS,GAAG9O,IAAI1a,IAAOA,EAAE4f,GAAK5f,EAAEX,KAAaW,IAC7C4pB,MAAO,GACPZ,OAAU,KAOlB9nB,KAAKk5E,KAAOl5E,KAAKk5E,KAAK95E,KAAKY,MAC3BA,KAAKm5E,UAAYn5E,KAAKm5E,UAAU/5E,KAAKY,MACrCA,KAAKo5E,QAAUp5E,KAAKo5E,QAAQh6E,KAAKY,MACjCA,KAAKq5E,UAAYr5E,KAAKq5E,UAAUj6E,KAAKY,MAEzCs5E,oBAEIt5E,KAAKk5E,OAGLne,OAAO1D,iBAAiB,SAAUr3D,KAAKk5E,MACvCne,OAAO1D,iBAAiB,YAAar3D,KAAKq5E,WAC1Cte,OAAO1D,iBAAiB,UAAWr3D,KAAKo5E,SACxCre,OAAO1D,iBAAiB,YAAar3D,KAAKm5E,WAE9CA,UAAUvjD,GACN51B,KAAKu5E,gBAAkB3jD,EAE3BwjD,QAAQxjD,GACJ51B,KAAKu5E,gBAAkB,KACvBv5E,KAAKw5E,WAAa,KAEtBH,UAAUzjD,GACF51B,KAAKu5E,kBACLv5E,KAAKy5E,aAAe7jD,EACpB51B,KAAKw5E,WAAa,CACdjmE,EAAGqiB,EAAI8jD,QAAU15E,KAAKu5E,gBAAgBG,QACtChmE,EAAGkiB,EAAI+jD,QAAU35E,KAAKu5E,gBAAgBI,UAKlDC,uBACI7e,OAAO9D,oBAAoB,SAAUj3D,KAAKk5E,MAC1Cne,OAAO9D,oBAAoB,YAAaj3D,KAAKq5E,WAC7Cte,OAAO9D,oBAAoB,YAAaj3D,KAAKo5E,SAC7Cre,OAAO9D,oBAAoB,UAAWj3D,KAAKm5E,WAC3C,IAAIU,EAAS5kB,SAASuC,kBAAkBx3D,KAAKkuB,MAAMxP,MAC/Cm7D,IACAA,EAAOvf,UAAY,IAG3Bwf,sBAAsB1iD,EAAMgzB,GACxB,IAAI2vB,EAAM9kB,SAASuC,cAAc,qBAejC,OAdKuiB,KACDA,EAAM9kB,SAASxH,cAAc,QACzB/uC,GAAK,mBACTq7D,EAAI9f,aAAa,KAAM,oBACvB8f,EAAI1sB,MAAM2sB,WAAa,SACvBD,EAAI1sB,MAAM4sB,SAAW,WACrBF,EAAItgB,UAAUM,IAAI,SAClBggB,EAAI1sB,MAAM6sB,WAAa,SACvBH,EAAI1sB,MAAM8sB,UAAY/iD,GAAQ,IAAI5jB,MAAM,KAAKyJ,OAAS,EAAK,QAAS,QACpE88D,EAAI1sB,MAAM+sB,IAAM,WAChBL,EAAI1sB,MAAMrD,QAAiB,EAANI,EAAW,KAChC6K,SAASuC,kBAAkBx3D,KAAKkuB,MAAMxP,MAAMw5C,YAAY6hB,IAE5DA,EAAIzf,UAAYljC,EACT2iD,EAAIM,wBAEfnB,OACI,IAAI/sB,EAAKnsD,KACL65E,EAAS5kB,SAASuC,kBAAkBx3D,KAAKkuB,MAAMxP,MAEnDm7D,EAAOvf,UAAY,GACnB,IAAIggB,EAAKT,EAAOQ,wBACZE,EAAQC,aAAeC,IACvBrtB,EAAQktB,EAAGltB,MAAQ,GACnBe,EAASmsB,EAAGnsB,OAAS,GACrByf,EAAQ6M,gBAAgBA,qBAExBC,EAAS,EAAGtwB,EAAM,GACtBmwB,EACKI,aAAa36E,KAAKC,MAAM06E,cAAgB,KACxCC,eAAc,GACdC,oBAAmB,GACnB3e,KAAK,CAAC9O,EAAOe,IAElB,IAAImG,EACJ,WACI,IAAIwmB,EAAQL,cAActuB,EAAGj+B,MAAMxP,MAAMw/C,OAAO,OAC3Cx0B,KAAK,QAAS0jB,GACd1jB,KAAK,SAAUykB,GACfzkB,KAAK,iBAAkB,OAE5BoxC,EAAM5c,OAAO,YAAYA,OAAO,cAC3Bx0B,KAAK,KAAM,aACXA,KAAK,UAAW,cAChBA,KAAK,OAAQ,GACbA,KAAK,cAAe,GACpBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QACfw0B,OAAO,YACPx0B,KAAK,IAAK,sBACVA,KAAK,eAAgB,OACrBA,KAAK,OAAQ,SAAUxrC,GACpB,OAAIA,GAAKA,EAAEkuB,YAAcluB,EAAEkuB,WAAWpV,MAAQD,GAAW7Y,EAAEkuB,WAAWpV,OAASD,GAAW7Y,EAAEkuB,WAAWpV,MAAMC,OAClGF,GAAW7Y,EAAEkuB,WAAWpV,MAAMC,OAElC,SAIf,IAAI8jE,EAAMD,EAAM5c,OAAO,KAKvB,SAAS8c,IACL,IAAIznE,EAAEA,EAAI,EAANG,EAASA,EAAI,GAAOy4C,EAAGqtB,YAAc,GACzCuB,EAAIrxC,KAAK,qBAAsByiB,EAAG6sB,UAAY,gBAAgB7sB,EAAG8sB,aAAa1lE,EAAIA,MAAM44C,EAAG8sB,aAAavlE,EAAIA,MAuBhH,OA7BAonE,EAAMjlD,GAAG,QAAS,SAAU33B,GACxBiuD,EAAG6sB,UAAYyB,SAASQ,YAAc9uB,EAAGlsD,MAAMi7E,YAAc,KAC7DF,MAMJF,EAAMjlD,GAAG,YAAa,SAAUtiB,EAAGga,GAC3B4+B,EAAGgvB,SACHH,MAIRF,EAAMjlD,GAAG,YAAa,SAAU33B,GAC5BiuD,EAAGgvB,SAAU,IAEjBL,EAAMjlD,GAAG,UAAW,SAAU33B,GAC1BiuD,EAAGgvB,SAAU,EAEThvB,EAAGqtB,YAAcrtB,EAAG8sB,eACpB9sB,EAAG8sB,aAAe,CACd1lE,EAAG44C,EAAG8sB,aAAa1lE,EAAI44C,EAAGqtB,WAAWjmE,EACrCG,EAAGy4C,EAAG8sB,aAAavlE,EAAIy4C,EAAGqtB,WAAW9lE,MAKjDsnE,IACOD,EAvDDK,GAoGV,IAAIpwD,EAAQhrB,KAAKkuB,MAAMlD,MAEvBA,EAAM1C,MAAM+yD,QAAQ,SAAU9tD,GAC1B,IAAI+sD,EAAKnuB,EAAG2tB,sBAAsBwB,EAAa/tD,GAAI68B,GACnD78B,EAAE6/B,MAAQ9vC,KAAK6sC,IAAI0uB,GAAsByB,EAAGltB,OAC5C7/B,EAAE4gC,OAAS7wC,KAAK6sC,IAAI0uB,GAAsByB,EAAGnsB,UAEjDnjC,EAAMlD,OAAOuzD,QAAQ,SAAU5R,GAAKA,EAAEzf,QAAUI,IAEhDmwB,EAAMjyD,MAAM0C,EAAM1C,OACbR,OAAOkD,EAAMlD,QACbY,MAAMsC,EAAMtC,OACZmN,GAAG,OAmIR,WACQs2B,EAAGovB,SACHpvB,EAAGovB,QAAQpf,KAAK,SAAUj+D,GACtB,IAAIo8E,EAAKnuB,EAAG2tB,sBAAsBwB,EAAap9E,GAAIksD,GACnDlsD,EAAEkvD,MAAQ9vC,KAAK6sC,IAAI0uB,GAAsByB,EAAGltB,OAC5ClvD,EAAEiwD,OAAS7wC,KAAK6sC,IAAI0uB,GAAsByB,EAAGnsB,QAC7CjwD,EAAEs9E,YAAct9E,EAAEu9E,OAAOC,SAAUhB,KAUvCvuB,EAAGovB,SACHpvB,EAAGovB,QACE7xC,KAAK,QAAS,SAAUxrC,GAAK,OAAOA,EAAEkvD,QACtC1jB,KAAK,SAAU,SAAUxrC,GAAK,OAAOA,EAAEiwD,SACvCzkB,KAAK,IAAK,SAAUxrC,GAAK,OAAOA,EAAEqV,EAAIrV,EAAEkvD,MAAQ,IAChD1jB,KAAK,IAAK,SAAUxrC,GAAK,OAAOA,EAAEwV,EAAIxV,EAAEiwD,OAAS,IAG1D7iC,EAAMoe,KAAK,IAAK,SAAUxrC,GAAK,OAAOA,EAAEu9E,OAAOloE,IAC1Cm2B,KAAK,IAAK,SAAUxrC,GAAK,OAAOA,EAAEu9E,OAAO/nE,IACzCg2B,KAAK,QAAS,SAAUxrC,GAAK,OAAOA,EAAEu9E,OAAOruB,UAC7C1jB,KAAK,SAAU,SAAUxrC,GAAK,OAAOA,EAAEu9E,OAAOttB,WAEnDtgC,EAAKsuC,KAAK,SAAUj+D,GAChBA,EAAEy9E,MAAQnB,mBAAqBpL,EAAOlxE,EAAEwvB,QAAS0hD,EAAOlxE,EAAEyvB,QAASrQ,KAAKotD,GAAK,GAAI,KAGrF78C,EAAK6b,KAAK,KAAM,SAAUxrC,GAAK,OAAOA,EAAEy9E,MAAMC,mBAAmBroE,IAC5Dm2B,KAAK,KAAM,SAAUxrC,GAAK,OAAOA,EAAEy9E,MAAMC,mBAAmBloE,IAC5Dg2B,KAAK,KAAM,SAAUxrC,GAAK,OAAOA,EAAEy9E,MAAME,WAAWtoE,IACpDm2B,KAAK,KAAM,SAAUxrC,GAAK,OAAOA,EAAEy9E,MAAME,WAAWnoE,IAEzDooE,EAASpyC,KAAK,YAAa,SAAUxrC,GACjC,IAAIwV,EAAIxV,EAAEwV,EAAIxV,EAAEiwD,OAAS,EACrB56C,EAAIrV,EAAEqV,EAAIrV,EAAEkvD,MAAQ,EACxB,mBAAoB75C,KAAKG,OAI7Bq5C,EACKrjB,KAAK,IAAK,SAAUxrC,GACjB,OAAOA,EAAEqV,EAAIrV,EAAEkvD,MAAQ,IACxB1jB,KAAK,IAAK,SAAUxrC,GACnB,IAAI69E,EAAW/7E,KAAKw3D,cAAc,OAC9Bp/B,EAAI2jD,EAAWA,EAAS1B,wBAAwBlsB,OAAS,EAE7D,OAAOjwD,EAAEwV,EAAI0kB,EAAI,EAAIl6B,EAAEiwD,OAAS/D,EAAM,IAE9C4xB,EAAO5kD,KAAK,SAAUl5B,GAClB,OAAOo9E,EAAap9E,OAxL5B,IAAIotB,EAAQgpC,EAAI0H,UAAU,UACrBj1C,KAAKiE,EAAMlD,QACX0wC,QAAQ0F,OAAO,QACfx0B,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzBA,KAAK,QAAS,SACd2jB,MAAM,OAAQ,SAAUnvD,EAAGN,GAAK,OAAOgwE,EAAMhwE,KAC7CG,KAAKw8E,EAAM0B,MAEZztD,EAAO8lC,EAAI0H,UAAU,SACzBh8D,KAAKk8E,MAAQ1tD,EACbxuB,KAAKm8E,UAAUnxD,EAAOuvD,EAAO3M,GAC7B,IAAI//C,EAAOymC,EAAI0H,UAAU,SACpBj1C,KAAKiE,EAAMtC,OACX8vC,QAAQ0F,OAAO,QACfx0B,KAAK,QAAS,QACd2jB,MAAM,SAAU,SAAUnvD,GACvB,OAAIA,EAAEk+E,SACK,UAEPl+E,GAAKA,EAAEkuB,YAAcluB,EAAEkuB,WAAWpV,OAASxC,GAASyB,yBAA2B/X,EAAEkuB,WAAWjV,GAAiBG,mBACtGP,GAAWvC,GAAS0B,WAAWe,OAEjC/Y,GAAKA,EAAEkuB,YAAcluB,EAAEkuB,WAAWpV,MAAQD,GAAW7Y,EAAEkuB,WAAWpV,OAASD,GAAW7Y,EAAEkuB,WAAWpV,MAAMC,OACvGF,GAAW7Y,EAAEkuB,WAAWpV,MAAMC,OAElC,SAEVo2C,MAAM,mBAAoB,SAAUnvD,GACjC,OAAIA,GAAKA,EAAEkuB,YAAcluB,EAAEkuB,WAAWpV,OAASxC,GAASyB,yBAA2B/X,EAAEkuB,WAAWjV,GAAiBG,mBACtG,MAEJ,KAEV+1C,MAAM,IAAK,SAAUnvD,GAClB,OAAIA,GAAKA,EAAEkuB,YAAcluB,EAAEkuB,WAAWpV,OAASxC,GAASyB,yBAA2B/X,EAAEkuB,WAAWjV,GAAiBG,mBACtG,eAEJ,KAEV+1C,MAAM,eAAgB,SAAUnvD,GAC7B,OAAIA,GAAKA,EAAEkuB,YAAcluB,EAAEkuB,WAAWpV,MAAQD,GAAW7Y,EAAEkuB,WAAWpV,OAASD,GAAW7Y,EAAEkuB,WAAWpV,MAAME,YAClGH,GAAW7Y,EAAEkuB,WAAWpV,MAAME,YAElCoG,KAAKyuD,KAAK7tE,EAAEW,SAE3BgvB,EAAKgI,GAAG,QAAS,CAAC33B,EAAGk0C,EAAOiqC,KACpBlwB,EAAGlsD,MAAMq8E,aAAep+E,GACxBiuD,EAAGlsD,MAAMq8E,YAAY,CACjB59D,GAAIxgB,EAAEwgB,GACNgP,OAAQxvB,EAAEwvB,OAAOhP,GACjBiP,OAAQzvB,EAAEyvB,OAAOjP,IAClB29D,EAAIjqC,GAAOioC,2BAGtBxsD,EAAKgI,GAAG,YAAa,CAAC33B,EAAGk0C,EAAOiqC,KACxBlwB,EAAGlsD,MAAMs8E,aAAer+E,GACxBiuD,EAAGlsD,MAAMs8E,YAAY,CACjB79D,GAAIxgB,EAAEwgB,GACNgP,OAAQxvB,EAAEwvB,OAAOhP,GACjBiP,OAAQzvB,EAAEyvB,OAAOjP,IAClB29D,EAAIjqC,GAAOioC,2BAGtB,IAAIttB,EAAQuH,EAAI0H,UAAU,UACrBj1C,KAAKiE,EAAM1C,OACXkwC,QACA0F,OAAO,iBACPx0B,KAAK,QAAS,SACnBqjB,EAAMl3B,GAAG,QAAS,CAAC33B,EAAGk0C,EAAOiqC,KACrBlwB,EAAGlsD,MAAMu8E,aAAet+E,GAAKA,EAAEwgB,IAC/BytC,EAAGlsD,MAAMu8E,YAAYt+E,EAAEwgB,GAAI29D,EAAIjqC,GAAOioC,2BAI9C,IAAIyB,EAAWxnB,EAAI0H,UAAU,aACxBj1C,KAAKiE,EAAM1C,OACXkwC,QACA0F,OAAO,KACPx0B,KAAK,QAAS,YAEnBoyC,EAAS5d,OAAO,QACXx0B,KAAK,QAAS,SAAUxrC,GAAK,OAAOA,EAAEk+E,SAAW,EAAI,IACrD1yC,KAAK,SAAU,SAAUxrC,GAAK,OAAOA,EAAEiwD,OAAS,KAChDzkB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzB2jB,MAAM,OAAQ,SAAUnvD,GACrB,OAAIA,EAAEk+E,UAAYjwB,EAAGlsD,MAAMw8E,cAChBtwB,EAAGlsD,MAAMw8E,cAEb7O,EAAM5iD,EAAMlD,OAAO7K,UAGlC,IAAI++D,EAASjvB,EAAMmR,OAAO,aACrB7Q,MAAM,QAAS95C,MACFA,EAAE65C,MAAQhD,EAAM,OAE7BiD,MAAM,cAAe,UACrBA,MAAM,aAAc,SAEpBA,MAAM,SAAU95C,MACHA,EAAE46C,OAAS/D,EAAM,OAE9BhzB,KAAK,SAAUl5B,GAAK,SAAUo9E,EAAap9E,OAC3CH,KAAKw8E,EAAM0B,MAQhB,SAASX,EAAap9E,GAClB,OAAOA,GAAKA,EAAEkuB,YAAaluB,EAAEkuB,WAAWgL,MAAiBl5B,EAAEC,KAG/D,SAASixE,EAAO1hD,EAAQgvD,EAASp/D,KAAKotD,GAAK,GACvC,IAAI8Q,YAAEA,EAAFjoE,EAAeA,EAAfG,EAAkBA,GAAMga,EACxBivD,EAAOnB,EAAY9nE,EAAI8nE,EAAYoB,EACnCC,EAAMrB,EAAYjoE,EAAIioE,EAAYsB,EAEtC,OAAOx+E,OAAOy+E,OAAOvB,EAAa,CAC9BjoE,EAAG,EAAIioE,EAAYjoE,EACnBG,EAAGipE,EAASE,EAAMF,EAAQ,EAAKnB,EAAY9nE,EAAI8nE,EAAY9nE,EAC3DopE,EAAG,EAAItB,EAAYsB,EACnBF,EAAGD,EAASE,EAAMF,EAAQ,EAAKnB,EAAYoB,EAAIpB,EAAYoB,IAnBnE58E,KAAKg9E,OAASzC,EACdv6E,KAAKm/B,SAAS,CACV+8C,MAAO1tD,EACPyuD,OAAQrP,IA8EZ2M,EAAMjvB,QAEV6wB,UAAUnxD,EAAOkyD,EAAMtP,GACnB,IAAIzhB,EAAKnsD,KACLwuB,EAAOxuB,KAAKk8E,MAAMn1D,KAAKm2D,EAAK50D,QAAS/U,GAAKA,EAAEmL,IAAMnL,EAAEpV,MACpDo3B,EAAO/G,EAAKgqC,QAAQ0F,OAAO,QAC1Bx0B,KAAK,QAAS,QACdA,KAAK,QAAS,SAAUxrC,GAAK,OAAOA,EAAEkvD,QACtC1jB,KAAK,SAAU,SAAUxrC,GAAK,OAAOA,EAAEiwD,SACvCzkB,KAAK,KAAM,GAAGA,KAAK,KAAM,GACzB2jB,MAAM,OAAQ,SAAUnvD,GACrB,OAAIA,GAAKA,EAAEkuB,YAAcluB,EAAEkuB,WAAWzP,UAAY/N,GAAe1Q,EAAEkuB,WAAWzP,UACnE/N,GAAe1Q,EAAEkuB,WAAWzP,UAEhCixD,EAAM5iD,EAAMlD,OAAO7K,UAE7B4Y,GAAG,QAAS,CAAC33B,EAAGk0C,EAAOiqC,KAChBlwB,EAAGlsD,MAAMu8E,aAAet+E,GACxBiuD,EAAGlsD,MAAMu8E,YAAYt+E,EAAEwgB,GAAI29D,EAAIjqC,GAAOioC,2BAG7Ct8E,KAAKm/E,EAAKjB,MAEfztD,EAAKiqC,OAAOlD,SACZv1D,KAAKu7E,QAAUhmD,EAEnB4nD,oBAAoBC,GAIhB,OAHAA,EAAGhwB,MAAQ,GACXgwB,EAAGjvB,OAAS,GACZivB,EAAGj/E,KAAOi/E,EAAG1+D,GACN0+D,EAEXC,0BAA0Bp9E,EAAOiuB,GAC7B,GAAIjuB,EAAM+qB,MAAO,CACb,IAAIA,MAAEA,GAAU/qB,EACZi5E,GAAO,EAGX,GADAl5E,KAAKg9E,OAAOzxB,OACRvgC,EAAM1C,OAAStoB,KAAKkuB,OAASluB,KAAKkuB,MAAMlD,OAAShrB,KAAKkuB,MAAMlD,MAAM1C,MAAO,CACzE,IAAIg1D,EAAet9E,KAAKkuB,MAAMlD,MAAM1C,MAAMoiC,mBAAmB1/B,EAAM1C,MAAO,CAAC/U,EAAGG,IAAMH,EAAEmL,KAAOhL,GAAG8F,IAAI1a,GACzFkB,KAAKkuB,MAAMlD,MAAM1C,MAAM3U,QAAQ7U,IAE1CkB,KAAKkuB,MAAMlD,MAAM1C,MAAM2iC,cAAcqyB,GACtBtyD,EAAM1C,MAAMoiC,mBAAmB1qD,KAAKkuB,MAAMlD,MAAM1C,MAAO,CAAC/U,EAAGG,IAAMH,IAAMG,EAAEgL,IAC/ElF,IAAI4jE,IACTp9E,KAAKkuB,MAAMlD,MAAM1C,MAAM2P,KACnBj4B,KAAKm9E,oBjJ62CtB,SAAuBC,GAC1B,MAAO,IACAA,GiJ/2CsClgD,CAA2BlS,EAAM3C,QAAQ+0D,QAItEn9E,EAAMs9E,eACNv9E,KAAKkuB,MAAMlD,MAAM1C,MAAM9O,IAAI4jE,IACvBA,EAAGhB,WAAan8E,EAAMs9E,cAAcnqD,KAAKt0B,GAAKA,GAAKs+E,EAAG1+D,MAG9D1e,KAAKkuB,MAAMlD,MAAM1C,MAAM9O,IAAI4jE,IACvB,IAAII,EAAKxyD,EAAM3C,QAAQ+0D,EAAG1+D,IACtB8+D,GAAMA,EAAGpxD,aACTgxD,EAAGhxD,WAAa,IAAKoxD,EAAGpxD,eAIhC8sD,GAAO,EAEX,GAAIluD,EAAMtC,OAAS1oB,KAAKkuB,OAASluB,KAAKkuB,MAAMlD,OAAShrB,KAAKkuB,MAAMlD,MAAMtC,MAAO,CACzE,IAAI+0D,EAAez9E,KAAKkuB,MAAMlD,MAAMtC,MAAMgiC,mBAAmB1/B,EAAMtC,MAAO,CAACnV,EAAGG,IAAMH,EAAEmL,KAAOhL,GAAG8F,IAAI1a,GACzFkB,KAAKkuB,MAAMlD,MAAMtC,MAAM/U,QAAQ7U,IAE1CkB,KAAKkuB,MAAMlD,MAAMtC,MAAMuiC,cAAcwyB,GACtBzyD,EAAMtC,MAAMgiC,mBAAmB1qD,KAAKkuB,MAAMlD,MAAMtC,MAAO,CAACnV,EAAGG,IAAMH,IAAMG,EAAEgL,IAC/ElF,IAAI4jE,IACTp9E,KAAKkuB,MAAMlD,MAAMtC,MAAMuP,KA4D3C,SAAuBmlD,EAAI90D,GACvB,MAAO,IACA80D,EACH1vD,OAAQpF,EAAMi3B,UAAUhsC,GAAKA,EAAEmL,KAAO0+D,EAAG1vD,QACzCC,OAAQrF,EAAMi3B,UAAUhsC,GAAKA,EAAEmL,KAAO0+D,EAAGzvD,SA/DxB+vD,CAAc1yD,EAAMvC,QAAQ20D,GAAKp9E,KAAKkuB,MAAMlD,MAAM1C,UAGvDroB,EAAM09E,eACN39E,KAAKkuB,MAAMlD,MAAMtC,MAAMlP,IAAI4jE,IACvBA,EAAGhB,WAAan8E,EAAM09E,cAAcvqD,KAAKt0B,GAAKA,EAAE4f,KAAO0+D,EAAG1+D,MAGlE1e,KAAKkuB,MAAMlD,MAAMtC,MAAMlP,IAAI4jE,IACvB,IAAII,EAAKxyD,EAAMvC,QAAQ20D,EAAG1+D,IACtB8+D,GAAMA,EAAGpxD,aACTgxD,EAAGhxD,WAAa,IAAKoxD,EAAGpxD,eAGhC8sD,GAAO,EAGX,GAAIluD,EAAMlD,QAAU9nB,KAAKkuB,OAASluB,KAAKkuB,MAAMlD,OAAShrB,KAAKkuB,MAAMlD,MAAMlD,OAAQ,CAC3E,IAAI81D,EAAe5yD,EAAMlD,OAAOrU,OAAOF,GAAKyX,EAAMjD,SAASxU,GAAGsY,QAAUb,EAAMjD,SAASxU,GAAGuU,QACtF+1D,EAAgB79E,KAAKkuB,MAAMlD,MAAMlD,OAAO4iC,mBAAmBkzB,EAAc,CAACrqE,EAAGG,IAAMH,EAAEmL,KAAOhL,GAAG8F,IAAI1a,GAC5FkB,KAAKkuB,MAAMlD,MAAMlD,OAAOnU,QAAQ7U,IAE3CkB,KAAKkuB,MAAMlD,MAAMlD,OAAOmjC,cAAc4yB,GACtBD,EACXlzB,mBAAmB1qD,KAAKkuB,MAAMlD,MAAMlD,OAAQ,CAACvU,EAAGG,IAAMH,IAAMG,EAAEgL,IAC9DjL,OAAOF,GAAKyX,EAAMjD,SAASxU,KAAOyX,EAAMjD,SAASxU,GAAGsY,QAAUb,EAAMjD,SAASxU,GAAGuU,SAC3EtO,IAAI4jE,IACVp9E,KAAKkuB,MAAMlD,MAAMlD,OAAOmQ,KAqE5C,SAAwBmlD,EAAI90D,EAAOR,GAC/B,IAAIyN,EAAO,IACJ6nD,GAIP,cAFO7nD,EAAK1J,cACL0J,EAAKzN,OACLyN,EA1EcuoD,CAAe9yD,EAAMjD,SAASq1D,GAAKp9E,KAAKkuB,MAAMlD,MAAM1C,UAG7Ds1D,EAAavC,QAAQ/vD,KAmCrC,SAAoByyD,EAAcprD,EAAQ7K,EAAQQ,GAC1CqK,IACIA,EAAO9G,QAAU8G,EAAO9G,OAAO5O,QAC/B8gE,EAAalyD,OAAUkyD,EAAalyD,QAAU,GAC9CkyD,EAAalyD,OAAO5O,OAAS,EAC7B8gE,EAAalyD,OAAOoM,QAAQtF,EAAO9G,OAAOrS,IAAI3b,GAAKyqB,EAAMi3B,UAAUhsC,GAAKA,EAAEmL,KAAO7gB,aAG1EkgF,EAAalyD,OAGpB8G,EAAO7K,QAAU6K,EAAO7K,OAAO7K,QAC/B8gE,EAAaj2D,OAAUi2D,EAAaj2D,QAAU,GAC9Ci2D,EAAaj2D,OAAO7K,OAAS,EAC7B8gE,EAAaj2D,OAAOmQ,QAAQtF,EAAO7K,OAAOtO,IAAI3b,GAAKiqB,EAAOy3B,UAAUhsC,GAAKA,EAAEmL,KAAO7gB,aAG3EkgF,EAAaj2D,QAlDZk2D,CADQh+E,KAAKkuB,MAAMlD,MAAMlD,OAAOsL,KAAK7f,GAAKA,EAAEmL,KAAO4M,GACrCN,EAAMjD,SAASuD,GAAQtrB,KAAKkuB,MAAMlD,MAAMlD,OAAQ9nB,KAAKkuB,MAAMlD,MAAM1C,SAUnF4wD,GACAl5E,KAAKk5E,QAIjB+E,wBACI,OAAO,EAEXn+E,SACI,qbACIo+E,CAAA,OAAKx/D,GAAI1e,KAAKkuB,MAAMxP,GAAIktC,UAAU,UAAUyB,MAAO,CAAEgC,UAAW,mcC9gB7D,MAAM8uB,WAAmBryB,YACpChsD,SACI,OACIs+E,GAACrrB,GAAD,CAASrE,OAAQ1uD,KAAKC,MAAMyuD,aAA5B,GACM1uD,KAAKC,MAAMo+E,OAAS,IAAI7kE,IAAKoT,GACpBwxD,GAAA,OACwBxyB,4BAA6B5rD,KAAKC,MAAMq+E,WAAW1xD,GAAQ,SAAW,aACjGygC,MAAO,CACHkxB,OAAQ,UACRC,SAAU,SACVtE,WAAY,SACZuE,aAAc,YACfryB,QAAS,KACJpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,QAAQx/B,gBARXA,EAAKlO,KADlB,IAWGkO,EAAK1H,2bC0NpB0kC,aAlOf,cAAgCkC,YAC5BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcl+C,OACjDsxB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDg1B,EAAWh1B,GAAgB5sB,EAAa4sB,GAAmBllD,SAC3Dm6E,EAAYj1B,GAAgB5sB,EAAa4sB,GAAmB3/C,UAC5D60E,EAAuBl1B,GAAgB5sB,EAAa4sB,GAAmBz/C,iBACvE40E,EAAmBn1B,GAAgBx7B,EAAOw7B,GAAc19C,YAAYwN,IAAIgV,IACjE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAGhC,OACIswD,GAAC/rB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAegiD,GAAC9rB,GAAD,UACZ8rB,GAAChsB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBllD,SAAW,GACrFssD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBllD,QACzBka,GAAIoe,EAAYpe,GAChB7f,aAGX6/E,EAAYI,GAAC7rB,GAAD,CACTlG,MAAOplC,GACPuD,QAASw+B,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOgO,IAAIgV,IAC9C,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAGhCsiC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmB74C,QAClD6c,OAAQhP,EACRqY,SAAU2yB,GAAmBpzC,SAASU,OAE1ChX,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB74C,OACzB6N,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBpzC,aAG5CzX,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB74C,QAAU,KAAU,KAClGiuE,GAAChsB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBjlD,QAAU,GACpFqsD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBjlD,OACzBia,GAAIoe,EAAYpe,GAChB7f,aAGZigF,GAAChsB,GAAD,CACI/F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBz/C,iBACvD6mD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GAA0Bx+B,QAAS,CAC1CoE,KAAMo6B,GAAmBz/C,gBACzByU,GAAIoe,EAAYpe,GAChB7f,eAIf+/E,EAAwBE,GAAC7rB,GAAD,CACrB/nC,QAASw+B,GAAgBx7B,EAAO5iB,GAAUE,OAAOgO,IAAIjG,IAC1C,CACH1U,MAAO0U,EAAEmL,GACTwG,MAAOwkC,GAAiBn2C,MAGhCw5C,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB,IAAI5B,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmB/2C,uBAAyB,GACrF3S,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmB/2C,qBACzB+L,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAIie,EAAOje,GAAOitB,OAAOvY,GAAKA,KAE1C,CACC8uB,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBp0C,qBAIhDzW,MAAO,KAAU,KACrBigF,GAACC,GAAD,CAAYrwB,QAAQ,EAAM4vB,WAAa1xD,IACnC,IAAI9P,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmB/2C,uBAAyB,GACrF,OAAOia,GAAQ9P,EAAMwR,KAAK/a,GAAKA,IAAMqZ,EAAKlO,KAE1C2/D,OAAQ30B,GAAgB5sB,EAAa4sB,GAAmB/2C,uBAAyB,IAAI6G,IAAI1a,IACrF,IAAI0vB,EAAOwB,GAAQ05B,GAAoBx7B,GAAQpvB,GAC/C,GAAI0vB,EACA,MAAO,CACHtJ,MAAOwkC,GAAiBl7B,GACxB9P,GAAI8P,EAAK9P,MAIrB0tC,QAAUx/B,IACN,IAAIlO,EAAKoe,EAAYpe,GACrB,IAAI5B,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmB/2C,uBAAyB,GACjFwb,EAAMrR,EAENqR,EADArR,EAAMwR,KAAKxvB,GAAK8tB,EAAKlO,KAAO5f,GACtB,IAAIqvB,EAAI1a,OAAO3U,GAAKA,IAAM8tB,EAAKlO,KAAKoN,OAAOvY,GAAKA,GAGhD,IAAI4a,EAAKvB,EAAKlO,IAAIoN,OAAOvY,GAAKA,GAExCvT,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmB/2C,qBACzB+L,GAAIoe,EAAYpe,GAChB7f,MAAOsvB,IAEZ,CACCkU,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQf,EAAKlO,GACbgP,OAAQhP,EACRqY,SAAU2yB,GAAmBp0C,eAAe0B,aAI9C,KAElB8nE,GAACE,GAAD,CAA0B95D,MAAOyC,IAEjCm3D,GAACG,GAAD,UACIH,GAACI,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAAuB,CAC7Ch7B,OAAQg7B,GAAWx7B,EAAOw7B,IAC1B96B,gBAAiB,GAEjBD,eAAgB,CACZvC,WAAY,IAAKs9B,GAAmB3zC,kBAG7C+2C,KAAM,qBAAsB5nC,MAAOyC,GAAoBsmC,YAAatmC,MAE1E+2D,EAAYI,GAAC7rB,GAAD,CACTlG,MAAOplC,GACPuD,QAAS2zD,EACT/tB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBxxC,mBAG5CrZ,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB34C,eAAiB,KAAU,KACxG+rB,EAAegiD,GAAC9rB,GAAD,UACZ8rB,GAAChsB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB3/C,UAAY,GACtF+mD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB3/C,SACzB2U,GAAIoe,EAAYpe,GAChB7f,cAGE,KACjB8/E,EAAaG,GAAC7rB,GAAD,CACVlG,MAAOplC,GACPuD,QAASw+B,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOgO,IAAIgV,IAC9C,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAGhCsiC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBt4C,cAClDsc,OAAQhP,EACRqY,SAAU2yB,GAAmB1zC,WAAWgB,OAE5ChX,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBt4C,aACzBsN,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmB1zC,eAG5CnX,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBt4C,cAAgB,KAAU,KACxG0tE,GAACG,GAAD,UACKP,EAAYI,GAACI,GAAD,CAAwB9yB,QAAS,KAC1CpsD,KAAKC,MAAMmiC,eAAesnB,GAAyB,CAC/Ch7B,OAAQg7B,GAAWx7B,EAAOw7B,IAC1B/6B,eAAgB,CACZvC,WAAY,IAAKs9B,GAAmBxxC,oBAG7C40C,KAAM,qBAAsB5nC,MAAOyC,GAAsBsmC,YAAatmC,KAAuC,2bCrGrHiiC,aAvHf,cAAmCkC,YAC/BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc98C,UACjDkwB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDy1B,EAAcz1B,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOiI,OAAOF,GAAKm2C,GAAgBn2C,EAAGm2C,GAAmBllD,UAAUgV,IAAIgV,IACnH,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAG5B4wD,EAAiB9gF,OAAOib,KAAKvQ,IAAWwQ,IAAI6lE,IACrC,CACHn6D,MAAOlc,GAAUq2E,GAASn6D,OAASm6D,EACnCxgF,MAAOwgF,KAGf,OACIC,GAACvsB,GAAD,CAASrE,OAAQA,QAAjB,EACO5xB,EAAewiD,GAACrsB,GAAD,CACdlG,MAAOplC,GACPuD,QAASi0D,EACTruB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBx3C,aAClDwb,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBx3C,YACzBwM,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmB/zC,qBAG5C9W,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB34C,eAAiB,KAAU,KAExG+rB,EAAewiD,GAACxsB,GAAD,CACZ/F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB52C,eAAiB,GAC3Fg+C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB52C,cACzB4L,GAAIoe,EAAYpe,GAChB7f,MAAOA,OAEN,KACZi+B,IAAgBA,EAAY1Q,WAAWs9B,GAAmB52C,eAAkBwsE,GAACrsB,GAAD,CACzElG,MAAOplC,GACPuD,QAASk0D,EACTtuB,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv2C,aACzBuL,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAAgC,CACtDhrC,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBv2C,cAAgB,KAAU,KACvG2pB,EAAewiD,GAACrsB,GAAD,CACZlG,MAAOplC,EACPuD,QAAS5sB,OAAOib,KAAKjX,IAASkX,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAOyD,GAAQxD,MACnEgyD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB92C,WACzB8L,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB92C,YAAc,KAAU,KACrGkqB,EAAewiD,GAACrsB,GAAD,CACZlG,MAAOplC,GACPuD,QAAS5sB,OAAOib,KAAK+K,IAAc9K,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAOylB,GAAaxlB,MAC7EgyD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB7f,QACAywB,KAAM7f,GAAetG,cAG7BtK,MAAO6qD,GAAgB5sB,EAAartB,GAAetG,cAAmB,KACzE2zB,EAAewiD,GAACzsB,GAAD,CACZ9F,MAAOplC,GACP9oB,MAAO6qD,GAAgB5sB,EAAartB,GAAepG,WACnDynD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB7f,QACAywB,KAAM7f,GAAepG,eAEpB,KACbi2E,GAACL,GAAD,UACKniD,GAAeA,EAAY1Q,WAAWs9B,GAAmB52C,eAAkBwsE,GAACJ,GAAD,CAAwB9yB,QAAS,KACzGpsD,KAAKC,MAAMmiC,eAAe,CAAC,CAAEC,eAAWqnB,GAAuB,CAAEx+B,QAAS,CAAExM,GAAIoe,EAAYpe,QAC7FouC,KAAM,qBAAsB5nC,MAAOyC,GAAuBsmC,YAAatmC,KAAwC,KACjHmV,EAAewiD,GAACJ,GAAD,CAAwB9yB,QAAS,KAC7CpsD,KAAKC,MAAMmiC,eAAesnB,GAAwB,CAC9Ch7B,OAAQg7B,GAAWx7B,EAAOw7B,OAE/BoD,KAAM,qBAAsB5nC,MAAOyC,GAAqBsmC,YAAatmC,KAAsC,KAC7GmV,EAAewiD,GAACJ,GAAD,CAAwB9yB,QAAS,KAC7CpsD,KAAKC,MAAMmiC,eAAesnB,GAA8B,CACpDh7B,OAAQg7B,GAAWx7B,EAAOw7B,OAE/BoD,KAAM,qBAAsB5nC,MAAOyC,GAA0BsmC,YAAatmC,KAA2C,2bCyG7HiiC,aAzNf,cAAmCkC,YAC/BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcjhD,UACjDq0B,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACpD,GAAI5sB,EACA,IAAIyiD,EAAiBziD,GAAeA,EAAY1Q,YAAc0Q,EAAY1Q,WAAWs9B,GAAmB/3C,gBACpG6tE,EAAoB91B,GAAgB5sB,EAAa4sB,GAAmB/+C,gBACpEi0E,EAAuBl1B,GAAgB5sB,EAAa4sB,GAAmBz/C,iBACvEw1E,EAAiB/1B,GAAgBx7B,EAAOw7B,GAAcjhD,UAAUgL,OAAOF,GAChEA,EAAEmL,KAAOoe,EAAYpe,IAC7BlF,IAAIgV,IACI,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAIpC,OACIkxD,GAAC3sB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe4iD,GAAC1sB,GAAD,UACZ0sB,GAAC5sB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB/3C,gBAAkB,GAC5Fm/C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/3C,eACzB+M,GAAIoe,EAAYpe,GAChB7f,aAGX0gF,EAAkBG,GAACzsB,GAAD,CACflG,MAAOplC,GACPuD,QAASu0D,EACT3uB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBh4C,aAClDgc,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBh4C,YACzBgN,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBtwC,kBAG5Cva,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBh4C,aAAe,KAAU,MACzF,KAEjBorB,EAAe4iD,GAAC1sB,GAAD,UACZ0sB,GAAC7sB,GAAD,CACI9F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBxmD,QAAU,GACpF4tD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBxmD,OACzBwb,GAAIoe,EAAYpe,GAChB7f,cAIE,KACjBi+B,EAAe4iD,GAAC1sB,GAAD,UACZ0sB,GAAC5sB,GAAD,CACI/F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBz/C,iBACvD6mD,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAe,CAACvjC,EAAQ,KAAO,CACtCwjC,UAAWqnB,GAA+Bx+B,QAAS,CAC/CyC,OAAQmP,EAAY1Q,WAAWs9B,GAAmBh3C,qBAClDgb,OAAQhP,IAEb,CACC2jB,UAAWqnB,GAA0Bx+B,QAAS,CAC1CoE,KAAMo6B,GAAmBz/C,gBACzByU,GAAIoe,EAAYpe,GAChB7f,UAEJA,GAAUi+B,EAAY1Q,WAAWs9B,GAAmBh3C,qBAA8B,CAClF2vB,UAAWqnB,GAA4Bx+B,QAAS,CAC5CyC,OAAQmP,EAAY1Q,WAAWs9B,GAAmBh3C,qBAClDgb,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBp0C,kBAJmC,MAM5E7B,OAAOF,GAAKA,OAEtBqrE,EAAwBc,GAACzsB,GAAD,CACrB/nC,QAASw+B,GAAgBx7B,EAAO5iB,GAAUE,OAAOiI,OAAOF,GAAKm2C,GAAgBn2C,EAAG9D,GAAexF,kBAAkBuP,IAAIjG,IAC1G,CACH1U,MAAO0U,EAAEmL,GACTwG,MAAOwkC,GAAiBn2C,MAGhCw5C,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQmP,EAAY1Q,WAAWs9B,GAAmBh3C,qBAClDgb,OAAQhP,IAEb,CACC2jB,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmBh3C,oBACzBgM,GAAIoe,EAAYpe,GAChB7f,UAEL,CACCwjC,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBp0C,qBAIhDzW,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBh3C,uBAA4B,KAEvFgtE,GAAC5sB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB/+C,gBAAkB,GAC5FmmD,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAe,CAACvjC,EAAQ,KAAO,CACtCwjC,UAAWqnB,GAA+Bx+B,QAAS,CAC/CyC,OAAQmP,EAAY1Q,WAAWs9B,GAAmB72C,aAClD6a,OAAQhP,IAEb,CACC2jB,UAAWqnB,GAA0Bx+B,QAAS,CAC1CoE,KAAMo6B,GAAmB/+C,eACzB+T,GAAIoe,EAAYpe,GAChB7f,UAEJA,GAAUi+B,EAAY1Q,WAAWs9B,GAAmB72C,aAAsB,CAC1EwvB,UAAWqnB,GAA4Bx+B,QAAS,CAC5CyC,OAAQmP,EAAY1Q,WAAWs9B,GAAmB72C,aAClD6a,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBtzC,iBAJ2B,UAQ7EopE,EAeyG,KAfpFE,GAACzsB,GAAD,CACnB/nC,QAAS5sB,OAAOib,KAAKmwC,IAAuB3xB,KAAK,CAACC,EAAG7Z,IAAM6Z,EAAE2nD,cAAcxhE,IAAI3E,IAAIjG,IACxE,CACH1U,MAAO6qD,GAAsBn2C,GAC7B2R,MAAO3R,KAGfw5C,MAAOplC,GACPmpC,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBj3C,gBACzBiM,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBj3C,iBAAmB,KAChG+sE,EAAqBE,GAACzsB,GAAD,CAClB/nC,QAASw+B,GAAgBx7B,EAAO5iB,GAAUE,OAAOgO,IAAIjG,IAC1C,CACH1U,MAAO0U,EAAEmL,GACTwG,MAAOwkC,GAAiBn2C,MAGhCw5C,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GAA+Bx+B,QAAS,CAC/CyC,OAAQmP,EAAY1Q,WAAWs9B,GAAmB72C,aAClD6a,OAAQhP,IAEb,CACC2jB,UAAWqnB,GAA0Bx+B,QAAS,CAC1CoE,KAAMo6B,GAAmB72C,YACzB6L,GAAIoe,EAAYpe,GAChB7f,UAEL,CACCwjC,UAAWqnB,GAA4Bx+B,QAAS,CAC5CyC,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBtzC,oBAKhDvX,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB72C,aAAe,KAAU,MACzF,KAClB6sE,GAACV,GAAD,CAA0B95D,MAAOyC,IACjC+3D,GAACT,GAAD,UACIS,GAACR,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAAwB,CAC9Ch7B,OAAQg7B,GAAWx7B,EAAOw7B,IAC1B96B,gBAAiB,GAEjBD,eAAgB,CACZvC,WAAY,IAAK5U,GAAehB,mBAGzCs2C,KAAM,qBAAsB5nC,MAAOyC,GAAqBsmC,YAAatmC,2bCqB7EiiC,aAzOf,cAAmCkC,YAC/BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc59C,WACjDgxB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDk2B,EAAel2B,GAAgBx7B,EAAOw7B,GAAc39C,YAAYyN,IAAIgV,IAC7D,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAG5BqxD,EAAmBn2B,GAAgBx7B,EAAOw7B,GAAcv9C,gBAAgBqN,IAAIgV,IACrE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAG5BsxD,EAAchjD,GAAeA,EAAY1Q,YAAc0Q,EAAY1Q,WAAWs9B,GAAmBj3C,kBAAoBi3C,GAA+BluB,OACpJukD,EAAmBr2B,GAAQ5sB,EAAa4sB,GAAmBvjD,kBAC3D65E,EAAet2B,GAAQ5sB,EAAa4sB,GAAmB3iD,cACvDk5E,EAAiBv2B,GAAQ5sB,EAAa4sB,GAAmB13C,oBACzDkuE,EAAex2B,GAAgBx7B,EAAOw7B,GAAcn9C,YAAYiN,IAAIgV,IAC7D,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAG5B2xD,EAAkBz2B,GAAgBx7B,EAAOw7B,GAAc/8C,eAAe6M,IAAIgV,IACnE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAIhC,OACI4xD,GAACrtB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAesjD,GAACptB,GAAD,UACZotB,GAACvtB,GAAD,CACI9F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBxmD,QAAU,GACpF4tD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBxmD,OACzBwb,GAAIoe,EAAYpe,GAChB7f,aAGZuhF,GAACntB,GAAD,CACI/nC,QAAS5sB,OAAOib,KAAKmwC,IAAgC3xB,KAAK,CAACC,EAAG7Z,IAAM6Z,EAAE2nD,cAAcxhE,IAAI3E,IAAIjG,IACjF,CACH1U,MAAO6qD,GAA+Bn2C,GACtC2R,MAAO3R,KAGfw5C,MAAOplC,GACPmpC,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBj3C,gBACzBiM,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBj3C,iBAAmB,KAChGqtE,EAAeM,GAACntB,GAAD,CACZlG,MAAOplC,GACPuD,QAAS00D,EACT9uB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBv4C,cAClDuc,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv4C,aACzBuN,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBzxC,eAG5CpZ,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBv4C,cAAgB,KAAU,KACvG2uE,EACGM,GAACnB,GAAD,UACImB,GAAClB,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAAqB,KAChDoD,KAAM,qBACL5nC,MAAOyC,GACPsmC,YAAatmC,MAErB,KACJy4D,GAACttB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBtmD,YAAc,GACxF0tD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBtmD,WACzBsb,GAAIoe,EAAYpe,GAChB7f,aAGZuhF,GAACttB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBvjD,kBAAoB,GAC9F2qD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBvjD,iBACzBuY,GAAIoe,EAAYpe,GAChB7f,aAGXkhF,EAAoBK,GAACntB,GAAD,CACjBlG,MAAOplC,GACPuD,QAAS20D,EACT/uB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBp3C,kBAClDob,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBp3C,iBACzBoM,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBvxC,kBAG5CtZ,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBp3C,kBAAoB,KAAU,KAC3GytE,EACGK,GAACnB,GAAD,UACImB,GAAClB,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAAyB,KACpDoD,KAAM,qBACL5nC,MAAOyC,GACPsmC,YAAatmC,MAErB,KACJy4D,GAACttB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB3iD,cAAgB,GAC1F+pD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB3iD,aACzB2X,GAAIoe,EAAYpe,GAChB7f,aAGXmhF,EAAgBI,GAACntB,GAAD,CACblG,MAAOplC,GACPuD,QAASg1D,EACTpvB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmB93C,cAClD8b,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB93C,aACzB8M,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBzwC,eAG5Cpa,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB93C,cAAgB,KAAU,KACvGouE,EACGI,GAACnB,GAAD,UACImB,GAAClB,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAAqB,KAChDoD,KAAM,qBACL5nC,MAAOyC,GACPsmC,YAAatmC,MAErB,KAGJy4D,GAACttB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB13C,oBAAsB,GAChG8+C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB13C,mBACzB0M,GAAIoe,EAAYpe,GAChB7f,aAIXohF,EAAkBG,GAACntB,GAAD,CACflG,MAAOplC,GACPuD,QAASi1D,EACTrvB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBz3C,iBAClDyb,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBz3C,gBACzByM,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBpwC,kBAG5Cza,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBz3C,iBAAmB,KAAU,KAC1GguE,EACGG,GAACnB,GAAD,UACImB,GAAClB,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAA6B,KACxDoD,KAAM,qBACL5nC,MAAOyC,GACPsmC,YAAatmC,MAErB,MACU,icCtNf04D,GAAA,UAoCJz2B,UA9Cf,cAAuBkC,YACnBgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,GAEjBpuB,SAEI,IAAIwgF,EAAetgF,KAAKC,MAAMqgF,aAC1BxjD,EAAc98B,KAAKC,MAAMuuB,KAC7B,IAAKsO,EACD,OAAAyjD,GAEWvgF,KAAKC,MAAM82B,SAA1B,IACIsnD,EAAQr+E,KAAKC,MAAMo+E,OAUnBnwD,MAAEA,GAAUluB,KAAKC,MAErB,OAAOogF,GAACtB,GAAD,CAAYrwB,QAAQ,EAAM4vB,WAAa1xD,IAC1C,IAAI9P,EAAQ4sC,GAAgB5sB,EAAawjD,IAAiB,GAC1D,GAAIxjE,GAASA,EAAMwR,KACf,OAAO1B,GAAQ9P,EAAMwR,KAAK/a,GAAKA,IAAMqZ,EAAKlO,KAE9C2/D,MAAOA,EACPjyB,QAAUx/B,IACF5sB,KAAKC,MAAM6tB,YACX9tB,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQf,EAAK/tB,MACb6uB,OAAQoP,EAAYpe,KAGxB1e,KAAKC,MAAM6sB,YACX9sB,KAAKC,MAAMmiC,eAAesnB,GAAiB,CACvChrC,GAAIkO,EAAK/tB,+bC+IlB+qD,aAxLf,cAA6BkC,YACzBhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc19C,YACjD8wB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAKhD1+B,GAJW0+B,GAAgB5sB,EAAa4sB,GAAmBllD,SAC7Cs4B,GAAgCA,EAAY1Q,WAAWs9B,GAAmB34C,eAC1E24C,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOu/C,eAElDrB,GAAoBx7B,IAC5BsyD,EAAex1D,GAAS8R,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBj4C,kBAAoB,GAE9HgvE,EAAkBz1D,GAAS8R,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBr4C,qBAAuB,GACpI+9B,EAAgB,KAChBoxC,IACApxC,EAAgBpiB,GAAmBhC,EAAO,CAAEtM,GAAI8hE,EAAcvzD,UAAWkH,GAAQnd,KAAMxC,GAASuB,kBAE5Fq5B,EAAgBA,EAAc2b,gBAGlC01B,IACyBzzD,GAAmBhC,EAAO,CAAEtM,GAAI+hE,EAAiBxzD,UAAWkH,GAAQnd,KAAMxC,GAASuB,gBACxD,IAAIg1C,eAEzCrB,GAAgBx7B,EAAO5iB,GAAUuB,QAAQ2M,IAAI1a,IAAC,CAAOomB,MAAOwkC,GAAiB5qD,GAAID,MAAOC,EAAE4f,MAA7G,IACIgiE,EAAmBh3B,GAAgB5sB,EAAa4sB,GAAmBr4C,qBACnEsvE,EAAgBj3B,GAAgB5sB,EAAa4sB,GAAmBj4C,kBAChEmvE,EAAkB,GAClBF,GAAoBC,IACpBC,EAAkB3yD,GAAmBjD,EAAO,CAAC01D,EAAkBC,KAGnE,IAAIE,EAAmBn3B,GAAgB5sB,EAAa4sB,GAAmBp4C,sBACnEwvE,EAAuB,GAI3B,OAHID,IACAC,ExJiWL,SAA0B91D,EAAOtM,GACpC,OAAOsO,GAAmBhC,EAAO,CAAEtM,KAAIuO,UAAWkH,GAAQnd,KAAMxC,GAASuB,ewJlW1CgrE,CAAiB/1D,EAAO61D,GAAkB91B,gBAGjEi2B,GAACjuB,GAAD,CAASrE,OAAQA,QAAjB,EACIsyB,GAAChC,GAAD,CAA0B95D,MAAOyC,ybCflCiiC,gBA/Bf,cAAiCkC,YAC7BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc39C,YAGjD2/B,EAAMge,GAFQA,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEbA,GAAmBv3C,uBAE1D,OACI8uE,GAACluB,GAAD,CAASrE,OAAQA,QAAjB,EAYIuyB,GAAA,eACKv1C,EAAMptC,OAAOib,KAAKmyB,EAAIe,YAAYjzB,IAAI,CAACjG,EAAG2tE,IAC/BD,GAAA,gBAAiB1tE,KAAK2tE,IAAO3tE,IACpC,UC3BV,MAAM4tE,WAA8Br1B,YAC/CgB,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,iBAE9BhtD,SACI,qbACIshF,CAAA,eACKphF,KAAKC,MAAMilB,MACXllB,KAAKC,MAAMF,4bC0Eb6pD,aAnEf,cAAsCkC,YAClChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcj+C,aACjDqxB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACpD,IAAIphC,EAAQohC,GAAgBx7B,EAAO5iB,GAAUE,OAAOgO,IAAI1a,IAAC,CAAOomB,MAAOwkC,GAAiB5qD,GAAID,MAAOC,EAAE4f,MACjGg2B,EAASgV,GAAgBx7B,EAAO5iB,GAAUE,OAAOiI,OAAOF,GAAKm2C,GAAgBn2C,EAAG9D,GAAejL,UAAUgV,IAAI1a,IAAC,CAAOomB,MAAOwkC,GAAiB5qD,GAAID,MAAOC,EAAE4f,MAE9J,IAAI2iE,EAAQvkD,EAAewkD,GAACruB,GAAD,CACvBlG,MAAOplC,EACPuD,QAAS5C,EACTwoC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GAErB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQ+7B,GAAgB5sB,EAAartB,GAAegB,aACpDid,OAAQhP,IAGZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM7f,GAAegB,YACrBiO,GAAIoe,EAAYpe,GAChB7f,MAAOA,IAGXmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBtzC,kBAG5CvX,MAAO6qD,GAAgB5sB,EAAartB,GAAegB,eAAoB,KACvE8wE,EAAazkD,EAAewkD,GAACruB,GAAD,CAC5BlG,MAAOplC,EACPuD,QAASwpB,EACToc,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GAErB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQ+7B,GAAgB5sB,EAAartB,GAAeiB,aACpDgd,OAAQhP,IAGZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM7f,GAAeiB,YACrBgO,GAAIoe,EAAYpe,GAChB7f,MAAOA,IAGXmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBrzC,kBAG5CxX,MAAO6qD,GAAgB5sB,EAAartB,GAAeiB,eAAoB,KAC3E,OACI4wE,GAACvuB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAewkD,GAACtuB,GAAD,UACXquB,EACAE,GACa,0bC3CnB33B,aA9Bf,cAAqCkC,YACjChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcv9C,gBAErD,OACIq1E,GAACzuB,GAAD,CAASrE,OAAQA,QAAjB,EACI8yB,GAACxC,GAAD,CAA0B95D,MAAOyC,KACjC65D,GAACvC,GAAD,UACIuC,GAACtC,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAA8B,CACpDh7B,OAAQg7B,GAAWx7B,EAAOw7B,IAC1B96B,gBAAiB,GAEjBD,eAAgB,CACZvC,WAAY,IACLs9B,GAAmBtxC,wBAKlC00C,KAAM,qBACN5nC,MAAOyC,GACPsmC,YAAatmC,2bCatBiiC,aA/Bf,cAAwCkC,YACpChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAct9C,oBACjD0wB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACpD,OACI+3B,GAAC1uB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe2kD,GAACzuB,GAAD,UACZyuB,GAACxuB,GAAD,CACI/nC,QAAS5sB,OAAOib,KAAKmwC,IAAqB3xB,KAAK,CAACC,EAAG7Z,IAAM6Z,EAAE2nD,cAAcxhE,IAAI3E,IAAIjG,IACtE,CACH1U,MAAO6qD,GAAoBn2C,GAC3B2R,MAAO3R,KAGfw5C,MAAOplC,GACPmpC,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBp3C,iBACzBoM,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBp3C,kBAAoB,MAEpF,0bC8EnBs3C,aAtGf,cAAoCkC,YAChChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcr9C,WACjDywB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDg4B,EAAah4B,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOgO,IAAI1a,IACtD,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAIbmK,EAAgB6gC,GAAgBx7B,EAAO,CAACw7B,GAAci4B,QAASj4B,GAAc98C,WAAW4M,IAAI1a,IACrF,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAGbg2B,EAASgV,GAAgBx7B,EAAOw7B,GAAcl+C,OAC7CiI,OAAOF,GAAKm2C,GAAgBn2C,EAAG9D,GAAejL,UAC9CgV,IAAI1a,IACM,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAGrB,OACIkjE,GAAC7uB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe8kD,GAAC5uB,GAAD,UACZ4uB,GAAC3uB,GAAD,CACI/nC,QAASw2D,EACT30B,MAAOplC,EACPmpC,SAAWjyD,IAEP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBv5C,gBAClDud,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv5C,eACzBuO,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBpxC,uBAG5CzZ,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBv5C,gBAAkB,KAChGyxE,GAAC3uB,GAAD,CACI/nC,QAASwpB,EACTqY,MAAOplC,EACPmpC,SAAWjyD,IAEP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmB/4C,gBAClD+c,OAAQhP,IAGZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/4C,eACzB+N,GAAIoe,EAAYpe,GAChB7f,UAGJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBrxC,uBAG5CxZ,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB/4C,gBAAkB,KAChGixE,GAAC3uB,GAAD,CACI/nC,QAASrC,EACTkkC,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBl5C,mBAClDkd,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBl5C,kBACzBkO,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmB3wC,0BAG5Cla,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBl5C,mBAAqB,MACrF,0bC1EnBo5C,aA5Bf,cAAiCkC,YAC7BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcn9C,YAErD,OACIs1E,GAAC9uB,GAAD,CAASrE,OAAQA,QAAjB,EACImzB,GAAC7C,GAAD,CAA0B95D,MAAOyC,KACjCk6D,GAAC5C,GAAD,UACI4C,GAAC3C,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDh7B,OAAQg7B,GAAWx7B,EAAOw7B,IAC1B96B,gBAAiB,GAEjBD,eAAgB,CACZvC,WAAY,IAAKs9B,GAAmBxwC,oBAI5C4zC,KAAM,qBACN5nC,MAAOyC,GACPsmC,YAAatmC,2bC4CtBiiC,aAtDf,cAAmCkC,YAC/BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcp9C,UACjD0e,EAAQ0+B,GAAoBx7B,GAC5B4O,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEpD,GAAI5sB,GAAe4sB,GAAgB5sB,EAAa4sB,GAAmBp5C,eAAgB,CAC/E,IAAI8+B,EAAgBpiB,GAAmBhC,EAAO,CAC1CtM,GAAIgrC,GAAgB5sB,EAAa4sB,GAAmBp5C,eACpD2c,UAAWkH,GACXnd,KAAMxC,GAASuB,eAChByD,IAAI1a,IACI,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAGNgrC,GAAgB5sB,EAAartB,GAAenD,UAE3D,OACIw1E,GAAC/uB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAeglD,GAAC9uB,GAAD,UACZ8uB,GAAC7uB,GAAD,CACI/nC,QAASkkB,EACT+hB,kBAAmBxpC,EACnBolC,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB,IAAIqjE,EAAWr4B,GAAgB5sB,EAAartB,GAAenD,WAAa+f,KACxE01D,EAAWz1D,GAAey1D,EAAU,CAAErjE,GAAI7f,IAC1CmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAM7f,GAAenD,SACrBzN,MAAOkjF,IAEX/hF,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IACLs9B,GAAmB9wC,qBACnBke,GAAgBviB,GAAW9T,OAAQ,CAClCs1B,SAAU,uCAK1Bl3B,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBp5C,eAAiB,MACjF,0bC0hBnBs5C,aA/kBf,cAAoCkC,YAChChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAchhD,WACjDo0B,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChD7Y,EAAgB6Y,GAAgB5sB,EAAa4sB,GAAmBzoD,eAChE+pB,EAAQ0+B,GAAoBx7B,GAC5BmoB,EAAUvZ,EAAchI,GAAa5G,EAAO,CAC5CxP,GAAIoe,EAAYpe,GAChBgK,MAAO,CAAC,CACJ1R,KAAMxC,GAAS9L,UACfukB,UAAWC,IACZ,CACClW,KAAMxC,GAASmB,iBACfsX,UAAWC,OAEd,GACL,IAAI80D,EAAkB,GAClBC,EAAkB,GACPv4B,GAAgB5sB,EAAartB,GAAeC,gBAC3D,IAAIwyE,EAAgB,GAChBt7D,EAAYyvB,EAAQ78B,IAAIjG,GAAKm2C,GAAgBn2C,EAAG9D,GAAe0D,eAAeM,OAAOF,GAAKA,GAC9F,GAAIoT,GAAwBkqB,IAAkBlqB,GAAwBkqB,GAAejqB,WAAaA,GAAkC,IAArBA,EAAU3J,OAAc,CACnI,IAAIoI,YAAEA,GAAgBsB,GAAwBkqB,GAAejqB,UAAUA,EAAU,IACjF,GAAIvB,EAAa,CACb,IAAIiY,EAAcosB,GAAgBrT,EAAQ,GAAI5mC,GAAe2C,aAe7D,GAdA8vE,EAAgB5jF,OAAOib,KAAK8L,GAAa5R,OAAO3U,IAA4D,IAAvDumB,EAAYvmB,GAAGyjB,UAAU5O,QAAQrI,GAAUE,QAC3FgO,IAAIjG,GACG+pB,GAAeA,EAAY/pB,GACpB,CACH2R,SAAUwkC,GAAgB15B,GAAQhF,EAAOsS,EAAY/pB,IAAK9D,GAAewB,SAAWsC,KAAKA,KACzF1U,MAAO0U,GAGR,CACH2R,MAAO3R,EACP1U,MAAO0U,IAIf+pB,EAAa,CAEb,IAAI/H,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GACtE6lB,EAAKwe,OACLiuC,EAAkBhiF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,SAE/DqH,EAAKod,OACLsvC,EAAkBjiF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,WAK/E,OACIk0D,GAACrvB,GAAD,CAASrE,OAAQA,QAAjB,EACI0zB,GAACvvB,GAAD,CACI9F,MAAOplC,EACP9oB,MAAO6qD,GAAgB5sB,EAAartB,GAAewB,QACnD6/C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAAsB,CAAEhrC,GAAIoe,EAAYpe,GAAI7f,aAE9EujF,GAACnvB,GAAD,CACIlG,MAAOplC,EACPuD,QAAS5sB,OAAOib,KAAKqM,IAAgBpM,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAO+mB,GAAe9mB,MACjFgyD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBzoD,cACzByd,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOgyC,IACV7wC,KAAKqiF,8BAA8B,CAChCxxC,gBACAqxC,gBACAplD,cACAuZ,YAEHr2C,KAAKsiF,eAAe,CACjBzxC,gBACA7lB,QACAk3D,gBACAplD,cACAuZ,YAEHr2C,KAAKuiF,0BAA0B,CAC5B1xC,gBACAqxC,gBACAplD,cACAuZ,UACArrB,WAMhBm3D,cAAc7kD,EAAa/H,EAAMrH,EAAO/uB,EAAM,QAC1C,IACIitB,EAAa,GACbo2D,EAAiB1tD,GAAa5G,EAAO,CACrCxP,GAHQ4e,EAAY/H,EAAKp2B,IAIzBupB,MAAO,CAAC,CACJ1R,KAAMxC,GAASuB,aACfkX,UAAWkH,OAMnB,OAHIquD,IACAp2D,EAAao2D,EAAez3B,gBAEzB3+B,EAEXk2D,eAAep3D,GACX,IAAI2lB,cACAA,EADAqxC,cAEAA,EAFAl3D,MAGAA,EAHA8R,YAIAA,EAJAuZ,QAKAA,GACAnrB,GACAgD,MAAEA,GAAUluB,KAAKC,MACjBs1B,EAAOm0B,GAAgB5sB,EAAartB,GAAeG,uBAAyB,GAChF,GAAIihC,IAAkBjrB,GAAeC,aACjC,MAAO,GAGX,IAAIyX,EAAcosB,GAAgBrT,EAAUA,EAAQ,GAAK,KAAM5mC,GAAe2C,aAC9E,IAAI6vE,EAAkB,GAGlB5nC,EAAiBvlB,GAAa5G,EAAO,CACrCxP,GAAIoe,EAAYpe,GAChBgK,MAAO,CAAC,CACJ1R,KAAMxC,GAAS9L,UACfukB,UAAWC,OAEhB,IACCqI,EAAOm0B,GAAgB5sB,EAAartB,GAAeG,uBAAyB,CAC5E+iC,KAAMtkB,YAAYgsB,EAAgBqP,GAAmBr4C,uBAEhD0iC,MACa/zC,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,QAE/DqH,EAAKod,OACLsvC,EAAkBjiF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,SAG/DqH,EAAKrP,GAAwBC,gBACFnmB,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,iBAG5E,IAAIqpB,EAAchiB,GAAQA,EAAKm0B,GAAmB7mD,aAAe0yB,EAAKm0B,GAAmB7mD,aAAe,GACpG4/E,EAAWltD,GAAQA,EAAKm0B,GAAmB15C,mBAAqBulB,EAAKm0B,GAAmB15C,mBAAqB,GAC7G0yE,EAAa,GACjB,GAAInrC,EAAa,CACb,IAAI/I,EAAkBxe,GAAQhF,EAAOusB,GACrC,GAAI/I,EAAiB,CACjB,IAAIm0C,EAAoBj5B,GAAgBlb,EAAiB/+B,GAAe5M,cAAgB,GACxF4/E,EAAUA,EAAQ33B,aAAa63B,GAC/BD,EAAaC,EAAkBj4B,mBAAmB+3B,IAI1D,IAAIG,EAAW,IAAKrtD,GACpB,IAAIstD,EAAoBn5B,GAAgBx7B,EAAOw7B,GAAc7mD,aAAakoD,eAC1E,MAAO,CAECq3B,GAACnvB,GAAD,CACIlG,MAAOplC,EACPuD,QAASg3D,EACTpxB,SAAWjyD,IACP02B,EAAKod,KAAO9zC,EACZmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB95C,qBACzB8O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASjwC,OAExByvC,GAACnvB,GAAD,CACIlG,MAAOplC,GACPuD,QAAS+2D,EACTnxB,SAAWjyD,IACP02B,EAAKie,aAAe30C,EACpBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB95C,qBACzB8O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASpvC,eACpB1W,EAAeslD,GAACnvB,GAAD,CACXlG,MAAOplC,GACPuD,QAAS23D,EAET/xB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB,IAAIiP,EAAS4H,EAAKm0B,GAAmB7mD,cAAgB,GACrD0yB,EAAKm0B,GAAmB7mD,aAAehE,EACvCmB,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,SACAD,OAAQhP,EACRqY,SAAU2yB,GAAmBhyC,yBAAyBV,OAG1DhX,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB95C,qBACzB8O,KACA7f,MAAO02B,IAEXv1B,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBhyC,6BAG5C7Y,MAAO02B,EAAKm0B,GAAmB7mD,cAAgB,OAtBvCi6B,EAAYpe,WAsBqC,KAC7D0jE,GAACpD,GAAD,CACiD95D,MAAOyC,MAA5CmV,EAAYpe,yBACxB+jE,GAAWA,EAAQxlE,OAASwlE,EAAQjpE,IAAK05B,GAC9BkvC,GAAA,OAA8Bx2B,UAAU,wBAAwByB,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KAC1G,IAAIs2B,EAAaC,EAAkBj4B,mBAAmB,IAAI+3B,GAAShvE,OAAOF,GAAKA,IAAM2/B,IAErF3d,EAAKm0B,GAAmB15C,mBAAqB,IAAIyyE,GAAShvE,OAAOF,GAAKA,IAAM2/B,GAC5E3d,EAAKm0B,GAAmBz5C,sBAAwByyE,EAEhD1iF,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB95C,qBACzB8O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,iBATa2d,IAArB,IAWDA,IACL,KACLkvC,GAACpD,GAAD,CACmD95D,MAAOyC,MAA9CmV,EAAYpe,2BACxBgkE,GAAcA,EAAWzlE,OAASylE,EAAWlpE,IAAK05B,GACvCkvC,GAAA,OAAiCx2B,UAAU,wBAAwByB,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KAE7G,IAAIs2B,EAAaC,EAAkBj4B,mBAAmB,IAAI+3B,EAASvvC,GAAOpnB,UAE1EyJ,EAAKm0B,GAAmB15C,mBAAqB,IAAIyyE,EAASvvC,GAAOpnB,SACjEyJ,EAAKm0B,GAAmBz5C,sBAAwByyE,EAEhD1iF,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB95C,qBACzB8O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,oBAVgB2d,IAAxB,IAYDA,IACL,MAIbmvC,8BAA8Bn3D,GAC1B,IAAI2lB,cACAA,EADAqxC,cAEAA,EAFAplD,YAGAA,EAHAuZ,QAIAA,GACAnrB,GACAgD,MAAEA,GAAUluB,KAAKC,MACjBs1B,EAAOm0B,GAAgB5sB,EAAartB,GAAeE,8BAAgC,GAGvF,IAAI2tB,EAAcosB,GAAgBrT,EAAUA,EAAQ,GAAK,KAAM5mC,GAAe2C,aAC9E,IAAI6vE,EAAkB,GAClBD,EAAkB,GAClBc,EAA2B,IAE3BvtD,EAAOm0B,GAAgB5sB,EAAartB,GAAeE,8BAAgC,IAC9EokC,OACLiuC,EAAkBhiF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,SAE/DqH,EAAKod,OACLsvC,EAAkBjiF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,SAG/DqH,EAAKrP,GAAwBC,iBAC7B28D,EAA2B9iF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,kBAG5E,IAAI00D,EAAW,IAAKrtD,GACpB,MAAO,CACHsb,GAAiBjrB,GAAejW,4BAC5ByyE,GAACnvB,GAAD,CACIlG,MAAOplC,EACPuD,QAASg3D,EACTpxB,SAAWjyD,IACP02B,EAAKod,KAAO9zC,EACZmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASjwC,OACpB,KACJiwC,EAASjwC,MAAQ9B,GAAiBjrB,GAAejW,4BAC7CyyE,GAACtvB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAO+jF,EAASvwC,UAChBye,SAAWjyD,IACP02B,EAAK8c,UAAYxzC,EACjBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,OAGnB,KACJqtD,EAASjwC,OAASpd,EAAK8c,WAAaxB,GAAiBjrB,GAAejW,4BAChEyyE,GAACnvB,GAAD,CACIlG,MAAOplC,GACPuD,QAAS+2D,EACTnxB,SAAWjyD,IACP02B,EAAKie,aAAe30C,EACpBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASpvC,eACpB,KACJ3C,GAAiBjrB,GAAejW,4BAC5ByyE,GAACnvB,GAAD,CACIlG,MAAOplC,EACPuD,QAASg3D,EACTpxB,SAAWjyD,IACP02B,EAAKwe,KAAOl1C,EACZmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAAS7uC,OACpB,KACJ6uC,EAAS7uC,MAAQlD,GAAiBjrB,GAAejW,4BAC7CyyE,GAACtvB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAO+jF,EAAStwC,UAChBwe,SAAWjyD,IACP02B,EAAK+c,UAAYzzC,EACjBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,OAGnB,KACJqtD,EAAS7uC,OAASxe,EAAK+c,WAAazB,GAAiBjrB,GAAejW,4BAChEyyE,GAACnvB,GAAD,CACIlG,MAAOplC,GACPuD,QAAS82D,EACTlxB,SAAWjyD,IACP02B,EAAKwtD,aAAelkF,EACpBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASG,eACpB,KACJH,EAASjwC,MAAQiwC,EAAS7uC,MAAQlD,GAAiBjrB,GAAejW,4BAC9DyyE,GAACnvB,GAAD,CACIlG,MAAOplC,GACPuD,QAASg3D,EACTpxB,SAAWjyD,IACP02B,EAAKrP,GAAwBC,eAAiBtnB,EAC9CmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAAS18D,GAAwBC,iBAC5C,KACJy8D,EAAS7uC,MAAQlD,GAAiBjrB,GAAejW,4BAC7CyyE,GAACtvB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAO+jF,EAASI,oBAChBlyB,SAAWjyD,IACP02B,EAAKytD,oBAAsBnkF,EAC3BmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,OAGnB,KACJqtD,EAASjwC,MAAQiwC,EAAS7uC,MAAQlD,GAAiBjrB,GAAejW,4BAC9DyyE,GAACnvB,GAAD,CACIlG,MAAOplC,GACPuD,QAAS43D,EACThyB,SAAWjyD,IACP02B,EAAK0tD,sBAAwBpkF,EAC7BmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASK,wBACpB,KACJL,EAASK,uBAAyBL,EAASjwC,MAAQiwC,EAAS7uC,MAAQlD,GAAiBjrB,GAAejW,4BAA+ByyE,GAACnvB,GAAD,CAC/H/tC,MAAOyC,GACPolC,MAAOplC,GACPuD,QAAS,IAAI5sB,OAAOib,KAAKmN,KAAuBlN,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAOC,KAC7ED,MAAO+jF,EAASM,uBAChBpyB,SAAWjyD,IACP02B,EAAK2tD,uBAAyBrkF,EAC9BmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB/5C,4BACzB+O,GAAIoe,EAAYpe,GAChB7f,aAEC,MACf4U,OAAQF,GAAMA,GAAGiG,IAAI,CAACjG,EAAG6+B,IAEhB7+B,GAIfgvE,0BAA0Br3D,GACtB,IAAI2lB,cACAA,EADAqxC,cAEAA,EAFAplD,YAGAA,EAHAuZ,QAIAA,GACAnrB,EACJ,GAAI2lB,IAAkBjrB,GAAelW,eACjC,OAAO,KAEX,IAAIwe,MAAEA,GAAUluB,KAAKC,MACjBs1B,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GAE1E,IAAI4tB,EAAcosB,GAAgBrT,EAAUA,EAAQ,GAAK,KAAM5mC,GAAe2C,aAC9E,IAAI6vE,EAAkB,GAClBD,EAAkB,GAElBmB,EAAez5B,GAAmBh6C,eAElC6lB,EAAKwe,OACLiuC,EAAkBhiF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,SAE/DqH,EAAKod,OACLsvC,EAAkBjiF,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,SAG/DqH,EAAKrP,GAAwBC,gBACFnmB,KAAKmiF,cAAc7kD,EAAa/H,EAAMrH,EAAO,iBAG5E,IAAI00D,EAAW,IAAKrtD,GACpB,MAAO,CACH6sD,GAACnvB,GAAD,CACIlG,MAAOplC,EACPuD,QAASg3D,EACTpxB,SAAWjyD,IACP,IAAI02B,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GAC1E6lB,EAAKod,KAAO9zC,EACZmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM6zD,EACNzkE,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASjwC,OAExBiwC,EAASjwC,KACLyvC,GAACtvB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAO+jF,EAASvwC,UAChBye,SAAWjyD,IACP,IAAI02B,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GAC1E6lB,EAAK8c,UAAYxzC,EACjBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM6zD,EACNzkE,GAAIoe,EAAYpe,GAChB7f,MAAO02B,OAGnB,KACJqtD,EAASjwC,OAASpd,EAAK8c,UACnB+vC,GAACnvB,GAAD,CACIlG,MAAOplC,GACPuD,QAAS+2D,EACTnxB,SAAWjyD,IACP,IAAI02B,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GAC1E6lB,EAAKrP,GAAwBO,cAAgB5nB,EAC7CmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM6zD,EACNzkE,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASpvC,eACpB,KAEA4uC,GAACnvB,GAAD,CACIlG,MAAOplC,EACPuD,QAASg3D,EACTpxB,SAAWjyD,IACP,IAAI02B,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GAC1E6lB,EAAKwe,KAAOl1C,EACZmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM6zD,EACNzkE,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAAS7uC,OAExB6uC,EAAS7uC,KACLquC,GAACtvB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAO+jF,EAAStwC,UAChBwe,SAAWjyD,IACP,IAAI02B,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GAC1E6lB,EAAK+c,UAAYzzC,EACjBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM6zD,EACNzkE,GAAIoe,EAAYpe,GAChB7f,MAAO02B,OAGnB,KACJqtD,EAAS7uC,OAASxe,EAAK+c,UACnB8vC,GAACnvB,GAAD,CACIlG,MAAOplC,GACPuD,QAAS82D,EACTlxB,SAAWjyD,IACP,IAAI02B,EAAOm0B,GAAgB5sB,EAAartB,GAAeC,iBAAmB,GAC1E6lB,EAAKwtD,aAAelkF,EACpBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAM6zD,EACNzkE,GAAIoe,EAAYpe,GAChB7f,MAAO02B,KAGf12B,MAAO+jF,EAASG,eACpB,MA6CFtvE,OAAOF,GAAKA,ubCndPq2C,aAzHf,cAAoCkC,YAChCs3B,YAAYtmD,GAGR,IAFA,IAAI5O,MAAEA,GAAUluB,KAAKC,MACjByoB,EAAQ0L,GAAas1B,GAAoBx7B,GAAQ4O,EAAYpe,GAAIwe,IAC5Dt/B,EAAI,EAAGA,EAAI8qB,EAAMzL,OAAQrf,IAAK,CACnC,IACIk1B,EAAa42B,GADThhC,EAAM9qB,GAC0BuZ,GAAiBE,aACzD,GAAIyb,GAAcA,EAAWrR,GAAuBK,SAChD,OAAO,EAIf,OAAO,EAEXuhE,eAAevmD,GAGX,IAFA,IAAI5O,MAAEA,GAAUluB,KAAKC,MACjByoB,EAAQ0L,GAAas1B,GAAoBx7B,GAAQ4O,EAAYpe,GAAIwe,IAC5Dt/B,EAAI,EAAGA,EAAI8qB,EAAMzL,OAAQrf,IAAK,CACnC,IACIk1B,EAAa42B,GADThhC,EAAM9qB,GAC0BuZ,GAAiBE,aACzD,GAAIyb,GAAcA,EAAWrR,GAAuBO,YAChD,OAAO,EAIf,OAAO,EAEXshE,eAAexmD,GAGX,IAFA,IAAI5O,MAAEA,GAAUluB,KAAKC,MACjByoB,EAAQ0L,GAAas1B,GAAoBx7B,GAAQ4O,EAAYpe,GAAIwe,IAC5Dt/B,EAAI,EAAGA,EAAI8qB,EAAMzL,OAAQrf,IAAK,CACnC,IACIk1B,EAAa42B,GADThhC,EAAM9qB,GAC0BuZ,GAAiBE,aACzD,GAAIyb,GAAcA,EAAWrR,GAAuBM,YAChD,OAAO,EAIf,OAAO,EAEXjiB,SACI,IlKytC2BkrB,EAAOE,GkKztC9BgD,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc38C,WACjD+vB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChD65B,EAAc,GACdj7D,EAAQ,GA6BZ,OA5BIwU,GAAe4xB,IlKotCQ1jC,EkKntCU0+B,GAAoBx7B,GlKmtCvBhD,EkKntC+B,CAAExM,GAAIoe,EAAYpe,IAA/E6kE,ElKotCD/uD,GAAcxJ,EAAO,IAAME,GAAW,GAAK+B,UAAWC,KkKntCpCltB,KAAKojF,YAAYtmD,GAE9BxU,EAAQohC,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOgO,IAAIgV,IAC7C,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAI3BxuB,KAAKqjF,eAAevmD,GACzBxU,EAAQohC,GAAgBx7B,EAAOw7B,GAAcjhD,UAAU+Q,IAAIgV,IAChD,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAI3BxuB,KAAKsjF,eAAexmD,KACzBxU,EAAQohC,GAAgBx7B,EAAOw7B,GAAc98C,UAAU4M,IAAIgV,IAChD,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,QAMpCg1D,GAACzwB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,GAAsC,IAAvBymD,EAAYtmE,OAAgBumE,GAACvwB,GAAD,CACxClG,MAAOplC,GACPuD,QAAS5sB,OAAOib,KAAKmwC,IAAuB3xB,KAAK,CAACC,EAAG7Z,IAAM6Z,EAAE2nD,cAAcxhE,IAAI3E,IAAIjG,IACxE,CACH1U,MAAO6qD,GAAsBn2C,GAC7B2R,MAAO3R,KAGfu9C,SAAWjyD,IACEi+B,EAAYpe,GAErB1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBx2C,iBACzBwL,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBx2C,kBAAoB,KAAU,KAE3G4pB,EAAe0mD,GAACvwB,GAAD,CACZlG,MAAOplC,GACPuD,QAAS5C,EACTwoC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBt4C,cAClDsc,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBt4C,aACzBsN,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBzxC,eAG5CpZ,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBt4C,cAAgB,KAAU,0bCtCzGw4C,gBA7Ef,cAAoCkC,YAChChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcl9C,gBACjDswB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChD+5B,EAAc3mD,GAAeA,EAAY1Q,YAAc0Q,EAAY1Q,WAAWs9B,GAAmB73C,mBAEjG6xE,EAAiBh6B,GAAgBx7B,EAAOw7B,GAAcj9C,cAAc+M,IAAIgV,IACjE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAIhC,OACIm1D,GAAC5wB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe6mD,GAAC3wB,GAAD,UACZ2wB,GAAC7wB,GAAD,CACI/F,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB73C,mBAAqB,GAC/Fi/C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB73C,kBACzB6M,GAAIoe,EAAYpe,GAChB7f,aAGI8kF,GAAC1wB,GAAhBwwB,EAAe,CACZv4D,QAASw4D,EACT32B,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmB53C,oBAClD4b,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB53C,mBACzB4M,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBvwC,qBAG5Cta,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB53C,oBAAsB,IAAW,CACvGoZ,QAAS5sB,OAAOib,KAAKmwC,IAAkB3xB,KAAK,CAACC,EAAG7Z,IAAM6Z,EAAE2nD,cAAcxhE,IAAI3E,IAAIjG,IACnE,CACH1U,MAAO6qD,GAAiBn2C,GACxB2R,MAAO3R,KAGfw5C,MAAOplC,GACPmpC,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB93C,aACzB8M,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB93C,cAAgB,KACjG6xE,EACGE,GAAC1E,GAAD,UACI0E,GAACzE,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAAuB,KAClDoD,KAAM,qBACL5nC,MAAOyC,GACPsmC,YAAatmC,MACI,MACf,0bCtEnB,MAAMi8D,WAA4B93B,YAC7CgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,CAAErvB,MAAO,IAE1BiB,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MAErB,OACI4jF,GAAC7wB,GAAD,CAAazC,aAAa,QAA1B,EACIszB,GAAChxB,GAAD,CAAWzG,QAAS,KACZpsD,KAAKC,MAAM6jF,aACX9jF,KAAKC,MAAM6jF,WAAW9jF,KAAKkuB,MAAMrvB,OACjCmB,KAAKm/B,SAAS,CAAEtgC,MAAO,OAE5BA,MAAOmB,KAAKkuB,MAAMrvB,MAAOiyD,SAAWjyD,IACnCmB,KAAKm/B,SAAS,CAAEtgC,WACjBgyD,YAAY,EAAMF,YAAahpC,+bCoG1Bo8D,GAAA,gCAEJA,GAAA,2BAKRA,GAAA,UAKGn6B,aA/Gf,cAA2BkC,YACvBhsD,SACI,IAKIkkF,GALA91D,MAAEA,GAAUluB,KAAKC,MAEjB+qB,GADS0+B,GAAmBx7B,EAAOw7B,GAAcp9C,UACzCo9C,GAAoBx7B,IAC5B4O,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAOpD,GAJI5sB,GAAe4sB,GAAgB5sB,EAAa4sB,GAAmBp5C,iBAE/D0zE,GADAz3D,EAAYm9B,GAAgB5sB,EAAartB,GAAenD,WAC9B8f,WAAWpsB,KAAKC,MAAMV,UAAUitB,WAAWxsB,KAAKC,MAAMssB,YAEhFy3D,EAAe,CACf,GAAIA,EAAc/kE,WAAa+kE,EAAc/kE,UAAUC,UAAW,CAC9D,IAAIpC,MAAEA,GAAUknE,EAAc/kE,UAAUC,UACxC,GAAIpC,EAAO,CACP,IAAImnE,EAAev6B,GAAgBx7B,EAAOpR,GAAOrJ,OAAOF,GAAKm2C,GAAgBn2C,EAAG9D,GAAe8C,YAAcjH,GAAUqB,eAAgBypB,GAAwB7iB,IAE/J,IAAIgZ,EACJ,IAAIK,EAAOD,GADPJ,EAAYm9B,GAAgB5sB,EAAartB,GAAenD,WrKuPrE,CACH8f,WAAY,IqKvPuC,CAAE7sB,SAAUS,KAAKC,MAAMV,SAAUgtB,UAAWvsB,KAAKC,MAAMssB,YAC1F23D,EAAW,GACf,GAAIt3D,GAAQA,EAAK4B,KAAM,CACnB,IAAIA,EAAOwB,GAAQhF,EAAO4B,EAAK4B,MAC/B,OAAQk7B,GAAgBl7B,EAAM/e,GAAe8C,WACzC,KAAKjH,GAAUzI,YAEXqhF,GADYx6B,GAAgBl7B,EAAM/e,GAAe5M,cAAgB,IAChD2W,IAAK05B,GACX6wC,GAAA,OAAKn4B,4BAA6Bh/B,EAAK2qB,aAAe3qB,EAAK2qB,YAAYrE,GAAS,SAAW,aAAcma,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KACnJx/B,EAAK2qB,YAAc3qB,EAAK2qB,aAAe,GACvC3qB,EAAK2qB,YAAYrE,IAAUtmB,EAAK2qB,YAAYrE,GAC5ClzC,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB4Q,KAAM7f,GAAenD,SACrBzN,MAAO0tB,WANR,MAQD2mB,IAEV,MACJ,KAAK5nC,GAAUqB,cACX,IAAIw3E,EAAa3tD,GAAyBhI,GACtC41D,EAAiB1tD,GAAsBlI,GAC3C01D,EAAWC,EAAW3qE,IAAK05B,GAChB6wC,GAAA,OAAKn4B,4BAA6Bh/B,EAAKuf,WAAavf,EAAKuf,UAAU+G,EAAMkxC,IAAmB,SAAW,aAAc/2B,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KAC/Jx/B,EAAKuf,UAAYvf,EAAKuf,WAAa,GACnCvf,EAAKuf,UAAU+G,EAAMkxC,KAAoBx3D,EAAKuf,UAAU+G,EAAMkxC,IAC9DpkF,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB4Q,KAAM7f,GAAenD,SACrBzN,MAAO0tB,WANR,MAQD2mB,EAAMkxC,MA+C5B,OA1CoBL,GAAC/wB,GAAD,UAChB+wB,GAAC9wB,GAAD,CACI/nC,QAAS+4D,EAAazqE,IAAI1a,IAAC,CACvBomB,MAAOwkC,GAAiB5qD,GAAID,MAAOC,EAAE4f,MAEzCyyC,kBAAmBxpC,EACnBolC,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACjB6N,EAAYm9B,GAAgB5sB,EAAartB,GAAenD,WrKyMjF,CACH8f,WAAY,IqKzMY,IAAIQ,EAAOD,GAAiBJ,EAAW,CAAEhtB,SAAUS,KAAKC,MAAMV,SAAUgtB,UAAWvsB,KAAKC,MAAMssB,YAC1F83D,EAAUz3D,EAAK4B,KACnB5B,EAAK4B,KAAO3vB,EACRwlF,GACArkF,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQ02D,EACR32D,OAAQhP,IAGhB1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAM7f,GAAenD,SACrBzN,MAAO0tB,IAEXvsB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IACLs9B,GAAmB7wC,yBACnBie,GAAgBviB,GAAW9T,OAAQ,CAClClB,SAAUS,KAAKC,MAAMV,SACrBgtB,UAAWvsB,KAAKC,MAAMssB,UACtBwJ,SAAU,qCACVvH,KAAM5B,EAAK4B,WAK3B3vB,MAAOmlF,EAAgBA,EAAcx1D,KAAO,KAC/C01D,GAKT,OAAAI,GAEJ,OAAAC,GAIJ,OAAAC,8bCzGwBC,GAAA,UA2HjB76B,aAvIf,cAA2CkC,YACvChsD,SACI,IAIIiiF,GAJA7zD,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOluB,KAAKC,MAAM0c,UAAY+sC,GAAcp9C,UACxE0e,EAAQ0+B,GAAoBx7B,GAC5B4O,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEhDgF,GAAU5xB,GAAe4sB,GAAgB5sB,EAAa98B,KAAKC,MAAMykF,UAAYh7B,GAAmBp5C,iBAEhGyxE,EAAWr4B,GAAgB5sB,EAAa98B,KAAKC,MAAM0kF,UAAYl1E,GAAenD,WAElF,IAAIs4E,EAAM5kF,KAAKC,MAAM4kF,IAAM9lE,GACvB+lE,EAAoBC,GAqHxB,OApHIhD,GAAYA,EAAS31D,aACrB04D,EAAoBxmF,OAAOib,KAAKwoE,EAAS31D,YAAY5S,IAAIra,IACrD,IAAI6lF,EAAajD,EAAS31D,WAAWjtB,GACjC8lF,iCAA2C9lF,KAAO29B,EAAYpe,KAC9DwmE,EAAsB5mF,OAAOib,KAAKyrE,GAAcA,EAAWx4D,WAAaw4D,EAAWx4D,WAAa,IAAIhT,IAAI+T,IACxG,IACI43D,QADUF,gCACkB13D,MAChC,OACIk3D,GAACW,GAAD,CAEIlgE,MAAO8/D,EAAWx4D,YAAcw4D,EAAWx4D,WAAWe,IAAMy3D,EAAWx4D,WAAWe,GAAGvW,KAAOguE,EAAWx4D,WAAWe,GAAGvW,KAAOuW,EAC5Hq/B,KAAMlD,GAAWx7B,EAAOi3D,GACxBz2B,OAAQhF,GAAWx7B,EAAOi3D,GAC1Bv2B,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAainD,IAE5Br4B,KAAM,gBAPEv/B,QAQRk3D,GAACW,GAAD,CACIt2B,WAAW,EACX5pC,MAAOyC,EACPmlC,KAAM,cACNV,QAAS,KACL,IAAI1tC,EAAKoe,EAAYpe,GACjB6N,EAAYm9B,GAAgB5sB,EAAa98B,KAAKC,MAAM0kF,UAAYl1E,GAAenD,WtKiP5G,CACH8f,WAAY,WsK/OiCG,EAAUH,WAAWjtB,GACpBqtB,WAAWe,GAE7BvtB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAMtvB,KAAKC,MAAM0kF,UAAYl1E,GAAenD,SAC5CzN,MAAO0tB,OAGnBk4D,GAACY,GAAD,CAAc72D,KAAMsO,EAAYpe,GAAInf,SAAUJ,EAAKotB,UAAWgB,OAItE+3D,EAAgBhnF,OAAOib,KAAKqrE,GAAKnxE,OAAOF,IAAMyxE,IAAeA,EAAWx4D,aAAew4D,EAAWx4D,WAAWjZ,IAAIgyE,UAAU/rE,IAAIgsE,GAE3Hf,GAACW,GAAD,CACIt2B,WAAW,EAEX5pC,MAAOsgE,EACP14B,KAAM,sBACNV,QAAS,KACL,IAAI1tC,EAAKoe,EAAYpe,GACrB,IAAIqjE,EAAWr4B,GAAgB5sB,EAAa98B,KAAKC,MAAM0kF,UAAYl1E,GAAenD,WtKwNvG,CACH8f,WAAY,IsKxNY21D,EAAWz1D,GAAey1D,EAAU,CAChCrjE,GAAIvf,EACJotB,UAAWlF,KACXoF,cAAe,CACXzV,KAAMwuE,KACHZ,EAAIY,MAGfxlF,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAMtvB,KAAKC,MAAM0kF,UAAYl1E,GAAenD,SAC5CzN,MAAOkjF,SAjBPyD,mBAsBpB,OACIf,GAACW,GAAD,CAEIx4B,KAAMlD,GAAWx7B,EAAO+2D,GACxBv2B,OAAQhF,GAAWx7B,EAAO+2D,GAC1B//D,MAAOwkC,GAAiB15B,GAAQhF,EAAO7rB,IACvCyvD,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAa+mD,KALvBA,EAOLR,GAACW,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,EAAwBmlC,KAAM,cAAeV,QAAS,KACxF,IAAI1tC,EAAKoe,EAAYpe,GAErB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQxuB,EACRuuB,OAAQhP,OAGhB+lE,GAACW,GAAD,CAAclgE,MAAOyC,EACjBmlC,KAAM,iBACNF,KAAMlD,GAAWx7B,KAAU+2D,yBAC3Bv2B,OAAQhF,GAAWx7B,KAAU+2D,yBAC7Br2B,OAAQ,KACJ5uD,KAAKC,MAAMi+B,gBAAgB+mD,gCALnC,EAOKC,GAELT,GAACW,GAAD,CAAclgE,MAAOyC,EACjBmlC,KAAM,oBACNF,KAAMlD,GAAWx7B,KAAU+2D,qBAC3Bv2B,OAAQhF,GAAWx7B,KAAU+2D,qBAC7Br2B,OAAQ,KACJ5uD,KAAKC,MAAMi+B,gBAAgB+mD,4BALnC,EAOKK,MAKjBR,EACIL,GAAA,OAAKp3B,MAAO,CAAE4sB,SAAU,kBAAxB,EACIwK,GAACgB,GAAD,UACIhB,GAACiB,GAAD,UACIjB,GAACkB,GAAD,UACKb,OASrBA,sbCvBGl7B,aAjHf,cAAmCkC,YAC/BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcp9C,UACjDwwB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDg4B,EAAah4B,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOgO,IAAI1a,IACtD,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAIbmK,EAAgB6gC,GAAgBx7B,EAAO,CAACw7B,GAAc98C,SAAU88C,GAAc78C,SAAS2M,IAAI1a,IACpF,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAGbg2B,EAASgV,GAAgBx7B,EAAOw7B,GAAcl+C,OAC7CiI,OAAOF,GAAKm2C,GAAgBn2C,EAAG9D,GAAejL,UAC9CgV,IAAI1a,IACM,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAGrB,OACIknE,GAAC7yB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe8oD,GAAC5yB,GAAD,UACZ4yB,GAAC3yB,GAAD,CACI/nC,QAAS5sB,OAAOib,KAAKjX,IAASkX,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAOC,KAC3DiuD,MAAOplC,EACPmpC,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBn5C,qBACzBmO,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBn5C,sBAAwB,KACtGq1E,GAAC3yB,GAAD,CACI/nC,QAASw2D,EACT30B,MAAOplC,EACPmpC,SAAWjyD,IAEP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBp5C,eAClDod,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBp5C,cACzBoO,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmB9wC,sBAG5C/Z,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBp5C,eAAiB,KAC/Fs1E,GAAC3yB,GAAD,CACI/nC,QAASwpB,EACTqY,MAAOplC,EACPmpC,SAAWjyD,IAEP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBt5C,eAClDsd,OAAQhP,IAGZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBt5C,cACzBsO,GAAIoe,EAAYpe,GAChB7f,UAGJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmB/wC,sBAG5C9Z,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBt5C,eAAiB,KAC/Fw1E,GAAC3yB,GAAD,CACI/nC,QAASrC,EACTkkC,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBr5C,kBAClDqd,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBr5C,iBACzBqO,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmB1wC,yBAG5Cna,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBr5C,kBAAoB,MACpF,0bCpBnBu5C,aAlFf,cAAoCkC,YAChChsD,SACI,IAIIysB,GAJA2B,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcr9C,WACjD2e,EAAQ0+B,GAAoBx7B,GAC5B4O,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEpD,GAAI5sB,GAAe4sB,GAAgB5sB,EAAa4sB,GAAmBv5C,gBAAiB,CAChF,IAAIi/B,EAAgBpiB,GAAmBhC,EAAO,CAC1CtM,GAAIgrC,GAAgB5sB,EAAa4sB,GAAmBv5C,gBACpD8c,UAAWkH,GACXnd,KAAMxC,GAASuB,eAChByD,IAAI1a,IACI,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAGjB6N,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,WAE5D,IAAIw5E,EAAsB,GA4B1B,OA3BIt5D,GAAaA,EAAUH,aACvBy5D,EAAsBvnF,OAAOib,KAAKgT,EAAUH,YAAY5S,IAAIra,IACxD,IAAI8lF,0BAAoC9lF,KAAO29B,EAAYpe,KAC3D,OACIonE,GAACV,GAAD,CAEIx4B,KAAMlD,GAAWx7B,EAAO+2D,GACxBv2B,OAAQhF,GAAWx7B,EAAO+2D,GAC1B//D,MAAOwkC,GAAiB15B,GAAQhF,EAAO7rB,IACvCyvD,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAa+mD,KALvBA,KAUjBY,EACIC,GAAA,OAAKz4B,MAAO,CAAE4sB,SAAU,kBAAxB,EACI6L,GAACL,GAAD,UACIK,GAACJ,GAAD,UACII,GAACH,GAAD,UACKE,OAQrBC,GAAC/yB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAegpD,GAAC9yB,GAAD,UACZ8yB,GAAC7yB,GAAD,CACI/nC,QAASkkB,EACT+hB,kBAAmBxpC,EACnBolC,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACjB6N,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,YxK6N7E,CACH+f,WAAY,IwK7NQG,EAAYD,GAAeC,EAAW,CAAE7N,GAAI7f,IAC5CmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAM7f,GAAepD,UACrBxN,MAAO0tB,IAEXvsB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IACLs9B,GAAmBpxC,sBACnBwe,GAAgBviB,GAAW9T,OAAQ,CAClCs1B,SAAU,yCAK1Bl3B,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBv5C,gBAAkB,MAClF,icCoCV41E,GAAA,gCAEJA,GAAA,2BAKRA,GAAA,UAKGn8B,aA/Gf,cAA4BkC,YACxBhsD,SACI,IAKIkkF,GALA91D,MAAEA,GAAUluB,KAAKC,MAEjB+qB,GADS0+B,GAAmBx7B,EAAOw7B,GAAcr9C,WACzCq9C,GAAoBx7B,IAC5B4O,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAOpD,GAJI5sB,GAAe4sB,GAAgB5sB,EAAa4sB,GAAmBv5C,kBAE/D6zE,GADAz3D,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,YAC9B+f,WAAWpsB,KAAKC,MAAMV,UAAUitB,WAAWxsB,KAAKC,MAAMssB,YAEhFy3D,EAAe,CACf,GAAIA,EAAc/kE,WAAa+kE,EAAc/kE,UAAUC,UAAW,CAC9D,IAAIpC,MAAEA,GAAUknE,EAAc/kE,UAAUC,UACxC,GAAIpC,EAAO,CACP,IAAImnE,EAAev6B,GAAgBx7B,EAAOpR,GAAOrJ,OAAOF,GAAKm2C,GAAgBn2C,EAAG9D,GAAe8C,YAAcjH,GAAUqB,eAAgBypB,GAAwB7iB,IAE/J,IAAIgZ,EACJ,IAAIK,EAAOD,GADPJ,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,YzKuPrE,CACH+f,WAAY,IyKvPuC,CAAE7sB,SAAUS,KAAKC,MAAMV,SAAUgtB,UAAWvsB,KAAKC,MAAMssB,YAC1F23D,EAAW,GACf,GAAIt3D,GAAQA,EAAK4B,KAAM,CACnB,IAAIA,EAAOwB,GAAQhF,EAAO4B,EAAK4B,MAC/B,OAAQk7B,GAAgBl7B,EAAM/e,GAAe8C,WACzC,KAAKjH,GAAUzI,YAEXqhF,GADYx6B,GAAgBl7B,EAAM/e,GAAe5M,cAAgB,IAChD2W,IAAK05B,GACX6yC,GAAA,OAAKn6B,4BAA6Bh/B,EAAK2qB,aAAe3qB,EAAK2qB,YAAYrE,GAAS,SAAW,aAAcma,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KACnJx/B,EAAK2qB,YAAc3qB,EAAK2qB,aAAe,GACvC3qB,EAAK2qB,YAAYrE,IAAUtmB,EAAK2qB,YAAYrE,GAC5ClzC,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB4Q,KAAM7f,GAAepD,UACrBxN,MAAO0tB,WANR,MAQD2mB,IAEV,MACJ,KAAK5nC,GAAUqB,cACX,IAAIw3E,EAAa3tD,GAAyBhI,GACtC41D,EAAiB1tD,GAAsBlI,GAC3C01D,EAAWC,EAAW3qE,IAAK05B,GAChB6yC,GAAA,OAAKn6B,4BAA6Bh/B,EAAKuf,WAAavf,EAAKuf,UAAU+G,EAAMkxC,IAAmB,SAAW,aAAc/2B,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KAC/Jx/B,EAAKuf,UAAYvf,EAAKuf,WAAa,GACnCvf,EAAKuf,UAAU+G,EAAMkxC,KAAoBx3D,EAAKuf,UAAU+G,EAAMkxC,IAC9DpkF,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB4Q,KAAM7f,GAAepD,UACrBxN,MAAO0tB,WANR,MAQD2mB,EAAMkxC,MA+C5B,OA1CoB2B,GAAC/yB,GAAD,UAChB+yB,GAAC9yB,GAAD,CACI/nC,QAAS+4D,EAAazqE,IAAI1a,IAAC,CACvBomB,MAAOwkC,GAAiB5qD,GAAID,MAAOC,EAAE4f,MAEzCyyC,kBAAmBxpC,EACnBolC,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACjB6N,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,YzKyMjF,CACH+f,WAAY,IyKzMY,IAAIQ,EAAOD,GAAiBJ,EAAW,CAAEhtB,SAAUS,KAAKC,MAAMV,SAAUgtB,UAAWvsB,KAAKC,MAAMssB,YAC1F83D,EAAUz3D,EAAK4B,KACnB5B,EAAK4B,KAAO3vB,EACRwlF,GACArkF,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQ02D,EACR32D,OAAQhP,IAGhB1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAM7f,GAAepD,UACrBxN,MAAO0tB,IAEXvsB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IACLs9B,GAAmBnxC,0BACnBue,GAAgBviB,GAAW9T,OAAQ,CAClClB,SAAUS,KAAKC,MAAMV,SACrBgtB,UAAWvsB,KAAKC,MAAMssB,UACtBwJ,SAAU,uCACVvH,KAAM5B,EAAK4B,WAK3B3vB,MAAOmlF,EAAgBA,EAAcx1D,KAAO,KAC/C01D,GAKT,OAAA8B,GAEJ,OAAAC,GAIJ,OAAAC,8bC1G0BC,GAAA,UA2HnBv8B,aAtIf,cAA4CkC,YACxChsD,SACI,IAIIysB,GAJA2B,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcr9C,WACjD2e,EAAQ0+B,GAAoBx7B,GAC5B4O,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEhDgF,GAAU5xB,GAAe4sB,GAAgB5sB,EAAa4sB,GAAmBv5C,kBAEzEoc,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,YAE5D,IAAIw5E,EAAsBO,GAqH1B,OApHI75D,GAAaA,EAAUH,aACvBy5D,EAAsBvnF,OAAOib,KAAKgT,EAAUH,YAAY5S,IAAIra,IACxD,IAAI6lF,EAAaz4D,EAAUH,WAAWjtB,GAClC8lF,kCAA4C9lF,KAAO29B,EAAYpe,KAC/DwmE,EAAsB5mF,OAAOib,KAAKyrE,GAAcA,EAAWx4D,WAAaw4D,EAAWx4D,WAAa,IAAIhT,IAAI+T,IACxG,IACI43D,QADUF,gCACkB13D,MAChC,OACI44D,GAACf,GAAD,CAEIlgE,MAAO8/D,EAAWx4D,YAAcw4D,EAAWx4D,WAAWe,IAAMy3D,EAAWx4D,WAAWe,GAAGvW,KAAOguE,EAAWx4D,WAAWe,GAAGvW,KAAOuW,EAC5Hq/B,KAAMlD,GAAWx7B,EAAOi3D,GACxBz2B,OAAQhF,GAAWx7B,EAAOi3D,GAC1Bv2B,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAainD,IAE5Br4B,KAAM,gBAPEv/B,QAQR44D,GAACf,GAAD,CACIt2B,WAAW,EACX5pC,MAAOyC,EACPmlC,KAAM,cACNV,QAAS,KACL,IAAI1tC,EAAKoe,EAAYpe,GACjB6N,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,Y1KkPrF,CACH+f,WAAY,W0KhPiCG,EAAUH,WAAWjtB,GACpBqtB,WAAWe,GAE7BvtB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAM7f,GAAepD,UACrBxN,MAAO0tB,OAGnB45D,GAACE,GAAD,CAAe73D,KAAMsO,EAAYpe,GAAInf,SAAUJ,EAAKotB,UAAWgB,OAIvE+3D,EAAgBhnF,OAAOib,KAAKgG,IAAc9L,OAAOF,IAAMyxE,IAAeA,EAAWx4D,aAAew4D,EAAWx4D,WAAWjZ,IAAIgyE,UAAU/rE,IAAI8sE,GAEpIH,GAACf,GAAD,CACIt2B,WAAW,EAEX5pC,MAAOohE,EACPx5B,KAAM,sBACNV,QAAS,KACL,IAAI1tC,EAAKoe,EAAYpe,GACrB,IAAI6N,EAAYm9B,GAAgB5sB,EAAartB,GAAepD,Y1KyNjF,CACH+f,WAAY,I0KzNYG,EAAYD,GAAeC,EAAW,CAClC7N,GAAIvf,EACJotB,UAAWlF,KACXoF,cAAe,CACXzV,KAAMsvE,KACH/mE,GAAa+mE,MAGxBtmF,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,KACA4Q,KAAM7f,GAAepD,UACrBxN,MAAO0tB,SAjBP+5D,mBAsBpB,OACIH,GAACf,GAAD,CAEIx4B,KAAMlD,GAAWx7B,EAAO+2D,GACxBv2B,OAAQhF,GAAWx7B,EAAO+2D,GAC1B//D,MAAOwkC,GAAiB15B,GAAQhF,EAAO7rB,IACvCyvD,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAa+mD,KALvBA,EAOLkB,GAACf,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,EAAyBmlC,KAAM,cAAeV,QAAS,KACzF,IAAI1tC,EAAKoe,EAAYpe,GAErB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQxuB,EACRuuB,OAAQhP,OAGhBynE,GAACf,GAAD,CAAclgE,MAAOyC,EACjBmlC,KAAM,iBACNF,KAAMlD,GAAWx7B,KAAU+2D,0BAC3Bv2B,OAAQhF,GAAWx7B,KAAU+2D,0BAC7Br2B,OAAQ,KACJ5uD,KAAKC,MAAMi+B,gBAAgB+mD,iCALnC,EAOKC,GAELiB,GAACf,GAAD,CAAclgE,MAAOyC,EACjBmlC,KAAM,oBACNF,KAAMlD,GAAWx7B,KAAU+2D,sBAC3Bv2B,OAAQhF,GAAWx7B,KAAU+2D,sBAC7Br2B,OAAQ,KACJ5uD,KAAKC,MAAMi+B,gBAAgB+mD,6BALnC,EAOKK,MAKjBO,EACIM,GAAA,OAAK94B,MAAO,CAAE4sB,SAAU,kBAAxB,EACIkM,GAACV,GAAD,UACIU,GAACT,GAAD,UACIS,GAACR,GAAD,UACKE,OASrBA,sbCrFGj8B,aAtDf,cAAwCkC,YACpChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAch9C,mBACjDowB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAGhD68B,EAAiB78B,GAAgBx7B,EAAOw7B,GAAc/8C,eAAe6M,IAAIgV,IAClE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAIhC,OACIg4D,GAACzzB,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe0pD,GAACxzB,GAAD,UACZwzB,GAACvzB,GAAD,CACI/nC,QAASq7D,EACTx5B,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBx3C,aAClDwb,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBx3C,YACzBwM,GAAIoe,EAAYpe,GAChB7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBpwC,kBAG5Cza,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBx3C,aAAe,MAC/E,KAClBs0E,GAACxH,GAAD,CAA0B95D,MAAOyC,KACjC6+D,GAACvH,GAAD,UACIuH,GAACtH,GAAD,CAAwB9yB,QAAS,KAC7BpsD,KAAKC,MAAMmiC,eAAesnB,GAAwB,KAGlDoD,KAAM,qBACN5nC,MAAOyC,GACPsmC,YAAatmC,2bC2CtBiiC,aArFf,cAAqCkC,YACjChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc19C,YACjD8wB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEhDjV,GADWiV,GAAgB5sB,EAAa4sB,GAAmBllD,SAC7Cs4B,EAAc,IAAKx6B,MAAaw6B,EAAY1Q,WAAWs9B,GAAmB34C,gBAAkB,IAAQ,MAOlHia,GANc0+B,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOgO,IAAIgV,IACvD,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAGpBk7B,GAAoBx7B,IAC5BsyD,EAAex1D,GAAS8R,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBj4C,kBAAoB,GAE9HgvE,EAAkBz1D,GAAS8R,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBr4C,qBAAuB,GACpI+9B,EAAgB,KAqBpB,OApBIoxC,IACApxC,EAAgBpiB,GAAmBhC,EAAO,CAAEtM,GAAI8hE,EAAcvzD,UAAWkH,GAAQnd,KAAMxC,GAASuB,kBAE5Fq5B,EAAgBA,EAAc51B,IAAIgV,IACvB,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,OAKpCiyD,GACyBzzD,GAAmBhC,EAAO,CAAEtM,GAAI+hE,EAAiBxzD,UAAWkH,GAAQnd,KAAMxC,GAASuB,eAC5DyD,IAAIgV,IACzC,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAKhCi4D,GAAC1zB,GAAD,CAASrE,OAAQA,QAAjB,EACI+3B,GAACzH,GAAD,CAA0B95D,MAAOyC,KAChCmV,EAAe2pD,GAAC3zB,GAAD,CACZ5tC,MAAOyC,GACPolC,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAWs9B,GAAmB14C,SACjD8/C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB14C,QACzB0N,GAAIoe,EAAYpe,GAChB7f,aAEC,KACb4nF,GAACzH,GAAD,CAA0B95D,MAAOyC,KAE7B8sB,EAAegyC,GAACzzB,GAAD,UAAe10D,OAAOib,KAAKk7B,GAAaj7B,IAAIra,GAC/CsnF,GAAC3zB,GAAD,CACJ/F,MAAOplC,GAAmBxoB,GAC1BN,MAAO41C,EAAYt1C,GACnB2xD,SAAWjyD,IACP41C,EAAYt1C,GAAON,EACnBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB34C,cACzB2N,GAAIoe,EAAYpe,GAChB7f,MAAO,IACA41C,sBATmBt1C,OAapB,KAE1BsnF,GAAA,UAAQzvE,KAAK,SAAS40C,UAAU,kBAAkBQ,QAAS,KACvDpsD,KAAKC,MAAMmiC,eAAesnB,GAAwB,CAC9Ch7B,OAAQg7B,GAAWx7B,EAAOw7B,IAC1B96B,gBAAiB,GAEjBD,eAAgB,CACZvC,WAAY,IAAK5U,GAAeG,yBAN5C,EASIgQ,wbCjCLiiC,aA/Cf,cAAoCkC,YAChChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,KAAYhF,GAAgBx7B,EAAOw7B,KAAoB,IAAIzsC,OAC3DypE,GAAsBh9B,GAAgBx7B,EAAO5iB,GAAUE,MAAO,CAAEszB,SAAS,KAAW,IAAItlB,IAAI1a,IACrF,CACHomB,MAAOwkC,GAAiB5qD,GACxBD,MAAOC,EAAE4f,MAGjB,OACIioE,GAAC5zB,GAAD,CAASrE,OAAQA,QAAjB,EACIi4B,GAAC3zB,GAAD,UACI2zB,GAAC1zB,GAAD,CACIlG,MAAOplC,GACPuD,QAASw7D,EACT51B,SAAWpyC,IACP,IAAI8P,EAAOk7B,GAAoBx7B,EAAOxP,GACtC1e,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLsD,OACAW,SAAUu6B,GAAiBx7B,QAkBvCrvB,MAAO,kcCvBZ+nF,GAAA,aAuBKA,GAAA,QAAMh7B,UAAU,6BAChBg7B,GAAA,QAAMh7B,UAAU,6BAChBg7B,GAAA,QAAMh7B,UAAU,0BAnDzB,MAAMwH,WAAqBtH,YACtCgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,CACTxP,GAAIgrC,MAGZoD,OACI,OAAO9sD,KAAKC,MAAM6sD,MAAQ,cAE9B+5B,YACI,IAAIr7D,EAAS,IACTq7D,UAAEA,GAAc7mF,KAAKC,MAUzB,OATI4mF,GACAA,EAAUrtE,IAAI,CAACstE,EAAI10C,KACX00C,EAAG16B,SAAW06B,EAAGh6B,MACjBthC,EAAOyM,KACH2uD,GAAA,KAAyD1hE,MAAO4hE,EAAG5hE,MAAO0mC,UAAU,YAAYQ,QAAS06B,EAAG16B,QAASiB,MAAO,CAAE05B,cAAe,oBAAzH/mF,KAAKkuB,MAAMxP,iBAAiB0zB,IAAhD,IAAuJw0C,GAAA,KAAGh7B,UAAWk7B,EAAGh6B,OAAxK,QAKTthC,EAEX1rB,SACI,IAAKE,KAAKC,MAAM+mF,QACZ,OAAAC,GAEJ,IAAIJ,EAAY7mF,KAAK6mF,YACrB,OACID,GAAA,OAAKh7B,UAAU,qBAAqByB,MAAO,CACvC4sB,SAAU,QACVpF,WAAY,YACZuF,IAAKp6E,KAAKC,MAAMm6E,KAAO,EACvB8M,KAAMlnF,KAAKC,MAAMinF,MAAQ,SAJ7B,EAMIN,GAAA,OAAKh7B,UAAU,OAAOyB,MAAO,CAAE05B,cAAe,cAA9C,EACIH,GAAA,SACI5vE,KAAK,WACL85C,SAAU,KACF9wD,KAAKC,MAAMknF,UACXnnF,KAAKC,MAAMknF,YAGnB71B,QAAStxD,KAAKC,MAAM2sD,KACpBS,MAAO,CAAE05B,cAAe,OACxBK,KAAK,IAAIx7B,UAAU,YACnBltC,MAAO1e,KAAKkuB,MAAMxP,OACtBkoE,GAAA,SAAOh7B,UAAU,mBAAmBy7B,WAAYrnF,KAAKkuB,MAAMxP,KAAM2uC,MAAO,CAAE05B,cAAe,aAAzF,EAAAO,GAAAC,GAAAC,IAKCX,kBAgBLD,GAAA,OAAKnyB,MAAM,6BAA6BntC,QAAQ,YAAhD,EACIs/D,GAAA,iBACIA,GAAA,UAAQloE,GAAG,qBAAX,EAEIkoE,GAAA,kBAAgBa,GAAG,gBAAgBj8D,OAAO,OAAOk8D,aAAa,OAC9Dd,GAAA,iBAAea,GAAG,OAAO1oF,KAAK,SAAS2xC,OAAO,+CAA+CllB,OAAO,QACpGo7D,GAAA,kBAAgBa,GAAG,MAAMC,aAAa,IAAIl8D,OAAO,WACjDo7D,GAAA,iBAAea,GAAG,SAAS1oF,KAAK,SAAS2xC,OAAO,gDAAgDllB,OAAO,WACvGo7D,GAAA,YAAUa,GAAG,SAAS/oB,GAAG,IAAIC,GAAG,IAAInzC,OAAO,WAC3Co7D,GAAA,eAAae,IAAI,SAASF,GAAG,MAAMj8D,OAAO,QAC1Co7D,GAAA,eAAae,IAAI,MAAMF,GAAG,gBAAgBj8D,OAAO,SAErDo7D,GAAA,UAAQloE,GAAG,YAAX,EACIkoE,GAAA,kBAAgBa,GAAG,gBAAgBj8D,OAAO,OAAOk8D,aAAa,OAC9Dd,GAAA,iBAAea,GAAG,OAAO1oF,KAAK,SAAS2xC,OAAO,+CAA+CllB,OAAO,QACpGo7D,GAAA,eAAae,IAAI,MAAMF,GAAG,gBAAgBj8D,OAAO,WAnBtE,MAAMo8D,WAAmB97B,YAC5BhsD,SACI,OACI8mF,GAAA,OAAKv5B,MAAO,CAAEsB,QAAS,cAAvB,EAAAk5B,sbCpEG,MAAMC,WAAYh8B,YAC7BiB,QACI,OAAO/sD,KAAKC,MAAM8sD,OAAS,UAE/BluD,QACI,OAAOmB,KAAKC,MAAMpB,OAAS,GAE/BqmB,QACI,OAAOllB,KAAKC,MAAMilB,OAAS,UAE/B6iE,UACI,OAAO/nF,KAAKC,MAAM8nF,QAAU,cAAgB,GAEhDjoF,SACI,IAAIutD,EAAQ,GAKZ,OAJIrtD,KAAKC,MAAM+nF,YACX36B,EAAM46B,aAAejoF,KAAKC,MAAM+nF,cAChC36B,EAAM66B,UAAY,UAGlBC,GAAA,OAAKv8B,iBAAkB5rD,KAAK+nF,kBAA5B,EACII,GAAA,OAAKv8B,UAAU,+BAAf,EACIu8B,GAAA,MAAIv8B,UAAU,kBAAd,EAA2B5rD,KAAKklB,UAEpCijE,GAAA,OAAKv8B,UAAU,WAAWyB,MAAO,IAAKA,SAAtC,EACKrtD,KAAKC,MAAMF,UAEhBooF,GAAA,OAAKv8B,UAAU,mBAAf,EACK5rD,KAAKC,MAAM4tD,2bCJjBjE,aApBf,cAAyCkC,YACrChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc39C,YAGjD2/B,EAAMge,GAFQA,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEbA,GAAmBv3C,uBAE1D,OACIi2E,GAACr1B,GAAD,CAASrE,OAAQA,QAAjB,EACI05B,GAAA,eACK18C,EAAMptC,OAAOib,KAAKmyB,EAAIe,YAAYjzB,IAAI,CAACjG,EAAG2tE,IAC/BkH,GAAA,gBAAiB70E,KAAK2tE,IAAO3tE,IACpC,2bCsCVq2C,4BAxCf,cAA8BkC,YAC1BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcj+C,aACjDqxB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACxCA,GAAgBx7B,EAAO5iB,GAAUE,OAAOgO,IAAI1a,IAAC,CAAOomB,MAAOwkC,GAAiB5qD,GAAID,MAAOC,EAAE4f,MACrG,IAAIsM,EAAQ0+B,GAAoBx7B,GAChC,IAAI9B,EAAa,GAuBjB,OAtBI0Q,IAEA1Q,GAAcY,GAAmBhC,EAAO,CACpCtM,GAFQgrC,GAAgB5sB,EAAartB,GAAegB,aAGpDwc,UAAWkH,GACXnd,KAAMxC,GAASuB,gBACb,IAAIyD,IAAI1a,GACFupF,GAACv1B,GAAD,CAEJ/F,MAAOrD,GAAiB5qD,GACxBD,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBr3C,kBAAoBq3C,GAAgB5sB,EAAa4sB,GAAmBr3C,kBAAkBvT,EAAE4f,IAAM,GACrJoyC,SAAWjyD,IACP,IAAIypF,EAAS5+B,GAAgB5sB,EAAa4sB,GAAmBr3C,mBAAqB,GAClFi2E,EAAOxpF,EAAE4f,IAAM7f,EACfmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBr3C,iBACzBqM,GAAIoe,EAAYpe,GAChB7f,MAAOypF,kBATExpF,EAAE4f,QAe3B2pE,GAACt1B,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAeurD,GAACr1B,GAAD,UACX5mC,GACa,0bCjDnB,MAAMm8D,WAAez8B,YAChCJ,MACI,OAAO1rD,KAAKC,MAAMyrD,KAAO,IAE7BvB,MACI,OAAOnqD,KAAKC,MAAMkqD,KAAO,MAE7BtrD,QACI,OAAOmB,KAAKC,MAAMpB,OAAS,GAE/BiB,SACI,OACI0oF,GAAA,OAAK58B,UAAU,uBAAf,EACI48B,GAAA,SAAOxxE,KAAK,QAAQ00C,IAAK1rD,KAAK0rD,MAAOoF,SAAWl7B,IACxC51B,KAAKC,MAAM6wD,WAAaz8C,MAAMuhB,EAAIjI,OAAO9uB,QACzCmB,KAAKC,MAAM6wD,SAAS23B,WAAW7yD,EAAIjI,OAAO9uB,SAE/CsrD,IAAKnqD,KAAKmqD,MAAOtrD,MAAOmB,KAAKnB,QAAS+sD,UAAU,aClBpD,MAAM88B,WAAmB58B,YACpC4C,SACI,OAAO1uD,KAAKC,MAAMyuD,OAAS,SAAW,GAE1C5uD,SACI,qbACI6oF,CAAA,OAAK/8B,UAAY,oBAAjB,EACK5rD,KAAKC,MAAMF,WCNb,MAAM6oF,WAAY98B,YAC7B4C,SACI,OAAO1uD,KAAKC,MAAMyuD,OAAS,SAAW,GAE1CxpC,QACI,OAAOllB,KAAKC,MAAMilB,OAASllB,KAAKC,MAAMF,UAAY,UAEtDD,SACI,qbACI+oF,CAAA,MAAIj9B,UAAU,oBAAd,EACK5rD,KAAKC,MAAMF,WCXb,MAAM+oF,WAAqBh9B,YAEtChsD,SACI,qbACIipF,CAAA,OAAKn9B,UAAY,wBAAjB,EACK5rD,KAAKC,MAAMF,4bCFb,MAAMipF,WAAwBl9B,YACzChsD,SACI,IAAIqsD,EAAKnsD,KACLipF,EAAW98B,EAAGlsD,MAAMgpF,UAAT,CAAuBv1E,GAAMA,GAAK,IAC7Cw1E,GAAQ/8B,EAAGlsD,MAAM8mB,MAAQ,IAAIvN,IAAI,CAACjG,EAAG2tE,IAC7BiI,GAAA,WAAYjI,SACd/0B,EAAGlsD,MAAMmpF,SAAW,IAAI5vE,IAAI,CAACvb,EAAGorF,IACtBF,GAAA,WAAYE,KAAQnI,SAAY+H,EAAS11E,EAAEtV,EAAEY,OAAQZ,EAAEY,MAAOqiF,MAGxE/0B,EAAGlsD,MAAMqpF,eAAiB,IAAI9vE,IAAI,CAAC+vE,EAAIF,IAC7BF,GAAA,WAAYE,KAAQnI,aAAgBqI,EAAGh2E,EAAG2tE,OAI1DsI,GAAWr9B,EAAGlsD,MAAMmpF,SAAW,IAAI5vE,IAAI,CAACjG,EAAG6+B,IACnC+2C,GAAA,eAAgB/2C,IAAU7+B,EAAE2R,SAGvCinC,EAAGlsD,MAAMqpF,eAAiB,IAAI9vE,IAAI,CAAC+vE,EAAIF,KACpCG,EAAQvxD,KAAKkxD,GAAA,WAAYE,oBAE7B,IAAI19D,EAAM,GAEV,OADAA,EAAI0hC,MAAQ,CAAE46B,UAAWjoF,KAAKC,MAAMgoF,WAAa,IAAKC,UAAW,QAE7D16B,EAAAx1B,EAAAy1B,cAAA,MAAS9hC,EACLw9D,GAAA,SAAOv9B,UAAU,6BAAjB,EACIu9B,GAAA,kBACIA,GAAA,eACKK,GAEJN,8bCiCoCO,GAAA,KAAG79B,UAAU,2BAGb69B,GAAA,KAAG79B,UAAU,kBAab69B,GAAA,KAAG79B,UAAU,2BA0GL69B,GAAA,KAAG79B,UAAU,mBAqBuC69B,GAAA,KAAG79B,UAAY,iBAiFzHhC,aAjRf,cAAsCkC,YAClCgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,CACT3uB,SAAU,IAGlBmqF,OACI,IAAIx7D,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc/8C,gBAAkB+8C,GAAmBx7B,EAAOw7B,GAAc39C,YAC3G+wB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAQpD,OAPIgF,GACUhF,GAAgB5sB,EAAa4sB,GAAmBv3C,uBAMvD,KAEXw3E,QAAQtf,GACJ,SAAUA,SAEduf,OAAOvf,GACH,SAAUA,WAEdxc,SAEI,IAAI3/B,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc/8C,gBAAkB+8C,GAAmBx7B,EAAOw7B,GAAc39C,YAC3G+wB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACpD,GAAIgF,GAAU5xB,EAAa,CACvB,IAAI4O,EAAMge,GAAgB5sB,EAAa4sB,GAAmBv3C,uBACtD03E,EAASn+C,GAAOA,EAAIpV,OAAOC,cAAiBkzD,GAAA,OAAK79B,UAAU,mBAAf,EAC5C69B,GAAA,UAAQzyE,KAAK,SAAS40C,UAAU,kBAAkBQ,QAAS,KACvD1gB,EAAIpV,OAAOG,KAAO,IAAIiV,EAAIpV,OAAOG,KAAM,IACvCz2B,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,YALpB,EAOI/jB,KACE,KACNmiE,EAAUhtD,EAAc98B,KAAK4pF,OAAO9sD,EAAYpe,IAAM,KACtDqrE,EAAQN,GAAA,OAAK79B,UAAU,kBAAf,EACR69B,GAAA,OAAK79B,UAAU,kBAAf,EACI69B,GAAA,UAAQr9B,QAAS,IAAMpsD,KAAKC,MAAMo+B,UAAUyrD,EAASniE,IACjD3Q,KAAK,SACLkO,MAAOyC,GACPikC,UAAU,iCAHd,EAAAo+B,IAIAP,GAAA,UAAQr9B,QAAS,IAAMpsD,KAAKC,MAAMo+B,UAAUyrD,EAASniE,IACjD3Q,KAAK,SAASkO,MAAOyC,GACrBikC,UAAU,iCAFd,EAAAq+B,IAGAR,GAAA,UAAQr9B,QAAS,KACR1gB,IACDA,EvL6QjB,CAEHpV,OAAQ,CAEJC,eAAe,EAEfyW,WAAY,GAEZvW,KAAM,IAEVgW,WAAY,KuLrRIzsC,KAAKC,MAAMo+B,UAAUyrD,EAASniE,IAC9B3nB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO6sC,KAGX10B,KAAK,SAASkO,MAAOyC,GACrBikC,UAAU,iCAZd,EAAAs+B,KAcJT,GAAA,OAAK79B,UAAU,kBAAf,EACKlC,GAAax7B,EAAO47D,EAASniE,IAA+B8hE,GAAA,UAAQr9B,QAAS,KACtEpsD,KAAKkuB,MAAM3uB,WACNmsC,IACDA,EvL6PrB,CAEHpV,OAAQ,CAEJC,eAAe,EAEfyW,WAAY,GAEZvW,KAAM,IAEVgW,WAAY,KuLrQQf,EAAIe,WAAWzsC,KAAKkuB,MAAM3uB,UvLyQ3C,SuLxQiBS,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO6sC,IAGX1rC,KAAKm/B,SAAS,CAAE5/B,SAAU,OAG9ByX,KAAK,SAAS40C,UAAU,iCAfiC,EAeLjkC,IAAwB,OAIxF,OAAQ8hE,GAACU,GAAD,UACHJ,EACAF,GAGT,OAAO,KAEX/pF,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjB68B,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEhDmE,GADO7tD,KAAK0pF,OACH1pF,KAAK6tD,UACdi8B,EAAUhtD,EAAc98B,KAAK4pF,OAAO9sD,EAAYpe,IAAM,KACtDgtB,EAAMge,GAAgB5sB,EAAa4sB,GAAmBv3C,uBACtDia,EAAa0Q,EAAc4sB,GAAgBx7B,EAAOw7B,GAAcjhD,UAAU+Q,IAAIgV,IACvE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAE3B,GACL,OACIi7D,GAAC12B,GAAD,CAASrE,OAAQhF,GAAmBx7B,EAAOw7B,GAAc/8C,qBAAzD,EACM+8C,GAAax7B,EAAO47D,EAASniE,IAmBb,KAnBkC8hE,GAACz2B,GAAD,UAC/CtnB,EAAM+9C,GAAC32B,GAAD,CACH/F,MAAOplC,GACP9oB,MAAO6sC,EAAIpV,OAAOC,cAClBu6B,SAAWjyD,IACP6sC,EAAIpV,OAAOC,cAAgB13B,EAC3BmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,EAAKpV,OAAQ,IAAKoV,EAAIpV,cAElC,KAEZmzD,GAAC52B,GAAD,CACIh0D,MAAOmB,KAAKkuB,MAAM3uB,SAClBwtD,MAAOplC,GACPmpC,SAAW18C,IACPpU,KAAKm/B,SAAS,CAAE5/B,SAAU6U,QAGrCs3B,GAAOge,GAAax7B,EAAO47D,EAASniE,IACjC8hE,GAACW,GAAD,CAAiBhB,QAAS9qF,OAAOib,KAAKmyB,EAAIe,YAAYjzB,IAAIra,IAC/C,CAAE+lB,MAAO/lB,EAAKN,MAAOM,KAE5B8pF,SAAU,CAAC11E,EAAGpU,EAAKizC,IACPq3C,GAAC52B,GAAD,CACJ9F,MAAOplC,GACP9oB,MAAO0U,EACPu9C,SAAWjyD,IACH6sC,EAAIpV,OAAOC,cACPmV,EAAIpV,QAAUoV,EAAIpV,OAAOG,MAAQiV,EAAIpV,OAAOG,KAAK2b,KACjD1G,EAAIpV,OAAOG,KAAK2b,GAAOjzC,GAAON,GAI9B6sC,EAAIpV,QAAUoV,EAAIpV,OAAO0W,aACzBtB,EAAIpV,OAAO0W,WAAW7tC,GAAON,GAGrCmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,EAAKpV,OAAQ,IAAKoV,EAAIpV,OAAQ0W,WAAY,IAAKtB,EAAIpV,OAAO0W,YAAcvW,KAAM,IAAIiV,EAAIpV,OAAOG,aAKzH6yD,cAAe59C,EAAIpV,OAAOC,cAAgB,CAAC,CAAChjB,EAAG2tE,IACpCuI,GAAA,OAAK79B,UAAU,mBAAf,EAA4B69B,GAAA,UAAQr9B,QAAS,KAC5C1gB,EAAIpV,OAAOC,gBACPmV,EAAIpV,QAAUoV,EAAIpV,OAAOG,MAAQiV,EAAIpV,OAAOG,KAAKyqD,KACjDx1C,EAAIpV,OAAOG,KAAO,IAAIiV,EAAIpV,OAAOG,KAAKhjB,OAAO,CAACukB,EAAGp6B,IAAMA,IAAMsjF,KAIjElhF,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,OAIrBkgB,UAAU,kCAdsB,EAAAy+B,MAelC,GACLtjE,KAAO2kB,EAAIpV,OAAOC,cAAgBmV,EAAIpV,OAAOG,KAAKjd,IAAI8wE,IAC3C,IACAA,KAEL,CAAC,IAAK5+C,EAAIpV,OAAO0W,eAE3B,KACHtB,GAAOge,GAAax7B,EAAO47D,EAASniE,IAA8B8hE,GAACW,GAAD,CAAiBhB,QAAS,CAAC,CAAElkE,MAAOyC,GAAa9oB,MAAO,SACvHyqF,cAAe,CAAE/1E,GACNk2E,GAAA,OAAK79B,UAAU,mBAAf,EACH69B,GAAA,OAAKxmD,MAAM,kBAAX,EACIwmD,GAAA,UAAQvkE,MAAOyC,GAAiBykC,QAAS,KACrC1gB,EAAIpV,OAAS,IAAKoV,EAAIpV,OAAQK,SAAUpjB,EAAEpV,MAC1C6B,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,MAGjBkgB,mBAAoBr4C,EAAEpV,OAASutC,EAAIpV,OAAOK,SAAW,cAAgB,sBARxE,EAAA4zD,IASAd,GAAA,UAAQr9B,QAAS,YACN1gB,EAAIe,WAAWl5B,EAAEpV,MACxButC,EAAIe,WAAa,IAAKf,EAAIe,YAC1BzsC,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,MAGjBkgB,UAAU,wBATb,UAaZ7kC,KAAMzoB,OAAOib,KAAKmyB,EAAIe,YAAYjzB,IAAIra,IAC3B,CACHhB,KAAMgB,OAGb,KACJusC,GAAOge,GAAax7B,EAAO47D,EAASniE,IAAqB8hE,GAACz2B,GAAD,UACtDy2B,GAAC32B,GAAD,CACI/F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAO6sC,EAAIe,WAAW+9C,UACtB15B,SAAWjyD,IACP6sC,EAAIe,WAAW+9C,UAAY3rF,EAC3BmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,EAAKe,WAAY,IAAKf,EAAIe,kBAGlDg9C,GAACx2B,GAAD,CACIlG,MAAOplC,GACPzC,MAAOyC,GACPuD,QAASkB,EACTvtB,MAAO6sC,EAAIe,WAAWltC,SACtBuxD,SAAWjyD,IACP6sC,EAAIe,WAAWltC,SAAWV,EAC1B,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBv4C,cAClDuc,OAAQhP,IAEZ1e,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv4C,aACzBuN,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBh0C,2BAGxC1V,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,EAAKe,WAAY,IAAKf,EAAIe,kBAGlDg9C,GAAC52B,GAAD,CACI9F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAO6sC,EAAIe,WAAWwvB,MACtBnL,SAAWjyD,IACP6sC,EAAIe,WAAWwvB,MAAQp9D,EACvBmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv3C,sBACzBuM,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAK6sC,EAAKe,WAAY,IAAKf,EAAIe,mBAGpC,KACjBohB,ubC3IFjE,aAvIf,cAAiCkC,YAC7BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc78C,QACjDiwB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAahD01B,GAZc11B,GAAgBx7B,EAAOw7B,GAAcl+C,OAAOiI,OAAOF,GAAKm2C,GAAgBn2C,EAAGm2C,GAAmBllD,UAAUgV,IAAIgV,IACnH,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAGTk7B,GAAgBx7B,EAAOw7B,GAAc19C,YAAYwN,IAAIgV,IACjE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAGXlwB,OAAOib,KAAKmM,IAAiBlM,IAAI6lE,IAC3C,CACHn6D,MAAOQ,GAAgB25D,GAASn6D,OAASm6D,EACzCxgF,MAAOwgF,MAGf,OACIoL,GAAC13B,GAAD,CAASrE,OAAQA,QAAjB,EA2CK5xB,IAAgBA,EAAY1Q,WAAWs9B,GAAmB52C,eAAkB23E,GAACx3B,GAAD,CACzElG,MAAOplC,GACPuD,QAASk0D,EACTtuB,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBv2C,aACzBuL,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBv2C,cAAgB,KAAU,KACvG2pB,EAAe2tD,GAACx3B,GAAD,CACZlG,MAAOplC,EACPuD,QAAS5sB,OAAOib,KAAKjX,IAASkX,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAOyD,GAAQxD,MACnEgyD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB92C,WACzB8L,GAAIoe,EAAYpe,GAChB7f,WAGRA,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB92C,YAAc,KAAU,KACrGkqB,EAAe2tD,GAACx3B,GAAD,CACZlG,MAAOplC,GACPuD,QAAS5sB,OAAOib,KAAK+K,IAAc9K,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAOylB,GAAaxlB,MAC7EgyD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB7f,QACAywB,KAAM7f,GAAetG,cAG7BtK,MAAO6qD,GAAgB5sB,EAAartB,GAAetG,cAAmB,KACzE2zB,EAAe2tD,GAAC53B,GAAD,CACZ9F,MAAOplC,GACP9oB,MAAO6qD,GAAgB5sB,EAAartB,GAAepG,WACnDynD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB7f,QACAywB,KAAM7f,GAAepG,eAEpB,KACbohF,GAACxL,GAAD,UACKniD,GAAeA,EAAY1Q,WAAWs9B,GAAmB52C,eAAkB23E,GAACvL,GAAD,CAAwB9yB,QAAS,KACzGpsD,KAAKC,MAAMmiC,eAAe,CAAC,CAAEC,eAAWqnB,GAAuB,CAAEx+B,QAAS,CAAExM,GAAIoe,EAAYpe,QAC7FouC,KAAM,qBAAsB5nC,MAAOyC,GAAuBsmC,YAAatmC,KAAwC,KACjHmV,EAAe2tD,GAACvL,GAAD,CAAwB9yB,QAAS,KAC7CpsD,KAAKC,MAAMmiC,eAAesnB,GAA2B,CACjDh7B,OAAQg7B,GAAWx7B,EAAOw7B,IAC1B96B,gBAAiB,GAEjBD,eAAgB,CACZvC,WAAY,IAAK5U,GAAetL,qBAGzC4gD,KAAM,qBAAsB5nC,MAAOyC,GAA2BsmC,YAAatmC,KAA4C,2bCjE/HiiC,aArDf,cAAiCkC,YAC7BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc78C,QAEjDiwB,GADQ4sB,GAAoBx7B,GACdw7B,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,MAChDx5B,EAAew5B,GAAgB5sB,EAAartB,GAAe0D,cAC/D,IAAIu3E,EAAiBhlE,GAAgBwK,GACjCy6D,EAAe,GAmCnB,OAlCID,GAAkBA,EAAerlE,cACjCslE,EAAersF,OAAOoyC,OAAOg6C,EAAerlE,aAAa7L,IAAIsZ,IACzD,IAAIxK,EAAQohC,GAAgBx7B,EAAO4E,EAAWvQ,WAAW9O,OAAO+a,IACpDlwB,OAAOib,KAAKuZ,GAAYrf,OAAOF,GAAU,OAALA,GAAoB,cAANA,GACrD6f,KAAK7f,GAAKm2C,GAAgBl7B,EAAMjb,KAAOuf,EAAWvf,KACxDiG,IAAI1a,IAAC,CAAOomB,MAAOwkC,GAAiB5qD,GAAID,MAAOC,EAAE4f,MACpD,OAAQksE,GAAC33B,GAAD,CAEJlG,MAAOj6B,EAAW3zB,IAClB+rB,QAAS5C,EACTwoC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB,IAAI4e,EAAcosB,GAAgB5sB,EAAartB,GAAe2C,cAAgB,GAC1Ey4E,EAAavtD,EAAYxK,EAAW3zB,KACxCm+B,EAAYxK,EAAW3zB,KAAON,EAC9BmB,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQk9D,EACRn9D,OAAQhP,EACRqY,SAAU2yB,GAAmB/zC,iBAAiBqB,OAElDhX,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBt3C,YACzBsM,GAAIoe,EAAYpe,GAChB7f,MAAOy+B,IAEXt9B,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmB/zC,qBAG5C9W,MAAO6qD,GAAgB5sB,EAAartB,GAAe2C,aAAes3C,GAAgB5sB,EAAartB,GAAe2C,aAAa0gB,EAAW3zB,KAAO,IAxBxI2zB,EAAW3zB,QA4BxByrF,GAAC73B,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe8tD,GAAC53B,GAAD,UACX23B,GACa,0bCnDlC,MAAMG,GAAuB,8BASVC,GAAA,UA0BJnhC,aAjCf,cAAiCkC,YAC7BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcx8C,SACjD4vB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDshC,EAAaluD,EAAcxM,GAAiBo5B,GAAoBx7B,GAAQ,CAAExP,GAAIoe,EAAYpe,KAAQ,GACtG,OAAKgwC,EAIDq8B,GAAC3F,GAAD,CACIx4B,KAAMlD,GAAWx7B,EAAO48D,IACxBp8B,OAAQhF,GAAWx7B,EAAO48D,IAC1B5lE,MAAOyC,GACPinC,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAa4sD,WALhC,EAOKE,EAAWxxE,IAAI,CAACyxE,EAAO74C,IAEhB24C,GAACG,GAAD,CAA6DhmE,SAAUwkC,GAAiBuhC,KAAU7+B,QAAS,KACvG,IAAI1tC,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQs9D,EAAMvsE,GACdgP,OAAQhP,uCAJoC0zB,OAZhE+4C,ubCXZ,MAAMC,GAAuB,uBACvBC,GAAkB,yBAyF6CC,GAAA,KAAG1/B,UAAU,gBAcnEhC,aAtGf,cAA6BkC,YACzBgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,CACTza,OAAQ,IAGhB83E,eAAe/8D,GACX,SAAUk7B,GAAgBl7B,EAAM/e,GAAe5L,aAAa2qB,EAAK9P,MAAMgrC,GAAgBl7B,EAAM/e,GAAewB,WAAWy4C,GAAgBl7B,EAAM/e,GAAe8C,YAAYqB,cAE5K9T,SACI,IACIouB,MAAEA,GADGluB,KACUC,MAEnB,IAAI+qB,EAAQ0+B,GAAoBx7B,GAChC,IAAIza,GAAUzT,KAAKkuB,MAAMza,QAAU,IAAIG,cACnCkU,EAAS4hC,GAAax7B,GAAOza,OAAOF,KAC/BE,IAI2B,IADtBzT,KAAKurF,eAAeh4E,GACnBI,QAAQF,IACpBg4C,QAAQl4C,GAAKm2C,GAAgBn2C,EAAG9D,GAAe8C,WAC9CmzB,EAAO,GAgCX,OA/BAA,EAAOpnC,OAAOib,KAAKuO,GAAQrU,OAAO6X,GAASxD,EAAOwD,GAAOrO,QAAQzD,IAAI,CAAC8R,EAAOkgE,KACzE,IAAIC,oBAA6BngE,IAC7BogE,EAAa5jE,EAAOwD,GAAO9R,IAAI,CAACmyE,EAAIC,IAEhCN,GAAClG,GAAD,CACIt2B,WAAW,EACX5pC,MAAOwkC,GAAgBiiC,EAAIl8E,GAAewB,QAC1C67C,KAAOpD,GAAgBiiC,EAAIl8E,GAAehO,QAA6B,uBAAnB,iBACpDmtD,OAAQ,KACJ5uD,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBjoD,OACzBid,GAAIitE,EAAGjtE,GACP7f,OAAQ6qD,GAAgBiiC,EAAIl8E,GAAehO,oBAR5B6pB,KAASkgE,KAAMI,MAclD,OACIN,GAAClG,GAAD,CAAclgE,MAAOoG,EACjBwhC,KAAK,qBACLF,KAAMlD,GAAWx7B,EAAOu9D,GACxB/8B,OAAQhF,GAAWx7B,EAAOu9D,GAC1Bz8B,MAAOs8B,GAAA,QAAM1/B,UAAU,6BAAhB,EAAwC9jC,EAAOwD,GAAOrO,QAC7D2xC,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAautD,aANSngE,KAASkgE,IAQ7CE,KAKTJ,GAAClG,GAAD,CACIlgE,SAAUyC,KAAgBqD,EAAQ1sB,OAAOib,KAAKyR,EAAMjC,cAAgB,IAAI9L,OAAS,KACjF6vC,KAAM,qBACNF,KAAMlD,GAAWx7B,EAAOm9D,IACxB38B,OAAQhF,GAAWx7B,EAAOm9D,IAC1Bj/B,QAAS,KACLpsD,KAAKC,MAAMi+B,aAAamtD,WANhC,EASIC,GAAClG,GAAD,CACIt4B,KAAK,qBACL5nC,MAAOyC,GACPilC,KAAMlD,GAAWx7B,EAAOk9D,IACxB18B,OAAQhF,GAAWx7B,EAAOk9D,IAC1Bh/B,QAAS,KACLpsD,KAAKC,MAAMi+B,aAAaktD,WANhC,EAQIE,GAAA,OAAK1/B,UAAU,kBAAf,EACI0/B,GAAA,OAAK1/B,UAAU,kBAAf,EACI0/B,GAAA,UAAQl/B,QAAS,KACbpsD,KAAKC,MAAMmiC,eAAesnB,GAAax7B,GAAOza,OAAOF,GAAKm2C,GAAgBn2C,EAAG9D,GAAehO,SAAS+X,IAAIgV,IAC9F,CACH6T,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmBjoD,OACzBid,GAAI8P,EAAK9P,GACT7f,OAAO,QAKnBmY,KAAK,SAASkO,MAAOyC,GACrBikC,UAAU,iCAbd,EAAAigC,OAiBZP,GAACt4B,GAAD,CAAazC,aAAa,QAA1B,EACI+6B,GAACz4B,GAAD,CAAWh0D,MAAOmB,KAAKkuB,MAAMza,OAAQq9C,SAAWjyD,IAC5CmB,KAAKm/B,SAAS,CAAE1rB,OAAQ5U,KACzBgyD,YAAY,EAAMF,YAAahpC,MAErC+d,ubCxDFkkB,aA/Cf,cAAiCkC,YAC7BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjB68B,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDgF,GAAUphD,GAAmBo8C,GAAgB5sB,EAAa4sB,GAAmBn3C,WACjF,OACIu5E,GAAC/4B,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAegvD,GAAC94B,GAAD,UACZ84B,GAACj5B,GAAD,CACI9F,MAAOplC,GACPipC,UAAWlH,GAAkB5sB,GAC7Bj+B,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB7lD,UAAY,GACtFitD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB7lD,SACzB6a,GAAIoe,EAAYpe,GAChB7f,aAGZitF,GAACj5B,GAAD,CACI9F,MAAOplC,GACPipC,UAAWlH,GAAkB5sB,GAC7Bj+B,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB5lD,WAAa,GACvFgtD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB5lD,UACzB4a,GAAIoe,EAAYpe,GAChB7f,aAGZitF,GAACj5B,GAAD,CACI9F,MAAOplC,GACPipC,UAAWlH,GAAkB5sB,GAC7Bj+B,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB3lD,WAAa,GACvF+sD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB3lD,UACzB2a,GAAIoe,EAAYpe,GAChB7f,cAGE,0bCsDnB+qD,aArFf,cAA0CkC,YACtChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcx9C,iBACjDkjC,EAAgB,GAChBpkB,EAAQ0+B,GAAoBx7B,GAC5B4O,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACpD,GAAI5sB,EAAa,CACb,IAAIuC,EAAazK,GAAiB1G,EAAO,CACrCxP,GAAIoe,EAAYpe,GAChBgK,MAAO,CAAC,CACJuE,UAAWC,GACXlW,KAAMxC,GAAStI,oBAGnBsiB,EAAO,KACP8O,EAAcosB,GAAmBrqB,GACrC,GAAI/B,EACA,OAAQosB,GAAoBrqB,IACxB,KAAKt2B,GAAc2W,uCACf8O,EAAOwB,GAAQhF,EAAOsS,EAAYzc,GAAqBU,kBAI/DiN,IACA4gB,EAAgBta,GAAa5G,EAAO,CAChCxP,GAAI8P,EAAK9P,GACTgK,MAAO,CAAC,CACJuE,UAAWkH,GACXnd,KAAMxC,GAASuB,iBAEpBg1C,gBAGX,OACIghC,GAACh5B,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAeivD,GAAC/4B,GAAD,UACZ+4B,GAACl5B,GAAD,CACI9F,MAAOplC,EACP9oB,MAAO6qD,GAAgB5sB,EAAartB,GAAewB,QACnD6/C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAAsB,CAAEhrC,GAAIoe,EAAYpe,GAAI7f,aAE9EktF,GAAC94B,GAAD,CACI/nC,QAASkkB,EACT+hB,kBAAmBxpC,EACnBolC,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB,IAAIqjE,EAAWr4B,GAAgB5sB,EAAartB,GAAegB,cAAgB4b,KAC3E01D,EAAWz1D,GAAey1D,EAAU,CAAErjE,GAAI7f,IAC1CmB,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLxM,KACA4Q,KAAM7f,GAAegB,YACrB5R,MAAOkjF,IAEZ,CACC1/C,UAAWqnB,GACXx+B,QAAS,CACLxM,KACA4Q,KAAM7f,GAAevD,gBACrBrN,MAAO2vB,EAAK9P,OAIpB1e,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IACLs9B,GAAmBx9C,mBACnB4qB,GAAgBviB,GAAW9T,OAAQ,CAClCs1B,SAAU,0CAK1Bl3B,MAAO,MACG,0bC2GnB+qD,aA9Lf,cAAoCkC,YAChChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcl+C,OACjDsxB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDsiC,EAAqBtiC,GAAgB5sB,EAAa4sB,GAAmBr/C,oBACrE4hF,EAAmBviC,GAAgB5sB,EAAa4sB,GAAmBj/C,kBAEvE,OACIyhF,GAACn5B,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAeovD,GAACl5B,GAAD,UACZk5B,GAACp5B,GAAD,CACI/F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBr/C,oBACvDymD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GAA0Bx+B,QAAS,CAC1CoE,KAAMo6B,GAAmBr/C,mBACzBqU,GAAIoe,EAAYpe,GAChB7f,eAIfmtF,EAAsBE,GAACj5B,GAAD,CACnB/nC,QAASw+B,GAAgBx7B,EAAO5iB,GAAUE,OAAOgO,IAAIjG,IAC1C,CACH1U,MAAO0U,EAAEmL,GACTwG,MAAOwkC,GAAiBn2C,MAGhCw5C,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB,IAAI5B,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmBp/C,uBAAyB,GACrFtK,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmBp/C,qBACzBoU,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAIie,EAAOje,GAAOitB,OAAOvY,GAAKA,KAE1C,CACC8uB,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBt0C,sBAIhDvW,MAAO,KAAU,KACpBmtF,EAAqBE,GAACnN,GAAD,CAAYrwB,QAAQ,EAAM4vB,WAAa1xD,IACzD,IAAI9P,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmBp/C,uBAAyB,GACrF,OAAOsiB,GAAQ9P,EAAMwR,KAAK/a,GAAKA,IAAMqZ,EAAKlO,KAE1C2/D,OAAQ30B,GAAgB5sB,EAAa4sB,GAAmBp/C,uBAAyB,IAAIkP,IAAI1a,IACrF,IAAI0vB,EAAOwB,GAAQ05B,GAAoBx7B,GAAQpvB,GAC/C,GAAI0vB,EACA,MAAO,CACHtJ,MAAOwkC,GAAiBl7B,GACxB9P,GAAI8P,EAAK9P,MAIrB0tC,QAAUx/B,IACN,IAAIlO,EAAKoe,EAAYpe,GACrB,IAAI5B,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmBp/C,uBAAyB,GACjF6jB,EAAMrR,EAENqR,EADArR,EAAMwR,KAAKxvB,GAAK8tB,EAAKlO,KAAO5f,GACtB,IAAIqvB,EAAI1a,OAAO3U,GAAKA,IAAM8tB,EAAKlO,KAAKoN,OAAOvY,GAAKA,GAGhD,IAAI4a,EAAKvB,EAAKlO,IAAIoN,OAAOvY,GAAKA,GAExCvT,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmBp/C,qBACzBoU,GAAIoe,EAAYpe,GAChB7f,MAAOsvB,IAEZ,CACCkU,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQf,EAAKlO,GACbgP,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBt0C,wBAGxC,KAcZ82E,GAACp5B,GAAD,CACI/F,MAAOplC,GACPzC,MAAOyC,GACP9oB,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBj/C,kBACvDqmD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GAA0Bx+B,QAAS,CAC1CoE,KAAMo6B,GAAmBj/C,iBACzBiU,GAAIoe,EAAYpe,GAChB7f,eAIfotF,EAAoBC,GAACj5B,GAAD,CACjB/nC,QAASw+B,GAAgBx7B,EAAO5iB,GAAUE,OAAOgO,IAAIjG,IAC1C,CACH1U,MAAO0U,EAAEmL,GACTwG,MAAOwkC,GAAiBn2C,MAGhCw5C,MAAOplC,GACPmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB,IAAI5B,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmBn/C,oBAAsB,GAClFvK,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmBn/C,kBACzBmU,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAIie,EAAOje,GAAOitB,OAAOvY,GAAKA,KAE1C,CACC8uB,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBr0C,oBAIhDxW,MAAO,KAAU,KACpBotF,EAAmBC,GAACnN,GAAD,CAAYrwB,QAAQ,EAAM4vB,WAAa1xD,IACvD,IAAI9P,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmBn/C,oBAAsB,GAClF,OAAOqiB,GAAQ9P,EAAMwR,KAAK/a,GAAKA,IAAMqZ,EAAKlO,KAE1C2/D,OAAQ30B,GAAgB5sB,EAAa4sB,GAAmBn/C,oBAAsB,IAAIiP,IAAI1a,IAClF,IAAI0vB,EAAOwB,GAAQ05B,GAAoBx7B,GAAQpvB,GAC/C,GAAI0vB,EACA,MAAO,CACHtJ,MAAOwkC,GAAiBl7B,GACxB9P,GAAI8P,EAAK9P,MAIrB0tC,QAAUx/B,IACN,IAAIlO,EAAKoe,EAAYpe,GACrB,IAAI5B,EAAQ4sC,GAAgB5sB,EAAa4sB,GAAmBn/C,oBAAsB,GAC9E4jB,EAAMrR,EAENqR,EADArR,EAAMwR,KAAKxvB,GAAK8tB,EAAKlO,KAAO5f,GACtB,IAAIqvB,EAAI1a,OAAO3U,GAAKA,IAAM8tB,EAAKlO,KAAKoN,OAAOvY,GAAKA,GAGhD,IAAI4a,EAAKvB,EAAKlO,IAAIoN,OAAOvY,GAAKA,GAExCvT,KAAKC,MAAMmiC,eAAe,CAAC,CACvBC,UAAWqnB,GACXx+B,QAAS,CACLoE,KAAMo6B,GAAmBn/C,kBACzBmU,GAAIoe,EAAYpe,GAChB7f,MAAOsvB,IAEZ,CACCkU,UAAWqnB,GACXx+B,QAAS,CACLyC,OAAQf,EAAKlO,GACbgP,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBr0C,sBAGxC,MACE,0bCtLnB,MAAM82E,WAAoBrgC,YACrCgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,CACTza,OAAQ,GACRiL,GAAI2I,MAGZvnB,SAGI,OACIssF,GAAA,OAAKxgC,UAAU,mBAAf,GAFS5rD,KAAKC,MAAMywC,QAAU,IAGlBl3B,IAAI,CAACpF,EAAKg+B,KACd,IAAIvzC,MAAEA,EAAFqmB,MAASA,GAAU9Q,EACvB,OAAQg4E,GAAA,OAAKxgC,UAAU,YAAgBxZ,WAAepyC,KAAKkuB,MAAMxP,KAC7D0tE,GAAA,kBACIA,GAAA,SAAOp1E,KAAK,QAAQ7Y,KAAM6B,KAAKkuB,MAAMxP,GAAIA,GAAI1e,KAAKkuB,MAAMxP,GAAI7f,MAAOmB,KAAKC,MAAMpB,QAAUA,EAAOiyD,SAAU,KACrG9wD,KAAKC,MAAM6wD,SAASjyD,IACrByyD,QAAStxD,KAAKC,MAAMpB,QAAUA,EAAQ,UAAY,KACpDqmB,ucCTVmnE,GAAA,UAaJziC,aA9Bf,cAA6BkC,YACzBgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,CACTza,OAAQ,IAGhB83E,eAAe/8D,GACX,SAAUk7B,GAAgBl7B,EAAM/e,GAAe5L,aAAa2qB,EAAK9P,MAAMgrC,GAAgBl7B,EAAM/e,GAAewB,WAAWy4C,GAAgBl7B,EAAM/e,GAAe8C,YAAYqB,cAE5K9T,SACI,IACIouB,MAAEA,GADGluB,KACUC,MAEnB,IAAI+qB,EAAQ0+B,GAAoBx7B,GAChC,OAAKlD,EAKDqhE,GAACC,GAAD,CAAKpnE,MAAOyC,QAAZ,EACI0kE,GAACr5B,GAAD,UACIq5B,GAACE,GAAD,CAAa1tF,MAAOmsB,EAAMmN,MAAO24B,SAAW18C,IACxCpU,KAAKC,MAAMmiC,eAAe,CAAC,CAAEC,UAAWqnB,GAAex+B,QAAS,CAAEiN,MAAO/jB,OAC1Es8B,OAAQ,GAAGrzB,YAAY,EAAG,EAAG9J,IAAC,CAAO2R,MAAO,UAAY3R,EAAG1U,MAAO0U,SAP7Ei5E,ubCwCG5iC,aArDf,cAAkCkC,YAC9BhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcx8C,SACjD4vB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChD1+B,EAAQ0+B,GAAoBx7B,GAC5BtH,EAAY8iC,GAAgBx7B,EAAO,CAACw7B,GAAc98C,SAAU88C,GAAc78C,SAAS2M,IAAI6lE,IAChF,CACHn6D,MAAOwkC,GAAiB21B,GACxBxgF,MAAOwgF,EAAQ3gE,MAIvB,OACI+tE,GAAC15B,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAe2vD,GAACx5B,GAAD,CACZlG,MAAOplC,GACPuD,QAAStE,EACTuqC,kBAAmBxpC,GACnBmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IACLs9B,GAAmB9zC,gBAIT0a,GAAiBtF,EAAO,CACzCtM,GAAI7f,EACJwmB,YAAa,CACT9X,CAACkU,GAAuBU,kBAAkB,KAInC3I,IAAIkzE,IACf1sF,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClDh8B,OAAQg/D,EAAchuE,GACtBiP,OAAQjP,EACR0N,WAAY,IACLs9B,GAAmB5zC,iBACtBvI,CAAC4J,GAAiBI,aAAc1Y,QAKhDA,MAAO,KAAU,0bC/CrC,MAAM8tF,GAA0B,iCASbC,GAAA,UA0BJhjC,aAjCf,cAAoCkC,YAChChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcx8C,SACjD4vB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDshC,EAAaluD,EAAcxM,GAAiBo5B,GAAoBx7B,GAAQ,CAAExP,GAAIoe,EAAYpe,KAAQ,GACtG,OAAKgwC,EAIDk+B,GAACxH,GAAD,CACIx4B,KAAMlD,GAAWx7B,EAAOy+D,IACxBj+B,OAAQhF,GAAWx7B,EAAOy+D,IAC1BznE,MAAOyC,GACPinC,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAayuD,WALhC,EAOK3B,EAAWxxE,IAAI,CAACyxE,EAAO74C,IAEhBw6C,GAAC1B,GAAD,CAAgEhmE,SAAUwkC,GAAiBuhC,KAAU7+B,QAAS,KAC1G,IAAI1tC,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQs9D,EAAMvsE,GACdgP,OAAQhP,0CAJuC0zB,OAZnEy6C,ubCoCGjjC,aA7Cf,cAAqCkC,YACjChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjB68B,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChDgF,EAAShF,GAAmBx7B,EAAOw7B,GAAcz8C,YAEjD2Z,GADQ8iC,GAAoBx7B,GAChBw7B,GAAgBx7B,EAAOw7B,GAAcx8C,SAASsM,IAAI6lE,IACvD,CACHn6D,MAAOwkC,GAAiB21B,GACxBxgF,MAAOwgF,EAAQ3gE,OAIvB,OACIouE,GAAC/5B,GAAD,CAASrE,OAAQA,QAAjB,EACK5xB,EAAegwD,GAAC75B,GAAD,CACZlG,MAAOplC,GACPuD,QAAStE,EACTuqC,kBAAmBxpC,GACnBmpC,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GACrB1e,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IACLs9B,GAAmBnzC,gBAIlC1X,MAAO,KAAU,KACpBi+B,EAAegwD,GAACj6B,GAAD,CACZ9F,MAAOplC,GACP9oB,MAAO6qD,GAAgB5sB,EAAartB,GAAe3M,UACnDguD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDhrC,GAAIoe,EAAYpe,GAChB7f,QACAywB,KAAM7f,GAAe3M,cAEpB,0bCgOd8mD,aAzQf,cAA+CkC,YAC3CihC,eAAe/hE,EAAO8R,GAClB,IAAIkwD,EAAsB,GAe1B,OAdIlwD,KACAkwD,EAAsBhgE,GAAmBhC,EAAO,CAC5CtM,GAAIoe,EAAYpe,GAChBuO,UAAWkH,GACXnd,KAAMxC,GAASqC,8CAEMoG,SACrB+vE,EAAsBhgE,GAAmBhC,EAAO,CAC5CtM,GAAIoe,EAAYpe,GAChBuO,UAAWkH,GACXnd,KAAMxC,GAASoC,iCAIpBo2E,EAEXltF,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAcz9C,sBACjD6wB,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAEhDm5B,GADWn5B,GAAgB5sB,EAAa4sB,GAAmBllD,SACvCklD,GAAgBx7B,EAAOw7B,GAAc7mD,aAAa2W,IAAIgV,IACnE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,OAG5B2xD,EAAkBz2B,GAAgBx7B,EAAOw7B,GAAc/8C,eAAe6M,IAAIgV,IACnE,CACH3vB,MAAO2vB,EAAK9P,GACZwG,MAAOwkC,GAAiBl7B,MAG5BxD,EAAQ0+B,GAAoBx7B,GAE5B++D,EAAkBnwD,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBx3C,aAAe,GACnHu8B,GAAe3R,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB75C,wBAA0B,KAAO,GAClI8+B,EAAiB,GAErB,GAAIs+C,EAAiB,CACjB,IAAIxhD,EAAgBzb,GAAQhF,EAAOiiE,GACnC,GAAIxhD,EAAe,CACf,IAAIC,EAAMge,GAAgBje,EAAeie,GAAmBv3C,uBAE5D,GAAIu5B,GAAOA,EAAIpV,QACPoV,EAAIpV,OAAOC,cAAe,CAC1B,IAAI22D,EAAkBxhD,EAAIpV,OAAOG,KAAKjd,IAAI1a,GAC/BA,EAAE4sC,EAAIpV,OAAOK,UAAYr4B,OAAOib,KAAKza,GAAG,KAEnD2vC,EAAcA,EAAYqc,aAAaoiC,GACvCv+C,EAAiBu+C,EAAgBxiC,mBAAmBjc,KAMpE,IAAI8I,EAAcza,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB7mD,aAAe,GAC/G4/E,GAAW3lD,GAAeA,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB15C,mBAAqB,KAAO,GACzH0yE,EAAa,GACjB,GAAInrC,EAAa,CACb,IAAI/I,EAAkBxe,GAAQhF,EAAOusB,GACrC,GAAI/I,EAAiB,CACjB,IAAIm0C,EAAoBj5B,GAAgBlb,EAAiB/+B,GAAe5M,cAAgB,GACxF4/E,EAAUA,EAAQ33B,aAAa63B,GAC/BD,EAAaC,EAAkBj4B,mBAAmB+3B,IAI1D,IAAIuK,EAAsBhtF,KAAK+sF,eAAe/hE,EAAO8R,GACjDtJ,EAAiB,KACjB25D,EAAqB,KAKzB,OAJIH,EAAoB/vE,SAEpBuW,EAAiBk2B,GADjByjC,EAAqBH,EAAoB,GACYtjC,GAAmBj3C,kBAGxE26E,GAACr6B,GAAD,CAASrE,OAAQA,QAAjB,EACI0+B,GAACpO,GAAD,CAA0B95D,MAAOyC,KAChCmV,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsBxtC,QAAWkxE,GAACt6B,GAAD,CACrF5tC,MAAOyC,GACPolC,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAWs9B,GAAmBliD,UACjDspD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBliD,SACzBkX,GAAIoe,EAAYpe,GAChB7f,aAEC,KACZi+B,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsBxtC,SAAWwtC,GAAgB5sB,EAAa4sB,GAAmBliD,UAAa4lF,GAACn6B,GAAD,CAClJ/tC,MAAOyC,GACPolC,MAAOplC,GACPuD,QAAS,CAAC,OAAQ,SAAS1R,IAAI1a,IAAC,CAAOomB,MAAOpmB,EAAGD,MAAOC,KACxDD,MAAOi+B,EAAY1Q,WAAWs9B,GAAmBpiD,WACjDwpD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBpiD,UACzBoX,GAAIoe,EAAYpe,GAChB7f,aAEC,KACZi+B,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB7tC,cAAiBuxE,GAACt6B,GAAD,CAC3F5tC,MAAOyC,GACPolC,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAWs9B,GAAmBriD,gBACjDypD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBriD,eACzBqX,GAAIoe,EAAYpe,GAChB7f,aAEC,KACZi+B,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB7tC,cAAiBuxE,GAACt6B,GAAD,CAC3F5tC,MAAOyC,GACPolC,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAWs9B,GAAmBhiD,kBACjDopD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBhiD,iBACzBgX,GAAIoe,EAAYpe,GAChB7f,aAEC,KACZi+B,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,OAAUwxE,GAACt6B,GAAD,CACpF5tC,MAAOyC,GACPolC,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAWs9B,GAAmB9mD,gBACjDkuD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB9mD,eACzB8b,GAAIoe,EAAYpe,GAChB7f,aAEC,KACZi+B,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,OAAUwxE,GAACt6B,GAAD,CACpF5tC,MAAOyC,GACPolC,MAAOplC,GACP9oB,MAAOi+B,EAAY1Q,WAAWs9B,GAAmB94C,cACjDkgD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB94C,aACzB8N,GAAIoe,EAAYpe,GAChB7f,aAEC,KACZi+B,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,QAAUkhB,EAAY1Q,WAAWs9B,GAAmB94C,cAAgBw8E,GAACpO,GAAD,CAA0B95D,MAAOyC,IAA0B,KAC5M+mC,GAAUjgB,GAAeA,EAAYxxB,QAAU6f,GAAeA,EAAY1Q,WAAWs9B,GAAmB94C,cAAgB69B,EAAYj1B,IAAK05B,GAC/Hk6C,GAAA,OAAkCxhC,UAAU,wBAAwByB,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KAC9GpsD,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB75C,uBACzB6O,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAI4vC,GAAah7B,OAAOF,GAAKA,IAAM2/B,KAE9ClzC,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB35C,0BACzB2O,GAAIoe,EAAYpe,GAChB7f,MAAOquF,EAAgBxiC,mBAAmB,IAAIjc,GAAah7B,OAAOF,GAAKA,IAAM2/B,uBATrDA,IAAzB,IAWDA,IACL,KACJpW,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,QAAUkhB,EAAY1Q,WAAWs9B,GAAmB94C,cAAgBw8E,GAACpO,GAAD,CAA0B95D,MAAOyC,IAA6B,KAC/M+mC,GAAU/f,GAAkBA,EAAe1xB,QAAU6f,GAAeA,EAAY1Q,WAAWs9B,GAAmB94C,cAAgB+9B,EAAen1B,IAAK05B,GACxIk6C,GAAA,OAAqCxhC,UAAU,wBAAwByB,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KACjHpsD,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB75C,uBACzB6O,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAI4vC,EAAayE,GAAOpnB,WAEnC9rB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB35C,0BACzB2O,GAAIoe,EAAYpe,GAChB7f,MAAOquF,EAAgBxiC,mBAAmB,IAAIjc,EAAayE,GAAOpnB,gCATvConB,IAA5B,IAWDA,IACL,KAEDpW,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,QAAUkhB,EAAY1Q,WAAWs9B,GAAmB94C,cAAiBw8E,GAACn6B,GAAD,CAC9IlG,MAAOplC,GACPuD,QAASi1D,EACTrvB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GAErB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmBx3C,aAClDwb,OAAQhP,EACRqY,SAAU2yB,GAAmBpwC,cAActC,OAE/ChX,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBx3C,YACzBwM,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBpwC,kBAG5Cza,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmBx3C,aAAe,KAAU,KAGvG4qB,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,QAAUkhB,EAAY1Q,WAAWs9B,GAAmB9mD,gBAAmBwqF,GAACn6B,GAAD,CAChJlG,MAAOplC,GACPuD,QAAS23D,EACT/xB,SAAWjyD,IACP,IAAI6f,EAAKoe,EAAYpe,GAErB1e,KAAKC,MAAMmiC,eAAesnB,GAA+B,CACrD/7B,OAAQmP,EAAY1Q,WAAWs9B,GAAmB7mD,aAClD6qB,OAAQhP,EACRqY,SAAU2yB,GAAmBjyC,gBAAgBT,OAEjDhX,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB7mD,YACzB6b,KACA7f,UAEJmB,KAAKC,MAAMmiC,eAAesnB,GAA4B,CAClD/7B,OAAQ9uB,EACR6uB,OAAQhP,EACR0N,WAAY,IAAKs9B,GAAmBjyC,oBAG5C5Y,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWs9B,GAAmB7mD,aAAe,KAAU,KAE1Gi6B,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,QAAUkhB,EAAY1Q,WAAWs9B,GAAmB9mD,gBAAkBwqF,GAACpO,GAAD,CAA0B95D,MAAOyC,IAA0B,KAC9M+mC,GAAU+zB,GAAWA,EAAQxlE,QAAU6f,GAAeA,EAAY1Q,WAAWs9B,GAAmB9mD,gBAAkB6/E,EAAQjpE,IAAK05B,GACrHk6C,GAAA,OAA8BxhC,UAAU,wBAAwByB,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KAC1G,IAAIs2B,EAAaC,EAAkBj4B,mBAAmB,IAAI+3B,GAAShvE,OAAOF,GAAKA,IAAM2/B,IACrFlzC,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB15C,kBACzB0O,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAI4jF,GAAShvE,OAAOF,GAAKA,IAAM2/B,KAE1ClzC,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBz5C,qBACzByO,GAAIoe,EAAYpe,GAChB7f,MAAO6jF,iBAVaxvC,IAArB,IAYDA,IACL,KACJpW,GAAeqwD,GAAsB35D,GAAkBk2B,GAAsB9tC,QAAUkhB,EAAY1Q,WAAWs9B,GAAmB9mD,gBAAkBwqF,GAACpO,GAAD,CAA0B95D,MAAOyC,IAA6B,KACjN+mC,GAAUg0B,GAAcA,EAAWzlE,QAAU6f,GAAeA,EAAY1Q,WAAWs9B,GAAmB9mD,gBAAkB8/E,EAAWlpE,IAAK05B,GAC9Hk6C,GAAA,OAAiCxhC,UAAU,wBAAwByB,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KAC7G,IAAIs2B,EAAaC,EAAkBj4B,mBAAmB,IAAI+3B,EAASvvC,GAAOpnB,UAC1E9rB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB15C,kBACzB0O,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAI4jF,EAASvvC,GAAOpnB,WAE/B9rB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBz5C,qBACzByO,GAAIoe,EAAYpe,GAChB7f,MAAO6jF,oBAVgBxvC,IAAxB,IAYDA,IACL,0bCtQrB,MAAMm6C,GAAa,aAmBJzjC,aAlBf,cAAwBkC,YACpBhsD,SACI,IACIouB,MAAEA,GADGluB,KACUC,MACnB,OACIqtF,GAACC,GAAD,CAAczgC,KAAM,kBAAmBF,KAAMlD,GAAWx7B,EAAOm/D,IAAajhC,QAAS,KACjFpsD,KAAKC,MAAMi+B,aAAamvD,WAD5B,EAGIC,GAACE,GAAD,CAAkB1gC,KAAM,aACpB5nC,MAAOyC,GACPykC,QAAS,KACLpsD,KAAKC,MAAM4/B,kBAEfouB,YAAatmC,0bCdjC,MAAM8lE,GAAe,eAmDN7jC,aAlDf,cAA0BkC,YACtBhsD,SACI,IAAIqsD,EAAKnsD,MACLkuB,MAAEA,GAAUi+B,EAAGlsD,MACfytF,EAAW,GACXC,EAAYjkC,GAAiBx7B,GAC7B4R,EAAY4pB,GAAiBx7B,GAC7By/D,GACAA,EAAUn0E,IAAIo0E,IACVF,EAASz1D,KACL41D,GAAC3C,GAAD,CAEIhmE,MAAO0oE,EAAG1oE,OAASyC,GACnBqnC,MAAO6+B,GAAA,QAAMjiC,UAAU,uCAAhB,EAAkDgiC,EAAGtlE,MAAMrL,QAClEmvC,QAAS,KACLD,EAAGlsD,MAAMq+B,eAAeorB,GAAiB,CAACkkC,EAAGlvE,OAJ5CkvE,EAAGlvE,OASxB,IAAIgnB,EAAOgoD,EAgBX,OAfI5tD,IACA4F,EACImoD,GAACzI,GAAD,CACIv2B,UAAU,EACVG,MAAO6+B,GAAA,QAAMjiC,UAAU,uCAAhB,EAAkD9rB,EAAUxX,MAAMrL,QACzEiI,MAAO4a,EAAU5a,OAASyC,GAC1BmnC,WAAW,EACXlC,MAAM,EACN8B,QAAQ,EACRtC,QAAS,KACLD,EAAGlsD,MAAMq+B,eAAeorB,GAAiB,aARjD,EAUKgkC,IAITG,GAACzI,GAAD,CACIlgE,MAAOyC,GACPmlC,KAAM,kBACNF,KAAMlD,GAAWx7B,EAAOu/D,IACxB/+B,OAAQhF,GAAWx7B,EAAOu/D,IAC1BrhC,QAAS,KACLpsD,KAAKC,MAAMi+B,aAAauvD,WANhC,EAQK/nD,ubCNFkkB,aAnCf,cAAsCkC,YAClChsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjByuD,EAAShF,GAAmBx7B,EAAOw7B,GAAc7mD,aACjDi6B,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KAChD3W,EAAQ2W,GAAgB5sB,EAAartB,GAAe5M,cAAgB,GAExE,OACIirF,GAAC/6B,GAAD,CAASrE,OAAQA,QAAjB,EACIo/B,GAACC,GAAD,CAAqBjK,WAAa1vE,IAC9B,GAAIA,EAAK,CACL,IAAI2+B,EAAQ2W,GAAgB5sB,EAAartB,GAAe5M,cAAgB,GAExE7C,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB7mD,YACzB6b,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAIk0C,EAAO3+B,GAAK0X,eAKlC4iC,GAAU3b,GAASA,EAAM91B,OAAS81B,EAAMv5B,IAAK05B,GACnC46C,GAAA,OAAKliC,UAAU,wBAAwByB,MAAO,CAAEkxB,OAAQ,WAAanyB,QAAS,KACjFpsD,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmB7mD,YACzB6b,GAAIoe,EAAYpe,GAChB7f,MAAO,IAAIk0C,GAAOt/B,OAAOF,GAAKA,IAAM2/B,YAJrC,MAMDA,IACL,0bChBN0W,aAff,cAA0BkC,YACtBhsD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MAEjBy8B,EAAUgtB,GAA0Bx7B,GACxC,OACI8/D,GAACh7B,GAAD,CAAazC,aAAa,QAA1B,EACIy9B,GAACn7B,GAAD,CAAWh0D,MAAO69B,EAAUA,EAAQxX,MAAQ,GAAI4rC,SAAWjyD,IACvDmB,KAAKC,MAAMmiC,eAAesnB,GAAwB,CAAEtyB,KAAMv4B,KAC3DgyD,YAAY,EAAMF,YAAahpC,0bCdnC,MAAMsmE,WAAkBniC,YACnC4C,SACI,QAAS1uD,KAAKC,MAAMyuD,OAExB5uD,SAKI,IAAI4uD,EAAS1uD,KAAK0uD,SAElB,OACIw/B,GAAA,OAAK7gC,MAPG,CACR4sB,SAAU,WACV7sB,MAAO,cAKP,EACI8gC,GAAA,OAAK7gC,MAAO,CACR4sB,SAAU,WACV7sB,MAAO,OACPynB,WAAY,SACZkS,cAAer4B,EAAS,MAAQ,OAChC0rB,IAAK1rB,EAAS,EAAI,UAClBy/B,gBAAiB,mBANrB,EAQKnuF,KAAKC,MAAMF,qEC7BjBquF,GAAA,CACfC,KAAA,CACA1/B,QAAA,QACA2/B,UAAA,OACAtkC,QAAA,QACA4jB,MAAA,OACA2gB,WAAA,WAEAC,eAAA,CACA5gB,MAAA,UACA6gB,UAAA,UAEAC,aAAA,CACA9gB,MAAA,UACA6gB,UAAA,UAEAE,eAAA,CACA/gB,MAAA,WAEAghB,oBAAA,CACAhhB,MAAA,WAEAihB,eAAA,CACAjhB,MAAA,WAEAkhB,aAAA,CACAlhB,MAAA,WAEAmhB,cAAA,CACAnhB,MAAA,WAEAohB,cAAA,CACAphB,MAAA,WAEAqhB,cAAA,CACArhB,MAAA,WAEAshB,mBAAA,CACAthB,MAAA,WAEAuhB,sBAAA,CACAvhB,MAAA,WAEAwhB,eAAA,CACAxhB,MAAA,WAEAyhB,YAAA,CACAzhB,MAAA,WAEA0hB,cAAA,CACA1hB,MAAA,QAEA2hB,aAAA,CACA3hB,MAAA,OACA4hB,WAAA,QAEAC,WAAA,CACA7hB,MAAA,UACA4hB,WAAA,UAEAE,YAAA,CACA9hB,MAAA,UACA4hB,WAAA,UAEAG,iBAAA,CACA/hB,MAAA,UACA4hB,WAAA,UAEAI,gBAAA,CACAhiB,MAAA,WAEAiiB,yBAAA,CACAjiB,MAAA,WAEAkiB,cAAA,CACAliB,MAAA,QAEAmiB,YAAA,CACAniB,MAAA,QAEAoiB,cAAA,CACApiB,MAAA,WAEAqiB,cAAA,CACAriB,MAAA,WAEAsiB,gBAAA,CACAtiB,MAAA,WAEAuiB,oBAAA,CACAviB,MAAA,WAEAwiB,YAAA,CACAxiB,MAAA,OACA4hB,WAAA,QAEAa,gBAAA,CACA9B,WAAA,QAEA+B,gBAAA,CACA/B,WAAA,QAEAgC,gBAAA,CACA9B,UAAA,UAEA+B,cAAA,CACAhB,WAAA,0bCtGe,MAAM5G,WAAY98B,YAC7B4C,SACI,OAAO1uD,KAAKC,MAAMyuD,OAAS,SAAW,GAE1CxpC,QACI,OAAOllB,KAAKC,MAAMilB,OAASllB,KAAKC,MAAMF,UAAY,UAEtDD,SACI,OACI2wF,GAAA,MAAI7kC,UAAW5rD,KAAK0uD,eAApB,EACI+hC,GAAA,KAAGpkC,cAAY,MAAMD,QAAS,KACtBpsD,KAAKC,MAAMmsD,SACXpsD,KAAKC,MAAMmsD,WAEhBmB,gBAAc,aAJjB,EAIyBvtD,KAAKklB,WCd/B,MAAM6nB,WAAa+e,YAE9BhsD,SACI,qbACI4wF,CAAA,MAAI9kC,UAAU,qBAAd,EACK5rD,KAAKC,MAAMF,4bCmB5B,MAAM4wF,GAAa,aAGbC,GAAgB,gBA0HPhnC,aAxHf,cAAuBkC,YACnBgI,YAAY7zD,GACR64E,MAAM74E,GACND,KAAKkuB,MAAQ,GAEjBwgC,SACI,QAAS1uD,KAAKC,MAAMyuD,OAExB5uD,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACrB,IAAIyuD,EAAS1uD,KAAK0uD,SAEdmiC,EAAa,GAEb7qD,GADO0jB,GAAWx7B,EAAOyiE,IACbjnC,GAAiBx7B,IAC7BrG,EAAYme,EAAYA,EAAUpb,GAAUC,WAAa,KACzD09B,EAAoBviB,EAAYA,EAAUpb,GAAUE,mBAAqB,KAIzEgmE,EAAmB,KACvB,GAAI5iE,GAAS8X,GAAa0oB,EAAQ,CAC9B,IAAIqiC,EAAUrnC,GAAWx7B,EAAO0iE,IAC5BI,EAAWhxF,KAAKkuB,MAAMw7B,GAAWx7B,EAAO0iE,KAExCr7D,EAAOuxB,GAAUmB,SAAS,CAC1BjxC,KAAM+5E,EACN5xF,IAAK6xF,EACL9iE,UAEJ4iE,EAAmBv7D,EAEfA,GAAQA,EAAKy7D,KACbH,EAAat7D,EAAKy7D,GAAU7rE,UAKpC,IAAI4iC,EAAa,CACbz8C,GAAU2B,WACV3B,GAAUE,MACVF,GAAUqB,cACVrB,GAAU4B,WACP5O,OAAOoyC,OAAOljC,KAELk8C,GAAWx7B,EAAO0iE,IAAlC,IACItoD,EAAS,GAWb,OAVIwoD,GACAxyF,OAAOib,KAAKu3E,GAAkBt3E,IAAIy3E,IAC9B3oD,EAAOrQ,KAAK,CACRvZ,GAAIuyE,EACJ/rE,MAAO4rE,EAAiBG,GAAO9yF,KAC/BU,MAAOiyF,EAAiBG,GAAO9yF,SAMvC+yF,GAACC,GAAD,CAAWziC,OAAQA,QAAnB,EACIwiC,GAAA,WAAStlC,UAAU,gBAAnB,EACIslC,GAAA,OAAKtlC,UAAU,YAAf,EACIslC,GAAA,OAAKtlC,UAAU,iBAAf,EACIslC,GAAC5E,GAAD,CAAKvE,SAAS,EAAM7iE,MAAOyC,QAA3B,EACIupE,GAACr+B,GAAD,CACI/B,SAAW18C,IACPpU,KAAKC,MAAM+/B,aAAapV,GAAUC,UAAWzW,GAC7CpU,KAAKC,MAAMggC,+BAA+B7rB,IAE9C24C,MAAOplC,EACP9oB,MAAOgpB,IACXqpE,GAACj+B,GAAD,CACIlG,MAAOplC,EACPuD,QAAS5sB,OAAOib,KAAKpL,IAAoBqL,IAAI1a,IAClC,CAAEomB,MAAOpmB,EAAGD,MAAOsP,GAAmBrP,MAEjDgyD,SAAWjyD,IACPmB,KAAKC,MAAM+/B,aAAapV,GAAUE,kBAAmBjsB,IAEzDA,MAAO0pD,KAEf2oC,GAAC5E,GAAD,CAAKvE,SAAS,EAAM7iE,MAAOyC,QAA3B,EACIupE,GAACnS,GAAD,CAAYrwB,QAAQ,EAAM4vB,WAAa1xD,GAC5BA,GAAQ5sB,KAAKkuB,MAAMw7B,GAAWx7B,EAAO0iE,OAAoBhkE,EAAKlO,GAErE2/D,MAAO/1C,EACP8jB,QAAUx/B,IACN5sB,KAAKm/B,SAAS,CACV5xB,CAACm8C,GAAWx7B,EAAO0iE,KAAiBhkE,EAAKlO,UAM7DwyE,GAAA,OAAKtlC,UAAU,kBAAf,EACIslC,GAACE,GAAD,UACIF,GAACG,GAAD,UACKtpC,EAAaA,EAAWvuC,IAAIktC,GACjBwqC,GAACI,GAAD,CAAc5iC,OAAQhF,GAAax7B,EAAO0iE,GAAelqC,GAC7DxhC,MAAOwhC,EAAI0F,QAAS,KAChBpsD,KAAKC,MAAMo+B,UAAUuyD,GAAelqC,KAF1BA,IAKjB,OAGbwqC,GAACK,GAAD,UACIL,GAACn+B,GAAD,CAASrE,OAAQhF,GAAWx7B,EAAO0iE,UAAnC,EACIM,GAAC5E,GAAD,CAAKpnE,MAAOyC,GAAaogE,SAAS,EAAMC,UAAW,UAAnD,EACK6I,EAAaK,GAACM,GAAAx5D,EAAD,CAAmBy5D,SAAS,SAASpkC,MAAO+gC,SAA5C,EAAoDyC,GAAkC,gcC7D5I,MAAMa,GAAkB,kBAClBC,GAAY,YACZC,GAAkB,kBAClBC,GAAgB,gBAChBC,GAAe,eACfC,GAAW,WACXC,GAAY,mBAwGEC,GAACC,GAAD,OAaQD,GAACE,GAAD,OAEIF,GAACG,GAAD,OAMIH,GAACI,GAAD,OA0DAJ,GAACK,GAAD,OAiBAL,GAACM,GAAD,UACIN,GAACO,GAAD,QAGRP,GAACQ,GAAD,OACAR,GAACS,GAAD,OACAT,GAACU,GAAD,OACAV,GAACW,GAAD,OA2GAX,GAACY,GAAD,OACAZ,GAACa,GAAD,OAEiDb,GAACc,GAAD,UACjDd,GAACe,GAAD,IACAf,GAACgB,GAAD,IACAhB,GAACiB,GAAD,IACAjB,GAACkB,GAAD,IACAlB,GAACmB,GAAD,IACAnB,GAACoB,GAAD,IACApB,GAACqB,GAAD,IACArB,GAACsB,GAAD,IACAtB,GAACuB,GAAD,IACAvB,GAACwB,GAAD,IACAxB,GAACyB,GAAD,IACAzB,GAAC0B,GAAD,IACA1B,GAAC2B,GAAD,IACA3B,GAAC4B,GAAD,IACA5B,GAAC6B,GAAD,IACA7B,GAAC8B,GAAD,IACA9B,GAAC+B,GAAD,IACA/B,GAACgC,GAAD,IACAhC,GAACiC,GAAD,IACAjC,GAACkC,GAAD,IACAlC,GAACmC,GAAD,IACAnC,GAACoC,GAAD,IACApC,GAACqC,GAAD,IACArC,GAACsC,GAAD,QAE6CtC,GAACc,GAAD,UAC7Cd,GAACuC,GAAD,IACAvC,GAACwC,GAAD,IACAxC,GAACyC,GAAD,IACAzC,GAAC0C,GAAD,IACA1C,GAAC2C,GAAD,IACA3C,GAAC4C,GAAD,IACA5C,GAAC6C,GAAD,QAE6C7C,GAAC8C,GAAD,OACA9C,GAAC+C,GAAD,IAS7E,MAAMC,GAAe,eACfC,GAAc,cACdC,GAAgB,gBAChBC,GAAY,YACHxrC,gBA7Wf,cAAwBkC,YAEpBwtB,oBACIt5E,KAAKC,MAAMk/B,WAEfk2D,WACI,IAAInnE,MAAEA,GAAUluB,KAAKC,MACrB,OAAOypD,GAASx7B,EAAOw7B,GAAYA,IAAsB,mBAAqB,GAElF4rC,yBACI,IAAI9pE,EAAS,IACT0C,MAAEA,GAAUluB,KAAKC,MACrB,GAAIypD,GAAWx7B,EAAOw7B,IAAoB,CAEtC,OAAQA,GADUA,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACfj6C,GAAe8C,WAChD,KAAKjH,GAAUuB,OACf,KAAKvB,GAAUwB,OACX0e,EAAOyM,KAAK,CACRm0B,QAAS,KACLpsD,KAAKC,MAAMo+B,UAAUuzD,GAAiBp6E,GAAe3B,eAEzDi3C,KAAM,iBACN5nC,MAAOyC,GACR,CACKykC,QAAS,KACLpsD,KAAKC,MAAMo+B,UAAUuzD,GAAiBp6E,GAAevV,gBAEzD6qD,KAAM,gBACN5nC,MAAOyC,GACR,CACCykC,QAAS,KACLpsD,KAAKC,MAAMo+B,UAAUuzD,GAAiBp6E,GAAexV,kBAEzD8qD,KAAM,eACN5nC,MAAOyC,GACR,CACCykC,QAAS,KACLpsD,KAAKC,MAAMo+B,UAAUuzD,GAAiBp6E,GAAezV,WAEzD+qD,KAAM,eACN5nC,MAAOyC,GACR,CACCykC,QAAS,KACLpsD,KAAKC,MAAMo+B,UAAUuzD,GAAiBp6E,GAAe1V,gBAEzDgrD,KAAM,iBACN5nC,MAAOyC,IAEf,MACJ,KAAKrc,GAAUO,WACf,KAAKP,GAAUM,iBACf,KAAKN,GAAUI,gBACf,KAAKJ,GAAUK,OACX6f,EAAOyM,KAAK,CACRm0B,QAAS,KACLpsD,KAAKC,MAAMo+B,UAAUuzD,GAAiBp6E,GAAe3V,YAEzDirD,KAAM,mBACN5nC,MAAOyC,IAInB6D,EAAOyM,KAAK,CACRm0B,QAAS,KACLpsD,KAAKC,MAAMo+B,UAAUuzD,IAAiB,IAE1C9kC,KAAM,aACN5nC,MAAOyC,IAGf,OAAO6D,EAEX1rB,SACI,IAAIouB,MAAEA,GAAUluB,KAAKC,MACjBs1F,EAAmB7rC,GAAWx7B,EAAOw7B,IACrC8rC,EAAY,EACZC,EAAW,EACXF,IACAC,EAAYD,EAAiBvmC,MAC7BymC,EAAWF,EAAiBnb,KAEhC,IAAIkb,EAAyBt1F,KAAKs1F,yBAC9Bx4D,EAAc4sB,GAASx7B,EAAOw7B,GAAWx7B,EAAOw7B,KACpD,IAAI1+B,EAAQ0+B,GAAoBx7B,GAC5B4R,EAAY4pB,GAAiBx7B,GAC7B0J,EAAS8xB,GAAmBx7B,GAC5BwnE,EAAehsC,GAAWx7B,EAAO4jE,IACjCxqE,EAAU,QACVI,EAAY,KACZoY,IACAxY,KAAawY,EAAUxY,QAAQC,SAASuY,EAAUxY,QAAQE,SAASsY,EAAUxY,QAAQG,QACrFC,EAAYoY,EAAUpY,WAE1B,IAAIiuE,EAAc,KAIlB,OAHIjsC,GAAWx7B,EAAOw7B,MAClBisC,E9MyyCL,SAAyB3qE,EAAOE,GACnC,IAAIgH,EAASwD,GAAiB1K,EAAOE,GACrC,OAAIgH,EACOlH,EAAMvC,QAAQyJ,GAElB,K8M9yCe0jE,CAAgB91D,EAAW4pB,GAAWx7B,EAAOw7B,MAG3DuoC,GAAA,OAAKrmC,4CAA6C5rD,KAAKq1F,aAAchoC,MAAO,CACxEc,OAAQ,OACRkB,UAAW,eAFf,EAII4iC,GAAA,OAAKrmC,UAAU,UAAUyB,MAAO,CAAEc,OAAQ,eAA1C,EAAA0nC,GAEI5D,GAAC6D,GAAD,CACI9O,QAASt9B,GAAWx7B,EAAOw7B,IAC3Bw9B,KAAMsO,EAAY,GAClB5oC,KAAMlD,GAAWx7B,EAAOyjE,IACxBxK,SAAU,KACNnnF,KAAKC,MAAMi+B,aAAayzD,KAE5BvX,IAAKqb,EAAW,GAChB5O,UAAWyO,IAEfrD,GAAA,OAAK8D,WAAS,kBAAd,EACI9D,GAAC+D,GAAD,UAAAC,GAEIhE,GAACiE,GAAD,UAAAC,GAEIlE,GAACmE,GAAD,UACK1sC,GAAWx7B,EAAOw7B,IAAqBuoC,GAACoE,GAAD,CAAcvpC,KAAM,qBAAsBV,QAAS,KACvFpsD,KAAKC,MAAMmiC,eAAesnB,GAA+BA,GAAWx7B,EAAOw7B,KAC3E1pD,KAAKC,MAAMo+B,UAAUqrB,GAAmB,SACpC,KAJZ4sC,GAMIrE,GAACoE,GAAD,CAAcvpC,KAAM,aAAcV,QAAS,KACvCpsD,KAAKC,MAAMmiC,eAAesnB,IAC1B1pD,KAAKC,MAAMo+B,UAAUqzD,IAAiB,GACtC1xF,KAAKC,MAAMo+B,UAAU42D,GAAcC,OAGvCjD,GAACoE,GAAD,CAAcvpC,KAAM,cAAeV,QAAS,KACxCpsD,KAAKC,MAAMmiC,eAAesnB,GAAiB,CAAEhrC,GAAIgrC,GAAWx7B,EAAOw7B,MACnE1pD,KAAKC,MAAMo+B,UAAUqzD,IAAiB,GACtC1xF,KAAKC,MAAMo+B,UAAU42D,GAAcC,OAEvCjD,GAACoE,GAAD,CAAcjqC,QAAS,KACnBpsD,KAAKC,MAAMi+B,aAAa,yBAKxC+zD,GAACxM,GAAD,UACIwM,GAACtM,GAAD,UACIsM,GAACsE,GAAD,CAAerxE,MAAOyC,KACtBsqE,GAAC7M,GAAD,CAAc12B,OAAQgnC,IAAiB3D,KAAa2D,EAAc5mC,WAAW,EAAM5pC,MAAOyC,GAAgBmlC,KAAM,YAAaV,QAAS,KAClIpsD,KAAKC,MAAMo+B,UAAUyzD,GAAcC,OAEvCE,GAAC7M,GAAD,CAAc12B,OAAQgnC,IAAiB1D,GAAWljC,WAAW,EAAM5pC,MAAOyC,GAAiBmlC,KAAM,aAAcV,QAAS,KACpHpsD,KAAKC,MAAMo+B,UAAUyzD,GAAcE,OAGtC2D,GAAeA,EAAYvpE,WAAa6lE,GAACsE,GAAD,CAAerxE,MAAOywE,EAAYvpE,WAAWpV,OAAW,KACjGi7E,GAACsE,GAAD,CAAerxE,MAAOyC,KAEtBsqE,GAAC7M,GAAD,CACIx4B,KAAMlD,GAAWx7B,EAAOsoE,IACxB9nC,OAAQhF,GAAWx7B,EAAOsoE,IAC1BtxE,MAAOyC,GACPinC,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAas4D,WALhC,EAOIvE,GAAC7M,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,EAAYmlC,KAAM,aAAcV,QAAS,KAC3EpsD,KAAKC,MAAMykC,6BAEfutD,GAAC7M,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,GAAamlC,KAAM,oBAAqBV,QAAS,KACnFpsD,KAAKC,MAAMyjC,8BAEfuuD,GAAC7M,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,GAAamlC,KAAM,aAAcV,QAAS,KAC5EpsD,KAAKC,MAAM4kC,qBAEfotD,GAAC7M,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,GAAiBmlC,KAAM,YAAaV,QAAS,KAC/EpsD,KAAKC,MAAM2nD,qBAEfqqC,GAAC7M,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,GAAqBmlC,KAAM,YAAaV,QAAS,KACnFpsD,KAAKC,MAAM2nD,gBAAgB,CAAEC,WAAW,OAE5CoqC,GAAC7M,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOyC,GAA4BmlC,KAAM,oBAAqBV,QAAS,KAClGpsD,KAAKC,MAAM+kC,yBAEfitD,GAAC7M,GAAD,CAAclgE,MAAOoC,EAASwnC,WAAW,IACxCpnC,EAAYuqE,GAAC7M,GAAD,CAAct2B,WAAW,EAAM5pC,MAAOwC,EAAWolC,KAAM,cAAkB,KA1B1F2pC,IA8BAxE,GAAC7M,GAAD,CACIx4B,KAAMlD,GAAWx7B,EAAOsoE,IACxB9nC,OAAQhF,GAAWx7B,EAAOsoE,IAC1BtxE,MAAOyC,EACPinC,OAAQ,KACJ5uD,KAAKC,MAAMi+B,aAAas4D,WALhC,EAOIvE,GAACM,GAAD,UACIN,GAACyE,GAAD,CAAQhrC,IAAK,GAAIvB,IAAK,IAClB2G,SAAWjyD,IACPmB,KAAKC,MAAMo+B,UAAUwzD,GAAehzF,IAExCA,MAAO6qD,GAAWx7B,EAAO2jE,OAZrC8E,IA1CJC,GAAAC,GAAAC,GAAAC,KAkEJ9E,GAAC+E,GAAD,UACI/E,GAACgF,GAAD,CAAUvoC,OAAQhF,GAAWx7B,EAAO4jE,MAAkBE,KACtDC,GAACiF,GAAD,CACIvc,aAAcjxB,GAAWx7B,EAAO2jE,IAChCrV,YAAa,CAACtoD,EAAQijE,KAClB,GAAIztC,GAAWx7B,EAAO0jE,IAAkB,CACpC,IAAIwF,EAAa1tC,GAAWx7B,EAAOw7B,IACnCt3B,QAAQgS,kBAAkBgzD,eAAwBljE,KAClD,IAAI9H,EAAas9B,GAAWx7B,EAAO0jE,KAChB,IAAfxlE,EACApsB,KAAKC,MAAMmiC,eAAesnB,GAAc,CACpC/7B,OAAQuG,EACRxG,OAAQ0pE,IAIZp3F,KAAKC,MAAMmiC,eAAesnB,GAAc,CACpC/7B,OAAQuG,EACRxG,OAAQ0pE,EACRhrE,eAGRpsB,KAAKC,MAAMo+B,UAAUuzD,IAAiB,GACtC5xF,KAAKC,MAAMo+B,UAAUqrB,GAAmB,WAGwB,IAA5D,CAACA,GAAWx7B,EAAOw7B,KAAoB/1C,QAAQugB,IAC/Cl0B,KAAKC,MAAMw+B,aAAavK,GACxBl0B,KAAKC,MAAMo+B,UAAUqrB,GAAsBytC,GAC3Cn3F,KAAKC,MAAMo+B,UAAUqzD,IAAiB,IAGtC1xF,KAAKC,MAAMw+B,aAAa,OAIpC69C,YAAa,CAACpqD,EAAQilE,KAClB/kE,QAAQgS,iBAAiBlS,KACzBlyB,KAAKC,MAAMo+B,UAAUqrB,GAAmBx3B,GAExClyB,KAAKC,MAAMo+B,UAAUqrB,GAAkBx3B,IAG3CuqD,cAAe/yB,GAAWjrB,aAC1Bk/C,cAAe,CAACj0B,GAAWx7B,EAAOw7B,KAAoBj2C,OAAOF,GAAKA,GAClEgqE,cAAe,CAAC7zB,GAAWx7B,EAAOw7B,KAAoBj2C,OAAOF,GAAKA,GAClEyX,MAAO4M,GAAU5M,KAEzBinE,GAACvM,GAAD,CAAS94B,KAAMlD,GAAWx7B,EAAOwjE,IAAkBliC,UAAW9F,GAAmBx7B,EAAOw7B,GAAc/8C,qBAAtG,EACIslF,GAACoF,GAAD,UACIpF,GAACqF,GAAD,CACIxqC,KAAK,YACL4B,OAAQhF,GAAax7B,EAAO+mE,GAAcC,IAAc9oC,QAAS,KAC7DpsD,KAAKC,MAAMo+B,UAAU42D,GAAcC,OAE3CjD,GAACqF,GAAD,CAAY5oC,OAAQhF,GAAax7B,EAAO+mE,GAAcE,IAAgB/oC,QAAS,KAC3EpsD,KAAKC,MAAMo+B,UAAU42D,GAAcE,OAEvClD,GAACqF,GAAD,CAAY5oC,OAAQhF,GAAax7B,EAAO+mE,GAAcG,IAAYhpC,QAAS,KACvEpsD,KAAKC,MAAMo+B,UAAU42D,GAAcG,QAG1C1rC,GAAax7B,EAAO+mE,GAAcC,IAAgBjD,GAACc,GAAD,UAC9Cj2D,IAAgBxvB,GAAmBo8C,GAAgB5sB,EAAartB,GAAe8C,WAAc0/E,GAACj/B,GAAD,UAC1Fi/B,GAACp/B,GAAD,CACI9F,MAAOplC,EACP9oB,MAAOi+B,EAAY1Q,WAAa0Q,EAAY1Q,WAAWgL,KAAO,GAC9D05B,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAAsB,CAAEhrC,GAAIoe,EAAYpe,GAAI7f,aAE7E8P,GAAuBmuB,EAAY1Q,WAAas9B,GAAgB5sB,EAAa4sB,GAAmBn3C,UAAY,MAAQ,KAAQ0/E,GAACh/B,GAAD,CACzHrC,UAAWlH,GAAkB5sB,GAC7BiwB,MAAOplC,EACPuD,QAAS5sB,OAAOib,KAAKmwC,IAAej2C,OAAOF,IAAM5E,GAAuB+6C,GAAcn2C,KAAKwkB,KAAK,CAACC,EAAG7Z,IAAM6Z,EAAE2nD,cAAcxhE,IAAI3E,IAAIjG,IACvH,CACH1U,MAAO6qD,GAAcn2C,GACrB2R,MAAO3R,KAGfu9C,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAAEp6B,KAAMo6B,GAAmBn3C,SAAUmM,GAAIoe,EAAYpe,GAAI7f,WAEjHA,MAAOi+B,EAAY1Q,WAAas9B,GAAgB5sB,EAAa4sB,GAAmBn3C,UAAY,OAChG0/E,GAACn/B,GAAD,CACI/F,MAAOplC,EACP9oB,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBhoD,WACvDovD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBhoD,UACzBgd,GAAIoe,EAAYpe,GAChB7f,aAGZozF,GAACn/B,GAAD,CACI/F,MAAOplC,EACP9oB,MAAO6qD,GAAgB5sB,EAAa4sB,GAAmBjoD,QACvDqvD,SAAWjyD,IACPmB,KAAKC,MAAMmiC,eAAesnB,GAA0B,CAChDp6B,KAAMo6B,GAAmBjoD,OACzBid,GAAIoe,EAAYpe,GAChB7f,cAGE,KAzC6B04F,GAAAC,IA4C9B,KACpB9tC,GAAax7B,EAAO+mE,GAAcE,IAAlCsC,GAyBoB,KACpB/tC,GAAax7B,EAAO+mE,GAAcG,IAAlCsC,GAQoB,KACpBhuC,GAAax7B,EAAO+mE,GAAcG,IAAlCuC,GAAqF,KACrFjuC,GAAax7B,EAAO+mE,GAAcG,IAAlCwC,GAAoF,KACpFluC,GAAax7B,EAAO+mE,GAAcG,IAAcnD,GAAC+C,GAAD,CAA8BnQ,GAAIvlE,GAAUolE,SAAUj1E,GAAevD,gBAAiByQ,SAAUrR,GAAUY,gBAAiBy4E,SAAUl1E,GAAegB,cAAmB,q3BC3a1OonF,GCRK,IACbC,GAACC,EAAD,UACED,GAACE,EAAA,OAAD,UACEF,GAACE,EAAA,MAAD,CAAOpwE,KAAMqwE,EAAOC,KAAMruC,UAAWsuC,ODKjC,6GEVH,MAAMC,GAAoB,oBACpBC,GAAoB,oBAE1B,SAASC,KACd,MAAO,CACLthF,KAAMohF,IAIH,SAASG,KACd,MAAO,CACLvhF,KAAMqhF,IAIH,SAASG,KACd,MAAO,CAAC76D,EAAoBQ,KAC1B,MAAMs6D,QAAEA,GAAYt6D,IAEhBs6D,EAAU,GAAM,GAIpB96D,EAAS26D,OAIN,SAASI,GAAermB,EAAgB,KAC7C,OAAQ10C,IACNo0C,WAAW,KACTp0C,EAAS26D,OACRjmB,IC9BQ,SAASomB,GAAQvqE,EAAgB,EAAGyqE,GACjD,OAAQA,EAAO3hF,MACb,KAAKohF,GACH,OAAOlqE,EAAQ,EACjB,KAAKmqE,GACH,OAAOnqE,EAAQ,EACjB,QACE,OAAOA,GCAE,SAASyO,GAAUzO,EAAOyqE,GAErC,OADAzqE,EAAQA,GAHD,GAICyqE,EAAO3hF,MACX,KAAK0yC,GACD,OAbZ,SAAkBx7B,EAAOyqE,GACrB,IAAIC,EAAW,IAAK1qE,GAGpB,OAFA0qE,EAASD,EAAOj8D,SAAW,IAAKk8D,EAASD,EAAOj8D,UAAY,IAC5Dk8D,EAASD,EAAOj8D,SAASi8D,EAAO/rE,MAAQ+rE,EAAO95F,MACxC+5F,EASQC,CAAS3qE,EAAOyqE,GAC3B,QACI,OAAOzqE,GCZJ,SAAS4qE,GAAkBC,GACxC,OAAOC,0BAAgB,CACrBC,OAAQC,wBAAcH,GACtBN,WACA97D,eCAJ,MAAMo8D,GAAUI,+BAEIL,GAAkBC,ICLtC,MAAMA,GAAUI,+BACVC,GAAcN,GAAkBC,IAChCE,GAASI,2BAAiBN,IAC1BO,GAAWC,0BAAgBC,KAAOP,ICLxC,MAAMQ,GDWS,CAAEC,eAJjB,SAAwBC,GACtB,OAAOC,sBAAYR,GAAaO,EAAcL,KAGfP,QAAOA,KCNzBW,eAAcA,IAAKD,IAEnBV,QAAOA,IAAKU,qdCJ3B,MAAMI,GAAQH,KAEd55F,iBACEg6F,GAACC,EAAA,aAAD,UACED,GTJW,cAAmBhuC,YAChChsD,SACE,MAAM+5F,MAAEA,EAAFd,QAASA,GAAY/4F,KAAKC,MAChC,OACE43F,GAACmC,EAAA,SAAD,CAAUH,MAAOA,QAAjB,EACEhC,GAACoC,EAAA,gBAAD,CAAiBlB,QAASA,QAA1B,EAAAmB,OSDJ,CAAML,MAAOA,GAAOd,QAASA,MAE/B9jC,SAASklC,eAAe,sGCX1B77F,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAEAnB,EAAA08F,cAAA18F,EAAA28F,oBAAA38F,EAAA48F,QAAA58F,EAAA68F,WAAA78F,EAAA88F,kBAAA98F,EAAA+8F,aAAAx2D,EAEA,IAAAy2D,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAE5IsQ,EAAA,WAAgC,SAAAC,EAAAltE,EAAA1tB,GAA2C,QAAArC,EAAA,EAAgBA,EAAAqC,EAAAgd,OAAkBrf,IAAA,CAAO,IAAAk9F,EAAA76F,EAAArC,GAA2Bk9F,EAAAt8F,WAAAs8F,EAAAt8F,aAAA,EAAwDs8F,EAAAlwC,cAAA,EAAgC,UAAAkwC,MAAAnwC,UAAA,GAAuDrsD,OAAAC,eAAAovB,EAAAmtE,EAAA37F,IAAA27F,IAA+D,gBAAAC,EAAAC,EAAAC,GAA2L,OAAlID,GAAAH,EAAAE,EAAAv7F,UAAAw7F,GAAqEC,GAAAJ,EAAAE,EAAAE,GAA6DF,GAAxhB,GAEAG,EAAa19F,EAAQ,SAErB29F,EAAAC,EAAAF,GAIAG,EAAAD,EAFiB59F,EAAQ,uCAIzB89F,EAAkB99F,EAAQ,eAE1B+9F,EAAmB/9F,EAAQ,gBAE3Bg+F,EAAeh+F,EAAQ,wDAEvB,SAAA49F,EAAA9Q,GAAsC,OAAAA,KAAAtrF,WAAAsrF,EAAA,CAAuCmR,QAAAnR,GAQ7E,IAAAoR,EAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,MACAC,EAAAF,EAAAE,KAQAC,EAAA,SAAAC,GAGA,SAAAD,EAAA77F,EAAA+7F,IAnBA,SAAApvD,EAAAmuD,GAAiD,KAAAnuD,aAAAmuD,GAA0C,UAAA7nB,UAAA,qCAoB3F+oB,CAAAj8F,KAAA87F,GAEA,IAAAI,EApBA,SAAAh+E,EAAAngB,GAAiD,IAAAmgB,EAAa,UAAAi+E,eAAA,6DAAyF,OAAAp+F,GAAA,iBAAAA,GAAA,mBAAAA,EAAAmgB,EAAAngB,EAoBvJq+F,CAAAp8F,MAAA87F,EAAAO,WAAA/9F,OAAAg+F,eAAAR,IAAA/9F,KAAAiC,KAAAC,IAEAi8F,EAAAK,kBAAA,EAGAL,EAAAM,YAAAR,EAAAnC,MAAA4C,UAAA,WAEA,IAAAC,EAAAb,EAAAD,EAAAI,EAAAnC,MAAA17D,WAAA,wBACAw+D,EAAAD,EAAAE,SACAC,EAAAH,EAAAI,OACAC,EAAAL,EAAAM,KAIAC,EAAAh9F,EAAA84F,QAAAzgB,SACA4kB,EAAAD,EAAAL,SACAO,EAAAF,EAAAH,OACAM,EAAAH,EAAAD,KAIAE,IAAAP,GAAAQ,IAAAN,GAAAO,IAAAL,IACAb,EAAAK,kBAAA,EAEAt8F,EAAA84F,QAAA9gE,KAAA,CACA2kE,SAAAD,EACAG,OAAAD,EACAG,KAAAD,OAKA,IAAAM,EAAA,SAAA/kB,EAAAqgB,GAEAuD,EAAAK,iBAGAL,EAAAK,kBAAA,EAFAt8F,EAAAq9F,kBAAAhlB,EAAAqgB,IAUA,OAHAuD,EAAAqB,SAAAt9F,EAAA84F,QAAAyE,OAAAH,GAEAA,EAAAp9F,EAAA84F,QAAAzgB,SAAAr4E,EAAA84F,QAAAJ,QACAuD,EAyBA,OAxFA,SAAAuB,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAxqB,UAAA,kEAAAwqB,GAAuGD,EAAAj+F,UAAAlB,OAAAY,OAAAw+F,KAAAl+F,UAAA,CAAyEs0D,YAAA,CAAej1D,MAAA4+F,EAAAj/F,YAAA,EAAAmsD,UAAA,EAAAC,cAAA,KAA6E8yC,IAAAp/F,OAAAq/F,eAAAr/F,OAAAq/F,eAAAF,EAAAC,GAAAD,EAAApB,UAAAqB,GAarXE,CAAA9B,EA4EG+B,EAAA,cAvBHjD,EAAAkB,EAAA,EACA38F,IAAA,uBACAN,MAAA,WACAmB,KAAAu9F,WACAv9F,KAAAw8F,gBAEK,CACLr9F,IAAA,SACAN,MAAA,WACA,IAAAi/F,EAAA99F,KAAAC,MACA84F,EAAA+E,EAAA/E,QACAh5F,EAAA+9F,EAAA/9F,SAGA,OAAA89F,EAAA,SAAApwC,cACAowC,EAAA,UACA,CAAW9E,WACXh5F,OAKA+7F,EA5EA,GA+EAA,EAAAiC,aAAA,CACAlE,MAAAgE,EAAA,aAAAG,MAAA,CACA7/D,SAAA0/D,EAAA,aAAA1nE,KAAA8nE,WACAxB,UAAAoB,EAAA,aAAA1nE,KAAA8nE,aACKA,YAGLnC,EAAAriF,UAAA,CACAs/E,QAAA8E,EAAA,aAAAG,MAAA,CACArF,OAAAkF,EAAA,aAAArkC,OAAAykC,WACAT,OAAAK,EAAA,aAAA1nE,KAAA8nE,WACA3lB,SAAAulB,EAAA,aAAAv+F,OAAA2+F,WACAhmE,KAAA4lE,EAAA,aAAA1nE,KAAA8nE,aACKA,WACL3lB,SAAAulB,EAAA,aAAAK,UAAA,CAAAL,EAAA,aAAAv+F,OAAAu+F,EAAA,aAAArkC,SAAAykC,WACAtF,OAAAkF,EAAA,aAAArkC,OAAAykC,WACAE,SAAAN,EAAA,aAAArkC,OACAz5D,SAAA89F,EAAA,aAAAK,UAAA,CAAAL,EAAA,aAAA1nE,KAAA0nE,EAAA,aAAArvE,OACA8uE,kBAAAO,EAAA,aAAA1nE,KAAA8nE,YAkBA,OAAAJ,EAAA,UAAAA,CAfA,SAAA3vE,GACA,OACAyqE,OAAAiD,EAAA1tE,EAAA,qBACAoqD,SAAAsjB,EAAA1tE,EAAA,yBAIA,SAAAyP,GACA,OACA2/D,kBAAA,SAAAhlB,EAAAqgB,GACA,OAAAh7D,EAAAkgE,EAAA,oBAAAA,CAAAvlB,EAAAqgB,OAKAkF,CAAA/B,IAKA,SAAAsC,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAbAtC,EAAA+9F,QAAAoC,EAAA,yBAmBA,IA0CAS,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,gBACA,OAAAhE,EAAApvC,UAEA,gBACA,OAAAuvC,EAAAI,QAEA,wBACA,OAAAD,EAAA8B,kBAEA,cACA,OAAAhC,EAAAxxC,QAEA,4BACA,OAAA4xC,EAEA,YACA,OAAAP,EAAAM,QAEA,aACA,OAAAF,EAAA4D,OAGA,OApCAC,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EA0DA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IAhJA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAoJA,IAAAM,OAAA,IAAAnE,EAAA,YAAAhB,EAAAgB,GAEA,SAAAoE,EAAA3hG,EAAAU,GACAP,OAAAC,eAAAm9F,EAAAv9F,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIA,WAAAi1C,GAAA,aAAAA,IAAAvhG,OAAAyhG,aAAArE,KACAoE,EAAA,UAAAjC,GACAiC,EAAA,oBAAAjC,GACAiC,EAAA,aAAAT,GACAS,EAAA,UAAAT,GACAS,EAAA,YAAAR,GACAQ,EAAA,sBAAAR,GACAQ,EAAA,WAAAP,GACAO,EAAA,gBAAAb,IAGAvhG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,uFCtZA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAGA,IAAA67F,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAM5I0V,EAAAtiG,EAAAsiG,gBAAA,2BAiBAC,GAfAviG,EAAA4/F,kBAAA,SAAAhlB,EAAAqgB,GACA,OACA3hF,KAAA6mF,EAAA,mBACAqC,QAAA,CACA5nB,WACAqgB,YAUAj7F,EAAAuiG,oBAAA,gCAEAE,EAAA,SAAA36E,GACA,kBACA,QAAA46E,EAAAnhF,UAAAhC,OAAA6Y,EAAApF,MAAA0vE,GAAAp2D,EAAA,EAAmEA,EAAAo2D,EAAap2D,IAChFlU,EAAAkU,GAAA/qB,UAAA+qB,GAGA,OACAhzB,KAAA6mF,EAAA,uBACAqC,QAAA,CACA16E,SACAsQ,WAWAmC,EAAAv6B,EAAAu6B,KAAA4lE,EAAA,iBAAAA,CAAA,QACA12E,EAAAzpB,EAAAypB,QAAA02E,EAAA,iBAAAA,CAAA,WACAwC,EAAA3iG,EAAA2iG,GAAAxC,EAAA,iBAAAA,CAAA,MACAyC,EAAA5iG,EAAA4iG,OAAAzC,EAAA,iBAAAA,CAAA,UACA0C,EAAA7iG,EAAA6iG,UAAA1C,EAAA,iBAAAA,CAAA,aAEAngG,EAAA8iG,cAAA,CAA6CvoE,KAAA4lE,EAAA,QAAA12E,QAAA02E,EAAA,WAAAwC,GAAAxC,EAAA,MAAAyC,OAAAzC,EAAA,UAAA0C,UAAA1C,EAAA,cAE7C,SAAAO,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAMA,IA0CAs+F,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,sBACA,OAAAc,EAEA,0BACA,OAAAC,EAEA,qBACA,OAAAE,EAEA,WACA,OAAAloE,EAEA,cACA,OAAA9Q,EAEA,SACA,OAAAk5E,EAEA,aACA,OAAAC,EAEA,gBACA,OAAAC,EAGA,OAvCAnB,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EA6DA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IAnJA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAuJA7hG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,EACAvhG,EAAA+9F,QAAAwD,yFC9RA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAEAnB,EAAA08F,cAAA18F,EAAA28F,oBAAA38F,EAAA48F,QAAA58F,EAAA68F,WAAA78F,EAAA88F,kBAAA98F,EAAA+8F,aAAAx2D,EAEA,IAAAy2D,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAE5I58B,EAAApvD,OAAAy+E,QAAA,SAAApvD,GAAmD,QAAA/vB,EAAA,EAAgBA,EAAAqhB,UAAAhC,OAAsBrf,IAAA,CAAO,IAAA8vB,EAAAzO,UAAArhB,GAA2B,QAAAuB,KAAAuuB,EAA0BpvB,OAAAkB,UAAAC,eAAA1B,KAAA2vB,EAAAvuB,KAAyDwuB,EAAAxuB,GAAAuuB,EAAAvuB,IAAiC,OAAAwuB,GAI/O8yE,EAoBA,SAAAnW,GAAuC,GAAAA,KAAAtrF,WAA6B,OAAAsrF,EAAqB,IAAAoW,EAAA,GAAiB,SAAApW,EAAmB,QAAAnrF,KAAAmrF,EAAuBhsF,OAAAkB,UAAAC,eAAA1B,KAAAusF,EAAAnrF,KAAAuhG,EAAAvhG,GAAAmrF,EAAAnrF,IAAsG,OAAtBuhG,EAAAjF,QAAAnR,EAAsBoW,EApB1PC,CAFenjG,EAAQ,yDAMvBojG,EAAAxF,EAFuB59F,EAAQ,iEAM/BqjG,EAAAzF,EAFe59F,EAAQ,yDAMvBsjG,EAAA1F,EAFkB59F,EAAQ,4DAM1BujG,EAAA3F,EAFiB59F,EAAQ,2DAIzB,SAAA49F,EAAA9Q,GAAsC,OAAAA,KAAAtrF,WAAAsrF,EAAA,CAAuCmR,QAAAnR,GAI7E,IAAA0W,EAAA,SAAArF,GACA,OAAAjuC,EAAA,GAAoBmwC,EAAA,WAAAA,EAAA,kBAAAA,CAAAlC,GAAA,CACpBG,gBAAA+B,EAAA,wBAAAA,CAAAlC,GACAzC,cAAA2E,EAAA,sBAAAA,CAAAlC,GACAtC,iBAAAwE,EAAA,uBAMA,SAAAO,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAbAtC,EAAA+9F,QAAAoC,EAAA,aAmBA,IA0CAS,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,cACA,OAiIA,WACA,IAAA+B,EAAAhiF,UAAAhC,OAAA,QAAAgnB,IAAAhlB,UAAA,GAAAA,UAAA,MAIA,OAHA3gB,OAAAib,KAAA0nF,GAAAxtF,OAAA,SAAAytF,GACA,kBAAAA,GAAA,YAAAA,GAAA,cAAAA,GAAA,aAAAA,GAAA,sBAAAA,GAAA,eAAAA,GAAA,wBAAAA,GAAA,kBAAAA,IAEAC,OAAA,SAAAC,EAAAF,GAEA,OADAE,EAAAF,GAAAD,EAAAC,GACAE,GACG,IAzIHC,CAAAZ,GAEA,sBACA,OAAAM,EAAAtF,QAEA,4BACA,OAAAmF,EAAAnF,QAEA,0BACA,OAAAoF,EAAApF,QAEA,uBACA,OAAAqF,EAAArF,QAEA,gBACA,OAAAuF,EAGA,OAjCA5B,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EAuDA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IA7IA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAiJA,IAAAM,OAAA,IAAAmB,EAAA,YAAAtG,EAAAsG,GAEA,SAAAlB,EAAA3hG,EAAAU,GACAP,OAAAC,eAAAyiG,EAAA7iG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIA,WAAAi1C,GAAA,aAAAA,IAAAvhG,OAAAyhG,aAAAiB,KACAlB,EAAA,UAAAjC,GACAiC,EAAA,oBAAAjC,GACAiC,EAAA,aAAAT,GACAS,EAAA,UAAAT,GACAS,EAAA,YAAAR,GACAQ,EAAA,sBAAAR,GACAQ,EAAA,WAAAP,GACAO,EAAA,gBAAAb,IAcAvhG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,qFCxSA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAEAnB,EAAA08F,cAAA18F,EAAA28F,oBAAA38F,EAAA48F,QAAA58F,EAAA68F,WAAA78F,EAAA88F,kBAAA98F,EAAA+8F,QAAA/8F,EAAA4jG,oBAAA5jG,EAAA6jG,UAAA7jG,EAAA8jG,YAAA9jG,EAAA27F,iBAAA37F,EAAAw7F,cAAAx7F,EAAAo+F,gBAAAp+F,EAAA8iG,cAAA9iG,EAAA6iG,UAAA7iG,EAAA4iG,OAAA5iG,EAAA2iG,GAAA3iG,EAAAypB,QAAAzpB,EAAAu6B,KAAAv6B,EAAAuiG,oBAAAviG,EAAAsiG,qBAAA/7D,EAEA,IAAAy2D,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAI5ImX,EAAArG,EAFiB59F,EAAQ,2DAMzBkkG,EAAAtG,EAFa59F,EAAQ,uEAIrB,SAAA49F,EAAA9Q,GAAsC,OAAAA,KAAAtrF,WAAAsrF,EAAA,CAAuCmR,QAAAnR,GAE7E,IAAAyR,EAAA8B,EAAA,YAAAA,GAAA,mBAEAmC,EAAAjE,EAAAiE,gBACAC,EAAAlE,EAAAkE,oBACAhoE,EAAA8jE,EAAA9jE,KACA9Q,EAAA40E,EAAA50E,QACAk5E,EAAAtE,EAAAsE,GACAC,EAAAvE,EAAAuE,OACAC,EAAAxE,EAAAwE,UACAC,EAAAzE,EAAAyE,cACA1E,EAAAC,EAAAD,gBACA5C,EAAA6C,EAAA7C,cACAG,EAAA0C,EAAA1C,iBACAmI,EAAAzF,EAAAyF,YACAD,EAAAxF,EAAAwF,UACAD,EAAAvF,EAAAuF,oBAgBA,SAAAlD,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OA1BAtC,EAAAsiG,kBACAtiG,EAAAuiG,sBACAviG,EAAAu6B,OACAv6B,EAAAypB,UACAzpB,EAAA2iG,KACA3iG,EAAA4iG,SACA5iG,EAAA6iG,YACA7iG,EAAA8iG,gBACA9iG,EAAAo+F,kBACAp+F,EAAAw7F,gBACAx7F,EAAA27F,mBACA37F,EAAA8jG,cACA9jG,EAAA6jG,YACA7jG,EAAA4jG,sBAmBA,IA0CAhD,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,gBACA,OAAAuC,EAAAhG,QAEA,qBACA,OAAAiG,EAAAjG,QAGA,OArBA2D,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EA2CA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IAjIA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAqIA7hG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,EACAvhG,EAAA+9F,QAAAwD,0FClQA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAEAnB,EAAA08F,cAAA18F,EAAA28F,oBAAA38F,EAAA48F,QAAA58F,EAAA68F,WAAA78F,EAAA88F,kBAAA98F,EAAA+8F,aAAAx2D,EAEA,IAAAy2D,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAE5IkR,EAAeh+F,EAAQ,wDASvB,IAAA67F,EAAA,SAAAN,GACA,gBAAAc,GACA,gBAAAxhC,GACA,gBAAAsgC,GAEA,GAAAA,EAAA3hF,OAAA6mF,EAAA,uBACA,OAAAxlC,EAAAsgC,GAGA,IAAAgJ,EAAAhJ,EAAAuH,QACA16E,EAAAm8E,EAAAn8E,OACAsQ,EAAA6rE,EAAA7rE,KAEAijE,EAAAvzE,GAAAsJ,MAAAiqE,EApBA,SAAA6I,GAAkC,GAAAlxE,MAAAC,QAAAixE,GAAA,CAA0B,QAAAhkG,EAAA,EAAAikG,EAAAnxE,MAAAkxE,EAAA3kF,QAA0Crf,EAAAgkG,EAAA3kF,OAAgBrf,IAAOikG,EAAAjkG,GAAAgkG,EAAAhkG,GAAoB,OAAAikG,EAAsB,OAAAnxE,MAAAoxE,KAAAF,GAoBvKG,CAAAjsE,QAQA,SAAAsoE,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAbAtC,EAAA+9F,QAAAoC,EAAA,oBAmBA,IA0CAS,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,0BACA,OAAA1D,EAAAyE,oBAEA,uBACA,OAAA5G,EAGA,OArBA+F,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EA2CA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IAjIA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAqIA,IAAAM,OAAA,IAAAxG,EAAA,YAAAqB,EAAArB,GAEA,SAAAyG,EAAA3hG,EAAAU,GACAP,OAAAC,eAAA86F,EAAAl7F,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIA,WAAAi1C,GAAA,aAAAA,IAAAvhG,OAAAyhG,aAAA1G,KACAyG,EAAA,UAAAjC,GACAiC,EAAA,oBAAAjC,GACAiC,EAAA,aAAAT,GACAS,EAAA,UAAAT,GACAS,EAAA,YAAAR,GACAQ,EAAA,sBAAAR,GACAQ,EAAA,WAAAP,GACAO,EAAA,gBAAAb,IAGAvhG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,uFC3QA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAEAnB,EAAA08F,cAAA18F,EAAA28F,oBAAA38F,EAAA48F,QAAA58F,EAAA68F,WAAA78F,EAAA88F,kBAAA98F,EAAA+8F,aAAAx2D,EAEA,IAAAy2D,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAE5IkR,EAAeh+F,EAAQ,wDAEvBwkG,EAAA,SAAArG,GACA,IAAAsG,EAAAtG,EAAAsG,OACAtlC,EAAAg/B,EAAAh/B,MA4BA,OAzBA,SAAAo8B,GACA,IAAAmJ,EAAAD,EAAA,CACA3pB,SAAAygB,EAAAzgB,SACAqgB,OAAAI,EAAAJ,SAOA,kBACA,IAAAzqE,EAAAjP,UAAAhC,OAAA,QAAAgnB,IAAAhlB,UAAA,GAAAA,UAAA,GAAAijF,EAEAn2C,EAAA9sC,UAAAhC,OAAA,QAAAgnB,IAAAhlB,UAAA,GAAAA,UAAA,MACAjI,EAAA+0C,EAAA/0C,KACAkpF,EAAAn0C,EAAAm0C,QAEA,OAAAlpF,IAAA6mF,EAAA,mBACAlhC,EAAAzuC,EAAAgyE,GAGAhyE,KASA,SAAAkwE,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAbAtC,EAAA+9F,QAAAoC,EAAA,uBAmBA,IA0CAS,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,sBACA,OAAA1D,EAAAwE,gBAEA,0BACA,OAAAgC,EAGA,OArBA5C,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EA2CA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IAjIA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAqIA,IAAAM,OAAA,IAAAmC,EAAA,YAAAtH,EAAAsH,GAEA,SAAAlC,EAAA3hG,EAAAU,GACAP,OAAAC,eAAAyjG,EAAA7jG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIA,WAAAi1C,GAAA,aAAAA,IAAAvhG,OAAAyhG,aAAAiC,KACAlC,EAAA,UAAAjC,GACAiC,EAAA,oBAAAjC,GACAiC,EAAA,aAAAT,GACAS,EAAA,UAAAT,GACAS,EAAA,YAAAR,GACAQ,EAAA,sBAAAR,GACAQ,EAAA,WAAAP,GACAO,EAAA,gBAAAb,IAGAvhG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,yFClRA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAEAnB,EAAA08F,cAAA18F,EAAA28F,oBAAA38F,EAAA48F,QAAA58F,EAAA68F,WAAA78F,EAAA88F,kBAAA98F,EAAA+8F,aAAAx2D,EAEA,IAAAy2D,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAE5IiR,EAAmB/9F,EAAQ,gBAE3B2kG,EAAA,SAAAxG,GACA,IAAAC,EAAAD,EAAAC,MACAC,EAAAF,EAAAE,KAEA2F,EAAA,SAAAtzE,GACA,OAAA2tE,EAAAD,EAAA1tE,EAAA,yBA8BA,OAAUszE,cAAAD,UA5BV,SAAArzE,GACA,OAAA2tE,EAAAD,EAAA1tE,EAAA,uBA2BUozE,oBArBV,SAAA15E,GACA,IAAAw6E,EAAA,KACAC,EAAA,KAEA,gBAAAn0E,GACA,IACA0uE,GADA4E,EAAAtzE,IAAA,IACA0uE,SAEA,GAAAA,IAAAwF,EACA,OAAAC,EAEAD,EAAAxF,EACA,IAAA3gC,EAAA4hC,EAAA,YAAAA,CAAAjB,EAAAh1E,GAKA,OAJAq0C,GAAAomC,GAAApmC,EAAAqmC,MAAAD,EAAAC,MACAD,EAAApmC,GAGAomC,MASA,SAAAjE,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAbAtC,EAAA+9F,QAAAoC,EAAA,mBAmBA,IA0CAS,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,gBACA,OAAA3D,EAAAgH,UAEA,sBACA,OAAAJ,EAGA,OArBA/C,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EA2CA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IAjIA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAqIA,IAAAM,OAAA,IAAAsC,EAAA,YAAAzH,EAAAyH,GAEA,SAAArC,EAAA3hG,EAAAU,GACAP,OAAAC,eAAA4jG,EAAAhkG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIA,WAAAi1C,GAAA,aAAAA,IAAAvhG,OAAAyhG,aAAAoC,KACArC,EAAA,UAAAjC,GACAiC,EAAA,oBAAAjC,GACAiC,EAAA,aAAAT,GACAS,EAAA,UAAAT,GACAS,EAAA,YAAAR,GACAQ,EAAA,sBAAAR,GACAQ,EAAA,WAAAP,GACAO,EAAA,gBAAAb,IAGAvhG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,qGCvRA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAGA,IAAA67F,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAI5IsR,EAAA,SAAA1tE,EAAAtG,GACA,IAAAsG,EACA,OAAAA,EAGA,IAAAjR,EAAA2K,EAAA3K,OACA,GAAAA,EAAA,CAKA,IADA,IAAAuO,EAAA0C,EACAtwB,EAAA,EAAiBA,EAAAqf,GAAAuO,IAAwB5tB,EACzC4tB,IAAA5D,EAAAhqB,IAGA,OAAA4tB,IAKA,SAAA4yE,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAbAtC,EAAA+9F,QAAAoC,EAAA,SAmBA,IA0CAS,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,YACA,OAAAtD,EAGA,OAlBAwD,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EAwCA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IA9HA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAkIA,IAAAM,OAAA,IAAAjE,EAAA,YAAAlB,EAAAkB,GAEA,SAAAkE,EAAA3hG,EAAAU,GACAP,OAAAC,eAAAq9F,EAAAz9F,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIA,WAAAi1C,GAAA,aAAAA,IAAAvhG,OAAAyhG,aAAAnE,KACAkE,EAAA,UAAAjC,GACAiC,EAAA,oBAAAjC,GACAiC,EAAA,aAAAT,GACAS,EAAA,UAAAT,GACAS,EAAA,YAAAR,GACAQ,EAAA,sBAAAR,GACAQ,EAAA,WAAAP,GACAO,EAAA,gBAAAb,IAGAvhG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,qGC/PA3gG,OAAAC,eAAAb,EAAA,cACAmB,OAAA,IAEAnB,EAAA08F,cAAA18F,EAAA28F,oBAAA38F,EAAA48F,QAAA58F,EAAA68F,WAAA78F,EAAA88F,kBAAA98F,EAAA+8F,aAAAx2D,EAEA,IAQAqmD,EARAoQ,EAAA,mBAAA/7F,QAAA,iBAAAA,OAAAg8F,SAAA,SAAArQ,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA3rF,QAAA2rF,EAAAx2B,cAAAn1D,QAAA2rF,IAAA3rF,OAAAa,UAAA,gBAAA8qF,GAE5I58B,EAAApvD,OAAAy+E,QAAA,SAAApvD,GAAmD,QAAA/vB,EAAA,EAAgBA,EAAAqhB,UAAAhC,OAAsBrf,IAAA,CAAO,IAAA8vB,EAAAzO,UAAArhB,GAA2B,QAAAuB,KAAAuuB,EAA0BpvB,OAAAkB,UAAAC,eAAA1B,KAAA2vB,EAAAvuB,KAAyDwuB,EAAAxuB,GAAAuuB,EAAAvuB,IAAiC,OAAAwuB,GAE/O60E,EAAahlG,EAAQ,sEAErBilG,GAEAnY,EAFAkY,IAEsClY,EAAAtrF,WAAAsrF,EAAA,CAAuCmR,QAAAnR,GAE7E,IAAAqR,EAAA,CACAsG,OAAA,SAAApjG,GACA,OAAAA,GAEA+8F,MAAAiC,EAAA,SACAlhC,MAAA,SAAAzuC,EAAAgyE,GACA,OAAAxyC,EAAA,GAAsBx/B,EAAAgyE,IAEtBrE,KAAA,SAAAh9F,GACA,OAAAA,IAMA,SAAAu/F,IACA,IACA,GAAAC,OACA,OAAAA,OAEG,MAAAjhF,GACH,IACA,GAAA29C,OACA,OAAAA,OAEK,MAAA39C,GACL,OAAApd,OAbAtC,EAAA+9F,QAAAoC,EAAA,aAmBA,IA0CAS,EA1CAC,EAAA,KAEA,SAAAC,IACA,UAAAD,EAAA,CACA,IAAAE,EAAAL,IAEAK,EAAAC,qCACAD,EAAAC,mCAAA,GAGAH,EAAAG,qCAGA,OAAAH,EAGA,SAAAI,IACA,IAAAL,EAAAF,IAMA,OAJAE,EAAAM,+BACAN,EAAAM,6BAAAtgG,OAAAY,OAAA,OAGA0/F,6BAGA,SAAAC,IACA,IAAAphG,EAAA+gG,IAEAM,EAAAH,IAEAI,EAAAD,EAAArhG,GAOA,OALAshG,IACAD,EAAArhG,GAAAa,OAAAY,OAAA,MACA6/F,EAAAD,EAAArhG,IAGAshG,GAIAT,EAAAF,KAEA,uBACAE,EAAA,gCACAA,EAAAM,6BAAAtgG,OAAAY,OAAA,QAKA,IAAA8/F,EAAA,4BACAC,EAAA,GAoBA,SAAApB,EAAAqB,GACA,IAAAH,EAAAF,IAEA,QAAA56D,IAAA86D,EAAAG,GACA,OAYA,SAAAA,GACA,OAAAA,GACA,YACA,OAAAuD,EAAAhH,QAEA,gBACA,OAAAE,EAGA,OArBAyD,CAAAF,GAEA,IAAArgG,EAAAkgG,EAAAG,GAEA,OAAArgG,IAAAmgG,OACA,EAEAngG,EA2CA,SAAAwgG,EAAAH,EAAArgG,GACA,IAAAkgG,EAAAF,IAEA,wBAAAK,EAAA,YAAAxE,EAAAwE,IAWA,OALAH,EAAAG,QADAj7D,IAAAplC,EACAmgG,EAEAngG,EAGA,WACAygG,EAAAJ,IAXA5gG,OAAAib,KAAA2lF,GAAA7jB,QAAA,SAAAl9E,GACA4gG,EAAA5gG,GAAA+gG,EAAA/gG,KAeA,SAAAmhG,EAAAJ,GACA,IAAAH,EAAAF,WAEAE,EAAAG,GAEA,GAAA5gG,OAAAib,KAAAwlF,GAAA9hF,eACA0hF,IAAAH,GAMA,SAAAe,EAAAjgG,GACA,IAAAy/F,EAAAF,IAEAW,EAAAlhG,OAAAib,KAAAja,GACAmgG,EAAA,GAEA,SAAAC,IACAF,EAAAnkB,QAAA,SAAA6jB,GACAH,EAAAG,GAAAO,EAAAP,KAIA,gBAAA7zE,GACAm0E,EAAAnkB,QAAA,SAAA6jB,GACAO,EAAAP,GAAAH,EAAAG,GACAH,EAAAG,GAAA5/F,EAAA4/F,KAEA,IAAA1zE,EAAAH,IAQA,OANAG,GAAA,mBAAAA,EAAAk8B,KACAl8B,EAAAk8B,KAAAg4C,GAAAC,MAAAD,GAEAA,IAGAl0E,IAjIA,WACA,SAAAo0E,EAAAzhG,EAAAU,GACAP,OAAAC,eAAA0gG,EAAA9gG,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIAg1C,EAAA,UAAA/B,GACA+B,EAAA,oBAAA/B,GACA+B,EAAA,aAAAP,GACAO,EAAA,UAAAP,GACAO,EAAA,YAAAN,GACAM,EAAA,sBAAAN,GACAM,EAAA,WAAAL,GAfA,GAqIA,IAAAM,OAAA,IAAAlE,EAAA,YAAAjB,EAAAiB,GAEA,SAAAmE,EAAA3hG,EAAAU,GACAP,OAAAC,eAAAo9F,EAAAx9F,EAAA,CACAU,QACAL,YAAA,EACAosD,cAAA,IAIA,WAAAi1C,GAAA,aAAAA,IAAAvhG,OAAAyhG,aAAApE,KACAmE,EAAA,UAAAjC,GACAiC,EAAA,oBAAAjC,GACAiC,EAAA,aAAAT,GACAS,EAAA,UAAAT,GACAS,EAAA,YAAAR,GACAQ,EAAA,sBAAAR,GACAQ,EAAA,WAAAP,GACAO,EAAA,gBAAAb,IAGAvhG,EAAA+8F,QAAAoD,EACAngG,EAAA88F,kBAAAqD,EACAngG,EAAA68F,WAAA8E,EACA3hG,EAAA48F,QAAA+E,EACA3hG,EAAA28F,oBAAAiF,EACA5hG,EAAA08F,cAAA6E,iECtQAthG,EAAAD,QAAA,SAAAglG,GACA,sBAAAA,EAAA,MAAAxvB,UAAAwvB,EAAA,uBACA,OAAAA,4ECDA,IAAAC,EAAkBnlG,EAAQ,yCAARA,CAAgB,eAClColG,EAAAlyE,MAAAlxB,UACAykC,MAAA2+D,EAAAD,IAA0CnlG,EAAQ,0CAARA,CAAiBolG,EAAAD,EAAA,IAC3DhlG,EAAAD,QAAA,SAAAyB,GACAyjG,EAAAD,GAAAxjG,IAAA,mECLA,IAAA0jG,EAAerlG,EAAQ,gDACvBG,EAAAD,QAAA,SAAAglG,GACA,IAAAG,EAAAH,GAAA,MAAAxvB,UAAAwvB,EAAA,sBACA,OAAAA,wECDA,IAAAI,EAAgBtlG,EAAQ,iDACxBulG,EAAevlG,EAAQ,gDACvBwlG,EAAsBxlG,EAAQ,wDAC9BG,EAAAD,QAAA,SAAAulG,GACA,gBAAAC,EAAAC,EAAAC,GACA,IAGAvkG,EAHAwkG,EAAAP,EAAAI,GACAjmF,EAAA8lF,EAAAM,EAAApmF,QACAm1B,EAAA4wD,EAAAI,EAAAnmF,GAIA,GAAAgmF,GAAAE,MAAA,KAAAlmF,EAAAm1B,GAGA,IAFAvzC,EAAAwkG,EAAAjxD,OAEAvzC,EAAA,cAEK,KAAYoe,EAAAm1B,EAAeA,IAAA,IAAA6wD,GAAA7wD,KAAAixD,IAChCA,EAAAjxD,KAAA+wD,EAAA,OAAAF,GAAA7wD,GAAA,EACK,OAAA6wD,IAAA,4ECnBL,IAAAK,EAAgB9lG,EAAQ,iDACxBqlG,EAAerlG,EAAQ,gDACvB+lG,EAAa/lG,EAAQ,6CACrBgmG,EAAA,GAAA5vC,MACA6vC,EAAA,GAUA9lG,EAAAD,QAAAkP,SAAAxN,MAAA,SAAA80D,GACA,IAAAwvC,EAAAJ,EAAAtjG,MACA2jG,EAAAH,EAAAzlG,KAAAkhB,UAAA,GACA2kF,EAAA,WACA,IAAA9tE,EAAA6tE,EAAA9vC,OAAA2vC,EAAAzlG,KAAAkhB,YACA,OAAAjf,gBAAA4jG,EAbA,SAAAC,EAAAC,EAAAhuE,GACA,KAAAguE,KAAAL,GAAA,CACA,QAAApkG,EAAA,GAAAzB,EAAA,EAA2BA,EAAAkmG,EAASlmG,IAAAyB,EAAAzB,GAAA,KAAAA,EAAA,IAEpC6lG,EAAAK,GAAAl3F,SAAA,sBAAAvN,EAAAwU,KAAA,UACG,OAAA4vF,EAAAK,GAAAD,EAAA/tE,GAQHiuE,CAAAL,EAAA5tE,EAAA7Y,OAAA6Y,GAAAytE,EAAAG,EAAA5tE,EAAAo+B,IAGA,OADA2uC,EAAAa,EAAAlkG,aAAAokG,EAAApkG,UAAAkkG,EAAAlkG,WACAokG,2DCvBA,IAAAtsE,EAAA,GAAiBA,SAEjB35B,EAAAD,QAAA,SAAAglG,GACA,OAAAprE,EAAAv5B,KAAA2kG,GAAA9uC,MAAA,gECHA,IAAA5gC,EAAAr1B,EAAAD,QAAA,CAA6B4pB,QAAA,SAC7B,iBAAA08E,UAAAhxE,6DCAA,IAAAswE,EAAgB9lG,EAAQ,iDACxBG,EAAAD,QAAA,SAAAgmG,EAAAxvC,EAAAj3C,GAEA,GADAqmF,EAAAI,QACAz/D,IAAAiwB,EAAA,OAAAwvC,EACA,OAAAzmF,GACA,uBAAA+a,GACA,OAAA0rE,EAAA3lG,KAAAm2D,EAAAl8B,IAEA,uBAAAA,EAAA7Z,GACA,OAAAulF,EAAA3lG,KAAAm2D,EAAAl8B,EAAA7Z,IAEA,uBAAA6Z,EAAA7Z,EAAAlgB,GACA,OAAAylG,EAAA3lG,KAAAm2D,EAAAl8B,EAAA7Z,EAAAlgB,IAGA,kBACA,OAAAylG,EAAA50E,MAAAolC,EAAAj1C,yEChBAthB,EAAAD,QAAA,SAAAglG,GACA,GAAAz+D,MAAAy+D,EAAA,MAAAxvB,UAAA,yBAAAwvB,GACA,OAAAA,qECFA/kG,EAAAD,SAAkBF,EAAQ,2CAARA,CAAkB,WACpC,OAA0E,GAA1Ec,OAAAC,eAAA,GAAiC,KAAQE,IAAA,WAAmB,YAAcu5B,qECF1E,IAAA6qE,EAAerlG,EAAQ,gDACvBy3D,EAAez3D,EAAQ,6CAAWy3D,SAElCgvC,EAAApB,EAAA5tC,IAAA4tC,EAAA5tC,EAAAxH,eACA9vD,EAAAD,QAAA,SAAAglG,GACA,OAAAuB,EAAAhvC,EAAAxH,cAAAi1C,GAAA,sECJA/kG,EAAAD,QAAA,gGAEA8V,MAAA,kECHA,IAAA6qF,EAAa7gG,EAAQ,6CACrBw1B,EAAWx1B,EAAQ,2CACnB0mG,EAAW1mG,EAAQ,2CACnB2mG,EAAe3mG,EAAQ,+CACvB4mG,EAAU5mG,EAAQ,0CAGlB6mG,EAAA,SAAArtF,EAAA7Y,EAAAuvB,GACA,IAQAvuB,EAAAmlG,EAAAC,EAAAC,EARAC,EAAAztF,EAAAqtF,EAAAR,EACAa,EAAA1tF,EAAAqtF,EAAAM,EACAC,EAAA5tF,EAAAqtF,EAAAQ,EACAC,EAAA9tF,EAAAqtF,EAAAU,EACAC,EAAAhuF,EAAAqtF,EAAAl4B,EACAx+C,EAAA+2E,EAAArG,EAAAuG,EAAAvG,EAAAlgG,KAAAkgG,EAAAlgG,GAAA,KAAkFkgG,EAAAlgG,IAAA,IAAuB,UACzGT,EAAAgnG,EAAA1xE,IAAA70B,KAAA60B,EAAA70B,GAAA,IACA8mG,EAAAvnG,EAAA,YAAAA,EAAA,cAGA,IAAAyB,KADAulG,IAAAh3E,EAAAvvB,GACAuvB,EAIA62E,IAFAD,GAAAG,GAAA92E,QAAAsW,IAAAtW,EAAAxuB,IAEAwuB,EAAAD,GAAAvuB,GAEAqlG,EAAAQ,GAAAV,EAAAF,EAAAG,EAAAlG,GAAAyG,GAAA,mBAAAP,EAAAH,EAAAx3F,SAAA7O,KAAAwmG,KAEA52E,GAAAw2E,EAAAx2E,EAAAxuB,EAAAolG,EAAAvtF,EAAAqtF,EAAAa,GAEAxnG,EAAAyB,IAAAolG,GAAAL,EAAAxmG,EAAAyB,EAAAqlG,GACAM,GAAAG,EAAA9lG,IAAAolG,IAAAU,EAAA9lG,GAAAolG,IAGAlG,EAAArrE,OAEAqxE,EAAAR,EAAA,EACAQ,EAAAM,EAAA,EACAN,EAAAQ,EAAA,EACAR,EAAAU,EAAA,EACAV,EAAAl4B,EAAA,GACAk4B,EAAAc,EAAA,GACAd,EAAAa,EAAA,GACAb,EAAAe,EAAA,IACAznG,EAAAD,QAAA2mG,4DC1CA1mG,EAAAD,QAAA,SAAAyrE,GACA,IACA,QAAAA,IACG,MAAA/rD,GACH,oFCJAzf,EAAAD,QAAiBF,EAAQ,4CAARA,CAAmB,4BAAAoP,SAAA0qB,qECCpC,IAAA+mE,EAAA1gG,EAAAD,QAAA,oBAAAq9D,eAAAz9C,WACAy9C,OAAA,oBAAA78C,WAAAZ,WAAAY,KAEAtR,SAAA,cAAAA,GACA,iBAAAy4F,UAAAhH,2DCLA,IAAA5+F,EAAA,GAAuBA,eACvB9B,EAAAD,QAAA,SAAAglG,EAAAvjG,GACA,OAAAM,EAAA1B,KAAA2kG,EAAAvjG,+DCFA,IAAAmmG,EAAS9nG,EAAQ,gDACjB+nG,EAAiB/nG,EAAQ,oDACzBG,EAAAD,QAAiBF,EAAQ,kDAAgB,SAAA8B,EAAAH,EAAAN,GACzC,OAAAymG,EAAAjyE,EAAA/zB,EAAAH,EAAAomG,EAAA,EAAA1mG,KACC,SAAAS,EAAAH,EAAAN,GAED,OADAS,EAAAH,GAAAN,EACAS,8DCNA,IAAA21D,EAAez3D,EAAQ,6CAAWy3D,SAClCt3D,EAAAD,QAAAu3D,KAAAG,qFCDAz3D,EAAAD,SAAkBF,EAAQ,oDAAsBA,EAAQ,2CAARA,CAAkB,WAClE,OAAuG,GAAvGc,OAAAC,eAA+Bf,EAAQ,gDAARA,CAAuB,YAAgBiB,IAAA,WAAmB,YAAcu5B,+DCAvGr6B,EAAAD,QAAA,SAAAgmG,EAAA5tE,EAAAo+B,GACA,IAAAsxC,OAAAvhE,IAAAiwB,EACA,OAAAp+B,EAAA7Y,QACA,cAAAuoF,EAAA9B,IACAA,EAAA3lG,KAAAm2D,GACA,cAAAsxC,EAAA9B,EAAA5tE,EAAA,IACA4tE,EAAA3lG,KAAAm2D,EAAAp+B,EAAA,IACA,cAAA0vE,EAAA9B,EAAA5tE,EAAA,GAAAA,EAAA,IACA4tE,EAAA3lG,KAAAm2D,EAAAp+B,EAAA,GAAAA,EAAA,IACA,cAAA0vE,EAAA9B,EAAA5tE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA4tE,EAAA3lG,KAAAm2D,EAAAp+B,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,cAAA0vE,EAAA9B,EAAA5tE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA4tE,EAAA3lG,KAAAm2D,EAAAp+B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACG,OAAA4tE,EAAA50E,MAAAolC,EAAAp+B,kECbH,IAAA2vE,EAAUjoG,EAAQ,0CAElBG,EAAAD,QAAAY,OAAA,KAAAonG,qBAAA,GAAApnG,OAAA,SAAAokG,GACA,gBAAA+C,EAAA/C,KAAAlvF,MAAA,IAAAlV,OAAAokG,kECJA/kG,EAAAD,QAAA,SAAAglG,GACA,uBAAAA,EAAA,OAAAA,EAAA,mBAAAA,kFCAA,IAAAxjG,EAAa1B,EAAQ,oDACrBs9F,EAAiBt9F,EAAQ,oDACzBmoG,EAAqBnoG,EAAQ,wDAC7BooG,EAAA,GAGApoG,EAAQ,0CAARA,CAAiBooG,EAAqBpoG,EAAQ,yCAARA,CAAgB,uBAA4B,OAAAwC,OAElFrC,EAAAD,QAAA,SAAAq9F,EAAA8K,EAAAxtC,GACA0iC,EAAAv7F,UAAAN,EAAA0mG,EAAA,CAAqDvtC,KAAAyiC,EAAA,EAAAziC,KACrDstC,EAAA5K,EAAA8K,EAAA,6FCVA,IAAAC,EAActoG,EAAQ,8CACtB6mG,EAAc7mG,EAAQ,6CACtB2mG,EAAe3mG,EAAQ,+CACvB0mG,EAAW1mG,EAAQ,2CACnBuoG,EAAgBvoG,EAAQ,gDACxBwoG,EAAkBxoG,EAAQ,kDAC1BmoG,EAAqBnoG,EAAQ,wDAC7B8+F,EAAqB9+F,EAAQ,iDAC7ByoG,EAAezoG,EAAQ,yCAARA,CAAgB,YAC/B0oG,IAAA,GAAA3sF,MAAA,WAAAA,QAKA4sF,EAAA,WAA8B,OAAAnmG,MAE9BrC,EAAAD,QAAA,SAAA0oG,EAAAP,EAAA9K,EAAA1iC,EAAAguC,EAAAC,EAAAC,GACAP,EAAAjL,EAAA8K,EAAAxtC,GACA,IAeAhiB,EAAAl3C,EAAAymG,EAfAY,EAAA,SAAAC,GACA,IAAAP,GAAAO,KAAAC,EAAA,OAAAA,EAAAD,GACA,OAAAA,GACA,IAVA,OAWA,IAVA,SAUA,kBAA6C,WAAA1L,EAAA/6F,KAAAymG,IACxC,kBAA4B,WAAA1L,EAAA/6F,KAAAymG,KAEjCE,EAAAd,EAAA,YACAe,EAdA,UAcAP,EACAQ,GAAA,EACAH,EAAAN,EAAA5mG,UACAsnG,EAAAJ,EAAAT,IAAAS,EAnBA,eAmBAL,GAAAK,EAAAL,GACAU,EAAAD,GAAAN,EAAAH,GACAW,EAAAX,EAAAO,EAAAJ,EAAA,WAAAO,OAAA9iE,EACAgjE,EAAA,SAAApB,GAAAa,EAAAQ,SAAAJ,EAwBA,GArBAG,IACArB,EAAAtJ,EAAA2K,EAAAlpG,KAAA,IAAAqoG,OACA9nG,OAAAkB,WAAAomG,EAAAvtC,OAEAstC,EAAAC,EAAAe,GAAA,GAEAb,GAAA,mBAAAF,EAAAK,IAAA/B,EAAA0B,EAAAK,EAAAE,IAIAS,GAAAE,GAjCA,WAiCAA,EAAA3oG,OACA0oG,GAAA,EACAE,EAAA,WAAkC,OAAAD,EAAA/oG,KAAAiC,QAGlC8lG,IAAAS,IAAAL,IAAAW,GAAAH,EAAAT,IACA/B,EAAAwC,EAAAT,EAAAc,GAGAhB,EAAAF,GAAAkB,EACAhB,EAAAY,GAAAR,EACAE,EAMA,GALAhwD,EAAA,CACA3F,OAAAk2D,EAAAG,EAAAP,EA9CA,UA+CAjtF,KAAA+sF,EAAAS,EAAAP,EAhDA,QAiDAU,QAAAF,GAEAT,EAAA,IAAApnG,KAAAk3C,EACAl3C,KAAAunG,GAAAvC,EAAAuC,EAAAvnG,EAAAk3C,EAAAl3C,SACKklG,IAAAU,EAAAV,EAAAR,GAAAqC,GAAAW,GAAAhB,EAAAxvD,GAEL,OAAAA,iECnEA14C,EAAAD,QAAA,SAAAypG,EAAAtoG,GACA,OAAUA,QAAAsoG,yECDVxpG,EAAAD,QAAA,+DCAAC,EAAAD,SAAA,sECCA,IAAA0pG,EAAe5pG,EAAQ,gDACvB6pG,EAAU7pG,EAAQ,iDAClB8pG,EAAkB9pG,EAAQ,oDAC1B+pG,EAAe/pG,EAAQ,gDAARA,CAAuB,YACtCyc,EAAA,aAIAutF,EAAA,WAEA,IAIAC,EAJAC,EAAelqG,EAAQ,gDAARA,CAAuB,UACtCI,EAAA0pG,EAAArqF,OAcA,IAVAyqF,EAAAr6C,MAAAsB,QAAA,OACEnxD,EAAQ,2CAAS06D,YAAAwvC,GACnBA,EAAAC,IAAA,eAGAF,EAAAC,EAAAE,cAAA3yC,UACArI,OACA66C,EAAAI,MAAAC,uCACAL,EAAAM,QACAP,EAAAC,EAAA5D,EACAjmG,YAAA4pG,EAAA,UAAAF,EAAA1pG,IACA,OAAA4pG,KAGA7pG,EAAAD,QAAAY,OAAAY,QAAA,SAAAmkG,EAAA2E,GACA,IAAAx8E,EAQA,OAPA,OAAA63E,GACAppF,EAAA,UAAAmtF,EAAA/D,GACA73E,EAAA,IAAAvR,EACAA,EAAA,eAEAuR,EAAA+7E,GAAAlE,GACG73E,EAAAg8E,SACHvjE,IAAA+jE,EAAAx8E,EAAA67E,EAAA77E,EAAAw8E,oECvCA,IAAAZ,EAAe5pG,EAAQ,gDACvByqG,EAAqBzqG,EAAQ,qDAC7B0qG,EAAkB1qG,EAAQ,mDAC1B8nG,EAAAhnG,OAAAC,eAEAb,EAAA21B,EAAY71B,EAAQ,kDAAgBc,OAAAC,eAAA,SAAA8kG,EAAA0B,EAAAoD,GAIpC,GAHAf,EAAA/D,GACA0B,EAAAmD,EAAAnD,GAAA,GACAqC,EAAAe,GACAF,EAAA,IACA,OAAA3C,EAAAjC,EAAA0B,EAAAoD,GACG,MAAA/qF,IACH,WAAA+qF,GAAA,QAAAA,EAAA,MAAAj1B,UAAA,4BAEA,MADA,UAAAi1B,IAAA9E,EAAA0B,GAAAoD,EAAAtpG,OACAwkG,oECdA,IAAAiC,EAAS9nG,EAAQ,gDACjB4pG,EAAe5pG,EAAQ,gDACvB4qG,EAAc5qG,EAAQ,kDAEtBG,EAAAD,QAAiBF,EAAQ,kDAAgBc,OAAAu8F,iBAAA,SAAAwI,EAAA2E,GACzCZ,EAAA/D,GAKA,IAJA,IAGA0B,EAHAxrF,EAAA6uF,EAAAJ,GACA/qF,EAAA1D,EAAA0D,OACArf,EAAA,EAEAqf,EAAArf,GAAA0nG,EAAAjyE,EAAAgwE,EAAA0B,EAAAxrF,EAAA3b,KAAAoqG,EAAAjD,IACA,OAAA1B,oECVA,IAAAgF,EAAU7qG,EAAQ,0CAClB8qG,EAAe9qG,EAAQ,gDACvB+pG,EAAe/pG,EAAQ,gDAARA,CAAuB,YACtC+qG,EAAAjqG,OAAAkB,UAEA7B,EAAAD,QAAAY,OAAAg+F,gBAAA,SAAA+G,GAEA,OADAA,EAAAiF,EAAAjF,GACAgF,EAAAhF,EAAAkE,GAAAlE,EAAAkE,GACA,mBAAAlE,EAAAvvC,aAAAuvC,eAAAvvC,YACAuvC,EAAAvvC,YAAAt0D,UACG6jG,aAAA/kG,OAAAiqG,EAAA,iFCXH,IAAAF,EAAU7qG,EAAQ,0CAClBslG,EAAgBtlG,EAAQ,iDACxBgrG,EAAmBhrG,EAAQ,oDAARA,EAA2B,GAC9C+pG,EAAe/pG,EAAQ,gDAARA,CAAuB,YAEtCG,EAAAD,QAAA,SAAA4B,EAAAw6D,GACA,IAGA36D,EAHAkkG,EAAAP,EAAAxjG,GACA1B,EAAA,EACA4tB,EAAA,GAEA,IAAArsB,KAAAkkG,EAAAlkG,GAAAooG,GAAAc,EAAAhF,EAAAlkG,IAAAqsB,EAAAyM,KAAA94B,GAEA,KAAA26D,EAAA78C,OAAArf,GAAAyqG,EAAAhF,EAAAlkG,EAAA26D,EAAAl8D,SACA4qG,EAAAh9E,EAAArsB,IAAAqsB,EAAAyM,KAAA94B,IAEA,OAAAqsB,qECdA,IAAAi9E,EAAYjrG,EAAQ,2DACpB8pG,EAAkB9pG,EAAQ,oDAE1BG,EAAAD,QAAAY,OAAAib,MAAA,SAAA8pF,GACA,OAAAoF,EAAApF,EAAAiE,sECLA3pG,EAAAD,QAAA,SAAAgrG,EAAA7pG,GACA,OACAL,aAAA,EAAAkqG,GACA99C,eAAA,EAAA89C,GACA/9C,WAAA,EAAA+9C,GACA7pG,yECLA,IAAAw/F,EAAa7gG,EAAQ,6CACrB0mG,EAAW1mG,EAAQ,2CACnB6qG,EAAU7qG,EAAQ,0CAClBmrG,EAAUnrG,EAAQ,yCAARA,CAAgB,OAC1BorG,EAAgBprG,EAAQ,yDAExBqrG,GAAA,GAAAD,GAAAp1F,MADA,YAGAhW,EAAQ,2CAASsrG,cAAA,SAAApG,GACjB,OAAAkG,EAAA7qG,KAAA2kG,KAGA/kG,EAAAD,QAAA,SAAA2lG,EAAAlkG,EAAAiV,EAAA20F,GACA,IAAAC,EAAA,mBAAA50F,EACA40F,IAAAX,EAAAj0F,EAAA,SAAA8vF,EAAA9vF,EAAA,OAAAjV,IACAkkG,EAAAlkG,KAAAiV,IACA40F,IAAAX,EAAAj0F,EAAAu0F,IAAAzE,EAAA9vF,EAAAu0F,EAAAtF,EAAAlkG,GAAA,GAAAkkG,EAAAlkG,GAAA0pG,EAAAh1F,KAAAk2C,OAAA5qD,MACAkkG,IAAAhF,EACAgF,EAAAlkG,GAAAiV,EACG20F,EAGA1F,EAAAlkG,GACHkkG,EAAAlkG,GAAAiV,EAEA8vF,EAAAb,EAAAlkG,EAAAiV,WALAivF,EAAAlkG,GACA+kG,EAAAb,EAAAlkG,EAAAiV,OAOCxH,SAAApN,UAvBD,WAuBC,WACD,yBAAAQ,WAAA2oG,IAAAC,EAAA7qG,KAAAiC,gFC7BA,IAAA0rC,EAAUluC,EAAQ,gDAAc61B,EAChCg1E,EAAU7qG,EAAQ,0CAClBmpG,EAAUnpG,EAAQ,yCAARA,CAAgB,eAE1BG,EAAAD,QAAA,SAAAglG,EAAAuG,EAAAC,GACAxG,IAAA2F,EAAA3F,EAAAwG,EAAAxG,IAAAljG,UAAAmnG,IAAAj7D,EAAAg3D,EAAAiE,EAAA,CAAoE/7C,cAAA,EAAA/rD,MAAAoqG,sECLpE,IAAAE,EAAa3rG,EAAQ,4CAARA,CAAmB,QAChC4rG,EAAU5rG,EAAQ,0CAClBG,EAAAD,QAAA,SAAAyB,GACA,OAAAgqG,EAAAhqG,KAAAgqG,EAAAhqG,GAAAiqG,EAAAjqG,kECHA,IAAA6zB,EAAWx1B,EAAQ,2CACnB6gG,EAAa7gG,EAAQ,6CAErBq8F,EAAAwE,EADA,wBACAA,EADA,sBACA,KAEA1gG,EAAAD,QAAA,SAAAyB,EAAAN,GACA,OAAAg7F,EAAA16F,KAAA06F,EAAA16F,QAAA8kC,IAAAplC,IAAA,MACC,eAAAo5B,KAAA,CACD3Q,QAAA0L,EAAA1L,QACAvoB,KAAQvB,EAAQ,8CAAY,gBAC5B6rG,UAAA,iHCVA,IAAAC,EAAgB9rG,EAAQ,iDACxB2sD,EAAA7sC,KAAA6sC,IACAuB,EAAApuC,KAAAouC,IACA/tD,EAAAD,QAAA,SAAA00C,EAAAn1B,GAEA,OADAm1B,EAAAk3D,EAAAl3D,IACA,EAAA+X,EAAA/X,EAAAn1B,EAAA,GAAAyuC,EAAAtZ,EAAAn1B,mECJA,IAAAssF,EAAAjsF,KAAAisF,KACAhsF,EAAAD,KAAAC,MACA5f,EAAAD,QAAA,SAAAglG,GACA,OAAAruF,MAAAquF,MAAA,GAAAA,EAAA,EAAAnlF,EAAAgsF,GAAA7G,qECHA,IAAA8G,EAAchsG,EAAQ,8CACtBisG,EAAcjsG,EAAQ,8CACtBG,EAAAD,QAAA,SAAAglG,GACA,OAAA8G,EAAAC,EAAA/G,qECHA,IAAA4G,EAAgB9rG,EAAQ,iDACxBkuD,EAAApuC,KAAAouC,IACA/tD,EAAAD,QAAA,SAAAglG,GACA,OAAAA,EAAA,EAAAh3C,EAAA49C,EAAA5G,GAAA,qFCHA,IAAA+G,EAAcjsG,EAAQ,8CACtBG,EAAAD,QAAA,SAAAglG,GACA,OAAApkG,OAAAmrG,EAAA/G,wECFA,IAAAG,EAAerlG,EAAQ,gDAGvBG,EAAAD,QAAA,SAAAglG,EAAAmC,GACA,IAAAhC,EAAAH,GAAA,OAAAA,EACA,IAAAgB,EAAAtvF,EACA,GAAAywF,GAAA,mBAAAnB,EAAAhB,EAAAprE,YAAAurE,EAAAzuF,EAAAsvF,EAAA3lG,KAAA2kG,IAAA,OAAAtuF,EACA,sBAAAsvF,EAAAhB,EAAAz4C,WAAA44C,EAAAzuF,EAAAsvF,EAAA3lG,KAAA2kG,IAAA,OAAAtuF,EACA,IAAAywF,GAAA,mBAAAnB,EAAAhB,EAAAprE,YAAAurE,EAAAzuF,EAAAsvF,EAAA3lG,KAAA2kG,IAAA,OAAAtuF,EACA,MAAA8+D,UAAA,oGCVA,IAAAx0D,EAAA,EACAgrF,EAAApsF,KAAAE,SACA7f,EAAAD,QAAA,SAAAyB,GACA,gBAAA00D,YAAA5vB,IAAA9kC,EAAA,GAAAA,EAAA,QAAAuf,EAAAgrF,GAAApyE,SAAA,gECHA,IAAAuiE,EAAYr8F,EAAQ,4CAARA,CAAmB,OAC/B4rG,EAAU5rG,EAAQ,0CAClBmB,EAAanB,EAAQ,6CAAWmB,OAChCgrG,EAAA,mBAAAhrG,GAEAhB,EAAAD,QAAA,SAAAS,GACA,OAAA07F,EAAA17F,KAAA07F,EAAA17F,GACAwrG,GAAAhrG,EAAAR,KAAAwrG,EAAAhrG,EAAAyqG,GAAA,UAAAjrG,MAGA07F,6FCTA,IAAA+P,EAAuBpsG,EAAQ,yDAC/BqsG,EAAWrsG,EAAQ,gDACnBuoG,EAAgBvoG,EAAQ,gDACxBslG,EAAgBtlG,EAAQ,iDAMxBG,EAAAD,QAAiBF,EAAQ,iDAARA,CAAwBkzB,MAAA,iBAAAo5E,EAAArD,GACzCzmG,KAAA+pG,GAAAjH,EAAAgH,GACA9pG,KAAAgqG,GAAA,EACAhqG,KAAAiqG,GAAAxD,GAEC,WACD,IAAApD,EAAArjG,KAAA+pG,GACAtD,EAAAzmG,KAAAiqG,GACA73D,EAAApyC,KAAAgqG,KACA,OAAA3G,GAAAjxD,GAAAixD,EAAApmF,QACAjd,KAAA+pG,QAAA9lE,EACA4lE,EAAA,IAEAA,EAAA,UAAApD,EAAAr0D,EACA,UAAAq0D,EAAApD,EAAAjxD,GACA,CAAAA,EAAAixD,EAAAjxD,MACC,UAGD2zD,EAAAmE,UAAAnE,EAAAr1E,MAEAk5E,EAAA,QACAA,EAAA,UACAA,EAAA,kFChCA,IAAAvF,EAAc7mG,EAAQ,6CAEtB6mG,IAAAU,EAAA,YAAgC3lG,KAAO5B,EAAQ,mHC0C/C,IA7CA,IAAA2sG,EAAiB3sG,EAAQ,wDACzB4qG,EAAc5qG,EAAQ,kDACtB2mG,EAAe3mG,EAAQ,+CACvB6gG,EAAa7gG,EAAQ,6CACrB0mG,EAAW1mG,EAAQ,2CACnBuoG,EAAgBvoG,EAAQ,gDACxB4sG,EAAU5sG,EAAQ,0CAClByoG,EAAAmE,EAAA,YACAC,EAAAD,EAAA,eACAE,EAAAvE,EAAAr1E,MAEA65E,EAAA,CACAC,aAAA,EACAC,qBAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,eAAA,EACAC,cAAA,EACAC,sBAAA,EACAC,UAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,mBAAA,EACAC,WAAA,EACAC,eAAA,EACAC,cAAA,EACAC,UAAA,EACAC,kBAAA,EACAC,QAAA,EACAC,aAAA,EACAC,eAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,cAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,WAAA,GAGAC,EAAAnE,EAAAmC,GAAA3sG,EAAA,EAAoDA,EAAA2uG,EAAAtvF,OAAwBrf,IAAA,CAC5E,IAIAuB,EAJA0mG,EAAA0G,EAAA3uG,GACA4uG,EAAAjC,EAAA1E,GACA4G,EAAApO,EAAAwH,GACAa,EAAA+F,KAAAjtG,UAEA,GAAAknG,IACAA,EAAAT,IAAA/B,EAAAwC,EAAAT,EAAAqE,GACA5D,EAAA2D,IAAAnG,EAAAwC,EAAA2D,EAAAxE,GACAE,EAAAF,GAAAyE,EACAkC,GAAA,IAAArtG,KAAAgrG,EAAAzD,EAAAvnG,IAAAglG,EAAAuC,EAAAvnG,EAAAgrG,EAAAhrG,IAAA,0FC9CA,IAAAutG,EAA2BlvG,EAAQ,yDAEnC,SAAAmvG,KAEAhvG,EAAAD,QAAA,WACA,SAAAkvG,EAAA3sG,EAAA08C,EAAAkwD,EAAAv0B,EAAAw0B,EAAAC,GACA,GAAAA,IAAAL,EAAA,CAIA,IAAAnoE,EAAA,IAAAoH,MACA,mLAKA,MADApH,EAAApmC,KAAA,sBACAomC,GAGA,SAAAyoE,IACA,OAAAJ,EAFAA,EAAA3O,WAAA2O,EAMA,IAAAK,EAAA,CACAxiD,MAAAmiD,EACAM,KAAAN,EACAz2E,KAAAy2E,EACA3+B,OAAA2+B,EACAttG,OAAAstG,EACApzC,OAAAozC,EACAO,OAAAP,EAEAQ,IAAAR,EACAS,QAAAL,EACAM,QAAAV,EACAW,WAAAP,EACAx+E,KAAAo+E,EACAY,SAAAR,EACAS,MAAAT,EACA9O,UAAA8O,EACAhP,MAAAgP,EACAU,MAAAV,GAMA,OAHAC,EAAAU,eAAAhB,EACAM,EAAAW,UAAAX,EAEAA,yDC/BAtvG,EAAAD,QAAmBF,EAAQ,wDAARA,yFCfnBG,EAAAD,QAFA,oHCT8K,SAAA0f,GAAkB,aAAa,SAAAte,EAAAse,EAAAte,GAAgBse,EAAAywF,OAAA/uG,EAAAse,EAAA5d,UAAAlB,OAAAY,OAAAJ,EAAAU,UAAA,CAAkDs0D,YAAA,CAAaj1D,MAAAue,EAAA5e,YAAA,EAAAmsD,UAAA,EAAAC,cAAA,KAAqD,SAAAlsD,EAAA0e,EAAAte,GAAgBR,OAAAC,eAAAyB,KAAA,QAAmCnB,MAAAue,EAAA5e,YAAA,IAAsBM,KAAAme,QAAA3e,OAAAC,eAAAyB,KAAA,QAAkDnB,MAAAC,EAAAN,YAAA,IAAwB,SAAAa,EAAA+d,EAAAte,EAAAJ,GAAkBW,EAAAwuG,OAAA9vG,KAAAiC,KAAA,IAAAod,GAAA9e,OAAAC,eAAAyB,KAAA,OAA4DnB,MAAAC,EAAAN,YAAA,IAAsBF,OAAAC,eAAAyB,KAAA,OAAoCnB,MAAAH,EAAAF,YAAA,IAAwB,SAAAH,EAAA+e,EAAAte,GAAgBT,EAAAwvG,OAAA9vG,KAAAiC,KAAA,IAAAod,GAAA9e,OAAAC,eAAAyB,KAAA,OAA4DnB,MAAAC,EAAAN,YAAA,IAAwB,SAAAZ,EAAAwf,EAAAte,GAAgBlB,EAAAiwG,OAAA9vG,KAAAiC,KAAA,IAAAod,GAAA9e,OAAAC,eAAAyB,KAAA,OAA4DnB,MAAAC,EAAAN,YAAA,IAAwB,SAAAw5B,EAAA5a,EAAAte,EAAAJ,GAAkBs5B,EAAA61E,OAAA9vG,KAAAiC,KAAA,IAAAod,GAAA9e,OAAAC,eAAAyB,KAAA,SAA8DnB,MAAAC,EAAAN,YAAA,IAAsBF,OAAAC,eAAAyB,KAAA,QAAqCnB,MAAAH,EAAAF,YAAA,IAAwB,SAAA60B,EAAAjW,EAAAte,EAAAJ,GAAkB,IAAAW,EAAA+d,EAAAw2C,OAAAl1D,GAAAI,GAAA,GAAAse,EAAAH,QAAkC,OAAAG,EAAAH,OAAAne,EAAA,EAAAse,EAAAH,OAAAne,IAAAse,EAAA6a,KAAAnJ,MAAA1R,EAAA/d,GAAA+d,EAAqD,SAAA0wF,EAAA1wF,GAAc,IAAAte,OAAA,IAAAse,EAAA,YAAA2wF,EAAA3wF,GAA6C,iBAAAte,IAAAse,IAAAE,KAAA,cAAAF,EAAA,OAAAsT,MAAAC,QAAAvT,GAAA,0BAAA9e,OAAAkB,UAAA83B,SAAAv5B,KAAAqf,GAAA,0BAAAA,EAAAka,UAAA,UAAArQ,KAAA7J,EAAAka,YAAA,kBAAuN,SAAAz5B,EAAAuf,EAAAte,EAAAJ,EAAAT,EAAA0B,EAAAzB,EAAAwB,GAA0BA,KAAA,GAAgB,IAAA+pE,GAAhB9pE,KAAA,IAAgBi0D,MAAA,GAAiB,YAAA11D,EAAA,CAA0B,GAAAD,EAAA,CAAM,sBAAAA,KAAAwrE,EAAAvrE,GAAA,OAAuC,wBAAAD,EAAA,YAAA8vG,EAAA9vG,IAAA,CAAwD,GAAAA,EAAA+vG,WAAA/vG,EAAA+vG,UAAAvkC,EAAAvrE,GAAA,OAAwC,GAAAD,EAAAgwG,UAAA,CAAgB,IAAA71E,EAAAn6B,EAAAgwG,UAAAxkC,EAAAvrE,EAAAkf,EAAAte,GAA2Bs5B,IAAAhb,EAAAgb,EAAA,GAAAt5B,EAAAs5B,EAAA,MAAqBqxC,EAAAxxC,KAAA/5B,GAAU,WAAA4vG,EAAA1wF,IAAA,WAAA0wF,EAAAhvG,KAAAse,IAAAka,WAAAx4B,IAAAw4B,YAAkE,IAAA5jB,OAAA,IAAA0J,EAAA,YAAA2wF,EAAA3wF,GAAAmQ,OAAA,IAAAzuB,EAAA,YAAAivG,EAAAjvG,GAAAqf,EAAA,cAAAzK,GAAAhU,OAAAud,OAAA,GAAAixF,KAAAxuG,IAAAud,OAAA,GAAAixF,IAAAzuG,eAAAvB,GAAAF,EAAA,cAAAuvB,GAAA7tB,OAAAud,OAAA,GAAAkxF,KAAAzuG,IAAAud,OAAA,GAAAkxF,IAAA1uG,eAAAvB,GAAgP,IAAAigB,GAAAngB,EAAAU,EAAA,IAAAL,EAAAorE,EAAA3qE,SAAuB,IAAAd,GAAAmgB,EAAAzf,EAAA,IAAAd,EAAA6rE,EAAArsD,SAA4B,GAAA0wF,EAAA1wF,KAAA0wF,EAAAhvG,GAAAJ,EAAA,IAAAW,EAAAoqE,EAAArsD,EAAAte,SAAoC,YAAAgvG,EAAA1wF,MAAAte,GAAA,EAAAJ,EAAA,IAAAW,EAAAoqE,EAAArsD,EAAAte,SAA+C,cAAA4U,GAAA,OAAA0J,GAAA,OAAAte,EAAA,GAAAY,EAAA+T,OAAA,SAAA3U,GAAiE,OAAAA,EAAAovG,MAAA9wF,IAAiBH,OAAAG,IAAAte,GAAAJ,EAAA,IAAAW,EAAAoqE,EAAArsD,EAAAte,QAAgC,CAAK,GAAAY,EAAAu4B,KAAA,CAAWi2E,IAAA9wF,EAAA+wF,IAAArvG,IAAY4xB,MAAAC,QAAAvT,GAAA,CAAoB,IAAAgxF,EAAe,IAAThxF,EAAAH,OAASmxF,EAAA,EAAQA,EAAAhxF,EAAAH,OAAWmxF,OAAAtvG,EAAAme,OAAAve,EAAA,IAAAs5B,EAAAyxC,EAAA2kC,EAAA,IAAAxwG,OAAA,EAAAwf,EAAAgxF,MAAAvwG,EAAAuf,EAAAgxF,GAAAtvG,EAAAsvG,GAAA1vG,EAAAT,EAAAwrE,EAAA2kC,EAAA1uG,GAAwE,KAAK0uG,EAAAtvG,EAAAme,QAAWve,EAAA,IAAAs5B,EAAAyxC,EAAA2kC,EAAA,IAAA/vG,OAAA,EAAAS,EAAAsvG,YAAoC,CAAK,IAAA76F,EAAAjV,OAAAib,KAAA6D,GAAAynF,EAAAvmG,OAAAib,KAAAza,GAAsCyU,EAAA8nE,QAAA,SAAAh8E,EAAAhB,GAAwB,IAAAT,EAAAinG,EAAAlxF,QAAAtU,GAAmBzB,GAAA,GAAAC,EAAAuf,EAAA/d,GAAAP,EAAAO,GAAAX,EAAAT,EAAAwrE,EAAApqE,EAAAK,GAAAmlG,EAAAxxE,EAAAwxE,EAAAjnG,IAAAC,EAAAuf,EAAA/d,QAAA,EAAAX,EAAAT,EAAAwrE,EAAApqE,EAAAK,KAAgEmlG,EAAAxpB,QAAA,SAAAj+D,GAAwBvf,OAAA,EAAAiB,EAAAse,GAAA1e,EAAAT,EAAAwrE,EAAArsD,EAAA1d,KAA2BA,EAAAud,OAAAvd,EAAAud,OAAA,OAAoBG,IAAAte,IAAA,WAAA4U,GAAAW,MAAA+I,IAAA/I,MAAAvV,IAAAJ,EAAA,IAAAW,EAAAoqE,EAAArsD,EAAAte,KAAgE,SAAAb,EAAAmf,EAAAte,EAAAJ,EAAAW,GAAoB,OAAAA,KAAA,GAAAxB,EAAAuf,EAAAte,EAAA,SAAAse,GAAiCA,GAAA/d,EAAA44B,KAAA7a,IAAa1e,GAAAW,EAAA4d,OAAA5d,OAAA,EAAsX,SAAAnB,EAAAkf,EAAAte,EAAAJ,GAAkB,GAAA0e,GAAAte,GAAAJ,KAAA+nG,KAAA,CAAoB,QAAApnG,EAAA+d,EAAA/e,GAAA,EAAAT,EAAAc,EAAAkpB,KAAAlpB,EAAAkpB,KAAA3K,OAAA,MAA4C5e,EAAAT,QAAM,IAAAyB,EAAAX,EAAAkpB,KAAAvpB,MAAAgB,EAAAX,EAAAkpB,KAAAvpB,IAAA,iBAAAK,EAAAkpB,KAAAvpB,GAAA,OAAiFgB,IAAAX,EAAAkpB,KAAAvpB,IAAiB,OAAAK,EAAA+nG,MAAe,SAAziB,SAAA9mG,EAAAyd,EAAAte,EAAAJ,GAAkB,GAAAA,EAAAkpB,MAAAlpB,EAAAkpB,KAAA3K,OAAA,CAA0B,IAAA5d,EAAAhB,EAAA+e,EAAAte,GAAAlB,EAAAc,EAAAkpB,KAAA3K,OAAA,EAA+B,IAAA5d,EAAA,EAAQA,EAAAzB,EAAIyB,IAAAhB,IAAAK,EAAAkpB,KAAAvoB,IAAmB,OAAAX,EAAA+nG,MAAe,QAAA9mG,EAAAtB,EAAAK,EAAAkpB,KAAAvoB,IAAAX,EAAA0zC,MAAA1zC,EAAAkuB,MAAuC,MAAM,eAAAvuB,EAAAK,EAAAkpB,KAAAvoB,IAA4B,MAAM,gBAAAhB,EAAAK,EAAAkpB,KAAAvoB,IAAAX,EAAAyvG,UAAoC,OAAAzvG,EAAA+nG,MAAoB,QAAA9mG,EAAAyd,EAAAte,GAAAJ,EAAA0zC,MAAA1zC,EAAAkuB,MAA+B,MAAM,QAAAxP,EAAAiW,EAAAjW,EAAAte,GAAiB,MAAM,gBAAAse,EAAAte,GAAAJ,EAAAyvG,IAA2B,OAAA/wF,EAAkNzd,CAAAjB,EAAAkpB,KAAAvoB,EAAAX,EAAAkpB,KAAAvpB,IAAAgB,EAAAX,EAAA0zC,MAAA1zC,EAAAkuB,MAAgD,MAAM,eAAAvtB,EAAAX,EAAAkpB,KAAAvpB,IAA4B,MAAM,gBAAAgB,EAAAX,EAAAkpB,KAAAvpB,IAAAK,EAAAyvG,MAAizB,SAAAz6F,EAAA0J,GAAc,gBAAAymF,EAAAzmF,GAAAwwD,MAAA,sBAA0R,SAAAzvD,EAAAf,EAAAte,EAAAJ,EAAAW,GAAoB,IAAAhB,EAAAJ,EAAAmf,EAAAte,GAAa,IAAIO,EAAAX,EAAA2vG,eAAA,QAAA3vG,EAAA4sB,MAAA,QAA2C,MAAAlO,GAAS1e,EAAA0lC,IAAA,QAAc/lC,IAAAg9E,QAAA,SAAAj+D,GAAwB,IAAAte,EAAAse,EAAAqpF,KAAApnG,EAAxW,SAAA+d,GAAc,IAAAte,EAAAse,EAAAqpF,KAAA/nG,EAAA0e,EAAAwK,KAAAvoB,EAAA+d,EAAA8wF,IAAA7vG,EAAA+e,EAAA+wF,IAAAvwG,EAAAwf,EAAAg1B,MAAApa,EAAA5a,EAAAwP,KAAyD,OAAA9tB,GAAU,eAAAJ,EAAAmV,KAAA,KAAAxU,EAAA,IAAAhB,GAAoC,eAAAK,EAAAmV,KAAA,KAAAxV,GAA8B,eAAAK,EAAAmV,KAAA,MAA4B,eAAAnV,EAAAmV,KAAA,SAAAjW,EAAA,IAAAo6B,GAAwC,kBAAiJzK,CAAAnQ,GAAoB1e,EAAA0lC,IAAAtV,MAAApwB,EAAA,OAAAmlG,EAAA/kG,GAAAs4B,KAAA1jB,EAAA5U,IAAA+0D,OAAAkxC,EAAA1lG,OAAmDX,EAAA0lC,IAAA,iBAAyB,IAAI1lC,EAAA4vG,WAAa,MAAAlxF,GAAS1e,EAAA0lC,IAAA,oBAA0B,SAAApmC,EAAAof,EAAAte,EAAAJ,EAAAW,GAAoB,gBAAA+d,EAAA,YAAA2wF,EAAA3wF,IAA+C,sCAAAA,EAAA/d,GAAA+d,EAAA/d,GAAAyvB,MAAA1R,EAAA2nF,EAAArmG,IAAA0e,EAAA/d,GAAmE,sBAAA+d,EAAAte,GAA2B,eAAAse,GAAmN,SAAA7J,EAAA6J,EAAAte,GAAgB,IAAAJ,EAAAI,EAAAyvG,OAAAlvG,EAAAP,EAAA0vG,kBAAAnwG,EAAAS,EAAA2vG,eAAA7wG,OAAA,IAAAS,EAAjN,SAAA+e,GAAc,IAAAte,EAAAse,EAAAsxF,UAAAhwG,EAAA0e,EAAAg3D,SAA+B,gBAAAh3D,EAAA/d,EAAAhB,GAAuB,IAAAT,EAAA,WAAiB,OAAAA,EAAAq6B,KAAA,KAAA8xB,OAAA3sC,EAAApG,OAAAlY,GAAAlB,EAAAq6B,KAAA,OAAA54B,GAAAX,GAAAd,EAAAq6B,KAAA,SAAA55B,EAAAswG,QAAA,WAAA/wG,EAAAiW,KAAA,MAA4Hu6F,CAAAtvG,GAAAT,EAAA25B,EAAAl5B,EAAA8vG,UAAAv7E,EAAAv0B,EAAAkvE,OAAA8/B,EAAAhvG,EAAA+vG,MAAAhxG,EAAAiB,EAAAgwG,KAAA7wG,OAAA,IAAAa,EAAA2vG,eAA+JrxF,EAAAi+D,QAAA,SAAAh9E,EAAAsB,GAAwB,IAAAzB,EAAAG,EAAA0wG,QAAArvG,EAAArB,EAAA2wG,YAAAvlC,EAAAprE,EAAAs6F,OAAAvgE,EAAA/5B,EAAA4wG,UAAAv7F,EAAArV,EAAA+kC,MAAA7V,EAAAlvB,EAAA6wG,KAAAd,EAAA/vG,EAAA8wG,UAAA57F,EAAA6J,EAAAzd,EAAA,GAAmG4T,IAAA66F,EAAA76F,EAAA07F,UAAA1hF,EAAAha,EAAAw7F,QAAA7wG,GAAiC,IAAA2mG,EAAAxlG,EAAAoqE,GAAAY,EAAA,mBAAAryC,IAAA,WAA+C,OAAAo2E,GAAS3kC,EAAAprE,GAAA25B,EAAA0K,EAAA2pC,EAAA3sE,GAAA4sE,EAAAj5C,EAAAnO,MAAA,UAAAmO,EAAAnO,MAAA2/E,GAAA,IAAgD,GAAA34B,EAAA,uCAA8CA,EAAAj0C,KAAAq0C,GAAAxtE,EAAA4vG,WAAAxiC,EAAAj0C,KAAA,sCAAiEn5B,EAAAs1E,UAAAlI,EAAAj0C,KAAA,sCAA4D,IAAAorE,EAAAzlG,EAAAinG,EAAAniE,EAAAnV,GAAe,IAAI88C,EAAAh3C,EAAAnO,OAAAjnB,EAAAS,EAAA2vG,eAAAv/E,MAAApwB,EAAA,OAAA2kG,GAAAxvC,OAAAqY,IAAAxtE,EAAA2vG,eAAAhL,GAAAhwE,EAAAnO,OAAAjnB,EAAAS,EAAA4sB,MAAAwD,MAAApwB,EAAA,OAAA2kG,GAAAxvC,OAAAqY,IAAAxtE,EAAA4sB,MAAA+3E,GAA0I,MAAAjmF,GAAS1e,EAAA0lC,IAAAi/D,GAAS,IAAA0K,EAAA/vG,EAAA8vG,EAAAjJ,EAAA,CAAAzsE,GAAA,aAAA2sE,EAAA/mG,EAAA8vG,EAAAjJ,EAAA,CAAAA,GAAA,UAAAz4B,EAAApuE,EAAA8vG,EAAAjJ,EAAA,CAAAnxF,EAAA0kB,GAAA,SAAAyrE,EAAA7lG,EAAA8vG,EAAAjJ,EAAA,CAAAuJ,GAAA,aAAmG,GAAAL,EAAA,GAAA16E,EAAA47E,UAAA,CAAqB,IAAAG,EAAA,UAAA/7E,EAAA47E,UAAA72E,GAAA,sBAAqD15B,EAAAqvG,GAAA,gBAAAqB,EAAAh3E,QAA0B15B,EAAAqvG,GAAA,aAAA31E,GAA0B,GAAA2sE,EAAA,GAAA1xE,EAAAslE,OAAA,CAAkB,IAAA3kC,EAAA,UAAA3gC,EAAAslE,OAAAkM,GAAA,sBAAkDnmG,EAAAqmG,GAAA,gBAAA/wC,EAAA6wC,QAA0BnmG,EAAAqmG,GAAA,aAAAF,GAA0B,GAAAnxF,GAAA04D,EAAA,GAAA/4C,EAAA+P,MAAA,CAAoB,IAAAisE,EAAA,UAAAh8E,EAAA+P,MAAA1vB,EAAA0kB,GAAA,uBAAoD15B,EAAA0tE,GAAA,gBAAAijC,EAAA37F,QAA0BhV,EAAA0tE,GAAA,aAAA14D,GAA0B,GAAAmwF,EAAA,GAAAxwE,EAAA87E,UAAA,CAAqB,IAAA17C,EAAA,UAAApgC,EAAA87E,UAAAf,GAAA,sBAAqD1vG,EAAAmlG,GAAA,gBAAApwC,EAAA26C,QAA0B1vG,EAAAmlG,GAAA,aAAAuK,GAA0BvwG,GAAAsgB,EAAAia,EAAAg2E,EAAA1vG,EAAA2rE,GAAc,IAAI3rE,EAAA4vG,WAAa,MAAAlxF,GAAS1e,EAAA0lC,IAAA,oBAA0B,SAAAygE,IAAa,IAAAznF,EAAA6B,UAAAhC,OAAA,YAAAgC,UAAA,GAAAA,UAAA,MAA+DngB,EAAAR,OAAAy+E,OAAA,GAAmBqyB,EAAAhyF,GAAA1e,EAAAI,EAAAyvG,OAAAlvG,EAAAP,EAAAwwG,iBAAAjxG,EAAAS,EAAAywG,iBAAA3xG,EAAAkB,EAAA0wG,UAAAx3E,EAAAl5B,EAAA2wG,UAAAp8E,EAAAv0B,EAAA4wG,cAAyG,YAAAhxG,EAAA,kBAA2C,gBAAA0e,GAAmB,gBAAAte,GAAmB,OAAAse,EAAAte,MAAe,GAAAse,EAAA+gB,UAAA/gB,EAAAugB,SAAA,OAAAvL,QAAAgR,MAAA,+eAAmd,WAAsF,gBAAAhmB,GAAmB,gBAAAte,GAAmB,OAAAse,EAAAte,MAAe,IAAAgvG,EAAA,GAAS,gBAAA1wF,GAAmB,IAAA1e,EAAA0e,EAAA+gB,SAAiB,gBAAA/gB,GAAmB,gBAAAvf,GAAmB,sBAAAD,MAAAc,EAAAb,GAAA,OAAAuf,EAAAvf,GAA6C,IAAAI,EAAA,GAAS6vG,EAAA71E,KAAAh6B,KAAA8wG,QAAA1L,EAAAplE,MAAAhgC,EAAA+wG,YAAA,IAAAhxE,KAAA//B,EAAAgxG,UAAA5vG,EAAAX,KAAAT,EAAA06F,OAAA96F,EAAiF,IAAA8B,OAAA,EAAa,GAAAq4B,EAAA,IAASr4B,EAAAyd,EAAAvf,GAAO,MAAAuf,GAASnf,EAAAmlC,MAAA/kC,EAAA+e,QAAazd,EAAAyd,EAAAvf,GAAYI,EAAAixG,KAAA7L,EAAAplE,MAAAhgC,EAAA8wG,QAAA9wG,EAAAkxG,UAAA9vG,EAAAX,KAA4C,IAAAR,EAAAY,EAAAgwG,MAAA,mBAAAz7E,IAAA30B,EAAAb,GAAAiB,EAAAgwG,KAAiD,GAAAv7F,EAAAu6F,EAAAxvG,OAAAy+E,OAAA,GAAuBj+E,EAAA,CAAIgwG,KAAA5wG,KAAO4vG,EAAA7wF,OAAA,EAAAhf,EAAAmlC,MAAA,MAAAnlC,EAAAmlC,MAAoC,OAAAzjC,KAAY,IAAA0qE,EAAA3nC,EAAsDwpC,EAAA,SAAA9uD,EAAAte,GAAiB,OAAvE,SAAAse,EAAAte,GAAwB,WAAA4xB,MAAA5xB,EAAA,GAAA+U,KAAAuJ,GAA+CkvD,CAAA,IAAAxtE,EAAAse,EAAAka,WAAAra,QAAAG,GAAsCivD,EAAA,SAAAjvD,GAAe,OAAA8uD,EAAA9uD,EAAAuyF,WAAA,OAAAzjC,EAAA9uD,EAAAwyF,aAAA,OAAA1jC,EAAA9uD,EAAAyyF,aAAA,OAAA3jC,EAAA9uD,EAAA0yF,kBAAA,IAAsGzM,EAAA,oBAAAzxB,aAAA,OAAAA,aAAA,mBAAAA,YAAA3zC,IAAA2zC,YAAA5zC,KAAA+vE,EAAA,mBAAApvG,QAAA,iBAAAA,OAAAg8F,SAAA,SAAAv9E,GAAsL,cAAAA,GAAgB,SAAAA,GAAa,OAAAA,GAAA,mBAAAze,QAAAye,EAAA02C,cAAAn1D,QAAAye,IAAAze,OAAAa,UAAA,gBAAA4d,GAAoG2nF,EAAA,SAAA3nF,GAAe,GAAAsT,MAAAC,QAAAvT,GAAA,CAAqB,QAAAte,EAAA,EAAAJ,EAAAgyB,MAAAtT,EAAAH,QAA8Bne,EAAAse,EAAAH,OAAWne,IAAAJ,EAAAI,GAAAse,EAAAte,GAAc,OAAAJ,EAAS,OAAAgyB,MAAAoxE,KAAA1kF,IAAqBgvD,EAAA,GAAM/B,EAAA,gCAAAg0B,OAAA,YAAA0P,EAAA1P,wBAAA,oBAAAtjC,cAAA,IAAmHr4B,EAAA2nC,EAAA0lC,WAAA3jC,EAAAn0C,KAAA,gBAAmC,IAAAyK,GAAA2nC,EAAA0lC,WAAA9xG,IAAAosE,EAAA0lC,SAAArtE,SAAA,KAA+D5jC,EAAAO,EAAAX,GAAAI,EAAAT,EAAAK,GAAAI,EAAAlB,EAAAc,GAAAI,EAAAk5B,EAAAt5B,GAAAJ,OAAAu8F,iBAAA58F,EAAA,CAAyD6wG,KAAA,CAAMjwG,MAAAZ,EAAAO,YAAA,GAAsBwxG,eAAA,CAAiBnxG,MAAAhB,EAAAW,YAAA,GAAsByxG,UAAA,CAAYpxG,MAAnuJ,SAAAue,EAAAte,EAAAJ,GAAkB0e,GAAAte,GAAmDjB,EAAAuf,EAAAte,EAA1C,SAAAO,GAAkBX,MAAA0e,EAAAte,EAAAO,IAAAnB,EAAAkf,EAAAte,EAAAO,MAAsrJb,YAAA,GAAsB0xG,YAAA,CAAcrxG,MAAAX,EAAAM,YAAA,GAAsB2xG,aAAA,CAAetxG,MAA/lK,SAAAue,EAAAte,EAAAJ,GAAkB,GAAA0e,GAAAte,GAAAJ,KAAA+nG,KAAA,CAAoB,IAAApnG,EAAAhB,EAAAT,EAAAwf,EAAY,IAAA/e,EAAAK,EAAAkpB,KAAA3K,OAAA,EAAA5d,EAAA,EAA0BA,EAAAhB,EAAIgB,SAAA,IAAAzB,EAAAc,EAAAkpB,KAAAvoB,MAAAzB,EAAAc,EAAAkpB,KAAAvoB,IAAA,IAAsDzB,IAAAc,EAAAkpB,KAAAvoB,IAAiB,OAAAX,EAAA+nG,MAAe,SAAhjB,SAAA/mG,EAAA0d,EAAAte,EAAAJ,GAAkB,GAAAA,EAAAkpB,MAAAlpB,EAAAkpB,KAAA3K,OAAA,CAA0B,IAAA5d,EAAAhB,EAAA+e,EAAAte,GAAAlB,EAAAc,EAAAkpB,KAAA3K,OAAA,EAA+B,IAAA5d,EAAA,EAAQA,EAAAzB,EAAIyB,IAAAhB,IAAAK,EAAAkpB,KAAAvoB,IAAmB,OAAAX,EAAA+nG,MAAe,QAAA/mG,EAAArB,EAAAK,EAAAkpB,KAAAvoB,IAAAX,EAAA0zC,MAAA1zC,EAAAkuB,MAAuC,MAAM,QAAiC,QAAAvuB,EAAAK,EAAAkpB,KAAAvoB,IAAAX,EAAAwvG,IAA2B,MAAM,eAAA7vG,EAAAK,EAAAkpB,KAAAvoB,UAA6B,OAAAX,EAAA+nG,MAAoB,QAAA/mG,EAAA0d,EAAAte,GAAAJ,EAAA0zC,MAAA1zC,EAAAkuB,MAA+B,MAAM,QAAyB,QAAAxP,EAAAte,GAAAJ,EAAAwvG,IAAmB,MAAM,QAAA9wF,EAAAiW,EAAAjW,EAAAte,GAAiB,OAAAse,EAA+K1d,CAAA9B,EAAAc,EAAAkpB,KAAAvoB,IAAAX,EAAA0zC,MAAA1zC,EAAAkuB,MAAuC,MAAM,QAAiC,QAAAhvB,EAAAc,EAAAkpB,KAAAvoB,IAAAX,EAAAwvG,IAA2B,MAAM,eAAAtwG,EAAAc,EAAAkpB,KAAAvoB,OAA00Jb,YAAA,GAAsB4xG,WAAA,CAAavxG,MAAA,WAAiB,gBAAA6jC,GAA4BlkC,YAAA,GAAe6xG,WAAA,CAAaxxG,MAAA,WAAiB,OAAAutE,MAAAiP,QAAA,SAAAj+D,GAAiCA,MAAIgvD,EAAA,MAAAnuE,GAAYO,YAAA,KAAkB,IAAAqlG,EAAA,CAAOv3B,EAAA,CAAGsB,MAAA,UAAAx2C,KAAA,YAAgC22E,EAAA,CAAIngC,MAAA,UAAAx2C,KAAA,UAA8Bi1C,EAAA,CAAIuB,MAAA,UAAAx2C,KAAA,YAAgC80C,EAAA,CAAI0B,MAAA,UAAAx2C,KAAA,WAA+Bg4E,EAAA,CAAIP,MAAA,MAAAN,OAAAn8E,QAAAq9E,WAAA,EAAAb,eAAA,EAAAY,eAAA,EAAAp7B,UAAA,EAAAs6B,WAAA,EAAAY,iBAAA,SAAAlyF,GAAgI,OAAAA,GAASoxF,kBAAA,SAAApxF,GAA+B,OAAAA,GAASmyF,iBAAA,SAAAnyF,GAA8B,OAAAA,GAAS4wD,OAAA,CAAS9oD,MAAA,WAAiB,iBAAgB+pF,UAAA,WAAsB,iBAAgBtW,OAAA,WAAmB,iBAAgBwW,UAAA,WAAsB,iBAAgB/rE,MAAA,WAAkB,kBAAiB0rE,MAAA,EAAAY,mBAAA,EAAAY,iBAAA,GAAiDt8C,EAAA,WAAc,IAAA52C,EAAA6B,UAAAhC,OAAA,YAAAgC,UAAA,GAAAA,UAAA,MAA+DngB,EAAAse,EAAAugB,SAAAj/B,EAAA0e,EAAA+gB,SAA2B,yBAAAr/B,GAAA,mBAAAJ,EAAAmmG,IAAA,CAAsDlnE,SAAA7+B,EAAAq/B,SAAAz/B,SAAsB0zB,QAAAgR,MAAA,iTAAsUhmB,EAAAmzF,SAAAnB,EAAAhyF,EAAAozF,aAAA3L,EAAAznF,EAAAmxF,OAAAv6C,EAAA52C,EAAAq+E,QAAAznC,EAAA11D,OAAAC,eAAA6e,EAAA,cAA2Fve,OAAA,IAAhsUC,CAAApB,qBCAnEC,EAAAD,QAAA+7B,QAAA,8BCAA97B,EAAAD,QAAA+7B,QAAA,8BCAA97B,EAAAD,QAAA+7B,QAAA,6BCAA97B,EAAAD,QAAA+7B,QAAA,+BCAA97B,EAAAD,QAAA+7B,QAAA,6BCAA97B,EAAAD,QAAA+7B,QAAA,oCCAA97B,EAAAD,QAAA+7B,QAAA,+CCAA97B,EAAAD,QAAA+7B,QAAA,iDCAA97B,EAAAD,QAAA+7B,QAAA,6CCAA97B,EAAAD,QAAA+7B,QAAA,kDCAA97B,EAAAD,QAAA+7B,QAAA,8DCAA97B,EAAAD,QAAA+7B,QAAA,iDCAA97B,EAAAD,QAAA+7B,QAAA,sCCAA97B,EAAAD,QAAA+7B,QAAA,mCCAA97B,EAAAD,QAAA+7B,QAAA,+BCAA97B,EAAAD,QAAA+7B,QAAA","file":"renderer.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/index.js\");\n","// @flow\r\nimport * as React from 'react';\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return <React.Fragment>{children}</React.Fragment>;\r\n  }\r\n}\r\n","export const AddNode = 'Add Node';\r\nexport const RemoveNode = 'Remove Node';\r\nexport const RemoveValidation = 'Remove Validation';\r\nexport const RemoveExecution = 'Remove Execution';\r\nexport const SelectValidation = 'Select Validation';\r\nexport const SelectExecution = 'Select Execution';\r\nexport const SelectedValidations = 'Selected Validations';\r\nexport const Remove = 'Remove';\r\nexport const GraphOperations = 'Graph Operations';\r\nexport const ServerSideSetup = 'Service Side Setup';\r\nexport const AddCondition = 'Add Condition';\r\nexport const GraphPropertiesMenu = 'Graph Properties';\r\nexport const NodeLabel = 'Node Label';\r\nexport const NodeType = 'Node Type';\r\nexport const Nodes = 'Nodes';\r\nexport const Models = 'Models';\r\nexport const ConditionType = 'Condition Type';\r\nexport const Reference = 'Reference';\r\nexport const Depth = 'Depth';\r\nexport const Label = 'Label';\r\nexport const New = 'New';\r\nexport const Controllers = 'Controllers';\r\nexport const ServiceActivity = 'Service Activity';\r\nexport const CodeTypes = 'Code Types';\r\nexport const Project = 'Project';\r\nexport const NameSpace = 'NameSpace';\r\nexport const Pinned = 'Pinned';\r\nexport const Collapsed = 'Collapsed';\r\nexport const GenericLink = 'General Link';\r\nexport const OnLoad = 'On Load';\r\nexport const ChildLink = 'Child link';\r\nexport const OnFailureLink = 'On failure result';\r\nexport const OnAction = 'On Action';\r\nexport const OnItemSelection = 'On Item Selection';\r\nexport const OnSuccessLink = 'On Succesful result';\r\nexport const SelectedExecutors = 'Selected Executions';\r\nexport const Agents = 'Agents';\r\nexport const SelectProperty = 'Select Property';\r\nexport const DisallowedEnums = 'Disallowed values';\r\nexport const Methods = 'Methods';\r\nexport const AllowedEnums = 'Allowed values';\r\nexport const ModelActions = 'Model Actions';\r\nexport const AddProperty = 'Add Property';\r\nexport const UICheckBox = 'UI Checkbox';\r\nexport const PermissionsDependencyAttribute = 'Permission Dependency Attribute';\r\nexport const GeneratedConstants = 'Generated Constants';\r\nexport const KeyField = 'Key fields, are used as constants through out the app.'\r\nexport const GeneratedMethodsConstants = 'Generated Methods Constants';\r\nexport const TargetModel = 'Target Model';\r\nexport const UseEnumeration = 'Use Enumeration';\r\nexport const Enumeration = 'Enumeration';\r\nexport const PermissionDependsOnProperties = 'Properties permissions depend on.';\r\nexport const CodeUser = 'Code User';\r\nexport const AddPropertyDescription = 'Add a property to the model';\r\nexport const AddAttribute = 'Add Attribute';\r\nexport const AddAttributeDescription = 'Add an attribute to the property';\r\nexport const UIName = 'UI Name';\r\nexport const UINameDescription = 'The text that will be visible to the client.';\r\nexport const UISingular = 'UI Singular';\r\nexport const MatchIds = 'Match Ids';\r\nexport const ConnectionExists = 'Connection Exists';\r\nexport const Unknown = 'Unknown';\r\nexport const PropertyValueType = 'Property value type';\r\nexport const PropertyModelType = 'Property model type';\r\nexport const AddReference = 'Add reference node';\r\nexport const FunctionSetup = 'Function Setup';\r\nexport const AgentOperator = 'Agent Operator';\r\nexport const Enumerable = 'Enumerable';\r\nexport const Value = 'Value';\r\nexport const AppMenu = 'Application Menu';\r\nexport const CodeName = 'Code Name';\r\nexport const ValueName = 'Value Name';\r\nexport const AgentName = 'Agent Name';\r\nexport const FileMenu = 'File Menu';\r\nexport const Code = 'Code';\r\nexport const MainNavigation = 'Main Navigation';\r\nexport const AddParameter = 'Add parameter';\r\nexport const AddParameterDescription = 'Parameters are the required things need for the function to execute successfully';\r\nexport const AddFunctionOutput = 'Add Function Output';\r\nexport const Menu = 'Menu';\r\nexport const AddFunctionOutputDescription = 'The output of the function';\r\nexport const IsAgent = 'Agent';\r\nexport const IsUser = 'User';\r\nexport const ParameterType = 'Parameter Type';\r\nexport const OwnedResources = 'Owned Resources';\r\nexport const AddModelItemFilter = 'Add model item filter';\r\nexport const AddModelItemFilterDescription = 'Add model item filter for get functions'\r\nexport const PermissionType = 'Permissions';\r\nexport const PermissionAttributes = 'Permission Attributes';\r\nexport const OwnedResourcesDescription = 'Check if permissions are for resources owned by source model.'\r\nexport const PermissionActions = 'Permission Actions';\r\nexport const Permissions = {\r\n    Create: 'Create',\r\n    Get: 'Read',\r\n    GetAll: 'Read All',\r\n    Getall: 'Read All',\r\n    Delete: 'Delete',\r\n    Getbyowner: 'Get by owner',\r\n    Update: 'Update'\r\n};\r\nexport const ChoiceTypes = 'Choice types';\r\nexport const ChoiceListActions = 'Choice Actions';\r\nexport const AddChoice = 'Add Choice';\r\nexport const AddChoiceDescription = 'Add choice type';\r\nexport const AddPermissionDescription = 'Permission nodes describe the ability of connected models on downstream models';\r\nexport const AddPermission = 'Add permission nodes'\r\nexport const AddChoiceItem = 'Add choice item';\r\nexport const AddChoiceItemDescription = 'Add a new choice item';\r\nexport const Select = 'Select';\r\nexport const Close = 'Close';\r\nexport const ValidationListActions = 'Validation Actions';\r\nexport const AddValidationItem = 'Add validation item';\r\nexport const AddValidationItemDescription = 'Add rule to validate user input.';\r\nexport const UseUIValidations = 'Use Validation';\r\nexport const AddValidationList = 'Add validation type';\r\nexport const AddValidationListDescription = 'Create a new shared validation list';\r\nexport const ValidationItemActions = 'Validation Item Actions';\r\nexport const Add = 'Add';\r\nexport const ValidationTypes = 'Validation Types';\r\nexport const ValidationType = 'Validation Type';\r\nexport const OptionListActions = 'Option Actions';\r\nexport const AddOptionItem = 'Add option';\r\nexport const AddOptionItemDescription = 'Add a new option item';\r\nexport const Name = 'Name';\r\nexport const OptionsType = 'Option Types';\r\nexport const UseCustomOption = 'Use custom option';\r\nexport const UseUIOptions = 'Use options';\r\nexport const AddOptionList = 'Create a new option list';\r\nexport const AddOptionListDescription = 'Add option list description';\r\nexport const DependentProperty = 'Depends on';\r\nexport const UseDependentProperty = 'Has dependent property';\r\nexport const UseUIExtensions = 'Use Extensions';\r\nexport const IncludedInList = 'Included in list';\r\nexport const IsEqualTo = 'Is equal';\r\nexport const UseEqualDescription = 'Use equivalancy';\r\nexport const UseEqual = 'Use equal';\r\nexport const IsEqualToDescription = 'If value is equal, it will pass';\r\nexport const ExcludedFromList = 'Excluded from list';\r\nexport const ExcludedFromListDescription = `The agent's id will have to be excluded from the list to be accepted`;\r\nexport const IncludedInListDescription = `The agent's id will have to be included in the list to be accepted.`\r\nexport const ExtensionTypes = 'Extension Types';\r\nexport const AddExtensionList = 'Create an extension list';\r\nexport const AddExtensionListDescription = 'Extension list customize dropdowns/lists.';\r\nexport const ExtensionListTypeActions = 'Extension List Actions';\r\nexport const AddExtensionNode = 'Add Extension';\r\nexport const ExtensionOptions = 'Extension(s)';\r\nexport const ExtensionDefinitionTypes = 'Extension Definition Types';\r\nexport const AddExtensionNodeDescription = 'Add extension node description';\r\nexport const ExtensionDefinition = 'Extension Definition';\r\n\r\nexport const Extensions = 'Extensions';\r\nexport const ExtensionDefinitionMenu = 'Define custom extensions';\r\nexport const ExtensionConfig = 'Extension Config';\r\nexport const DependsOn = 'Depends On';\r\nexport const UseId = 'Use Id';\r\nexport const Property = 'Property';\r\nexport const Condition = 'Condition';\r\nexport const DependsOnDescription = 'Defines if a the property associated with this extension is visually dependent on the value of another property on the same object.'\r\nexport const DependentPropertyDescription = 'The property that the current property will be associated.';\r\nexport const MatchingValue = 'Matching Value';\r\nexport const MatchingValueDescription = 'The value that the associated property will have to equal, to enable the current property';\r\n\r\nexport const PermissionImpl = 'Permission Implementation';\r\nexport const FunctionTypes = 'Function Types';\r\n\r\nexport const Get_ManyToMany_Agent_Value__IListChild = 'Get Many to Many => IList<Child>';\r\nexport const Create_ManyToMany_Agent_Value__IListChild = 'Create Many to Many => IList<Child>';\r\nexport const Update_ManyToMany_Agent_Value__IListChild = 'Update Many to Many => IList<Child>';\r\nexport const Delete_ManyToMany_Agent_Value__IListChild = 'Delete Many to Many => IList<Child>';\r\n\r\nexport const Create_Parent$Child_Agent_Value__IListChild = 'Create Parent/Child => IList<Child>';\r\nexport const Update_Parent$Child_Agent_Value__IListChild = 'Update Parent/Child => IList<Child>';\r\nexport const Get_Parent$Child_Agent_Value__IListChild = 'Get Parent/Child => IList<Child>';\r\n\r\nexport const Create_Object_Agent_Value__IListObject = 'Create Object by Agent => IList<Object>';\r\nexport const Update_Object_Agent_Value__IListObject = 'Update Object by Agent => IList<Object>';\r\nexport const Delete_Object_Agent_Value__IListObject = 'Delete Object by Agent => IList<Object>';\r\nexport const Get_Object_Agent_Value__IListObject = 'Get Object by Agent => IList<Object>';\r\nexport const Can_Execute_Agent_Parent_In_Valid_List = 'Can Execute Agent Parent In Valid List';\r\n\r\nexport const Functions = 'Functions';\r\nexport const AddFunction = 'Add function';\r\nexport const MaestroDetails = 'Maestro Details';\r\n\r\nexport const HttpMethod = 'Http Methods';\r\nexport const AddMaestros = 'Add Maestro';\r\nexport const HttpRoute = 'Relative Http Route';\r\nexport const Maestros = 'Maestros';\r\nexport const Save = 'Save';\r\nexport const Open = 'Open';\r\n\r\nexport const Validator = 'Validator';\r\nexport const PublishFiles = 'Publish Files';\r\nexport const Scaffold = 'Scaffold';\r\nexport const SetWorkingDirectory = 'Set Working Directory';\r\n\r\nexport const MindMap = 'Mind Map';\r\nexport const CodeView = 'Code View';\r\n\r\nexport const ParentTo = 'Parent to';\r\nexport const IsParent = 'Is parent';\r\nexport const UserModel = 'User Model';\r\n\r\nexport const ManyToManyNexus = 'Many to many';\r\nexport const ManyToManyExists = 'Many to many item must exists';\r\nexport const ManyToManyNexusModel = 'Many to Many model';\r\n\r\nexport const ManyToManyNexusDescription = 'This property will be a quick access for many to many relationships.';\r\n\r\n\r\nexport const HasLogicalChildren = 'Has logical children';\r\nexport const LogicalChildrenTypes = 'Logical children types';\r\nexport const LogicalNieceTypes = 'Logical niece types';\r\nexport const HasLogicalChildrenDescription = 'Children have references to this node, as some sort of logical parent.'\r\nexport const HasLogicalNieces = 'Has logical nieces';\r\nexport const HasLogicalNiecesDescription = 'Children have references to this node and others potentially as some sort of logical uncle/aunt. This is for many to many relationships.'\r\nexport const UseModelAsType = 'Use Model as Type';\r\nexport const CustomFunction = 'Custom Function';\r\nexport const CustomFunctionDescription = 'Function can be constructed in an internal graph.';\r\n\r\nexport const AddNewSection = 'Add New Section';\r\nexport const Sections = 'Sections';\r\nexport const AddNewSectionDescription = 'Adds a new section to the root graph.';\r\nexport const SectionEdit = 'Enter sub graph name';\r\nexport const DefaultGraphTitle = 'Red Quick Graph';\r\nexport const DefaultSubGraphTitle = 'Red Quick Sub Graph';\r\nexport const ClearPinned = 'Clear Pinned';\r\nexport const Filter = 'Filter';","\r\nexport const NodeTypes = {\r\n    Concept: 'concept',\r\n    Model: 'model',\r\n    Property: 'model-property',\r\n    ModelFilter: 'model-filter',\r\n    ScreenContainer: 'screen-container',\r\n    Screen: 'screen',\r\n    ScreenCollection: 'screen-collection',\r\n    ScreenItem: 'screen-item',\r\n    Attribute: 'attribute-property',\r\n    ChoiceList: 'choice-list',\r\n    Permission: 'permission',\r\n    PermissionDependency: 'permission-dependency',\r\n    Condition: 'condition',\r\n    ModelItemFilter: \"model-item-filter\",\r\n    Enumeration: 'enumeration', //Basically a list of const string.\r\n    // ChoiceListItem: 'choice-list-item',\r\n    ValidationList: 'validation-list',\r\n    ValidationListItem: 'validation-list-item',\r\n    Validator: 'validator',\r\n    Executor: 'executor', // performs the final acts or data manipulation.\r\n    OptionList: 'option-list',\r\n    OptionListItem: 'option-list-item',\r\n    OptionCustom: 'option-custom',\r\n    ExtensionTypeList: 'extension-type-list',\r\n    ExtensionType: 'extension-type',\r\n    Function: 'function',\r\n    Method: 'method',//NGRX like effect\r\n    Action: 'action', //NGRX like action\r\n    Parameter: 'parameter',\r\n    FunctionOutput: 'function-output',\r\n    Controller: 'controller',\r\n    Maestro: 'maestro',\r\n    Services: 'services',\r\n    ReferenceNode: 'referenceNode', //Is a standing for a node that is at a higher level,\r\n    ClassNode: 'class-node'\r\n}\r\nexport const ExcludeDefaultNode = {\r\n    [NodeTypes.Condition]: true,\r\n    [NodeTypes.ModelItemFilter]: true\r\n};\r\nexport const GeneratedTypes = {\r\n    ChangeParameter: 'change-parameter',\r\n    ChangeResponse: 'change-response',\r\n    Constants: 'constants',\r\n    Permissions: 'permissions-generated',\r\n    Executors: 'executors',\r\n    ModelItemFilter: 'model-item-filter',\r\n    ModelReturn: 'model-return',\r\n    ModelGet: 'model-get',\r\n    ModelExceptions: 'model-exceptions',\r\n    StreamProcess: 'stream-process',\r\n    StreamProcessOrchestration: 'stream-process-orchestration',\r\n    ValidationRule: 'validation-rule'\r\n}\r\nexport const IdentityManagement = {\r\n    RedQuickViews: 'RedQuickViews'\r\n}\r\nexport const STANDARD_TEST_USING = [\r\n    'Microsoft.VisualStudio.TestTools.UnitTesting',\r\n    'RedQuick.Storage',\r\n    'RedQuickCore.Worker',\r\n    'Moq',\r\n    'Autofac',\r\n    'RedQuickCore.Worker.Hosts',\r\n    'RedQuick.Configuration',\r\n    'Microsoft.Extensions.Configuration.Json'\r\n]\r\nexport const STANDARD_CONTROLLER_USING = [\r\n    'RedQuick.Data',\r\n    'RedQuick.Attributes',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Validation',\r\n    'RedQuickCore.Validation.Rules',\r\n    'RedQuick.Interfaces.Arbiter',\r\n    'RedQuick.Configuration',\r\n    'RedQuick.Util',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Interfaces.Data',\r\n    'RedQuick.UI',\r\n    'System',\r\n    'System.Collections',\r\n    'System.Collections.Generic',\r\n    'System.Linq',\r\n    'System.Net',\r\n    'System.Net.Http',\r\n    'System.Threading.Tasks'\r\n]\r\nexport const GeneratedConstants = {\r\n    Methods: 'Methods',\r\n    StreamTypes: 'StreamType',\r\n    FunctionName: 'FunctionName'\r\n}\r\nexport const GeneratedTypesMatch = {\r\n    [GeneratedTypes.ChangeParameter]: NodeTypes.Model\r\n}\r\nexport const ColorStates = {\r\n    Error: 'Error'\r\n}\r\nexport const NotSelectableNodeTypes = {\r\n    [NodeTypes.ReferenceNode]: true,\r\n    [NodeTypes.PermissionDependency]: true,\r\n    [NodeTypes.Condition]: true\r\n}\r\nexport const NodeTypeColors = {\r\n    [ColorStates.Error]: '#FF0000',\r\n    [NodeTypes.Concept]: '#DD4B39',\r\n    [NodeTypes.ModelItemFilter]: '#4ECDC4',\r\n    [NodeTypes.Model]: '#713E5A',\r\n    [NodeTypes.Property]: '#484349',\r\n    [NodeTypes.Screen]: '#3A405A',\r\n    [NodeTypes.Attribute]: '#414770',\r\n    [NodeTypes.ChoiceList]: '#457B9D',\r\n    [NodeTypes.ValidationList]: '#A8DADC',\r\n    [NodeTypes.ValidationListItem]: '#EA526F',\r\n    [NodeTypes.OptionList]: '#2EC4B6',\r\n    [NodeTypes.OptionListItem]: '#856A5D',\r\n    [NodeTypes.OptionCustom]: '#403F4C',\r\n    [NodeTypes.ExtensionTypeList]: '#2C2B3C',\r\n    [NodeTypes.ExtensionType]: '#1B2432',\r\n    [NodeTypes.Method]: '#FE5F55',\r\n    [NodeTypes.Permission]: '#383F51',\r\n    [NodeTypes.Function]: '#553D36',\r\n    [NodeTypes.Parameter]: '#684A52',\r\n    [NodeTypes.FunctionOutput]: '#857885',\r\n    [NodeTypes.Services]: '#59FFA0',\r\n    [NodeTypes.ClassNode]: '#C3BAAA',\r\n    [NodeTypes.Maestro]: '#780116',\r\n    [NodeTypes.Condition]: '#CAFE48',\r\n    [NodeTypes.Validator]: '#151522',\r\n    [NodeTypes.ModelFilter]: '#312313',\r\n    [NodeTypes.Executor]: '#2176FF',\r\n    [NodeTypes.ReferenceNode]: '#F7B538',\r\n    [NodeTypes.ScreenCollection]: '#A9DBB8',\r\n    [NodeTypes.ScreenItem]: '#020887',\r\n    [NodeTypes.ScreenContainer]: '#60B2E5',\r\n\r\n}\r\n\r\nexport const FunctionGroups = {\r\n    External: 'external',\r\n    Internal: 'internal',\r\n    Core: 'core'\r\n}\r\nexport const GroupProperties = {\r\n    IsExternal: 'isExternal',\r\n    FunctionGroup: 'FunctionGroup'\r\n}\r\nexport const NameSpace = {\r\n    Model: '.Models',\r\n    StreamProcess: '.ActionStream',\r\n    Executors: '.Executors',\r\n    Tests: '.Tests',\r\n    Extensions: '.Extensions',\r\n    Controllers: '.Controllers',\r\n    Validations: '.Validations',\r\n    Constants: '.Constants',\r\n    Permissions: '.Permissions',\r\n    Parameters: '.Parameters',\r\n    Interface: '.Interface'\r\n}\r\n\r\nexport const NodeProperties = {\r\n    Enumeration: 'Enumeration',\r\n    ConditionType: 'ConditionType',\r\n    MatchReference: 'MatchReference',\r\n    MatchManyReferenceParameter: 'MatchManyReferenceParameter',\r\n    EnumerationReference: 'EnumerationReference',\r\n    AllowedExtensionValues: 'AllowedExtensionValues',\r\n    ServiceType: 'ServiceType',\r\n    DisallowedExtensionValues: 'DisallowedExtensionValues',\r\n    AllowedEnumValues: 'AllowedEnumerationValue',\r\n    DisallowedEnumValues: 'DisallowedEnumValues',\r\n    ServiceTypeSettings: 'ServiceTypeSettings',\r\n    ValidatorModel: 'ValidatorModel',\r\n    ExecutorAgent: 'ExecutorAgent',\r\n    ExecutorFunction: 'ExecutorFunction',\r\n    ExecutorModel: 'ExecutorModel',\r\n    ExecutorFunctionType: 'ExecutorFunctionType',\r\n    ValidatorFunction: 'ValidatorFunction',\r\n    UseEnumeration: 'UseEnumeration',\r\n    NameSpace: 'namespace',\r\n    FilterModel: 'filtermodel',\r\n    FilterAgent: 'filteragent',\r\n    Validator: 'Validator',\r\n    ModelItemFilter: 'ModelItemFilter',\r\n    Executor: 'Executor',\r\n    ValidatorAgent: 'ValidatorAgent',\r\n    Collapsed: 'collapsed',\r\n    UseExtension: 'usextension',\r\n    IncludedInList: 'includedInList',\r\n    Pinned: 'Pinned',\r\n    ExcludedFromList: 'excludedInList',\r\n    UseEqual: \"UseEqual\",\r\n    IsEqualTo: 'IsEqualTo',\r\n    CodeUser: 'codeUser',\r\n    HttpRoute: 'HttpRoute',\r\n    HttpMethod: 'HttpMethod',\r\n    IsAgent: 'isAgent',\r\n    IsParent: 'isParent', //This is a program setting. Just for allowing us to hide and show the model picker.\r\n    IsUser: 'IsUser', //User is the object directly associated with a IdentityProvider.\r\n    UIUser: 'uiUser',\r\n    IsSharedResource: 'isSharedResource', // Not sure if this helps anything.\r\n    UIPermissions: 'uiPermissions',\r\n    IsOwned: 'isOwned',\r\n    UIName: 'uiName', // The name used in the ui.\r\n\r\n    UIText: 'text',\r\n\r\n    UISingular: 'uiSingular',\r\n    UIChoice: 'uiChoice',\r\n    UIChoiceType: 'uiChoiceType',\r\n    UIChoiceNode: 'uiChoiceNode', //A node that the \"parameter\" node points to.\r\n    PermissionRequester: 'permissions-requester',// The agent that is requesting permission to do something\r\n    PermissionManyToMany: 'permissions-many-to-many',\r\n    MatchIds: 'matchs-ids',\r\n    ConnectionExists: \"connection-exists\",\r\n    PermissionTarget: 'permissions-target',\r\n    // Property has a dependent property\r\n    UIDependsOn: 'uiDependsOn',\r\n    UseUIDependsOn: 'UseuiDependsOn',\r\n    UseUIOptions: 'UseuiOptions',\r\n    UIOptionType: 'uiOptionType',\r\n\r\n    //Use a custom option\r\n    UseCustomUIOption: 'useCustomUIOption',\r\n    UIOptionTypeCustom: 'uiOptionTypeCustom',\r\n    //An option\r\n    UIOption: 'uiOption',\r\n    //Use Extensions\r\n    UseUIExtensionList: 'UseuiExtensionList',\r\n    UIExtensionList: 'uiExtensionList',\r\n    UIExtension: 'uiExtension',\r\n    UIExtensionDefinition: 'uiExtensionDefinition',\r\n    MethodProps: 'methodProperties',\r\n    FilterPropreties: 'filterproperties',\r\n    UIValidationType: 'uiValidationType',\r\n    UseUIValidations: 'UseuiValidations',\r\n    NODEType: 'nodeType',\r\n    ReferenceType: 'referenceType', //Reference nodes will have this type.\r\n\r\n    UIAttributeType: 'uiAttributeType',\r\n    UseModelAsType: 'useModelAsType',\r\n\r\n    HasLogicalChildren: 'hasLogicalChildren',\r\n    LogicalChildrenTypes: 'logicalChildrenTypes',\r\n    HasLogicalNieces: \"hasLogicalNieces\",\r\n    LogicalNieceTypes: 'logicalNieceTypes',\r\n\r\n    ManyToManyNexus: 'manyToManyNexux',\r\n    ManyToManyNexusType: 'manyToManyNexusType',\r\n    ManyToManyNexusTypes: 'manyToManyNexusTypes',\r\n\r\n    MethodType: \"MethodType\",\r\n    UIModelType: 'uiModelType',\r\n\r\n    UseScopeGraph: 'UseScopeGraph',\r\n    ScopeGraph: 'scopedGraph',\r\n\r\n    //The name used for code.\r\n    Groups: 'groups',\r\n    GroupParent: 'groupParent',\r\n    CodeName: 'codeName',\r\n    ValueName: 'valueName',//The name of the instance variable to be used \r\n    AgentName: 'agentName',//The name of the instance variable to be used \r\n    CodePropertyType: 'codeProperty',\r\n    FunctionType: 'functionType',\r\n    PermissionImpl: 'permission-implementation',\r\n    ClassConstructionInformation: 'ClassConstructionInformation'\r\n}\r\n\r\nfunction codeTypeWord(x) {\r\n    if (typeof x === 'string') {\r\n        return x.split('').filter(y => 'abcdefghijklmnopqrstuvwxyzzz1234567890_'.indexOf(y.toLowerCase()) !== -1).join('');\r\n    }\r\n    return x;\r\n}\r\n\r\nexport const DIRTY_PROP_EXT = '$ _dirty_ $';\r\nexport const NodePropertiesDirtyChain = {\r\n    [NodeProperties.ServiceType]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIText,\r\n        chainFunc: codeTypeWord\r\n    }],\r\n    [NodeProperties.UIText]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord,\r\n    }, {\r\n        chainProp: NodeProperties.HttpRoute,\r\n        chainFunc: (x) => {\r\n            if (typeof x === 'string') {\r\n                return x.split(' ').join('/').toLowerCase();\r\n            }\r\n            return x;\r\n        }\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: (x) => {\r\n            return x;\r\n        }\r\n    }]\r\n}\r\nconst letters = 'abcdefghijklmnopqrstuvwxyz';\r\nconst alphanumerics = letters + '0123456789';\r\nconst allowedchars = alphanumerics + ' ';\r\nexport function MakeConstant(val) {\r\n    if (val) {\r\n        if (!isNaN(val)) {\r\n            return `\"${val}\"`;\r\n        }\r\n        val = `${val}`;\r\n        val = val.split('').filter(x => allowedchars.indexOf(x.toLowerCase()) !== -1).join('');\r\n        if (letters.indexOf(val[0].toLowerCase()) === -1) {\r\n            val = '_' + val;\r\n        }\r\n        return val.split(' ').join('_').toUpperCase();\r\n    }\r\n    throw 'needs to have value';\r\n}\r\n\r\nexport function ConstantsDeclaration(options) {\r\n    var { name, value } = options;\r\n\r\n    return `public const string ${name} = ${value};`;\r\n}\r\n\r\nexport function CreateStringList(options) {\r\n    var { name, list, instance } = options;\r\n    return `${instance ? '' : 'public'} IList<string> ${name} = new List<string> {\r\n        ${list}\r\n    }`\r\n}\r\nexport const LinkEvents = {\r\n    Remove: 'remove'\r\n}\r\nexport const LinkType = {\r\n    Choice: 'choice',\r\n\r\n    Executor: 'executor',\r\n    ExecutorItem: 'executor-item',\r\n    ExecutorProperty: 'executor-property',\r\n    ExecutorModel: 'executor-model',\r\n\r\n    Condition: 'condtion',\r\n    ModelItemFilter: 'model-item-filter',\r\n\r\n    Validation: 'validation',\r\n    ValidationItem: 'validation-item',\r\n    Validator: 'validator',\r\n    ValidatorProperty: 'validator-property',\r\n    ValidatorModel: 'validator-model',\r\n\r\n    ExecutorFunction: 'executor-function',\r\n    ValidatorFunction: 'validator-function',\r\n    ValidatorModelItem: 'validator-model-item',\r\n    ValidatorAgent: 'validator-agent',\r\n    Option: 'option',\r\n    OptionItem: 'option-item',\r\n    OptionCustom: 'option-custom',\r\n    DependsOn: 'depends-on',\r\n    ExtensionList: 'extension-list',\r\n    Extension: 'extension',\r\n    Enumeration: 'enumeration',\r\n    EnumerationReference: 'enumeration-reference',\r\n    LogicalChildren: 'logical-children',\r\n    LogicalNieces: 'logical-nieces',\r\n    ManyToManyLink: \"ManyToManyLink\",\r\n    Permission: 'permission',\r\n    AppliedPermissionLink: 'applied-permission',\r\n    RequestorPermissionLink: 'request-permission-link',//the agent/node that is requesting permissions \r\n    ManyToManyPermissionLink: 'many-to-many-permission-link',\r\n    ExtensionDependencyLink: 'extension-dependency-link',\r\n    FunctionOperator: 'function-operator',\r\n    FunctionLink: 'function-link',\r\n    OnScreenLink: 'screen-link',\r\n    OnSuccessLink: 'on-success-link',\r\n    OnFailureLink: 'on-failure-link',\r\n    OnAction: 'on-action',\r\n    ChildLink: 'child-link',//describing a link between screens\r\n    OnItemSelection: 'on-item-selection',\r\n    FunctionVariable: 'function-variable',\r\n    PropertyLink: 'property-link',\r\n    ParentLink: 'parent-link',\r\n    FunctionConstraintLink: 'function-constraint-link',\r\n    ErrorLink: 'error-link',\r\n    RequiredClassLink: 'required-class-link',\r\n    ModelTypeLink: 'model-type-link',\r\n    AgentTypeLink: 'agent-type-link',\r\n    UserLink: 'user-link', // A link between a user and a personal ([Customer, Manager, Hero])\r\n    MaestroLink: 'maestro-link',\r\n    AttributeLink: 'attribute-link',\r\n    PermissionFunction: 'permission-function',\r\n    Exist: 'exist', //A node that points with this link type, requires that the node exists, if it doesn't the link and the other node should dissapear.\r\n    PermissionPropertyDependency: 'permission-property-dependency', //There is a link between a permision and a property.\r\n    PermissionDependencyProperty: 'permission-dependency-property', //There is a link bewteen a property and a dependency\r\n    PermissionDependencyPropertyManyToManyLink: 'permission-dependency-property-many-to-many', //There is a link between a property and a dependency in a many to many situation.\r\n    PermissionPropertyDependencyManyToManyLink: 'permission-property-dependency-many-to-many'//There is a link between a permision and a property in a many to many situnation.\r\n}\r\nconst VIKTIG_LINKS = 5;\r\nexport const LinkStyles = {\r\n    [LinkType.FunctionLink]: {\r\n        type: LinkType.FunctionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.ErrorLink]: {\r\n        type: LinkType.ErrorLink,\r\n        stroke: NodeTypeColors[ColorStates.Error]\r\n    },\r\n    [LinkType.OnScreenLink]: {\r\n        type: LinkType.OnScreenLink,\r\n        stroke: '#E1CE7A',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnSuccessLink]: {\r\n        type: LinkType.OnSuccessLink,\r\n        stroke: '#A23B72',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnFailureLink]: {\r\n        type: LinkType.OnFailureLink,\r\n        stroke: '#3B1F2B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnItemSelection]: {\r\n        type: LinkType.OnItemSelection,\r\n        stroke: '#2E86AB',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnAction]: {\r\n        type: LinkType.OnAction,\r\n        stroke: '#A3320B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.ChildLink]: {\r\n        type: LinkType.ChildLink,\r\n        stroke: '#47A025',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.FunctionConstraintLink]: {\r\n        type: LinkType.FunctionConstraintLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.FunctionOperator]: {\r\n        type: LinkType.FunctionOperator,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.PropertyLink]: {\r\n        type: LinkType.PropertyLink,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.Choice]: {\r\n        type: LinkType.Choice,\r\n        stroke: NodeTypeColors[NodeTypes.ChoiceList]\r\n    },\r\n    [LinkType.Permission]: {\r\n        type: LinkType.Permission,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.AppliedPermissionLink]: {\r\n        type: LinkType.AppliedPermissionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.Validation]: {\r\n        type: LinkType.Validation,\r\n        stroke: NodeTypeColors[NodeTypes.ValidationList]\r\n    },\r\n    [LinkType.Validator]: {\r\n        type: LinkType.Validator,\r\n        stroke: NodeTypeColors[NodeTypes.Validator]\r\n    },\r\n    [LinkType.Option]: {\r\n        type: LinkType.Option,\r\n        stroke: NodeTypeColors[NodeTypes.OptionList]\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    [LinkType.OptionCustom]: {\r\n        type: LinkType.OptionCustom,\r\n        stroke: NodeTypeColors[NodeTypes.OptionCustom]\r\n    },\r\n    [LinkType.DependsOn]: {\r\n        type: LinkType.DependsOn,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.ExtensionList]: {\r\n        type: LinkType.ExtensionList,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    },\r\n    [LinkType.Extension]: {\r\n        type: LinkType.Extension,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionType]\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    [LinkType.ExtensionDependencyLink]: {\r\n        type: LinkType.ExtensionDependencyLink,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    }\r\n}\r\n\r\nexport const LinkPropertyKeys = {\r\n    TYPE: 'type',\r\n    CONSTRAINTS: 'constraints',\r\n    VALID_CONSTRAINTS: 'valid-constraints',\r\n    FUNCTION_ID: 'function-id'\r\n}\r\n\r\nexport const LinkProperties = {\r\n    EnumerationLink: {\r\n        type: LinkType.Enumeration\r\n    },\r\n    ModelItemFilter: {\r\n        type: LinkType.ModelItemFilter\r\n    },\r\n    EnumerationReferenceLink: {\r\n        type: LinkType.EnumerationReference\r\n    },\r\n    ConditionLink: {\r\n        type: LinkType.Condition\r\n    },\r\n    LogicalChildren: {\r\n        type: LinkType.LogicalChildren\r\n    },\r\n    LogicalNieces: {\r\n        type: LinkType.LogicalNieces\r\n    },\r\n    ManyToManyLink: {\r\n        type: LinkType.ManyToManyLink\r\n    },\r\n    PermissionFunctionLink: {\r\n        type: LinkType.PermissionFunction\r\n    },\r\n    FunctionVariable: {\r\n        type: LinkType.FunctionVariable,\r\n        [LinkPropertyKeys.FUNCTION_ID]: null\r\n    },\r\n    PermissionDependencyPropertyLink: {\r\n        type: LinkType.PermissionDependencyProperty\r\n    },\r\n    PermissionDependencyPropertyManyToManyLink: {\r\n        type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n    },\r\n    PermissionPropertyDependencyLink: {\r\n        type: LinkType.PermissionPropertyDependency\r\n    },\r\n    PermissionPropertyDependencyManyToManyLink: {\r\n        type: LinkType.PermissionPropertyDependencyManyToManyLink\r\n    },\r\n    AttributeLink: {\r\n        type: LinkType.AttributeLink\r\n    },\r\n    ExistLink: {\r\n        exist: LinkType.Exist\r\n    },\r\n    ModelTypeLink: {\r\n        type: LinkType.ModelTypeLink\r\n    },\r\n    AgentTypeLink: {\r\n        type: LinkType.AgentTypeLink\r\n    },\r\n    RequiredClassLink: {\r\n        type: LinkType.RequiredClassLink\r\n    },\r\n    OnScreenLink: {\r\n        type: LinkType.OnScreenLink\r\n    },\r\n    OnSuccessLink: {\r\n        type: LinkType.OnSuccessLink\r\n    },\r\n    OnFailureLink: {\r\n        type: LinkType.OnFailureLink\r\n    },\r\n    OnItemSelection: {\r\n        type: LinkType.OnItemSelection\r\n    },\r\n    OnAction: {\r\n        type: LinkType.OnAction\r\n    },\r\n    ChildLink: {\r\n        type: LinkType.ChildLink\r\n    },\r\n    FunctionLink: {\r\n        type: LinkType.FunctionLink\r\n    },\r\n    FunctionOperator: {\r\n        type: LinkType.FunctionOperator\r\n    },\r\n    FunctionConstraintLink: {\r\n        type: LinkType.FunctionConstraintLink\r\n    },\r\n    ChoiceLink: {\r\n        type: LinkType.Choice\r\n    },\r\n    PermissionLink: {\r\n        type: LinkType.Permission\r\n    },\r\n    AppliedPermissionLink: {\r\n        type: LinkType.AppliedPermissionLink\r\n    },\r\n    RequestorPermissionLink: {\r\n        type: LinkType.RequestorPermissionLink\r\n    },\r\n    ManyToManyPermissionLink: {\r\n        type: LinkType.ManyToManyPermissionLink\r\n    },\r\n    ValdationLink: {\r\n        type: LinkType.Validation\r\n    },\r\n    ValidationLinkItem: {\r\n        type: LinkType.ValidationItem\r\n    },\r\n    ValidatorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ValidatorModelLink: {\r\n        type: LinkType.ValidatorModel\r\n    },\r\n    ValidatorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ValidatorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ExecutorLink: {\r\n        type: LinkType.Validation\r\n    },\r\n    ExecutorLinkItem: {\r\n        type: LinkType.ValidationItem\r\n    },\r\n    ExecutorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ExecutorModelLink: {\r\n        type: LinkType.ExecutorModel\r\n    },\r\n    ExecutorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ExecutorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ValidatorFunctionLink: {\r\n        type: LinkType.ValidatorFunction\r\n    },\r\n    ExecutorFunctionLink: {\r\n        type: LinkType.ExecutorFunction\r\n    },\r\n    OptionLink: {\r\n        type: LinkType.Option\r\n    },\r\n    OptionItemLink: {\r\n        type: LinkType.OptionItem\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    OptionCustomLink: {\r\n        type: LinkType.OptionCustom\r\n    },\r\n    DependsOnLink: {\r\n        type: LinkType.DependsOn\r\n    },\r\n    ExtensionListLink: {\r\n        type: LinkType.ExtensionList\r\n    },\r\n    ExtensionLink: {\r\n        type: LinkType.Extension\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    ExtensionDependencyLink: {\r\n        type: LinkType.ExtensionDependencyLink\r\n    },\r\n    PropertyLink: {\r\n        type: LinkType.PropertyLink\r\n    },\r\n    ParentLink: {\r\n        type: LinkType.ParentLink\r\n    },\r\n    UserLink: {\r\n        type: LinkType.UserLink\r\n    },\r\n    MaestroLink: {\r\n        type: LinkType.MaestroLink\r\n    }\r\n}\r\nObject.keys(LinkProperties).map(propTypes => {\r\n    if (LinkProperties[propTypes] && LinkProperties[propTypes].type) {\r\n        LinkProperties[propTypes][LinkProperties[propTypes].type] = {};\r\n    }\r\n})\r\nexport const Methods = {\r\n    Create: 'Create',\r\n    Get: 'Get',\r\n    GetAll: 'GetAll',\r\n    Update: 'Update',\r\n    Delete: 'Delete'\r\n}\r\nexport const ValidationVector = {\r\n    Content: 'content'\r\n}\r\nexport const ValidationRules = {\r\n    CVV: \"cvv\",\r\n    AlphaNumericLike: \"alphanumericlike\",\r\n    AlphaNumericPuncLike: 'alphaNumericpunclike',\r\n    AlphaOnly: \"alphaonly\",\r\n    NumericOnly: 'numericonly',\r\n    Numeric: 'numeric',\r\n    Empty: 'empty',\r\n    AlphaOnlyWithSpaces: \"alphaonlywithspaces\",\r\n    NotEmpty: \"notempty\",\r\n    UrlEmpty: \"url_empty\",\r\n    IsTrue: 'is_true',\r\n    IsFalse: 'is_false',\r\n    GreaterThan: 'greater_than',\r\n    GreaterThanOrEqualTo: 'greater_than_equal_to',\r\n    LessThan: 'less_than',\r\n    LessThanOrEqualTo: 'less_than_equal_to',\r\n    EqualTo: 'equal_to',\r\n    Any: 'any',\r\n    Url: \"url\",\r\n    EmailEmpty: \"email_empty\",\r\n    Credit: \"credit\",\r\n    Email: \"email\",\r\n    ExpirationMonth: \"expirationMonth\",\r\n    BeforeNow: \"beforenow\",\r\n    Year: \"year\",\r\n    Debit: \"debit\",\r\n    ExpirationYear: \"expirationYear\",\r\n    PastDate: \"pastdate\",\r\n    ZipEmpty: \"zipempty\",\r\n    Zip: \"zip\",\r\n    SocialSecurity: \"socialsecurity\",\r\n    OneOf: 'one-of'\r\n}\r\n\r\n\r\nexport const ExtensionDefinitionTypes = {\r\n    DictionaryStringString: 'DictionaryStringString',\r\n    DictionaryStringDictionary: 'DictionaryStringDictionary',\r\n}\r\nexport const CollectionTypes = {\r\n    DebitCard: 'DebitCard',\r\n    Email: 'Email',\r\n    Telephone: 'Telephone'\r\n}\r\n\r\nexport const OptionsTypes = {\r\n    CHOICELIST: 'CHOICELIST',\r\n    CAPITALIZE_FIRST_LETTER: 'CAPITALIZE_FIRST_LETTER'\r\n}\r\nexport const NodePropertyTypes = {\r\n    STRING: 'STRING',\r\n    LISTOFSTRINGS: 'LISTOFSTRINGS',\r\n    DATETIME: 'DATETIME',\r\n    INT: 'INT',\r\n    FLOAT: 'FLOAT',\r\n    DOUBLE: 'DOUBLE',\r\n    BOOLEAN: 'BOOLEAN',\r\n    EMAIL: 'EMAIL',\r\n    PHONENUMBER: 'PHONENUMBER'\r\n}\r\nexport const NEW_LINE = `\r\n`;\r\nexport const ProgrammingLanguages = {\r\n    CSHARP: 'csharp'\r\n}\r\nexport const NodePropertyTypesByLanguage = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.DATETIME]: 'DateTime',\r\n        [NodePropertyTypes.STRING]: 'string',\r\n        [NodePropertyTypes.LISTOFSTRINGS]: 'IList<string>',\r\n        [NodePropertyTypes.INT]: 'int',\r\n        [NodePropertyTypes.FLOAT]: 'float',\r\n        [NodePropertyTypes.DOUBLE]: 'double',\r\n        [NodePropertyTypes.BOOLEAN]: 'bool',\r\n        [NodePropertyTypes.EMAIL]: 'Email',\r\n        [NodePropertyTypes.PHONENUMBER]: 'PhoneNumber'\r\n    }\r\n}\r\nexport const RED_QUICK_DATA = 'RedQuick.Data';\r\nexport const RED_QUICK_ATTRIBUTES = 'RedQuick.Attributes';\r\nexport const Usings = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.EMAIL]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES],\r\n        [NodePropertyTypes.PHONENUMBER]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES]\r\n    }\r\n}\r\nexport const NodeAttributePropertyTypes = {\r\n\r\n    ROUTINGNUMBER: \"ROUTINGNUMBER\",\r\n    CURRENCY: \"CURRENCY\",\r\n    CARMAKE: \"CARMAKE\",\r\n    SOCIALSECURITY: \"SOCIALSECURITY\",\r\n    EMAIL: \"EMAIL\",\r\n    PHONE: \"PHONE\",\r\n    CARMODEL: \"CARMODEL\",\r\n    CARYEAR: \"CARYEAR\",\r\n    VIN: \"VIN\",\r\n    LONGSTRING: \"LONGSTRING\",\r\n    CREDITCARD: \"CREDITCARD\",\r\n    LENGTH: \"LENGTH\",\r\n    INCH: \"INCH\",\r\n    DIMENSION: \"DIMENSION\",\r\n    MONEY: \"MONEY\",\r\n    COUNTRY: \"COUNTRY\",\r\n    DEBIT: \"DEBIT\",\r\n    MONTH: \"MONTH\",\r\n    STATE: \"STATE\",\r\n    CHOICE: \"CHOICE\",\r\n    NUMBER: \"NUMBER\",\r\n    SLIDER: \"SLIDER\",\r\n    DATE: \"DATE\",\r\n    TIME: \"TIME\",\r\n    BOOLEAN: \"BOOLEAN\",\r\n    ACCOUNTNUMBER: \"ACCOUNTNUMBER\",\r\n    ADDRESS: \"ADDRESS\",\r\n    COLLECTION: \"COLLECTION\",\r\n    OBJECT: \"OBJECT\",\r\n    RADIO: \"RADIO\",\r\n    CHECKLIST: \"CHECKLIST\",\r\n    STRING: \"STRING\",\r\n    GEOLOCATION: \"GEOLOCATION\",\r\n    YEAR: \"YEAR\"\r\n\r\n}\r\n\r\nconst COMMON_DATETIME_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.DATETIME,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nconst COMMON_STRING_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.STRING,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nexport function GetValidationsFor(type) {\r\n    let result = {};\r\n    Object.keys(ValidationCases).filter(x => {\r\n        return ValidationCases[x].types.some(v => v === type);\r\n    }).map(t => {\r\n        result[t] = ValidationCases[t];\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function GetValidationParent(type, vector) {\r\n    var vc = ValidationCases[type];\r\n    if (vc) {\r\n        var vects = vc.vectors[vector];\r\n        if (Array.isArray(vects)) {\r\n            return vects.map(t => ValidationCases[t]).filter(x => x);\r\n        }\r\n    }\r\n}\r\n\r\nexport const ValidationCases = {\r\n    [ValidationRules.SocialSecurity]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Numeric],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 9, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            }\r\n        },\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.ZipEmpty],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 5, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        types: [NodePropertyTypes.DATETIME],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n        }\r\n    },\r\n\r\n    [ValidationRules.BeforeNow]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asdf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@asdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asadf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 23, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 16, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.Url]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.UrlEmpty]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Empty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            'false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NotEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NumericOnly]: {\r\n        vectors: {\r\n            content: [ValidationRules.Numeric]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Numeric]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234.34\"`\r\n            },\r\n            'false': function () {\r\n                return `\"12QW\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    //Cant be empty, that would  be the only difference between it and Any.\r\n    [ValidationRules.AlphaNumericPuncLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21df.!@#$ #$%^^&*^&*()aom\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21dfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaOnlyWithSpaces]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httasdfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas dfaom\"`\r\n            },\r\n            '$false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.IsTrue]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return 'true';\r\n            },\r\n            'false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.IsFalse]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            'true': function () {\r\n                return 'true';\r\n            },\r\n            '$false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThanOrEqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' >= '\r\n            },\r\n            'notgreater': function () {\r\n                return ' >= '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' > '\r\n            },\r\n            'notgreater': function () {\r\n                return ' > '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.LessThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$less': function () {\r\n                return ' < '\r\n            },\r\n            'notless': function () {\r\n                return ' < '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.EqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$equal_to': function () {\r\n                return ' = '\r\n            },\r\n            'not_equal': function () {\r\n                return ' = '\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.keys(ValidationCases).map(t => {\r\n    ValidationCases.id = t;\r\n})\r\nexport const ExecutorRules = {\r\n    ModelReference: 'model-reference',\r\n    Copy: 'copy',\r\n    AgentReference: 'agent-reference',\r\n}\r\nexport const ExecutorUI = {\r\n    [ExecutorRules.ModelReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ModelReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.AgentReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AgentReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.Copy]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'copy'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ExecutorUI).map(t => {\r\n    ExecutorUI[t].type = t;\r\n})\r\nexport const FilterRules = {\r\n    EqualsTrue: 'equals-true',\r\n    EqualsFalse: 'equals-false'\r\n}\r\nexport const FilterUI = {\r\n    [FilterRules.EqualsTrue]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsTrue'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsFalse]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsFalse'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    }\r\n}\r\nObject.keys(FilterUI).map(t => {\r\n    FilterUI[t].type = t;\r\n})\r\nexport const ValidationUI = {\r\n    [ValidationRules.OneOf]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'OneOfAttribute'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Enumeration,\r\n            reference: {\r\n                types: [NodeTypes.Enumeration, NodeTypes.ExtensionType]\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'SocialSecurityAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'PastDateAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.BeforeNow]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'BeforeNowAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'CreditCardAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Url]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaNumericLikeAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaOnlyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'NotEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ValidationUI).map(t => {\r\n    ValidationUI[t].type = t;\r\n})","import * as Titles from '../components/titles';\r\nimport fs from 'fs';\r\nimport { Methods, NodeTypes, NodeProperties } from './nodetypes';\r\n\r\nexport const FunctionTypes = {\r\n    //Functions with List<Child> result\r\n    Create_ManyToMany_Agent_Value__IListChild: 'Create/ManyToMany/Agent/Value => IList<Child>',\r\n    Update_ManyToMany_Agent_Value__IListChild: 'Update/ManyToMany/Agent/Value => IList<Child>',\r\n    Get_ManyToMany_Agent_Value__IListChild: 'Get/ManyToMany/Agent/Value => IList<Child>',\r\n    Delete_ManyToMany_Agent_Value__IListChild: 'Delete/ManyToMany/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Child> result\r\n    Create_Parent$Child_Agent_Value__IListChild: 'Create/Parent-Child/Agent/Value => IList<Child>',\r\n    Update_Parent$Child_Agent_Value__IListChild: 'Update/Parent-Child/Agent/Value => IList<Child>',\r\n    Get_Parent$Child_Agent_Value__IListChild: 'Get/Parent-Child/Agent/Value => IList<Child>',\r\n    Delete_Parent$Child_Agent_Value__IListChild: 'Delete/Parent-Child/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Object> result\r\n    Create_Object_Agent_Value__IListObject: 'Create/Object/Agent/Value => IList<Object>',\r\n    Update_Object_Agent_Value__IListObject: 'Update/Object/Agent/Value => IList<Object>',\r\n    Get_Object_Agent_Value__IListObject: 'Get/Object/Agent/Value => IList<Object>',\r\n    Delete_Object_Agent_Value__IListObject: 'Delete/Object/Agent/Value => IList<Object>',\r\n\r\n    //Functions with Object result\r\n    Create_Parent_Child_Agent_Value__Child: 'Create/Parent-Child/Agent/Value => Child',\r\n    Update_Parent_Child_Agent_Value__Child: 'Update/Parent-Child/Agent/Value => Child',\r\n    Get_Parent_Child_Agent_Value__Child: 'Get/Parent-Child/Agent/Value => Child',\r\n    Delete_Parent_Child_Agent_Value__Child: 'Delete/Parent-Child/Agent/Value => Child',\r\n\r\n    //Functions width Object result.\r\n    Create_Object_Agent_Value__Object: 'Create/Object/Agent/Value => Object',\r\n    Update_Object_Agent_Value__Object: 'Update/Object/Agent/Value => Object',\r\n    Get_Object_Agent_Value__Object: 'Get/Object/Agent/Value => Object',\r\n    Delete_Object_Agent_Value__Object: 'Delete/Object/Agent/Value => Object',\r\n\r\n    //Function with bool result\r\n    Can_Execute_Agent_Parent_In_Valid_List: 'Can_Execute_Agent_Parent_In_Valid_List'\r\n    // IAgent_and_Permission_determing_the_permission_based_on_a_PROPERTY: 'Given an Agent and Permission, determing the permission based on a PROPERTY'\r\n}\r\n\r\n\r\nexport const FunctionTemplateKeys = {\r\n    Model: 'model',\r\n    Bool: 'bool',\r\n    CanExecute: 'can-execute',\r\n    ModelDeterminingProperty: 'model-determining-property',\r\n    AgentDeterminingProperty: 'agent-determining-property',\r\n    Property: 'property',\r\n    Parent: 'parent',\r\n    AgentInstance: 'agent_instance',\r\n    Agent: 'agent',\r\n    AgentType: 'agent_type',\r\n    User: 'user',\r\n    ManyToManyModel: 'many_to_many',\r\n    Permission: 'permission',\r\n    UserInstance: 'user_instance',\r\n    ModelFilter: 'model_filter',\r\n    Value: 'value'\r\n}\r\n\r\nexport const FunctionConstraintKeys = {\r\n    IsAgent: 'isAgent',\r\n    IsUser: 'isUser',\r\n    IsTypeOf: 'isTypeOf',\r\n    IsParent: 'isParent',\r\n    IsChild: 'isChild',\r\n    IsList: 'isList',\r\n    IsSingleLink: '$single$link',\r\n    IsModel: 'isModel',\r\n    IsFunction: 'isFunction',\r\n    IsProperty: 'isProperty',\r\n    IsEnumerable: 'isEnumerable',\r\n    IsInstanceVariable: 'isInstanceVariable',\r\n    IsInputVariable: 'isInputVariable'\r\n}\r\n\r\nconst COMMON_CONSTRAINTS = {\r\n    [FunctionTemplateKeys.CanExecute]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsFunction]: true,\r\n        key: FunctionTemplateKeys.CanExecute\r\n    },\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Parent,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsProperty]: true,\r\n        key: FunctionTemplateKeys.ModelDeterminingProperty\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        [FunctionConstraintKeys.IsParent]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Parent\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\n//Deprecated 6.12.2019\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        key: FunctionTemplateKeys.Parent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Property]: {\r\n        key: FunctionTemplateKeys.Property,\r\n        nodeTypes: [NodeTypes.Property]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        key: FunctionTemplateKeys.Parent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_OUTPUT = {\r\n    LIST: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsList]: true\r\n    },\r\n    BOOL: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Bool\r\n    }\r\n}\r\nexport const INTERNAL_TEMPLATE_REQUIREMENTS = {\r\n    METHODS: 'methods',\r\n    PARAMETERS: 'parameters',\r\n    PARAMETERSCLASS: 'Parameters', // Classes hold the parameters, that go to Change classes. See create____.tpl templates.\r\n    CHANGECLASS: 'Change', // Class objects are passed to streams for processing\r\n    RESPONSECLASS: 'Response', // When stream processing completes, these are sent back.\r\n    STREAMPROCESS: 'StreamProcess',\r\n    DETERMINING_PROPERTY: 'determining_property',\r\n    PARENTS_ID_PROPERTY: 'parentIdProperty',\r\n    MODEL: 'model',\r\n    CONSTRUCTORS: 'constructors',\r\n    TEMPLATE: 'template',\r\n    INTERFACE: 'interface',\r\n    PARENT: 'parent',\r\n    PROPERTY: 'property',\r\n    METHOD: {\r\n        CREATE: 'Create',\r\n        UPDATE: 'Update',\r\n        PROCESS: 'Process'\r\n    }\r\n}\r\nexport const FUNCTION_REQUIREMENT_KEYS = {\r\n    CLASSES: 'classes'\r\n}\r\nconst COMMON_FUNCTION_REQUIREMENTS = {\r\n    [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                },\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.UPDATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf-8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.RESPONSECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    attachment_methods: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.STREAMPROCESS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.PROCESS]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    propreties: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.DETERMINING_PROPERTY]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.PROPERTY]: FunctionTemplateKeys.Property,\r\n        }\r\n    }\r\n}\r\nexport const TEMPLATE_KEY_MODIFIERS = {\r\n    lower: 'lower',\r\n    alllower: 'alllower',\r\n    upper: 'upper'\r\n}\r\nexport function ToInterface(i) {\r\n    return `I${i}`;\r\n}\r\nexport const HTTP_METHODS = {\r\n    POST: 'HttpPost',\r\n    GET: 'HttpGet',\r\n    DELETE: 'HttpDelete',\r\n    PATCH: 'HttpPatch'\r\n}\r\nexport const COMMON_FUNCTION_TEMPLATE_KEYS = {\r\n    model: 'model',\r\n    function_name: 'function_name',\r\n    user: 'user',\r\n    user_instance: 'user_instance',\r\n    value: 'value',\r\n    agent: 'agent',\r\n    agent_type: 'agent_type'\r\n}\r\nexport const Functions = {\r\n    [FunctionTypes.Create_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Create_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Update_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Update_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Delete_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Delete_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Get_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Get_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Create_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Create_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/create_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/create_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Update_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Update_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/update_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/update_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Get_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Get_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild.tpl', 'utf-8'),\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }, [FunctionTypes.Can_Execute_Agent_Parent_In_Valid_List]: {\r\n        title: Titles.Can_Execute_Agent_Parent_In_Valid_List,\r\n        template: fs.readFileSync('./app/templates/can_execute/can_execute_childparent_valid_list.tpl', 'utf-8'),\r\n        constraints: {\r\n            [FunctionTemplateKeys.AgentType]: {\r\n                [FunctionConstraintKeys.IsAgent]: true,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.AgentType\r\n            },\r\n            [FunctionTemplateKeys.AgentDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                key: FunctionTemplateKeys.AgentDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.Model]: {\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.Model\r\n            },\r\n            [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                [FunctionConstraintKeys.IsEnumerable]: true,\r\n                key: FunctionTemplateKeys.ModelDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.AgentInstance]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.AgentInstance,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            },\r\n            [FunctionTemplateKeys.Value]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.Value,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.BOOL\r\n        },\r\n        [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {},\r\n        attachment_methods: {},\r\n        propreties: {},\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }\r\n}\r\n\r\n\r\nexport const MethodFunctions = {\r\n    [FunctionTypes.Create_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Create_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Update_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Delete_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Delete_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Get_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Create_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/create_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/create_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Update_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/update_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/update_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Get_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/get_agent_childparent_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        parentGet: true,\r\n        method: Methods.GetAll,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Get_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild_interface.tpl', 'utf-8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        parentGet: true,\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Create_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Update_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild.tpl', 'utf-8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild_interface.tpl', 'utf-8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Can_Execute_Agent_Parent_In_Valid_List]: {\r\n        title: Titles.Can_Execute_Agent_Parent_In_Valid_List,\r\n        template: fs.readFileSync('./app/templates/can_execute/can_execute_childparent_valid_list.tpl', 'utf-8'),\r\n        constraints: {\r\n            [FunctionTemplateKeys.AgentType]: {\r\n                [FunctionConstraintKeys.IsAgent]: true,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.AgentType\r\n            },\r\n            [FunctionTemplateKeys.AgentDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                key: FunctionTemplateKeys.AgentDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.Model]: {\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.Model\r\n            },\r\n            [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                [FunctionConstraintKeys.IsEnumerable]: true,\r\n                key: FunctionTemplateKeys.ModelDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.AgentInstance]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.AgentInstance,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            },\r\n            [FunctionTemplateKeys.Value]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.Value,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.BOOL\r\n        },\r\n        [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {},\r\n        attachment_methods: {},\r\n        propreties: {},\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }\r\n}\r\nexport const FunctionMethodTypes = {\r\n    GET: 'GET',\r\n    CREATE: 'CREATE',\r\n    DELETE: 'DELETE',\r\n    UPDATE: 'UPDATE'\r\n}\r\nexport const ConditionTypes = {\r\n    InEnumerable: 'in-enumeration',\r\n    InExtension: 'in-extension',\r\n    MatchReference: 'match-reference',\r\n    MatchManyReferenceParameter: 'match-many-reference-parameter'\r\n}\r\nexport const ConditionCases = {\r\n    [ConditionTypes.MatchReference]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    },\r\n    [ConditionTypes.MatchManyReferenceParameter]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    }\r\n}\r\nexport const ConditionTypeParameters = {\r\n    RefManyToMany: 'refManyToMany',\r\n    RefManyToManyProperty: 'refManyToManyProperty',\r\n    Ref1: 'ref1',\r\n    Ref2: 'ref2',\r\n    Ref1UseId: 'ref1UseId',\r\n    Ref2UseId: 'ref2UseId',\r\n    Ref1Property: 'ref1Property'\r\n}\r\n\r\nexport const ConditionTypeOptions = {\r\n    IsFalse: 'is-false',\r\n    IsTrue: 'is-true'\r\n}\r\n\r\nexport const ConditionFunctionSetups = {\r\n    [ConditionTypes.MatchReference]: {},\r\n    [ConditionTypes.MatchManyReferenceParameter]: {},\r\n    [ConditionTypes.InEnumerable]: {}\r\n}\r\nObject.keys(MethodFunctions).map(key => {\r\n    if (MethodFunctions[key].constraints) {\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions = ConditionFunctionSetups[ConditionTypes.MatchReference].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions = ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions = ConditionFunctionSetups[ConditionTypes.InEnumerable].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n    }\r\n});\r\n\r\nexport const FunctionPerpetrators = {\r\n    Agent: 'Agent',\r\n    System: 'System' // This is theorhetical atm 23.05.2019\r\n}\r\n\r\nexport const ReturnTypes = {\r\n    CHILD: 'CHILD',\r\n    OBJECT: 'OBJECT',\r\n    LISTCHILD: 'LISTCHILD',\r\n    LISTOBJECT: 'LISTOBJECT', //May end up being a different dimension,\r\n    BOOL: 'BOOL'\r\n}\r\n\r\nexport function hasTemplate(templateString) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n    return hasTemplate;\r\n}\r\n\r\nexport function bindTemplate(templateString, data) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n\r\n    if (hasTemplate) {\r\n        for (var t in data) {\r\n            var subregex = new RegExp('({{)' + t + '(}})', 'g');\r\n            var val = data[t];\r\n            templateString = templateString.replace(subregex, val === null || val === undefined ? '' : val);\r\n        }\r\n    }\r\n\r\n    return templateString;\r\n\r\n}","import * as Titles from '../components/titles'\r\nimport { NodeTypes, NodeTypeColors, NodeProperties, NodePropertiesDirtyChain, DIRTY_PROP_EXT, LinkProperties, LinkType, LinkPropertyKeys, NodePropertyTypes, GroupProperties, FunctionGroups, LinkEvents } from '../constants/nodetypes';\r\nimport { Functions, FunctionTemplateKeys, FunctionConstraintKeys, FUNCTION_REQUIREMENT_KEYS, INTERNAL_TEMPLATE_REQUIREMENTS } from '../constants/functiontypes';\r\nimport { GetNodeProp, GetLinkProperty, GetNodeTitle, GetGroupProperty, GetCurrentGraph } from '../actions/uiactions';\r\nexport function createGraph() {\r\n    return {\r\n        id: uuidv4(),\r\n        version: {\r\n            major: 0,\r\n            minor: 0,\r\n            build: 0\r\n        },\r\n        workspace: '',\r\n        title: Titles.DefaultGraphTitle,\r\n        path: [],\r\n        namespace: '',\r\n        //Groups\r\n        groups: [],\r\n        groupLib: {},\r\n        groupsNodes: {}, // group => { node}\r\n        nodesGroups: {}, // node => {group}\r\n        childGroups: {}, // group => {group}\r\n        parentGroup: {}, // group => {group}\r\n        //Groups \r\n        //Reference nodes\r\n        referenceNodes: {},\r\n        //Reference nodes\r\n        nodeLib: {},\r\n        nodes: [],\r\n        nodeLinks: {}, // A library of nodes, and each nodes that it connects.\r\n        nodeConnections: {}, // A library of nodes, and each nodes links\r\n        linkLib: {},\r\n        links: [],\r\n        graphs: {},\r\n        classNodes: {},\r\n        functionNodes: {}, // A function nodes will be run through for checking constraints.\r\n        updated: null,\r\n        visibleNodes: {}, //Nodes that are visible now, and used to calculate the visibility of other nodes.\r\n        appConfig: {\r\n            \"Logging\": {\r\n                \"IncludeScopes\": false,\r\n                \"LogLevel\": {\r\n                    \"Default\": \"Debug\",\r\n                    \"System\": \"Information\",\r\n                    \"Microsoft\": \"Information\"\r\n                }\r\n            },\r\n            \"AppSettings\": {\r\n                \"Local-AuthorizationKey\": \"C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==\",\r\n                \"Local-EndPointUrl\": \"https://localhost:8081\",\r\n                \"use_local\": \"true\",\r\n                \"EndPointUrl\": \"\",\r\n                \"AuthorizationKey\": \"\",\r\n                \"DatabaseId\": \"red-db-001\",\r\n                \"AssemblyPrefixes\": \"Smash;RedQuick\",\r\n                \"Use-SingleCollection\": \"true\",\r\n                \"storage-key\": \"UseDevelopmentStorage=true\",\r\n                \"single-thread\": true,\r\n                \"ConfirmEmailController\": \"Account\",\r\n                \"ConfirmEmailAction\": \"ConfirmEmail\",\r\n                \"HomeAction\": \"Index\",\r\n                \"HomeController\": \"Home\",\r\n                \"ResetPasswordAction\": \"ResetPassword\",\r\n                \"ResetPasswordController\": \"Account\",\r\n                \"SecurityKey\": \"ajskdflajsdfklas20klasdkfj9laksdjfl4aksdjf3kanvdlnaekf\",\r\n                \"Domain\": \"https://localhost:13424\",\r\n                \"TokenExpirationInMinutes\": \"250\",\r\n                \"DomainPort\": \"13424\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const GraphKeys = {\r\n    NAMESPACE: 'namespace',\r\n    SERVER_SIDE_SETUP: 'server_side_setup'\r\n}\r\nexport function updateWorkSpace(graph, options) {\r\n    let { workspace } = options;\r\n    graph.workspace = workspace;\r\n    return graph;\r\n}\r\n\r\nexport function incrementBuild(graph) {\r\n    graph.version.build++;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMinor(graph) {\r\n    graph.version.minor++;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMajor(graph) {\r\n    graph.version.major++;\r\n    return graph;\r\n}\r\n\r\nexport function updateGraphTitle(graph, ops) {\r\n    var { text } = ops;\r\n    graph.title = text;\r\n    return graph;\r\n}\r\n\r\nexport function addNewSubGraph(graph) {\r\n    var newgraph = createGraph();\r\n    newgraph.title = Titles.DefaultSubGraphTitle;\r\n    graph.graphs[newgraph.id] = newgraph;\r\n    return graph;\r\n}\r\nexport function removeSubGraph(graph, id) {\r\n    delete graph.graphs[id];\r\n    return graph\r\n}\r\n\r\nexport function getSubGraphs(graph) {\r\n    return graph && graph.graphs ? Object.keys(graph.graphs || {}).map(t => graph.graphs[t]) : [];\r\n}\r\n\r\nexport function getSubGraph(graph, scopes) {\r\n    var result = graph;\r\n\r\n    scopes.map(scope => {\r\n        result = graph.graphs[scope];\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function getScopedGraph(graph, options) {\r\n    var { scope } = options;\r\n    if (scope && scope.length) {\r\n\r\n        scope.map((s, i) => {\r\n            graph = graph.graphs[s];\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function setScopedGraph(root, options) {\r\n    var { scope, graph } = options;\r\n    if (scope && scope.length) {\r\n        var currentGraph = root;\r\n        scope.map((s, i) => {\r\n            if (i === scope.length - 1) {\r\n                currentGraph.graphs[s] = graph;\r\n            } else {\r\n                currentGraph = currentGraph.graphs[s];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        root = graph;\r\n    }\r\n    return root;\r\n}\r\n\r\nexport function newGroup(graph, callback) {\r\n    let group = createGroup();\r\n    let result = addGroup(graph, group);\r\n    if (callback) {\r\n        callback(group);\r\n    }\r\n    return result;\r\n}\r\nexport function addLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let leaves = graph.groupLib[id].leaves || [];\r\n    leaves = [...leaves, leaf].unique(x => x);\r\n\r\n    //Groups => nodes\r\n    graph.groupsNodes[id] = graph.groupsNodes[id] || {}\r\n    graph.groupsNodes[id][leaf] = true;\r\n    graph.groupsNodes = {\r\n        ...graph.groupsNodes\r\n    }\r\n\r\n    //Nodes => groups\r\n    graph.nodesGroups[leaf] = graph.nodesGroups[leaf] || {}\r\n    graph.nodesGroups[leaf][id] = true;\r\n    graph.nodesGroups = {\r\n        ...graph.nodesGroups\r\n    }\r\n\r\n\r\n\r\n    graph.groupLib[id].leaves = leaves;\r\n    return graph;\r\n}\r\nexport function removeLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    if (group) {\r\n        let leaves = group.leaves || [];\r\n        leaves = [...leaves.filter(t => t !== leaf)];\r\n        graph.groupLib[id].leaves = leaves;\r\n    }\r\n    if (graph.groupsNodes[id]) {\r\n        if (graph.groupsNodes[id][leaf]) {\r\n            delete graph.groupsNodes[id][leaf];\r\n        }\r\n        if (Object.keys(graph.groupsNodes[id]).length === 0) {\r\n            delete graph.groupsNodes[id];\r\n            graph.groups = [...graph.groups.filter(x => x !== id)];\r\n            delete graph.groupLib[id];\r\n        }\r\n        graph.groupsNodes = {\r\n            ...graph.groupsNodes\r\n        }\r\n    }\r\n\r\n    if (graph.nodesGroups[leaf]) {\r\n        if (graph.nodesGroups[leaf][id]) {\r\n            delete graph.nodesGroups[leaf][id];\r\n        }\r\n        if (Object.keys(graph.nodesGroups[leaf]).length === 0) {\r\n            delete graph.nodesGroups[leaf];\r\n        }\r\n        graph.nodesGroups = {\r\n            ...graph.nodesGroups\r\n        }\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\n\r\n\r\nexport function addGroupToGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    let groups = group.groups || [];\r\n\r\n    group.groups = [...groups, groupId].unique(x => x);\r\n    graph.groupLib[id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n\r\n    //Groups need to know who contains them,\r\n    graph.childGroups[id] = graph.childGroups[id] || {};\r\n    graph.childGroups[id][groupId] = true;\r\n    // and also the containers to know about the groups\r\n    graph.parentGroup[groupId] = graph.parentGroup[groupId] || {};\r\n    graph.parentGroup[groupId][id] = true;\r\n\r\n\r\n    return graph;\r\n}\r\nexport function removeGroupFromGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n\r\n    group.groups = [...group.groups.filter(x => x !== groupId)];\r\n    graph.groupLib[id] = { ...group };\r\n    if (graph.childGroups) {\r\n        if (graph.childGroups[id]) {\r\n            delete graph.childGroups[id][groupId];\r\n            if (!Object.keys(graph.childGroups[id]).length) {\r\n                delete graph.childGroups[id];\r\n            }\r\n        }\r\n\r\n        if (graph.parentGroup[groupId]) {\r\n            delete graph.parentGroup[groupId][id];\r\n            if (!Object.keys(graph.parentGroup[groupId]).length) {\r\n                delete graph.childGroups[groupId];\r\n            }\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function clearGroup(graph, ops) {\r\n    var { id } = ops\r\n    for (let i in graph.groupsNodes[id]) {\r\n        if (graph.nodesGroups[i]) {\r\n            delete graph.nodesGroups[i][id];\r\n            if (Object.keys(graph.nodesGroups[i]).length === 0) {\r\n                delete graph.nodesGroups[i];\r\n            }\r\n        }\r\n    }\r\n    for (let i in graph.childGroups[id]) {\r\n        if (graph.parentGroup[i]) {\r\n            delete graph.parentGroup[i][id]\r\n            if (Object.keys(graph.parentGroup[i]).length === 0) {\r\n                delete graph.parentGroup[i];\r\n            }\r\n        }\r\n    }\r\n    graph.groups = [...graph.groups.filter(x => x !== id)];\r\n    delete graph.groupLib[id]\r\n    delete graph.childGroups[id];\r\n    delete graph.groupsNodes[id];\r\n\r\n    return graph;\r\n}\r\nexport function createValidator() {\r\n    return {\r\n        properties: {}\r\n    }\r\n}\r\nexport const createExecutor = createValidator;\r\n\r\nexport function createValidatorProperty() {\r\n    return {\r\n        validators: {\r\n        }\r\n    }\r\n}\r\nexport function addValidatator(validator, options) {\r\n    validator.properties[options.id] = validator.properties[options.id] || createValidatorProperty();\r\n    if (options.validator)\r\n        validator.properties[options.id].validators[options.validator] = options.validatorArgs;\r\n\r\n    return validator;\r\n}\r\nexport function removeValidatorValidation(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator];\r\n\r\n    return _validator;\r\n}\r\nexport function removeValidator(validator, options) {\r\n    delete validator.properties[options.id];\r\n    return validator;\r\n}\r\n\r\nexport function getValidatorItem(item, options) {\r\n    var { property, validator } = options;\r\n    return item.properties[property].validators[validator];\r\n}\r\n\r\nexport function getValidatorProperties(validator) {\r\n    return validator ? validator.properties : null;\r\n}\r\nexport function setDepth(graph, options) {\r\n    var { depth } = options;\r\n    graph.depth = depth;\r\n\r\n    return graph;\r\n}\r\nexport function newNode(graph) {\r\n    let node = createNode();\r\n    return addNode(graph, node);\r\n}\r\nexport function createExtensionDefinition() {\r\n    return {\r\n        //The code generation will define the unique 'value'.\r\n        config: {\r\n            //If this definition is a list or some sort of collection.\r\n            isEnumeration: false,\r\n            // If not, then it is a dictionary, and will have some sort of property that will  be considered the value.\r\n            dictionary: {},\r\n            // A list of objects, with the same shape as the dictionary.\r\n            list: []\r\n        },\r\n        definition: {}\r\n    }\r\n}\r\nexport function defaultExtensionDefinitionType() {\r\n    return 'string';\r\n}\r\nexport function removeNode(graph, options = {}) {\r\n    let { id } = options;\r\n    let existNodes = getNodesByLinkType(graph, { exist: true, id, direction: TARGET, type: LinkType.Exist });\r\n\r\n    graph = incrementBuild(graph);\r\n    //links\r\n    graph = clearLinks(graph, options);\r\n\r\n    //groups \r\n    graph = removeNodeFromGroups(graph, options);\r\n\r\n    if (graph.functionNodes && graph.functionNodes[id]) {\r\n        delete graph.functionNodes[id];\r\n        graph.functionNodes = { ...graph.functionNodes };\r\n    }\r\n    if (graph.classNodes && graph.classNodes[id]) {\r\n        delete graph.classNodes[id];\r\n        graph.classNodes = { ...graph.classNodes };\r\n    }\r\n    delete graph.nodeLib[id];\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes.filter(x => x !== id)];\r\n    if (existNodes) {\r\n        existNodes.map(en => {\r\n            graph = removeNode(graph, { id: en.id });\r\n        })\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function GetManyToManyNodes(state, ids) {\r\n    if (state && ids && ids.length) {\r\n\r\n        return NodesByType(state, NodeTypes.Model).filter(x => GetNodeProp(x, NodeProperties.ManyToManyNexus)).filter(x => {\r\n            return !(ids || []).some(t => {\r\n                return (GetNodeProp(x, NodeProperties.ManyToManyNexusTypes) || []).indexOf(t) !== -1;\r\n            });\r\n        });\r\n    }\r\n    return [];\r\n}\r\nexport function getPropertyNodes(graph, id) {\r\n    return getNodesByLinkType(graph, { id, direction: SOURCE, type: LinkType.PropertyLink });\r\n}\r\nfunction isEmpty(obj) {\r\n    return obj && Object.keys(obj).length === 0;\r\n}\r\nfunction clearGroupDeep(graph, options) {\r\n    var { id, callback } = options;\r\n    var success = true;\r\n    if (graph.childGroups[id]) {\r\n        for (var i in graph.childGroups[id]) {\r\n            var ok = false;\r\n            graph = clearGroupDeep(graph, {\r\n                id: i,\r\n                callback: (v) => {\r\n                    ok = v;\r\n                    success = success && v;\r\n                }\r\n            })\r\n            delete graph.childGroups[id][i];\r\n        }\r\n    }\r\n    if (success) {\r\n        //If the children were empty this can be cleared out\r\n        if (!graph.groupLib[id] || !graph.groupLib[id].leaves || !graph.groupLib[id].leaves.length) {\r\n            if (!graph.groupLib[id] || !graph.groupLib[id].groups || !graph.groupLib[id].groups.length) {\r\n                //if these conditions are met.\r\n                delete graph.groupLib[id];\r\n                graph.groups = [...graph.groups.filter(x => x !== id)];\r\n                delete graph.childGroups[id];\r\n                if (graph.parentGroup[id]) {\r\n                    for (var i in graph.parentGroup[id]) {\r\n                        graph = removeGroupFromGroup(graph, { groupId: id, id: i });\r\n                        graph = clearGroupDeep(graph, { id: i });\r\n                        if (graph.childGroups[i])\r\n                            delete graph.childGroups[i][id]\r\n                    }\r\n                    delete graph.parentGroup[id];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (callback) {\r\n            callback(false);\r\n        }\r\n    }\r\n    return graph;\r\n}\r\nexport function removeNodeFromGroups(graph, options) {\r\n    let { id } = options;\r\n    let groupsContainingNode = [];\r\n    //nodesGroups\r\n    if (graph.nodesGroups[id]) {\r\n        groupsContainingNode = Object.keys(graph.nodesGroups[id]);\r\n        groupsContainingNode.map(group => {\r\n            graph = removeLeaf(graph, { leaf: id, id: group })\r\n        })\r\n    }\r\n\r\n    //groupsNodes\r\n    if (graph.groupsNodes) {\r\n        groupsContainingNode.map(group => {\r\n            if (graph.groupsNodes[group]) {\r\n                if (graph.groupsNodes[group][id]) {\r\n                    delete graph.groupsNodes[group][id]\r\n                }\r\n\r\n                if (Object.keys(graph.groupsNodes[group]).length === 0) {\r\n                    delete graph.groupsNodes[group];\r\n                }\r\n            }\r\n            graph = clearGroupDeep(graph, { id: group });\r\n        })\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\nexport function clearLinks(graph, options) {\r\n    let { id } = options;\r\n    let linksToRemove = getAllLinksWithNode(graph, id);\r\n    for (let i = 0; i < linksToRemove.length; i++) {\r\n        let link = linksToRemove[i];\r\n        graph = removeLink(graph, link);\r\n    }\r\n    return graph;\r\n\r\n}\r\n\r\nexport function addNode(graph, node) {\r\n    graph.nodeLib[node.id] = node;\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes, node.id];\r\n    graph = { ...graph };\r\n    graph = incrementBuild(graph);\r\n    return graph;\r\n}\r\nexport function addGroup(graph, group) {\r\n    graph.groupLib[group.id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n    graph.groups = [...graph.groups, group.id].unique(x => x);\r\n    graph = { ...graph };\r\n    return graph;\r\n}\r\n\r\nexport function addNewPropertyNode(graph, options) {\r\n    return addNewNodeOfType(graph, options, NodeTypes.Property);\r\n}\r\nfunction updateNode(node, options) {\r\n    if (options.node) {\r\n        Object.apply(node.properties, JSON.parse(JSON.stringify(options.node.properties)));\r\n    }\r\n}\r\nexport function addNewNodeOfType(graph, options, nodeType, callback) {\r\n    let { parent, linkProperties, groupProperties } = options;\r\n    let node = createNode(nodeType);\r\n    if (options.node) {\r\n        updateNode(node, options);\r\n        if (nodeType === NodeTypes.ReferenceNode) {\r\n            if (options.rootNode) {\r\n                options.rootNode.referenceNodes[graph.id] = {\r\n                    ...(options.rootNode.referenceNodes[graph.id] || {}),\r\n                    ...({\r\n                        [node.id]: options.node.id\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    graph = addNode(graph, node);\r\n    if (parent) {\r\n        graph = newLink(graph, { source: parent, target: node.id, properties: linkProperties ? linkProperties.properties : null });\r\n    }\r\n    if (options.links) {\r\n        options.links.map(link => {\r\n            graph = newLink(graph, { source: node.id, target: link.target, properties: link.linkProperties ? link.linkProperties.properties : null });\r\n        })\r\n    }\r\n    graph = updateNodeProperty(graph, { id: node.id, prop: NodeProperties.NODEType, value: nodeType });\r\n    if (options.properties) {\r\n        for (var p in options.properties) {\r\n            graph = updateNodeProperty(graph, { id: node.id, prop: p, value: options.properties[p] });\r\n        }\r\n    }\r\n    if (groupProperties) {\r\n        graph = updateNodeGroup(graph, { id: node.id, groupProperties, parent })\r\n    }\r\n    if (callback) {\r\n        callback(node);\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function updateNodeGroup(graph, options) {\r\n    var { id, groupProperties, parent } = options;\r\n    var group = null;\r\n    if (!hasGroup(graph, parent)) {\r\n        var group = createGroup();\r\n        graph = addGroup(graph, group);\r\n        graph = updateNodeProperty(graph, {\r\n            id: parent,\r\n            value: { group: group.id },\r\n            prop: NodeProperties.Groups\r\n        });\r\n        graph = addLeaf(graph, { leaf: parent, id: group.id });\r\n        var grandParent = GetNodeProp(graph.nodeLib[parent], NodeProperties.GroupParent);\r\n        if (grandParent && graph.groupLib[grandParent]) {\r\n            var gparentGroup = graph.groupLib[grandParent];\r\n            if (gparentGroup) {\r\n                var ancestores = getGroupAncenstors(graph, gparentGroup.id);\r\n                graph = addGroupToGroup(graph, {\r\n                    id: gparentGroup.id,\r\n                    groupId: group.id\r\n                });\r\n                ancestores.map(anc => {\r\n                    graph = addGroupToGroup(graph, {\r\n                        id: anc,\r\n                        groupId: group.id\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        let nodeGroupProp = GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups);\r\n        group = getGroup(graph, nodeGroupProp.group);\r\n    }\r\n\r\n    if (group) {\r\n        graph = addLeaf(graph, { leaf: id, id: group.id });\r\n        graph = updateNodeProperty(graph, {\r\n            id,\r\n            value: group.id,\r\n            prop: NodeProperties.GroupParent\r\n        });\r\n    }\r\n\r\n    return graph;\r\n}\r\nfunction getGroupAncenstors(graph, id) {\r\n    var result = [];\r\n    if (graph.parentGroup[id]) {\r\n        for (var i in graph.parentGroup[id]) {\r\n            result = [...result, ...getGroupAncenstors(graph, i)];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getGroup(graph, id) {\r\n    return graph.groupLib[id];\r\n}\r\nfunction hasGroup(graph, parent) {\r\n    return !!(graph.nodeLib[parent] && GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups));\r\n}\r\nexport function GetNode(graph, id) {\r\n    if (graph && graph.nodeLib) {\r\n        return graph.nodeLib[id];\r\n    }\r\n    return null;\r\n}\r\nexport function GetGroup(graph, id) {\r\n    if (graph && graph.groupLib) {\r\n        return graph.groupLib[id];\r\n    }\r\n    return null;\r\n}\r\nexport function applyConstraints(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n    if (functionNodes) {\r\n        for (let i in functionNodes) {\r\n            let node = GetNode(graph, i);\r\n            if (node) {\r\n                var functionType = GetNodeProp(node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject) {\r\n                        graph = checkConstraints(graph, { id: i, functionConstraints: functionConstraintObject });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let validationNodes = NodesByType(graph, NodeTypes.Validator);\r\n    validationNodes.map(x => {\r\n        graph = applyValidationNodeRules(graph, x);\r\n    })\r\n    return graph;\r\n}\r\n\r\nfunction applyValidationNodeRules(graph, node) {\r\n\r\n    let validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (validator) {\r\n        var nodesLinks = getNodesLinkedTo(graph, { id: node.id });\r\n        var validatorProperties = getValidatorProperties(validator);\r\n        Object.keys(validatorProperties).map(property => {\r\n            if (graph.nodeLinks[property] && graph.nodeLinks[property][node.id]) {\r\n                //link between nodes exists.\r\n            }\r\n            else {\r\n                //link between nodes exists.\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction NodesByType(graph, nodeType, options = {}) {\r\n\r\n    var currentGraph = graph;\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs && currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    return [];\r\n}\r\nexport function existsLinkBetween(graph, options) {\r\n    var { source, target, type } = options;\r\n    var link = findLink(graph, { source, target })\r\n    if (link) {\r\n        return GetLinkProperty(link, LinkPropertyKeys.TYPE) === type;\r\n    }\r\n    return false;\r\n}\r\nexport function updateReferenceNodes(root) {\r\n    if (root && root.referenceNodes) {\r\n        for (var scope in root.referenceNodes) {\r\n            if (root.graphs && root.graphs[scope]) {\r\n                let scopedGraph = root.graphs[scope];\r\n                for (let nodeId in root.referenceNodes[scope]) {\r\n                    var masterNode = root.nodeLib[root.referenceNodes[scope][nodeId]];\r\n                    if (masterNode) {\r\n                        var refNode = GetNode(scopedGraph, nodeId);\r\n                        if (refNode) {\r\n                            //may be more properties later.\r\n                            refNode.properties.text = masterNode.properties.text;\r\n                            refNode.properties.referenceType = masterNode.properties.nodeType;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}\r\nexport function constraintSideEffects(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n\r\n    if (functionNodes) {\r\n        let classes_that_must_exist = [];\r\n        for (let i in functionNodes) {\r\n            var function_node = GetNode(graph, i);\r\n            if (function_node) {\r\n                var functionType = GetNodeProp(function_node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject && functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES]) {\r\n                        let functionConstraintRequiredClasses = functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES];\r\n                        if (functionConstraintRequiredClasses) {\r\n                            for (let j in functionConstraintRequiredClasses) {\r\n                                //Get the model constraint key.\r\n                                //Should be able to find the singular model that is connected to the functionNode and children, if it exists.\r\n                                let constraintModelKey = functionConstraintRequiredClasses[j][INTERNAL_TEMPLATE_REQUIREMENTS.MODEL];\r\n                                if (constraintModelKey) {\r\n                                    var constraint_nodes = getNodesFunctionsConnected(graph, { id: i, constraintKey: constraintModelKey });\r\n                                    var nodes_one_step_down_the_line = [];\r\n                                    constraint_nodes.map(cn => {\r\n                                        var nextNodes = getNodesLinkedTo(graph, { id: cn.id });\r\n                                        nodes_one_step_down_the_line.push(...nextNodes);\r\n                                    });\r\n                                    nodes_one_step_down_the_line.map(node => {\r\n                                        classes_that_must_exist.push({\r\n                                            nodeId: node.id,\r\n                                            functionNode: function_node.id,\r\n                                            key: constraintModelKey,\r\n                                            class: j\r\n                                        })\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            classes_that_must_exist = [...classes_that_must_exist.unique(x => {\r\n                return JSON.stringify(x);\r\n            })]\r\n            //Remove class nodes that are no longer cool.\r\n            Object.keys(graph.classNodes).map(i => {\r\n                if (!classes_that_must_exist.find(cls => {\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    return matchObject(res, cls);\r\n                })) {\r\n                    graph = removeNode(graph, { id: i })\r\n                }\r\n                else {\r\n\r\n                }\r\n            });\r\n            //Could make this faster by using a dictionary \r\n            classes_that_must_exist.map(cls => {\r\n                var matching_nodes = Object.keys(graph.classNodes).filter(i => {\r\n\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    if (matchObject(res, cls)) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                });\r\n                if (matching_nodes.length === 0) {\r\n                    //Create new classNodes\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: cls.functionNode,\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.RequiredClassLink }\r\n                        }\r\n                    }, NodeTypes.ClassNode, (new_node) => {\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.UIText,\r\n                            value: RequiredClassName(\r\n                                cls.class,\r\n                                GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName)\r\n                            )\r\n                        });\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.ClassConstructionInformation,\r\n                            value: cls\r\n                        });\r\n                    })\r\n                }\r\n                else if (matching_nodes.length === 1) {\r\n                    var _cnode = graph.nodeLib[matching_nodes[0]];\r\n                    //The existing classNodes can be updated with any new dependent values. e.g. Text/title\r\n                    graph = updateNodeProperty(graph, {\r\n                        id: _cnode.id,\r\n                        prop: NodeProperties.UIText,\r\n                        value: RequiredClassName(cls.class, GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName))\r\n                    });\r\n                }\r\n                else {\r\n                    console.error('There should never be more than one');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nexport function RequiredClassName(cls, node_name) {\r\n    return `${node_name}${cls}`;\r\n}\r\n\r\nexport function getNodesFunctionsConnected(graph, options) {\r\n    var { id, constraintKey } = options;\r\n    var result = [];\r\n\r\n    let links = getNodeLinksWithKey(graph, { id, key: constraintKey });\r\n\r\n    return links.map(link => {\r\n        return graph.nodeLib[link.target];\r\n    })\r\n}\r\n\r\n\r\nexport function checkConstraints(graph, options) {\r\n    var { id, functionConstraints } = options;\r\n    if (graph.nodeConnections[id]) {\r\n        let node = graph.nodeLib[id];\r\n        Object.keys(graph.nodeConnections[id]).map(link => {\r\n            //check if link has a constraint attached.\r\n            let { properties } = graph.linkLib[link];\r\n            let _link = graph.linkLib[link];\r\n            if (properties) {\r\n                let { constraints } = properties;\r\n                if (constraints) {\r\n                    Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                        let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                        let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                        if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                            if (_link.properties.constraints.key === constraintObj.key) {\r\n                                let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                graph = updateLinkProperty(graph, {\r\n                                    id: _link.id,\r\n                                    prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                    value: !!valid\r\n                                })\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function applyFunctionConstraints(graph, options) {\r\n    let { id, value } = options;\r\n\r\n    let functionConstraints = Functions[value];\r\n    if (functionConstraints) {\r\n        if (functionConstraints.constraints) {\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                getNodeFunctionConstraintLinks(graph, { id }).map(link => {\r\n                    let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                    if (!hasMatchingConstraints(link_constraints, functionConstraints.constraints)) {\r\n                        let nodeToRemove = GetTargetNode(graph, link.id);\r\n\r\n                        if (nodeToRemove) {\r\n                            graph = removeNode(graph, { id: nodeToRemove.id })\r\n                        }\r\n                        else {\r\n                            console.warn(\"No nodes were removed as exepected\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            let core_group = null;\r\n            let internal_group = null; //Internal scope group\r\n            let external_group = null; //API Group\r\n            let node = graph.nodeLib[id];\r\n\r\n            var existingGroups = GetNodeProp(node, NodeProperties.Groups);\r\n\r\n            if (existingGroups) {\r\n                for (let i in existingGroups) {\r\n                    graph = clearGroup(graph, { id: existingGroups[i] });\r\n                }\r\n            }\r\n\r\n            if (graph.nodesGroups[id]) {\r\n                for (let i in graph.nodesGroups[id]) {\r\n                    switch (GetGroupProperty(graph.groupLib[i], GroupProperties.FunctionGroup)) {\r\n                        case FunctionGroups.Core:\r\n                            core_group = graph.groupLib[i];\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!core_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    core_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Core\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!internal_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    internal_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Internal\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!external_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    external_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.External\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!graph.groupsNodes[external_group.id] || !graph.groupsNodes[external_group.id][id]) {\r\n                graph = addLeaf(graph, { leaf: id, id: external_group.id })\r\n            }\r\n\r\n            if (!graph.childGroups[internal_group.id] || !graph.childGroups[internal_group.id][external_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: internal_group.id, id: external_group.id });\r\n            }\r\n\r\n            if (!graph.childGroups[core_group.id] || !graph.childGroups[core_group.id][internal_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: core_group.id, id: internal_group.id });\r\n            }\r\n\r\n\r\n            var existMatchinLinks = getNodeFunctionConstraintLinks(graph, { id });\r\n            var constraintKeys = existMatchinLinks.map(link => {\r\n                let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                return findMatchingConstraints(link_constraints, functionConstraints.constraints);\r\n            })\r\n\r\n            Object.keys(functionConstraints.constraints).map(constraint => {\r\n                //Create links to new nodes representing those constraints.\r\n                if (constraintKeys.indexOf(constraint) === -1) {\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: node.id,\r\n                        linkProperties: {\r\n                            properties: {\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                constraints: {\r\n                                    ...functionConstraints.constraints[constraint]\r\n                                }\r\n                            }\r\n                        }\r\n                    }, NodeTypes.Parameter, (new_node) => {\r\n                        graph = updateNodeProperty(graph, { id: new_node.id, prop: NodeProperties.UIText, value: constraint });\r\n\r\n                    });\r\n                }\r\n            });\r\n\r\n            var nodes_with_link = getNodeFunctionConstraintLinks(graph, { id: node.id });\r\n\r\n            nodes_with_link.map((link) => {\r\n                let new_node = graph.nodeLib[link.target];\r\n                var constraint = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                if (constraint && constraint.key && functionConstraints.constraints[constraint.key] &&\r\n                    functionConstraints.constraints[constraint.key][FunctionConstraintKeys.IsInputVariable]) {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: internal_group.id });\r\n                }\r\n                else {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: core_group.id })\r\n                }\r\n            });\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                Object.keys(graph.nodeConnections[id]).map(link => {\r\n                    //check if link has a constraint attached.\r\n                    let { properties } = graph.linkLib[link];\r\n                    let _link = graph.linkLib[link];\r\n                    if (properties) {\r\n                        let { constraints } = properties;\r\n                        if (constraints) {\r\n                            Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                                let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                                let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                                if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                                    if (_link.properties.constraints.key === constraintObj.key) {\r\n                                        let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                        graph = updateLinkProperty(graph, {\r\n                                            id: _link.id,\r\n                                            prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                            value: !!valid\r\n                                        })\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            graph = updateNodeProperty(graph, {\r\n                id,\r\n                prop: NodeProperties.Groups,\r\n                value: {\r\n                    core: core_group.id,\r\n                    internal: internal_group.id,\r\n                    external: external_group.id\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nfunction getNodeLinksWithKey(graph, options) {\r\n    var { id, key } = options;\r\n    var result = [];\r\n    if (graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).map(link => {\r\n            let _link = graph.linkLib[link];\r\n            return _link;\r\n        }).filter(_link => {\r\n            return _link && _link.source === id && _link.properties && _link.properties.constraints && _link.properties.constraints.key === key;\r\n        })\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasMatchingConstraints(linkConstraint, functionConstraints) {\r\n    return !!findMatchingConstraints(linkConstraint, functionConstraints);\r\n}\r\nfunction findMatchingConstraints(linkConstraint, functionConstraints) {\r\n    let lcj = JSON.stringify(linkConstraint);\r\n    return Object.keys(functionConstraints).find(f => JSON.stringify(functionConstraints[f]) === lcj)\r\n}\r\n\r\nfunction getNodeFunctionConstraintLinks(graph, options) {\r\n    let { id } = options;\r\n    if (graph && graph.nodeConnections && graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(link => {\r\n            return GetLinkProperty(graph.linkLib[link], LinkPropertyKeys.TYPE) === LinkType.FunctionConstraintLink;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nexport const FunctionMeetsConstraint = {\r\n    meets: (constraintObj, constraints, link, node, graph) => {\r\n        if (constraintObj) {\r\n            let _targetNode = graph.nodeLib[link.target];\r\n            var nextNodes = getNodesLinkedTo(graph, { id: _targetNode.id });\r\n            return nextNodes.find(targetNode => {\r\n                return Object.keys(constraintObj).find(constraint => {\r\n                    let result = true;\r\n                    if (result === false) {\r\n                        return;\r\n                    }\r\n                    switch (constraint) {\r\n                        //Instance variable are always ok\r\n                        // case FunctionConstraintKeys.IsInstanceVariable:\r\n                        //     result = true;\r\n                        //     break;\r\n                        case FunctionConstraintKeys.IsAgent:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsAgent)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsUser:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsUser)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsTypeOf:\r\n                            //If it is an input variable, then we will all anything.\r\n                            if (!constraintObj[FunctionConstraintKeys.IsInputVariable]) {\r\n                                if (targetNode) {\r\n                                    let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                    let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                    // The targetNodeType should match the other node.\r\n                                    let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                    if (linkWithConstraints.length) {\r\n                                        let links = linkWithConstraints.filter(linkWithConstraint => {\r\n\r\n                                            let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                            let nodeToMatchWithType = GetNodeProp(nodeToMatchWith, NodeProperties.NODEType);\r\n                                            return (nodeToMatchWithType !== targetNodeType);\r\n                                        });\r\n                                        if (links.length === 0) {\r\n                                            result = false;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsChild:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsParent:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        // case FunctionConstraintKeys.IsParent:\r\n                        //     if (targetNode) {\r\n                        //         let targetConstraint = constraintObj[constraint];\r\n                        //         let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                        //         if (linkWithConstraints) {\r\n                        //             let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                        //                 let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                        //                 let linkToParentParameter = getNodesLinkedFrom(graph, { id: nodeToMatchWith.id });\r\n                        //                 if (linkToParentParameter && linkToParentParameter.length) {\r\n                        //                     let relationshipLink = findLink(graph, { target: linkToParentParameter[0].id, source: node.id })\r\n                        //                     if (!relationshipLink || !GetLinkProperty(relationshipLink, LinkProperties.ParentLink.type)) {\r\n                        //                         return false;\r\n                        //                     }\r\n                        //                 }\r\n                        //                 else {\r\n                        //                     return false;\r\n                        //                 }\r\n                        //                 return true;\r\n                        //             });\r\n\r\n                        //             if (links.length === 0) {\r\n                        //                 result = false;\r\n                        //             }\r\n                        //         }\r\n                        //         else {\r\n                        //             result = false;\r\n                        //         }\r\n                        //     }\r\n                        //     else {\r\n                        //         result = false;\r\n                        //     }\r\n                        //     break;\r\n                    }\r\n\r\n                    return result;\r\n                });\r\n            })\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\nfunction findLinkWithConstraint(nodeId, graph, targetConstraint) {\r\n    return Object.keys(graph.nodeConnections[nodeId]).filter(t => graph.nodeConnections[nodeId][t] === SOURCE).filter(link => {\r\n        if (link && graph.linkLib && graph.linkLib[link] && graph.linkLib[link].properties && graph.linkLib[link].properties.constraints\r\n            && graph.linkLib[link].properties.constraints.key === targetConstraint) {\r\n            return graph.linkLib[link];\r\n        }\r\n        return false;\r\n    }).map(link => graph.linkLib[link]);\r\n}\r\nexport function getNodeLinks(graph, id, direction) {\r\n    if (graph && graph.nodeConnections) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(x => {\r\n            if (direction) {\r\n                return graph.nodeConnections[id][x] === direction;\r\n            }\r\n            return true;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n    return [];\r\n}\r\nfunction findLink(graph, options) {\r\n    let { target, source } = options;\r\n    let res = graph.links.find(link => {\r\n        return graph.linkLib && graph.linkLib[link] && graph.linkLib[link].target === target && graph.linkLib[link].source === source;\r\n    });\r\n    if (res) {\r\n        return graph.linkLib[res];\r\n    }\r\n    return null;\r\n}\r\nexport function newLink(graph, options) {\r\n    let { target, source, properties } = options;\r\n    let link = createLink(target, source, properties);\r\n    return addLink(graph, options, link);\r\n}\r\n\r\nexport function GetTargetNode(graph, linkId) {\r\n    if (graph && graph.linkLib && graph.linkLib[linkId]) {\r\n        let target = graph.linkLib[linkId].target;\r\n        return graph.nodeLib[target];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getNodesLinkedFrom(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: TARGET });\r\n}\r\nexport function getNodesLinkedTo(graph, options) {\r\n    return getNodeLinkedTo(graph, options);\r\n}\r\nexport function getNodeLinkedTo(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: SOURCE });\r\n}\r\nexport function matchOneWay(obj1, obj2) {\r\n    if (obj1 === obj2) {\r\n        return true;\r\n    }\r\n    if (!obj1) {\r\n        return false;\r\n    }\r\n    if (!obj2) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function matchObject(obj1, obj2) {\r\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\nexport function GetLinkByNodes(graph, options) {\r\n    var { source, target } = options;\r\n    return Object.values(graph.linkLib).find(t => {\r\n        return t.source === source && t.target === target;\r\n    })\r\n}\r\nexport function GetLinkChainItem(state, options) {\r\n    var chains = GetLinkChain(state, options);\r\n\r\n    if (chains && chains.length) {\r\n        return chains[0];\r\n    }\r\n    return null;\r\n}\r\nexport function GetLinkChain(state, options) {\r\n    let graph = GetCurrentGraph(state);\r\n    var { id, links } = options;\r\n    var ids = [id];\r\n    var result = [];\r\n    links.map((op, il) => {\r\n        var newids = [];\r\n        ids.map(i => {\r\n            let newnodes = getNodesByLinkType(graph, {\r\n                id: i,\r\n                ...op\r\n            });\r\n            if (il === links.length - 1) {\r\n                result = newnodes;\r\n            }\r\n            else {\r\n                newids = [...newids, ...newnodes.map(t => t.id)];\r\n            }\r\n        })\r\n        newids = newids.unique(x => x);\r\n        ids = newids;\r\n    })\r\n    return result\r\n}\r\nexport function getNodesByLinkType(graph, options) {\r\n    if (options) {\r\n        var { id, direction, type, exist } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks)\r\n                    .filter(x => nodeLinks[x])\r\n                    .map(_id => {\r\n                        var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n\r\n                        if (!target) {\r\n                            console.warn('Missing value in linkLib');\r\n                            return null;\r\n                        }\r\n                        if (exist && graph.linkLib[_id].properties && graph.linkLib[_id].properties.exist) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        if (!type || graph.linkLib[_id].properties &&\r\n                            (graph.linkLib[_id].properties.type === type ||\r\n                                graph.linkLib[_id].properties[type])) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        return null;\r\n                    }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\nexport function getNodeLinked(graph, options) {\r\n    if (options) {\r\n        var { id, direction, constraints } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks).filter(x => nodeLinks[x] === direction).map(_id => {\r\n                    var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n                    if (!target) {\r\n                        console.warn('Missing value in linkLib');\r\n                        return null;\r\n                    }\r\n                    if (constraints) {\r\n                        let link = graph.linkLib[_id];\r\n                        let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                        if (matchOneWay(constraints, link_constraints)) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return graph.nodeLib[target];\r\n                }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexport const SOURCE = 'SOURCE';\r\nexport const TARGET = 'TARGET';\r\nexport function addLink(graph, options, link) {\r\n    let { target, source } = options;\r\n    if (target && source && target !== source) {\r\n        if (graph.nodeLib[target] && graph.nodeLib[source]) {\r\n            if (noSameLink(graph, { target, source })) {\r\n                graph.linkLib[link.id] = link;\r\n                graph.linkLib = { ...graph.linkLib };\r\n                graph.links = [...graph.links, link.id];\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.source] = {\r\n                    ...(graph.nodeConnections[link.source] || {}),\r\n                    ...{\r\n                        [link.id]: SOURCE\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.target] = {\r\n                    ...(graph.nodeConnections[link.target] || {}),\r\n                    ...{\r\n                        [link.id]: TARGET\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.source] = {\r\n                    ...(graph.nodeLinks[link.source] || {}),\r\n                    ...{\r\n                        [link.target]: graph.nodeLinks[link.source] ? (graph.nodeLinks[link.source][link.target] || 0) + 1 : 1\r\n                    }\r\n                };\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.target] = {\r\n                    ...graph.nodeLinks[link.target],\r\n                    ...{\r\n                        [link.source]: graph.nodeLinks[link.target] ? (graph.nodeLinks[link.target][link.source] || 0) + 1 : 1\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                var oldLink = findLink(graph, { target, source });\r\n                if (oldLink) {\r\n                    //  the type won't change onces its set\r\n                    // But the other properties can be \r\n                    oldLink.properties = {\r\n                        ...oldLink.properties,\r\n                        ...link.properties,\r\n                        ...({ type: oldLink.properties.type })\r\n                    };\r\n                }\r\n            }\r\n            graph.nodeLinks = { ...graph.nodeLinks }\r\n            graph = { ...graph };\r\n        }\r\n    }\r\n    return graph;\r\n}\r\nexport function addLinkBetweenNodes(graph, options) {\r\n    let { target, source, properties } = options;\r\n    if (target !== source) {\r\n        let link = createLink(target, source, properties);\r\n        return addLink(graph, options, link);\r\n    }\r\n    return graph;\r\n}\r\nexport function findLinkInstance(graph, options) {\r\n    let { target, source } = options;\r\n    let link = graph.links.find(x => graph.linkLib[x].source === source && graph.linkLib[x].target == target);\r\n    return link;\r\n}\r\nexport function getLinkInstance(graph, options) {\r\n    var linkId = findLinkInstance(graph, options);\r\n    if (linkId) {\r\n        return graph.linkLib[linkId];\r\n    }\r\n    return null;\r\n}\r\nexport function getAllLinksWithNode(graph, id) {\r\n    return graph.links.filter(x => graph.linkLib[x].source === id || graph.linkLib[x].target === id);\r\n}\r\nexport function removeLinkBetweenNodes(graph, options) {\r\n    let link = findLinkInstance(graph, options);\r\n    return removeLink(graph, link, options);\r\n}\r\nexport function removeLinkById(graph, options) {\r\n    let link = graph.linkLib[options.id];\r\n    return removeLink(graph, link);\r\n}\r\nexport function executeEvents(graph, link, evt) {\r\n    switch (evt) {\r\n        case LinkEvents.Remove:\r\n            graph = executeRemoveEvents(graph, link);\r\n            break;\r\n    }\r\n    return graph;\r\n}\r\nexport const EventFunctions = {};\r\nexport function addEventFunction(key, func) {\r\n    EventFunctions[key] = func;\r\n}\r\nexport function removeEventFunction(key) {\r\n    delete EventFunctions[key];\r\n}\r\nexport function executeRemoveEvents(graph, link) {\r\n    if (link && link.properties && link.properties.on && link.properties.on[LinkEvents.Remove]) {\r\n        link.properties.on[LinkEvents.Remove].map(args => {\r\n            if (args.function && EventFunctions[args.function]) {\r\n                graph = EventFunctions[args.function](graph, link, args.function, args)\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\nexport function isUIExtensionEnumerable(node) {\r\n    let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n    if (_node && _node.config) {\r\n        return _node.config.isEnumeration\r\n    }\r\n}\r\nexport function GetUIExentionEnumeration(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.list;\r\n    }\r\n    return null;\r\n}\r\nexport function GetUIExentionKeyField(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.keyField;\r\n    }\r\n    return null;\r\n}\r\naddEventFunction('OnRemoveValidationPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Validator), { id: target });\r\n    return graph;\r\n});\r\naddEventFunction('OnRemoveExecutorPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Executor), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveModelFilterPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.ModelItemFilter), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveValidationItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveExecutorItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Executor);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\n\r\nexport function removeValidatorItem(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator]\r\n}\r\nexport function createEventProp(type, options = {}) {\r\n    var res = { on: {} };\r\n    switch (type) {\r\n        case LinkEvents.Remove:\r\n            res.on[type] = [{\r\n                ...options\r\n            }];\r\n            break;\r\n    }\r\n\r\n    return res;\r\n}\r\nexport function removeLink(graph, link, options = {}) {\r\n    if (link && options.linkType) {\r\n        let update_link = graph.linkLib[link];\r\n        if (update_link && update_link.properties && update_link.properties[options.linkType]) {\r\n            delete update_link.properties[options.linkType];\r\n\r\n            //If only the type is on the property\r\n        }\r\n        if (update_link && Object.keys(update_link.properties).length > 1) {\r\n            return { ...graph };\r\n        }\r\n    }\r\n    if (link) {\r\n        graph.links = [...graph.links.filter(x => x !== link)];\r\n        let del_link = graph.linkLib[link];\r\n        if (del_link.properties) {\r\n            if (del_link.properties.on && del_link.properties.on[LinkEvents.Remove]) {\r\n                graph = executeEvents(graph, del_link, LinkEvents.Remove);\r\n            }\r\n        }\r\n        delete graph.linkLib[link]\r\n        graph.linkLib = { ...graph.linkLib };\r\n        graph.nodeLinks[del_link.source] = {\r\n            ...graph.nodeLinks[del_link.source],\r\n            ...{\r\n                [del_link.target]: graph.nodeLinks[del_link.source] ? (graph.nodeLinks[del_link.source][del_link.target] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.source] && !graph.nodeLinks[del_link.source][del_link.target]) {\r\n            delete graph.nodeLinks[del_link.source][del_link.target];\r\n            if (Object.keys(graph.nodeLinks[del_link.source]).length === 0) {\r\n                delete graph.nodeLinks[del_link.source];\r\n            }\r\n        }\r\n        graph.nodeLinks[del_link.target] = {\r\n            ...graph.nodeLinks[del_link.target],\r\n            ...{\r\n                [del_link.source]: graph.nodeLinks[del_link.target] ? (graph.nodeLinks[del_link.target][del_link.source] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.target] && !graph.nodeLinks[del_link.target][del_link.source]) {\r\n            delete graph.nodeLinks[del_link.target][del_link.source];\r\n            if (Object.keys(graph.nodeLinks[del_link.target]).length === 0) {\r\n                delete graph.nodeLinks[del_link.target];\r\n            }\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.source] && graph.nodeConnections[del_link.source][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.source][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.source]).length === 0) {\r\n            delete graph.nodeConnections[del_link.source];\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.target] && graph.nodeConnections[del_link.target][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.target][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.target]).length === 0) {\r\n            delete graph.nodeConnections[del_link.target];\r\n        }\r\n\r\n    }\r\n    return { ...graph };\r\n\r\n}\r\nexport function updateNodeText(graph, options) {\r\n    let { id, value } = options;\r\n    if (id && graph.nodeLib && graph.nodeLib[id]) {\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                _properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    i: value\r\n                },\r\n                get properties() {\r\n                    return this._properties;\r\n                },\r\n                set properties(value) {\r\n                    this._properties = value;\r\n                },\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function updateNodeProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    let additionalChange = {};\r\n    if (id && prop && graph.nodeLib && graph.nodeLib[id]) {\r\n        if (NodePropertiesDirtyChain[prop]) {\r\n            let temps = NodePropertiesDirtyChain[prop];\r\n            temps.map(temp => {\r\n                if (!graph.nodeLib[id].dirty[temp.chainProp]) {\r\n                    additionalChange[temp.chainProp] = temp.chainFunc(value);\r\n                }\r\n            });\r\n        }\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                dirty: {\r\n                    [prop]: true,\r\n                    ...(graph.nodeLib[id].dirty || {})\r\n                },\r\n                properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    [prop]: value,\r\n                    ...additionalChange,\r\n                }\r\n            }\r\n        }\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.Function) {\r\n            graph.functionNodes = { ...graph.functionNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.functionNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.functionNodes[id];\r\n                graph.functionNodes = { ...graph.functionNodes };\r\n            }\r\n        }\r\n\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.ClassNode) {\r\n            graph.classNodes = { ...graph.classNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.classNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.classNodes[id];\r\n                graph.classNodes = { ...graph.classNodes };\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateLinkProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.linkLib && graph.linkLib[id]) {\r\n        graph.linkLib[id] = {\r\n            ...graph.linkLib[id], ...{\r\n                properties: {\r\n                    ...(graph.linkLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateGroupProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.groupLib && graph.groupLib[id]) {\r\n        graph.groupLib[id] = {\r\n            ...graph.groupLib[id], ...{\r\n                properties: {\r\n                    ...(graph.groupLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction noSameLink(graph, ops) {\r\n    return !graph.links.some(x => {\r\n        let temp = graph.linkLib[x];\r\n        return temp.source === ops.source && temp.target === ops.target;\r\n    })\r\n}\r\nfunction createGroup() {\r\n    return {\r\n        id: uuidv4(),\r\n        leaves: [],\r\n        groups: [],\r\n        properties: {}\r\n    }\r\n}\r\nfunction createNode(nodeType) {\r\n    return {\r\n        id: uuidv4(),\r\n        dirty: {\r\n\r\n        },\r\n        properties: {\r\n            text: nodeType || Titles.Unknown\r\n        }\r\n    }\r\n}\r\nfunction createLink(target, source, properties) {\r\n    properties = properties || {};\r\n    return {\r\n        id: uuidv4(),\r\n        source,\r\n        target,\r\n        properties\r\n    }\r\n}\r\nfunction copyLink(link) {\r\n    return {\r\n        ...(JSON.parse(JSON.stringify(link)))\r\n    }\r\n}\r\nexport function duplicateNode(nn) {\r\n    return {\r\n        ...nn\r\n    };\r\n}\r\nexport function duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.indexOf(nn.source),\r\n        target: nodes.indexOf(nn.target)\r\n    };\r\n}\r\n\r\nexport function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nfunction GetNodesInsideGroup(graph, t, seenGroups = {}) {\r\n    var res = [...Object.keys(graph.groupsNodes[t])];\r\n    for (var i in graph.childGroups[t]) {\r\n        if (!seenGroups[i]) {\r\n            seenGroups = {\r\n                ...seenGroups,\r\n                [i]: true\r\n            };\r\n            res = [...res, ...GetNodesInsideGroup(graph, i, seenGroups)]\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\nexport const GroupImportanceOrder = {\r\n    [NodeTypes.Model]: 1,\r\n    [NodeTypes.Function]: 1,\r\n    [NodeTypes.Method]: 1,\r\n    [NodeTypes.Property]: 4,\r\n    [NodeTypes.ValidationList]: 5,\r\n    [NodeTypes.OptionList]: 6,\r\n    [NodeTypes.Parameter]: 4,\r\n    [NodeTypes.Permission]: 4,\r\n    [NodeTypes.Attribute]: 8,\r\n    [NodeTypes.ValidationList]: 10,\r\n    [NodeTypes.ValidationListItem]: 12,\r\n    [NodeTypes.ModelItemFilter]: 13\r\n}\r\n\r\nexport function SetVisible(graph) {\r\n    graph.visibleNodes = {}\r\n    graph.nodes.map(t => {\r\n        if (GetNodeProp(GetNode(graph, t), NodeProperties.Pinned)) {\r\n            graph.visibleNodes[t] = true;\r\n        }\r\n    });\r\n    if (graph.depth) {\r\n        [].interpolate(0, graph.depth, x => {\r\n            Object.keys(graph.visibleNodes).map(t => {\r\n                for (let h in graph.nodeLinks[t]) {\r\n                    graph.visibleNodes[h] = true;\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return graph;\r\n}\r\nfunction getDepth(groupId, graph) {\r\n    let res = 0;\r\n    if (graph.groupLib[groupId]) {\r\n        if (graph.parentGroup[groupId]) {\r\n            let parent = Object.keys(graph.parentGroup[groupId])[0];\r\n            if (parent) {\r\n                res = res + getDepth(parent, graph);\r\n            }\r\n        }\r\n        res = res + 1;\r\n    }\r\n    return res;\r\n}\r\nexport function FilterGraph(graph) {\r\n    let filteredGraph = createGraph();\r\n    filteredGraph.id = graph.id;\r\n    filteredGraph.linkLib = { ...graph.linkLib };\r\n    filteredGraph.nodesGroups = { ...graph.nodesGroups };\r\n    filteredGraph.groupsNodes = { ...graph.groupsNodes };\r\n    filteredGraph.groups = [...graph.groups];\r\n    filteredGraph.groupLib = { ...graph.groupLib };\r\n    filteredGraph.childGroups = { ...graph.childGroups };\r\n    filteredGraph.parentGroup = { ...graph.parentGroup };\r\n    filteredGraph.links = [...graph.links.filter(linkId => {\r\n        var { target, source } = graph.linkLib[linkId];\r\n        if (graph.visibleNodes[target] && graph.visibleNodes[source]) {\r\n            return true;\r\n        } else {\r\n            delete filteredGraph.linkLib[linkId];\r\n        }\r\n        return false;\r\n    })];\r\n    Object.keys(graph.nodesGroups).map(nodeId => {\r\n        if (!graph.visibleNodes[nodeId]) {\r\n            let temp = graph.nodesGroups[nodeId];\r\n            for (let i in temp) {\r\n                filteredGraph.groupsNodes[i] = { ...filteredGraph.groupsNodes[i] };\r\n                delete filteredGraph.groupsNodes[i][nodeId]\r\n                if (Object.keys(filteredGraph.groupsNodes[i]).length === 0) {\r\n                    delete filteredGraph.groupsNodes[i]\r\n                }\r\n            }\r\n            delete filteredGraph.nodesGroups[nodeId]\r\n        }\r\n    });\r\n    Object.keys(filteredGraph.groupLib).sort((b, a) => {\r\n        return getDepth(a, graph) - getDepth(b, graph);\r\n    }).map(group => {\r\n        if (filteredGraph.groupLib[group].leaves) {\r\n            filteredGraph.groupLib[group] = { ...filteredGraph.groupLib[group] };\r\n            filteredGraph.groupLib[group].leaves = [...filteredGraph.groupLib[group].leaves.filter(x => graph.visibleNodes[x])];\r\n            filteredGraph.groupLib[group].groups = [...filteredGraph.groupLib[group].groups.filter(x => filteredGraph.groupLib[x])];\r\n            if (!filteredGraph.groupLib[group].leaves.length && !filteredGraph.groupLib[group].groups.length) {\r\n                filteredGraph.groups = [...filteredGraph.groups.filter(x => x !== group)];\r\n                delete filteredGraph.groupLib[group]\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.childGroups).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.childGroups[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.childGroups[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.childGroups[group] = { ...filteredGraph.childGroups[group] }\r\n                    delete filteredGraph.childGroups[group][t]\r\n                }\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.parentGroup).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.parentGroup[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.parentGroup[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.parentGroup[group] = { ...filteredGraph.parentGroup[group] }\r\n                    delete filteredGraph.parentGroup[group][t]\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.keys(graph.visibleNodes).map(nodeId => {\r\n        filteredGraph.nodeLib[nodeId] = graph.nodeLib[nodeId];\r\n        filteredGraph.nodes.push(nodeId);\r\n        filteredGraph.nodeConnections[nodeId] = { ...graph.nodeConnections[nodeId] };\r\n        filteredGraph.nodeLinks[nodeId] = { ...graph.nodeLinks[nodeId] };\r\n\r\n        Object.keys(graph.nodeLinks[nodeId] || {}).map(t => {\r\n            if (!filteredGraph.linkLib[t]) {\r\n                filteredGraph.nodeLinks[nodeId] = { ...filteredGraph.nodeLinks[nodeId] }\r\n                delete filteredGraph.nodeLinks[nodeId][t];\r\n            }\r\n        })\r\n    })\r\n\r\n    return filteredGraph;\r\n}\r\nexport function VisualProcess(graph) {\r\n    let vgraph = createGraph();\r\n    vgraph.id = graph.id;\r\n    graph = SetVisible(graph);\r\n    graph = FilterGraph(graph)\r\n    let collapsedNodes = graph.nodes.filter(node => GetNodeProp(graph.nodeLib[node], NodeProperties.Collapsed));\r\n    let collapsingGroups = {};\r\n    collapsedNodes.map(t => {\r\n        if (graph.nodesGroups[t]) {\r\n            let t_importance = GroupImportanceOrder[GetNodeProp(graph.nodeLib[t], NodeProperties.NODEType)] || 1000;\r\n            var sortedGroups = Object.keys(graph.nodesGroups[t]).filter(nodeGroupKey => {\r\n\r\n                let nodesInGroup = GetNodesInsideGroup(graph, nodeGroupKey);\r\n                var moreImportantNode = nodesInGroup.find(n => {\r\n                    if (n === t) {\r\n                        return false;\r\n                    }\r\n                    var _type = GetNodeProp(graph.nodeLib[n], NodeProperties.NODEType);\r\n                    let n_importance = GroupImportanceOrder[_type] || 1000;\r\n\r\n                    if (n_importance > t_importance) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                if (moreImportantNode) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }).sort((b, a) => {\r\n                return Object.keys(graph.groupsNodes[a]).length - Object.keys(graph.groupsNodes[b]).length;\r\n            });\r\n            if (sortedGroups.length) {\r\n                collapsingGroups[sortedGroups[0]] = true;\r\n            }\r\n        }\r\n    });\r\n    let smallestsNonCrossingGroups = Object.keys(collapsingGroups).filter(cg => {\r\n        for (var g_ in graph.parentGroup[cg]) {\r\n            if (collapsingGroups[g_]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n    let disappearingNodes = {};\r\n    smallestsNonCrossingGroups.map(t => {\r\n        let dt = {};\r\n        let head = null;\r\n        let mostimportant = 10000;\r\n        let _nodes = GetNodesInsideGroup(graph, t);\r\n        _nodes.filter(t => {\r\n            var type = GetGroupProperty(graph.nodeLib[t], NodeProperties.NODEType);\r\n            dt[t] = true;\r\n            if (GroupImportanceOrder[type] < mostimportant) {\r\n                head = t;\r\n                mostimportant = GroupImportanceOrder[type];\r\n            }\r\n        });\r\n        delete dt[head];\r\n        for (var i in dt) {\r\n            dt[i] = head;\r\n        }\r\n        disappearingNodes = { ...disappearingNodes, ...dt };\r\n    });\r\n\r\n    vgraph.nodes = [...graph.nodes.filter(x => !disappearingNodes[x])]\r\n    vgraph.nodeLib = {};\r\n    vgraph.nodes.map(t => { vgraph.nodeLib[t] = graph.nodeLib[t] });\r\n    vgraph.links = graph.links.map(x => {\r\n        //Find any link that should be disappearing, and make it go away\r\n        var { source, target } = graph.linkLib[x];\r\n        var dupLink;\r\n        if (disappearingNodes[source] && disappearingNodes[target]) {\r\n            // the link is going totally away;\r\n            return false;\r\n        }\r\n        else if (disappearingNodes[source]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.source = disappearingNodes[source];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else if (disappearingNodes[target]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.target = disappearingNodes[target];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        if (dupLink.source === dupLink.target) {\r\n            return false;\r\n        }\r\n        return dupLink.id;\r\n    }).filter(x => x);\r\n\r\n    var vgroups = graph.groups.map((group, groupIndex) => {\r\n        let oldgroup = graph.groupLib[group];\r\n        let newgroup = createGroup();\r\n        newgroup.id = `${oldgroup.id}`;\r\n        if (oldgroup && oldgroup.leaves) {\r\n            oldgroup.leaves.map(leaf => {\r\n                if (vgraph.nodeLib[leaf]) {\r\n                    newgroup.leaves.push(leaf);\r\n                }\r\n            })\r\n        }\r\n        if (newgroup.leaves.length) {\r\n            vgraph.groupLib[newgroup.id] = newgroup;\r\n\r\n            return newgroup.id\r\n        }\r\n        return null;\r\n    }).filter(x => x);\r\n    vgroups.map((group) => {\r\n        vgraph.groupLib[group].groups = (graph.groupLib[group].groups || []).filter(og => {\r\n            if (vgraph.groupLib[og]) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n    })\r\n    vgraph.groups = vgroups;\r\n    return vgraph;\r\n}\r\n","var fs = require('fs');\r\nconst { ipcRenderer } = require('electron')\r\nconst remote = require('electron').remote;\r\nvar dialog = remote.dialog;\r\n\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport * as NodeConstants from '../constants/nodetypes';\r\nimport * as Titles from '../components/titles';\r\nexport const VISUAL = 'VISUAL';\r\nexport const APPLICATION = 'APPLICATION';\r\nexport const GRAPHS = 'GRAPHS';\r\nexport const VISUAL_GRAPH = 'VISUAL_GRAPH';\r\nexport const DASHBOARD_MENU = 'DASHBOARD_MENU';\r\nexport const SELECTED_NODE_BB = 'SELECTED_NODE_BB';\r\nexport const SIDE_PANEL_EXTRA_WIDTH = 'SIDE_PANEL_EXTRA_WIDTH';\r\nexport const NodeTypes = NodeConstants.NodeTypes;\r\nexport const NodeTypeColors = NodeConstants.NodeTypeColors;\r\nexport const NodeProperties = NodeConstants.NodeProperties;\r\nexport const LinkProperties = NodeConstants.LinkProperties;\r\nexport const NodeAttributePropertyTypes = NodeConstants.NodeAttributePropertyTypes;\r\nexport const NodePropertyTypes = NodeConstants.NodePropertyTypes;\r\nexport const ValidationRules = NodeConstants.ValidationRules;\r\nexport const OptionsTypes = NodeConstants.OptionsTypes;\r\n\r\nexport const UI_UPDATE = 'UI_UPDATE';\r\nexport function GetC(state, section, item) {\r\n    if (state && state.uiReducer && state.uiReducer[section]) {\r\n        return state.uiReducer[section][item];\r\n    }\r\n    return null;\r\n}\r\nexport function Visual(state, key) {\r\n    return GetC(state, VISUAL, key);\r\n}\r\nexport function IsCurrentNodeA(state, type) {\r\n    var currentNode = Node(state, Visual(state, SELECTED_NODE));\r\n    return currentNode && currentNode.properties && currentNode.properties.nodeType === type;\r\n}\r\nexport function Use(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function GetNodeProp(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function GetLinkChainItem(options) {\r\n    return GraphMethods.GetLinkChainItem(GetState(), options);\r\n}\r\nexport function GetCodeName(node) {\r\n    if (typeof (node) === 'string') {\r\n        node = GraphMethods.GetNode(GetCurrentGraph(GetState()), node);\r\n    }\r\n    return GetNodeProp(node, NodeProperties.CodeName);\r\n}\r\nexport function GetMethodPropNode(graph, node, key) {\r\n    var methodProps = GetNodeProp(node, NodeProperties.MethodProps);\r\n    if (methodProps) {\r\n        return GraphMethods.GetNode(graph, methodProps[key] || null);\r\n    }\r\n    return null;\r\n}\r\nexport function GetLinkProperty(link, prop) {\r\n    return link && link.properties && link.properties[prop]\r\n}\r\n\r\nexport function GetGroupProperty(group, prop) {\r\n    return group && group.properties && group.properties[prop]\r\n}\r\n\r\nexport function VisualEq(state, key, value) {\r\n    return Visual(state, key) === value;\r\n}\r\nexport function Node(state, nodeId) {\r\n\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph && currentGraph.nodeLib) {\r\n        return currentGraph.nodeLib[nodeId];\r\n    }\r\n    return null;\r\n}\r\nexport function Application(state, key) {\r\n    return GetC(state, APPLICATION, key);\r\n}\r\nexport function GetVisualGraph(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    return currentGraph ? GetC(state, VISUAL_GRAPH, currentGraph.id) : null;\r\n}\r\nexport function SaveApplication(value, key, dispatch) {\r\n    dispatch(UIC(APPLICATION, key, value));\r\n}\r\nexport function Graphs(state, key) {\r\n    return GetC(state, GRAPHS, key);\r\n}\r\nexport function SaveGraph(graph, dispatch) {\r\n    graph = {\r\n        ...graph,\r\n        ...{\r\n            updated: Date.now()\r\n        }\r\n    };\r\n    let visualGraph = GraphMethods.VisualProcess(graph);\r\n    if (visualGraph)\r\n        dispatch(UIC(VISUAL_GRAPH, visualGraph.id, visualGraph));\r\n    dispatch(UIC(GRAPHS, graph.id, graph));\r\n}\r\nexport function UIC(section, item, value) {\r\n    return {\r\n        type: UI_UPDATE,\r\n        item,\r\n        value,\r\n        section\r\n    }\r\n}\r\nexport function toggleVisual(key) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, !!!GetC(state, VISUAL, key)))\r\n    }\r\n\r\n}\r\n\r\nexport function GUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nexport function setVisual(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, value))\r\n    }\r\n\r\n}\r\nexport function setApplication(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(APPLICATION, key, value))\r\n    }\r\n\r\n}\r\nexport const SELECTED_LINK = 'SELECTED_LINK';\r\nexport const HOVERED_LINK = 'HOVERED_LINK';\r\nexport const SELECTED_NODE = 'SELECTED_NODE';\r\nexport function SelectedNode(nodeId) {\r\n    return (dispatch, getState) => {\r\n        dispatch(UIC(VISUAL, SELECTED_NODE, nodeId));\r\n    }\r\n}\r\nexport function toggleDashboardMinMax() {\r\n    return toggleVisual(DASHBOARD_MENU);\r\n}\r\nexport function GetNodeTitle(node) {\r\n    if (!node) { return Titles.Unknown }\r\n    return node.properties ? node.properties.text || node.id : node.id;\r\n}\r\nexport function GetNodes(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return [...currentGraph.nodes.map(t => currentGraph.nodeLib[t])];\r\n    }\r\n    return [];\r\n}\r\nexport function CanChangeType(node) {\r\n    var nodeType = GetNodeProp(node, NodeProperties.NODEType);\r\n    switch (nodeType) {\r\n        case NodeTypes.ReferenceNode:\r\n            return false;\r\n        default:\r\n            return true;\r\n    }\r\n}\r\nexport function NodesByType(state, nodeType, options = {}) {\r\n\r\n    var currentGraph = options.useRoot ? GetRootGraph(state) : GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs && currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    return [];\r\n}\r\n\r\nexport function GetNodeFromRoot(state, id) {\r\n    var graph = GetRootGraph(state);\r\n    if (graph) {\r\n        return GraphMethods.GetNode(graph, id);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function NodesConnectedTo(state, nodeId) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return (t) => {\r\n            if (currentGraph.linkLib[t.id]) {\r\n                return currentGraph.linkLib[t.id][nodeId];\r\n            }\r\n        }\r\n    }\r\n    return () => false;\r\n}\r\nlet _getState;\r\nexport function GetState() {\r\n    return _getState();\r\n}\r\nexport function setState() {\r\n    return (dispatch, getState) => {\r\n        _getState = getState;\r\n    }\r\n}\r\nexport function GetFunctionType(methodNode) {\r\n    return GetNodeProp(methodNode, NodeProperties.FunctionType);\r\n}\r\nexport function GetMethodNodeProp(methodNode, key) {\r\n    return (GetNodeProp(methodNode, NodeProperties.MethodProps) || {})[key];\r\n}\r\nexport function GetMethodProps(methodNode, key) {\r\n    return (GetNodeProp(methodNode, NodeProperties.MethodProps) || {});\r\n}\r\nexport function GetPermissionMethod(permission) {\r\n    return GetLinkChainItem({\r\n        id: permission.id,\r\n        links: [{\r\n            type: NodeConstants.LinkType.FunctionOperator,\r\n            direction: GraphMethods.TARGET\r\n        }]\r\n    })\r\n}\r\nexport function GetCurrentGraph(state) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    var scopedGraph = GetCurrentScopedGraph(state);\r\n    return scopedGraph;\r\n    // if (currentGraph) {\r\n    //     currentGraph = Graphs(state, currentGraph);\r\n    // }\r\n    // return currentGraph;\r\n}\r\nexport function GetRootGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n    }\r\n    else if (dispatch) {\r\n        currentGraph = GraphMethods.createGraph();\r\n        SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n    }\r\n\r\n    return currentGraph;\r\n}\r\nexport function GetSubGraphs(state) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        let subgraphs = GraphMethods.getSubGraphs(currentGraph);\r\n        return subgraphs;\r\n    }\r\n    return null;\r\n}\r\nexport function addNewSubGraph() {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = GraphMethods.addNewSubGraph(rootGraph);\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\n\r\nexport function setRootGraph(key, value) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = {\r\n            ...rootGraph, ...{ [key]: value }\r\n        };\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\nexport function setAppsettingsAssemblyPrefixes(prefixes) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph.appConfig.AppSettings.AssemblyPrefixes = ['RedQuick', prefixes].unique(x => x).join(';')\r\n        SaveGraph(rootGraph, dispatch);\r\n    }\r\n}\r\nexport function GetCurrentScopedGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    let scope = Application(state, GRAPH_SCOPE) || [];\r\n\r\n    if (!currentGraph) {\r\n        if (dispatch) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n        }\r\n    }\r\n    else {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        if (scope.length) {\r\n            currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n        }\r\n    }\r\n    return currentGraph\r\n}\r\nexport function GetSelectedSubgraph(state) {\r\n    var root = GetRootGraph(state);\r\n    if (root) {\r\n        var scope = Application(state, GRAPH_SCOPE);\r\n        if (scope && scope.length) {\r\n            return GraphMethods.getSubGraph(root, scope);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport const UPDATE_GRAPH_TITLE = 'UPDATE_GRAPH_TITLE';\r\nexport const NEW_NODE = 'NEW_NODE';\r\nexport const REMOVE_NODE = 'REMOVE_NODE';\r\nexport const NEW_LINK = 'NEW_LINK';\r\nexport const CHANGE_NODE_TEXT = 'CHANGE_NODE_TEXT';\r\nexport const CURRENT_GRAPH = 'CURRENT_GRAPH';\r\nexport const GRAPH_SCOPE = 'GRAPH_SCOPE';\r\nexport const CHANGE_NODE_PROPERTY = 'CHANGE_NODE_PROPERTY';\r\nexport const NEW_PROPERTY_NODE = 'NEW_PROPERTY_NODE';\r\nexport const NEW_PERMISSION_NODE = 'NEW_PERMISSION_NODE';\r\nexport const NEW_ATTRIBUTE_NODE = 'NEW_ATTRIBUTE_NODE';\r\nexport const ADD_LINK_BETWEEN_NODES = 'ADD_LINK_BETWEEN_NODES';\r\nexport const NEW_CONDITION_NODE = 'NEW_CONDITION_NODE';\r\nexport const REMOVE_LINK_BETWEEN_NODES = 'REMOVE_LINK_BETWEEN_NODES';\r\nexport const REMOVE_LINK = 'REMOVE_LINK';\r\nexport const NEW_CHOICE_ITEM_NODE = 'NEW_CHOICE_ITEM_NODE';\r\nexport const NEW_PARAMETER_NODE = 'NEW_PARAMETER_NODE';\r\nexport const NEW_FUNCTION_OUTPUT_NODE = 'NEW_FUNCTION_OUTPUT_NODE';\r\nexport const NEW_MODEL_ITEM_FILTER = 'NEW_MODEL_ITEM_FILTER';\r\nexport const NEW_VALIDATION_ITEM_NODE = 'NEW_VALIDATION_ITEM_NODE';\r\nexport const NEW_CHOICE_TYPE = 'NEW_CHOICE_TYPE';\r\nexport const NEW_VALIDATION_TYPE = 'NEW_VALIDATION_TYPE';\r\nexport const NEW_OPTION_ITEM_NODE = 'NEW_OPTION_ITEM_NODE';\r\nexport const NEW_OPTION_NODE = 'NEW_OPTION_NODE';\r\nexport const NEW_CUSTOM_OPTION = 'NEW_CUSTOM_OPTION';\r\nexport const NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE = 'NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE';\r\nexport const NEW_EXTENSION_LIST_NODE = 'NEW_EXTENSION_LIST_NODE';\r\nexport const NEW_EXTENTION_NODE = 'NEW_EXTENTION_NODE';\r\nexport const ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY = 'ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY';\r\nexport const APPLY_FUNCTION_CONSTRAINTS = 'APPLY_FUNCTION_CONSTRAINTS';\r\nexport const ADD_NEW_REFERENCE_NODE = 'ADD_NEW_REFERENCE_NODE;'\r\nexport const SET_DEPTH = 'SET_DEPTH';\r\n\r\nexport function graphOperation(operation, options) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let rootGraph = null;\r\n        var currentGraph = Application(state, CURRENT_GRAPH);\r\n        let scope = Application(state, GRAPH_SCOPE) || [];\r\n        if (!currentGraph) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n            rootGraph = currentGraph\r\n        }\r\n        else {\r\n            currentGraph = Graphs(state, currentGraph);\r\n            rootGraph = currentGraph;\r\n            if (scope.length) {\r\n                currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n            }\r\n        }\r\n        var operations = operation;\r\n        if (!Array.isArray(operation)) {\r\n            operations = [{ operation: operation, options }]\r\n        }\r\n        operations.filter(x => x).map(op => {\r\n            let { operation, options } = op;\r\n            switch (operation) {\r\n                case SET_DEPTH:\r\n                    currentGraph = GraphMethods.setDepth(currentGraph, options);\r\n                    break;\r\n                case NEW_NODE:\r\n                    currentGraph = GraphMethods.newNode(currentGraph);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case REMOVE_NODE:\r\n                    currentGraph = GraphMethods.removeNode(currentGraph, options);\r\n                    break;\r\n                case UPDATE_GRAPH_TITLE:\r\n                    currentGraph = GraphMethods.updateGraphTitle(currentGraph, options);\r\n                    break;\r\n                case NEW_LINK:\r\n                    currentGraph = GraphMethods.newLink(currentGraph, options)\r\n                    break;\r\n                case ADD_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.addLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.removeLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK:\r\n                    currentGraph = GraphMethods.removeLinkById(currentGraph, options);\r\n                    break;\r\n                case CHANGE_NODE_TEXT:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, { ...options, prop: 'text' });\r\n                    break;\r\n                case CHANGE_NODE_PROPERTY:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, options);\r\n                    break;\r\n                case NEW_PROPERTY_NODE:\r\n                    currentGraph = GraphMethods.addNewPropertyNode(currentGraph, options);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_ATTRIBUTE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Attribute);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CONDITION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Condition);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_MODEL_ITEM_FILTER:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ModelItemFilter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.PermissionDependency);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CHOICE_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ChoiceList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PARAMETER_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Parameter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_FUNCTION_OUTPUT_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.FunctionOutput);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Permission);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CUSTOM_OPTION:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionCustom);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_NEW_REFERENCE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ReferenceNode);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENSION_LIST_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionTypeList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionType);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case APPLY_FUNCTION_CONSTRAINTS:\r\n                    currentGraph = GraphMethods.applyFunctionConstraints(currentGraph, options);\r\n                    // setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY:\r\n                    break;\r\n            }\r\n            currentGraph = GraphMethods.applyConstraints(currentGraph);\r\n            currentGraph = GraphMethods.constraintSideEffects(currentGraph);\r\n        })\r\n\r\n        if (scope.length) {\r\n            rootGraph = GraphMethods.setScopedGraph(rootGraph, { scope, graph: currentGraph });\r\n        }\r\n        else {\r\n            rootGraph = currentGraph;\r\n        }\r\n        rootGraph = GraphMethods.updateReferenceNodes(rootGraph);\r\n        SaveGraph(rootGraph, dispatch)\r\n    }\r\n}\r\n\r\nexport const Colors = {\r\n    SelectedNode: '#f39c12'\r\n};\r\n\r\nexport function openRedQuickBuilderGraph() {\r\n    return (dispatch, getState) => {\r\n        dialog.showOpenDialog(\r\n            remote.getCurrentWindow(),\r\n            {\r\n                filters: [\r\n                    { name: 'Red Quick Builder', extensions: [RED_QUICK_FILE_EXT$] }\r\n                ],\r\n                properties: ['openFile']\r\n            },\r\n            (fileName) => {\r\n                if (fileName === undefined) {\r\n                    console.log(\"You didn't save the file\");\r\n                    return;\r\n                }\r\n\r\n                if (fileName.length && Array.isArray(fileName)) {\r\n                    fileName = fileName[0];\r\n                }\r\n\r\n                if (!fileName.endsWith(RED_QUICK_FILE_EXT)) {\r\n                    fileName = `${fileName}${RED_QUICK_FILE_EXT}`;\r\n                }\r\n                console.log(fileName);\r\n                fs.readFile(fileName, { encoding: 'utf-8' }, (err, res) => {\r\n                    if (err) {\r\n                        console.error(\"An error ocurred updating the file\" + err.message);\r\n                        console.log(err);\r\n                        return;\r\n                    }\r\n                    try {\r\n                        var opened_graph = JSON.parse(res);\r\n                        if (opened_graph) {\r\n                            var default_graph = GraphMethods.createGraph();\r\n                            opened_graph = { ...default_graph, ...opened_graph };\r\n                            SaveApplication(opened_graph.id, CURRENT_GRAPH, dispatch);\r\n                            SaveGraph(opened_graph, dispatch);\r\n                        }\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                    console.warn(\"The file has been succesfully saved\");\r\n                });\r\n            });\r\n\r\n    }\r\n}\r\nexport function newRedQuickBuilderGraph() {\r\n    return (dispatch, getState) => {\r\n        var default_graph = GraphMethods.createGraph();\r\n        var opened_graph = { ...default_graph };\r\n        SaveApplication(opened_graph.id, CURRENT_GRAPH, dispatch);\r\n        SaveGraph(opened_graph, dispatch);\r\n    }\r\n}\r\nipcRenderer.on('save-graph-to-file-reply', (event, arg) => {\r\n    console.log(arg) // prints \"pong\"\r\n})\r\nexport const RED_QUICK_FILE_EXT = '.rqb';\r\nexport const RED_QUICK_FILE_EXT$ = 'rqb';\r\nexport function saveGraphToFile() {\r\n    return (dispatch, getState) => {\r\n        var currentGraph = GetRootGraph(getState());\r\n        // You can obviously give a direct path without use the dialog (C:/Program Files/path/myfileexample.txt)\r\n        if (currentGraph) {\r\n            var content = JSON.stringify(currentGraph);\r\n            dialog.showSaveDialog(\r\n                remote.getCurrentWindow(),\r\n                {\r\n                    filters: [\r\n                        { name: 'Red Quick Builder', extensions: [RED_QUICK_FILE_EXT$] }\r\n                    ]\r\n                },\r\n                (fileName) => {\r\n                    if (fileName === undefined) {\r\n                        console.log(\"You didn't save the file\");\r\n                        return;\r\n                    }\r\n\r\n                    if (!fileName.endsWith(RED_QUICK_FILE_EXT)) {\r\n                        fileName = `${fileName}${RED_QUICK_FILE_EXT}`;\r\n                    }\r\n                    console.log(fileName);\r\n                    fs.writeFile(fileName, content, (err) => {\r\n                        if (err) {\r\n                            console.error(\"An error ocurred updating the file\" + err.message);\r\n                            console.log(err);\r\n                            return;\r\n                        }\r\n\r\n                        console.warn(\"The file has been succesfully saved\");\r\n                    });\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport function setWorkingDirectory() {\r\n    return (dispatch, getState) => {\r\n        var currentGraph = GetRootGraph(getState());\r\n        // You can obviously give a direct path without use the dialog (C:/Program Files/path/myfileexample.txt)\r\n        if (currentGraph) {\r\n            dialog.showOpenDialog(\r\n                remote.getCurrentWindow(),\r\n                {\r\n                    properties: ['openDirectory']\r\n                },\r\n                (fileName) => {\r\n                    if (fileName === undefined) {\r\n                        console.log(\"You didn't save the file\");\r\n                        return;\r\n                    }\r\n\r\n                    console.log(fileName);\r\n                    currentGraph = GraphMethods.updateWorkSpace(currentGraph, { workspace: fileName[0] });\r\n                    SaveGraph(currentGraph, dispatch)\r\n                });\r\n        }\r\n    }\r\n}","export const HandlerEvents = {\r\n    scaffold: {\r\n        message: 'scaffold-project',\r\n        reply: 'scaffold-project-reply'\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\n\r\nconst NAME_SPACE_TEMPLATE = './app/templates/namespace.tpl';\r\n\r\nexport default class NamespaceGenerator {\r\n    static Generate(options) {\r\n        var { template, namespace, space, usings } = options;\r\n        let namespaceTemplate = fs.readFileSync(NAME_SPACE_TEMPLATE, 'utf-8');\r\n\r\n        namespaceTemplate = bindTemplate(namespaceTemplate, {\r\n            namespace,\r\n            space,\r\n            imports: usings ? usings.map(x=> `using ${x};`).unique(x => x).join('\\r\\n') : null,\r\n            body: template\r\n        })\r\n\r\n        return namespaceTemplate;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONTROLLER_CLASS_TEMPLATE = './app/templates/controller/controller.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE = './app/templates/controller/controller_functions_get.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class ControllerGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let controllers = NodesByType(state, NodeTypes.Controller);\r\n\r\n        let _controllerTemplateClass = fs.readFileSync(CONTROLLER_CLASS_TEMPLATE, 'utf-8');\r\n        let _controllerTemplateFunction = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_TEMPLATE, 'utf-8');\r\n        let _controllerTemplateFunctionGet = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE, 'utf-8');\r\n        let root = GetRootGraph(state);\r\n        let result = {};\r\n        controllers.map(controller => {\r\n            let controllerTemplateClass = _controllerTemplateClass;\r\n            let functions = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(controller, NodeProperties.CodeName)}`;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            let maestro_functions = [];\r\n            let maestros = GraphMethods.getNodesByLinkType(root, {\r\n                id: controller.id,\r\n                type: LinkType.MaestroLink,\r\n                direction: GraphMethods.SOURCE\r\n            }).map(maestro => {\r\n                let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                    id: maestro.id,\r\n                    type: LinkType.FunctionLink,\r\n                    direction: GraphMethods.SOURCE\r\n                });\r\n                let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n                maestro_functions = tempfunctions;\r\n                if (maestro_functions.length) {\r\n                    maestro_functions.map(maestro_function => {\r\n                        var ft = MethodFunctions[GetNodeProp(maestro_function, NodeProperties.FunctionType)];\r\n                        if (ft) {\r\n                            let tempFunction = _controllerTemplateFunction;\r\n                            let parameters = '';\r\n                            let parameter_route = '';\r\n                            let parameter_values = '';\r\n                            //If the function is a get then, use the get template.\r\n                            if (GetNodeProp(maestro_function, NodeProperties.MethodType) === Methods.Get) {\r\n                                tempFunction = _controllerTemplateFunctionGet;\r\n                                let paramName = 'modelId';\r\n                                if (ft.parentGet) {\r\n                                    paramName = 'parentId';\r\n                                }\r\n                                parameters = `string ${paramName}`;\r\n                                parameter_route = `/{${paramName}}`;\r\n                                parameter_values = `${paramName}`;\r\n                            }\r\n                            let codeNode = GetNodeProp(maestro_function, NodeProperties.CodeName);\r\n                            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                                id: maestro_function.id,\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                direction: GraphMethods.SOURCE\r\n                            });\r\n\r\n                            let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                            let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                            let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                            let methodProperties = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                            if (!methodProperties) return;\r\n                            let userNode = tempfunctions.find(t => GetNodeProp(t, NodeProperties.CodeName) === FunctionTemplateKeys.UserInstance);\r\n                            let modelNode = GraphMethods.GetNode(root, methodProperties.model);\r\n                            let output_type = '{controller_generator_missing_model}';\r\n                            if (modelNode) {\r\n                                output_type = GetNodeProp(modelNode, NodeProperties.CodeName) || output_type;\r\n                                if (ft.isList) {\r\n                                    output_type = `IList<${output_type}>`;\r\n                                }\r\n                            }\r\n                            tempFunction = bindTemplate(tempFunction, {\r\n                                functionName: functionName,\r\n                                maestro_function: functionName,\r\n                                parameters,\r\n                                parameter_values,\r\n                                parameter_route,\r\n                                http_route: httpRoute || '{controller_generator_http_method',\r\n                                http_method: httpMethod || '{controller_generator_http_method',\r\n                                user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                                output_type: output_type,\r\n                                maestro_interface: ToInterface(maestroName),\r\n                                input_type: modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : '{controller_generator_missing_model}'\r\n                            })\r\n                            // let template = ft.template;\r\n                            // if (ft.template_keys) {\r\n                            //     for (var template_key in template_key) {\r\n                            //         for (var modifiers in TEMPLATE_KEY_MODIFIERS) {\r\n\r\n                            //         }\r\n                            //     }\r\n                            // }\r\n                            functions += jNL + tempFunction;\r\n                        }\r\n\r\n                    })\r\n                }\r\n                controllerTemplateClass = bindTemplate(controllerTemplateClass, {\r\n                    codeName: codeName,\r\n                    'codeName#alllower': codeName.toLowerCase(),\r\n                    user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                    user: userNode ? GetNodeProp(userNode, NodeProperties.CodeName) : '{controller_generator_code_name}',\r\n                    functions\r\n                });\r\n            });\r\n            result[GetNodeProp(controller, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(controller, NodeProperties.CodeName),\r\n                name: GetNodeProp(controller, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: controllerTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        'Microsoft.AspNetCore.Mvc'\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, GetRootGraph, NodesByType, NodePropertyTypes, NEW_LINK, GetCurrentGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, Usings, ValidationRules, NameSpace, NodeTypes, STANDARD_CONTROLLER_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nconst MODEL_TEMPLATE = './app/templates/models/model.tpl';\r\nconst MODEL_PROPERTY_TEMPLATE = './app/templates/models/model_property.tpl';\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst MODEL_ATTRIBUTE_TEMPLATE = './app/templates/models/model_attributes.tpl';\r\nexport default class ModelGenerator {\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let result = {};\r\n        models.map(model => {\r\n            var res = ModelGenerator.GenerateModel({\r\n                graph: graphRoot,\r\n                nodeId: model.id,\r\n                state\r\n            });\r\n            result[res.id] = res;\r\n        });\r\n\r\n        return result;\r\n    }\r\n    static GenerateModel(options) {\r\n        var { state, graph, nodeId } = options;\r\n        var key = nodeId;\r\n        var usings = [];\r\n        var templateSwapDictionary = {};\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n\r\n        var node = GraphMethods.GetNode(graph, nodeId);\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        templateSwapDictionary.model = GetNodeProp(node, NodeProperties.CodeName);\r\n        templateSwapDictionary.base_model = GetNodeProp(node, NodeProperties.IsUser) ? 'RedUser' : 'DBaseData';\r\n        templateSwapDictionary.account_enabling_func = '';\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            templateSwapDictionary.account_enabling_func = `\r\n            \r\n        public static User Create(RedExternalLoginViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }\r\n        public static User Create(RedRegisterViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }`\r\n        }\r\n        templateSwapDictionary.attributes = '';\r\n        var connectedProperties = GraphMethods.getNodesByLinkType(graph, {\r\n            id: node.id,\r\n            type: LinkType.PropertyLink,\r\n            direction: GraphMethods.SOURCE\r\n        });\r\n        let propertyTemplate = fs.readFileSync(MODEL_PROPERTY_TEMPLATE, 'utf-8');\r\n        let attributeTemplate = fs.readFileSync(MODEL_ATTRIBUTE_TEMPLATE, 'utf-8');\r\n        let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf-8');\r\n\r\n        let validatorFunctions = GraphMethods.getNodesByLinkType(graph, {\r\n            id: nodeId,\r\n            type: LinkType.ValidatorModel,\r\n            direction: GraphMethods.TARGET\r\n        }).map(t => GetNodeProp(t, NodeProperties.CodeName)).map(t => ModelGenerator.tabs(1) + `[${t}]` + NEW_LINE).join('');\r\n        templateSwapDictionary.attributes = validatorFunctions;\r\n\r\n        let staticFunctions = [];\r\n        let properties = connectedProperties.map(propNode => {\r\n            var connectedAttributes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propNode.id,\r\n                type: LinkType.AttributeLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let property_instance_template = propertyTemplate;\r\n            let np = GetNodeProp(propNode, NodeProperties.UIAttributeType);\r\n            if (Usings[ProgrammingLanguages.CSHARP][np]) {\r\n                usings.push(\r\n                    ...Usings[ProgrammingLanguages.CSHARP][np],\r\n                    `${namespace}${NameSpace.Model}`,\r\n                    `${namespace}${NameSpace.Extensions}`)\r\n            }\r\n            let propType = NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][np];\r\n            if (GetNodeProp(propNode, NodeProperties.UIModelType)) {\r\n                propType = 'string';\r\n            }\r\n            let propSwapDictionary = {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                property_type: propType,\r\n                property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                attributes: connectedAttributes.map(attr => {\r\n                    var options_lists = GraphMethods.getNodesByLinkType(graph, {\r\n                        id: attr.id,\r\n                        type: LinkType.Option,\r\n                        direction: GraphMethods.SOURCE\r\n                    });\r\n                    let options_list = [];\r\n                    options_lists.map(ol => {\r\n                        var ols = GraphMethods.getNodesByLinkType(graph, {\r\n                            id: ol.id,\r\n                            type: LinkType.OptionItem,\r\n                            direction: GraphMethods.SOURCE\r\n                        });\r\n                        ols.map(_ols => {\r\n                            if (GetNodeProp(_ols, NodeProperties.UseCustomUIOption)) {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionTypeCustom));\r\n                            }\r\n                            else {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionType));\r\n                            }\r\n                        })\r\n                    });\r\n                    options_list = options_list.unique().map(t => `UIAttribute.${t}`);\r\n\r\n                    var ReverseRules = {};\r\n                    Object.keys(ValidationRules).map(_key => {\r\n                        ReverseRules[ValidationRules[_key]] = _key;\r\n                    })\r\n                    var validations = [];\r\n                    if (GetNodeProp(attr, NodeProperties.UseUIValidations)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Validation,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            GraphMethods.getNodesByLinkType(graph, {\r\n                                id: vnode.id,\r\n                                type: LinkType.ValidationItem,\r\n                                direction: GraphMethods.SOURCE\r\n                            }).map(vnodeItem => {\r\n                                validations.push(`ValidationRules.${ReverseRules[GetNodeProp(vnodeItem, NodeProperties.UIValidationType)]}`)\r\n                            })\r\n                        });\r\n                    }\r\n                    let choice_name = null;\r\n                    if (GetNodeProp(attr, NodeProperties.UIExtensionList)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Extension,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            choice_name = GetNodeProp(vnode, NodeProperties.CodeName)\r\n                        });\r\n                    }\r\n\r\n                    let options = options_list && options_list.length ? bindTemplate(`Options = new string[] { {{options_list}} },`, {\r\n                        options_list: options_list.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let validation_rules = validations && validations.length ? bindTemplate(`ValidationRules = new string[] { {{validation_list}} },`, {\r\n                        validation_list: validations.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let choice_type_list = [];\r\n                    let choice_type = choice_name ? bindTemplate('ChoiceType = {{choice_type}}.Name,', {\r\n                        choice_type: choice_name\r\n                    }) : '';\r\n\r\n                    let attributeSwapDictionary = {\r\n                        property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                        property_type: GetNodeProp(propNode, NodeProperties.UseModelAsType) ? GetNodeProp(propNode, NodeProperties.UIModelType) : GetNodeProp(propNode, NodeProperties.UIAttributeType),\r\n                        ui_title: GetNodeProp(propNode, NodeProperties.UIName),\r\n                        singular: GetNodeProp(propNode, NodeProperties.UISingular) ? 'true' : 'false',\r\n                        options,\r\n                        choice_type,\r\n                        validation_rules\r\n                    }\r\n                    if (attr && attr.uiValidationType) {\r\n                    }\r\n                    return bindTemplate(attributeTemplate, attributeSwapDictionary);\r\n                }).filter(x => x).join('\\r\\n')\r\n            }\r\n\r\n            property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n            return property_instance_template;\r\n        });\r\n        if (GetNodeProp(node, NodeProperties.HasLogicalChildren) && GetNodeProp(node, NodeProperties.ManyToManyNexus)) {\r\n            (GetNodeProp(node, NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                let propNode = GraphMethods.GetNode(GetCurrentGraph(state), t);\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                };\r\n\r\n                properties.push(bindTemplate(propertyTemplate, propSwapDictionary));\r\n            });\r\n        }\r\n        let staticDic = {\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        };\r\n        staticFunctions.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            var agenNodes = NodesByType(state, NodeTypes.Model).filter(x => x.id !== node.id && GetNodeProp(x, NodeProperties.IsAgent));\r\n            agenNodes.map(agent => {\r\n\r\n                let property_instance_template = propertyTemplate;\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                }\r\n                property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n                properties.push(property_instance_template);\r\n            })\r\n        }\r\n        templateSwapDictionary.properties = properties.join('');\r\n        templateSwapDictionary.staticFunctions = staticFunctions.unique(x => x).join('\\n');\r\n        console.log(templateSwapDictionary.properties)\r\n        let modelTemplate = fs.readFileSync(MODEL_TEMPLATE, 'utf-8');\r\n        modelTemplate = bindTemplate(modelTemplate, templateSwapDictionary);\r\n\r\n        var result = {\r\n            id: GetNodeProp(node, NodeProperties.CodeName),\r\n            name: GetNodeProp(node, NodeProperties.CodeName),\r\n            template: NamespaceGenerator.Generate({\r\n                template: modelTemplate,\r\n                usings: [...usings,\r\n                    `RedQuickCore.Identity`,\r\n                `${namespace}${NameSpace.Validations}`,\r\n                ...STANDARD_CONTROLLER_USING],\r\n                namespace,\r\n                space: NameSpace.Model\r\n            })\r\n        };\r\n        return result;\r\n    }\r\n    static tabs(c) {\r\n        let res = '';\r\n        var TAB = \"\\t\";\r\n        for (var i = 0; i < c; i++) {\r\n            res = res + TAB;\r\n        }\r\n        return res;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, MakeConstant, ConstantsDeclaration, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst EXTENSION_CLASS_TEMPLATE = './app/templates/extensions/extensions.tpl';\r\nconst EXTENSION_PROPERTY_TEMPLATE = './app/templates/extensions/extension_properties.tpl';\r\nconst EXTENSION_NEW_INSTANCE = './app/templates/extensions/extension_new_instance.tpl';\r\nconst EXTENSION_NEW_PROPERTY = './app/templates/extensions/extension_new_instance_properties.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_LIST = './app/templates/extensions/extension_new_instance_list.tpl';\r\nconst EXTENSION_NEW_INSTANCE_LIST_ADD = './app/templates/extensions/extension_new_instance_list_add.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY = './app/templates/extensions/extension_new_instance_dictionary.tpl';\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY_ADD = './app/templates/extensions/extension_new_instance_dictionary_add.tpl';\r\nconst EXTENSION_NEW_TEMPLATE_LIST = './app/templates/extensions/create_new_list_instance.tpl'\r\nconst PROPERTY_TABS = 6;\r\nexport default class ExtensionGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static GetExtensionNodeValues(extensionNode) {\r\n        var def = GetNodeProp(extensionNode, NodeProperties.UIExtensionDefinition);\r\n        if (def && def.config) {\r\n            if (def.config.isEnumeration) {\r\n                var extensionValues = def.config.list.map(t => {\r\n                    return def.config.keyField ? t[def.config.keyField] : t[Object.keys(t)[0]];\r\n                });\r\n                return extensionValues\r\n            }\r\n        }\r\n        throw new Error(\"unhandled - getting extensions nodes not as an enumeration\")\r\n    }\r\n    static CreateListInstanceTemplate(options) {\r\n        let { node, name } = options;\r\n        let _newTemplateList = fs.readFileSync(EXTENSION_NEW_TEMPLATE_LIST, 'utf-8');\r\n        return bindTemplate(_newTemplateList, {\r\n            name,\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        });\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let extensions = NodesByType(state, NodeTypes.ExtensionType);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _extensionClassTemplate = fs.readFileSync(EXTENSION_CLASS_TEMPLATE, 'utf-8');\r\n        let _extensionPropertyTemplate = fs.readFileSync(EXTENSION_PROPERTY_TEMPLATE, 'utf-8');\r\n        let _extensionNewInstance = fs.readFileSync(EXTENSION_NEW_INSTANCE, 'utf-8');\r\n        let _extensionNewProperty = fs.readFileSync(EXTENSION_NEW_PROPERTY, 'utf-8');\r\n        let _extensionNewInstanceList = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST, 'utf-8');\r\n        let _extensionNewInstanceListAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST_ADD, 'utf-8');\r\n        let _extensionNewInstanceDictionary = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY, 'utf-8');\r\n        let _extensionNewInstanceDictionaryAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY_ADD, 'utf-8');\r\n        let result = {};\r\n        extensions.map(extension => {\r\n            let extensionClassTemplate = _extensionClassTemplate;\r\n            let properties = '';\r\n            let statics = '';\r\n            var constants = [];\r\n            let uiExtensionDefinition = GetNodeProp(extension, NodeProperties.UIExtensionDefinition);\r\n            if (uiExtensionDefinition) {\r\n                let modelName = GetNodeProp(extension, NodeProperties.CodeName);\r\n                let { config, definition } = uiExtensionDefinition;\r\n                if (definition) {\r\n                    definition = { ...definition, Value: 'string' };\r\n                    properties = Object.keys(definition).map(e => {\r\n                        var extensionPropertyTemplate = _extensionPropertyTemplate;\r\n\r\n                        extensionPropertyTemplate = bindTemplate(extensionPropertyTemplate, {\r\n                            name: modelName,\r\n                            property: e,\r\n                            type: definition[e]\r\n                        });\r\n                        return extensionPropertyTemplate;\r\n                    }).join('');\r\n                    if (config) {\r\n                        var instances = [];\r\n                        let instance = '';\r\n                        if (config.isEnumeration) {\r\n                            instances = config.list.map((item, item_index) => {\r\n                                item = { ...item, Value: (item_index + 1) }\r\n                                let temp;\r\n                                let props = Object.keys(item).map(key => {\r\n                                    let temp = _extensionNewProperty;\r\n                                    temp = bindTemplate(temp, {\r\n                                        property: key,\r\n                                        value: MakeConstant(item[key])\r\n                                    });\r\n                                    if (isNaN(item[key]))\r\n                                        constants.push({\r\n                                            name: MakeConstant(item[key]),\r\n                                            value: `\"${item[key]}\"`\r\n                                        })\r\n                                    return temp;\r\n                                }).join(`,${NL}`);\r\n                                temp = _extensionNewInstance;\r\n                                temp = bindTemplate(temp, {\r\n                                    properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                    model: modelName\r\n                                });\r\n                                return temp;\r\n                            })\r\n                        }\r\n                        else {\r\n                            let temp;\r\n                            let props = Object.keys(config.dictionary).map(key => {\r\n                                let temp = _extensionNewProperty;\r\n                                let item = { ...config.dictionary };\r\n                                temp = bindTemplate(temp, {\r\n                                    property: key,\r\n                                    value: MakeConstant(item[key])\r\n                                });\r\n                                if (isNaN(item[key]))\r\n                                    constants.push({\r\n                                        name: MakeConstant(item[key]),\r\n                                        value: `\"${item[key]}\"`\r\n                                    })\r\n                                return temp;\r\n                            }).join(`,${NL}`);\r\n                            temp = _extensionNewInstance;\r\n                            temp = bindTemplate(temp, {\r\n                                properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp;\r\n                            let temp_instance = _extensionNewInstanceDictionary;\r\n                            temp_instance = bindTemplate(temp_instance, {\r\n                                instance,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp_instance;\r\n                        }\r\n                        instances = instances.map(inst => {\r\n                            let temp = _extensionNewInstanceListAdd;\r\n\r\n                            temp = bindTemplate(temp, {\r\n                                instance: inst\r\n                            })\r\n                            return temp;\r\n                        });\r\n\r\n                        let templist = _extensionNewInstanceList;\r\n                        statics = bindTemplate(templist, {\r\n                            addings: instances.join(''),\r\n                            model: modelName\r\n                        }) + jNL + instance;\r\n                    }\r\n                }\r\n            }\r\n            extensionClassTemplate = bindTemplate(extensionClassTemplate, {\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                properties,\r\n                statics: statics,\r\n                constants: constants.unique(x => x).map(co => jNL + ExtensionGenerator.Tabs(3) + ConstantsDeclaration(co)).join('')\r\n            });\r\n\r\n            result[GetNodeProp(extension, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(extension, NodeProperties.CodeName),\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: extensionClassTemplate,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Extensions\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph, GetLinkProperty, GetCodeName, GetMethodPropNode, GetLinkChainItem, GetPermissionMethod, GetFunctionType, GetMethodNodeProp } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, MakeConstant, CreateStringList, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, ConditionTypes, ConditionTypeParameters, ConditionCases, FunctionTemplateKeys, MethodFunctions, FunctionTypes } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport ExtensionGenerator from './extensiongenerator';\r\nimport { debug } from 'util';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst TEST_CASE = './app/templates/permissions/tests/test_case.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst TEST_CASE_PROPERTY = './app/templates/permissions/tests/test_case_property.tpl';\r\nconst PERMISSIONS_INTERFACE = './app/templates/permissions/permissions_interface.tpl';\r\nconst PERMISSIONS_CASE_EXTENSION = './app/templates/permissions/permissions_case.tpl';\r\nconst PERMISSIONS_CASE_ENUMERATION = './app/templates/permissions/permissions_case_enumeration.tpl';\r\nconst PERMISSIONS_CASE_INCLUDED_IN_LIST = './app/templates/permissions/permissions_case_included_in_list.tpl';\r\nconst PERMISSIONS_METHODS = './app/templates/permissions/permissions_method.tpl';\r\nconst PERMISSIONS_ARBITER_PROP = './app/templates/permissions/permissions_arbiter_prop.tpl';\r\nconst PERMISSIONS_IMPL = './app/templates/permissions/permissions_impl.tpl';\r\nconst PERMISSIONS_INTERFACE_METHODS = './app/templates/permissions/permissions_interface_methods.tpl';\r\nconst MATCH_TO_MANY_REFERENCE_PARAMETER = './app/templates/permissions/match-many-reference-parameter.tpl';\r\nconst MATCH_REFERENCE = './app/templates/permissions/match-reference.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class PermissionGenerator {\r\n    static PermissionMatches(permission, agent, model) {\r\n        var methodNode = GetPermissionMethod(permission);\r\n        if (methodNode) {\r\n            let function_type = GetFunctionType(methodNode);\r\n            switch (function_type) {\r\n                //Add more cases as required.\r\n                case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        GetMethodNodeProp(methodNode, FunctionTemplateKeys.Parent) === model.id;\r\n                    return result;\r\n                default:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        GetMethodNodeProp(methodNode, FunctionTemplateKeys.Model) === model.id;\r\n                    return result;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    static createInstanceEnumerationListName(dNode, enu, method, type = 'Enums') {\r\n        return `list${type}${GetNodeProp(dNode, NodeProperties.CodeName) || dNode}${GetNodeProp(enu, NodeProperties.CodeName) || enu}${method}`\r\n    }\r\n\r\n    static _createConstantList(name, constants) {\r\n        let result = constants.map(ea => {\r\n            return `${name}.${MakeConstant(ea)}`\r\n        })\r\n        return result;\r\n    }\r\n    //Deprecated\r\n    static _createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_allowed;\r\n    }\r\n    static _getNotAllowedConstances(dpNode, enumerationNode, method) {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_notallowed = ext_disallowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_notallowed\r\n    }\r\n    static createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n        let constants_allowed = PermissionGenerator._createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n        // var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        // let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        // let constants_allowed = ext_allowed.map(ea => {\r\n        //     return `${enumerationName}.${MakeConstant(ea)}`\r\n        // })\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static createStringList(options) {\r\n        var { name, constants_allowed, enumerationName } = options;\r\n        constants_allowed = constants_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static _createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_allowed;\r\n\r\n    }\r\n    static _getNotAllowedExtectionConstances(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_disallowed = ext_disallowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_disallowed;\r\n\r\n    }\r\n    static createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extensionNode, method, 'Extensions');\r\n\r\n        let constants_allowed = PermissionGenerator._createExtensionInstanceList(dpNode, extensionNode, method, type);\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n\r\n    }\r\n    static IsRequestor(graph, model, permission) {\r\n        var requestorNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.RequestorPermissionLink\r\n        });\r\n        return !!requestorNodes.find(node => {\r\n            return node.id === model.id;\r\n        })\r\n    }\r\n    static GetExtensionNodeValues(graph, permission, method, agent, model) {\r\n        const value_string = 'value';\r\n        var dependingPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.PermissionPropertyDependency\r\n        });\r\n        let listOfCases = [];\r\n        dependingPermissionNodes.map(dpNode => {\r\n            let propertyNodeLinkedToByDependencyPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: dpNode.id,\r\n                type: LinkType.PermissionPropertyDependency\r\n            });\r\n\r\n            let propertyNodeLinkedToByDependencyPermissionNode = propertyNodeLinkedToByDependencyPermissionNodes[0];\r\n            if (!propertyNodeLinkedToByDependencyPermissionNode) {\r\n                return;\r\n            }\r\n            let propertyNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propertyNodeLinkedToByDependencyPermissionNode.id,\r\n                type: LinkType.PermissionDependencyProperty\r\n            });\r\n            let propertyNode = null;\r\n            if (propertyNodes.length === 1) {\r\n                propertyNode = propertyNodes[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            var agentLinkExists = GraphMethods.existsLinkBetween(graph, { target: propertyNode.id, source: agent.id, type: LinkType.PropertyLink });\r\n            let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.Enumeration));\r\n            let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.UIExtension));\r\n            let useEnumeration = GetNodeProp(dpNode, NodeProperties.UseEnumeration);\r\n            let useExtension = GetNodeProp(dpNode, NodeProperties.UseExtension);\r\n            let useIncludedInList = GetNodeProp(dpNode, NodeProperties.IncludedInList);\r\n\r\n            if (useIncludedInList) {\r\n                let permissionCaseIncludedInList = fs.readFileSync(PERMISSIONS_CASE_INCLUDED_IN_LIST, 'utf-8');\r\n                var tempBindingValues = {\r\n                    method,\r\n                    // It currently happens to be that this is correct, but maybe in the future this needs to be more general.\r\n                    parent: `${GetNodeProp(agent, NodeProperties.AgentName) || 'agent'}`.toLowerCase(),\r\n                    parent_property: 'Id',\r\n                    ///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: ''\r\n                };\r\n                let temp = bindTemplate(permissionCaseIncludedInList, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n            if (useEnumeration) {\r\n                let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf-8');\r\n                let enumInstance = PermissionGenerator.createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n                var tempBindingValues = {\r\n                    method,\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: enumInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n\r\n            }\r\n\r\n            if (useExtension) {\r\n                let definition = GetNodeProp(extentionNode, NodeProperties.UIExtensionDefinition);\r\n                let permissionCaseExtensionTemplate = fs.readFileSync(PERMISSIONS_CASE_EXTENSION, 'utf-8');\r\n                let extensionInstance = PermissionGenerator.createExtensionInstanceList(dpNode, extentionNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extentionNode, method, 'Extensions');\r\n                let tempBindingValues = {\r\n                    method,\r\n                    value: `value`,\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension_propery_key: definition && definition.config ? definition.config.keyField : null,\r\n                    extension_value_property: 'Value',\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: extensionInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseExtensionTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static IsAppliedPermission(graph, permission, propertyNode) {\r\n        let appliedPermissionLinks = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.AppliedPermissionLink\r\n        });\r\n        //\r\n        if (appliedPermissionLinks && appliedPermissionLinks.length) {\r\n            var link = GraphMethods.GetLinkByNodes(graph, {\r\n                source: appliedPermissionLinks[0].id,\r\n                target: propertyNode.id\r\n            });\r\n            if (link) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static GetTestExtensionNodeValues(graph, permission, method, agent, model) {\r\n        const value_string = 'value';\r\n        var conditionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.Condition\r\n        });\r\n        let listOfCases = [];\r\n        conditionNodes.map(conditionNode => {\r\n\r\n            // let isAppliedPermission = PermissionGenerator.IsAppliedPermission(graph, permission, propertyNode);\r\n            // let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.Enumeration));\r\n            // let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.UIExtension));\r\n            let conditionType = GetNodeProp(conditionNode, NodeProperties.ConditionType);\r\n            switch (conditionType) {\r\n                case ConditionTypes.MatchReference:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchReference);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchReference].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchReference].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.MatchManyReferenceParameter:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchManyReferenceParameter);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.InEnumerable:\r\n\r\n                    var enumRef = GetNodeProp(conditionNode, NodeProperties.EnumerationReference);\r\n                    var enumerationNodeName = PermissionGenerator.getReferencedNodeName(graph, enumRef, NodeProperties.Enumeration);\r\n                    var constList = PermissionGenerator.getReference(enumRef, NodeProperties.AllowedEnumValues);\r\n                    var disAllowedConstList = PermissionGenerator.getReference(enumRef, NodeProperties.DisallowedEnumValues);\r\n                    let enumInstance = PermissionGenerator._createConstantList(enumerationNodeName, constList);\r\n                    let enumNotAllowed = PermissionGenerator._createConstantList(enumerationNodeName, disAllowedConstList);;\r\n                    let nameEnum = PermissionGenerator.createInstanceEnumerationListName(conditionNode, enumerationNodeName, method);\r\n                    let propertyEnum = PermissionGenerator.getReferencedNodeName(graph, enumRef, ConditionTypeParameters.Ref1Property);\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameEnum,\r\n                        ref: enumRef[ConditionTypeParameters.Ref1],\r\n                        property: propertyEnum,\r\n                        values: enumInstance,\r\n                        neg: enumNotAllowed,\r\n                        options: { ...enumRef }\r\n                    });\r\n\r\n                    break;\r\n                case ConditionTypes.InExtension:\r\n                    let definition = GetNodeProp(conditionNode, NodeProperties.UIExtensionDefinition);\r\n                    let extensionInstance = PermissionGenerator._createExtensionInstanceList(conditionNode, extentionNode, method);\r\n                    let extensionsNotAllowed = PermissionGenerator._getNotAllowedExtectionConstances(conditionNode, extentionNode, method);\r\n                    let nameExt = PermissionGenerator.createInstanceEnumerationListName(conditionNode, extentionNode, method, 'Extensions');\r\n                    let propertyExt = GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName);\r\n                    // definition && definition.config ? definition.config.keyField : null;\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameExt,\r\n                        property: propertyExt,\r\n                        values: extensionInstance,\r\n                        neg: extensionsNotAllowed,\r\n                        options: { ...definition }\r\n                    });\r\n                    break;\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static getReferencedNodeName(graph, enumRef, type) {\r\n        return GetNodeProp(PermissionGenerator.getReferencedValue(graph, enumRef, type), NodeProperties.CodeName);\r\n    }\r\n    static getReferencedValue(graph, enumRef, type) {\r\n        return GraphMethods.GetNode(graph, enumRef[type])\r\n    }\r\n    static getReference(enumRef, type) {\r\n        return enumRef[type]\r\n    }\r\n    static GenerateCases(state, permission, agent, model) {\r\n        var graph = GetCurrentGraph(state);\r\n        let _manyToManyMatchCondition = fs.readFileSync(MATCH_TO_MANY_REFERENCE_PARAMETER, 'utf-8');\r\n        let _matchReferenceCondition = fs.readFileSync(MATCH_REFERENCE, 'utf-8');\r\n        let result = {};\r\n        if (permission) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n                    let cases = [];\r\n                    let conditions = GraphMethods.GetLinkChain(state, {\r\n                        id: permission.id,\r\n                        links: [{\r\n                            type: LinkType.Condition,\r\n                            direction: GraphMethods.SOURCE\r\n                        }]\r\n                    });\r\n                    if (conditions && conditions.length) {\r\n                        conditions.map((t, index) => {\r\n                            var variable = 'variable_' + index;\r\n                            switch (GetNodeProp(t, NodeProperties.ConditionType)) {\r\n                                case ConditionTypes.MatchReference:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchReference);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.Ref1]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n                                                var ref1UseId = mmrp[ConditionTypeParameters.Ref1UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref1UseId]]);\r\n                                                var ref2UseId = mmrp[ConditionTypeParameters.Ref2UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref2UseId]]);\r\n                                                cases.push({\r\n                                                    template: bindTemplate(_matchReferenceCondition, {\r\n                                                        variable,\r\n                                                        value_property: ref1UseId ? 'Id' : '',\r\n                                                        data_property: ref2UseId ? 'Id' : '',\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.MatchManyReferenceParameter:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchManyReferenceParameter);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.RefManyToManyProperty]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n                                                var relationship = GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.RefManyToMany]]);\r\n                                                cases.push({\r\n                                                    arbiter: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                    template: bindTemplate(_manyToManyMatchCondition, {\r\n                                                        variable,\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.InEnumerable:\r\n                                    var ine = GetNodeProp(t, NodeProperties.EnumerationReference);\r\n                                    if (ine) {\r\n                                        let ref1 = ine[ConditionTypeParameters.Ref1];\r\n\r\n                                        let enumerationNode = GraphMethods.GetNode(graph, ine[NodeProperties.Enumeration]);\r\n                                        if (enumerationNode) {\r\n                                            let casename = GetNodeProp(t, NodeProperties.CodeName) || GetNodeProp(t, NodeProperties.NODEType);\r\n                                            let name = `${casename}_valid_items`;\r\n                                            let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf-8');\r\n                                            let enumInstance = PermissionGenerator.createStringList({\r\n                                                name,\r\n                                                constants_allowed: ine[NodeProperties.AllowedEnumValues],\r\n                                                enumerationName: GetNodeProp(enumerationNode, NodeProperties.CodeName)\r\n                                            });\r\n                                            let propertyNodeLinkedToByDependencyPermissionNode = GraphMethods.GetNode(graph, ine[ConditionTypeParameters.Ref1Property])\r\n                                            var tempBindingValues = {\r\n                                                method,\r\n                                                value: `${ref1 !== 'model' ? 'value' : 'data'}`.toLowerCase(),\r\n                                                value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                                                model: GetNodeProp(model, NodeProperties.CodeName) || GetNodeProp(model, NodeProperties.NODEType),\r\n                                                casename,\r\n                                                'allowed-values-list': name,\r\n                                                instance_list: enumInstance\r\n                                            };\r\n                                            let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                                            cases.push({\r\n                                                variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                                                template: temp\r\n                                            });\r\n\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        })\r\n                    }\r\n                    result[method] = cases;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static EnumerateCases(cases) {\r\n        let vects = cases.map(x => {\r\n            return (x && x.values ? x.values.length : 0) + (x && x.neg ? x.neg.length : 0);\r\n        });\r\n        return enumerate(vects);\r\n    }\r\n    static EnumeratePermissionCases(graph, permission, method, agent, model) {\r\n        if (!permission || !method || !agent || !model) {\r\n            return [];\r\n        }\r\n\r\n        let cases = PermissionGenerator.GetTestExtensionNodeValues(graph, permission, method, agent, model);\r\n        let enums = PermissionGenerator.EnumerateCases(cases);\r\n        let testCaseProperty = fs.readFileSync(TEST_CASE_PROPERTY, 'utf-8');\r\n        let methodNode = GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        });\r\n\r\n        let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n\r\n        let res = enums.map((_enum) => {\r\n            let props = [];\r\n            let properties = [];\r\n            let ispositive = true;\r\n            _enum.map((which, index) => {\r\n                let _case = cases[index];\r\n                ispositive = ispositive && _case.values.length > which;\r\n                let is_model_parameter;\r\n                switch (_case.type) {\r\n                    case ConditionTypes.MatchManyReferenceParameter:\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            methodProps &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref1]] &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref2]] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property]\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `\"wrong\"`\r\n                                        });\r\n                                        props.push({\r\n                                            props: ispositive ? '' : template,\r\n                                            type: _case.type\r\n                                        });\r\n                                        properties.push({\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `${ref2Model}.Id`\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ConditionTypes.MatchReference:\r\n\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property]\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: !ispositive ? '\"wrong\"' : `${ref2Model}.Id`\r\n                                        });\r\n                                        props.push({\r\n                                            props: template,\r\n                                            type: ConditionTypes.MatchReference\r\n                                        });\r\n                                        properties.push({\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `${ref2Model}.Id`\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        is_model_parameter = _case.ref === 'model';\r\n                        let value = _case.values.length <= which ? _case.neg[which - _case.values.length] : _case.values[which];\r\n                        let temp = bindTemplate(testCaseProperty, {\r\n                            model: is_model_parameter ? 'model' : 'agent', // THis may need to expand\r\n                            property: `.${_case.property}`,\r\n                            value: value\r\n                        });\r\n                        if (is_model_parameter) {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Model });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Model\r\n                            })\r\n                        }\r\n                        else {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Agent });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Agent\r\n                            })\r\n                        }\r\n                        break;\r\n                }\r\n\r\n            });\r\n            return {\r\n                props: [\r\n                    ...props\r\n                ],\r\n                properties: [\r\n                    ...properties\r\n                ],\r\n                resultSuccess: ispositive\r\n            }\r\n        });\r\n\r\n        return res;\r\n    }\r\n    static GenerateTestCases(state, permission, agent, model) {\r\n        var graph = GetCurrentGraph(state);\r\n        let parent = null;\r\n        let manyToMany = null;\r\n        let many_to_many_register = '';\r\n        let testCase = fs.readFileSync(TEST_CASE, 'utf-8');\r\n        let result = [];\r\n        let methodNode = permission ? GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        }) : null;\r\n        parent = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.Parent);\r\n        manyToMany = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.ManyToManyModel);\r\n        many_to_many_register = fs.readFileSync('./app/templates/permissions/tests/many_to_many_register.tpl', 'utf-8');\r\n\r\n        switch (GetNodeProp(methodNode, NodeProperties.FunctionType)) {\r\n            case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                testCase = fs.readFileSync('./app/templates/permissions/tests/Get_ManyToMany_Agent_Value__IListChild.tpl', 'utf-8');\r\n                many_to_many_register = bindTemplate(many_to_many_register, {\r\n                    ref1type: GetCodeName(parent),\r\n                    ref1: FunctionTemplateKeys.Parent,\r\n                    ref2type: GetCodeName(model),\r\n                    ref2: FunctionTemplateKeys.Model,\r\n                });\r\n                break;\r\n            case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                testCase = fs.readFileSync('./app/templates/permissions/tests/Get_Parent$Child_Agent_Value__IListChild.tpl', 'utf-8');\r\n                many_to_many_register = bindTemplate(many_to_many_register, {\r\n                    ref1type: GetCodeName(parent),\r\n                    ref1: FunctionTemplateKeys.Parent,\r\n                    ref2type: GetCodeName(agent),\r\n                    ref2: FunctionTemplateKeys.Agent,\r\n                })\r\n                break;\r\n        }\r\n        if (methodNode) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permission && permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n                    let res = PermissionGenerator.EnumeratePermissionCases(graph, permission, method, agent, model);\r\n\r\n                    res = res.map((t, testIndex) => {\r\n                        var { props, resultSuccess, templates = {} } = t;\r\n\r\n                        return bindTemplate(bindTemplate(testCase, {\r\n                            many_to_many_register,\r\n                        }), {\r\n                                set_agent_properties: props.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).join(NEW_LINE),\r\n                                set_model_properties: props.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).join(NEW_LINE),\r\n                                set_parent_properties: props.filter(x => x.type === FunctionTemplateKeys.Parent).map(t => t.props).join(NEW_LINE),\r\n                                set_match_reference_properties: props.filter(x => x.type === ConditionTypes.MatchReference).map(t => t.props).join(NEW_LINE),\r\n                                set_match_many_reference_properties: props.filter(x => x.type === ConditionTypes.MatchManyReferenceParameter).map(t => t.props).join(NEW_LINE),\r\n                                agent_type: GetCodeName(agent),\r\n                                model: GetCodeName(model),\r\n                                many_to_many: GetCodeName(manyToMany),\r\n\r\n                                parent: GetCodeName(parent),\r\n                                method,\r\n                                test: `_${GetCodeName(agent)}_${GetCodeName(model)}_${method}_${testIndex}`,\r\n                                result: resultSuccess ? 'true' : 'false',\r\n                                function_name: GetCodeName(permission) + method,\r\n                                ...templates\r\n                            });\r\n                    })\r\n                    result = [...result, ...res];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    // static GenerateTestCases(state, permission, agent, model) {\r\n    //     var graph = GetCurrentGraph(state);\r\n    //     let testCase = fs.readFileSync(TEST_CASE, 'utf-8');\r\n    //     let result = []\r\n    //     for (var method in Methods) {\r\n    //         var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n    //         if (permission && permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n    //             let res = PermissionGenerator.EnumeratePermissionCases(graph, permission, method, agent, model);\r\n    //             res = res.map((t, testIndex) => {\r\n    //                 var { agentProps, itemProps, resultSuccess } = t;\r\n    //                 return bindTemplate(testCase, {\r\n    //                     set_agent_properties: agentProps.join(NEW_LINE),\r\n    //                     set_model_properties: itemProps.join(NEW_LINE),\r\n    //                     agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n    //                     model: GetNodeProp(model, NodeProperties.CodeName),\r\n    //                     method,\r\n    //                     test: `_${GetNodeProp(agent, NodeProperties.CodeName)}_${GetNodeProp(model, NodeProperties.CodeName)}_${method}_${testIndex}`,\r\n    //                     result: resultSuccess ? 'true' : 'false',\r\n    //                     function_name: GetNodeProp(permission, NodeProperties.CodeName) + method\r\n    //                 });\r\n    //             })\r\n    //             result = [...result, ...res];\r\n    //         }\r\n    //     }\r\n    //     return result;\r\n    // }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let permissions = NodesByType(state, NodeTypes.Permission);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testTemplate = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let _permissionInterface = fs.readFileSync(PERMISSIONS_INTERFACE, 'utf-8');\r\n        let _permissionImplementation = fs.readFileSync(PERMISSIONS_IMPL, 'utf-8');\r\n        let _permissionInterfaceMethods = fs.readFileSync(PERMISSIONS_INTERFACE_METHODS, 'utf-8');\r\n        let _permissionMethods = fs.readFileSync(PERMISSIONS_METHODS, 'utf-8');\r\n        let _permissionArbiters = fs.readFileSync(PERMISSIONS_ARBITER_PROP, 'utf-8');\r\n        let result = {};\r\n\r\n        agents.map(agent => {\r\n            var agentPermissionFunctions = {};\r\n            let streamProcessChangeClassExtension = _permissionImplementation;\r\n            let permissionInterface = _permissionInterface;\r\n            let testPermission = _testTemplate;\r\n            let methodImplementations = [];\r\n            let methodInterfaces = [];\r\n            let testMethodPermisionCases = [];\r\n            let arbiters = [];\r\n            models.map(model => {\r\n                let matchingPermissionNodes = permissions.filter(permission => PermissionGenerator.PermissionMatches(permission, agent, model));\r\n                if (!matchingPermissionNodes || !matchingPermissionNodes.length) {\r\n                    return;\r\n                }\r\n                let permissionCases = [];\r\n                let permissionCodeNames = [];\r\n                matchingPermissionNodes.map(matchingPermissionNode => {\r\n                    if (matchingPermissionNode) {\r\n                        permissionCodeNames.push(GetNodeProp(matchingPermissionNode, NodeProperties.CodeName));\r\n                        let temp = PermissionGenerator.GenerateCases(state, matchingPermissionNode, agent, model);\r\n                        let testTemp = PermissionGenerator.GenerateTestCases(state, matchingPermissionNode, agent, model);\r\n                        permissionCases.push(temp);\r\n                        testMethodPermisionCases.push(...testTemp);\r\n                    }\r\n                })\r\n                permissionCases.map((perms, index) => {\r\n                    for (var permKey in perms) {\r\n                        let cases = perms[permKey];\r\n                        cases.map(t => {\r\n                            if (t && t.arbiter) {\r\n                                arbiters.push(t);\r\n                            }\r\n                        })\r\n                        let permissionMethods = _permissionMethods;\r\n                        let permissionInterfaceMethods = _permissionInterfaceMethods;\r\n                        permissionMethods = bindTemplate(permissionMethods, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            agent: `value`,\r\n                            method: permKey,\r\n                            cases: cases.map(c => jNL + Tabs(4) + c.template).join(''),\r\n                            case_result: jNL + Tabs(4) + `result = ${cases.map(c => c.variable).join(' && ')};`\r\n                        });\r\n                        permissionInterfaceMethods = bindTemplate(permissionInterfaceMethods, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: `value`,\r\n                            method: permKey\r\n                        });\r\n                        methodInterfaces.push(permissionInterfaceMethods);\r\n                        methodImplementations.push(permissionMethods);\r\n\r\n                    }\r\n                });\r\n            }).join(jNL);\r\n            arbiters = arbiters.map(t => t.arbiter).unique(x => x).map(t => {\r\n                return bindTemplate(_permissionArbiters, {\r\n                    arbiter: t\r\n                })\r\n            }).join(jNL)\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                arbiters,\r\n                methods: methodImplementations.join(jNL + jNL)\r\n            });\r\n            permissionInterface = bindTemplate(permissionInterface, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                methods: methodInterfaces.join(jNL + jNL)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                tname: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}Tests`,\r\n                iname: `IPermissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        arbiters && arbiters.length ? `${namespace}${NameSpace.Controllers}` : null,\r\n                        `${namespace}${NameSpace.Constants}`].filter(x => x),\r\n                    namespace,\r\n                    space: NameSpace.Permissions\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: permissionInterface,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: bindTemplate(testPermission, {\r\n                        tests: testMethodPermisionCases.join(NEW_LINE),\r\n                        name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                    }),\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst VALIDATION_CLASS = './app/templates/validation/validation_class.tpl';\r\nconst VALIDATION_TEST = './app/templates/validation/tests/validation.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst VALIDATION_PROPERTY = './app/templates/validation/validation_property.tpl';\r\n\r\nexport default class ValidationRuleGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => {\r\n            return Object.keys(x.values.cases).length\r\n        });\r\n\r\n        var enumeration = ValidationRuleGenerator.enumerate(vects);\r\n        return enumeration;\r\n    }\r\n    static enumerate(vects, j = 0) {\r\n        var results = [];\r\n\r\n        if (j < vects.length)\r\n            for (var i = 0; i < vects[j]; i++) {\r\n                var rest = ValidationRuleGenerator.enumerate(vects, j + 1);\r\n                var temp = [i];\r\n                if (rest.length) {\r\n                    rest.map(r => {\r\n                        results.push([...temp, ...r])\r\n                    });\r\n                }\r\n                else {\r\n                    results.push(temp);\r\n                }\r\n            }\r\n        return results;\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static GenerateValidationCases(graph, validatorNode) {\r\n\r\n        var model = GetNodeProp(validatorNode, NodeProperties.ValidatorModel);\r\n        var validator = GetNodeProp(validatorNode, NodeProperties.Validator);\r\n        let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n        var validation_test_vectors = [];\r\n        Object.keys(validatorProperties).map(property => {\r\n            let propertyNode = GraphMethods.GetNode(graph, property);\r\n            let validatorPs = validatorProperties[property];\r\n\r\n            return Object.keys(validatorPs.validators).map(vld => {\r\n                let validators = validatorPs.validators[vld];\r\n                let node = GraphMethods.GetNode(graph, validators.node);\r\n                let attribute_type_arguments = '';\r\n                if (node) {\r\n                    switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                        case NodeTypes.ExtensionType:\r\n                            if (validators && validators.extension) {\r\n                                let temp = { '_ _': '\"__ _ __\"' };\r\n                                attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                    if (validators.extension[ext]) {\r\n                                        temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                        return temp[`$${ext}`];\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: temp, invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                            }\r\n                            break;\r\n                        case NodeTypes.Enumeration:\r\n                            if (validators && validators.enumeration) {\r\n                                let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                    if (validators.enumeration[ext]) {\r\n                                        return `${enumName}.${MakeConstant(ext)}`\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                if (ValidationCases[validators.type]) {\r\n                    validation_test_vectors.push({\r\n                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                        values: ValidationCases[validators.type]\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n        let testProps = vectors.map((vector, index) => {\r\n            let successCase = true;\r\n            let propertyInformation = [];\r\n            let properylines = vector.map((v, vindex) => {\r\n                var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                if (typeof (projected_value) === 'function') {\r\n                    projected_value = projected_value();\r\n                }\r\n                else {\r\n                    if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                        _case = '$$';\r\n                    }\r\n                }\r\n                successCase = successCase && (_case || [false])[0] === '$';\r\n                let propline = ValidationRuleGenerator.Tabs(3) + `{{model}}.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                propertyInformation.push({\r\n                    set_properties: propline,\r\n                    property: validation_test_vectors[vindex].property,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                })\r\n                return propline;\r\n            }).join(NEW_LINE);\r\n            let temp = {\r\n                resultSuccess: successCase,\r\n                propertyInformation,\r\n                set_properties: properylines,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            };\r\n\r\n            return temp;\r\n        });\r\n        return testProps;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let nodes = NodesByType(state, NodeTypes.Validator);\r\n        let _validation_class = fs.readFileSync(VALIDATION_CLASS, 'utf-8');\r\n        let _validation_property = fs.readFileSync(VALIDATION_PROPERTY, 'utf-8');\r\n        let _validation_test = fs.readFileSync(VALIDATION_TEST, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        nodes.map(node => {\r\n            var agent = GetNodeProp(node, NodeProperties.ValidatorAgent);\r\n            var model = GetNodeProp(node, NodeProperties.ValidatorModel);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var funct = GetNodeProp(node, NodeProperties.ValidatorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var validator = GetNodeProp(node, NodeProperties.Validator);\r\n            let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n            var validation_test_vectors = [];\r\n            let propertyValidationStatements = Object.keys(validatorProperties).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = validatorProperties[property];\r\n\r\n                return Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"__ _ __\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`$${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp, invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                if (validators && validators.enumeration) {\r\n                                    let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                    let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                    attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                        if (validators.enumeration[ext]) {\r\n                                            return `${enumName}.${MakeConstant(ext)}`\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    var templateRes = bindTemplate(_validation_property, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`\r\n                    });\r\n                    return templateRes + NEW_LINE\r\n                }).join('');\r\n            }).join('');\r\n            var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n            let testProps = vectors.map((vector, index) => {\r\n                let validation_test = _validation_test;\r\n                let successCase = true;\r\n                let properylines = vector.map((v, vindex) => {\r\n                    var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                    var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                    if (typeof (projected_value) === 'function') {\r\n                        projected_value = projected_value();\r\n                    }\r\n                    else {\r\n                        if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                            _case = '$$';\r\n                        }\r\n                    }\r\n                    successCase = successCase && (_case || [false])[0] === '$';\r\n                    return ValidationRuleGenerator.Tabs(3) + `model.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                }).join(NEW_LINE);\r\n                let temp = bindTemplate(_validation_test, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    test_name: `Test${index}`,\r\n                    attribute_parameters: \"\",\r\n                    expected_value: successCase ? 'true' : 'false',\r\n                    set_properties: properylines,\r\n                    attribute_type: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                    properties: propertyValidationStatements,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                });\r\n\r\n                return temp;\r\n            });\r\n\r\n            var templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n            var testTemplate = bindTemplate(_testClass, {\r\n                name: GetNodeProp(node, NodeProperties.CodeName),\r\n                tests: testProps.join(NEW_LINE)\r\n            })\r\n\r\n            templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}AttributeTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Validations\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Validations}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                }),\r\n            };\r\n        });\r\n\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE = './app/templates/stream_process/stream_process_orchestration.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE = './app/templates/stream_process/stream_process_orchestration_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS = './app/templates/stream_process/stream_process_orchestration_agenttype_methods.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE = './app/templates/stream_process/stream_process_orchestration_agenttype_methods_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES = './app/templates/stream_process/stream_process_orchestration_selected_staged_changes.tpl';\r\nconst STREAM_METHOD_TESTS = './app/templates/stream_process/tests/stream_process_execution_tests.tpl';\r\nconst CREATE_MODEL_TESTS = './app/templates/stream_process/tests/create_model_tests.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nexport default class StreamProcessOrchestrationGenerator {\r\n    static GenerateStaticMethods(models) {\r\n\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES, 'utf-8');\r\n        let staticMethods = models.map(model => {\r\n            let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n            let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n            let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                model: modelCode,\r\n                [`model#allupper`]: modelCode.toUpperCase(),\r\n                [`model#lower`]: modelCode.toLowerCase()\r\n            });\r\n\r\n            return res + jNL\r\n        });\r\n\r\n        return staticMethods;\r\n    }\r\n    static GenerateAgentMethods(state) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS, 'utf-8');\r\n\r\n        let result = [];\r\n        let modelexecution = [];\r\n        models.map(model => {\r\n            modelexecution.push(Tabs(4) + `await Process${GetNodeProp(model, NodeProperties.CodeName)}Changes();` + jNL);\r\n        })\r\n        result.push(`       public async Task ProcessStagedChanges(Distribution distribution = null) {\r\n${modelexecution.join('')}\r\n        }\r\n`)\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                var res = bindTemplate(_streamAgentMethods, {\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase()\r\n                })\r\n                result.push(res);\r\n            });\r\n        });\r\n\r\n        return result.join('')\r\n    }\r\n    static GenerateAgentInterfaceMethods(state) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE, 'utf-8');\r\n\r\n        let result = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                var res = bindTemplate(_streamAgentMethods, {\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase()\r\n                })\r\n                result.push(res);\r\n            });\r\n        });\r\n\r\n        return result.join('')\r\n    }\r\n    static GenerateStrappers(models) {\r\n        let result = [];\r\n        result.push(Tabs(4) + `validator = RedStrapper.Resolve<IValidator>();` + jNL);\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}Arbiter = RedStrapper.Resolve<IRedArbiter<${modelName}>>();` + jNL);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}ChangeArbiter = RedStrapper.Resolve<IRedArbiter<${modelName}Change>>();` + jNL);\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}ResponseArbiter = RedStrapper.Resolve<IRedArbiter<${modelName}Response>>();` + jNL);\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}Executor = RedStrapper.Resolve<I${modelName}Executor>();` + jNL);\r\n            }\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStrappersInstances(models) {\r\n        let result = [];\r\n\r\n        result.push(Tabs(3) + `public IValidator validator;` + jNL);\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(3) + `public IRedArbiter<${modelName}> ${modelName.toLowerCase()}Arbiter;` + jNL)\r\n            result.push(Tabs(3) + `public IRedArbiter<${modelName}Change> ${modelName.toLowerCase()}ChangeArbiter;` + jNL)\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(3) + `public IRedArbiter<${modelName}Response> ${modelName.toLowerCase()}ResponseArbiter;` + jNL);\r\n                result.push(Tabs(3) + `public I${modelName}Executor ${modelName.toLowerCase()}Executor;` + jNL);\r\n            }\r\n\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateProcessTests(state) {\r\n        let graph = GetRootGraph(state);\r\n        let functions = NodesByType(state, NodeTypes.Method);\r\n        let res = '';\r\n        // STREAM_METHOD_TESTS\r\n        let _stramMethodTests = fs.readFileSync(STREAM_METHOD_TESTS, 'utf-8');\r\n        let _createModelTests = fs.readFileSync(CREATE_MODEL_TESTS, 'utf-8');\r\n\r\n        res = functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            //      let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var userTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.User]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    //   cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, method, agentTypeNode, modelNode);\r\n                }\r\n            }\r\n            if (modelNode && agentTypeNode && func) {\r\n                return bindTemplate(_stramMethodTests, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                    function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                    test_name: `${GetNodeProp(func, NodeProperties.CodeName)}Test`\r\n                });\r\n            }\r\n        }).filter(x => x).join(NEW_LINE);\r\n        let func_Cases = [];\r\n        functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n                    let validatorCases = null;\r\n                    if (validators && validators.length) {\r\n                        validatorCases = validators.map(validator => {\r\n                            return {\r\n                                cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                                isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                            };\r\n                        })\r\n                    }\r\n                    if (validatorCases)\r\n                        enumerate(validatorCases.map(x => x.cases.length)).map((_enum, caseindex) => {\r\n                            let v1 = validatorCases[0].cases[_enum[0]];\r\n                            let v2 = validatorCases[1].cases[_enum[1]];\r\n                            let agent_properties = '';\r\n                            let model_properties = '';\r\n                            if (!validatorCases[1].isModel) {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                            }\r\n                            else {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                            }\r\n                            // cases.map((_case, caseindex) => {\r\n                            func_Cases.push(bindTemplate(_createModelTests, {\r\n                                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                                agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                                set_agent_propeties: agent_properties,\r\n                                set_model_properties: model_properties,\r\n                                function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                                test_result: !(v1.resultSuccess && v2.resultSuccess),\r\n                                test_name: `${GetNodeProp(func, NodeProperties.CodeName)}${caseindex}Test`\r\n                            }));\r\n\r\n                        })\r\n                    //  });\r\n                }\r\n            }\r\n        }).join(NEW_LINE);\r\n        return res + NEW_LINE + func_Cases.join(NEW_LINE);\r\n    }\r\n    static EnumerateFunctionValidators(state, func) {\r\n        let graph = GetRootGraph(state);\r\n        let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n        let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n        let validatorCases = null;\r\n        if (validators && validators.length) {\r\n            validatorCases = validators.map(validator => {\r\n                return {\r\n                    cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                    isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                };\r\n            })\r\n        }\r\n        return enumerate((validatorCases || []).map(x => x.cases.length)).map((_enum, caseindex) => {\r\n            let v1 = validatorCases[0].cases[_enum[0]];\r\n            let v2 = validatorCases[1].cases[_enum[1]];\r\n            let agent_properties = '';\r\n            let model_properties = '';\r\n            if (!validatorCases[1].isModel) {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                return {\r\n                    agent: v2,\r\n                    model: v1\r\n                }\r\n            }\r\n            else {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                return {\r\n                    model: v2,\r\n                    agent: v1\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static GetFunctionValidators(state, funct) {\r\n        return NodesByType(state, NodeTypes.Validator).filter(x => GetNodeProp(x, NodeProperties.ValidatorFunction) === funct.id);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE, 'utf-8');\r\n        let _streamProcessInterfaceTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let agent_methods = StreamProcessOrchestrationGenerator.GenerateAgentMethods(state);\r\n        let agent_methods_interface = StreamProcessOrchestrationGenerator.GenerateAgentInterfaceMethods(state);\r\n        let statics = StreamProcessOrchestrationGenerator.GenerateStaticMethods(models);\r\n        let strappers = StreamProcessOrchestrationGenerator.GenerateStrappers(models);\r\n        let strapperInstances = StreamProcessOrchestrationGenerator.GenerateStrappersInstances(models);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.join(''),\r\n            agent_type_methods: agent_methods,\r\n            arbiters_strappers: strappers,\r\n            arbiter_instances: strapperInstances\r\n        });\r\n        let stream_process_tests = StreamProcessOrchestrationGenerator.GenerateProcessTests(state);\r\n        let testTemplate = bindTemplate(_testClass, {\r\n            name: StreamProcessOrchestration,\r\n            tests: stream_process_tests\r\n        })\r\n        _streamProcessInterfaceTemplate = bindTemplate(_streamProcessInterfaceTemplate, {\r\n            agent_type_methods: agent_methods_interface\r\n        });\r\n        return {\r\n            [StreamProcessOrchestration]: {\r\n                id: StreamProcessOrchestration,\r\n                name: StreamProcessOrchestration,\r\n                iname: `I${StreamProcessOrchestration}`,\r\n                tname: `${StreamProcessOrchestration}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Linq.Expressions',\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: _streamProcessInterfaceTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules, FilterUI, FilterRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/itemfilters/item_filter.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE = './app/templates/models/itemfilters/filter_property_function_value.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE_EQUALS = './app/templates/models/itemfilters/filter_property_function_value_equals.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelItemFilterGenerator {\r\n    static predicates(nodes) {\r\n        return nodes.map(x => `${GetCodeName(x)}.Filter()`)\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf-8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let modelitemfilters = NodesByType(state, NodeTypes.ModelItemFilter);\r\n        modelitemfilters.map(modelitemfilter => {\r\n\r\n\r\n            let itemFilter = GetNodeProp(modelitemfilter, NodeProperties.ModelItemFilter);\r\n            let filterModel = GetNodeProp(modelitemfilter, NodeProperties.FilterModel);\r\n            let funcs = [];\r\n            if (filterModel && filterModel.properties) {\r\n                let filterPropFunction = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE, 'utf-8');\r\n                let filters = [];\r\n                Object.keys(filterModel.properties).map(prop => {\r\n                    let propName = GetCodeName(prop);\r\n                    if (filterModel.properties[prop]) {\r\n                        Object.keys(filterModel.properties[prop].validators).map(validator => {\r\n                            let validatorName = filterModel.properties[prop].validators[validator];\r\n                            let validatorValue = '';\r\n                            let _function = '==';\r\n                            if (validatorName && validatorName.type)\r\n                                switch (validatorName.type) {\r\n                                    case FilterRules.EqualsTrue:\r\n                                        validatorValue = 'true';\r\n                                        break;\r\n                                    case FilterRules.EqualsFalse:\r\n                                        validatorValue = 'false';\r\n                                        break;\r\n                                }\r\n                            let filterPropFunctionValueEquals = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE_EQUALS, 'utf-8');\r\n                            filters.push(bindTemplate(filterPropFunctionValueEquals, {\r\n                                property: propName,\r\n                                value: validatorValue,\r\n                                function: _function\r\n                            }));\r\n                        })\r\n                    }\r\n                });\r\n                funcs.push(bindTemplate(filterPropFunction, {\r\n                    filter: filters.join(''),\r\n                    model: GetCodeName(itemFilter)\r\n                }))\r\n            }\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                code_name: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                filter: funcs\r\n            });\r\n\r\n            result[GetNodeProp(modelitemfilter, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(modelitemfilter, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport StreamProcessOrchestrationGenerator from './streamprocessorchestrationgenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ModelItemFilterGenerator from './modelitemfiltergenerator';\r\n\r\nconst MAESTRO_CLASS_TEMPLATE = './app/templates/maestro/maestro.tpl';\r\nconst MAESTRO_INTERFACE_TEMPLATE = './app/templates/maestro/imaestro.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst MAESTRO_FUNCTION_TESTS = './app/templates/maestro/tests/maestro.tpl';\r\nconst MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS = './app/templates/maestro/tests/maestro_same_agent_model.tpl';\r\nconst get_agent_manytomany_listchild_interface = './app/templates/maestro/tests/get_agent_manytomany_listchild_interface.tpl';\r\nconst MAESTRO_FUNCTION_GET_TESTS = './app/templates/maestro/tests/maestro_get.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class MaestroGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let maestros = NodesByType(state, NodeTypes.Maestro);\r\n\r\n        let _maestroTemplateClass = fs.readFileSync(MAESTRO_CLASS_TEMPLATE, 'utf-8');\r\n        let _MAESTRO_INTERFACE_TEMPLATE = fs.readFileSync(MAESTRO_INTERFACE_TEMPLATE, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let testFunctionTemplate = fs.readFileSync(MAESTRO_FUNCTION_TESTS, 'utf-8');\r\n        let testFunctionGetSameParentTemplate = fs.readFileSync(MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS, 'utf-8');\r\n\r\n        let testFunctionGetTemplate = fs.readFileSync(MAESTRO_FUNCTION_GET_TESTS, 'utf-8');\r\n        let root = GetRootGraph(state);\r\n        let graph = GetCurrentGraph(state);\r\n        let result = {};\r\n        maestros.map(maestro => {\r\n            let maestroTemplateClass = _maestroTemplateClass;\r\n            let functions = '';\r\n            let functionsInterface = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(maestro, NodeProperties.CodeName)}`;\r\n\r\n            let maestro_functions = [];\r\n            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                id: maestro.id,\r\n                type: LinkType.FunctionLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let arbiters = [];\r\n            let permissions = [];\r\n            let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n            maestro_functions = tempfunctions;\r\n            let permissionValidationCases = [];\r\n            if (maestro_functions.length) {\r\n                maestro_functions.map(maestro_function => {\r\n                    let function_type = GetNodeProp(maestro_function, NodeProperties.FunctionType);\r\n                    var ft = MethodFunctions[function_type];\r\n                    if (ft) {\r\n\r\n                        let tempFunction = ft.template;\r\n                        let interfaceFunction = ft.interface;\r\n                        let value_type = '';\r\n                        let parent_type = '';\r\n                        if (ft.parentGet) {\r\n                            value_type = 'string';\r\n                        }\r\n                        let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                        let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                        let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                        let agentTypeNode = null;\r\n                        let userTypeNode = null;\r\n                        let parentNode = null;\r\n                        let permissionNode = null;\r\n                        let modelFilterNode = null;\r\n                        let manyToManyNode = null;\r\n                        let modelNode = null;\r\n                        let methodProps = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                        let predicates = '';\r\n                        if (methodProps) {\r\n                            agentTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.AgentType]);\r\n                            modelNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Model]);\r\n                            userTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.User]);\r\n                            permissionNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Permission]);\r\n                            modelFilterNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ModelFilter]);\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            parentNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Parent]);\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            var modelItemFilters = GraphMethods.GetLinkChain(state, {\r\n                                id: maestro_function.id,\r\n                                links: [{\r\n                                    type: LinkType.ModelItemFilter,\r\n                                    direction: GraphMethods.SOURCE\r\n                                }]\r\n                            });\r\n                            predicates = ModelItemFilterGenerator.predicates(modelItemFilters);\r\n                            if (predicates.length) {\r\n                                predicates = ',' + predicates.join();\r\n                            }\r\n                            else {\r\n                                predicates = '';\r\n                            }\r\n                        }\r\n\r\n                        let agent = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let model_type = modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : `{maestro_generator_mising_model}`;\r\n                        let agent_type = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}` : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let methodType = GetNodeProp(maestro_function, NodeProperties.MethodType);\r\n                        let connect_type = manyToManyNode ? GetNodeProp(manyToManyNode, NodeProperties.CodeName) : '{maestro_connection_type_missing}';\r\n                        parent_type = parentNode ? GetNodeProp(parentNode, NodeProperties.CodeName) : '{missing parent name}';\r\n                        if (parentNode)\r\n                            arbiters.push(parent_type);\r\n                        let manyNodes = GraphMethods.GetManyToManyNodes(graphRoot, [modelNode ? modelNode.id : false, agentTypeNode ? agentTypeNode.id : null].filter(x => x)) || [];\r\n                        arbiters.push(...manyNodes.map(manyNode => {\r\n                            return GetNodeProp(manyNode, NodeProperties.CodeName);\r\n                        }));\r\n                        arbiters.push(agent_type, model_type);\r\n                        permissions.push({ agent_type, model_type });\r\n                        let value = '';\r\n                        let agentAndModelIsTheSame = false;\r\n                        if (ft.parentGet) {\r\n                            value = parentNode ? `${GetNodeProp(parentNode, NodeProperties.CodeName)}`.toLowerCase() : '{missing parent name}';\r\n                            if (agentTypeNode && parentNode) {\r\n                                agentAndModelIsTheSame = agentTypeNode.id === parentNode.id;\r\n                            }\r\n                        }\r\n                        else {\r\n                            value = modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`;\r\n                        }\r\n\r\n                        let bindOptions = {\r\n                            function_name: functionName,\r\n                            agent_type: agent_type,\r\n                            parent_type,\r\n                            agent: agent,\r\n                            value_type,\r\n                            value,\r\n                            model: model_type,\r\n                            connect_type,\r\n                            predicates,\r\n                            maestro_function: functionName,\r\n                            filter_function: modelFilterNode ? GetNodeProp(modelFilterNode, NodeProperties.CodeName) : '{missing filter node}',\r\n                            user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                            http_route: httpRoute || '{maestro_generator_http_method',\r\n                            http_method: httpMethod || '{maestro_generator_http_method',\r\n                            user_instance: userTypeNode ? `${GetNodeProp(userTypeNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_userNode}`,\r\n                            output_type: modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : '{maestro_generator_missing_model}',\r\n                            maestro_interface: ToInterface(maestroName),\r\n                            permission_function: permissionNode ? GetNodeProp(permissionNode, NodeProperties.CodeName) + methodType : `{MISSING_PERMISSION_FUNCTION}`,\r\n                            input_type: modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : '{maestro_generator_missing_model}'\r\n                        };\r\n                        tempFunction = bindTemplate(tempFunction, bindOptions);\r\n                        interfaceFunction = bindTemplate(interfaceFunction, bindOptions)\r\n\r\n                        functions += jNL + tempFunction;\r\n                        functionsInterface += jNL + interfaceFunction;\r\n\r\n                        var cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, methodType, agentTypeNode, modelNode);\r\n                        let validators = StreamProcessOrchestrationGenerator.EnumerateFunctionValidators(state, maestro_function);\r\n                        if (validators && cases) {\r\n                            validators.map(validator => {\r\n                                cases.map(_case => {\r\n                                    let pvc = {};\r\n                                    let pvc2 = {};\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ...validator.agent.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.properties.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).map((t, index) => {\r\n                                                if (validator.agent.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.agentProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ...validator.model.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).map((t, index) => {\r\n                                                if (validator.model.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.itemProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.model = (temp);\r\n                                    }\r\n\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ..._case.agentProperties.map((t, index) => _case.agentProps[index]),\r\n                                            ...validator.agent.propertyInformation.map((t, index) => {\r\n                                                if (_case.agentProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.agent.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ..._case.itemProperties.map((t, index) => _case.itemProps[index]),\r\n                                            ...validator.model.propertyInformation.map((t, index) => {\r\n                                                if (_case.itemProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.model.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.model = (temp);\r\n                                    }\r\n\r\n                                    permissionValidationCases.push(pvc2);\r\n                                    permissionValidationCases.push(pvc);\r\n                                })\r\n                            })\r\n\r\n                            permissionValidationCases = permissionValidationCases.map((pvc, index) => {\r\n                                //Generate tests.\r\n                                let templ = testFunctionTemplate;\r\n                                switch (ft.method) {\r\n                                    case Methods.Get:\r\n                                    case Methods.GetAll:\r\n                                        templ = testFunctionGetTemplate;\r\n                                        if (agentAndModelIsTheSame) {\r\n                                            templ = testFunctionGetSameParentTemplate;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                switch (function_type) {\r\n                                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                                        templ = fs.readFileSync(get_agent_manytomany_listchild_interface, 'utf-8');\r\n                                        break;\r\n                                }\r\n                                return bindTemplate(templ, {\r\n                                    agent: agent_type,\r\n                                    many_to_many: GetNodeProp(manyToManyNode, NodeProperties.CodeName),\r\n                                    parent: GetNodeProp(parentNode, NodeProperties.CodeName),\r\n                                    set_many_to_many_properties: '//{not set yet}',\r\n                                    value: modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`,\r\n                                    model: model_type,\r\n                                    function_name: functionName,\r\n                                    maestro: maestroName,\r\n                                    set_agent_properties: pvc.agent,\r\n                                    user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                                    set_model_properties: pvc.model,\r\n                                    testname: `${functionName}Test${index}`\r\n                                });\r\n                            });\r\n                            // Do analysis on whether these validations are completely bonk.\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n            arbiters = arbiters.unique();\r\n            permissions = permissions.unique(x => `${x.agent_type}`);\r\n            var injectedServices = arbiters.map(x => `IRedArbiter<${x}> _arbiter${x}`);\r\n            var injectedPermissionServices = permissions.map(x => `IPermissions${x.agent_type} _${x.agent_type.toLowerCase()}Permissions`);\r\n            var set_properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(4) + `arbiter${x} = _arbiter${x};`);\r\n            var set_permissions = permissions.map(x => jNL + MaestroGenerator.Tabs(4) + `${x.agent_type.toLowerCase()}Permissions = _${x.agent_type.toLowerCase()}Permissions;`);\r\n            var properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IRedArbiter<${x}> arbiter${x};`);\r\n            var permissions_properties = permissions.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IPermissions${x.agent_type} ${x.agent_type.toLowerCase()}Permissions;`);\r\n            let testTemplate = bindTemplate(_testClass, {\r\n                name: codeName,\r\n                tests: permissionValidationCases.join(NEW_LINE)\r\n            })\r\n            maestroTemplateClass = bindTemplate(maestroTemplateClass, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions\r\n            });\r\n            let maestro_interface_template = bindTemplate(_MAESTRO_INTERFACE_TEMPLATE, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions: functionsInterface\r\n            })\r\n            result[GetNodeProp(maestro, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                name: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                iname: `I${GetNodeProp(maestro, NodeProperties.CodeName)}`,\r\n                tname: `${GetNodeProp(maestro, NodeProperties.CodeName)}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: maestroTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Parameters}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: maestro_interface_template,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Controllers}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_change_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_change_class_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS = './app/templates/stream_process/tests/stream_process_change_class_constructor.tpl';\r\n\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeParameterGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf-8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf-8');\r\n        let _streamProcessChangeClassConstrictorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS, 'utf-8');\r\n        let result = {};\r\n        models.map(agent => {\r\n            let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n            let testClass = _testClass;\r\n            let properties = '';\r\n            let statics = '';\r\n            let constructors = [];\r\n            let tests = [];\r\n            let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf-8');\r\n            agents.map(model => {\r\n                Object.values(Methods).filter(x => x !== Methods.Get).map(method => {\r\n\r\n                    let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n\r\n                    streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                        model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        value: GetNodeProp(agent, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetNodeProp(model, NodeProperties.CodeName),\r\n                        agent: GetNodeProp(model, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    let streamProcessChangeClassConstrictorsTest = _streamProcessChangeClassConstrictorsTest;\r\n\r\n                    streamProcessChangeClassConstrictorsTest = bindTemplate(streamProcessChangeClassConstrictorsTest, {\r\n                        model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        value: GetNodeProp(agent, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetNodeProp(model, NodeProperties.CodeName),\r\n                        agent: GetNodeProp(model, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    constructors.push(streamProcessChangeClassConstructors);\r\n                    tests.push(streamProcessChangeClassConstrictorsTest);\r\n\r\n                })\r\n            }).join(jNL);\r\n\r\n            let staticDic = {\r\n                model: `${GetNodeProp(agent, NodeProperties.CodeName)}Change`\r\n            };\r\n            constructors.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL)\r\n            });\r\n\r\n            testClass = bindTemplate(testClass, {\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Change`,\r\n                tests: tests.unique(x => x).join('')\r\n            })\r\n\r\n\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Change`,\r\n                tname: `${GetNodeProp(agent, NodeProperties.CodeName)}ChangeTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONSTANTS_CLASS = './app/templates/constants.tpl';\r\n\r\nexport default class ConstantsGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { values = [], state } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _constantsClass = fs.readFileSync(CONSTANTS_CLASS, 'utf-8');\r\n        let result = {};\r\n        values.map(value => {\r\n            let { model, name } = value;\r\n            let constantsClass = _constantsClass;\r\n            let constructors = [];\r\n            var consts = Object.keys(model).map(key => {\r\n                let template = `public const string {{name}} = \"{{value}}\";`\r\n                let temp = bindTemplate(template, {\r\n                    name: key,\r\n                    value: model[key]\r\n                });\r\n                return ConstantsGenerator.Tabs(3) + temp;\r\n            }).join(jNL)\r\n\r\n            constantsClass = bindTemplate(constantsClass, {\r\n                constants: consts,\r\n                constants_type: name\r\n            });\r\n\r\n            result[name] = {\r\n                id: name,\r\n                name: name,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: constantsClass,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Constants\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_TEMPLATE = './app/templates/stream_process/stream_process.tpl';\r\nconst STREAM_PROCESS_TEMPLATE_TESTS = './app/templates/stream_process/tests/stream_process.tpl';\r\nconst STREAM_PROCESS_FUNCTION_TEMPLATE = './app/templates/stream_process/stream_process_function.tpl';\r\n\r\nexport default class StreamProcessGenerator {\r\n    static GenerateStaticMethods(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_FUNCTION_TEMPLATE, 'utf-8');\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods;\r\n    }\r\n    static GenerateStaticMethodTests(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessTemplateTests = fs.readFileSync(STREAM_PROCESS_TEMPLATE_TESTS, 'utf-8');\r\n        let _streamProcessFunctionTemplate = _streamProcessTemplateTests;\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods.unique(x => x);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_TEMPLATE, 'utf-8');\r\n        let _streamProcessTemplateTests = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let statics = StreamProcessGenerator.GenerateStaticMethods(models);\r\n        let staticTests = StreamProcessGenerator.GenerateStaticMethodTests(models);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.join('')\r\n        });\r\n\r\n        _streamProcessTemplateTests = bindTemplate(_streamProcessTemplateTests, {\r\n            tests: staticTests.join(''),\r\n            name: 'StreamProcess'\r\n        });\r\n\r\n        return {\r\n            'StreamProcess': {\r\n                id: 'StreamProcess',\r\n                name: 'StreamProcess',\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Threading',\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplateTests,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        'System.Threading',\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_response_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST = './app/templates/stream_process/tests/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED = './app/templates/stream_process/stream_process_response_class_extention_constructor_failed.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeResponseGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf-8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf-8');\r\n        let _streamProcessChangeClassConstructorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST, 'utf-8');\r\n        let _streamProcessChangeClassConstructorsFailed = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED, 'utf-8');\r\n        let _test = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let result = {};\r\n        agents.map(agent => {\r\n            let constructors = [];\r\n            let tests = [];\r\n            let properties = '';\r\n            let statics = '';\r\n            let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n            let test = _test;\r\n            models.map(model2 => {\r\n                models.map(model => {\r\n                    Object.values(Methods).filter(x => x !== Methods.Get && x !== Methods.GetAll).map(method => {\r\n\r\n                        let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n                        let streamProcessChangeClassConstructorsFailed = _streamProcessChangeClassConstructorsFailed;\r\n                        let streamProcessChangeClassConstructorsTest = _streamProcessChangeClassConstructorsTest;\r\n                        let parameterTemplate = null;\r\n                        let arrange = '';\r\n                        if (method === Methods.Delete) {\r\n                            parameterTemplate = `${GetNodeProp(model2, NodeProperties.CodeName)}Change change, bool res`;\r\n                            arrange = `\r\n            var change = ${GetNodeProp(model2, NodeProperties.CodeName)}Change.Create();\r\n            var res = true;\r\n                            `;\r\n                        }\r\n                        else {\r\n                            parameterTemplate = `${GetNodeProp(model2, NodeProperties.CodeName)}Change change, ${GetNodeProp(model, NodeProperties.CodeName)} ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}`;\r\n                            arrange = `\r\n            var change = ${GetNodeProp(model2, NodeProperties.CodeName)}Change.Create();\r\n            var res =  ${GetNodeProp(model, NodeProperties.CodeName)}.Create();\r\n            change.Response = \"response\";\r\n            change.ChangeType = \"changeType\";\r\n                            `;\r\n                        }\r\n                        let parameter_properties = `\r\n            ${method === Methods.Delete ? '' : (`\r\n            result.IdValue = ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}.Id;`)}\r\n            result.Response = change.Response;\r\n            result.ChangeType = change.ChangeType;\r\n            `;\r\n                        let act = `\r\n            var response = ${GetNodeProp(agent, NodeProperties.CodeName)}Response.${method}(change, res);\r\n`;\r\n                        let assert = `\r\n            Assert.AreEqual(response.Response, change.Response);\r\n            Assert.AreEqual(response.ChangeType, change.ChangeType);\r\n`\r\n                        streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsTest = bindTemplate(streamProcessChangeClassConstructorsTest, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            model2: GetNodeProp(model2, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            assert,\r\n                            act,\r\n                            arrange,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsFailed = bindTemplate(streamProcessChangeClassConstructorsFailed, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n                        if (!tests.some(x => x === streamProcessChangeClassConstructorsTest)) {\r\n                            tests.push(streamProcessChangeClassConstructorsTest);\r\n                        }\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructors) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructors);\r\n\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructorsFailed) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructorsFailed);\r\n\r\n                    })\r\n                })\r\n            });\r\n\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                properties: ''\r\n            });\r\n            test = bindTemplate(test, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                properties: '',\r\n                tests: tests.join(jNL)\r\n            });\r\n\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                tname: `${GetNodeProp(agent, NodeProperties.CodeName)}ResponseTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: test,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace} ${NameSpace.Parameters} `,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n            };\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                `\r\nconst jNL = `\r\n                `\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst EXECUTOR_CLASS = './app/templates/executor/executor_class.tpl';\r\nconst EXECUTOR_INTERFACE = './app/templates/executor/executor_class_interface.tpl';\r\nconst EXECUTOR_CREATE = './app/templates/executor/create.tpl';\r\nconst EXECUTOR_ENTRY_METHODS = './app/templates/executor/executor_entry_methods.tpl';\r\nconst EXECUTOR_ENTRY_METHODS_INTERFACE = './app/templates/executor/executor_entry_methods_interface.tpl';\r\nconst EXECUTOR_METHOD_CASE = './app/templates/executor/entry_method_case.tpl';\r\nconst EXECUTOR_UPDATE = './app/templates/executor/update.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst EXECUTOR_METHODS = './app/templates/executor/executor_methods.tpl';\r\nconst EXECUTOR_METHODS_INTERFACE = './app/templates/executor/executor_methods_interface.tpl';\r\n\r\nexport default class ExecutorGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ExecutorGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let nodes = NodesByType(state, NodeTypes.Executor);\r\n        let _executor_class = fs.readFileSync(EXECUTOR_CLASS, 'utf-8');\r\n        let _executor_class_interface = fs.readFileSync(EXECUTOR_INTERFACE, 'utf-8');\r\n        let _executor_methods = fs.readFileSync(EXECUTOR_METHODS, 'utf-8');\r\n        let _executor_methods_interface = fs.readFileSync(EXECUTOR_METHODS_INTERFACE, 'utf-8');\r\n        let _executor_create = fs.readFileSync(EXECUTOR_CREATE, 'utf-8');\r\n        let _executor_update = fs.readFileSync(EXECUTOR_UPDATE, 'utf-8');\r\n        let _exe_method = fs.readFileSync(EXECUTOR_ENTRY_METHODS, 'utf-8');\r\n        let _exe_method_interface = fs.readFileSync(EXECUTOR_ENTRY_METHODS_INTERFACE, 'utf-8');\r\n        let _exe_case = fs.readFileSync(EXECUTOR_METHOD_CASE, 'utf-8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf-8');\r\n        let agentFunctionDic = {};\r\n        let agentFunctionInterfaceDic = {};\r\n        let executor_entry_methods = [];\r\n        let agentModelDic = {};\r\n        let agmCombos = [];\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let allfunctions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n        allmodels.map(model => {\r\n            allagents.map(agent => {\r\n                Object.keys(Methods).map(meth => {\r\n                    let found = false;\r\n                    allfunctions.filter(x => GetNodeProp(x, NodeProperties.MethodType) === meth).map(fun => {\r\n                        found = true;\r\n                        agmCombos.push({\r\n                            agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            function: GetNodeProp(fun, NodeProperties.CodeName),\r\n                            method: GetNodeProp(fun, NodeProperties.MethodType)\r\n                        });\r\n                    });\r\n                    if (!found) {\r\n\r\n                        agmCombos.push({\r\n                            agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            method: meth\r\n                        });\r\n                    }\r\n                });\r\n            })\r\n        })\r\n\r\n        nodes.map(node => {\r\n            var agent = GetNodeProp(node, NodeProperties.ExecutorAgent);\r\n            var model = GetNodeProp(node, NodeProperties.ExecutorModel);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var agentNode = GraphMethods.GetNode(graph, agent);\r\n            var funct = GetNodeProp(node, NodeProperties.ExecutorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var functType = GetNodeProp(node, NodeProperties.ExecutorFunctionType);\r\n            var functionNode = GraphMethods.GetNode(graph, funct);\r\n            var executor = GetNodeProp(node, NodeProperties.Executor);\r\n            let executorProperties = GraphMethods.getValidatorProperties(executor);\r\n            var validation_test_vectors = [];\r\n            let amdid = GetNodeProp(agentNode, NodeProperties.CodeName) + GetNodeProp(modelNode, NodeProperties.CodeName) + GetNodeProp(functionNode, NodeProperties.MethodType);\r\n            agentModelDic[amdid] = agentModelDic[amdid] || [];\r\n\r\n            agentModelDic[amdid].push({\r\n                agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                functType,\r\n                funct: GetNodeProp(functNode, NodeProperties.CodeName)\r\n            })\r\n\r\n            let propertyValidationStatements = Object.keys(executorProperties).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = executorProperties[property];\r\n\r\n                let properties = Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"_____\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    attribute_type_arguments = temp.filter(x => x).unique(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    let template = `result{{model_property}} = data{{model_property}};`;\r\n                    switch (validators.type) {\r\n                        case ExecutorRules.AgentReference:\r\n                            template = `result{{model_property}} = agent.Id;`\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    var templateRes = bindTemplate(template, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`\r\n                    });\r\n                    return ExecutorGenerator.Tabs(4) + templateRes + NEW_LINE\r\n                }).unique(x => x).join('');\r\n\r\n\r\n                return properties;\r\n            }).unique(x => x).join('');\r\n            let template = '{{not-defined template}}';\r\n            switch (functType) {\r\n                case Methods.Create:\r\n                    template = _executor_create;\r\n                    break;\r\n                case Methods.Update:\r\n                    template = _executor_update;\r\n                    break;\r\n            }\r\n            var templateRes = bindTemplate(template, {\r\n                property_sets: propertyValidationStatements,\r\n                model: `${GetNodeProp(modelNode, NodeProperties.CodeName)}`\r\n            });\r\n\r\n            // var vectors = ExecutorGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n\r\n            var templateRes = bindTemplate(_executor_methods, {\r\n                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                method_name: GetNodeProp(functionNode, NodeProperties.CodeName),\r\n                parameters: bindTemplate(`{{data}} data, {{agent}} agent, {{change}} change`, {\r\n                    data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                    change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`\r\n                }),\r\n                data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n            var templateResInterface = bindTemplate(_executor_methods_interface, {\r\n                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                method_name: GetNodeProp(functionNode, NodeProperties.CodeName),\r\n                parameters: bindTemplate(`{{data}} data, {{agent}} agent, {{change}} change`, {\r\n                    data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                    change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`\r\n                }),\r\n                data: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                agent: GetNodeProp(agentNode, NodeProperties.CodeName),\r\n                change: `${GetNodeProp(modelNode, NodeProperties.CodeName)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n\r\n            // var testTemplate = bindTemplate(_testClass, {\r\n            //     name: GetNodeProp(node, NodeProperties.CodeName),\r\n            //     tests: testProps.join(NEW_LINE)\r\n            // });\r\n            agentFunctionInterfaceDic[agent] = agentFunctionInterfaceDic[agent] || [];\r\n            agentFunctionDic[agent] = agentFunctionDic[agent] || [];\r\n            agentFunctionDic[agent].push(templateRes)\r\n            agentFunctionInterfaceDic[agent].push(templateResInterface)\r\n\r\n        });\r\n        let lastCase;\r\n        let static_methods = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                model,\r\n                method,\r\n            } = amd;\r\n            let cases = (agentModelDic[agent + model + amd.method] || []).map(_cases => {\r\n                var {\r\n                    agent,\r\n                    model,\r\n                    functType,\r\n                    funct\r\n                } = _cases;\r\n                let _case = bindTemplate(_exe_case, {\r\n                    agent,\r\n                    model,\r\n                    func_name: funct\r\n                });\r\n                return _case + NEW_LINE;\r\n            }).unique(x => x).join('');\r\n            return bindTemplate(_exe_method, {\r\n                agent,\r\n                model,\r\n                cases,\r\n                change: `${model}`,\r\n                method\r\n            }) + NEW_LINE\r\n        });\r\n        let static_methods_interface = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                model,\r\n                method,\r\n            } = amd;\r\n            return bindTemplate(_exe_method_interface, {\r\n                agent,\r\n                model,\r\n                change: `${model}`,\r\n                method\r\n            }) + NEW_LINE\r\n        });\r\n        Object.keys(agentFunctionDic).map(agent => {\r\n\r\n            var node = GraphMethods.GetNode(graph, agent);\r\n            let templateRes = bindTemplate(_executor_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionDic[agent].join(''),\r\n                staticentry: static_methods.unique(x => x).join('')\r\n            });\r\n\r\n            let templateInterfaceRes = bindTemplate(_executor_class_interface, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionInterfaceDic[agent].unique(x => x).join(''),\r\n                staticentry: static_methods_interface.unique(x => x).join('')\r\n\r\n            })\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}ExecutorTests`,\r\n                iname: `I${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Executors\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: templateInterfaceRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                // test: NamespaceGenerator.Generate({\r\n                //     template: testTemplate,\r\n                //     usings: [\r\n                //         ...STANDARD_CONTROLLER_USING,\r\n                //         ...STANDARD_TEST_USING,\r\n                //         `${namespace}${NameSpace.Executors}`,\r\n                //         `${namespace}${NameSpace.Model}`,\r\n                //         `${namespace}${NameSpace.Constants}`],\r\n                //     namespace,\r\n                //     space: NameSpace.Tests\r\n                // }),\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/returns/returns_class.tpl';\r\nconst RETURN_GET_FUNCTION = './app/templates/models/returns/returns_funcs.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf-8');\r\n        let _return_get_methods = fs.readFileSync(RETURN_GET_FUNCTION, 'utf-8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n            var methods = allfilters.filter(x => GetNodeProp(x, NodeProperties.FilterAgent) === agent.id).map(filterNode => {\r\n                let model = GraphMethods.GetNode(graphRoot, GetNodeProp(filterNode, NodeProperties.FilterModel));\r\n                let properties = GraphMethods.getNodesByLinkType(graph, {\r\n                    id: model.id,\r\n                    direction: GraphMethods.SOURCE,\r\n                    type: LinkType.PropertyLink\r\n                }).filter(t => GetNodeProp(filterNode, NodeProperties.FilterPropreties) ? GetNodeProp(filterNode, NodeProperties.FilterPropreties)[t.id] : '')\r\n                    .map(t => {\r\n                        return `           result.${GetNodeProp(t, NodeProperties.CodeName)} = model.${GetNodeProp(t, NodeProperties.CodeName)};`\r\n                    }).join(NEW_LINE);\r\n                return bindTemplate(_return_get_methods, {\r\n                    function: GetNodeProp(filterNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    set_properties: properties\r\n                });\r\n            }).join(NEW_LINE);\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Return`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/exceptions/exceptions_class.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf-8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Exceptions`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst MODEL_GET_CLASS = './app/templates/models/gets/model_get_class.tpl';\r\nconst MODEL_GET_FUNCTION = './app/templates/models/gets/model_get_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION = './app/templates/models/gets/model_get_many_to_many_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD = './app/templates/models/gets/model_get_many_to_many_function_get_child.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelGetGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ModelGetGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _get_class = fs.readFileSync(MODEL_GET_CLASS, 'utf-8');\r\n        let _get_methods = fs.readFileSync(MODEL_GET_FUNCTION, 'utf-8');\r\n        let _get_methods_many_to_many = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION, 'utf-8');\r\n        let _get_method_many_to_many_get_child = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD, 'utf-8');\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        allmodels.map(agent => {\r\n            var methods = allmodels.filter(x => x.id !== agent.id)\r\n                .filter(x => {\r\n                    if (GetNodeProp(agent, NodeProperties.HasLogicalChildren) && (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []).some(v => v === x.id)) {\r\n                        if (!GetNodeProp(agent, NodeProperties.ManyToManyNexus))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                })\r\n                .map(model => {\r\n                    return bindTemplate(_get_methods, {\r\n                        agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    });\r\n                });\r\n\r\n            if (GetNodeProp(agent, NodeProperties.ManyToManyNexus)) {\r\n                var childrenTypes = (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []);\r\n                if (childrenTypes && childrenTypes.length) {\r\n                    let namesAreUnique = childrenTypes.map(t => GetNodeProp(GraphMethods.GetNode(graph, t), NodeProperties.CodeName)).unique(x => x).length === childrenTypes.length;\r\n                    childrenTypes.map(ct => {\r\n                        methods.push(bindTemplate(_get_method_many_to_many_get_child, {\r\n                            model: GetNodeProp(GraphMethods.GetNode(graph, ct), NodeProperties.CodeName),\r\n                            many_to_many: GetNodeProp(agent, NodeProperties.CodeName)\r\n                        }));\r\n                    })\r\n                    enumerate([].interpolate(0, childrenTypes.length, function () {\r\n                        return childrenTypes.length + 1;\r\n                    })).filter(x => x.length === x.unique(t => t).length)\r\n                        .map(model => {\r\n                            let params = model.subset(0, model.length).map((t, index) => {\r\n                                if (childrenTypes.length === t) {\r\n                                    return false;\r\n                                }\r\n                                let paramName = `x${index}`;\r\n                                if (namesAreUnique) {\r\n                                    paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                }\r\n                                return bindTemplate(`{{_type}} ${paramName}`, {\r\n                                    _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                })\r\n                            }).filter(x => x);\r\n                            if (params.length) {\r\n                                methods.push(bindTemplate(_get_methods_many_to_many, {\r\n                                    parameters: params.join(', '),\r\n                                    query: model.subset(0, model.length).map((t, index) => {\r\n                                        if (childrenTypes.length === t) {\r\n                                            return false;\r\n                                        }\r\n\r\n                                        let paramName = `x${index}`;\r\n                                        if (namesAreUnique) {\r\n                                            paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                        }\r\n\r\n                                        return bindTemplate(`item.{{_type}} == ${paramName}.Id`, {\r\n                                            _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                        })\r\n                                    }).filter(x => x).join(' && '),// \r\n                                    model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                                }));\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n            let templateRes = bindTemplate(_get_class, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods.unique(x => x).join(NEW_LINE)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Get`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import ControllerGenerator from \"./controllergenerator\";\r\nimport * as Titles from \"../components/titles\";\r\nimport { NodeTypes, GeneratedTypes, Methods, GeneratedConstants, NodeProperties, ConstantsDeclaration, MakeConstant } from \"../constants/nodetypes\";\r\nimport ModelGenerator from \"./modelgenerators\";\r\nimport ExtensionGenerator from \"./extensiongenerator\";\r\nimport MaestroGenerator from \"./maestrogenerator\";\r\nimport ChangeParameterGenerator from \"./changeparametergenerator\";\r\nimport ConstantsGenerator from \"./constantsgenerator\";\r\nimport PermissionGenerator from \"./permissiongenerator\";\r\nimport StreamProcessGenerator from \"./streamprocessgenerator\";\r\nimport { NodesByType, GetNodeProp } from \"../actions/uiactions\";\r\nimport StreamProcessOrchestrationGenerator from \"./streamprocessorchestrationgenerator\";\r\nimport ChangeResponseGenerator from \"./changeresponsegenerator\";\r\nimport ValidationRuleGenerator from \"./validationrulegenerator\";\r\nimport ExecutorGenerator from \"./executiongenerator\";\r\nimport ModelReturnGenerator from './modelreturngenerator';\r\nimport ModelExceptionGenerator from './modelexceptiongenerator';\r\nimport ModelItemFilter from './modelitemfiltergenerator';\r\nimport ModelGetGenerator from './modelgetgenerators';\r\nexport default class Generator {\r\n    static generate(options) {\r\n        var { state, type, key } = options;\r\n        switch (type) {\r\n            case NodeTypes.Controller:\r\n                let temp = ControllerGenerator.Generate({ state, key });\r\n                return temp;\r\n            case NodeTypes.Model:\r\n                return ModelGenerator.Generate({ state, key });\r\n            case NodeTypes.ExtensionType:\r\n                return ExtensionGenerator.Generate({ state, key });\r\n            case NodeTypes.Maestro:\r\n                return MaestroGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeParameter:\r\n                return ChangeParameterGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeResponse:\r\n                return ChangeResponseGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Constants:\r\n                //Add enumerations here.\r\n                let models = NodesByType(state, NodeTypes.Model);\r\n                let functions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n                let enumerations = NodesByType(state, NodeTypes.Enumeration).map(node => {\r\n                    var enums = GetNodeProp(node, NodeProperties.Enumeration);\r\n                    var larg = {};\r\n                    enums.map(t => {\r\n                        larg[MakeConstant(t)] = t;\r\n                    })\r\n                    return {\r\n                        name: GetNodeProp(node, NodeProperties.CodeName),\r\n                        model: larg\r\n                    }\r\n                });\r\n                let streamTypes = {};\r\n                models.map(t => {\r\n                    streamTypes[GetNodeProp(t, NodeProperties.CodeName).toUpperCase()] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                let functionsTypes = {};\r\n                functions.map(t => {\r\n                    functionsTypes[GetNodeProp(t, NodeProperties.CodeName)] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                return ConstantsGenerator.Generate({\r\n                    values: [{\r\n                        name: GeneratedConstants.Methods,\r\n                        model: Methods\r\n                    }, {\r\n                        name: GeneratedConstants.StreamTypes,\r\n                        model: streamTypes\r\n                    }, {\r\n                        name: GeneratedConstants.FunctionName,\r\n                        model: functionsTypes\r\n                    }, ...enumerations],\r\n                    state,\r\n                    key\r\n                });\r\n            case GeneratedTypes.Permissions:\r\n                return PermissionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcess:\r\n                return StreamProcessGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcessOrchestration:\r\n                return StreamProcessOrchestrationGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ValidationRule:\r\n                return ValidationRuleGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Executors:\r\n                return ExecutorGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelGet:\r\n                return ModelGetGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelReturn:\r\n                return ModelReturnGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelExceptions:\r\n                return ModelExceptionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelItemFilter:\r\n                return ModelItemFilter.Generate({ state, key });\r\n        }\r\n    }\r\n}","import { HandlerEvents } from '../ipc/handler-events';\r\nimport { uuidv4, GraphKeys } from '../methods/graph_methods';\r\nimport { GetRootGraph, NodesByType, GetNodeProp, NodeProperties } from './uiactions';\r\nimport fs from 'fs';\r\nconst { ipcRenderer } = require('electron');\r\nimport path from 'path';\r\nimport { GeneratedTypes, NodeTypes } from '../constants/nodetypes';\r\nimport Generator from '../generators/generator';\r\nimport { fstat, writeFileSync } from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\n\r\nconst hub = {};\r\nipcRenderer.on('message-reply', (event, arg) => {\r\n    console.log(arg) // prints \"pong\"\r\n    let reply = JSON.parse(arg);\r\n    if (hub[reply.id]) {\r\n        hub[reply.id].resolve(reply.msg);\r\n    }\r\n    delete hub[reply.id];\r\n});\r\n\r\nfunction message(msg, body) {\r\n    return {\r\n        msg,\r\n        body,\r\n        id: uuidv4()\r\n    }\r\n}\r\nfunction send(mess, body) {\r\n    var m = message(mess, body);\r\n    hub[m.id] = {};\r\n    let result = Promise.resolve().then(() => {\r\n        return new Promise((resolve, fail) => {\r\n            hub[m.id].resolve = resolve;\r\n            hub[m.id].fail = fail;\r\n        })\r\n    });\r\n    ipcRenderer.send('message', JSON.stringify(m));\r\n    return result;\r\n}\r\n\r\nexport function scaffoldProject(options = {}) {\r\n    var { filesOnly } = options;\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let root = GetRootGraph(state);\r\n        let solutionName = root.title.split(' ').join('.');\r\n\r\n        (filesOnly ? Promise.resolve() : send(HandlerEvents.scaffold.message, {\r\n            solutionName,\r\n            workspace: path.join(root.workspace, root.title)\r\n        })).then(res => {\r\n            console.log('Finished Scaffolding.');\r\n\r\n            generateFiles(path.join(root.workspace, root.title), solutionName, state);\r\n        }).then(() => {\r\n\r\n            let namespace = root ? root[GraphKeys.NAMESPACE] : null;\r\n            let server_side_setup = root ? root[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            if (server_side_setup) {\r\n\r\n                return generateFolderStructure(path.join(`./app/templates/net_core_mvc/identity/${server_side_setup}`), {\r\n                    model: GetNodeProp(userNode, NodeProperties.CodeName),\r\n                    namespace\r\n                }, null, path.join(path.join(root.workspace, root.title), solutionName + path.join('.Web')));\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction generateFolderStructure(dir, lib, relative, target_dir) {\r\n    let directories = fs.readdirSync(dir);\r\n    relative = relative || dir;\r\n    directories.map(item => {\r\n        let dirPath = path.join(dir, item);\r\n        if (fs.existsSync(dirPath) && fs.lstatSync(dirPath).isDirectory()) {\r\n            let reldir = dir.substr(relative.length)\r\n            ensureDirectory(path.join(target_dir, reldir, item));\r\n            generateFolderStructure(dirPath, lib, relative, target_dir);\r\n        }\r\n        else if (fs.existsSync(dirPath)) {\r\n            let file = fs.readFileSync(dirPath, 'utf-8');\r\n            let reldir = dir.substr(relative.length)\r\n            file = bindTemplate(file, lib);\r\n            fs.writeFileSync(path.join(target_dir, reldir, item), file, 'utf-8');\r\n        }\r\n    })\r\n}\r\nfunction generateFiles(workspace, solutionName, state) {\r\n\r\n\r\n    var code_types = [\r\n        NodeTypes.Controller,\r\n        NodeTypes.Model,\r\n        NodeTypes.ExtensionType,\r\n        NodeTypes.Maestro,\r\n        ...Object.values(GeneratedTypes)\r\n    ];\r\n    let root = GetRootGraph(state);\r\n    code_types.map(code_type => {\r\n\r\n        var temp = Generator.generate({\r\n            type: code_type,\r\n            state\r\n        });\r\n        let area = CodeTypeToArea[code_type];\r\n        path.join();\r\n        for (var fileName in temp) {\r\n            ensureDirectory(path.join(workspace, solutionName + area))\r\n            writeFileSync(path.join(workspace, solutionName + area, `${temp[fileName].name}.cs`), temp[fileName].template)\r\n            if (temp[fileName].interface) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Interfaces'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Interfaces', `${temp[fileName].iname || fileName}.cs`), temp[fileName].interface);\r\n            }\r\n            if (temp[fileName].test) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Tests', `${temp[fileName].tname || fileName}.cs`), temp[fileName].test);\r\n\r\n            }\r\n        }\r\n    })\r\n    if (root) {\r\n        ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Tests', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n        ensureDirectory(path.join(workspace, solutionName + '.Web'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Web', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n    }\r\n}\r\n\r\nfunction ensureDirectory(dir) {\r\n    if (!fs.existsSync(dir)) {\r\n        console.log('doesnt exist : ' + dir);\r\n    }\r\n    else {\r\n    }\r\n\r\n    if (!fs.existsSync(dir)) {\r\n        fs.mkdirSync(dir);\r\n    }\r\n    else {\r\n    }\r\n};\r\n\r\nconst CodeTypeToArea = {\r\n    [NodeTypes.Controller]: path.join('.Web', 'Controllers'),\r\n    [NodeTypes.Model]: '.Models',\r\n    [NodeTypes.ExtensionType]: '.Models',\r\n    [NodeTypes.Maestro]: '.Controllers',\r\n    [GeneratedTypes.ChangeParameter]: '.Models',\r\n    [GeneratedTypes.ChangeResponse]: '.Models',\r\n    [GeneratedTypes.ValidationRule]: '.Models',\r\n    [GeneratedTypes.Executors]: '.Controllers',\r\n    [GeneratedTypes.ModelGet]: '.Controllers',\r\n    [GeneratedTypes.ModelReturn]: '.Controllers',\r\n    [GeneratedTypes.ModelExceptions]: '.Controllers',\r\n    [GeneratedTypes.Constants]: '.Models',\r\n    [GeneratedTypes.Permissions]: '.Controllers',\r\n    [GeneratedTypes.ModelItemFilter]: '.Controllers',\r\n    [GeneratedTypes.StreamProcess]: '.Controllers',\r\n    [GeneratedTypes.StreamProcessOrchestration]: '.Controllers'\r\n\r\n}","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as IPCEvents from '../actions/ipcActions';\r\nexport function mapStateToProps(state) {\r\n    return {\r\n        state\r\n    };\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({ ...UIA, ...IPCEvents }, dispatch);\r\n}\r\n\r\n\r\nexport function UIConnect(component) {\r\n    return connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(component);\r\n}\r\nString.prototype.padding = function (n, c) {\r\n    var val = this.valueOf();\r\n    if (Math.abs(n) <= val.length) {\r\n        return val;\r\n    }\r\n    var m = Math.max((Math.abs(n) - this.length) || 0, 0);\r\n    var pad = Array(m + 1).join(String(c || ' ').charAt(0));\r\n    //      var pad = String(c || ' ').charAt(0).repeat(Math.abs(n) - this.length);\r\n    return (n < 0) ? pad + val : val + pad;\r\n    //      return (n < 0) ? val + pad : pad + val;\r\n};\r\n\r\nString.prototype.unCamelCase = function () {\r\n    var str = this || '';\r\n    return str\r\n        // insert a space between lower & upper\r\n        .replace(/([a-z])([A-Z])/g, '$1 $2')\r\n        // space before last upper in a sequence followed by lower\r\n        .replace(/\\b([A-Z]+)([A-Z])([a-z])/, '$1 $2$3')\r\n        // uppercase the first character\r\n        .replace(/^./, function (str) { return str.toUpperCase(); }).trim();\r\n};\r\n((array) => {\r\n    if (!array.relativeCompliment) {\r\n        var extrasection_relativeCompliment = {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func, output) {\r\n                var collection = this;\r\n                var result = [];\r\n\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {//function (x) { return x == collection[i]; }\r\n                    if (!othercollection.some(func.bind(null, collection[i]))) {\r\n                        result.push(collection[i]);\r\n                    }\r\n                    else if (output) {\r\n                        output.push(collection[i]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        if (!array.relativeCompliment) {\r\n            Object.defineProperty(array, 'relativeCompliment', extrasection_relativeCompliment);\r\n        }\r\n    }\r\n\r\n    if (!array.intersection) {\r\n        Object.defineProperty(array, 'intersection', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func) {\r\n                var collection = this;\r\n                var result = [];\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {\r\n                    for (var j = othercollection.length; j--;/**/) {\r\n                        if ((func(othercollection[j], collection[i]))) {\r\n                            result.push(collection[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n    if (!array.toNodeSelect) {\r\n        Object.defineProperty(array, 'toNodeSelect', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function () {\r\n                var collection = this;\r\n                return collection.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    if (!array.unique) {\r\n        Object.defineProperty(array, 'unique', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var result = [];\r\n                var finalresult = [];\r\n                func = func || function (x) { return x; };\r\n                var collection = this;\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    //if (func(collection[i])) {\r\n                    if (result.indexOf(func(collection[i])) === -1) {\r\n                        result.push(func(collection[i]));\r\n                        finalresult.push(collection[i]);\r\n                    }\r\n                    //}\r\n                }\r\n                return finalresult;\r\n                //return result;\r\n            }\r\n        });\r\n    }\r\n    if (!array.removeIndices) {\r\n        //removeIndices\r\n        Object.defineProperty(array, 'removeIndices', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (indices) {\r\n                indices = indices.orderBy(function (x, y) { return y - x; });\r\n                var collection = this;\r\n                indices.map(function (index) {\r\n                    collection.splice(index, 1);\r\n                });\r\n\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.interpolate) {\r\n        Object.defineProperty(array, 'interpolate', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop, func) {\r\n                var collection = this;\r\n                func = func || function (x) { return x; };\r\n                for (var i = start; i < stop; i++) {\r\n                    if (collection instanceof Float32Array) {\r\n                        collection[i - start] = (func(i));\r\n                    }\r\n                    else\r\n                        collection.push(func(i, i - start));\r\n                }\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.orderBy) {\r\n        Object.defineProperty(array, 'orderBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this.map(function (x) { return x; });\r\n                return collection.sort(func);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!array.groupBy) {\r\n        Object.defineProperty(array, 'groupBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this;\r\n                var result = {};\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    var t = func(collection[i]);\r\n                    result[t] = result[t] || [];\r\n                    result[t].push(collection[i]);\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!array.subset) {\r\n        Object.defineProperty(array, 'subset', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop) {\r\n                var collection = this;\r\n                stop = Math.min(collection.length, stop === undefined || stop === null ? collection.length : stop);\r\n                start = Math.min(collection.length, start === undefined || start === null ? collection.length : start);\r\n                start = start < 0 ? 0 : start;\r\n                stop = stop < 0 ? 0 : stop;\r\n                var result = this instanceof Float32Array ? new Float32Array(stop - start) : [];\r\n                for (var i = start; i < stop; i++) {\r\n                    if (this instanceof Float32Array) {\r\n                        result[i - start] = collection[i];\r\n                    }\r\n                    else {\r\n                        result.push(collection[i]);\r\n                    }\r\n\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n})(Array.prototype)\r\n\r\n\r\nexport function enumerate(vects, j = 0) {\r\n    var results = [];\r\n\r\n    if (j < vects.length)\r\n        for (var i = 0; i < vects[j]; i++) {\r\n            var rest = enumerate(vects, j + 1);\r\n            var temp = [i];\r\n            if (rest.length) {\r\n                rest.map(r => {\r\n                    results.push([...temp, ...r])\r\n                });\r\n            }\r\n            else {\r\n                results.push(temp);\r\n            }\r\n        }\r\n    return results;\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <a className=\"logo\">\r\n                <span className=\"logo-mini\"><b>R</b>QB</span>\r\n                <span className=\"logo-lg\"><b>Red</b>QuickBuilder</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"main-header\">\r\n                {this.props.children}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-static-top\">\r\n                {this.props.children}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nclass SidebarToggle extends Component {\r\n    render() {\r\n        var me = this;\r\n        return (\r\n            <a\r\n                onClick={() => {\r\n                    me.props.toggleDashboardMinMax();\r\n                }}\r\n                className=\"sidebar-toggle\"\r\n                data-toggle=\"push-menu\" role=\"button\">\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SidebarToggle);","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-custom-menu\">\r\n                <ul className=\"nav navbar-nav\">\r\n                    {this.props.children}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenu extends Component {\r\n    menuType() {\r\n        return 'messages-menu';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'open' : '';\r\n    }\r\n    ariaExpanded() {\r\n        return this.props.open ? 'true' : 'false';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    label() {\r\n        return null;//<span className=\"label label-success\">4</span>\r\n    }\r\n    usermode() {\r\n        return this.props.usermode;\r\n    }\r\n    usermenu() {\r\n        return this.props.usermode ? 'user user-menu' : '';\r\n    }\r\n    userbody() {\r\n        return this.props.usermode ? 'user user-body' : '';\r\n    }\r\n    userheader() {\r\n        return this.props.usermode ? 'header' : 'header';\r\n    }\r\n    render() {\r\n        var ops = {};\r\n        if (this.props.width) {\r\n            ops.style = { width: this.props.width }\r\n        }\r\n        return (\r\n            <li className={`dropdown ${this.usermenu()} ${this.menuType()} ${this.open()}`}>\r\n                <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded={this.ariaExpanded()} onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.label()}\r\n                </a>\r\n                <ul className=\"dropdown-menu\" {...ops}>\r\n                    {this.props.headerText ? <li className={this.userheader()}>{this.props.headerText}</li> : null}\r\n                    {this.props.header ? <li className={this.userheader()}>{this.props.header}</li> : null}\r\n                    {this.usermode() ? (<li className={this.userbody()}>\r\n                        <div className=\"row\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </li>) : (<li className={this.userbody()}>\r\n                        <ul className=\"menu\">\r\n                            {this.props.children}\r\n                        </ul>\r\n                    </li>)}\r\n                    {this.props.footer ? this.props.footer : null}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenuItem extends Component {\r\n\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <div className=\"pull-left\">\r\n                        <i style={{ fontSize: 34 }} className={this.icon()}></i>\r\n                    </div>\r\n                    <h4>\r\n                        {this.props.title}\r\n                        {/* <small><i className=\"fa fa-clock-o\"></i> 5 mins</small> */}\r\n                    </h4>\r\n                    <p>{this.props.description}</p>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <aside className=\"main-sidebar\">\r\n                <section className=\"sidebar\" style={{ height: 'auto' }}>\r\n                    {this.props.children}\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class SideBarHeader extends Component {\r\n    render() {\r\n        return (<li className=\"header\">{this.props.title}</li>);\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"sidebar-menu tree\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TreeViewMenu extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'menu-open' : '';\r\n    }\r\n    display() {\r\n        return this.props.open ? 'block' : 'block';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-dashboard\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={`treeview ${this.active()} ${this.open()}`}>\r\n                <a onClick={() => {\r\n                    if (this.props.toggle)\r\n                        this.props.toggle()\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    {this.props.hideIcon ? null : <i className={`${this.icon()}`}></i>}\r\n                    <span>{this.props.title}</span>\r\n                    {this.props.hideArrow ? null : (<span className=\"pull-right-container\">\r\n                        <i className=\"fa fa-angle-left pull-right\"></i>\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                    {!this.props.hideArrow && this.props.right ? null : (<span className=\"pull-right-container\">\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                </a>\r\n                <ul className=\"treeview-menu\" style={{ display: this.display() }}>\r\n                    {this.props.children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItem extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick)\r\n                        this.props.onClick();\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.props.title}\r\n                    {this.props.right ? (<span class=\"pull-right-container\">\r\n                        {this.props.right}\r\n                    </span>) : null}\r\n                </a>\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Content extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"content-wrapper\" style={{ minHeight: '946px' }}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBar extends Component {\r\n    open() {\r\n        return this.props.open ? 'control-sidebar-open' : '';\r\n    }\r\n    extraWidth() {\r\n        return this.props.extraWide ? 'extra-wide' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className={`control-sidebar control-sidebar-dark ${this.open()} ${this.extraWidth()}`}>\r\n                {this.props.children}\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTabs extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs nav-justified control-sidebar-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTab extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-wrench\";\r\n    }\r\n    active() {\r\n        return this.props.active ? 'active' : \"\";\r\n    }\r\n    ariaExapanded() {\r\n        return this.props.active ? 'true' : 'false';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded={this.ariaExapanded()}>\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class ControlSideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"control-sidebar-menu\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class ControlSideBarMenuItem extends Component {\r\n    icon() {\r\n        return this.props.icon || 'fa fa-birthday-cake';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={`menu-icon ${this.icon()} bg-red`}></i>\r\n\r\n                    <div className=\"menu-info\">\r\n                        <h4 className=\"control-sidebar-subheading\">{this.props.title || ''}</h4>\r\n\r\n                        <p>{this.props.description || ''}</p>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ControlSideBarMenuHeader extends Component {\r\n    render() {\r\n        return (\r\n            <h3 className=\"control-sidebar-heading\">{this.props.title}</h3>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabPane extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-pane ${this.active()}`}>\r\n                {this.props.active ? this.props.children : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class FormControl extends Component {\r\n    _class() {\r\n        return this.props.sidebarform ? 'sidebar-form' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <form role=\"form\" className={this._class()} {...{ style: this.props.style || {} }}>\r\n                {this.props.children}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class TextInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    placeholder() {\r\n        return this.props.placeholder || '';\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.props.inputgroup ? 'input-group' : \"form-group\"}>\r\n                {this.props.inputgroup ? null : <label>{this.label()}</label>}\r\n                <input type=\"text\" disabled={this.disabled()} className={\"form-control\"} value={this.value()} onChange={(v) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(v.target.value);\r\n                    }\r\n                }} placeholder={this.placeholder()} />\r\n                {this.props.inputgroup ? (<span className=\"input-group-btn\">\r\n                    <button type=\"submit\" onClick={() => {\r\n                        if (this.props.onClick) {\r\n                            this.props.onClick();\r\n                        }\r\n                    }} name=\"search\" id=\"search-btn\" className=\"btn btn-flat\"><i className=\"fa fa-edit\"></i>\r\n                    </button>\r\n                </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as Titles from './titles';\r\n\r\nexport default class SelectInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    options() {\r\n        if (this.props.options) {\r\n            return this.props.options.map((t, index) => {\r\n                return (<option key={`option-${index}`} value={t.value}>{t.title}</option>)\r\n            })\r\n        }\r\n        return [];\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>{this.label()}</label>\r\n                <select className=\"form-control\" disabled={this.disabled()} onSelect={(evt) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(evt.target.value);\r\n                    }\r\n                }}\r\n                    onChange={(evt) => {\r\n                        if (this.props.onChange) {\r\n                            this.props.onChange(evt.target.value);\r\n                        }\r\n                    }} value={this.value()}>\r\n                    <option value={''}>{this.props.defaultSelectText || Titles.Select}</option>\r\n                    {this.options()}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class CheckBox extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <div className=\"checkbox\">\r\n                    <label title={this.title()}>\r\n                        <input type=\"checkbox\" checked={this.value()} onChange={(v) => {\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange(v.target.checked);\r\n                            }\r\n                        }} />\r\n                        {this.label()}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const ServiceTypes = {\r\n    Facebook: 'Facebook',\r\n    Twitter: 'Twitter',\r\n    Google: 'Google',\r\n    Microsoft: 'Microsoft'\r\n}\r\n\r\nexport const ServiceTypeSetups = {\r\n    [ServiceTypes.Facebook]: {\r\n        properties: {\r\n            UseFacebook: { type: 'boolean' },\r\n            FacebookAppId: { type: 'string' },\r\n            FacebookAppSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Microsoft]: {\r\n        properties: {\r\n            UseMicrosoftAccount: { type: 'boolean' },\r\n            MicrosoftClientId: { type: 'string' },\r\n            MicrosoftClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Google]: {\r\n        properties: {\r\n            UseGoogle: { type: 'boolean' },\r\n            GoogleClientId: { type: 'string' },\r\n            GoogleClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Twitter]: {\r\n        properties: {\r\n            UseTwitter: { type: 'boolean' },\r\n            TwitterConsumerKey: { type: 'string' },\r\n            TwitterConsumerSecret: { type: 'string' }\r\n        }\r\n    }\r\n}\r\n\r\nexport const SystemSettings = {\r\n    Domain: 'Domain'\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nimport { ServiceTypes, ServiceTypeSetups } from '../constants/servicetypes';\r\nclass ServiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Services);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let serviceType = currentNode ? UIA.GetNodeProp(currentNode, NodeProperties.ServiceType) : '';\r\n        let propinputs = [];\r\n        if (serviceType) {\r\n            let serviceTypeSetup = ServiceTypeSetups[serviceType];\r\n            if (serviceTypeSetup && serviceTypeSetup.properties) {\r\n                Object.keys(serviceTypeSetup.properties).map(prop => {\r\n                    var prop_setup = serviceTypeSetup.properties[prop];\r\n                    var value = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ServiceTypeSettings) || {};\r\n                    if (prop_setup && prop_setup.type) {\r\n                        switch (prop_setup.type) {\r\n                            case 'string':\r\n                                propinputs.push(<TextInput\r\n                                    key={`service-type${prop}`}\r\n                                    onChange={(val) => {\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                            id: currentNode.id,\r\n                                            value: { ...value, [prop]: val }\r\n                                        });\r\n                                    }}\r\n                                    label={prop.unCamelCase()}\r\n                                    value={value[prop] || ''} />)\r\n                                break;\r\n                            case 'boolean':\r\n                                    propinputs.push(<CheckBox\r\n                                        key={`service-type${prop}`}\r\n                                        onChange={(val) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                                id: currentNode.id,\r\n                                                value: { ...value, [prop]: val }\r\n                                            });\r\n                                        }}\r\n                                        label={prop.unCamelCase()}\r\n                                        value={value[prop] || ''} />)\r\n                                break;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.ServiceActivity}\r\n                        options={Object.keys(ServiceTypes).map(t => {\r\n                            return { title: t, value: ServiceTypes[t] }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ServiceType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={serviceType} />\r\n                        {propinputs}\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ServiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarContent extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"tab-content\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarButton extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} title={this.title()} data-toggle=\"control-sidebar\">\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","export const GraphOperationMenu = 'GraphOperationMenu';\r\nexport const GraphPropertiesMenu = 'GraphPropertiesMenu';\r\nexport const ApplicationMenu = 'ApplicationMenu';","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","\r\nimport * as d3Zoom from 'd3-zoom'\r\nimport * as d3 from 'd3';\r\nimport * as Cola from 'webcola'\r\nimport * as GraphMethods from '../methods/graph_methods';\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport { NodeTypeColors } from '../actions/uiactions';\r\nimport { LinkStyles, LinkType, LinkPropertyKeys } from '../constants/nodetypes';\r\n\r\nconst MIN_DIMENSIONAL_SIZE = 20;\r\nexport default class MindMap extends Component {\r\n    constructor() {\r\n        super();\r\n        this.textSize = {};\r\n        this.mapScale = 1;\r\n        this.mapTranslate = { x: 0, y: 0 };\r\n        this.state = {\r\n            id: `id-${Date.now()}`,\r\n            graph: {\r\n                \"nodes\": [].map(t => { t.id = t.name; return t; }),\r\n                links: [],\r\n                \"groups\": [\r\n                    // { \"leaves\": [0], \"groups\": [1] },\r\n                    // { \"leaves\": [1, 2] },\r\n                    // { \"leaves\": [3, 4] }\r\n                ]\r\n            }\r\n        }\r\n        this.draw = this.draw.bind(this);\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.mouseMove = this.mouseMove.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // Draw for the first time to initialize.\r\n        this.draw();\r\n\r\n        // Redraw based on the new size whenever the browser window is resized.\r\n        window.addEventListener(\"resize\", this.draw);\r\n        window.addEventListener('mousemove', this.mouseMove);\r\n        window.addEventListener('mouseup', this.mouseUp);\r\n        window.addEventListener('mousedown', this.mouseDown);\r\n    }\r\n    mouseDown(evt) {\r\n        this.mouseStartEvent = evt;\r\n    }\r\n    mouseUp(evt) {\r\n        this.mouseStartEvent = null;\r\n        this.mouseMoved = null;\r\n    }\r\n    mouseMove(evt) {\r\n        if (this.mouseStartEvent) {\r\n            this.mouseMoveEvt = evt;\r\n            this.mouseMoved = {\r\n                x: evt.clientX - this.mouseStartEvent.clientX,\r\n                y: evt.clientY - this.mouseStartEvent.clientY\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.draw);\r\n        window.removeEventListener('mousemove', this.mouseMove);\r\n        window.removeEventListener('mousedown', this.mouseUp);\r\n        window.removeEventListener('mouseup', this.mouseDown);\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n        if (domObj) {\r\n            domObj.innerHTML = '';\r\n        }\r\n    }\r\n    calculateNodeTextSize(text, pad) {\r\n        var div = document.querySelector('#secret-div-space');\r\n        if (!div) {\r\n            div = document.createElement('div');\r\n            div.id = 'secret-div-space';\r\n            div.setAttribute('id', 'secret-div-space');\r\n            div.style.visibility = 'hidden';\r\n            div.style.position = 'absolute';\r\n            div.classList.add('label');\r\n            div.style.whiteSpace = 'normal';\r\n            div.style.maxWidth = (text || '').split(' ').length > 1 ? `200px` : '300px';\r\n            div.style.top = '-10000px';\r\n            div.style.padding = (pad * 2) + 'px';\r\n            document.querySelector(`#${this.state.id}`).appendChild(div);\r\n        }\r\n        div.innerHTML = text;\r\n        return div.getBoundingClientRect();\r\n    }\r\n    draw() {\r\n        var me = this;\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n\r\n        domObj.innerHTML = '';\r\n        var bb = domObj.getBoundingClientRect();\r\n        var force = Cola.d3adaptor(d3);\r\n        var width = bb.width - 10;// 960;\r\n        var height = bb.height - 10;// 800;\r\n        var color = d3.scaleOrdinal(d3.schemeCategory10)\r\n\r\n        var margin = 6, pad = 12;;\r\n        force\r\n            .linkDistance(this.props.linkDistance || 280)\r\n            .avoidOverlaps(true)\r\n            .handleDisconnected(false)\r\n            .size([width, height]);\r\n\r\n        var svg = makeSVG();\r\n        function makeSVG() {\r\n            var outer = d3.select(`#${me.state.id}`).append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"pointer-events\", \"all\");\r\n            // define arrow markers for graph links\r\n            outer.append('svg:defs').append('svg:marker')\r\n                .attr('id', 'end-arrow')\r\n                .attr('viewBox', '0 -5 10 10')\r\n                .attr('refX', 5)\r\n                .attr('markerWidth', 3)\r\n                .attr('markerHeight', 3)\r\n                .attr('orient', 'auto')\r\n                .append('svg:path')\r\n                .attr('d', 'M0,-5L10,0L0,5L2,0')\r\n                .attr('stroke-width', '0px')\r\n                .attr('fill', function (d) {\r\n                    if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                        return LinkStyles[d.properties.type].stroke;\r\n                    }\r\n                    return '#555';\r\n                });\r\n\r\n\r\n            var vis = outer.append('g');\r\n            outer.on(\"wheel\", function (d) {\r\n                me.mapScale += d3.event.wheelDelta / (me.props.zoomFactor || 5000);\r\n                redraw();\r\n            });\r\n            function redraw() {\r\n                var { x = 0, y = 0 } = (me.mouseMoved || {});\r\n                vis.attr('transform', `scale(${me.mapScale || 1}) translate(${me.mapTranslate.x + x}, ${me.mapTranslate.y + y})`);\r\n            }\r\n            outer.on('mousemove', function (x, v) {\r\n                if (me.panning) {\r\n                    redraw();\r\n                }\r\n            });\r\n\r\n            outer.on(\"mousedown\", function (d) {\r\n                me.panning = true;\r\n            });\r\n            outer.on(\"mouseup\", function (d) {\r\n                me.panning = false;\r\n\r\n                if (me.mouseMoved && me.mapTranslate) {\r\n                    me.mapTranslate = {\r\n                        x: me.mapTranslate.x + me.mouseMoved.x,\r\n                        y: me.mapTranslate.y + me.mouseMoved.y\r\n                    }\r\n                }\r\n            });\r\n\r\n            redraw();\r\n            return vis;\r\n        }\r\n        // function gridify(svg, pgLayout, margin, groupMargin) {\r\n        //     var routes = cola.gridify(pgLayout, 5, margin, groupMargin);\r\n        //     svg.selectAll('path').remove();\r\n        //     routes.forEach(route => {\r\n        //         var cornerradius = 5;\r\n        //         var arrowwidth = 3;\r\n        //         var arrowheight = 7;\r\n        //         var p = cola.GridRouter.getRoutePath(route, cornerradius, arrowwidth, arrowheight);\r\n        //         if (arrowheight > 0) {\r\n        //             svg.append('path')\r\n        //                 .attr('class', 'linkarrowoutline')\r\n        //                 .attr('d', p.arrowpath);\r\n        //             svg.append('path')\r\n        //                 .attr('class', 'linkarrow')\r\n        //                 .attr('d', p.arrowpath);\r\n        //         }\r\n        //         svg.append('path')\r\n        //             .attr('class', 'linkoutline')\r\n        //             .attr('d', p.routepath)\r\n        //             .attr('fill', 'none');\r\n        //         svg.append('path')\r\n        //             .attr('class', 'link')\r\n        //             .attr('d', p.routepath)\r\n        //             .attr('fill', 'none');\r\n        //     });\r\n\r\n        //     svg.selectAll(\".label\").transition().attr(\"x\", d => d.routerNode.bounds.cx())\r\n        //         .attr(\"y\", function (d) {\r\n        //             var h = this.getBBox().height;\r\n        //             return d.bounds.cy() + h / 3.5;\r\n        //         });\r\n\r\n        //     svg.selectAll(\".node\").transition().attr(\"x\", d => d.routerNode.bounds.x)\r\n        //         .attr(\"y\", d => d.routerNode.bounds.y)\r\n        //         .attr(\"width\", d => d.routerNode.bounds.width())\r\n        //         .attr(\"height\", d => d.routerNode.bounds.height());\r\n\r\n        //     let groupPadding = margin - groupMargin;\r\n        //     svg.selectAll(\".group\").transition().attr('x', d => d.routerNode.bounds.x - groupPadding)\r\n        //         .attr('y', d => d.routerNode.bounds.y + 2 * groupPadding)\r\n        //         .attr('width', d => d.routerNode.bounds.width() - groupPadding)\r\n        //         .attr('height', d => d.routerNode.bounds.height() - groupPadding);\r\n        // }\r\n        var graph = this.state.graph;\r\n\r\n        graph.nodes.forEach(function (v) {\r\n            var bb = me.calculateNodeTextSize(getLabelText(v), pad);\r\n            v.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n            v.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height);\r\n        })\r\n        graph.groups.forEach(function (g) { g.padding = pad })\r\n\r\n        force.nodes(graph.nodes)\r\n            .groups(graph.groups)\r\n            .links(graph.links)\r\n            .on(\"tick\", tick)\r\n\r\n        var group = svg.selectAll(\".group\")\r\n            .data(graph.groups)\r\n            .enter().append(\"rect\")\r\n            .attr(\"rx\", 8).attr(\"ry\", 8)\r\n            .attr(\"class\", \"group\")\r\n            .style(\"fill\", function (d, i) { return color(i) })\r\n            .call(force.drag)\r\n\r\n        var node = svg.selectAll(\".node\");\r\n        this.$node = node;\r\n        this.buildNode(graph, force, color);\r\n        var link = svg.selectAll(\".link\")\r\n            .data(graph.links)\r\n            .enter().append(\"line\")\r\n            .attr(\"class\", \"link\")\r\n            .style('stroke', function (d) {\r\n                if (d.selected) {\r\n                    return '#ff0000';\r\n                }\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return LinkStyles[LinkType.ErrorLink].stroke;\r\n                }\r\n                else if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                    return LinkStyles[d.properties.type].stroke;\r\n                }\r\n                return '#555';\r\n            })\r\n            .style(\"stroke-dasharray\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return '5,5';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"d\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return 'M5 20 l215 0';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"stroke-width\", function (d) {\r\n                if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].strokeWidth) {\r\n                    return LinkStyles[d.properties.type].strokeWidth;\r\n                }\r\n                return Math.sqrt(d.value);\r\n            });\r\n        link.on('click', (d, index, els) => {\r\n            if (me.props.onLinkClick && d) {\r\n                me.props.onLinkClick({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        });\r\n        link.on('mouseover', (d, index, els) => {\r\n            if (me.props.onLinkHover && d) {\r\n                me.props.onLinkHover({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        })\r\n        var label = svg.selectAll(\".label\")\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append(\"foreignObject\")\r\n            .attr(\"class\", \"label\");\r\n        label.on('click', (d, index, els) => {\r\n            if (me.props.onNodeClick && d && d.id) {\r\n                me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n            }\r\n        })\r\n\r\n        var features = svg.selectAll('.features')\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', 'features')\r\n\r\n        features.append(\"rect\")\r\n            .attr(\"width\", function (d) { return d.selected ? 5 : 0; })\r\n            .attr(\"height\", function (d) { return d.height - 10; })\r\n            .attr('x', 3)\r\n            .attr('y', 5)\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d.selected && me.props.selectedColor) {\r\n                    return me.props.selectedColor;\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n\r\n        var titles = label.append('xhtml:div')\r\n            .style('width', x => {\r\n                return `${x.width - pad / 2}px`\r\n            })\r\n            .style('white-space', 'normal')\r\n            .style('text-align', 'start')\r\n            //.style('word-break', 'break-all')\r\n            .style('height', x => {\r\n                return `${x.height - pad / 2}px`\r\n            })\r\n            .text(function (d) { return `${getLabelText(d)}` })\r\n            .call(force.drag);\r\n\r\n        this.$force = force;\r\n        this.setState({\r\n            $node: node,\r\n            $color: color\r\n        })\r\n\r\n        function getLabelText(d) {\r\n            return d && d.properties ? d.properties.text || d.name : d.name;\r\n        }\r\n\r\n        function rotate(source, degree = Math.PI / 2) {\r\n            var { innerBounds, x, y } = source;\r\n            var rise = innerBounds.y - innerBounds.Y;\r\n            var run = innerBounds.x - innerBounds.X;\r\n\r\n            return Object.assign(innerBounds, {\r\n                x: 1 + innerBounds.x,\r\n                y: rise ? ((run / rise) * 1) + innerBounds.y : innerBounds.y,\r\n                X: 1 + innerBounds.X,\r\n                Y: rise ? ((run / rise) * 1) + innerBounds.Y : innerBounds.Y\r\n            });\r\n        }\r\n\r\n        function tick() {\r\n            if (me.$_nodes) {\r\n                me.$_nodes.each(function (d) {\r\n                    var bb = me.calculateNodeTextSize(getLabelText(d), pad);\r\n                    d.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n                    d.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height)\r\n                    d.innerBounds = d.bounds.inflate(- margin);\r\n                });\r\n            }\r\n\r\n            // link.attr(\"x1\", function (d) { return d.source.x; })\r\n            //     .attr(\"y1\", function (d) { return d.source.y; })\r\n            //     .attr(\"x2\", function (d) { return d.target.x; })\r\n            //     .attr(\"y2\", function (d) { return d.target.y; });\r\n\r\n\r\n            if (me.$_nodes) {\r\n                me.$_nodes\r\n                    .attr(\"width\", function (d) { return d.width; })\r\n                    .attr(\"height\", function (d) { return d.height; })\r\n                    .attr(\"x\", function (d) { return d.x - d.width / 2 })\r\n                    .attr(\"y\", function (d) { return d.y - d.height / 2 })\r\n            }\r\n\r\n            group.attr(\"x\", function (d) { return d.bounds.x })\r\n                .attr(\"y\", function (d) { return d.bounds.y })\r\n                .attr(\"width\", function (d) { return d.bounds.width() })\r\n                .attr(\"height\", function (d) { return d.bounds.height() })\r\n\r\n            link.each(function (d) {\r\n                d.route = Cola.makeEdgeBetween(rotate(d.source), rotate(d.target, -Math.PI / 2), 5);\r\n            });\r\n\r\n            link.attr(\"x1\", function (d) { return d.route.sourceIntersection.x; })\r\n                .attr(\"y1\", function (d) { return d.route.sourceIntersection.y; })\r\n                .attr(\"x2\", function (d) { return d.route.arrowStart.x; })\r\n                .attr(\"y2\", function (d) { return d.route.arrowStart.y; });\r\n\r\n            features.attr(\"transform\", function (d) {\r\n                var y = d.y - d.height / 2;\r\n                var x = d.x - d.width / 2;\r\n                return `translate(${x},${y})`;\r\n            })\r\n\r\n\r\n            label\r\n                .attr(\"x\", function (d) {\r\n                    return d.x - d.width / 2\r\n                }).attr(\"y\", function (d) {\r\n                    var innerbit = this.querySelector('div');\r\n                    var h = innerbit ? innerbit.getBoundingClientRect().height : 0;\r\n\r\n                    return d.y + h / 2 - d.height + pad / 2;\r\n                })\r\n            titles.text(function (d) {\r\n                return getLabelText(d);\r\n            })\r\n        }\r\n        force.start();\r\n    }\r\n    buildNode(graph, cola, color) {\r\n        var me = this;\r\n        var node = this.$node.data(cola.nodes(), x => x.id || x.name);\r\n        var temp = node.enter().append(\"rect\")\r\n            .attr(\"class\", \"node\")\r\n            .attr(\"width\", function (d) { return d.width; })\r\n            .attr(\"height\", function (d) { return d.height; })\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d && d.properties && d.properties.nodeType && NodeTypeColors[d.properties.nodeType]) {\r\n                    return NodeTypeColors[d.properties.nodeType]\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n            .on('click', (d, index, els) => {\r\n                if (me.props.onNodeClick && d) {\r\n                    me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n                }\r\n            })\r\n            .call(cola.drag);\r\n\r\n        node.exit().remove();\r\n        this.$_nodes = temp;\r\n    }\r\n    applyNodeVisualData(nn) {\r\n        nn.width = 40;\r\n        nn.height = 40;\r\n        nn.name = nn.id;\r\n        return nn;\r\n    }\r\n    componentWillReceiveProps(props, state) {\r\n        if (props.graph) {\r\n            var { graph } = props;\r\n            var draw = true;\r\n            // d3.event.stopPropagation();\r\n            this.$force.stop();\r\n            if (graph.nodes && this.state && this.state.graph && this.state.graph.nodes) {\r\n                var removedNodes = this.state.graph.nodes.relativeCompliment(graph.nodes, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.nodes.indexOf(t);\r\n                });\r\n                this.state.graph.nodes.removeIndices(removedNodes);\r\n                var newNodes = graph.nodes.relativeCompliment(this.state.graph.nodes, (x, y) => x === y.id);\r\n                newNodes.map(nn => {\r\n                    this.state.graph.nodes.push(\r\n                        this.applyNodeVisualData(GraphMethods.duplicateNode(graph.nodeLib[nn]))\r\n                    );\r\n                });\r\n\r\n                if (props.selectedNodes) {\r\n                    this.state.graph.nodes.map(nn => {\r\n                        nn.selected = !!props.selectedNodes.find(t => t == nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.nodes.map(nn => {\r\n                    var nl = graph.nodeLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                })\r\n\r\n                draw = true;\r\n            }\r\n            if (graph.links && this.state && this.state.graph && this.state.graph.links) {\r\n                let removedLinks = this.state.graph.links.relativeCompliment(graph.links, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.links.indexOf(t);\r\n                });\r\n                this.state.graph.links.removeIndices(removedLinks);\r\n                let newLinks = graph.links.relativeCompliment(this.state.graph.links, (x, y) => x === y.id);\r\n                newLinks.map(nn => {\r\n                    this.state.graph.links.push(\r\n                        (duplicateLink(graph.linkLib[nn], this.state.graph.nodes))\r\n                    );\r\n                });\r\n                if (props.selectedLinks) {\r\n                    this.state.graph.links.map(nn => {\r\n                        nn.selected = !!props.selectedLinks.find(t => t.id === nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.links.map(nn => {\r\n                    let nl = graph.linkLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                });\r\n                draw = true;\r\n            }\r\n\r\n            if (graph.groups && this.state && this.state.graph && this.state.graph.groups) {\r\n                let graph_groups = graph.groups.filter(x => graph.groupLib[x].leaves || graph.groupLib[x].groups);\r\n                let removedGroups = this.state.graph.groups.relativeCompliment(graph_groups, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.groups.indexOf(t);\r\n                });\r\n                this.state.graph.groups.removeIndices(removedGroups);\r\n                let newGroups = graph_groups\r\n                    .relativeCompliment(this.state.graph.groups, (x, y) => x === y.id)\r\n                    .filter(x => graph.groupLib[x] && (graph.groupLib[x].leaves || graph.groupLib[x].groups));\r\n                newGroups.map(nn => {\r\n                    this.state.graph.groups.push(\r\n                        (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                    )\r\n                })\r\n                graph_groups.forEach(group => {\r\n                    let g = this.state.graph.groups.find(x => x.id === group);\r\n                    applyGroup(g, graph.groupLib[group], this.state.graph.groups, this.state.graph.nodes);\r\n                    // (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                })\r\n\r\n                // this.state.graph.groups.map(group => {\r\n                //     var _group = graph.groupLib[group.id];\r\n                // })\r\n            }\r\n\r\n\r\n            if (draw) {\r\n                this.draw();\r\n            }\r\n        }\r\n    }\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div id={this.state.id} className=\"mindmap\" style={{ minHeight: 946 }}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.findIndex(x => x.id === nn.source),\r\n        target: nodes.findIndex(x => x.id === nn.target)\r\n    };\r\n}\r\nfunction applyGroup(mindmapgroup, _group, groups, nodes) {\r\n    if (_group) {\r\n        if (_group.leaves && _group.leaves.length) {\r\n            mindmapgroup.leaves = (mindmapgroup.leaves || []);\r\n            mindmapgroup.leaves.length = 0\r\n            mindmapgroup.leaves.push(..._group.leaves.map(l => nodes.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.leaves\r\n        }\r\n\r\n        if (_group.groups && _group.groups.length) {\r\n            mindmapgroup.groups = (mindmapgroup.groups || []);\r\n            mindmapgroup.groups.length = 0;\r\n            mindmapgroup.groups.push(..._group.groups.map(l => groups.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.groups\r\n        }\r\n\r\n        // if (nn.leaves) {\r\n        //     let leaves = nn.leaves.map(l => nodes.findIndex(x => x.id === l));\r\n        //     temp.leaves = leaves;\r\n        // }\r\n        // if (groups && nn.groups) {\r\n        //     let groups = nn.groups.map(l => groups.findIndex(x => x.id === l));\r\n        //     temp.groups = groups;\r\n        // }\r\n    }\r\n}\r\nfunction duplicateGroup(nn, nodes, groups) {\r\n    let temp = {\r\n        ...nn,\r\n    };\r\n    delete temp.leaves;\r\n    delete temp.groups;\r\n    return temp;\r\n}","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport TabPane from './tabpane';\r\n\r\n\r\nexport default class ButtonList extends Component {\r\n    render() {\r\n        return (\r\n            <TabPane active={this.props.active}>\r\n                {(this.props.items || []).map((item) => {\r\n                    return <div\r\n                        key={`allowed-${item.id}`} className={`external-event ${this.props.isSelected(item) ? 'bg-red' : 'bg-green'}`}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis'\r\n                        }} onClick={() => {\r\n                            if (this.props.onClick) {\r\n                                this.props.onClick(item);\r\n                            }\r\n                        }} > {item.title}</div>;\r\n                })\r\n                }\r\n            </TabPane >)\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass ModelActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var is_parent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsParent);\r\n        var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n        var permission_nodes = UIA.NodesByType(state, UIA.NodeTypes.Permission).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.IsAgent}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsAgent] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {is_agent ? (<SelectInput\r\n                        label={Titles.UserModel}\r\n                        options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                            return {\r\n                                value: node.id,\r\n                                title: UIA.GetNodeTitle(node)\r\n                            }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIUser],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.UserLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIUser,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.UserLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIUser] : ''} />) : null}\r\n                    <CheckBox\r\n                        label={Titles.IsUser}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsUser] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsUser,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.ManyToManyNexus}\r\n                        title={Titles.ManyToManyNexusDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {many_to_many_enabled ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.ManyToManyNexusModel}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    linkType: UIA.LinkProperties.ManyToManyLink.type\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                </FormControl>) : null}\r\n\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PROPERTY_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.PropertyLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddProperty} description={Titles.AddPropertyDescription} />\r\n                </ControlSideBarMenu>\r\n                {is_agent ? (<SelectInput\r\n                    label={Titles.PermissionType}\r\n                    options={permission_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.PermissionLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.IsParent}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsParent] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsParent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {is_parent ? (<SelectInput\r\n                    label={Titles.ParentTo}\r\n                    options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                        return {\r\n                            value: node.id,\r\n                            title: UIA.GetNodeTitle(node)\r\n                        }\r\n                    })}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                            source: id,\r\n                            linkType: UIA.LinkProperties.ParentLink.type\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIChoiceNode,\r\n                            id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.ParentLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {is_agent ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PERMISSION_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.PermissionLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddPermission} description={Titles.AddPermissionDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, HTTP_METHODS } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass FunctionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Function);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var agent_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).filter(x => UIA.GetNodeProp(x, UIA.NodeProperties.IsAgent)).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var function_types = Object.keys(Functions).map(funcKey => {\r\n            return {\r\n                title: Functions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                  {currentNode ? (<SelectInput\r\n                    label={Titles.AgentOperator}\r\n                    options={agent_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n              \r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.CustomFunction}\r\n                    title={Titles.CustomFunctionDescription}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseScopeGraph] : ''}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseScopeGraph,\r\n                            id: currentNode.id,\r\n                            value: value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.APPLY_FUNCTION_CONSTRAINTS, {\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PARAMETER_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddParameter} description={Titles.AddParameterDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_FUNCTION_OUTPUT_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddFunctionOutput} description={Titles.AddFunctionOutputDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(FunctionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\nclass PropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Property);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var show_dependent = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseUIDependsOn];;\r\n            var use_model_as_type = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseModelAsType);\r\n            var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n            var property_nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).filter(x => {\r\n                return x.id !== currentNode.id;\r\n            }).map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseDependentProperty}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIDependsOn] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIDependsOn,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_dependent ? (<SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        options={property_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIDependsOn,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIDependsOn] : ''} />) : null}\r\n                </FormControl>) : null}\r\n\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                </FormControl>) : null}\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.ManyToManyNexus}\r\n                        title={Titles.ManyToManyNexusDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.ManyToManyNexusType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }].filter(x => x));\r\n                        }} />\r\n                    {many_to_many_enabled ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).filter(x => UIA.GetNodeProp(x, NodeProperties.ManyToManyNexus)).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.ManyToManyNexus}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusType)} />) : null}\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseModelAsType}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseModelAsType] : ''}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UseModelAsType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.UIModelType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {!use_model_as_type ? (<SelectInput\r\n                        options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />) : null}\r\n                    {use_model_as_type ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyModelType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UIModelType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIModelType] : ''} />) : null}\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_ATTRIBUTE_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.AttributeLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddAttribute} description={Titles.AddAttributeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass AttributeFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Attribute);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var choice_nodes = UIA.NodesByType(state, UIA.NodeTypes.ChoiceList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var validation_nodes = UIA.NodesByType(state, UIA.NodeTypes.ValidationList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var show_choice = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UIAttributeType] == UIA.NodeAttributePropertyTypes.CHOICE;\r\n        var show_validations = UIA.Use(currentNode, UIA.NodeProperties.UseUIValidations);\r\n        var show_options = UIA.Use(currentNode, UIA.NodeProperties.UseUIOptions);\r\n        var show_extenions = UIA.Use(currentNode, UIA.NodeProperties.UseUIExtensionList);\r\n        var option_nodes = UIA.NodesByType(state, UIA.NodeTypes.OptionList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        \r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        title={Titles.UINameDescription}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.NodeAttributePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodeAttributePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />\r\n                    {show_choice ? (<SelectInput\r\n                        label={Titles.ChoiceTypes}\r\n                        options={choice_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceType] : ''} />) : null}\r\n                    {show_choice ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CHOICE_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddChoice}\r\n                                description={Titles.AddChoiceDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UISingular}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UISingular] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UISingular,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.UseUIValidations}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIValidations] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIValidations,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_validations ? (<SelectInput\r\n                        label={Titles.ValidationTypes}\r\n                        options={validation_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIValidationType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValdationLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />) : null}\r\n                    {show_validations ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_VALIDATION_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddValidationList}\r\n                                description={Titles.AddValidationListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UseUIOptions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIOptions] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIOptions,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_options ? (<SelectInput\r\n                        label={Titles.OptionsType}\r\n                        options={option_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />) : null}\r\n                    {show_options ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_OPTION_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseUIExtensions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIExtensionList] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIExtensionList,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                    {show_extenions ? (<SelectInput\r\n                        label={Titles.ExtensionTypes}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtensionList],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionList,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtensionList] : ''} />) : null}\r\n                    {show_extenions ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_EXTENSION_LIST_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddExtensionList}\r\n                                description={Titles.AddExtensionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(AttributeFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass NodeList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n\r\n        let nodeProperty = this.props.nodeProperty;\r\n        let currentNode = this.props.node;\r\n        if (!currentNode) {\r\n            return <div></div>\r\n        }\r\n        let linkType = this.props.linkType;\r\n        let items = this.props.items;\r\n        //  (UIA.GetNodeProp(currentNode, nodeProperty) || []).map(t => {\r\n        //     let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n        //     if (node) {\r\n        //         return {\r\n        //             title: UIA.GetNodeTitle(node),\r\n        //             id: node.id\r\n        //         }\r\n        //     }\r\n        // });\r\n        let { state } = this.props;\r\n\r\n        return <ButtonList active={true} isSelected={(item) => {\r\n            var types = UIA.GetNodeProp(currentNode, nodeProperty) || [];\r\n            if (types && types.some)\r\n                return item && types.some(x => x === item.id);\r\n        }}\r\n            items={items}\r\n            onClick={(item) => {\r\n                if (this.props.removeLink) {\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target: item.value,\r\n                        source: currentNode.id\r\n                    })\r\n                }\r\n                if (this.props.removeNode) {\r\n                    this.props.graphOperation(UIA.REMOVE_NODE, {\r\n                        id: item.value\r\n                    })\r\n                }\r\n            }} />\r\n    }\r\n}\r\nexport default UIConnect(NodeList)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport NodeList from './nodelist';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetManyToManyNodes, getPropertyNodes } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass PermissionMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Permission);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var permissions = currentNode ? { ...Methods, ...(currentNode.properties[UIA.NodeProperties.UIPermissions] || {}) } : null;\r\n        var model_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).toNodeSelect();\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var targetNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionTarget] : '';\r\n\r\n        var requestorNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionRequester] : '';\r\n        var propertyNodes = null;\r\n        if (targetNodeId) {\r\n            propertyNodes = getNodesByLinkType(graph, { id: targetNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            if (propertyNodes)\r\n                propertyNodes = propertyNodes.toNodeSelect()\r\n        }\r\n        var requestorPropertyNodes = null;\r\n        if (requestorNodeId) {\r\n            requestorPropertyNodes = getNodesByLinkType(graph, { id: requestorNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            requestorPropertyNodes = (requestorPropertyNodes || []).toNodeSelect();\r\n        }\r\n        let method_nodes = UIA.NodesByType(state, NodeTypes.Method).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        let currentRequester = UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionRequester);\r\n        let currentTarget = UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionTarget);\r\n        let manyToManyNodes = [];\r\n        if (currentRequester && currentTarget) {\r\n            manyToManyNodes = GetManyToManyNodes(graph, [currentRequester, currentTarget]);\r\n        }\r\n\r\n        let manyToManyNodeId = UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionManyToMany);\r\n        let manyToManyProperties = [];\r\n        if (manyToManyNodeId) {\r\n            manyToManyProperties = getPropertyNodes(graph, manyToManyNodeId).toNodeSelect();\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n                {/* <CheckBox label={Titles.MatchIds}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.MatchIds)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchIds,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />\r\n                <CheckBox label={Titles.ConnectionExists}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ConnectionExists)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ConnectionExists,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />\r\n                {\r\n                    currentNode ? (<SelectInput\r\n                        label={Titles.ManyToManyNexus}\r\n                        options={manyToManyNodes.toNodeSelect()}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.PermissionManyToMany],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.ManyToManyPermissionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.PermissionManyToMany,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ManyToManyPermissionLink }\r\n                            });\r\n                        }}\r\n                        value={manyToManyNodeId} />) : null\r\n                }\r\n                {\r\n                    manyToManyProperties && manyToManyProperties.length ? (<SelectInput\r\n                        label={Titles.PermissionDependsOnProperties}\r\n                        options={manyToManyProperties}\r\n                        onChange={(value) => {\r\n\r\n                            this.props.graphOperation(UIA.NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                links: [{\r\n                                    target: value,\r\n                                    linkProperties: {\r\n                                        mergeProperties: true,\r\n                                        properties: {\r\n                                            ...UIA.LinkProperties.ExistLink,\r\n                                            ...UIA.LinkProperties.PermissionDependencyPropertyManyToManyLink\r\n                                        }\r\n                                    }\r\n                                }],\r\n                                properties: {\r\n                                    [NodeProperties.UIText]: UIA.GetNodeProp(graph.nodeLib[value], NodeProperties.UIText),\r\n                                },\r\n                                groupProperties: {\r\n                                },\r\n                                linkProperties: {\r\n                                    mergeProperties: true,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.PermissionPropertyDependencyManyToManyLink\r\n                                    }\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={''} />) : null\r\n                }\r\n                {\r\n                    currentNode ? (<SelectInput\r\n                        label={Titles.AgentName}\r\n                        options={model_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.PermissionRequester],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.RequestorPermissionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.PermissionRequester,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.RequestorPermissionLink }\r\n                            });\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionRequester)} />) : null\r\n                }\r\n\r\n                {\r\n                    currentNode ? (<SelectInput\r\n                        label={Titles.TargetModel}\r\n                        options={model_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.PermissionTarget],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.AppliedPermissionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.PermissionTarget,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.AppliedPermissionLink }\r\n                            });\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionTarget)} />) : null\r\n                }\r\n                {\r\n                    currentNode ? <NodeList\r\n                        node={currentNode}\r\n                        removeLink={false}\r\n                        removeNode={true}\r\n                        linkType={UIA.LinkProperties.ManyToManyPermissionLink}\r\n                        nodeProperty={UIA.NodeProperties.PermissionManyToMany}\r\n                        items={getNodesByLinkType(graph, {\r\n                            id: currentNode.id,\r\n                            type: LinkType.PermissionPropertyDependency\r\n                        }).toNodeSelect()} /> : null\r\n                } */}\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ChoiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {/* <ControlSideBarMenuHeader title={Titles.ChoiceListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_CHOICE_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddChoiceItem}\r\n                        description={Titles.AddChoiceItemDescription} />\r\n                </ControlSideBarMenu> */}\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItemContainer extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                {this.props.title}\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        let agents = UIA.NodesByType(state, NodeTypes.Model).filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent)).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n\r\n        var input = currentNode ? (<SelectInput\r\n            label={Titles.Models}\r\n            options={nodes}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterModel),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterModel,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterModel)} />) : null;\r\n        var agentinput = currentNode ? (<SelectInput\r\n            label={Titles.Agents}\r\n            options={agents}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterAgent,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.AgentTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent)} />) : null;\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {input}\r\n                    {agentinput}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ValidationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.ValidationListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_VALIDATION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidationLinkItem\r\n                                }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddValidationItem}\r\n                        description={Titles.AddValidationItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass ValidationItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.ValidationRules).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.ValidationRules[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.ValidationType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />\r\n\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nclass ValidatorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.MethodF, UIA.NodeTypes.Function]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorFunction] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass OptionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.OptionListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_OPTION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.OptionItemLink }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddOptionItem}\r\n                        description={Titles.AddOptionItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createExecutor();\r\n                            executor = addValidatator(executor, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Executor,\r\n                                value: executor\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ExecutorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveExecutorPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport TextInput from './textinput';\r\nclass ConditionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Condition);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var conditionType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ConditionType);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var methods = currentNode ? GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }, {\r\n                type: LinkType.FunctionOperator,\r\n                direction: TARGET\r\n            }]\r\n        }) : [];\r\n        let ref2_properties = [];\r\n        let ref1_properties = [];\r\n        let matchRef = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        var model_options = [];\r\n        var functions = methods.map(x => UIA.GetNodeProp(x, NodeProperties.FunctionType)).filter(x => x);\r\n        if (ConditionFunctionSetups[conditionType] && ConditionFunctionSetups[conditionType].functions && functions && functions.length === 1) {\r\n            let { constraints } = ConditionFunctionSetups[conditionType].functions[functions[0]];\r\n            if (constraints) {\r\n                let methodProps = UIA.GetNodeProp(methods[0], NodeProperties.MethodProps);\r\n                model_options = Object.keys(constraints).filter(t => constraints[t].nodeTypes.indexOf(NodeTypes.Model) !== -1)\r\n                    .map(x => {\r\n                        if (methodProps && methodProps[x]) {\r\n                            return {\r\n                                title: `${UIA.GetNodeProp(GetNode(graph, methodProps[x]), NodeProperties.UIText) || x}(${x})`,\r\n                                value: x\r\n                            }\r\n                        }\r\n                        return {\r\n                            title: x,\r\n                            value: x\r\n                        }\r\n                    });\r\n\r\n                if (methodProps) {\r\n\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    if (temp.ref2) {\r\n                        ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n                    }\r\n                    if (temp.ref1) {\r\n                        ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <TextInput\r\n                    label={Titles.NodeLabel}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                    }} />\r\n                <SelectInput\r\n                    label={Titles.ConditionType}\r\n                    options={Object.keys(ConditionTypes).map(t => ({ title: t, value: ConditionTypes[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ConditionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={conditionType} />\r\n                {this.getMatchManyReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getEnumeration({\r\n                    conditionType,\r\n                    graph,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getMatchReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods,\r\n                    graph\r\n                })}\r\n            </TabPane>\r\n        );\r\n    }\r\n\r\n    getProperties(methodProps, temp, state, key = 'ref2') {\r\n        let refId = methodProps[temp[key]];\r\n        let properties = [];\r\n        let nodeProperties = GetLinkChain(state, {\r\n            id: refId,\r\n            links: [{\r\n                type: LinkType.PropertyLink,\r\n                direction: SOURCE\r\n            }]\r\n        });\r\n        if (nodeProperties) {\r\n            properties = nodeProperties.toNodeSelect();\r\n        }\r\n        return properties;\r\n    }\r\n    getEnumeration(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            graph,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {};\r\n        if (conditionType !== ConditionTypes.InEnumerable) {\r\n            return [];\r\n        }\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var permissionNode = GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }]\r\n        })[0]\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {\r\n            ref1: GetNodeProp(permissionNode, UIA.NodeProperties.PermissionRequester)\r\n        };\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        var enumeration = temp && temp[UIA.NodeProperties.Enumeration] ? temp[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (temp && temp[UIA.NodeProperties.AllowedEnumValues] ? temp[UIA.NodeProperties.AllowedEnumValues] : []);\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).toNodeSelect();\r\n        return [\r\n            (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.EnumerationReference,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ),\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    temp.ref1Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />,\r\n            currentNode ? (<SelectInput\r\n                label={Titles.Enumeration}\r\n                options={enumeration_nodes}\r\n                key={`${currentNode.id}-enum`}\r\n                onChange={(value) => {\r\n                    var id = currentNode.id;\r\n                    let target = temp[UIA.NodeProperties.Enumeration] || '';\r\n                    temp[UIA.NodeProperties.Enumeration] = value;\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target,\r\n                        source: id,\r\n                        linkType: UIA.LinkProperties.EnumerationReferenceLink.type\r\n                    })\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id,\r\n                        value: temp\r\n                    });\r\n                    this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                        target: value,\r\n                        source: id,\r\n                        properties: { ...UIA.LinkProperties.EnumerationReferenceLink }\r\n                    });\r\n                }}\r\n                value={temp[UIA.NodeProperties.Enumeration] || ''} />) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-allowed-enum-title`} title={Titles.AllowedEnums} />,\r\n            allowed && allowed.length ? allowed.map((_enum) => {\r\n                return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed].filter(x => x !== _enum);\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-disalloweditem-title`} title={Titles.DisallowedEnums} />,\r\n            disallowed && disallowed.length ? disallowed.map((_enum) => {\r\n                return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed, _enum].unique();\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null\r\n        ]\r\n    }\r\n\r\n    getMatchManyReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ) : null,\r\n            matchRef.ref1 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref1UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref1UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && !temp.ref1UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref1_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref1Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1Property} />\r\n            ) : null,\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref2 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref2UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref2UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref2 && !temp.ref2UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref2_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref2Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2Property} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.ManyToManyNexus}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp[ConditionTypeParameters.RefManyToMany] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef[ConditionTypeParameters.RefManyToMany]} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.ManyToManyExists}\r\n                    value={matchRef.refManyToManyExists}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyExists = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={refManyToMany_properties}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyProperty = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.refManyToManyProperty} />\r\n            ) : null,\r\n            matchRef.refManyToManyProperty && matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (<SelectInput\r\n                title={Titles.Condition}\r\n                label={Titles.Condition}\r\n                options={[...Object.keys(ConditionTypeOptions)].map(t => ({ title: t, value: t }))}\r\n                value={matchRef.refManyToManyCondition}\r\n                onChange={(value) => {\r\n                    temp.refManyToManyCondition = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                        id: currentNode.id,\r\n                        value\r\n                    });\r\n                }} />) : null\r\n        ].filter((x) => x).map((x, index) => {\r\n\r\n            return x;\r\n        });\r\n    }\r\n\r\n    getMatchReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        if (conditionType !== ConditionTypes.MatchReference) {\r\n            return null;\r\n        }\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var propertyType = UIA.NodeProperties.MatchReference;\r\n\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [(\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1} />\r\n        ),\r\n        matchRef.ref1 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref1UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref1 && !temp.ref1UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp[ConditionTypeParameters.Ref1Property] = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />\r\n        ) : null,\r\n        (\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2} />\r\n        ),\r\n        matchRef.ref2 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref2UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref2 && !temp.ref2UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref2_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2Property} />\r\n        ) : null\r\n        // matchRef.ref1 && matchRef.ref2 ? (\r\n        //     <SelectInput\r\n        //         label={Titles.ManyToManyNexus}\r\n        //         options={model_options}\r\n        //         onChange={(value) => {\r\n        //             var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        //             temp[ConditionTypeParameters.RefManyToMany] = value;\r\n        //             this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n        //                 prop: propertyType,\r\n        //                 id: currentNode.id,\r\n        //                 value: temp\r\n        //             });\r\n        //         }}\r\n        //         value={matchRef[ConditionTypeParameters.RefManyToMany]} />\r\n        // ) : null,\r\n        // matchRef.ref1 && matchRef.ref2 ? (\r\n        //     <SelectInput\r\n        //         label={Titles.Property}\r\n        //         options={refManyToMany_properties}\r\n        //         onChange={(value) => {\r\n        //             var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        //             temp.refManyToManyProperty = value;\r\n        //             this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n        //                 prop: propertyType,\r\n        //                 id: currentNode.id,\r\n        //                 value: temp\r\n        //             });\r\n        //         }}\r\n        //         value={matchRef.refManyToManyProperty} />\r\n        // ) : null,\r\n        // matchRef.refManyToManyProperty && matchRef.ref1 && matchRef.ref2 ? (<SelectInput\r\n        //     title={Titles.Condition}\r\n        //     label={Titles.Condition}\r\n        //     options={[...Object.keys(ConditionTypeOptions)].map(t => ({ title: t, value: t }))}\r\n        //     value={matchRef.refManyToManyCondition}\r\n        //     onChange={(value) => {\r\n        //         var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        //         temp.refManyToManyCondition = value;\r\n        //         this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n        //             prop: propertyType,\r\n        //             id: currentNode.id,\r\n        //             value: temp\r\n        //         });\r\n        //    }} />) : null\r\n        ].filter(x => x)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ConditionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SelectInput from './selectinput';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { getNodeLinks, getNodesLinkedFrom } from '../methods/graph_methods';\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\nimport { FunctionConstraintKeys } from '../constants/functiontypes';\r\nclass ParameterActivityMenu extends Component {\r\n    mustBeModel(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsModel]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeProperty(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsProperty]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeFunction(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsFunction]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Parameter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var linkedNodes = [];\r\n        var nodes = [];\r\n        if (currentNode && active) {\r\n            linkedNodes = getNodesLinkedFrom(UIA.GetCurrentGraph(state), { id: currentNode.id });\r\n            var musBeModel = this.mustBeModel(currentNode);\r\n            if (musBeModel) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeProperty(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeFunction(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Function).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode && linkedNodes.length === 0 ? (<SelectInput\r\n                    label={Titles.ParameterType}\r\n                    options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                        return {\r\n                            value: UIA.NodePropertyTypes[x],\r\n                            title: x\r\n                        }\r\n                    })}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.CodePropertyType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodePropertyType] : ''} />) : null}\r\n\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.ChoiceTypes}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIChoiceNode,\r\n                            id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ParameterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass OptionItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var show_custom = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseCustomUIOption];\r\n\r\n        var custom_options = UIA.NodesByType(state, UIA.NodeTypes.OptionCustom).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseCustomOption}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseCustomUIOption] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseCustomUIOption,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_custom ? (<SelectInput\r\n                        options={custom_options}\r\n                        label={Titles.OptionsType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionTypeCustom,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionCustomLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom] : ''} />) : (<SelectInput\r\n                            options={Object.keys(UIA.OptionsTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                return {\r\n                                    value: UIA.OptionsTypes[x],\r\n                                    title: x\r\n                                }\r\n                            })}\r\n                            label={Titles.OptionsType}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIOptionType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />)}\r\n                    {show_custom ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CUSTOM_OPTION, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nexport default class EnumerationEditMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput onClick={() => {\r\n                    if (this.props.onComplete) {\r\n                        this.props.onComplete(this.state.value);\r\n                        this.setState({ value: '' })\r\n                    }\r\n                }} value={this.state.value} onChange={(value) => {\r\n                    this.setState({ value })\r\n                }} inputgroup={true} placeholder={Titles.Enumeration} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum] = !item.enumeration[_enum];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (old_one) {\r\n                                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                        target: old_one,\r\n                                        source: id,\r\n                                    });\r\n                                }\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Executor,\r\n                                    value: validator\r\n                                })\r\n                                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.ExecutorModelItemLink,\r\n                                        ...createEventProp(LinkEvents.Remove, {\r\n                                            property: this.props.property,\r\n                                            validator: this.props.validator,\r\n                                            function: 'OnRemoveExecutorItemPropConnection',\r\n                                            node: item.node\r\n                                        })\r\n                                    }\r\n                                });\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, ExecutorUI } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, removeValidator, removeValidatorValidation, uuidv4 } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType || UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, this.props.modelKey || UIA.NodeProperties.ExecutorModel)) {\r\n\r\n            executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor);\r\n        }\r\n        let _ui = this.props.ui || ExecutorUI;\r\n        let propertyExecutors = <div></div>;\r\n        if (executor && executor.properties) {\r\n            propertyExecutors = Object.keys(executor.properties).map(key => {\r\n                let _validates = executor.properties[key];\r\n                let visualKey = `ExecutorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n\r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v]\r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ExecutorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(_ui).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(executorUI => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${executorUI}-afjlskf-asfd`}\r\n                            title={executorUI}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n                                executor = addValidatator(executor, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: executorUI,\r\n                                        ..._ui[executorUI]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                    value: executor\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveExecution} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedExecutors}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-executions`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectExecution}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectexecution`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyExecutors = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyExecutors}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyExecutors\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass ExecutorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(Methods).map(t => ({ title: t, value: t }))}\r\n                        label={Titles.Methods}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunctionType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunctionType] : ''} />\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunction] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = [];\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let visualKey = `ValidatorPropertyMenu${key}-${currentNode.id}`;\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                            validator = addValidatator(validator, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Validator,\r\n                                value: validator\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidatorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveValidationPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum] = !item.enumeration[_enum];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (old_one) {\r\n                                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                        target: old_one,\r\n                                        source: id,\r\n                                    });\r\n                                }\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.ValidatorModelItemLink,\r\n                                        ...createEventProp(LinkEvents.Remove, {\r\n                                            property: this.props.property,\r\n                                            validator: this.props.validator,\r\n                                            function: 'OnRemoveValidationItemPropConnection',\r\n                                            node: item.node\r\n                                        })\r\n                                    }\r\n                                });\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ValidatorItem from './validatoritem';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, ValidationUI } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, removeValidator, removeValidatorValidation, uuidv4 } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = <div></div>;\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let _validates = validator.properties[key];\r\n                let visualKey = `ValidatorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n \r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v] \r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: NodeProperties.Validator,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ValidatorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(ValidationUI).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(valiationUi => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${valiationUi}-afjlskf-asfd`}\r\n                            title={valiationUi}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                validator = addValidatator(validator, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: valiationUi,\r\n                                        ...ValidationUI[valiationUi]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveValidation} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedValidations}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-validations`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectValidation}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectvalidation`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyValidations\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport SelectInput from './selectinput';\r\nclass ExtensionListActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionTypeList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\r\n        var extentiontypes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={extentiontypes}\r\n                        label={Titles.ExtensionOptions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ExtensionListTypeActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_EXTENTION_NODE, {\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddExtensionNode}\r\n                        description={Titles.AddExtensionNodeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionListActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\nimport SidebarButton from './sidebarbutton';\r\n\r\nclass PermissionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Permission);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var permissions = currentNode ? { ...Methods, ...(currentNode.properties[UIA.NodeProperties.UIPermissions] || {}) } : null;\r\n        var model_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var targetNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionTarget] : '';\r\n\r\n        var requestorNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionRequester] : '';\r\n        var propertyNodes = null;\r\n        if (targetNodeId) {\r\n            propertyNodes = getNodesByLinkType(graph, { id: targetNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            if (propertyNodes)\r\n                propertyNodes = propertyNodes.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                })\r\n        }\r\n        var requestorPropertyNodes = null;\r\n        if (requestorNodeId) {\r\n            requestorPropertyNodes = getNodesByLinkType(graph, { id: requestorNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            requestorPropertyNodes = requestorPropertyNodes.map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionAttributes} />\r\n                {currentNode ? (<CheckBox\r\n                    title={Titles.OwnedResourcesDescription}\r\n                    label={Titles.OwnedResources}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsOwned]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsOwned,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                <ControlSideBarMenuHeader title={Titles.PermissionActions} />\r\n                {\r\n                    permissions ? (<FormControl>{(Object.keys(permissions).map(key => {\r\n                        return (<CheckBox key={`permissions-${key}`}\r\n                            label={Titles.Permissions[key]}\r\n                            value={permissions[key]}\r\n                            onChange={(value) => {\r\n                                permissions[key] = value;\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIPermissions,\r\n                                    id: currentNode.id,\r\n                                    value: {\r\n                                        ...permissions\r\n                                    }\r\n                                });\r\n                            }} />);\r\n                    }))}</FormControl>) : null\r\n                }\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    this.props.graphOperation(UIA.NEW_CONDITION_NODE, {\r\n                        parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                        groupProperties: {\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.ConditionLink }\r\n                        }\r\n                    });\r\n                }}>{Titles.AddCondition}</button>\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nclass ReferenceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = !!(UIA.Application(state, UIA.GRAPH_SCOPE) || []).length;\r\n        var referencable_nodes = (UIA.NodesByType(state, NodeTypes.Model, { useRoot: true }) || []).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.AddReference}\r\n                        options={referencable_nodes}\r\n                        onChange={(id) => {\r\n                            var node = UIA.GetNodeFromRoot(state, id);\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.ADD_NEW_REFERENCE_NODE,\r\n                                options: {\r\n                                    node,\r\n                                    rootNode: UIA.GetRootGraph(state)\r\n                                }\r\n                            }])\r\n                            // this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            //     target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                            //     source: id\r\n                            // })\r\n                            // this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            //     prop: UIA.NodeProperties.UIDependsOn,\r\n                            //     id,\r\n                            //     value\r\n                            // });\r\n                            // this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            //     target: value,\r\n                            //     source: id,\r\n                            //     properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            // });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ReferenceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as UIA from '../actions/uiactions';\r\n\r\nexport default class NavBarButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: UIA.GUID()\r\n        }\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    menuItems() {\r\n        var result = [];\r\n        var { menuItems } = this.props;\r\n        if (menuItems) {\r\n            menuItems.map((mi, index) => {\r\n                if (mi.onClick && mi.icon) {\r\n                    result.push((\r\n                        <a key={`goo-menu-${this.state.id}-icon-index-${index}`} title={mi.title} className=\"menu-item\" onClick={mi.onClick} style={{ pointerEvents: 'all' }}> <i className={mi.icon}></i> </a>\r\n                    ));\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        if (!this.props.visible) {\r\n            return <div></div>\r\n        }\r\n        var menuItems = this.menuItems();\r\n        return (\r\n            <div className=\"goo-menu container\" style={{\r\n                position: 'fixed',\r\n                transition: 'all 200ms',\r\n                top: this.props.top || 0,\r\n                left: this.props.left || 0\r\n            }}>\r\n                <nav className=\"menu\" style={{ pointerEvents: 'none' }}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={() => {\r\n                            if (this.props.onToggle) {\r\n                                this.props.onToggle();\r\n                            }\r\n                        }}\r\n                        checked={this.props.open}\r\n                        style={{ pointerEvents: 'all' }}\r\n                        href=\"#\" className=\"menu-open\"\r\n                        id={`${this.state.id}`} />\r\n                    <label className=\"menu-open-button\" htmlFor={`${this.state.id}`} style={{ pointerEvents: 'all' }}>\r\n                        <span className=\"hamburger hamburger-1\"></span>\r\n                        <span className=\"hamburger hamburger-2\"></span>\r\n                        <span className=\"hamburger hamburger-3\"></span>\r\n                    </label>\r\n                    {menuItems}\r\n                    {/* <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-bar-chart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-plus\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-heart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-envelope\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-cog\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-ellipsis-h\"></i> </a> */}\r\n                </nav>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport class GooMenuSVG extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'none' }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n                    <defs>\r\n                        <filter id=\"shadowed-goo\">\r\n\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feGaussianBlur in=\"goo\" stdDeviation=\"3\" result=\"shadow\" />\r\n                            <feColorMatrix in=\"shadow\" mode=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 -0.2\" result=\"shadow\" />\r\n                            <feOffset in=\"shadow\" dx=\"1\" dy=\"1\" result=\"shadow\" />\r\n                            <feComposite in2=\"shadow\" in=\"goo\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                        <filter id=\"goo\">\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                    </defs>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Box extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title() {\r\n        return this.props.title || '{title}';\r\n    }\r\n    primary() {\r\n        return this.props.primary ? 'box-primary' : '';\r\n    }\r\n    render() {\r\n        var style = {};\r\n        if (this.props.maxheight) {\r\n            style.maxHeight = `${this.props.maxheight}px`;\r\n            style.overflowY = 'scroll';\r\n        }\r\n        return (\r\n            <div className={`box ${this.primary()}`}>\r\n                <div className=\"box-header with-border\">\r\n                    <h3 className=\"box-title\">{this.title()}</h3>\r\n                </div>\r\n                <div className=\"box-body\" style={{ ...style }}>\r\n                    {this.props.children}\r\n                </div>\r\n                <div className=\"box-footer\">\r\n                    {this.props.footer}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport Box from './box';\r\nclass ChoiceListItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceListItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let properties = [];\r\n        if (currentNode) {\r\n            let model = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel);\r\n            properties = (getNodesByLinkType(graph, {\r\n                id: model,\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }) || []).map(t => {\r\n                return (<CheckBox\r\n                    key={`checkbox-${t.id}`}\r\n                    label={UIA.GetNodeTitle(t)}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties)[t.id] : ''}\r\n                    onChange={(value) => {\r\n                        let fprops = UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) || {};\r\n                        fprops[t.id] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FilterPropreties,\r\n                            id: currentNode.id,\r\n                            value: fprops\r\n                        });\r\n                    }} />)\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {properties}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Slider extends Component {\r\n    min() {\r\n        return this.props.min || \"1\";\r\n    }\r\n    max() {\r\n        return this.props.max || \"100\";\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"slidecontainer\">\r\n                <input type=\"range\" min={this.min()} onChange={(evt) => {\r\n                    if (this.props.onChange && !isNaN(evt.target.value)) {\r\n                        this.props.onChange(parseFloat(evt.target.value));\r\n                    }\r\n                }} max={this.max()} value={this.value()} className=\"slider\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContent extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-content`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className=\"user-footer\">\r\n                {this.props.children} \r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`nav-tabs-custom`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class EnumeratedTable extends Component {\r\n    render() {\r\n        var me = this;\r\n        var dataFunc = me.props.dataFunc || ((y) => y || '');\r\n        var rows = (me.props.data || []).map((x, xi) => {\r\n            return (<tr key={`${xi}-row`}>\r\n                {(me.props.columns || []).map((c, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell`}>{dataFunc(x[c.value], c.value, xi)}</td>)\r\n                })\r\n                }\r\n                {(me.props.columnButtons || []).map((fx, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell-btn`}>{fx(x, xi)}</td>)\r\n                })}\r\n            </tr>);\r\n        });\r\n        var headers = (me.props.columns || []).map((x, index) => {\r\n            return (<th key={`col-${index}`}>{x.title}</th>)\r\n        });\r\n\r\n        (me.props.columnButtons || []).map((fx, inde) => {\r\n            headers.push(<th key={`${inde}-cell-header`}></th>)\r\n        })\r\n        var ops = {};\r\n        ops.style = { maxHeight: this.props.maxHeight || 500, overflowY: 'auto' }\r\n        return (\r\n            <div {...ops}>\r\n                <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {headers}\r\n                        </tr>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport DropDownMenu from './dropdown';\r\nimport Box from './box';\r\nimport TabContent from './tabcontent';\r\nimport UserFooter from './userfooter';\r\nimport TabContainer from './tabcontainer';\r\nimport EnumeratedTable from './enumeratedtable';\r\n\r\nimport { createExtensionDefinition, defaultExtensionDefinitionType } from '../methods/graph_methods';\r\nconst EXTENSION_DEFINITION_MENU = 'EXTENSION_DEFINITION_MENU';\r\nconst EDITMODE = 'EDITMODE';\r\nclass ExtensionDefinitionMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            property: ''\r\n        }\r\n    }\r\n    form() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            if (def) {\r\n\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    editKey(k) {\r\n        return `${k}-edit`\r\n    }\r\n    tabKey(k) {\r\n        return `${k}-tabkey`;\r\n    }\r\n    footer() {\r\n        //\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active && currentNode) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            var addBtn = def && def.config.isEnumeration ? (<div className=\"pull-right\">\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    def.config.list = [...def.config.list, {}];\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                        id: currentNode.id,\r\n                        value: { ...def }\r\n                    });\r\n                }}>{Titles.Add}</button>\r\n            </div>) : null;\r\n            var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n            var btns = (<div className=\"pull-left\">\r\n                <div className=\"btn-group\">\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionDefinition)}\r\n                        type=\"button\"\r\n                        title={Titles.ExtensionDefinition}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-pencil-square\" /></button>\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionConfig)}\r\n                        type=\"button\" title={Titles.ExtensionConfig}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-book\" /></button>\r\n                    <button onClick={() => {\r\n                        if (!def) {\r\n                            def = createExtensionDefinition();\r\n                        }\r\n                        this.props.setVisual(tab_key, Titles.DependsOn);\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                            id: currentNode.id,\r\n                            value: def\r\n                        });\r\n                    }}\r\n                        type=\"button\" title={Titles.DependsOn}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-balance-scale\" /></button>\r\n                </div>\r\n                <div className=\"btn-group\">\r\n                    {UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? (<button onClick={() => {\r\n                        if (this.state.property) {\r\n                            if (!def) {\r\n                                def = createExtensionDefinition();\r\n                            }\r\n                            def.definition[this.state.property] = defaultExtensionDefinitionType();\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: def\r\n                            });\r\n\r\n                            this.setState({ property: '' });\r\n                        }\r\n                    }}\r\n                        type=\"button\" className=\"btn btn-default btn-flat\">{Titles.Add}</button>) : null}\r\n                </div>\r\n            </div>\r\n            )\r\n            return (<UserFooter>\r\n                {btns}\r\n                {addBtn}\r\n            </UserFooter>)\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var form = this.form();\r\n        var footer = this.footer();\r\n        var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n        var properties = currentNode ? UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        }) : [];\r\n        return (\r\n            <TabPane active={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                {!UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    {def ? <CheckBox\r\n                        label={Titles.Enumerable}\r\n                        value={def.config.isEnumeration}\r\n                        onChange={(value) => {\r\n                            def.config.isEnumeration = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, config: { ...def.config } }\r\n                            });\r\n                        }} /> : null}\r\n\r\n                    <TextInput\r\n                        value={this.state.property}\r\n                        label={Titles.Property}\r\n                        onChange={(val) => {\r\n                            this.setState({ property: val });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionConfig) ? (\r\n                    <EnumeratedTable columns={Object.keys(def.definition).map(key => {\r\n                        return { title: key, value: key }\r\n                    })}\r\n                        dataFunc={(x, key, index) => {\r\n                            return (<TextInput\r\n                                label={Titles.Value}\r\n                                value={x}\r\n                                onChange={(value) => {\r\n                                    if (def.config.isEnumeration) {\r\n                                        if (def.config && def.config.list && def.config.list[index]) {\r\n                                            def.config.list[index][key] = value;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (def.config && def.config.dictionary) {\r\n                                            def.config.dictionary[key] = value;\r\n                                        }\r\n                                    }\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def, config: { ...def.config, dictionary: { ...def.config.dictionary }, list: [...def.config.list] } }\r\n                                    });\r\n                                }}\r\n                            />)\r\n                        }}\r\n                        columnButtons={def.config.isEnumeration ? [(x, xi) => {\r\n                            return <div className=\"pull-right\"><button onClick={() => {\r\n                                if (def.config.isEnumeration) {\r\n                                    if (def.config && def.config.list && def.config.list[xi]) {\r\n                                        def.config.list = [...def.config.list.filter((a, i) => i !== xi)];\r\n                                    }\r\n                                    // delete def.definition[x.name];\r\n                                    // def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n                                }\r\n\r\n                            }} className=\"btn btn-block btn-default\"><i className=\"fa fa-trash\" /></button></div>\r\n                        }] : []}\r\n                        data={(def.config.isEnumeration ? def.config.list.map(obj => {\r\n                            return {\r\n                                ...obj\r\n                            }\r\n                        }) : ([{ ...def.config.dictionary }]))}\r\n                    />\r\n                ) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? <EnumeratedTable columns={[{ title: Titles.Name, value: 'name' }]}\r\n                    columnButtons={[(x) => {\r\n                        return <div className=\"pull-right\">\r\n                            <div class=\"btn-group\">\r\n                                <button title={Titles.KeyField} onClick={() => {\r\n                                    def.config = { ...def.config, keyField: x.name };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className={`btn   ${x.name === def.config.keyField ? 'btn-success' : 'btn-default'}`}><i className={`fa fa-anchor`} /></button>\r\n                                <button onClick={() => {\r\n                                    delete def.definition[x.name];\r\n                                    def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className=\"btn btn-default\">x</button>\r\n                            </div>\r\n                        </div>\r\n                    }]}\r\n                    data={Object.keys(def.definition).map(key => {\r\n                        return {\r\n                            name: key\r\n                        }\r\n                    })}\r\n                /> : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.DependsOn}\r\n                        title={Titles.DependsOnDescription}\r\n                        value={def.definition.dependsOn}\r\n                        onChange={(value) => {\r\n                            def.definition.dependsOn = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        title={Titles.DependentPropertyDescription}\r\n                        options={properties}\r\n                        value={def.definition.property}\r\n                        onChange={(value) => {\r\n                            def.definition.property = value;\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionDependencyLink }\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <TextInput\r\n                        label={Titles.MatchingValue}\r\n                        title={Titles.MatchingValueDescription}\r\n                        value={def.definition.match}\r\n                        onChange={(value) => {\r\n                            def.definition.match = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {footer}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionDefinitionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, HTTP_METHODS, MethodFunctions } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\n\r\nclass MethodActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var agent_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).filter(x => UIA.GetNodeProp(x, UIA.NodeProperties.IsAgent)).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var permission_nodes = UIA.NodesByType(state, UIA.NodeTypes.Permission).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var function_types = Object.keys(MethodFunctions).map(funcKey => {\r\n            return {\r\n                title: MethodFunctions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                {/* {currentNode ? (<SelectInput\r\n                    label={Titles.AgentOperator}\r\n                    options={agent_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.PermissionImpl}\r\n                    options={permission_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.PermissionImpl],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.PermissionImpl,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.PermissionLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionImpl] : ''} />) : null} */}\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_MODEL_ITEM_FILTER, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.ModelItemFilter }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddModelItemFilter} description={Titles.AddModelItemFilterDescription} />) : null}\r\n                    {/* {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_FUNCTION_OUTPUT_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddFunctionOutput} description={Titles.AddFunctionOutputDescription} />) : null} */}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass MethodPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var functionType = UIA.GetNodeProp(currentNode, NodeProperties.FunctionType);\r\n        let functionObject = MethodFunctions[functionType];\r\n        let methodparams = [];\r\n        if (functionObject && functionObject.constraints) {\r\n            methodparams = Object.values(functionObject.constraints).map(constraint => {\r\n                let nodes = UIA.NodesByType(state, constraint.nodeTypes).filter(node => {\r\n                    return !Object.keys(constraint).filter(x => x != 'key' && x !== 'nodeTypes')\r\n                        .find(x => UIA.GetNodeProp(node, x) !== constraint[x])\r\n                }).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n                return (<SelectInput\r\n                    key={constraint.key}\r\n                    label={constraint.key}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        let methodProps = UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) || {};\r\n                        let oldConnect = methodProps[constraint.key];\r\n                        methodProps[constraint.key] = value;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: oldConnect,\r\n                            source: id,\r\n                            linkType: UIA.LinkProperties.FunctionOperator.type\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodProps,\r\n                            id: currentNode.id,\r\n                            value: methodProps\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) ? UIA.GetNodeProp(currentNode, NodeProperties.MethodProps)[constraint.key] : ''} />);\r\n            })\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {methodparams}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst MAESTRO_DETAILS_MENU = 'MAESTRO_DETAILS_MENU';\r\n\r\nclass MaestroDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                active={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(MAESTRO_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-maestro-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewItem from './treeviewitem';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nconst NODE_MANAGEMENT_MENU = 'NODE_MANAGEMENT_MENU';\r\nconst NODE_MANAGEMENT = 'NODE_MANAGEMENT';\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let filter = (this.state.filter || '').toLowerCase();\r\n        let groups = UIA.GetNodes(state).filter(x => {\r\n            if (!filter) {\r\n                return false;\r\n            }\r\n            var str = this.toFilterString(x);\r\n            return str.indexOf(filter) !== -1;\r\n        }).groupBy(x => UIA.GetNodeProp(x, NodeProperties.NODEType));\r\n        let body = [];\r\n        body = Object.keys(groups).filter(group => groups[group].length).map((group, gi) => {\r\n            let groupKey = `NodeManagement-${group}`;\r\n            let groupNodes = groups[group].map((gn, gni) => {\r\n                return (\r\n                    <TreeViewMenu key={`node-${group}-${gi}-${gni}`}\r\n                        hideArrow={true}\r\n                        title={UIA.GetNodeProp(gn, NodeProperties.UIText)}\r\n                        icon={!UIA.GetNodeProp(gn, NodeProperties.Pinned) ? \"fa fa-circle-o\" : 'fa fa-check-circle-o'}\r\n                        toggle={() => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Pinned,\r\n                                id: gn.id,\r\n                                value: !UIA.GetNodeProp(gn, NodeProperties.Pinned)\r\n                            });\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            })\r\n            return (\r\n                <TreeViewMenu title={group} key={`node-${group}-${gi}`}\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    open={UIA.Visual(state, groupKey)}\r\n                    active={UIA.Visual(state, groupKey)}\r\n                    right={<span className=\"label label-primary \">{groups[group].length}</span>}\r\n                    toggle={() => {\r\n                        this.props.toggleVisual(groupKey)\r\n                    }}>\r\n                    {groupNodes}\r\n                </TreeViewMenu>\r\n            );\r\n        })\r\n        return (\r\n            <TreeViewMenu\r\n                title={`${Titles.Nodes} ${graph ? Object.keys(graph.visibleNodes || {}).length : ''}`}\r\n                icon={'fa fa-object-group'}\r\n                open={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                active={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(NODE_MANAGEMENT)\r\n                }}>\r\n\r\n                <TreeViewMenu\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    title={Titles.Menu}\r\n                    open={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    active={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    onClick={() => {\r\n                        this.props.toggleVisual(NODE_MANAGEMENT_MENU)\r\n                    }}>\r\n                    <div className=\"pull-left\">\r\n                        <div className=\"btn-group\">\r\n                            <button onClick={() => {\r\n                                this.props.graphOperation(UIA.GetNodes(state).filter(x => UIA.GetNodeProp(x, NodeProperties.Pinned)).map(node => {\r\n                                    return {\r\n                                        operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                        options: {\r\n                                            prop: UIA.NodeProperties.Pinned,\r\n                                            id: node.id,\r\n                                            value: false\r\n                                        }\r\n                                    }\r\n                                }));\r\n                            }}\r\n                                type=\"button\" title={Titles.ClearPinned}\r\n                                className=\"btn btn-default btn-flat\"><i className=\"fa fa-times\" /></button>\r\n                        </div>\r\n                    </div>\r\n                </TreeViewMenu>\r\n                <FormControl sidebarform={true}>\r\n                    <TextInput value={this.state.filter} onChange={(value) => {\r\n                        this.setState({ filter: value });\r\n                    }} inputgroup={true} placeholder={Titles.Filter} />\r\n                </FormControl>\r\n                {body}\r\n            </TreeViewMenu >\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode } from '../constants/nodetypes';\r\nclass CommonActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType)];\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextBox\r\n                        label={Titles.CodeName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodeName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.CodeName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <TextBox\r\n                        label={Titles.ValueName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValueName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValueName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <TextBox\r\n                        label={Titles.AgentName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.AgentName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.AgentName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CommonActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, GetLinkChain, GetLinkChainItem, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions, FunctionTypes, FunctionTemplateKeys } from '../constants/functiontypes';\r\n\r\nclass ModelFilterItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelItemFilter);\r\n        var propertyNodes = [];\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var methodNode = GetLinkChainItem(state, {\r\n                id: currentNode.id,\r\n                links: [{\r\n                    direction: TARGET,\r\n                    type: LinkType.ModelItemFilter\r\n                }]\r\n            });\r\n            var node = null;\r\n            var methodProps = UIA.GetMethodProps(methodNode);\r\n            if (methodProps) {\r\n                switch (UIA.GetFunctionType(methodNode)) {\r\n                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                        node = GetNode(graph, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                        break;\r\n                }\r\n            }\r\n            if (node) {\r\n                propertyNodes = GetLinkChain(state, {\r\n                    id: node.id,\r\n                    links: [{\r\n                        direction: SOURCE,\r\n                        type: LinkType.PropertyLink\r\n                    }]\r\n                }).toNodeSelect();\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.NodeLabel}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                        }} />\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let executor = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createExecutor();\r\n                            executor = addValidatator(executor, { id: value });\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: executor\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.ModelItemFilter,\r\n                                    value: node.id\r\n                                }\r\n                            }])\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ModelItemFilter,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveModelFilterPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass ModelRelationshipMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var hasLogicalChildren = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren);\r\n        var hasLogicalNieces = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalChildren}\r\n                        title={Titles.HasLogicalChildrenDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalChildren,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalChildren ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalChildrenTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalChildren ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalNieces}\r\n                        title={Titles.HasLogicalNiecesDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalNieces,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalNieces ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalNieceTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalNieces ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelRelationshipMenu)","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewItem from './treeviewitem';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport { uuidv4 } from '../methods/graph_methods';\r\n\r\nconst NODE_MANAGEMENT = 'NODE_MANAGEMENT';\r\nexport default class RadioButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: '',\r\n            id: uuidv4()\r\n        };\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let values = this.props.values || [];\r\n        return (\r\n            <div className=\"form-group\">\r\n                {values.map((val, index) => {\r\n                    let { value, title } = val;\r\n                    return (<div className=\"radio\" key={`${index}-radio-${this.state.id}`}>\r\n                        <label>\r\n                            <input type=\"radio\" name={this.state.id} id={this.state.id} value={this.props.value === value} onChange={() => {\r\n                                this.props.onChange(value);\r\n                            }} checked={this.props.value === value ? 'checked' : ''} />\r\n                            {title}\r\n                        </label>\r\n                    </div>);\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport FormControl from './formcontrol';\r\n\r\nimport RadioButton from './radiobutton';\r\nimport * as UIA from '../actions/uiactions';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport Box from './box';\r\nimport * as Titles from './titles';\r\n\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        if (!graph) {\r\n\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <Box title={Titles.Depth}>\r\n                <FormControl>\r\n                    <RadioButton value={graph.depth} onChange={(val) => {\r\n                        this.props.graphOperation([{ operation: UIA.SET_DEPTH, options: { depth: val } }]);\r\n                    }} values={[].interpolate(0, 7, x => ({ title: 'Depth  ' + x, value: x }))} />\r\n                </FormControl>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions, FunctionConstraintKeys } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\n\r\nclass MaestroActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Functions}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddFunction}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.FunctionLink\r\n                            }\r\n                        });\r\n\r\n                        var inputVariables = getNodesLinkedTo(graph, {\r\n                            id: value,\r\n                            constraints: {\r\n                                [FunctionConstraintKeys.IsInputVariable]: true\r\n                            }\r\n                        });\r\n\r\n                        inputVariables.map(inputVariable => {\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                source: inputVariable.id,\r\n                                target: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.FunctionVariable,\r\n                                    [LinkPropertyKeys.FUNCTION_ID]: value\r\n                                }\r\n                            });\r\n                        })\r\n                    }}\r\n                    value={''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst CONTROLLER_DETAILS_MENU = 'CONTROLLER_DETAILS_MENU';\r\n\r\nclass ControllerDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                active={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(CONTROLLER_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-controller-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, FunctionConstraintKeys, HTTP_METHODS } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys, NodeProperties, ExcludeDefaultNode } from '../constants/nodetypes';\r\n\r\nclass ControllerActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Controller);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, UIA.NodeTypes.Maestro).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Maestros}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddMaestros}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.MaestroLink\r\n                            }\r\n                        });\r\n                    }}\r\n                    value={''} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.CodeUser}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.CodeUser)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.CodeUser\r\n                        })\r\n                    }} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties } from '../constants/nodetypes';\r\n\r\nclass PermissionDependencyActivityMenu extends Component {\r\n    getTargetNodes(graph, currentNode) {\r\n        let targetPropertyNodes = [];\r\n        if (currentNode) {\r\n            targetPropertyNodes = getNodesByLinkType(graph, {\r\n                id: currentNode.id,\r\n                direction: SOURCE,\r\n                type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n            });\r\n            if (!targetPropertyNodes.length) {\r\n                targetPropertyNodes = getNodesByLinkType(graph, {\r\n                    id: currentNode.id,\r\n                    direction: SOURCE,\r\n                    type: LinkType.PermissionDependencyProperty\r\n                });\r\n            }\r\n        }\r\n        return targetPropertyNodes;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.PermissionDependency);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n\r\n        var extensionNodeId = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : '';\r\n        var ext_allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedExtensionValues] : []) || [];\r\n        var ext_disallowed = [];\r\n\r\n        if (extensionNodeId) {\r\n            var extensionNode = GetNode(graph, extensionNodeId);\r\n            if (extensionNode) {\r\n                var def = UIA.GetNodeProp(extensionNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n                if (def && def.config) {\r\n                    if (def.config.isEnumeration) {\r\n                        var extensionValues = def.config.list.map(t => {\r\n                            return t[def.config.keyField || Object.keys(t)[0]];\r\n                        })\r\n                        ext_allowed = ext_allowed.intersection(extensionValues);\r\n                        ext_disallowed = extensionValues.relativeCompliment(ext_allowed);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var enumeration = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedEnumValues] : []) || [];\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let targetPropertyNodes = this.getTargetNodes(graph, currentNode);\r\n        let targetNodeType = null;\r\n        let targetPropertyNode = null;\r\n        if (targetPropertyNodes.length) {\r\n            targetPropertyNode = targetPropertyNodes[0];\r\n            targetNodeType = UIA.GetNodeProp(targetPropertyNode, UIA.NodeProperties.UIAttributeType);\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionsDependencyAttribute} />\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN ? (<CheckBox\r\n                    title={Titles.UseEqualDescription}\r\n                    label={Titles.UseEqual}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEqual]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEqual,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN && UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseEqual) ? (<SelectInput\r\n                    title={Titles.IsEqualToDescription}\r\n                    label={Titles.IsEqualTo}\r\n                    options={['true', 'false'].map(t => ({ title: t, value: t }))}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsEqualTo]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsEqualTo,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.IncludedInListDescription}\r\n                    label={Titles.IncludedInList}\r\n                    value={currentNode.properties[UIA.NodeProperties.IncludedInList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IncludedInList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.ExcludedFromListDescription}\r\n                    label={Titles.ExcludedFromList}\r\n                    value={currentNode.properties[UIA.NodeProperties.ExcludedFromList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ExcludedFromList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseEnumeration}\r\n                    label={Titles.UseEnumeration}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEnumeration]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEnumeration,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseUIExtensions}\r\n                    label={Titles.UseUIExtensions}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseExtension]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && ext_allowed && ext_allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_allowed.map((_enum) => {\r\n                    return <div key={`ext_allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed].filter(x => x !== _enum))\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && ext_disallowed && ext_disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_disallowed.map((_enum) => {\r\n                    return <div key={`ext_disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed, _enum].unique())\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? (<SelectInput\r\n                        label={Titles.Extensions}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.ExtensionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />) : null\r\n                }\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? (<SelectInput\r\n                        label={Titles.Enumeration}\r\n                        options={enumeration_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.Enumeration],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.EnumerationLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Enumeration,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.EnumerationLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : ''} />) : null\r\n                }\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && allowed && allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? allowed.map((_enum) => {\r\n                    return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && disallowed && disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? disallowed.map((_enum) => {\r\n                    return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionDependencyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport DropDownMenu from './dropdown';\r\nimport DropDownMenuItem from './dropdownmenuitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst GRAPH_MENU = 'GRAPH_MENU';\r\nclass GraphMenu extends Component {\r\n    render() {\r\n        var me = this;\r\n        var { state } = me.props;\r\n        return (\r\n            <DropDownMenu icon={'fa fa-cart-plus'} open={UIA.Visual(state, GRAPH_MENU)} onClick={() => {\r\n                this.props.toggleVisual(GRAPH_MENU)\r\n            }}>\r\n                <DropDownMenuItem icon={\"fa fa-plus\"}\r\n                    title={Titles.AddNewSection}\r\n                    onClick={() => {\r\n                        this.props.addNewSubGraph();\r\n                    }}\r\n                    description={Titles.AddNewSectionDescription}></DropDownMenuItem>\r\n            </DropDownMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(GraphMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst SECTION_LIST = 'SECTION_LIST';\r\nclass SectionList extends Component {\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n        let sections = [];\r\n        let subGraphs = UIA.GetSubGraphs(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        if (subGraphs) {\r\n            subGraphs.map(sg => {\r\n                sections.push((\r\n                    <TreeViewItem\r\n                        key={sg.id}\r\n                        title={sg.title || Titles.Unknown}\r\n                        right={<span className=\"label label-primary pull-right\">{sg.nodes.length}</span>}\r\n                        onClick={() => {\r\n                            me.props.setApplication(UIA.GRAPH_SCOPE, [sg.id]);\r\n                        }} ></TreeViewItem>\r\n                ))\r\n            })\r\n        }\r\n        let body = sections;\r\n        if (rootGraph) {\r\n            body = (\r\n                <TreeViewMenu\r\n                    hideIcon={true}\r\n                    right={<span className=\"label label-primary pull-right\">{rootGraph.nodes.length}</span>}\r\n                    title={rootGraph.title || Titles.Unknown}\r\n                    hideArrow={true}\r\n                    open={true}\r\n                    active={true}\r\n                    onClick={() => {\r\n                        me.props.setApplication(UIA.GRAPH_SCOPE, null);\r\n                    }}>\r\n                    {sections}\r\n                </TreeViewMenu>)\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                title={Titles.Sections}\r\n                icon={'fa fa-cart-plus'}\r\n                open={UIA.Visual(state, SECTION_LIST)}\r\n                active={UIA.Visual(state, SECTION_LIST)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(SECTION_LIST)\r\n                }}>\r\n                {body}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SectionList);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nclass EnumerationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Enumeration);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n        return (\r\n            <TabPane active={active} >\r\n                <EnumerationEditMenu onComplete={(val) => {\r\n                    if (val) {\r\n                        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums, val].unique()\r\n                        });\r\n                    }\r\n                }\r\n                } />\r\n                {active && enums && enums.length ? enums.map((_enum) => {\r\n                    return <div className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums].filter(x => x !== _enum)\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(EnumerationActivityMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nclass SectionEdit extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        var section = UIA.GetCurrentScopedGraph(state);\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput value={section ? section.title : ''} onChange={(value) => {\r\n                    this.props.graphOperation(UIA.UPDATE_GRAPH_TITLE, { text: value });\r\n                }} inputgroup={true} placeholder={Titles.SectionEdit} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(SectionEdit)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nexport default class TopViewer extends Component {\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var style = {\r\n            position: 'relative',\r\n            width: '100%'\r\n        }\r\n        let active = this.active();\r\n        let height = 600;\r\n        return (\r\n            <div style={style}>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    transition: 'all 1s',\r\n                    pointerEvents: active ? 'all' : 'none',\r\n                    top: active ? 0 : '-1000px',\r\n                    backgroundColor: '#dd4b39d2'\r\n                }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export default {\n  \"hljs\": {\n    \"display\": \"block\",\n    \"overflowX\": \"auto\",\n    \"padding\": \"0.5em\",\n    \"color\": \"#000\",\n    \"background\": \"#f8f8ff\"\n  },\n  \"hljs-comment\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-quote\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-keyword\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-selector-tag\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-literal\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-subst\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-number\": {\n    \"color\": \"#40a070\"\n  },\n  \"hljs-string\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-doctag\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-selector-id\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-selector-class\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-section\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-type\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-params\": {\n    \"color\": \"#00f\"\n  },\n  \"hljs-title\": {\n    \"color\": \"#458\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-tag\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-name\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-attribute\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-template-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-regexp\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-link\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-symbol\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-bullet\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-built_in\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-builtin-name\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-meta\": {\n    \"color\": \"#999\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-deletion\": {\n    \"background\": \"#fdd\"\n  },\n  \"hljs-addition\": {\n    \"background\": \"#dfd\"\n  },\n  \"hljs-emphasis\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-strong\": {\n    \"fontWeight\": \"bold\"\n  }\n};","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded=\"true\">{this.title()}</a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tabs extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport TopViewer from './topviewer';\r\nimport Box from './box';\r\nimport SelectInput from './selectinput';\r\nimport { NodeTypes, NodeProperties, NameSpace, GeneratedTypes, GeneratedTypesMatch, GeneratedConstants, IdentityManagement } from '../constants/nodetypes';\r\nimport ModelGenerator from '../generators/modelgenerators';\r\nimport NamespaceGenerator from '../generators/namespacegenerator';\r\nimport ExtensionsGenerator from '../generators/extensiongenerator';\r\nimport ControllerGenerator from '../generators/controllergenerator';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport TextInput from './textinput';\r\nimport { GraphKeys } from '../methods/graph_methods';\r\n\r\nimport Tab from './tab';\r\nimport TabContainer from './tabcontainer';\r\nimport TabContent from './tabcontent';\r\nimport Tabs from './tabs';\r\nimport Generator from '../generators/generator';\r\nimport ButtonList from './buttonlist';\r\n\r\nconst MODEL_CODE = 'MODEL_CODE';\r\nconst SELECTED_CODE_TYPE = 'SELECTED_CODE_TYPE';\r\nconst CLASS_KEY = 'CLASS_KEY';\r\nconst CODE_VIEW_TAB = 'CODE_VIEW_TAB';\r\n\r\nclass CodeView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        let active = this.active();\r\n\r\n        let codeString = '';\r\n        let info = UIA.Visual(state, MODEL_CODE) || null;\r\n        let graphRoot = UIA.GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphKeys.NAMESPACE] : null;\r\n        let server_side_setup = graphRoot ? graphRoot[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n\r\n\r\n        let controllers = [];\r\n        let generatedContent = null;\r\n        if (state && graphRoot && active) {\r\n            var viewTab = UIA.Visual(state, CODE_VIEW_TAB);\r\n            var classKey = this.state[UIA.Visual(state, CODE_VIEW_TAB)];\r\n\r\n            var temp = Generator.generate({\r\n                type: viewTab,\r\n                key: classKey,\r\n                state\r\n            });\r\n            generatedContent = temp;\r\n\r\n            if (temp && temp[classKey]) {\r\n                codeString = temp[classKey].template;\r\n            }\r\n        }\r\n\r\n\r\n        var code_types = [\r\n            NodeTypes.Controller,\r\n            NodeTypes.Model,\r\n            NodeTypes.ExtensionType,\r\n            NodeTypes.Maestro,\r\n            ...Object.values(GeneratedTypes)\r\n        ];\r\n        let modelType = UIA.Visual(state, CODE_VIEW_TAB);\r\n        let models = [];\r\n        if (generatedContent) {\r\n            Object.keys(generatedContent).map(gcKey => {\r\n                models.push({\r\n                    id: gcKey,\r\n                    title: generatedContent[gcKey].name,\r\n                    value: generatedContent[gcKey].name\r\n                })\r\n            })\r\n        }\r\n\r\n        return (\r\n            <TopViewer active={active}>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <Box primary={true} title={Titles.Project}>\r\n                                <TextInput\r\n                                    onChange={(val) => {\r\n                                        this.props.setRootGraph(GraphKeys.NAMESPACE, val);\r\n                                        this.props.setAppsettingsAssemblyPrefixes(val);\r\n                                    }}\r\n                                    label={Titles.NameSpace}\r\n                                    value={namespace} />\r\n                                <SelectInput\r\n                                    label={Titles.ServerSideSetup}\r\n                                    options={Object.keys(IdentityManagement).map(t => {\r\n                                        return { title: t, value: IdentityManagement[t] };\r\n                                    })}\r\n                                    onChange={(value) => {\r\n                                        this.props.setRootGraph(GraphKeys.SERVER_SIDE_SETUP, value);\r\n                                    }}\r\n                                    value={server_side_setup} />\r\n                            </Box>\r\n                            <Box primary={true} title={Titles.CodeTypes}>\r\n                                <ButtonList active={true} isSelected={(item) => {\r\n                                    return item && this.state[UIA.Visual(state, CODE_VIEW_TAB)] === item.id;\r\n                                }}\r\n                                    items={models}\r\n                                    onClick={(item) => {\r\n                                        this.setState({\r\n                                            [UIA.Visual(state, CODE_VIEW_TAB)]: item.id\r\n                                        });\r\n                                    }} />\r\n                            </Box>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <TabContainer>\r\n                                <Tabs>\r\n                                    {code_types ? code_types.map(ct => {\r\n                                        return (<Tab key={ct} active={UIA.VisualEq(state, CODE_VIEW_TAB, ct)}\r\n                                            title={ct} onClick={() => {\r\n                                                this.props.setVisual(CODE_VIEW_TAB, ct)\r\n                                            }} />\r\n                                        );\r\n                                    }) : null}\r\n                                </Tabs>\r\n                            </TabContainer>\r\n                            <TabContent>\r\n                                <TabPane active={UIA.Visual(state, CODE_VIEW_TAB)}>\r\n                                    <Box title={Titles.Code} primary={true} maxheight={700}>\r\n                                        {codeString ? <SyntaxHighlighter language='csharp' style={docco}>{codeString}</SyntaxHighlighter> : null}\r\n                                    </Box>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </TopViewer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CodeView)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../constants/routes';\r\nimport { UIConnect } from '../utils/utils';\r\nimport DashboardLogo from './dashboardlogo';\r\nimport Header from './header';\r\nimport DashboardNavBar from './dashboardnavbar';\r\nimport SidebarToggle from './sidebartoggle';\r\nimport * as UIA from '../actions/uiactions';\r\nimport NavBarMenu from './navbarmenu';\r\nimport DropDownMenu from './dropdown';\r\nimport DropDownMenuItem from './dropdownmenuitem';\r\nimport MainSideBar from './mainsidebar';\r\nimport SideBarHeader from './sidebarheader';\r\nimport * as Titles from './titles';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport Content from './content';\r\nimport SideBar from './sidebar';\r\nimport SideBarTabs from './sidebartabs';\r\nimport SideBarTab from './sidebartab';\r\nimport ServiceActivityMenu from './serviceactivitymenu';\r\nimport SideBarContent from './sidebarcontent';\r\nimport NavBarButton from './navbarbutton';\r\nimport CheckBox from './checkbox';\r\nimport * as VC from '../constants/visual';\r\nimport MindMap from './mindmap';\r\nimport ModelActivityMenu from './modelactivitymenu';\r\nimport FunctionActivityMenu from './functionactivitymenu';\r\nimport PropertyActivityMenu from './propertyactivitymenu';\r\nimport AttributeFormControl from './attributeformcontrol';\r\nimport PermissionMenu from './permissionmenu';\r\nimport ChoiceActivityMenu from './choiceactivitymenu';\r\nimport TreeViewItemContainer from './treeviewitemcontainer';\r\nimport ModelFilterActivityMenu from './modelfilteractivitymenu';\r\nimport ValidationActivityMenu from './validationactivitymenu';\r\nimport ValidationItemFormControl from './validationitemactivitymenu';\r\nimport ValidatorActivityMenu from './validatoractivitymenu';\r\nimport OptionActivityMenu from './optionactivitymenu';\r\nimport ExecutorPropertyMenu from './executorpropertymenu';\r\nimport ConditionActivityMenu from './conditionactivitymenu';\r\nimport ParameterActivityMenu from './parameteractivitymenu';\r\nimport OptionItemFormControl from './optionitemformcontrol';\r\nimport ExecutorPropertyActivityMenu from './executorpropertyactivitymenu';\r\nimport ExecutorActivityMenu from './executoractivitymenu';\r\nimport ValidatorPropertyMenu from './validatorpropertymenu';\r\nimport ValidatorPropertyActivityMenu from './validatorpropertyactivitymenu';\r\nimport ExtensionListActivityMenu from './ExtensionListActivityMenu';\r\nimport PermissionActivityMenu from './permissionsactivitymenu';\r\nimport ReferenceActivityMenu from './referenceactivitymenu';\r\nimport { GooMenuSVG } from './goomenu';\r\nimport ChoiceListItemActivityMenu from './choicelistitemactivitymenu';\r\nimport GooMenu from './goomenu';\r\nimport FormControl from './formcontrol';\r\nimport ModelFilterMenu from './modelfiltermenu';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport Slider from './slider';\r\nimport ExtensionDefinitionMenu from './extensiondefinitionmenu';\r\nimport MethodActivityMenu from './methodactivitymenu';\r\nimport MethodPropertyMenu from './methodpropertymenu';\r\nimport MaestroDetailsMenu from './maestrodetailsmenu';\r\nimport NodeManagement from './nodemanagement';\r\nimport CommonActivityMenu from './commonactivitymenu';\r\nimport ModelFilterItemActivityMenu from './modelfilteritemactivitymenu';\r\nimport ModelRelationshipMenu from './modelrelationshipmenu';\r\nimport DepthChoice from './depthchoice';\r\nimport MaestroActivityMenu from './maestroactivitymenu';\r\nimport SidebarButton from './sidebarbutton';\r\nimport ControllerDetailsMenu from './controllerdetailsmenu';\r\nimport ControllerActivityMenu from './controlleractivitymenu';\r\nimport PermissionDependencyActivityMenu from './permissionsdependentactivitymenu';\r\nimport GraphMenu from './graphmenu';\r\nimport SectionList from './sectionlist';\r\nimport EnumerationActivityMenu from './enumerationactivitymenu'\r\nimport SectionEdit from './sectionedit'; import { NotSelectableNodeTypes, NodeProperties, NodeTypes, LinkType, LinkProperties, ExcludeDefaultNode, FilterUI } from '../constants/nodetypes';\r\nimport CodeView from './codeview';\r\nimport { findLinkInstance, getLinkInstance } from '../methods/graph_methods';\r\nconst SIDE_PANEL_OPEN = 'side-panel-open';\r\nconst NODE_MENU = 'NODE_MENU';\r\nconst CONNECTING_NODE = 'CONNECTING_NODE';\r\nconst LINK_DISTANCE = 'LINK_DISTANCE';\r\nconst MAIN_CONTENT = 'MAIN_CONTENT';\r\nconst MIND_MAP = 'MIND_MAP';\r\nconst CODE_VIEW = 'CODE_VIEW';\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setState();\r\n    }\r\n    minified() {\r\n        var { state } = this.props;\r\n        return UIA.GetC(state, UIA.VISUAL, UIA.DASHBOARD_MENU) ? 'sidebar-collapse' : '';\r\n    }\r\n    nodeSelectionMenuItems() {\r\n        var result = [];\r\n        var { state } = this.props;\r\n        if (UIA.Visual(state, UIA.SELECTED_NODE)) {\r\n            var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n            switch (UIA.GetNodeProp(currentNode, NodeProperties.NODEType)) {\r\n                case NodeTypes.Method:\r\n                case NodeTypes.Action:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnScreenLink);\r\n                        },\r\n                        icon: 'fa fa-download',\r\n                        title: Titles.OnLoad\r\n                    }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnSuccessLink);\r\n                            },\r\n                            icon: 'fa  fa-trophy',\r\n                            title: Titles.OnSuccessLink\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnItemSelection);\r\n                            },\r\n                            icon: 'fa  fa-tasks',\r\n                            title: Titles.OnItemSelection\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnAction);\r\n                            },\r\n                            icon: 'fa  fa-tasks',\r\n                            title: Titles.OnAction\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnFailureLink);\r\n                            },\r\n                            icon: 'fa  fa-frown-o',\r\n                            title: Titles.OnFailureLink\r\n                        });\r\n                    break;\r\n                case NodeTypes.ScreenItem:\r\n                case NodeTypes.ScreenCollection:\r\n                case NodeTypes.ScreenContainer:\r\n                case NodeTypes.Screen:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.ChildLink);\r\n                        },\r\n                        icon: 'fa  fa-share-alt',\r\n                        title: Titles.ChildLink\r\n                    });\r\n                    break;\r\n            }\r\n            result.push({\r\n                onClick: () => {\r\n                    this.props.setVisual(CONNECTING_NODE, true);\r\n                },\r\n                icon: 'fa fa-link',\r\n                title: Titles.GenericLink\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var selected_node_bb = UIA.Visual(state, UIA.SELECTED_NODE_BB);\r\n        var menu_left = 0;\r\n        var menu_top = 0;\r\n        if (selected_node_bb) {\r\n            menu_left = selected_node_bb.right;\r\n            menu_top = selected_node_bb.top;\r\n        }\r\n        var nodeSelectionMenuItems = this.nodeSelectionMenuItems();\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let graph = UIA.GetCurrentGraph(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        let vgraph = UIA.GetVisualGraph(state);\r\n        let main_content = UIA.Visual(state, MAIN_CONTENT);\r\n        let version = '0.0.0';\r\n        let workspace = null;\r\n        if (rootGraph) {\r\n            version = `${rootGraph.version.major}.${rootGraph.version.minor}.${rootGraph.version.build}`;\r\n            workspace = rootGraph.workspace;\r\n        }\r\n        let hoveredLink = null;\r\n        if (UIA.Visual(state, UIA.HOVERED_LINK)) {\r\n            hoveredLink = getLinkInstance(rootGraph, UIA.Visual(state, UIA.HOVERED_LINK));\r\n        }\r\n        return (\r\n            <div className={`skin-red sidebar-mini skin-red ${this.minified()}`} style={{\r\n                height: 'auto',\r\n                minHeight: '100vh'\r\n            }}>\r\n                <div className=\"wrapper\" style={{ height: '100vh' }} >\r\n                    <GooMenuSVG />\r\n                    <GooMenu\r\n                        visible={UIA.Visual(state, UIA.SELECTED_NODE)}\r\n                        left={menu_left - 20}\r\n                        open={UIA.Visual(state, NODE_MENU)}\r\n                        onToggle={() => {\r\n                            this.props.toggleVisual(NODE_MENU);\r\n                        }}\r\n                        top={menu_top + 30}\r\n                        menuItems={nodeSelectionMenuItems}\r\n                    />\r\n                    <div data-tid=\"container\">\r\n                        <Header>\r\n                            <DashboardLogo />\r\n                            <DashboardNavBar>\r\n                                <SidebarToggle />\r\n                                <NavBarMenu>\r\n                                    {UIA.Visual(state, UIA.SELECTED_LINK) ? <NavBarButton icon={'fa fa-minus-square'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, UIA.Visual(state, UIA.SELECTED_LINK));\r\n                                        this.props.setVisual(UIA.SELECTED_LINK, null);\r\n                                    }} /> : null}\r\n                                    <GraphMenu />\r\n                                    <NavBarButton icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.NEW_NODE);\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n\r\n                                    <NavBarButton icon={'fa fa-minus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_NODE, { id: UIA.Visual(state, UIA.SELECTED_NODE) });\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, false);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                    <NavBarButton onClick={() => {\r\n                                        this.props.toggleVisual('side-panel-open')\r\n                                    }} />\r\n                                </NavBarMenu>\r\n                            </DashboardNavBar>\r\n                        </Header>\r\n                        <MainSideBar>\r\n                            <SideBarMenu>\r\n                                <SideBarHeader title={Titles.MainNavigation} />\r\n                                <TreeViewMenu active={main_content === MIND_MAP || !main_content} hideArrow={true} title={Titles.MindMap} icon={'fa fa-map'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, MIND_MAP);\r\n                                }} />\r\n                                <TreeViewMenu active={main_content === CODE_VIEW} hideArrow={true} title={Titles.CodeView} icon={'fa fa-code'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, CODE_VIEW);\r\n                                }} />\r\n\r\n                                {hoveredLink && hoveredLink.properties ? <SideBarHeader title={hoveredLink.properties.type} /> : null}\r\n                                <SideBarHeader title={Titles.FileMenu} />\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    active={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    title={Titles.AppMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.ApplicationMenu)\r\n                                    }}>\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.New} icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.newRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Open} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.openRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Save} icon={'fa fa-save'} onClick={() => {\r\n                                        this.props.saveGraphToFile();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Scaffold} icon={'fa fa-cog'} onClick={() => {\r\n                                        this.props.scaffoldProject();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.PublishFiles} icon={'fa fa-cog'} onClick={() => {\r\n                                        this.props.scaffoldProject({ filesOnly: true });\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.SetWorkingDirectory} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.setWorkingDirectory();\r\n                                    }} />\r\n                                    <TreeViewMenu title={version} hideArrow={true} />\r\n                                    {workspace ? <TreeViewMenu hideArrow={true} title={workspace} icon={'fa fa-cog'} /> : null}\r\n                                    <SectionEdit />\r\n                                </TreeViewMenu>\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    active={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    title={Titles.GraphPropertiesMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.GraphPropertiesMenu)\r\n                                    }}>\r\n                                    <TreeViewItemContainer>\r\n                                        <Slider min={30} max={500}\r\n                                            onChange={(value) => {\r\n                                                this.props.setVisual(LINK_DISTANCE, value);\r\n                                            }}\r\n                                            value={UIA.Visual(state, LINK_DISTANCE)} />\r\n                                    </TreeViewItemContainer>\r\n                                    <TreeViewItemContainer>\r\n                                        <DepthChoice />\r\n                                    </TreeViewItemContainer>\r\n                                </TreeViewMenu>\r\n                                <SectionList />\r\n                                <NodeManagement />\r\n                                <MaestroDetailsMenu />\r\n                                <ControllerDetailsMenu />\r\n                            </SideBarMenu>\r\n                        </MainSideBar>\r\n                        <Content>\r\n                            <CodeView active={UIA.Visual(state, MAIN_CONTENT) === CODE_VIEW} />\r\n                            <MindMap\r\n                                linkDistance={UIA.Visual(state, LINK_DISTANCE)}\r\n                                onNodeClick={(nodeId, boundingBox) => {\r\n                                    if (UIA.Visual(state, CONNECTING_NODE)) {\r\n                                        let selectedId = UIA.Visual(state, UIA.SELECTED_NODE);\r\n                                        console.log(`selectedId:${selectedId} => nodeId:${nodeId}`)\r\n                                        let properties = UIA.Visual(state, CONNECTING_NODE);\r\n                                        if (properties === true) {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId\r\n                                            });\r\n                                        }\r\n                                        else {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId,\r\n                                                properties\r\n                                            });\r\n                                        }\r\n                                        this.props.setVisual(CONNECTING_NODE, false);\r\n                                        this.props.setVisual(UIA.SELECTED_NODE, null);\r\n                                    }\r\n                                    else {\r\n                                        if ([UIA.Visual(state, UIA.SELECTED_NODE)].indexOf(nodeId) === -1) {\r\n                                            this.props.SelectedNode(nodeId);\r\n                                            this.props.setVisual(UIA.SELECTED_NODE_BB, boundingBox);\r\n                                            this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        }\r\n                                        else {\r\n                                            this.props.SelectedNode(null);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                onLinkClick={(linkId, boundingBox) => {\r\n                                    console.log(`link id : ${linkId}`)\r\n                                    this.props.setVisual(UIA.SELECTED_LINK, linkId);\r\n\r\n                                    this.props.setVisual(UIA.HOVERED_LINK, linkId);\r\n                                }}\r\n\r\n                                selectedColor={UIA.Colors.SelectedNode}\r\n                                selectedLinks={[UIA.Visual(state, UIA.SELECTED_LINK)].filter(x => x)}\r\n                                selectedNodes={[UIA.Visual(state, UIA.SELECTED_NODE)].filter(x => x)}\r\n                                graph={vgraph || graph}></MindMap>\r\n                        </Content>\r\n                        <SideBar open={UIA.Visual(state, SIDE_PANEL_OPEN)} extraWide={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                            <SideBarTabs>\r\n                                <SideBarTab\r\n                                    icon=\"fa fa-cog\"\r\n                                    active={UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB)} onClick={() => {\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, PARAMETER_TAB)\r\n                                }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, SCOPE_TAB)\r\n                                }} />\r\n                            </SideBarTabs>\r\n                            {UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB) ? (<SideBarContent>\r\n                                {currentNode && !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, NodeProperties.NODEType)] ? (<FormControl>\r\n                                    <TextInput\r\n                                        label={Titles.NodeLabel}\r\n                                        value={currentNode.properties ? currentNode.properties.text : ''}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                                        }} />\r\n                                    {NotSelectableNodeTypes[currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null] ? null : (<SelectInput\r\n                                        disabled={!UIA.CanChangeType(currentNode)}\r\n                                        label={Titles.NodeType}\r\n                                        options={Object.keys(UIA.NodeTypes).filter(x => !NotSelectableNodeTypes[UIA.NodeTypes[x]]).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                            return {\r\n                                                value: UIA.NodeTypes[x],\r\n                                                title: x\r\n                                            }\r\n                                        })}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, { prop: UIA.NodeProperties.NODEType, id: currentNode.id, value })\r\n                                        }}\r\n                                        value={currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null} />)}\r\n                                    <CheckBox\r\n                                        label={Titles.Collapsed}\r\n                                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Collapsed)}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.Collapsed,\r\n                                                id: currentNode.id,\r\n                                                value\r\n                                            });\r\n                                        }} />\r\n                                    <CheckBox\r\n                                        label={Titles.Pinned}\r\n                                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Pinned)}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.Pinned,\r\n                                                id: currentNode.id,\r\n                                                value\r\n                                            });\r\n                                        }} />\r\n                                </FormControl>) : null}\r\n                                <ChoiceListItemActivityMenu />\r\n                                <ConditionActivityMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (<SideBarContent>\r\n                                <ControllerActivityMenu />\r\n                                <ModelFilterItemActivityMenu />\r\n                                <CommonActivityMenu />\r\n                                <FunctionActivityMenu />\r\n                                <MethodActivityMenu />\r\n                                <AttributeFormControl />\r\n                                <ParameterActivityMenu />\r\n                                <ModelActivityMenu />\r\n                                <ValidatorActivityMenu />\r\n                                <ExecutorActivityMenu />\r\n                                <PropertyActivityMenu />\r\n                                <ValidationItemFormControl />\r\n                                <ChoiceActivityMenu />\r\n                                <MaestroActivityMenu />\r\n                                <ValidationActivityMenu />\r\n                                <OptionActivityMenu />\r\n                                <ExtensionListActivityMenu />\r\n                                <OptionItemFormControl />\r\n                                <PermissionActivityMenu />\r\n                                <ExtensionDefinitionMenu />\r\n                                <ModelFilterActivityMenu />\r\n                                <PermissionDependencyActivityMenu />\r\n                                <EnumerationActivityMenu />\r\n                                <ServiceActivityMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<SideBarContent>\r\n                                <ValidatorPropertyMenu />\r\n                                <ReferenceActivityMenu />\r\n                                <ExecutorPropertyMenu />\r\n                                <ModelRelationshipMenu />\r\n                                <MethodPropertyMenu />\r\n                                <PermissionMenu />\r\n                                <ModelFilterMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ValidatorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ExecutorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ExecutorPropertyActivityMenu ui={FilterUI} modelKey={NodeProperties.ModelItemFilter} nodeType={NodeTypes.ModelItemFilter} nodeProp={NodeProperties.FilterModel} />) : null}\r\n                        </SideBar>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\nconst SELECTED_TAB = 'SELECTED_TAB';\r\nconst DEFAULT_TAB = 'DEFAULT_TAB';\r\nconst PARAMETER_TAB = 'PARAMETER_TAB';\r\nconst SCOPE_TAB = 'SCOPE_TAB';\r\nexport default UIConnect(Dashboard)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport Routes from '../Routes';\r\n\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    const { store, history } = this.props;\r\n    return (\r\n      <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n          <Routes />\r\n        </ConnectedRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport routes from './constants/routes';\r\nimport App from './containers/App';\r\nimport Dashboard from './components/dashboard';\r\nexport default () => (\r\n  <App>\r\n    <Switch>\r\n      <Route path={routes.HOME} component={Dashboard} />\r\n    </Switch>\r\n  </App>\r\n);\r\n","// @flow\r\nimport type { GetState, Dispatch } from '../reducers/types';\r\n\r\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\r\n\r\nexport function increment() {\r\n  return {\r\n    type: INCREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function decrement() {\r\n  return {\r\n    type: DECREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function incrementIfOdd() {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    const { counter } = getState();\r\n\r\n    if (counter % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch(increment());\r\n  };\r\n}\r\n\r\nexport function incrementAsync(delay: number = 1000) {\r\n  return (dispatch: Dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(increment());\r\n    }, delay);\r\n  };\r\n}\r\n","// @flow\r\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER } from '../actions/counter';\r\nimport type { Action } from './types';\r\n\r\nexport default function counter(state: number = 0, action: Action) {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return state + 1;\r\n    case DECREMENT_COUNTER:\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// @flow\r\nimport * as UIA from '../actions/uiactions';\r\nfunction updateUI(state, action) {\r\n    var newstate = { ...state };\r\n    newstate[action.section] = { ...newstate[action.section] || {} }\r\n    newstate[action.section][action.item] = action.value;\r\n    return newstate;\r\n}\r\nfunction makeDefaultState() {\r\n    return {};\r\n}\r\nexport default function uiReducer(state, action) {\r\n    state = state || makeDefaultState();\r\n    switch (action.type) {\r\n        case UIA.UI_UPDATE:\r\n            return updateUI(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport counter from './counter';\r\nimport uiReducer from './uiReducer';\r\nexport default function createRootReducer(history) {\r\n  return combineReducers({\r\n    router: connectRouter(history),\r\n    counter,\r\n    uiReducer\r\n  });\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware, routerActions } from 'connected-react-router';\r\nimport { createLogger } from 'redux-logger';\r\nimport createRootReducer from '../reducers';\r\nimport * as counterActions from '../actions/counter';\r\nimport type { counterStateType } from '../reducers/types';\r\n\r\nconst history = createHashHistory();\r\n\r\nconst rootReducer = createRootReducer(history);\r\n\r\nconst configureStore = (initialState?: counterStateType) => {\r\n  // Redux Configuration\r\n  const middleware = [];\r\n  const enhancers = [];\r\n\r\n  // Thunk Middleware\r\n  middleware.push(thunk);\r\n\r\n  // Logging Middleware\r\n  const logger = createLogger({\r\n    level: 'info',\r\n    collapsed: true\r\n  });\r\n\r\n  // Skip redux logs in console during the tests\r\n  if (process.env.NODE_ENV !== 'test') {\r\n    middleware.push(logger);\r\n  }\r\n\r\n  // Router Middleware\r\n  const router = routerMiddleware(history);\r\n  middleware.push(router);\r\n\r\n  // Redux DevTools Configuration\r\n  const actionCreators = {\r\n    ...counterActions,\r\n    ...routerActions\r\n  };\r\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n  /* eslint-disable no-underscore-dangle */\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Options: http://extension.remotedev.io/docs/API/Arguments.html\r\n        actionCreators\r\n      })\r\n    : compose;\r\n  /* eslint-enable no-underscore-dangle */\r\n\r\n  // Apply Middleware & Compose Enhancers\r\n  enhancers.push(applyMiddleware(...middleware));\r\n  const enhancer = composeEnhancers(...enhancers);\r\n\r\n  // Create Store\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\r\n      '../reducers',\r\n      // eslint-disable-next-line global-require\r\n      () => store.replaceReducer(require('../reducers').default)\r\n    );\r\n  }\r\n\r\n  return store;\r\n};\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from '../reducers';\r\nconst history = createHashHistory();\r\nconst rootReducer = createRootReducer(history);\r\nconst router = routerMiddleware(history);\r\nconst enhancer = applyMiddleware(thunk, router);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, enhancer);\r\n}\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport configureStoreDev from './configureStore.dev';\r\nimport configureStoreProd from './configureStore.prod';\r\n\r\nconst selectedConfigureStore =\r\n  process.env.NODE_ENV === 'production'\r\n    ? configureStoreProd\r\n    : configureStoreDev;\r\n\r\nexport const { configureStore } = selectedConfigureStore;\r\n\r\nexport const { history } = selectedConfigureStore;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport Root from './containers/Root';\r\nimport { configureStore, history } from './store/configureStore';\r\nimport './app.global.css';\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n  <AppContainer>\r\n    <Root store={store} history={history} />\r\n  </AppContainer>,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./containers/Root', () => {\r\n    // eslint-disable-next-line global-require\r\n    const NextRoot = require('./containers/Root').default;\r\n    render(\r\n      <AppContainer>\r\n        <NextRoot store={store} history={history} />\r\n      </AppContainer>,\r\n      document.getElementById('root')\r\n    );\r\n  });\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _reactRouter = require('react-router');\n\nvar _actions = require('./actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar createConnectedRouter = function createConnectedRouter(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n  /*\n   * ConnectedRouter listens to a history object passed from props.\n   * When history is changed, it dispatches action to redux store.\n   * Then, store will pass props to component to render.\n   * This creates uni-directional flow from history->store->router->components.\n   */\n\n  var ConnectedRouter = function (_get__2) {\n    _inherits(ConnectedRouter, _get__2);\n\n    function ConnectedRouter(props, context) {\n      _classCallCheck(this, ConnectedRouter);\n\n      var _this = _possibleConstructorReturn(this, (ConnectedRouter.__proto__ || Object.getPrototypeOf(ConnectedRouter)).call(this, props));\n\n      _this.inTimeTravelling = false;\n\n      // Subscribe to store changes\n      _this.unsubscribe = context.store.subscribe(function () {\n        // Extract store's location\n        var _toJS = toJS(getIn(context.store.getState(), ['router', 'location'])),\n            pathnameInStore = _toJS.pathname,\n            searchInStore = _toJS.search,\n            hashInStore = _toJS.hash;\n        // Extract history's location\n\n\n        var _props$history$locati = props.history.location,\n            pathnameInHistory = _props$history$locati.pathname,\n            searchInHistory = _props$history$locati.search,\n            hashInHistory = _props$history$locati.hash;\n\n        // If we do time travelling, the location in store is changed but location in history is not changed\n\n        if (pathnameInHistory !== pathnameInStore || searchInHistory !== searchInStore || hashInHistory !== hashInStore) {\n          _this.inTimeTravelling = true;\n          // Update history's location to match store's location\n          props.history.push({\n            pathname: pathnameInStore,\n            search: searchInStore,\n            hash: hashInStore\n          });\n        }\n      });\n\n      var handleLocationChange = function handleLocationChange(location, action) {\n        // Dispatch onLocationChanged except when we're in time travelling\n        if (!_this.inTimeTravelling) {\n          props.onLocationChanged(location, action);\n        } else {\n          _this.inTimeTravelling = false;\n        }\n      };\n\n      // Listen to history changes\n      _this.unlisten = props.history.listen(handleLocationChange);\n      // Dispatch a location change action for the initial location\n      handleLocationChange(props.history.location, props.history.action);\n      return _this;\n    }\n\n    _createClass(ConnectedRouter, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.unlisten();\n        this.unsubscribe();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            history = _props.history,\n            children = _props.children;\n\n\n        return _get__('React').createElement(\n          _get__('Router'),\n          { history: history },\n          children\n        );\n      }\n    }]);\n\n    return ConnectedRouter;\n  }(_get__('Component'));\n\n  ConnectedRouter.contextTypes = {\n    store: _get__('PropTypes').shape({\n      getState: _get__('PropTypes').func.isRequired,\n      subscribe: _get__('PropTypes').func.isRequired\n    }).isRequired\n  };\n\n  ConnectedRouter.propTypes = {\n    history: _get__('PropTypes').shape({\n      action: _get__('PropTypes').string.isRequired,\n      listen: _get__('PropTypes').func.isRequired,\n      location: _get__('PropTypes').object.isRequired,\n      push: _get__('PropTypes').func.isRequired\n    }).isRequired,\n    location: _get__('PropTypes').oneOfType([_get__('PropTypes').object, _get__('PropTypes').string]).isRequired,\n    action: _get__('PropTypes').string.isRequired,\n    basename: _get__('PropTypes').string,\n    children: _get__('PropTypes').oneOfType([_get__('PropTypes').func, _get__('PropTypes').node]),\n    onLocationChanged: _get__('PropTypes').func.isRequired\n  };\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      action: getIn(state, ['router', 'action']),\n      location: getIn(state, ['router', 'location'])\n    };\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      onLocationChanged: function onLocationChanged(location, action) {\n        return dispatch(_get__('onLocationChanged')(location, action));\n      }\n    };\n  };\n\n  return _get__('connect')(mapStateToProps, mapDispatchToProps)(ConnectedRouter);\n};\n\nexports.default = _get__('createConnectedRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'Component':\n      return _react.Component;\n\n    case 'PropTypes':\n      return _propTypes2.default;\n\n    case 'onLocationChanged':\n      return _actions.onLocationChanged;\n\n    case 'connect':\n      return _reactRedux.connect;\n\n    case 'createConnectedRouter':\n      return createConnectedRouter;\n\n    case 'React':\n      return _react2.default;\n\n    case 'Router':\n      return _reactRouter.Router;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectedRouter === 'undefined' ? 'undefined' : _typeof(createConnectedRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectedRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectedRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * This action type will be dispatched when your history\n * receives a location change.\n */\nvar LOCATION_CHANGE = exports.LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\n\nvar onLocationChanged = exports.onLocationChanged = function onLocationChanged(location, action) {\n  return {\n    type: _get__('LOCATION_CHANGE'),\n    payload: {\n      location: location,\n      action: action\n    }\n  };\n};\n\n/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\nvar CALL_HISTORY_METHOD = exports.CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\n\nvar updateLocation = function updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: _get__('CALL_HISTORY_METHOD'),\n      payload: {\n        method: method,\n        args: args\n      }\n    };\n  };\n};\n\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\nvar push = exports.push = _get__('updateLocation')('push');\nvar replace = exports.replace = _get__('updateLocation')('replace');\nvar go = exports.go = _get__('updateLocation')('go');\nvar goBack = exports.goBack = _get__('updateLocation')('goBack');\nvar goForward = exports.goForward = _get__('updateLocation')('goForward');\n\nvar routerActions = exports.routerActions = { push: _get__('push'), replace: _get__('replace'), go: _get__('go'), goBack: _get__('goBack'), goForward: _get__('goForward') };\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return LOCATION_CHANGE;\n\n    case 'CALL_HISTORY_METHOD':\n      return CALL_HISTORY_METHOD;\n\n    case 'updateLocation':\n      return updateLocation;\n\n    case 'push':\n      return push;\n\n    case 'replace':\n      return replace;\n\n    case 'go':\n      return go;\n\n    case 'goBack':\n      return goBack;\n\n    case 'goForward':\n      return goForward;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _actions = require('./actions');\n\nvar actions = _interopRequireWildcard(_actions);\n\nvar _ConnectedRouter = require('./ConnectedRouter');\n\nvar _ConnectedRouter2 = _interopRequireDefault(_ConnectedRouter);\n\nvar _reducer = require('./reducer');\n\nvar _reducer2 = _interopRequireDefault(_reducer);\n\nvar _middleware = require('./middleware');\n\nvar _middleware2 = _interopRequireDefault(_middleware);\n\nvar _selectors = require('./selectors');\n\nvar _selectors2 = _interopRequireDefault(_selectors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar createAll = function createAll(structure) {\n  return _extends({}, _get__('actions'), _get__('createSelectors')(structure), {\n    ConnectedRouter: _get__('createConnectedRouter')(structure),\n    connectRouter: _get__('createConnectRouter')(structure),\n    routerMiddleware: _get__('routerMiddleware')\n  });\n};\n\nexports.default = _get__('createAll');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'actions':\n      return _filterWildcardImport__(actions);\n\n    case 'createSelectors':\n      return _selectors2.default;\n\n    case 'createConnectedRouter':\n      return _ConnectedRouter2.default;\n\n    case 'createConnectRouter':\n      return _reducer2.default;\n\n    case 'routerMiddleware':\n      return _middleware2.default;\n\n    case 'createAll':\n      return createAll;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createAll === 'undefined' ? 'undefined' : _typeof(createAll);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createAll, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createAll)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nfunction _filterWildcardImport__() {\n  var wildcardImport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__' && propertyName !== '__RewireAPI__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = exports.createMatchSelector = exports.getAction = exports.getLocation = exports.routerMiddleware = exports.connectRouter = exports.ConnectedRouter = exports.routerActions = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.CALL_HISTORY_METHOD = exports.LOCATION_CHANGE = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createAll = require('./createAll');\n\nvar _createAll2 = _interopRequireDefault(_createAll);\n\nvar _plain = require('./structure/plain');\n\nvar _plain2 = _interopRequireDefault(_plain);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _get__2 = _get__('createAll')(_get__('plainStructure'));\n\nvar LOCATION_CHANGE = _get__2.LOCATION_CHANGE,\n    CALL_HISTORY_METHOD = _get__2.CALL_HISTORY_METHOD,\n    push = _get__2.push,\n    replace = _get__2.replace,\n    go = _get__2.go,\n    goBack = _get__2.goBack,\n    goForward = _get__2.goForward,\n    routerActions = _get__2.routerActions,\n    ConnectedRouter = _get__2.ConnectedRouter,\n    connectRouter = _get__2.connectRouter,\n    routerMiddleware = _get__2.routerMiddleware,\n    getLocation = _get__2.getLocation,\n    getAction = _get__2.getAction,\n    createMatchSelector = _get__2.createMatchSelector;\nexports.LOCATION_CHANGE = LOCATION_CHANGE;\nexports.CALL_HISTORY_METHOD = CALL_HISTORY_METHOD;\nexports.push = push;\nexports.replace = replace;\nexports.go = go;\nexports.goBack = goBack;\nexports.goForward = goForward;\nexports.routerActions = routerActions;\nexports.ConnectedRouter = ConnectedRouter;\nexports.connectRouter = connectRouter;\nexports.routerMiddleware = routerMiddleware;\nexports.getLocation = getLocation;\nexports.getAction = getAction;\nexports.createMatchSelector = createMatchSelector;\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'createAll':\n      return _createAll2.default;\n\n    case 'plainStructure':\n      return _plain2.default;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\nvar routerMiddleware = function routerMiddleware(history) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        // eslint-disable-line no-unused-vars\n        if (action.type !== _get__('CALL_HISTORY_METHOD')) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n\n        history[method].apply(history, _toConsumableArray(args));\n      };\n    };\n  };\n};\n\nexports.default = _get__('routerMiddleware');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'CALL_HISTORY_METHOD':\n      return _actions.CALL_HISTORY_METHOD;\n\n    case 'routerMiddleware':\n      return routerMiddleware;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof routerMiddleware === 'undefined' ? 'undefined' : _typeof(routerMiddleware);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(routerMiddleware, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(routerMiddleware)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: history.location,\n      action: history.action\n    });\n\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === _get__('LOCATION_CHANGE')) {\n        return merge(state, payload);\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexports.default = _get__('createConnectRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return _actions.LOCATION_CHANGE;\n\n    case 'createConnectRouter':\n      return createConnectRouter;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectRouter === 'undefined' ? 'undefined' : _typeof(createConnectRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _reactRouter = require('react-router');\n\nvar createSelectors = function createSelectors(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n\n  var getLocation = function getLocation(state) {\n    return toJS(getIn(state, ['router', 'location']));\n  };\n  var getAction = function getAction(state) {\n    return toJS(getIn(state, ['router', 'action']));\n  };\n\n  // It only makes sense to recalculate the `matchPath` whenever the pathname\n  // of the location changes. That's why `createMatchSelector` memoizes\n  // the latest result based on the location's pathname.\n  var createMatchSelector = function createMatchSelector(path) {\n    var lastPathname = null;\n    var lastMatch = null;\n\n    return function (state) {\n      var _ref = getLocation(state) || {},\n          pathname = _ref.pathname;\n\n      if (pathname === lastPathname) {\n        return lastMatch;\n      }\n      lastPathname = pathname;\n      var match = _get__('matchPath')(pathname, path);\n      if (!match || !lastMatch || match.url !== lastMatch.url) {\n        lastMatch = match;\n      }\n\n      return lastMatch;\n    };\n  };\n\n  return { getLocation: getLocation, getAction: getAction, createMatchSelector: createMatchSelector };\n};\n\nexports.default = _get__('createSelectors');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'matchPath':\n      return _reactRouter.matchPath;\n\n    case 'createSelectors':\n      return createSelectors;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createSelectors === 'undefined' ? 'undefined' : _typeof(createSelectors);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createSelectors, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createSelectors)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* Code from github.com/erikras/redux-form by Erik Rasmussen */\n\nvar getIn = function getIn(state, path) {\n  if (!state) {\n    return state;\n  }\n\n  var length = path.length;\n  if (!length) {\n    return undefined;\n  }\n\n  var result = state;\n  for (var i = 0; i < length && !!result; ++i) {\n    result = result[path[i]];\n  }\n\n  return result;\n};\n\nexports.default = _get__(\"getIn\");\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getIn\":\n      return getIn;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === \"undefined\" ? \"undefined\" : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof getIn === \"undefined\" ? \"undefined\" : _typeof(getIn);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(getIn, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(getIn)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _getIn = require('./getIn');\n\nvar _getIn2 = _interopRequireDefault(_getIn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar structure = {\n  fromJS: function fromJS(value) {\n    return value;\n  },\n  getIn: _get__('getIn'),\n  merge: function merge(state, payload) {\n    return _extends({}, state, payload);\n  },\n  toJS: function toJS(value) {\n    return value;\n  }\n};\n\nexports.default = _get__('structure');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'getIn':\n      return _getIn2.default;\n\n    case 'structure':\n      return structure;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof structure === 'undefined' ? 'undefined' : _typeof(structure);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(structure, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(structure)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = false;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","module.exports = require(\"d3\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"history\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-hot-loader\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-router\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"react-syntax-highlighter\");","module.exports = require(\"redux\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"util\");","module.exports = require(\"webcola\");"],"sourceRoot":""}