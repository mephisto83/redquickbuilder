{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/containers/App.js","webpack:///./app/utils/array.js","webpack:///./app/components/titles.js","webpack:///./app/constants/nodetypes.js","webpack:///./app/constants/functiontypes.js","webpack:///./app/methods/graph_methods.js","webpack:///./app/constants/datachain.js","webpack:///./app/actions/uiactions.js","webpack:///./app/ipc/handler-events.js","webpack:///./app/generators/namespacegenerator.js","webpack:///./app/generators/controllergenerator.js","webpack:///./app/generators/modelgenerators.js","webpack:///./app/generators/extensiongenerator.js","webpack:///./app/generators/permissiongenerator.js","webpack:///./app/generators/validationrulegenerator.js","webpack:///./app/generators/streamprocessorchestrationgenerator.js","webpack:///./app/generators/modelitemfiltergenerator.js","webpack:///./app/generators/maestrogenerator.js","webpack:///./app/generators/changeparametergenerator.js","webpack:///./app/generators/constantsgenerator.js","webpack:///./app/service/permissionservice.js","webpack:///./app/generators/permission_conditiongenerator.js","webpack:///./app/generators/streamprocessgenerator.js","webpack:///./app/generators/changeresponsegenerator.js","webpack:///./app/generators/executiongenerator.js","webpack:///./app/generators/modelreturngenerator.js","webpack:///./app/generators/modelexceptiongenerator.js","webpack:///./app/generators/modelgetgenerators.js","webpack:///./app/constants/componenttypes.js","webpack:///./app/service/layoutservice.js","webpack:///./app/service/screenservice.js","webpack:///./app/generators/screengenerator.js","webpack:///./app/service/navigatorservice.js","webpack:///./app/generators/navigationgenerator.js","webpack:///./app/generators/keygenerator.js","webpack:///./app/service/keyservice.js","webpack:///./app/service/uiservice.js","webpack:///./app/generators/configurationgenerator.js","webpack:///./app/generators/controlleractionsgenerator.js","webpack:///./app/generators/datachaingenerator.js","webpack:///./app/service/validationservice.js","webpack:///./app/generators/validatorgenerator.js","webpack:///./app/generators/generator.js","webpack:///./app/actions/remoteActions.js","webpack:///./app/actions/ipcActions.js","webpack:///./app/utils/utils.js","webpack:///./app/components/dashboardlogo.js","webpack:///./app/components/header.js","webpack:///./app/components/dashboardnavbar.js","webpack:///./app/components/sidebartoggle.js","webpack:///./app/components/navbarmenu.js","webpack:///./app/constants/visual.js","webpack:///./app/components/mainsidebar.js","webpack:///./app/components/controlsidebarmenu.js","webpack:///./app/components/tabpane.js","webpack:///./app/components/formcontrol.js","webpack:///./app/components/selectinput.js","webpack:///./app/components/textinput.js","webpack:///./app/components/batchmenu.js","webpack:///./app/components/sidebarheader.js","webpack:///./app/components/checkbox.js","webpack:///./app/components/buttonlist.js","webpack:///./app/components/sidebar.js","webpack:///./app/components/treeviewmenu.js","webpack:///./app/components/sidebarmenu.js","webpack:///./app/components/treeviewitem.js","webpack:///./app/components/sidemenucontainer.js","webpack:///./app/constants/nodepackages.js","webpack:///./app/components/quickmethods.js","webpack:///./app/components/content.js","webpack:///./app/components/navigationparametermenu.js","webpack:///./app/components/screenactivitymenu.js","webpack:///./app/components/datasourceactivitymenu.js","webpack:///./app/components/sidebartabs.js","webpack:///./app/components/sidebartab.js","webpack:///./app/components/screenoptionsactivitymenu.js","webpack:///./app/constants/servicetypes.js","webpack:///./app/components/serviceactivitymenu.js","webpack:///./app/components/sidebarcontent.js","webpack:///./app/components/navbarbutton.js","webpack:///./app/components/box.js","webpack:///./app/components/enumerationeditmenu.js","webpack:///./app/components/executoritem.js","webpack:///./app/components/genericpropertymenu.js","webpack:///./app/components/genericpropertycontainer.js","webpack:///./app/constants/condition.js","webpack:///./app/components/conditionfiltermenu.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./app/components/mindmap.js","webpack:///./app/components/modelactivitymenu.js","webpack:///./app/components/functionactivitymenu.js","webpack:///./app/components/propertyactivitymenu.js","webpack:///./app/components/datachainactivitymenu.js","webpack:///./app/components/aftereffectsactivitymenu.js","webpack:///./app/components/attributeformcontrol.js","webpack:///./app/components/nodelist.js","webpack:///./app/components/permissionmenu.js","webpack:///./app/components/choiceactivitymenu.js","webpack:///./app/components/treeviewitemcontainer.js","webpack:///./app/components/uiparameters.js","webpack:///./app/methods/component_api_methods.js","webpack:///./app/components/componentactivitymenu.js","webpack:///./app/components/componentpropertymenu.js","webpack:///./app/components/modelfilteractivitymenu.js","webpack:///./app/components/componentapimenu.js","webpack:///./app/components/validationactivitymenu.js","webpack:///./app/components/validationitemactivitymenu.js","webpack:///./app/components/validatoractivitymenu.js","webpack:///./app/components/optionactivitymenu.js","webpack:///./app/components/executorpropertymenu.js","webpack:///./app/components/configurationactivitymenu.js","webpack:///./app/components/conditionactivitymenu.js","webpack:///./app/components/parameteractivitymenu.js","webpack:///./app/components/optionitemformcontrol.js","webpack:///./app/components/executorpropertyactivitymenu.js","webpack:///./app/components/executoractivitymenu.js","webpack:///./app/components/validatorpropertymenu.js","webpack:///./app/components/validatoritem.js","webpack:///./app/components/validatorpropertyactivitymenu.js","webpack:///./app/components/ExtensionListActivityMenu.js","webpack:///./app/components/permissionsactivitymenu.js","webpack:///./app/components/referenceactivitymenu.js","webpack:///./app/components/goomenu.js","webpack:///./app/components/choicelistitemactivitymenu.js","webpack:///./app/components/modelfiltermenu.js","webpack:///./app/components/datachainoperator.js","webpack:///./app/components/slider.js","webpack:///./app/components/dropdown.js","webpack:///./app/components/tabcontent.js","webpack:///./app/components/userfooter.js","webpack:///./app/components/tabcontainer.js","webpack:///./app/components/enumeratedtable.js","webpack:///./app/components/extensiondefinitionmenu.js","webpack:///./app/components/methodactivitymenu.js","webpack:///./app/components/methodpropertymenu.js","webpack:///./app/components/maestrodetailsmenu.js","webpack:///./app/components/nodemanagement.js","webpack:///./app/components/methodparameteremenu.js","webpack:///./app/components/commonactivitymenu.js","webpack:///./app/components/modelfilteritemactivitymenu.js","webpack:///./app/components/modelrelationshipmenu.js","webpack:///./app/components/depthchoice.js","webpack:///./app/components/maestroactivitymenu.js","webpack:///./app/components/contextmenu.js","webpack:///./app/components/controllerdetailsmenu.js","webpack:///./app/components/controlleractivitymenu.js","webpack:///./app/components/permissionsdependentactivitymenu.js","webpack:///./app/components/dropdownmenuitem.js","webpack:///./app/components/graphmenu.js","webpack:///./app/components/sectionlist.js","webpack:///./app/components/enumerationactivitymenu.js","webpack:///./app/components/sectionedit.js","webpack:///./app/components/topviewer.js","webpack:///./node_modules/react-syntax-highlighter/dist/esm/styles/hljs/docco.js","webpack:///./app/components/tab.js","webpack:///./app/components/tabs.js","webpack:///./app/components/codeview.js","webpack:///./app/components/layoutcreator.js","webpack:///./app/components/layoutview.js","webpack:///./app/components/dashboard.js","webpack:///./app/containers/Root.js","webpack:///./app/Routes.js","webpack:///./app/actions/counter.js","webpack:///./app/reducers/counter.js","webpack:///./app/reducers/uiReducer.js","webpack:///./app/reducers/index.js","webpack:///./app/store/configureStore.dev.js","webpack:///./app/store/configureStore.prod.js","webpack:///./app/store/configureStore.js","webpack:///./app/index.js","webpack:///./node_modules/connected-react-router/lib/ConnectedRouter.js","webpack:///./node_modules/connected-react-router/lib/actions.js","webpack:///./node_modules/connected-react-router/lib/createAll.js","webpack:///./node_modules/connected-react-router/lib/index.js","webpack:///./node_modules/connected-react-router/lib/middleware.js","webpack:///./node_modules/connected-react-router/lib/reducer.js","webpack:///./node_modules/connected-react-router/lib/selectors.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/getIn.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/index.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_function-to-string.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/redux-logger/dist/redux-logger.js","webpack:///external \"d3\"","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"history\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///external \"react\"","webpack:///external \"react-dom\"","webpack:///external \"react-hot-loader\"","webpack:///external \"react-redux\"","webpack:///external \"react-router\"","webpack:///external \"react-router-dom\"","webpack:///external \"react-syntax-highlighter\"","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"util\"","webpack:///external \"webcola\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","React","render","children","this","props","_jsx","external_react_","uuidv4","replace","Math","random","toString","array","relativeCompliment","writable","configurable","othercollection","func","output","result","x","y","length","some","push","intersection","j","unique","finalresult","indexOf","removeIndices","indices","orderBy","collection","map","index","splice","interpolate","start","stop","Float32Array","sort","groupBy","subset","min","Array","String","toJavascriptName","str","toLowerCase","split","join","tightenPs","filter","trim","RemoveValidation","RemoveExecution","SelectValidation","SelectExecution","SelectedValidations","Remove","Type","UIParameters","Navigation","UseHttps","ServerSideSetup","AddCondition","Body","AsOutput","AddComponentDidMount","GraphPropertiesMenu","ComponentPropertyMenu","ComponentAPIMenu","ClientMethod","Layout","NodeLabel","NodeType","EntryPoint","Nodes","Models","MethodName","OutputModel","AddComponentNew","Height","Component","AddDataSource","ComponentType","ConditionType","Width","QuickMethods","Reference","Depth","Label","SetupLayout","New","FlexDirection","SetListItem","ClearLayout","Flex","ServiceActivity","CodeTypes","ProjectName","Project","NameSpace","AddScreenOptions","Pinned","PinnedShortCut","ColorScheme","EnableMenu","ScreenOptions","Collapsed","GenericLink","OnLoad","ChildLink","OnFailureLink","OnAction","OnItemSelection","OnSuccessLink","UIType","SelectedExecutors","Priority","Agents","UseAsRoot","OnChange","OnPress","SelectProperty","DisallowedEnums","ManyToMany","Many2ManyProperties","FunctionVariables","Methods","AllowedEnums","ModelActions","SetDefaultPropertiesDescription","SetDefaultProperties","AddProperty","CreateObjectDataSeed","PermissionsDependencyAttribute","KeyField","UseEnumeration","Enumeration","CodeUser","AddPropertyDescription","AddAttribute","AddAttributeDescription","UIName","UINameDescription","UISingular","Unknown","PropertyValueType","PropertyModelType","AddReference","IsReferenceList","AgentOperator","Enumerable","Value","AppMenu","CodeName","ValueName","AgentName","FileMenu","Code","MainNavigation","AddParameter","AddParameterDescription","AddFunctionOutput","Menu","AddFunctionOutputDescription","IsAgent","IsOwnedByAgents","IsOwnedByAgentsDescriptions","IsUser","ParameterType","OwnedResources","AddAfterMethods","AddAfterMethodsDescription","AddModelItemFilter","AddModelItemFilterDescription","PermissionType","PermissionAttributes","OwnedResourcesDescription","PermissionActions","PermissionValueType","Permissions","Create","Get","GetAll","Getall","Delete","Getbyowner","Update","ChoiceTypes","AddChoice","AddChoiceDescription","AddPermissionDescription","AddPermission","Select","ValidationListActions","AddValidationItem","AddValidationItemDescription","UseUIValidations","AddValidationList","AddValidationListDescription","Add","ValidationTypes","ValidationType","OptionListActions","AddOptionItem","AddOptionItemDescription","Name","OptionsType","UseCustomOption","UseUIOptions","AddOptionList","AddOptionListDescription","DependentProperty","UseDependentProperty","UseUIExtensions","IncludedInList","IsEqualTo","UseEqualDescription","UseEqual","IsEqualToDescription","ExcludedFromList","ExcludedFromListDescription","IncludedInListDescription","ExtensionTypes","AddExtensionList","AddExtensionListDescription","ExtensionListTypeActions","AddExtensionNode","ExtensionOptions","AddExtensionNodeDescription","ExtensionDefinition","StitchEnd","Extensions","ExtensionConfig","DependsOn","UseId","NodeProperties","InstanceType","Input","Property","AddDataChain","SplitDataChain","MergeChain","Condition","DependsOnDescription","DependentPropertyDescription","MatchingValue","MatchingValueDescription","FunctionTypes","Functions","AddFunction","MaestroDetails","HttpMethod","AddMaestros","HttpRoute","NotIncludeInController","AsForm","Maestros","SaveAs","NoApiPrefix","Save","Open","PublishFiles","Scaffold","SetWorkingDirectory","CommonProperties","ModelActivityMenu","MindMap","CodeView","ParentTo","IsParent","IsCompositeInput","ExcludeFromController","UserModel","PropertyGeneratedType","ManyToManyNexus","ManyToManyExists","ManyToManyNexusModel","ManyToManyNexusDescription","HasLogicalChildren","LogicalChildrenTypes","LogicalNieceTypes","HasLogicalChildrenDescription","HasLogicalNieces","HasLogicalNiecesDescription","UseModelAsType","CustomFunction","CustomFunctionDescription","AddNewSection","Sections","AddNewSectionDescription","SectionEdit","DefaultGraphTitle","DefaultSubGraphTitle","ClearPinned","Filter","NodeTypes","Concept","Model","DataSource","ModelFilter","ScreenContainer","Screen","ScreenCollection","ScreenItem","Attribute","ChoiceList","Permission","Configuration","PermissionDependency","ComponentNode","ModelItemFilter","ValidationList","ValidationListItem","Validator","Executor","OptionList","OptionListItem","OptionCustom","ScreenOption","ExtensionTypeList","ExtensionType","Function","Method","AfterEffect","Action","Parameter","FunctionOutput","Controller","Maestro","Services","ReferenceNode","ClassNode","DataChain","NodeTypeIcons","ExcludeDefaultNode","[object Object]","GeneratedTypes","ChangeParameter","ChangeResponse","Constants","Validators","Executors","ModelReturn","ModelGet","ModelExceptions","StreamProcess","StreamProcessOrchestration","ReactNativeTypes","Screens","Keys","ControllerActions","DataChainFunctions","IdentityManagement","RedQuickViews","STANDARD_TEST_USING","STANDARD_CONTROLLER_USING","GeneratedConstants","StreamTypes","FunctionName","ColorStates","NotSelectableNodeTypes","NodeTypeColors","FunctionGroups","External","Internal","Core","GroupProperties","IsExternal","FunctionGroup","GroupEntryNode","GroupExitNode","ExternalExitNode","ExternalEntryNode","Tests","Controllers","Validations","Parameters","Interface","MAIN_CONTENT","MIND_MAP","CODE_VIEW","LAYOUT_VIEW","GeneratedDataTypes","FirstName","LastName","Date","Id","Ids","ProfileImage","LoremIpsum","Guid","ListOfGuids","Number","ConfigurationProperties","Domain","ComponentApi","EnabledMenu","ComponentParameters","NavigationParameters","MethodParameters","NavigationParametersProperty","MethodParameterProperty","ScreenParameters","SelectedLayoutCell","ChainParent","ClientMethodParameters","DataChainEntry","ComponentProperties","TextType","MatchReference","MatchManyReferenceParameter","EnumerationReference","AllowedExtensionValues","ServiceType","DisallowedExtensionValues","AllowedEnumValues","DisallowedEnumValues","ServiceTypeSettings","ValidatorModel","ExecutorAgent","ExecutorFunction","ExecutorModel","ExecutorModelOutput","ExecutorFunctionType","ValidatorFunction","FilterModel","FilterAgent","ValidatorAgent","UseExtension","UIUser","IsSharedResource","UIPermissions","IsOwned","NodePackage","NodePackageType","NodePackageAgent","UIText","UIChoice","UIChoiceType","UIChoiceNode","PermissionRequester","PermissionManyToMany","MatchIds","ConnectionExists","PermissionTarget","UIDependsOn","UseUIDependsOn","UIOptionType","UseCustomUIOption","UIOptionTypeCustom","UIOption","UseUIExtensionList","UIExtensionList","UIExtension","UIExtensionDefinition","MethodProps","FilterPropreties","UIValidationType","NODEType","ReferenceType","ComponentDidMountEvent","UIAttributeType","IsDefaultProperty","DataGenerationType","ManyToManyNexusType","ManyToManyNexusTypes","MethodType","ChainNodeInput2","ChainNodeInput1","UIModelType","UseScopeGraph","ScopeGraph","DataChainFunctionType","AfterMethod","AfterMethodSetup","Groups","GroupParent","CodePropertyType","FunctionType","MethodFunctionValidation","NotIncludedInController","PermissionImpl","ClassConstructionInformation","codeTypeWord","NodePropertiesDirtyChain","chainProp","chainFunc","letters","allowedchars","MakeConstant","val","isNaN","toUpperCase","LinkEvents","LinkType","Choice","ExecutorItem","ExecutorProperty","Validation","ValidationItem","ValidatorProperty","ValidatorModelItem","Option","OptionItem","ExtensionList","Extension","ListItem","DataChainLink","ComponentProperty","LogicalChildren","LogicalNieces","ManyToManyLink","AppliedPermissionLink","RequestorPermissionLink","ManyToManyPermissionLink","ExtensionDependencyLink","FunctionOperator","FunctionLink","OnScreenLink","FunctionVariable","PropertyLink","ParentLink","FunctionConstraintLink","ErrorLink","RequiredClassLink","ModelTypeLink","AgentTypeLink","UserLink","MaestroLink","AttributeLink","PermissionFunction","Exist","PermissionPropertyDependency","PermissionDependencyProperty","PermissionDependencyPropertyManyToManyLink","PermissionPropertyDependencyManyToManyLink","LinkStyles","type","stroke","strokeWidth","LinkPropertyKeys","TYPE","CONSTRAINTS","VALID_CONSTRAINTS","FUNCTION_ID","LinkProperties","EnumerationLink","DataSourceLink","ComponentLink","ComponentPropertyLink","ScreenOptionsLink","EnumerationReferenceLink","ConditionLink","PermissionFunctionLink","PermissionDependencyPropertyLink","PermissionPropertyDependencyLink","ExistLink","exist","ChoiceLink","PermissionLink","ValdationLink","ValidationLinkItem","ValidatorAgentLink","ValidatorModelLink","ValidatorModelItemLink","ValidatorPropertyLink","ExecutorLink","ExecutorLinkItem","ExecutorAgentLink","ExecutorModelLink","ExecutorModelItemLink","ExecutorPropertyLink","ValidatorFunctionLink","ExecutorFunctionLink","OptionLink","OptionItemLink","OptionCustomLink","DependsOnLink","ExtensionListLink","ExtensionLink","keys","propTypes","UITypes","ReactNative","Web","VR","AR","Desktop","ValidationRules","CVV","AlphaNumericLike","AlphaNumericPuncLike","AlphaOnly","NumericOnly","Numeric","Empty","AlphaOnlyWithSpaces","NotEmpty","UrlEmpty","IsTrue","IsFalse","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","EqualTo","Any","Url","EmailEmpty","Credit","Email","ExpirationMonth","BeforeNow","Year","Debit","ExpirationYear","PastDate","ZipEmpty","Zip","SocialSecurity","OneOf","NodePropertyTypes","STRING","LISTOFSTRINGS","DATETIME","INT","FLOAT","DOUBLE","BOOLEAN","EMAIL","PHONENUMBER","NEW_LINE","ProgrammingLanguages","CSHARP","NodePropertyTypesByLanguage","Usings","COMMON_DATETIME_ARGS","nodeType","COMMON_STRING_ARGS","COMMON_LISTSTRING_ARGS","ValidationCases","types","vectors","content","cases","$true","e","_","long","$empty","floor","short","invalid","empty","invalid2","false","$false","true","self","b","$greater","notgreater","$less","notless","$equal_to","not_equal","id","ExecutorRules","ModelReference","Copy","AgentReference","ParentReference","AddModelReference","ExecutorUI","code","arguments","reference","method_reference","FilterRules","EqualsAgent","EqualsParent","EqualsTrue","EqualsFalse","EqualsModelRef","EqualsModelProperty","IsInModelPropertyCollection","IsNotInModelPropertyCollection","Many2ManyPropertyIsTrue","FilterUI","template","functionvariables","modelproperty","model2modelproperty","ValidationUI","Create_ManyToMany_Agent_Value__IListChild","Update_ManyToMany_Agent_Value__IListChild","Get_ManyToMany_Agent_Value__IListChild","Delete_ManyToMany_Agent_Value__IListChild","Create_Parent$Child_Agent_Value__IListChild","Update_Parent$Child_Agent_Value__IListChild","Get_Parent$Child_Agent_Value__IListChild","Delete_Parent$Child_Agent_Value__IListChild","Create_Object_Agent_Value__IListObject","Update_Object_Agent_Value__IListObject","Get_Object_Agent_Value__IListObject","Delete_Object_Agent_Value__IListObject","Get_Agent_Value__IListObject","Get_Object_Agent_Value__IListObject_By_Specific","Delete_M2M_By_Reference","Create_Parent_Child_Agent_Value__Child","Update_Parent_Child_Agent_Value__Child","Get_Parent_Child_Agent_Value__Child","Delete_Parent_Child_Agent_Value__Child","Create_Object_Agent_Value__Object","Update_Object_Agent_Value__Object","Update_Object_Agent_Value__Object_With_Object","Get_Object_Agent_Value__Object","Delete_Object_Agent_Value__Object","Create_Object_Agent_Many_to_Many_CompositeInput__Object","Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET","Create_Object__Object","Update_Object__Object","Delete_Object__Object","Get_Object__Object","Can_Execute_Agent_Parent_In_Valid_List","Login","Register","FunctionTemplateKeys","ModelOutput","UpdateModel","ReferenceClass","ModelProperty","Bool","CanExecute","ModelDeterminingProperty","AgentDeterminingProperty","Parent","AgentInstance","Agent","Item","AgentProperty","AgentType","User","ConnectionType","ManyToManyModel","UserInstance","CompositeInput","CompositeInputProperty","FunctionConstraintKeys","IsTypeOf","IsChild","IsList","IsSingleLink","IsModel","IsFunction","IsProperty","IsEnumerable","IsInstanceVariable","IsInputVariable","COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD","nodeTypes","COMMON_CONSTRAINTS_AGENT_OBJECT_MANY_TO_MANY_COMPOSITEINPUT_METHOD","AfterEffectsTemplate","AFTER_EFFECTS","template_call","templateKeys","parent","update_with","stream_process_change_parameter","useNodes","useMethodTypes","useString","COMMON_CONSTRAINTS_OBJECT_METHOD","COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD","COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD","COMMON_OUTPUT","INTERNAL_TEMPLATE_REQUIREMENTS","METHODS","PARAMETERS","PARAMETERSCLASS","CHANGECLASS","RESPONSECLASS","STREAMPROCESS","DETERMINING_PROPERTY","PARENTS_ID_PROPERTY","MODEL","CONSTRUCTORS","TEMPLATE","INTERFACE","PARENT","PROPERTY","METHOD","CREATE","UPDATE","PROCESS","FUNCTION_REQUIREMENT_KEYS","CLASSES","COMMON_FUNCTION_REQUIREMENTS","fs","readFileSync","attachment_methods","propreties","ToInterface","HTTP_METHODS","POST","GET","DELETE","PATCH","COMMON_FUNCTION_TEMPLATE_KEYS","model","function_name","user","user_instance","agent","agent_type","PERMISSION_DEFAULTS","implementation","interface_","params","VALIDATION_DEFAULTS","changeparameter","FILTER_DEFAULTS","metaparameter","MethodFunctions","title","interface","templates","permission","constraints","isList","method","template_keys","validation","asModel","ok","test","controller","parameters","body","parentGet","values","usingDefault","MethodTemplateKeys","ConditionTypes","InEnumerable","InExtension","ConditionTypeParameters","RefManyToMany","RefManyToManyProperty","Ref1","Ref2","Ref1UseId","Ref2UseId","Ref1Property","Ref2Property","ConditionTypeOptions","ConditionFunctionSetups","functions","bindTemplate","templateString","data","hasTemplate","RegExp","subregex","os","require","createGraph","version","major","minor","build","workspace","Titles","path","namespace","groups","groupLib","groupsNodes","nodesGroups","childGroups","parentGroup","referenceNodes","nodeLib","nodes","nodeLinks","nodeConnections","linkLib","links","graphs","classNodes","functionNodes","updated","visibleNodes","appConfig","Logging","IncludeScopes","LogLevel","Default","System","Microsoft","AppSettings","Local-AuthorizationKey","Local-EndPointUrl","use_local","EndPointUrl","AuthorizationKey","DatabaseId","AssemblyPrefixes","Use-SingleCollection","storage-key","single-thread","ConfirmEmailController","ConfirmEmailAction","HomeAction","HomeController","ResetPasswordAction","ResetPasswordController","SecurityKey","TokenExpirationInMinutes","DomainPort","GraphKeys","NAMESPACE","PROJECTNAME","COLORSCHEME","SERVER_SIDE_SETUP","FindLayoutRoot","root","res","find","DefaultCellProperties","style","display","flex","height","borderStyle","borderWidth","GetCellProperties","setup","properties","RemoveCellLayout","layout","FindLayoutRootParent","GetAllChildren","temp","incrementBuild","graph","incrementMinor","GetParameterName","parameter","getScopedGraph","options","scope","console","log","newGroup","callback","group","createGroup","addGroup","addLeaf","ops","leaf","leaves","addGroupToGroup","groupId","removeGroupFromGroup","clearGroup","createValidator","getMethodValidationType","methodValidation","methodType","methods","addMethodValidationForParamter","methodParam","methedParamProperty","createMethodValidation","methodValidationType","validators","createExecutor","addValidatator","validator","validatorArgs","removeValidator","getValidatorItem","item","getValidatorProperties","removeNode","existNodes","getNodesByLinkType","direction","TARGET","groupsContainingNode","removeLeaf","clearGroupDeep","success","v","removeNodeFromGroups","linksToRemove","source","target","getAllLinksWithNode","link","removeLink","clearLinks","en","GetManyToManyNodes","state","ids","NodesByType","GetNodeProp","addNode","node","DEFAULT_PROPERTIES","addNewNodeOfType","linkProperties","groupProperties","createNode","apply","JSON","parse","stringify","updateNode","rootNode","newLink","updateNodeProperty","prop","getGroup","hasGroup","nodeGroupProp","grandParent","gparentGroup","ancestores","getGroupAncenstors","anc","gp","updateGroupProperty","updateNodeGroup","GetNodeById","GetNode","updateClientMethod","methodParams","param","mparam","getClientMethod","getComponentPropertyList","hasComponentProperty","getComponentProperty","GetGroup","applyConstraints","functionType","functionConstraintObject","checkConstraints","functionConstraints","getNodesLinkedTo","validatorProperties","applyValidationNodeRules","currentGraph","isArray","excludeRefs","RequiredClassName","cls","node_name","getNodesFunctionsConnected","constraintKey","_link","getNodeLinksWithKey","ftk","functionTemplateKey","constraintObj","valid","FunctionMeetsConstraint","meets","updateLinkProperty","applyFunctionConstraints","getNodeFunctionConstraintLinks","linkConstraint","findMatchingConstraints","hasMatchingConstraints","GetLinkProperty","nodeToRemove","linkId","GetTargetNode","warn","core_group","internal_group","external_group","existingGroups","GetGroupProperty","_group","constraintKeys","constraint","new_node","core","internal","external","lcj","f","_targetNode","targetNode","targetNodeType","targetConstraint","linkWithConstraints","findLinkWithConstraint","linkWithConstraint","nodeToMatchWith","linkToParentParameter","getNodeLinkedTo","relationshipLink","findLink","nodeId","SOURCE","getNodeLinks","addLink","createLink","getNodeLinked","matchObject","obj1","obj2","GetLinkChainItem","chains","GetLinkChain","SetAffterEffectProperty","currentNode","afterMethod","afterEffectSetup","GetMethodNode","GetNodesLinkedTo","GetRootGraph","GetConnectedNodeByType","GetLinkChainFromGraph","GetCurrentGraph","op","il","newids","newnodes","_id","link_constraints","matchOneWay","noSameLink","oldLink","findLinkInstance","executeEvents","evt","on","args","function","EventFunctions","executeRemoveEvents","addEventFunction","isUIExtensionEnumerable","_node","config","isEnumeration","GetUIExentionEnumeration","list","GetUIExentionKeyField","keyField","removeValidatorItem","_validator","createEventProp","linkType","update_link","del_link","additionalChange","dirty","text","copyLink","GetNodesInsideGroup","seenGroups","GroupImportanceOrder","getDepth","VisualProcess","vgraph","collapsedNodes","filteredGraph","a","FilterGraph","depth","h","SetVisible","collapsingGroups","t_importance","sortedGroups","nodeGroupKey","_type","smallestsNonCrossingGroups","cg","g_","disappearingNodes","dt","head","mostimportant","_nodes","dupLink","vgroups","groupIndex","oldgroup","newgroup","og","DataChainFunctionKeys","Pass","StringConcat","ui","node_1","node_2","merge","MergeNode","VISUAL","APPLICATION","GRAPHS","VISUAL_GRAPH","DASHBOARD_MENU","SELECTED_NODE_BB","SIDE_PANEL_EXTRA_WIDTH","NodeConstants","NodeAttributePropertyTypes","ROUTINGNUMBER","CURRENCY","CARMAKE","SOCIALSECURITY","PHONE","CARMODEL","CARYEAR","VIN","LONGSTRING","CREDITCARD","LENGTH","INCH","DIMENSION","MONEY","COUNTRY","DEBIT","MONTH","STATE","CHOICE","NUMBER","SLIDER","DATE","TIME","ACCOUNTNUMBER","ADDRESS","COLLECTION","OBJECT","RADIO","CHECKLIST","GEOLOCATION","YEAR","OptionsTypes","CHOICELIST","CAPITALIZE_FIRST_LETTER","UI_UPDATE","GetC","section","uiReducer","generateDataSeed","dataSeed","_generateDataSeed","_getState","GetCodeName","jsName","GetLogicalChildren","generateDataSeeds","Visual","IsCurrentNodeA","Node","SELECTED_NODE","Use","GraphMethods","GetGroupProp","GetConditionNodes","GetState","GetJSCodeName","GetModelPropertyChildren","GetModelPropertyNodes","GetMethodParameters","methodId","GetChildComponentAncestors","ancestors","GetMethodDefinition","GetMethodFunctionType","GetMethodFunctionValidation","GetPermissionNode","GetValidationNode","GetDataSourceNode","GetModelItemFilter","GetPermissionsConditions","_getPermissionsConditions","GetValidationsConditions","_getValidationConditions","GetModelItemConditions","GetConditionSetup","condition","GetDataChainEntryNodes","GenerateChainFunction","chain","GetDataChainParts","observables","setArgs","subscribes","setProcess","GetDataChainArgs","GenerateDataChainMethod","GenerateObservable","GenerateArgs","GenerateSetProcess","GetSubscribes","nodeName","lastLink","GetLastChainLink","lastLinkindex","lastNodeName","parts","kindex","GenerateChainFunctions","GetDataChainNext","current","groupDaa","GetDataChainNextId","next","oldlength","nodeGroup","dataChains","dc","_dc","g","GetNodesInGroup","GetDataChainFrom","IsEndOfDataChain","lastpart","GetPermissionsSortedByAgent","GetNodesSortedByAgent","GetValidationsSortedByAgent","GetMethodNodeProp","GetArbitersForNodeType","permissions","models","methodProps","GetMethodProps","GetGraphNode","GetAgentNodes","GetUsers","GetArbitersForPermissions","GetArbitersForValidations","GetNameSpace","graphRoot","GetArbiterPropertyDefinitions","tabs","language","arbiters","tab","arbiter","GetArbiterPropertyImplementations","GetCombinedCondition","conditions","final_result","tabcount","clauses","selectedConditionSetup","GetSelectedConditionSetup","GetConditionsClauses","clause","finalClause","adjacentId","clauseSetup","clauseKey","modelId","propertyName","validatorId","GetConditionClause","safeFormatTemplateProperty","GetNodesMethod","clauseKeyNodeId","nodeProperty","many2manyProperty","many2many","many2manyMethod","nodeNodeId","conditionTemplate","agent_property","model_property","model_type","connection_type","connection_is_true","GetConnectionClause","listItems","enumeration","enums","enum_","GenerateConstantList","connection_property","connection_value","permissionId","conditionSetup","_getConditions","GetComponentNodes","GetComponentNodeProperties","componentPropertiesList","GetConnectedScreenOptions","refId","GetMethodNodeSelectOptions","GetNodeCode","GetMethodPropNode","GetMethodOptions","VisualEq","ModelNotConnectedToFunction","agentId","packageType","Application","GetVisualGraph","SaveApplication","dispatch","UIC","Graphs","SaveGraph","visualGraph","now","toggleVisual","getState","GUID","setVisual","setApplication","SELECTED_LINK","HOVERED_LINK","CONTEXT_MENU_VISIBLE","CONTEXT_MENU_MODE","SelectedNode","toggleDashboardMinMax","GetNodeTitle","GetNodes","CanChangeType","GetScreenNodes","GetModelNodes","GetConfigurationNodes","GetMaestroNode","GetControllerNode","HasCurrentGraph","useRoot","GetNodeFromRoot","NodesConnectedTo","_dispatch","GetDispatchFunc","GetStateFunc","setTestGetState","setState","clearPinned","graphOperation","operation","CHANGE_NODE_PROPERTY","removeCurrentNode","REMOVE_NODE","togglePinned","GetFunctionType","methodNode","GetMethodsProperties","GetMethodsProperty","GetMethodFilterParameters","all","GetMethod_Parameters","GetMethodFilterMetaParameters","_x","nodeClass","paramClass","paramName","GetMethod_MetaParameters","GetMethodPermissionParameters","GetMethodValidationParameters","GetPermissionMethod","GetCurrentScopedGraph","CURRENT_GRAPH","GetSubGraphs","addNewSubGraph","rootGraph","newgraph","setRootGraph","setAppsettingsAssemblyPrefixes","prefixes","GRAPH_SCOPE","SELECTED_TAB","DEFAULT_TAB","SIDE_PANEL_OPEN","PARAMETER_TAB","SCOPE_TAB","QUICK_MENU","newNode","NEW_NODE","GetSelectedSubgraph","BuildPackage","_package","methodFunctionDefinition","_const","UPDATE_GRAPH_TITLE","NEW_LINK","CHANGE_NODE_TEXT","ADD_DEFAULT_PROPERTIES","NEW_PROPERTY_NODE","NEW_PERMISSION_NODE","NEW_ATTRIBUTE_NODE","ADD_LINK_BETWEEN_NODES","NEW_CONDITION_NODE","ADD_NEW_NODE","REMOVE_LINK_BETWEEN_NODES","REMOVE_LINK","NEW_CHOICE_ITEM_NODE","NEW_PARAMETER_NODE","NEW_FUNCTION_OUTPUT_NODE","NEW_MODEL_ITEM_FILTER","NEW_AFTER_METHOD","NEW_VALIDATION_ITEM_NODE","NEW_CHOICE_TYPE","NEW_VALIDATION_TYPE","NEW_OPTION_ITEM_NODE","NEW_OPTION_NODE","NEW_CUSTOM_OPTION","UPDATE_GROUP_PROPERTY","NEW_DATA_SOURCE","NEW_COMPONENT_NODE","NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE","NEW_EXTENSION_LIST_NODE","NEW_EXTENTION_NODE","NEW_SCREEN_OPTIONS","ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY","APPLY_FUNCTION_CONSTRAINTS","ADD_NEW_REFERENCE_NODE","SET_DEPTH","PerformGraphOperation","commands","executeGraphOperation","operations","propertyNodes","dp","_graph","classes_that_must_exist","function_node","functionConstraintRequiredClasses","constraintModelKey","constraint_nodes","nodes_one_step_down_the_line","cn","nextNodes","functionNode","class","matching_nodes","_cnode","error","scopedGraph","masterNode","refNode","referenceType","Colors","toNodeSelect","HandlerEvents","scaffold","message","reply","reactnative","NAME_SPACE_TEMPLATE","NamespaceGenerator","space","usings","namespaceTemplate","imports","CONTROLLER_CLASS_TEMPLATE","CONTROLLER_CLASS_FUNCTION_TEMPLATE","CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE","ControllerGenerator","TAB","controllers","_controllerTemplateClass","_controllerTemplateFunction","_controllerTemplateFunctionGet","controllerTemplateClass","codeName","userNode","maestro_functions","maestro","tempfunctions","maestroName","maestro_function","ft","tempFunction","parameter_route","parameter_values","functionName","httpMethod","httpRoute","methodProperties","modelNode","compositeInput","output_type","http_route","http_method","maestro_interface","input_type","jNL","codeName#alllower","Generate","MODEL_TEMPLATE","MODEL_PROPERTY_TEMPLATE","MODEL_STATIC_TEMPLATES","MODEL_ATTRIBUTE_TEMPLATE","ModelGenerator","GenerateModel","templateSwapDictionary","base_model","account_enabling_func","attributes","connectedProperties","propertyTemplate","attributeTemplate","staticFunctionTemplate","validatorFunctions","staticFunctions","propNode","connectedAttributes","property_instance_template","np","propType","propSwapDictionary","property_type","attr","options_lists","options_list","ol","_ols","ReverseRules","_key","validations","vnode","vnodeItem","choice_name","validation_rules","validation_list","choice_type","attributeSwapDictionary","ui_title","singular","uiValidationType","staticDic","modelTemplate","EXTENSION_CLASS_TEMPLATE","EXTENSION_PROPERTY_TEMPLATE","EXTENSION_NEW_INSTANCE","EXTENSION_NEW_PROPERTY","EXTENSION_NEW_INSTANCE_LIST","EXTENSION_NEW_INSTANCE_LIST_ADD","EXTENSION_NEW_INSTANCE_DICTIONARY","EXTENSION_NEW_INSTANCE_DICTIONARY_ADD","EXTENSION_NEW_TEMPLATE_LIST","PROPERTY_TABS","ExtensionGenerator","extensionNode","def","Error","extensions","_extensionClassTemplate","_extensionPropertyTemplate","_extensionNewInstance","_extensionNewProperty","_extensionNewInstanceList","_extensionNewInstanceListAdd","_extensionNewInstanceDictionary","extension","extensionClassTemplate","statics","constants","uiExtensionDefinition","modelName","definition","extensionPropertyTemplate","instances","instance","item_index","NL","Tabs","dictionary","temp_instance","inst","addings","co","ConstantsDeclaration","TEST_CASE","TEST_CLASS","TEST_CASE_PROPERTY","PERMISSIONS_INTERFACE","PERMISSIONS_CASE_EXTENSION","PERMISSIONS_CASE_ENUMERATION","PERMISSIONS_CASE_INCLUDED_IN_LIST","PERMISSIONS_METHODS","PERMISSIONS_ARBITER_PROP","PERMISSIONS_IMPL","PERMISSIONS_INTERFACE_METHODS","MATCH_TO_MANY_REFERENCE_PARAMETER","MANY_TO_MANY_CONSTRUCTOR","MATCH_REFERENCE","PermissionGenerator","dNode","enu","ea","dpNode","enumerationNode","ext_allowed","enumerationName","ext_disallowed","createInstanceEnumerationListName","_createEnumerationInstanceList","constants_allowed","extensionName","_createExtensionInstanceList","dependingPermissionNodes","listOfCases","propertyNodeLinkedToByDependencyPermissionNode","propertyNode","agentLinkExists","extentionNode","useEnumeration","useExtension","tempBindingValues","parent_property","value_property","casename","instance_list","variable","permissionCaseEnumerationTemplate","enumInstance","createEnumerationInstanceList","allowed-values-list","permissionCaseExtensionTemplate","extensionInstance","createExtensionInstanceList","extension_propery_key","extension_value_property","appliedPermissionLinks","enumRef","getReferencedValue","_manyToManyMatchCondition","_matchReferenceCondition","permissionsEnabledFor","mmrp","ref1UseId","ref2UseId","data_property","relationship","sameInstance","parms","use_parent","ine","ref1","createStringList","enumerate","neg","GetTestExtensionNodeValues","EnumerateCases","testCaseProperty","_enum","setup_cases","ispositive","which","is_model_parameter","_case","ref2Model","ref1Property","ref2Property","ref","resultSuccess","pindex","manyToMany","many_to_many_register","many_to_many_constructor","testCase","ref1type","ref2type","ref2","logicalChildrenTypes","many_to_many","modelCodeName","permissionValueType","EnumeratePermissionCases","testIndex","set_agent_properties","set_model_properties","set_parent_properties","set_match_reference_properties","set_match_many_reference_properties","parent_setup","many_to_many_arbiter_constructor","parent_agent_are_the_same","agents","_testTemplate","_permissionInterface","_permissionImplementation","_permissionInterfaceMethods","_permissionMethods","_permissionArbiters","streamProcessChangeClassExtension","permissionInterface","testPermission","methodImplementations","methodInterfaces","testMethodPermisionCases","matchingPermissionNodes","PermissionMatches","permissionCases","permissionCodeNames","matchingPermissionNode","GenerateCases","testTemp","GenerateTestCases","perms","permKey","parent_type","parm","permissionNode","permissionMethods","permissionInterfaceMethods","case_result","tname","iname","tests","VALIDATION_CLASS","VALIDATION_TEST","VALIDATION_PROPERTY","ValidationRuleGenerator","validation_test_vectors","vects","results","rest","validatorNode","validatorPs","vld","attribute_type_arguments","_ _","ext","enumName","enumerateValidationTestVectors","vector","successCase","propertyInformation","properylines","vindex","projected_value","propline","set_properties","_validation_class","_validation_property","_validation_test","_testClass","funct","functNode","propertyValidationStatements","attribute_type","testProps","test_name","attribute_parameters","expected_value","templateRes","testTemplate","STREAM_PROCESS_ORCHESTRATION_TEMPLATE","STREAM_PROCESS_ORCHESTRATION_ROOT_TEMPLATE","STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS","STREAM_PROCESS_AGENT_CRUD_UPDATE","STREAM_PROCESS_AGENT_CRUD_CREATE","STREAM_PROCESS_AGENT_CRUD_DELETE","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE","STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES","STREAM_METHOD_TESTS","CREATE_MODEL_TESTS","StreamProcessOrchestrationGenerator","_streamProcessFunctionTemplate","streamProcessFunctionTemplate","modelCode","model#allupper","model#lower","_streamAgentMethods","modelexecution","executors","executor","model_output","afterEffectMethods","ae_calls","ae_functions","afterEffectMethod","ae_type","ae_setup","key_val","startsWith","update_method","update_call","delete_method","delete_call","create_method","create_call","bind_params","model_output#lower","agent_type#lower","methods_interface","_ex","sortedValidations","agentName","_stramMethodTests","_createModelTests","agent_process_orc_mocks","agentTypeNode","stream_process_orchestration_mocks","func_Cases","GetFunctionValidators","validatorCases","GenerateValidationCases","isModel","caseindex","v1","v2","agent_properties","model_properties","set_agent_propeties","test_result","_streamProcessTemplate","_streamProcessInterfaceTemplate","GenerateAgent","strappers","GenerateStreamOrchestrations","strapperInstances","GenerateStreamOrchestrationInstances","agent_type_methods","arbiters_strappers","arbiter_instances","GenerateProcessTests","streamOrchestration","agent_methods","GenerateAgentMethods","agent_methods_interface","GenerateAgentInterfaceMethods","GenerateStaticMethods","GenerateStrappers","GenerateStrappersInstances","static_methods","stream_process_tests","RETURN_GET_CLASS","FILTER_PROPERTY_FUNCTION_VALUE","FILTER_PROPERTY_FUNCTION_VALUE_EQUALS","ModelItemFilterGenerator","out_","filterModelParams","predicate_parameters","_return_get_class","modelitemfilter","itemFilter","filterModel","filterMethodParameters","meta_parameters","funcs","filterPropFunction","filters","propName","_validatorProps","validatorValue","filterPropFunctionValueEquals","mNode","meta_parameter","code_name","MAESTRO_CLASS_TEMPLATE","MAESTRO_INTERFACE_TEMPLATE","MAESTRO_FUNCTION_TESTS","MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS","get_agent_manytomany_listchild_interface","MAESTRO_FUNCTION_GET_TESTS","MaestroGenerator","maestros","_maestroTemplateClass","_MAESTRO_INTERFACE_TEMPLATE","testFunctionTemplate","testFunctionGetSameParentTemplate","testFunctionGetTemplate","maestroTemplateClass","functionsInterface","permissionValidationCases","function_type","interfaceFunction","value_type","userTypeNode","parentNode","modelFilterNode","manyToManyNode","connectingNode","predicates","modelItemFilters","out_predicate","connect_type","manyNodes","manyNode","agentAndModelIsTheSame","bindOptions","composite-input","model_input","comma","filter_function","permission_function","EnumerateFunctionValidators","pvc","pvc2","agentProperties","findIndex","agentProps","itemProperties","itemProps","templ","set_many_to_many_properties","testname","injectedServices","injectedPermissionServices","set_permissions","permissions_properties","injected_services","ti","maestro_interface_template","STREAM_PROCESS_CHANGE_CLASS_EXTENSION","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS","ChangeParameterGenerator","afterEffects","_streamProcessChangeClassExtension","_streamProcessChangeClassConstructors","_streamProcessChangeClassConstrictorsTest","testClass","constructors","updates_with","afterEffect","spcp_template","model_update","change_type","streamProcessChangeClassConstructors","streamProcessChangeClassConstrictorsTest","change_param_name","CONSTANTS_CLASS","ConstantsGenerator","_constantsClass","constantsClass","consts","constants_type","GetMethodDefinitionPermissionSection","methodDefinition","GetAgentPermissionInterface","permissionSection","GetPermissionMethodParametersImplementation","GetPermissionMethodInterface","BuildAgentPermissionInterface","GetAgentPermissionImplementation","GetPermissionMethodImplementation","constructor","BuildAgentPermissionImplementation","paramProperty","GetPermissionMethodParameters","GenerateAgentPermissionInterfacesAndImplementations","STREAM_PROCESS_TEMPLATE","STREAM_PROCESS_TEMPLATE_TESTS","STREAM_PROCESS_FUNCTION_TEMPLATE","StreamProcessGenerator","staticMethods","_streamProcessTemplateTests","staticTests","GenerateStaticMethodTests","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED","ChangeResponseGenerator","_streamProcessChangeClassConstructorsTest","_streamProcessChangeClassConstructorsFailed","_test","model2","streamProcessChangeClassConstructorsFailed","streamProcessChangeClassConstructorsTest","parameterTemplate","arrange","changeParameterName","parameter_properties","act","parameters_property","assert","EXECUTOR_CLASS","EXECUTOR_INTERFACE","EXECUTOR_CREATE","EXECUTOR_CREATE_COMPOSITE_INPUT","EXECUTOR_ENTRY_METHODS","EXECUTOR_ENTRY_METHODS_INTERFACE","EXECUTOR_METHOD_CASE","EXECUTOR_UPDATE","EXECUTOR_GET","EXECUTOR_METHOD_COMPOSITE_INPUT","EXECUTOR_METHODS","EXECUTOR_METHODS_INTERFACE","ExecutorGenerator","executor_nodes","_executor_class","_executor_class_interface","_executor_methods","_executor_methods_composite_input","_executor_methods_interface","_executor_create","_executor_create_composite_input","_executor_update","_executor_get","_exe_method","_exe_method_interface","_exe_case","agentFunctionDic","agentFunctionInterfaceDic","agentModelDic","agmCombos","fun","executor_node","modelOutput","modelOutputNode","agentNode","functType","executorProperties","amdid","templateBindings","references","ref_key","execution_method","property_sets","agent_parameter","data_parameter","change_parameter","method_name","change","method_guts","templateResInterface","amd","_cases","func_name","static_methods_interface","staticentry","templateInterfaceRes","RETURN_GET_FUNCTION","ModelReturnGenerator","_return_get_methods","allfilters","filterNode","MODEL_GET_CLASS","MODEL_GET_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD","ModelGetGenerator","_get_class","_get_methods","_get_methods_many_to_many","_get_method_many_to_many_get_child","allmodels","item_property","childrenTypes","namesAreUnique","ct","query","NAVIGATION","APP_METHOD","ComponentTypes","Badge","Button","full","color","onPress","nowrap","Card","CardItem","CheckBox","Container","Content","Fab","Footer","FooterTab","Form","H1","H2","H3","Header","left","right","Icon","Image","library","nodeFilter","item_attributes","parameterConfig","label","InputGroup","Left","List","specialLayout","datasource","component_options","Picker","Radio","Right","Segment","Separator","Spinner","Subtitle","SwipeRow","Switch","Tab","TabBar","TabContainer","TabHeader","Text","boolean","Textarea","Thumbnail","Title","Toast","View","LoginSelector","InstanceTypes","ScreenInstance","Instance","AppState","PropInstance","ApiProperty","ScreenParam","AddAnotherIfTheseDontMakeSense","GetListItemNode","GetRNConsts","prop_consts","GetNodeComponents","GetPropertyConsts","model_consts","GetNodeComponentsKeys","cell","cellProperties","cellModel","GetModelConsts","model_propconsts","cellModelProperty","GetModelPropertyConsts","GetRNModelConst","GetRNModelConstValue","layoutObj","currentRoot","buildLayoutTree","cellRoot","tree","addNewLine","GenerateMarkupTag","_style","createSection","count","spaces","GenerateScreens","temps","screens","GetScreens","moreresults","screen","screenOptions","reactScreenOption","screenOption","GetScreenOption","GenerateImport","GetScreenImports","elements","component_did_mount","GetComponentDidMount","GenerateScreenMarkup","screenOptionSrc","GenerateRNScreenOptionSource","GenerateScreenOptionSource","relative","relativeFilePath","BindScreensToTemplate","GetItemRender","listItemNode","GenerateComponentImport","GetItemData","relativePath","layoutSrc","componentType","extraimports","item_render","wrapOnPress","templateStr","relPath","GenerateRNComponents","componentBindingDefinition","bindProps","writeApiProperties","bindComponent","screen_options","relative_depth","src","components","component","componentProperties","instanceType","GetRNModelInstances","clientMethod","bodytext","parameterstext","jsClientMethodName","methodParameters","componentNodeProperties","componentModel","c_props","c_props_options","c_prop_option","componentModelName","pressfunc","onPressEvent","navigation","screenParameters","navigationProperties","parameterProperty","sparam","propPropName","listitem","navfunc","listItem","onChange","dataBinding","parentLayoutProperties","parentComponentApiConfig","componentApi","apiProperties","apiConfig","modelProperty","apiProperty","events","evntHandles","handles","ScreenGenerator","GenerateNavigation","importStatements","reactNativeOptions","temp_template","namejs","combos","NavigationGenerator","KeyGenerator","appName","GenerateModelKeys","temp2","alterNate","color1","color2info","color3success","color4","color5warning","colors","_i","GenerateUi","ConfigurationGenerator","https","ControllerActionGenerator","serviceTemplate","endpoints","maestroNode","controllerNode","asForm","methodName","service_methods","controllerActions","method_call","GenerateService","DataChainGenerator","GetMethodDefinitionValidationSection","GetValidationEntries","as_interface","validation_entry","validation_entry_template","validatorNodes","valNode","validationSection","validation_case_template","validationNode","switch_parameter","GetAgentValidationInterface","GetValidationMethodParametersImplementation","GetValidationMethodInterface","validation_entries","BuildAgentValidationInterface","GenerateAgentValidationInterfacesAndImplementations","validation_","GetValidationMethodImplementation","BuildAgentValidationImplementation","GetAgentValidationImplementation","_interface","GetValidationMethodParameters","ValidatorGenerator","Generator","enumerations","larg","streamTypes","functionsTypes","ModelExceptionGenerator","ReactNativeScreens","ReactNativeNavigation","ReactNativeKeys","ReactNativeConfiguration","ReactNativeControllerActions","ReactNativeDataChainFunctions","ipcRenderer","remote","dialog","openGraph","openRedQuickBuilderGraph","toggleContextMenu","setRightMenuTab","num","showOpenDialog","getCurrentWindow","RED_QUICK_FILE_EXT$","fileName","undefined","endsWith","RED_QUICK_FILE_EXT","readFile","encoding","err","opened_graph","newRedQuickBuilderGraph","newGraph","event","arg","saveGraphToFile","showSaveDialog","updateGraphProperty","writeFile","saveGraph","graphFile","existsSync","writeFileSync","setRemoteState","saveCurrentGraph","setWorkingDirectory","workspaces","platform","updateWorkSpace","hub","send","mess","msg","Promise","resolve","then","fail","publishFiles","scaffoldProject","filesOnly","solutionName","ensureDirectory","code_types","code_type","generate","area","CodeTypeToArea","generateFiles","generateReactNative","server_side_setup","generateFolderStructure","dir","lib","target_dir","directories","readdirSync","dirPath","lstatSync","isDirectory","reldir","substr","file","_dir_parts","sep","tempDir","mkdirSync","ValidationRule","mapStateToProps","mapDispatchToProps","bindActionCreators","UIA","IPCEvents","RemoteActions","UIConnect","connect","padding","valueOf","abs","max","pad","charAt","unCamelCase","dashboardlogo_jsx","className","_ref","header_jsx","dashboardnavbar_jsx","sidebartoggle_jsx","me","onClick","data-toggle","role","sidebartoggle_ref","NavBarMenu","paddingRight","navbarmenu_jsx","ApplicationMenu","RelativeMenuCss","position","zIndex","width","minheight","top","paddingTop","mainsidebar_jsx","notactive","mainsidebar_ref","ControlSideBarMenu","controlsidebarmenu_jsx","ControlSideBarMenuItem","icon","description","ControlSideBarMenuHeader","TabPane","active","tabpane_jsx","FormControl","_class","sidebarform","external_react_default","createElement","_extends","SelectInput","selectinput_jsx","disabled","onSelect","defaultSelectText","textinput_jsx","TextInput","placeholder","inputgroup","textinput_ref","BATCH_MODEL","BATCH_AGENT","BATCH_FUNCTION_NAME","batchmenu_jsx","tabpane_TabPane","formcontrol_FormControl","selectinput_SelectInput","textinput_TextInput","batchmenu_ref","SideBarHeader","sidebarheader_jsx","checkbox_jsx","checked","ButtonList","buttonlist_jsx","items","isSelected","cursor","overflow","whiteSpace","textOverflow","SideBar","open","extraWidth","extraWide","sidebar_jsx","treeviewmenu_jsx","TreeViewMenu","toggle","hideIcon","hideArrow","treeviewmenu_ref","SideBarMenu","sidebarmenu_jsx","TreeViewItem","treeviewitem_jsx","sidemenucontainer_jsx","sidemenucontainer_ref","mainsidebar_Header","sidebar_SideBar","sidebarmenu_SideBarMenu","treeviewmenu_TreeViewMenu","visual","_ref2","GetSpecificModels","outer_commands","setTimeout","perOrModelNode","GetAllModels","option","nodePackageType","CreateFunction","CreateLoginModels","quickmethods_jsx","content_jsx","minHeight","NAVIGATION_PARAMETERS","navigationparametermenu_jsx","_ui_type","componentTypes","prop_obj","nodeproperty","treeMenu","innertree","navparameters","navigationparametermenu_ref","screenactivitymenu_jsx","controlsidebarmenu_ControlSideBarMenuHeader","controlsidebarmenu_ControlSideBarMenu","controlsidebarmenu_ControlSideBarMenuItem","datasourceactivitymenu_jsx","SideBarTabs","sidebartabs_jsx","SideBarTab","ariaExapanded","sidebartab_jsx","aria-expanded","screenoptionsactivitymenu_jsx","checkbox_CheckBox","buttonlist_ButtonList","ServiceTypes","Facebook","Twitter","Google","ServiceTypeSetups","UseFacebook","FacebookAppId","FacebookAppSecret","UseMicrosoftAccount","MicrosoftClientId","MicrosoftClientSecret","UseGoogle","GoogleClientId","GoogleClientSecret","UseTwitter","TwitterConsumerKey","TwitterConsumerSecret","serviceType","propinputs","serviceTypeSetup","prop_setup","serviceactivitymenu_jsx","SideBarContent","sidebarcontent_jsx","NavBarButton","navbarbutton_jsx","Box","primary","backgroundColor","styleAll","maxheight","maxHeight","overflowY","background","box_jsx","footer","EnumerationEditMenu","super","enumerationeditmenu_jsx","onComplete","executoritem_jsx","validatorItem","function_variables","filterParameters","selectedValidator","_nodes_types","editlist","list_enums","list_key_field","old_one","executoritem_ref","getMethodReferenceItem","modelParameters","node_value","node_ref","adjacentNodeId","manyNodeSelector","manyNodePropertySelector","manyNodePropertyMethodSelector","executoritem_ref2","_ref3","methodNodeProperties","_ref4","genericpropertymenu_jsx","sidebarheader_SideBarHeader","genericpropertymenu_ref","genericProperty","methodParamSetup","_ui","propertyExecutors","genericpropertymenu_ref2","_validates","visualKey","selectedValidations","selKInner","onRemove","executoritem","validationUis","reverse","onAdd","genericpropertymenu_ref3","genericpropertycontainer_jsx","genericpropertycontainer_ref","PERMISSION","FILTER","VALIDATION","CONDITION_FILTER_MENU_PARAMETER","CONDITION_FILTER_MENU_PARAMETER_PROPERTIES","DATA_SOURCE","conditionfiltermenu_jsx","interestingNode","methodDefinitionKey","view","conditionfiltermenu_ref2","conditionfiltermenu_ref","methodFunctionType","methodFunctionValidation","param_list_key","param_property_list_key","selectedParameter","getTop","filterMenuParameter","filterMenuParameterProperties","methodProperty","getMethodValidationForParameter","updateValidation","genericpropertycontainer","subTitle","genericpropertymenu","remove","removeMethodValidationParameter","conditionfiltermenu_ref3","methodValidationForParameter","conditionfiltermenu_ref4","noop","dispatch_dispatch","Dispatch","set","slice","concat","typename","T","copy","that","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","src_namespace","prefix","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","nextId","Local","matcher","selector","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","__on","removeEventListener","capture","wrap","addEventListener","none","src_selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","sparse","update","EnterNode","datum","_next","_parent","appendChild","child","insertBefore","keyPrefix","bindIndex","enter","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending","NaN","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_names","getAttribute","classedAdd","names","add","classedRemove","setAttribute","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","remove_remove","removeChild","dispatchEvent","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","match","size","each","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","selection","groups0","groups1","m0","m1","merges","group0","group1","order","compare","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","append","insert","before","typenames","on_parseTypenames","src_selection","DragEvent","subject","dx","dy","identifier","define","factory","extend","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","exec","Rgb","parseInt","rgbn","rgba","hsla","rgbConvert","rgb","opacity","color_rgb","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","k","pow","darker","round","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","t2","t3","labConvert","Lab","Hcl","cos","sin","rgb2xyz","xyz2lab","lab","lab2xyz","xyz2rgb","hcl","atan2","sqrt","hclConvert","z","A","B","C","D","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v3","cosh","sinh","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","end","rgbSpline","spline","number","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","lastIndex","q","one","zero","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","scale","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","taskHead","taskTail","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","tween","tick","duration","ease","schedule_create","init","schedule","schedule_get","schedule_set","interrupt","tweenValue","transition","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","custom","polyIn","exponent","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","Transform","point","applyX","applyY","invert","location","invertX","invertY","rescaleX","domain","range","rescaleY","MIN_DIMENSIONAL_SIZE","iconSize","textSize","mapScale","mapTranslate","draw","mouseDown","mouseUp","mouseMove","componentDidMount","mouseStartEvent","mouseMoved","mouseMoveEvt","clientX","clientY","componentWillUnmount","domObj","calculateNodeTextSize","div","visibility","maxWidth","getBoundingClientRect","bb","force","Cola","d3","margin","linkDistance","avoidOverlaps","handleDisconnected","outer","vis","redraw","wheelDelta","zoomFactor","panning","makeSVG","forEach","getLabelText","$_nodes","innerBounds","bounds","inflate","route","sourceIntersection","arrowStart","features","innerbit","titles","drag","$node","buildNode","selected","els","onLinkClick","onLinkHover","onNodeClick","selectedColor","topdiv","files","GetNodeTypeIcon","degree","rise","Y","run","X","assign","$force","$color","cola","applyNodeVisualData","nn","componentWillReceiveProps","removedNodes","selectedNodes","nl","removedLinks","duplicateLink","selectedLinks","graph_groups","removedGroups","duplicateGroup","mindmapgroup","applyGroup","shouldComponentUpdate","mindmap_jsx","is_agent","is_parent","many_to_many_enabled","permission_nodes","modelactivitymenu_jsx","sidemenucontainer","clipboard","writeText","agent_nodes","function_types","funcKey","functionactivitymenu_jsx","show_dependent","use_model_as_type","property_nodes","propertyactivitymenu_jsx","localeCompare","dataChainFuncType","showModel","showProperty","showNode1","showNode2","node_inputs","datachainactivitymenu_jsx","getControls","aftereffectsactivitymenu_jsx","ae_nodes","controls","choice_nodes","validation_nodes","show_choice","show_validations","show_options","show_extenions","option_nodes","extension_nodes","attributeformcontrol_jsx","nodelist_jsx","nodelist_ref","permissionmenu_jsx","choiceactivitymenu_jsx","xi","TreeViewItemContainer","treeviewitemcontainer_jsx","uiparameters_jsx","uiparameters_ref","toFilterString","uiParameter","createScreenParameter","getComponentApiList","getComponentApi","selectedCell","selectedComponentApiProperty","componentactivitymenu_jsx","componentProps","instanceTypes","componentpropertymenu_jsx","modelType","modelProp","addComponentProperty","removeComponentProperty","selectedItem","input","modelfilteractivitymenu_jsx","agentinput","componentapimenu_jsx","addComponentApi","removeComponentApi","validationactivitymenu_jsx","validationitemactivitymenu_jsx","modelNodes","validatoractivitymenu_jsx","optionactivitymenu_jsx","executorpropertymenu_jsx","configurationactivitymenu_jsx","conditionType","ref2_properties","ref1_properties","model_options","getProperties","conditionactivitymenu_jsx","getMatchManyReferenceProperty","getEnumeration","getMatchReferenceProperty","nodeProperties","logicalChildren","allowed","disallowed","enumerationValues","matchRef","enumeration_nodes","refManyToMany_properties","refManyToManyExists","refManyToManyProperty","refManyToManyCondition","propertyType","mustBeModel","mustBeProperty","mustBeFunction","linkedNodes","parameteractivitymenu_jsx","show_custom","custom_options","optionitemformcontrol_jsx","executorpropertyactivitymenu_jsx","executorpropertyactivitymenu_ref","modelKey","nodeProp","executorpropertyactivitymenu_ref2","executorUI","executoractivitymenu_jsx","propertyValidations","validatorpropertymenu_jsx","validatoritem_jsx","validatoritem_ref","validatoritem_ref2","validatoritem_ref3","validatorpropertyactivitymenu_jsx","validatorpropertyactivitymenu_ref","validatoritem","valiationUi","extentiontypes","ExtensionListActivityMenu_jsx","targetNodeId","requestorNodeId","permissionsactivitymenu_jsx","referencable_nodes","referenceactivitymenu_jsx","goomenu_jsx","menuItems","mi","pointerEvents","visible","goomenu_ref","onToggle","href","htmlFor","goomenu_ref2","goomenu_ref3","goomenu_ref4","in","stdDeviation","in2","GooMenuSVG","_ref5","choicelistitemactivitymenu_jsx","modelfiltermenu_jsx","fprops","datachainoperator_jsx","groupExitNode","externalExitNode","datachainoperator_ref","Slider","slider_jsx","parseFloat","DropDownMenu","menuType","ariaExpanded","usermode","usermenu","userbody","userheader","dropdown_jsx","dropdown_extends","headerText","header","TabContent","tabcontent_jsx","userfooter_jsx","tabcontainer_jsx","EnumeratedTable","dataFunc","rows","enumeratedtable_jsx","columns","inde","columnButtons","fx","headers","extensiondefinitionmenu_jsx","form","editKey","tabKey","addBtn","tab_key","btns","extensiondefinitionmenu_ref","extensiondefinitionmenu_ref2","extensiondefinitionmenu_ref3","userfooter_Tab","enumeratedtable_EnumeratedTable","extensiondefinitionmenu_ref4","obj","extensiondefinitionmenu_ref5","dependsOn","methodactivitymenu_jsx","functionObject","methodparams","methodpropertymenu_jsx","oldConnect","MAESTRO_DETAILS_MENU","maestrodetailsmenu_jsx","othernodes","onode","treeviewitem_TreeViewItem","maestrodetailsmenu_ref","NODE_MANAGEMENT_MENU","NODE_MANAGEMENT","gi","groupKey","groupNodes","gn","gni","nodemanagement_jsx","METHOD_PARAMETERS","methodparameteremenu_jsx","method_parameters","bodyparameters","methodparameters","methodparameteremenu_ref","commonactivitymenu_jsx","modelfilteritemactivitymenu_jsx","hasLogicalChildren","hasLogicalNieces","modelrelationshipmenu_jsx","depthchoice_jsx","box_Box","depthchoice_ref","maestroactivitymenu_jsx","inputVariable","getMenuMode","contextmenu_jsx","menuMode","menuitems","CONTROLLER_DETAILS_MENU","controllerdetailsmenu_jsx","controllerdetailsmenu_ref","controlleractivitymenu_jsx","getTargetNodes","targetPropertyNodes","extensionNodeId","extensionValues","targetPropertyNode","permissionsdependentactivitymenu_jsx","DropDownMenuItem","dropdownmenuitem_jsx","fontSize","GRAPH_MENU","graphmenu_jsx","dropdown_DropDownMenu","dropdownmenuitem_DropDownMenuItem","SECTION_LIST","sections","subGraphs","sg","sectionlist_jsx","enumerationactivitymenu_jsx","enumerationeditmenu_EnumerationEditMenu","sectionedit_jsx","TopViewer","topviewer_jsx","docco","hljs","overflowX","hljs-comment","fontStyle","hljs-quote","hljs-keyword","hljs-selector-tag","hljs-literal","hljs-subst","hljs-number","hljs-string","hljs-doctag","hljs-selector-id","hljs-selector-class","hljs-section","hljs-type","hljs-params","hljs-title","fontWeight","hljs-tag","hljs-name","hljs-attribute","hljs-variable","hljs-template-variable","hljs-regexp","hljs-link","hljs-symbol","hljs-bullet","hljs-built_in","hljs-builtin-name","hljs-meta","hljs-deletion","hljs-addition","hljs-emphasis","hljs-strong","tab_jsx","tabs_jsx","MODEL_CODE","CODE_VIEW_TAB","codeString","projectname","colorscheme","generatedContent","viewTab","classKey","gcKey","codeview_jsx","topviewer_TopViewer","tabcontainer_TabContainer","tabs_Tabs","tab_Tab","tabcontent_TabContent","external_react_syntax_highlighter_default","LayoutCreator","overrides","layoutcreator_jsx","onSelectionClick","stopPropagation","preventDefault","borderColor","cellChildren","nodeLayout","layoutview_jsx","componentNodes","GetConnectedNodesByType","cellStyle","cellEvents","selectedLayoutRoot","newkey","SetCellsLayout","flexDirection","justifyContent","alignItems","layoutcreator_LayoutCreator","NODE_MENU","CONNECTING_NODE","LINK_DISTANCE","dashboard_jsx","goomenu_GooMenuSVG","dashboardlogo_Header","sidebartoggle","graphmenu","sectionedit","treeviewitemcontainer_TreeViewItemContainer","depthchoice","sectionlist","nodemanagement","maestrodetailsmenu","controllerdetailsmenu","choicelistitemactivitymenu","datachainactivitymenu","conditionfiltermenu","commonactivitymenu","modelactivitymenu","sidebarcontent_SideBarContent","controlleractivitymenu","modelfilteritemactivitymenu","datasourceactivitymenu","functionactivitymenu","configurationactivitymenu","methodactivitymenu","componentactivitymenu","attributeformcontrol","parameteractivitymenu","validatoractivitymenu","executoractivitymenu","propertyactivitymenu","validationitemactivitymenu","choiceactivitymenu","maestroactivitymenu","screenactivitymenu","validationactivitymenu","optionactivitymenu","components_ExtensionListActivityMenu","screenoptionsactivitymenu","optionitemformcontrol","permissionsactivitymenu","extensiondefinitionmenu","modelfilteractivitymenu","permissionsdependentactivitymenu","aftereffectsactivitymenu","enumerationactivitymenu","serviceactivitymenu","componentpropertymenu","componentapimenu","validatorpropertymenu","referenceactivitymenu","executorpropertymenu","modelrelationshipmenu","methodpropertymenu","permissionmenu","modelfiltermenu","validatorpropertyactivitymenu","executorpropertyactivitymenu","batchmenu","datachainoperator","uiparameters","navigationparametermenu","methodparameteremenu","quickmethods","contextmenu","minified","nodeSelectionMenuItems","selected_node_bb","menu_left","menu_top","main_content","hoveredLink","getLinkInstance","dashboard_ref","goomenu_NavBarButton","data-tid","header_Header","dashboard_ref2","dashboardnavbar_Header","dashboard_ref3","navbarmenu_NavBarMenu","navbarbutton_NavBarButton","dashboard_ref4","float","confirm","VC","dashboard_ref5","slider_Slider","_ref6","_ref7","_ref8","_ref9","_ref10","content_Content","codeview","layoutview","mindmap_MindMap","boundingBox","selectedId","sidebartabs_SideBarTabs","sidebartab_SideBarTab","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","Root_jsx","Routes_jsx","App_App","external_react_router_","routes","HOME","Dashboard","INCREMENT_COUNTER","DECREMENT_COUNTER","increment","decrement","incrementIfOdd","counter","incrementAsync","action","newstate","updateUI","createRootReducer","history","combineReducers","router","connectRouter","createHashHistory","rootReducer","routerMiddleware","enhancer","applyMiddleware","thunk","selectedConfigureStore","configureStore","initialState","createStore","store","app_jsx","external_react_hot_loader_","external_react_redux_","connected_react_router_lib","Root_ref","getElementById","__RewireAPI__","__ResetDependency__","__set__","__Rewire__","__GetDependency__","__get__","_typeof","iterator","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_propTypes2","_reactRedux","_reactRouter","_actions","default","createConnectedRouter","structure","getIn","toJS","ConnectedRouter","_get__2","context","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","inTimeTravelling","unsubscribe","subscribe","_toJS","pathnameInStore","pathname","searchInStore","search","hashInStore","hash","_props$history$locati","pathnameInHistory","searchInHistory","hashInHistory","handleLocationChange","onLocationChanged","unlisten","listen","subClass","superClass","setPrototypeOf","_inherits","_get__","_props","contextTypes","shape","isRequired","oneOfType","basename","_getGlobalObject","global","theGlobalVariable","_RewireModuleId__","_getRewireModuleId__","globalVariable","__$$GLOBAL_REWIRE_NEXT_MODULE_ID__","_getRewireRegistry__","__$$GLOBAL_REWIRE_REGISTRY__","_getRewiredData__","registry","rewireData","INTENTIONAL_UNDEFINED","_RewireAPI__","variableName","Router","_get_original__","_set__","_reset__","_with__","rewiredVariableNames","previousValues","reset","catch","addPropertyToAPIObject","_typeOfOriginalExport","addNonEnumerableProperty","isExtensible","LOCATION_CHANGE","CALL_HISTORY_METHOD","payload","updateLocation","_len","go","goBack","goForward","routerActions","actions","newObj","_interopRequireWildcard","_ConnectedRouter2","_reducer2","_middleware2","_selectors2","createAll","wildcardImport","reduce","filteredWildcardImport","_filterWildcardImport__","createMatchSelector","getAction","getLocation","_createAll2","_plain2","_action$payload","arr","arr2","from","_toConsumableArray","createConnectRouter","fromJS","initialRouterState","createSelectors","lastPathname","lastMatch","url","matchPath","_getIn","_getIn2","it","UNSCOPABLES","ArrayProto","isObject","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","O","aFunction","invoke","arraySlice","factories","fn","partArgs","bound","F","len","construct","__e","is","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","expProto","U","W","R","__g","dP","createDesc","un","cof","propertyIsEnumerable","setToStringTag","IteratorPrototype","NAME","LIBRARY","Iterators","$iterCreate","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","done","anObject","dPs","enumBugKeys","IE_PROTO","createDict","iframeDocument","iframe","contentWindow","write","lt","close","Properties","IE8_DOM_DEFINE","toPrimitive","Attributes","getKeys","has","toObject","ObjectProto","arrayIndexOf","$keys","bitmap","SRC","$toString","TPL","inspectSource","safe","isFunction","tag","stat","shared","uid","copyright","toInteger","ceil","IObject","defined","px","USE_SYMBOL","addToUnscopables","step","iterated","_t","_k","Arguments","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","ReactPropTypesSecret","emptyFunction","shim","componentName","propFullName","secret","getShim","ReactPropTypes","bool","symbol","any","arrayOf","element","instanceOf","objectOf","oneOf","exact","checkPropTypes","PropTypes","super_","u","N","prefilter","normalize","lhs","rhs","w","groupCollapsed","groupEnd","logger","actionTransformer","titleFormatter","timestamp","toFixed","collapsed","level","diff","started","startedTime","prevState","took","nextState","L","M","stateTransformer","errorTransformer","predicate","logErrors","diffPredicate","getHours","getMinutes","getSeconds","getMilliseconds","DeepDiff","observableDiff","applyDiff","applyChange","revertChange","isConflict","noConflict","transformer","defaults","createLogger"],"mappings":"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","file":"renderer.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/index.js\");\n","// @flow\r\nimport * as React from 'react';\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return <React.Fragment>{children}</React.Fragment>;\r\n  }\r\n}\r\n","export function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n((array) => {\r\n    if (!array.relativeCompliment) {\r\n        var extrasection_relativeCompliment = {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func, output) {\r\n                var collection = this;\r\n                var result = [];\r\n\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {//function (x) { return x == collection[i]; }\r\n                    if (!othercollection.some(func.bind(null, collection[i]))) {\r\n                        result.push(collection[i]);\r\n                    }\r\n                    else if (output) {\r\n                        output.push(collection[i]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        if (!array.relativeCompliment) {\r\n            Object.defineProperty(array, 'relativeCompliment', extrasection_relativeCompliment);\r\n        }\r\n    }\r\n\r\n    if (!array.intersection) {\r\n        Object.defineProperty(array, 'intersection', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func) {\r\n                var collection = this;\r\n                var result = [];\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {\r\n                    for (var j = othercollection.length; j--;/**/) {\r\n                        if ((func(othercollection[j], collection[i]))) {\r\n                            result.push(collection[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!array.unique) {\r\n        Object.defineProperty(array, 'unique', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var result = [];\r\n                var finalresult = [];\r\n                func = func || function (x) { return x; };\r\n                var collection = this;\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    //if (func(collection[i])) {\r\n                    if (result.indexOf(func(collection[i])) === -1) {\r\n                        result.push(func(collection[i]));\r\n                        finalresult.push(collection[i]);\r\n                    }\r\n                    //}\r\n                }\r\n                return finalresult;\r\n                //return result;\r\n            }\r\n        });\r\n    }\r\n    if (!array.removeIndices) {\r\n        //removeIndices\r\n        Object.defineProperty(array, 'removeIndices', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (indices) {\r\n                indices = indices.orderBy(function (x, y) { return y - x; });\r\n                var collection = this;\r\n                indices.map(function (index) {\r\n                    collection.splice(index, 1);\r\n                });\r\n\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.interpolate) {\r\n        Object.defineProperty(array, 'interpolate', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop, func) {\r\n                var collection = this;\r\n                func = func || function (x) { return x; };\r\n                for (var i = start; i < stop; i++) {\r\n                    if (collection instanceof Float32Array) {\r\n                        collection[i - start] = (func(i));\r\n                    }\r\n                    else\r\n                        collection.push(func(i, i - start));\r\n                }\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.orderBy) {\r\n        Object.defineProperty(array, 'orderBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this.map(function (x) { return x; });\r\n                return collection.sort(func);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!array.groupBy) {\r\n        Object.defineProperty(array, 'groupBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this;\r\n                var result = {};\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    var t = func(collection[i]);\r\n                    result[t] = result[t] || [];\r\n                    result[t].push(collection[i]);\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!array.subset) {\r\n        Object.defineProperty(array, 'subset', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop) {\r\n                var collection = this;\r\n                stop = Math.min(collection.length, stop === undefined || stop === null ? collection.length : stop);\r\n                start = Math.min(collection.length, start === undefined || start === null ? collection.length : start);\r\n                start = start < 0 ? 0 : start;\r\n                stop = stop < 0 ? 0 : stop;\r\n                var result = this instanceof Float32Array ? new Float32Array(stop - start) : [];\r\n                for (var i = start; i < stop; i++) {\r\n                    if (this instanceof Float32Array) {\r\n                        result[i - start] = collection[i];\r\n                    }\r\n                    else {\r\n                        result.push(collection[i]);\r\n                    }\r\n\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n})(Array.prototype)\r\n\r\n\r\nString.prototype.toJavascriptName = function () {\r\n    var str = this || '';\r\n    if (str[0]) {\r\n        return str[0].toLowerCase() + str.split('').subset(1).join('');\r\n    }\r\n    return str;\r\n}\r\nconst NEW_LINE = `\r\n`;\r\nArray.prototype.tightenPs = function () {\r\n    var str = this || '';\r\n\r\n    return (str.join(NEW_LINE)).split(NEW_LINE).filter(x => x.trim()).join(NEW_LINE);\r\n}","export const AddNode = 'Add Node';\r\nexport const RemoveNode = 'Remove Node';\r\nexport const RemoveValidation = 'Remove Validation';\r\nexport const RemoveExecution = 'Remove Execution';\r\nexport const SelectValidation = 'Select Validation';\r\nexport const SelectExecution = 'Select Execution';\r\nexport const SelectedValidations = 'Selected Validations';\r\nexport const Remove = 'Remove';\r\nexport const GraphOperations = 'Graph Operations';\r\nexport const Type = 'Type';\r\nexport const UIParameters = 'UI Parameters';\r\nexport const Navigation = 'Navigation';\r\nexport const UseHttps = 'Use Https';\r\nexport const Parameter = 'Parameter';\r\nexport const ServerSideSetup = 'Service Side Setup';\r\nexport const AddCondition = 'Add Condition';\r\nexport const Body = 'Body';\r\nexport const AsOutput = 'As output';\r\nexport const AddComponentDidMount = 'Add Event ComponentDidMount';\r\nexport const GraphPropertiesMenu = 'Graph Properties';\r\nexport const ComponentPropertyMenu = 'Component Properties';\r\nexport const ComponentAPIMenu = 'Component API';\r\nexport const Domain = 'Domain';\r\nexport const ClientMethod = 'Client Method';\r\nexport const Layout = 'Layout';\r\nexport const NodeLabel = 'Node Label';\r\nexport const NodeType = 'Node Type';\r\nexport const EntryPoint = 'Entry Point';\r\nexport const Nodes = 'Nodes';\r\nexport const Models = 'Models';\r\nexport const MethodName = 'Method Name';\r\nexport const OutputModel = 'Output Model';\r\nexport const AddComponentNew = 'Add Component';\r\nexport const Height = 'Height';\r\nexport const Get_Object_Agent_Value__IListObject_By_Specific = 'Get Specific Items';\r\nexport const Component = 'Component';\r\nexport const AddDataSource = 'Add Data Source';\r\nexport const ComponentType = 'Component Type';\r\nexport const ConditionType = 'Condition Type';\r\nexport const Width = 'Width';\r\nexport const QuickMethods = 'Quick Methods';\r\nexport const Reference = 'Reference';\r\nexport const Depth = 'Depth';\r\nexport const Label = 'Label';\r\nexport const SetupLayout = 'Setup Layout';\r\nexport const New = 'New';\r\nexport const FlexDirection = 'Flex Direction';\r\nexport const SetListItem = 'Set List Item';\r\nexport const ClearLayout = 'Clear Layout';\r\nexport const Flex = 'Flex';\r\nexport const Controllers = 'Controllers';\r\nexport const ServiceActivity = 'Service Activity';\r\nexport const CodeTypes = 'Code Types';\r\nexport const ProjectName = 'Project Name';\r\nexport const Project = 'Project';\r\nexport const NameSpace = 'NameSpace';\r\nexport const AddScreenOptions = 'Add Screen Options';\r\nexport const Pinned = 'Pinned';\r\nexport const PinnedShortCut = 'Ctrl + P'\r\nexport const ColorScheme = 'Color Scheme';\r\nexport const EnableMenu = 'Enable Menu';\r\nexport const ScreenOptions = 'Screen Options';\r\nexport const Collapsed = 'Collapsed';\r\nexport const GenericLink = 'General Link';\r\nexport const OnLoad = 'On Load';\r\nexport const ChildLink = 'Child link';\r\nexport const OnFailureLink = 'On failure result';\r\nexport const OnAction = 'On Action';\r\nexport const OnItemSelection = 'On Item Selection';\r\nexport const OnSuccessLink = 'On Succesful result';\r\nexport const UIType = 'UI Type';\r\nexport const SelectedExecutors = 'Selected Executions';\r\nexport const Priority = 'Priority';\r\nexport const Agents = 'Agents';\r\nexport const UseAsRoot = 'Use as top element';\r\nexport const OnChange = ' On Change';\r\nexport const OnClick = 'On Click';\r\nexport const OnPress = 'On Press';\r\nexport const SelectProperty = 'Select Property';\r\nexport const DisallowedEnums = 'Disallowed values';\r\nexport const ManyToMany = 'Many 2 Many';\r\nexport const Many2ManyProperties = 'Many 2 Many Properties';\r\nexport const FunctionVariables = 'Function Variables';\r\nexport const Methods = 'Methods';\r\nexport const AllowedEnums = 'Allowed values';\r\nexport const ModelActions = 'Model Actions';\r\nexport const SetDefaultPropertiesDescription = 'Set default properties, on the node';\r\nexport const SetDefaultProperties = 'Set default props';\r\nexport const AddProperty = 'Add Property';\r\nexport const CreateObjectDataSeed = 'Create Object Data Seed';\r\nexport const UICheckBox = 'UI Checkbox';\r\nexport const PermissionsDependencyAttribute = 'Permission Dependency Attribute';\r\nexport const GeneratedConstants = 'Generated Constants';\r\nexport const KeyField = 'Key fields, are used as constants through out the app.'\r\nexport const GeneratedMethodsConstants = 'Generated Methods Constants';\r\nexport const TargetModel = 'Target Model';\r\nexport const UseEnumeration = 'Use Enumeration';\r\nexport const Enumeration = 'Enumeration';\r\nexport const PermissionDependsOnProperties = 'Properties permissions depend on.';\r\nexport const CodeUser = 'Code User';\r\nexport const AddPropertyDescription = 'Add a property to the model';\r\nexport const AddAttribute = 'Add Attribute';\r\nexport const AddAttributeDescription = 'Add an attribute to the property';\r\nexport const UIName = 'UI Name';\r\nexport const UINameDescription = 'The text that will be visible to the client.';\r\nexport const UISingular = 'UI Singular';\r\nexport const MatchIds = 'Match Ids';\r\nexport const ConnectionExists = 'Connection Exists';\r\nexport const Unknown = 'Unknown';\r\nexport const PropertyValueType = 'Property value type';\r\nexport const PropertyModelType = 'Property model type';\r\nexport const AddReference = 'Add reference node';\r\nexport const FunctionSetup = 'Function Setup';\r\nexport const IsReferenceList = 'Is Reference List';\r\nexport const Common = 'Common';\r\nexport const AgentOperator = 'Agent Operator';\r\nexport const Enumerable = 'Enumerable';\r\nexport const Value = 'Value';\r\nexport const AppMenu = 'Application Menu';\r\nexport const CodeName = 'Code Name';\r\nexport const ValueName = 'Value Name';\r\nexport const AgentName = 'Agent Name';\r\nexport const FileMenu = 'File Menu';\r\nexport const Code = 'Code';\r\nexport const MainNavigation = 'Main Navigation';\r\nexport const AddParameter = 'Add parameter';\r\nexport const AddParameterDescription = 'Parameters are the required things need for the function to execute successfully';\r\nexport const AddFunctionOutput = 'Add Function Output';\r\nexport const Menu = 'Menu';\r\nexport const AddFunctionOutputDescription = 'The output of the function';\r\nexport const IsAgent = 'Agent';\r\nexport const IsOwnedByAgents = 'Is Owned By Agents';\r\nexport const IsOwnedByAgentsDescriptions = 'That would mean any agent/model could own this object.';\r\nexport const IsUser = 'User';\r\nexport const ParameterType = 'Parameter Type';\r\nexport const OwnedResources = 'Owned Resources';\r\nexport const AddAfterMethods = 'Add after method';\r\nexport const AddAfterMethodsDescription = 'Adding an after method node, will allow you to append functions to execute after.';\r\nexport const AddModelItemFilter = 'Add model item filter';\r\nexport const AddModelItemFilterDescription = 'Add model item filter for get functions'\r\nexport const PermissionType = 'Permissions';\r\nexport const PermissionAttributes = 'Permission Attributes';\r\nexport const OwnedResourcesDescription = 'Check if permissions are for resources owned by source model.'\r\nexport const PermissionActions = 'Permission Actions';\r\nexport const PermissionValueType = 'Permission Value Type';\r\nexport const Permissions = {\r\n    Create: 'Create',\r\n    Get: 'Read',\r\n    GetAll: 'Read All',\r\n    Getall: 'Read All',\r\n    Delete: 'Delete',\r\n    Getbyowner: 'Get by owner',\r\n    Update: 'Update'\r\n};\r\nexport const ChoiceTypes = 'Choice types';\r\nexport const ChoiceListActions = 'Choice Actions';\r\nexport const AddChoice = 'Add Choice';\r\nexport const AddChoiceDescription = 'Add choice type';\r\nexport const AddPermissionDescription = 'Permission nodes describe the ability of connected models on downstream models';\r\nexport const AddPermission = 'Add permission nodes'\r\nexport const AddChoiceItem = 'Add choice item';\r\nexport const AddChoiceItemDescription = 'Add a new choice item';\r\nexport const Select = 'Select';\r\nexport const Close = 'Close';\r\nexport const ValidationListActions = 'Validation Actions';\r\nexport const AddValidationItem = 'Add validation item';\r\nexport const AddValidationItemDescription = 'Add rule to validate user input.';\r\nexport const UseUIValidations = 'Use Validation';\r\nexport const AddValidationList = 'Add validation type';\r\nexport const AddValidationListDescription = 'Create a new shared validation list';\r\nexport const ValidationItemActions = 'Validation Item Actions';\r\nexport const Add = 'Add';\r\nexport const ValidationTypes = 'Validation Types';\r\nexport const ValidationType = 'Validation Type';\r\nexport const OptionListActions = 'Option Actions';\r\nexport const AddOptionItem = 'Add option';\r\nexport const AddOptionItemDescription = 'Add a new option item';\r\nexport const Name = 'Name';\r\nexport const OptionsType = 'Option Types';\r\nexport const UseCustomOption = 'Use custom option';\r\nexport const UseUIOptions = 'Use options';\r\nexport const AddOptionList = 'Create a new option list';\r\nexport const AddOptionListDescription = 'Add option list description';\r\nexport const DependentProperty = 'Depends on';\r\nexport const UseDependentProperty = 'Has dependent property';\r\nexport const UseUIExtensions = 'Use Extensions';\r\nexport const IncludedInList = 'Included in list';\r\nexport const IsEqualTo = 'Is equal';\r\nexport const UseEqualDescription = 'Use equivalancy';\r\nexport const UseEqual = 'Use equal';\r\nexport const IsEqualToDescription = 'If value is equal, it will pass';\r\nexport const ExcludedFromList = 'Excluded from list';\r\nexport const ExcludedFromListDescription = `The agent's id will have to be excluded from the list to be accepted`;\r\nexport const IncludedInListDescription = `The agent's id will have to be included in the list to be accepted.`\r\nexport const ExtensionTypes = 'Extension Types';\r\nexport const AddExtensionList = 'Create an extension list';\r\nexport const AddExtensionListDescription = 'Extension list customize dropdowns/lists.';\r\nexport const ExtensionListTypeActions = 'Extension List Actions';\r\nexport const AddExtensionNode = 'Add Extension';\r\nexport const ExtensionOptions = 'Extension(s)';\r\nexport const ExtensionDefinitionTypes = 'Extension Definition Types';\r\nexport const AddExtensionNodeDescription = 'Add extension node description';\r\nexport const ExtensionDefinition = 'Extension Definition';\r\nexport const StitchEnd = 'Stitch End';\r\nexport const Extensions = 'Extensions';\r\nexport const ExtensionDefinitionMenu = 'Define custom extensions';\r\nexport const ExtensionConfig = 'Extension Config';\r\nexport const DependsOn = 'Depends On';\r\nexport const UseId = 'Use Id';\r\nexport const NodeProperties = 'Node Properties';\r\nexport const InstanceType = 'Instance Type';\r\nexport const Input = 'Input';\r\nexport const Property = 'Property';\r\nexport const AddDataChain = 'Add data chain';\r\nexport const SplitDataChain = 'Split data chain';\r\nexport const MergeChain = 'Merge data chain';\r\nexport const Condition = 'Condition';\r\nexport const DependsOnDescription = 'Defines if a the property associated with this extension is visually dependent on the value of another property on the same object.'\r\nexport const DependentPropertyDescription = 'The property that the current property will be associated.';\r\nexport const MatchingValue = 'Matching Value';\r\nexport const MatchingValueDescription = 'The value that the associated property will have to equal, to enable the current property';\r\n\r\nexport const PermissionImpl = 'Permission Implementation';\r\nexport const FunctionTypes = 'Function Types';\r\n\r\nexport const Create_Object_Agent_Many_to_Many_CompositeInput__Object = 'Create Object by Agent M2M with Composite Input';\r\n\r\nexport const Create_Object__Object = 'Create Object => Object';\r\n\r\nexport const Get_ManyToMany_Agent_Value__IListChild = 'Get Many to Many => IList<Child>';\r\nexport const Create_ManyToMany_Agent_Value__IListChild = 'Create Many to Many => IList<Child>';\r\nexport const Update_ManyToMany_Agent_Value__IListChild = 'Update Many to Many => IList<Child>';\r\nexport const Delete_ManyToMany_Agent_Value__IListChild = 'Delete Many to Many => IList<Child>';\r\n\r\nexport const Create_Parent$Child_Agent_Value__IListChild = 'Create Parent/Child => IList<Child>';\r\nexport const Update_Parent$Child_Agent_Value__IListChild = 'Update Parent/Child => IList<Child>';\r\nexport const Get_Parent$Child_Agent_Value__IListChild = 'Get Parent/Child => IList<Child>';\r\n\r\nexport const Create_Object_Agent_Value__IListObject = 'Create Object by Agent => IList<Object>';\r\nexport const Update_Object_Agent_Value__IListObject = 'Update Object by Agent => IList<Object>';\r\nexport const Delete_Object_Agent_Value__IListObject = 'Delete Object by Agent => IList<Object>';\r\nexport const Get_Object_Agent_Value__IListObject = 'Get Object by Agent => IList<Object>';\r\nexport const Get_Agent_Value__IListObject = 'Get Objects for an Agent';\r\nexport const Can_Execute_Agent_Parent_In_Valid_List = 'Can Execute Agent Parent In Valid List';\r\n\r\nexport const Get_Object_Agent_Value__Object = 'Get Object by Agent';\r\nexport const Update_Object_Agent_Value__Object = 'Update Object by Agent';\r\nexport const Update_Object_Agent_Value__Object_With_Object = 'Update Object by Agent with object';\r\n\r\nexport const Functions = 'Functions';\r\nexport const Login = 'Login';\r\nexport const Register = 'Register';\r\nexport const AddFunction = 'Add function';\r\nexport const MaestroDetails = 'Maestro Details';\r\n\r\nexport const HttpMethod = 'Http Methods';\r\nexport const AddMaestros = 'Add Maestro';\r\nexport const HttpRoute = 'Relative Http Route';\r\nexport const NotIncludeInController = `Don't include in controller`;\r\nexport const AsForm = 'As Form';\r\nexport const Maestros = 'Maestros';\r\nexport const SaveAs = 'Save as ...';\r\nexport const NoApiPrefix = 'No api prefix';\r\nexport const Save = 'Save';\r\nexport const Open = 'Open';\r\n\r\nexport const Validator = 'Validator';\r\nexport const PublishFiles = 'Publish Files';\r\nexport const Scaffold = 'Scaffold';\r\nexport const SetWorkingDirectory = 'Set Working Directory';\r\nexport const CommonProperties = 'Common Properties';\r\nexport const ModelActivityMenu = 'Model Activity Menu';\r\nexport const MindMap = 'Mind Map';\r\nexport const CodeView = 'Code View';\r\n\r\nexport const ParentTo = 'Parent to';\r\nexport const IsParent = 'Is parent';\r\nexport const IsCompositeInput = 'Is composite input';\r\nexport const ExcludeFromController = 'Exclude from controller';\r\nexport const UserModel = 'User Model';\r\n\r\nexport const PropertyGeneratedType = 'Generated Type';\r\n\r\nexport const ManyToManyNexus = 'Many to many';\r\nexport const ManyToManyExists = 'Many to many item must exists';\r\nexport const ManyToManyNexusModel = 'Many to Many model';\r\n\r\nexport const ManyToManyNexusDescription = 'This property will be a quick access for many to many relationships.';\r\n\r\n\r\nexport const HasLogicalChildren = 'Has logical children';\r\nexport const LogicalChildrenTypes = 'Logical children types';\r\nexport const LogicalNieceTypes = 'Logical niece types';\r\nexport const HasLogicalChildrenDescription = 'Children have references to this node, as some sort of logical parent.'\r\nexport const HasLogicalNieces = 'Has logical nieces';\r\nexport const HasLogicalNiecesDescription = 'Children have references to this node and others potentially as some sort of logical uncle/aunt. This is for many to many relationships.'\r\nexport const UseModelAsType = 'Use Model as Type';\r\nexport const CustomFunction = 'Custom Function';\r\nexport const CustomFunctionDescription = 'Function can be constructed in an internal graph.';\r\n\r\nexport const AddNewSection = 'Add New Section';\r\nexport const Sections = 'Sections';\r\nexport const AddNewSectionDescription = 'Adds a new section to the root graph.';\r\nexport const SectionEdit = 'Enter sub graph name';\r\nexport const DefaultGraphTitle = 'Red Quick Graph';\r\nexport const DefaultSubGraphTitle = 'Red Quick Sub Graph';\r\nexport const ClearPinned = 'Clear Pinned';\r\nexport const Filter = 'Filter';","import * as _ from '../utils/array';\r\nimport fs from 'fs';\r\n\r\nexport const NodeTypes = {\r\n    Concept: 'concept',\r\n    Model: 'model',\r\n    DataSource: 'data-source',\r\n    Property: 'model-property',\r\n    ModelFilter: 'model-filter',\r\n    ScreenContainer: 'screen-container',\r\n    Screen: 'screen',\r\n    ScreenCollection: 'screen-collection',\r\n    ScreenItem: 'screen-item',\r\n    Attribute: 'attribute-property',\r\n    ChoiceList: 'choice-list',\r\n    Permission: 'permission',\r\n    Configuration: 'configuration',\r\n    PermissionDependency: 'permission-dependency',\r\n    ComponentNode: 'component-node',\r\n    Condition: 'condition',\r\n    ModelItemFilter: \"model-item-filter\",\r\n    Enumeration: 'enumeration', //Basically a list of const string.\r\n    // ChoiceListItem: 'choice-list-item',\r\n    ValidationList: 'validation-list',\r\n    ValidationListItem: 'validation-list-item',\r\n    Validator: 'validator',\r\n    Executor: 'executor', // performs the final acts or data manipulation.\r\n    OptionList: 'option-list',\r\n    OptionListItem: 'option-list-item',\r\n    OptionCustom: 'option-custom',\r\n    ScreenOption: 'screen-option',\r\n    ExtensionTypeList: 'extension-type-list',\r\n    ExtensionType: 'extension-type',\r\n    Function: 'function',\r\n    Method: 'method',//NGRX like effect\r\n    AfterEffect: 'after-effect', // executes after a method finishes successfully.\r\n    Action: 'action', //NGRX like action\r\n    Parameter: 'parameter',\r\n    FunctionOutput: 'function-output',\r\n    Controller: 'controller',\r\n    Maestro: 'maestro',\r\n    Services: 'services',\r\n    ReferenceNode: 'referenceNode', //Is a standing for a node that is at a higher level,\r\n    ClassNode: 'class-node',\r\n    DataChain: 'data-chain'\r\n}\r\nexport const NodeTypeIcons = {};\r\nexport function GetNodeTypeIcon(type) {\r\n    if (!NodeTypeIcons[type]) {\r\n        let files = fs.readdirSync('./app/css/svg');\r\n        Object.values(NodeTypes).map((key, index) => {\r\n            NodeTypeIcons[key] = `./css/svg/${files[index % files.length]}`;\r\n        })\r\n    }\r\n    return NodeTypeIcons[type];\r\n}\r\nexport const ExcludeDefaultNode = {\r\n    [NodeTypes.Condition]: true,\r\n    [NodeTypes.ModelItemFilter]: false\r\n};\r\nexport const GeneratedTypes = {\r\n    ChangeParameter: 'change-parameter',\r\n    ChangeResponse: 'change-response',\r\n    Constants: 'constants',\r\n    Validators: 'validator-generated',\r\n    Permissions: 'permissions-generated',\r\n    Executors: 'executors',\r\n    ModelItemFilter: 'model-item-filter',\r\n    ModelReturn: 'model-return',\r\n    ModelGet: 'model-get',\r\n    ModelExceptions: 'model-exceptions',\r\n    StreamProcess: 'stream-process',\r\n    StreamProcessOrchestration: 'stream-process-orchestration',\r\n    //  ValidationRule: 'validation-rule'\r\n}\r\nexport const ReactNativeTypes = {\r\n    Screens: 'screens',\r\n    Navigation: 'navigation',\r\n    Keys: 'keys',\r\n    ControllerActions: 'controller-actions',\r\n    Configuration: 'configuration',\r\n    DataChainFunctions: 'data-chain'\r\n}\r\nexport const IdentityManagement = {\r\n    RedQuickViews: 'RedQuickViews'\r\n}\r\nexport const STANDARD_TEST_USING = [\r\n    'Microsoft.VisualStudio.TestTools.UnitTesting',\r\n    'RedQuick.Storage',\r\n    'RedQuickCore.Worker',\r\n    'Moq',\r\n    'Autofac',\r\n    'RedQuickCore.Worker.Hosts',\r\n    'RedQuick.Configuration',\r\n    'Microsoft.Extensions.Configuration.Json'\r\n]\r\nexport const STANDARD_CONTROLLER_USING = [\r\n    'RedQuick.Data',\r\n    'RedQuick.Attributes',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Validation',\r\n    'RedQuickCore.Validation.Rules',\r\n    'RedQuick.Interfaces.Arbiter',\r\n    'RedQuick.Configuration',\r\n    'RedQuick.Util',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Interfaces.Data',\r\n    'RedQuick.UI',\r\n    'System',\r\n    'System.Collections',\r\n    'System.Collections.Generic',\r\n    'System.Linq',\r\n    'System.Net',\r\n    'System.Net.Http',\r\n    'System.Threading.Tasks'\r\n]\r\nexport const GeneratedConstants = {\r\n    Methods: 'Methods',\r\n    StreamTypes: 'StreamType',\r\n    FunctionName: 'FunctionName'\r\n}\r\nexport const GeneratedTypesMatch = {\r\n    [GeneratedTypes.ChangeParameter]: NodeTypes.Model\r\n}\r\nexport const ColorStates = {\r\n    Error: 'Error'\r\n}\r\nexport const NotSelectableNodeTypes = {\r\n    [NodeTypes.ReferenceNode]: true,\r\n    [NodeTypes.PermissionDependency]: true,\r\n    [NodeTypes.Condition]: true\r\n}\r\nexport const NodeTypeColors = {\r\n    [ColorStates.Error]: '#FF0000',\r\n    [NodeTypes.Concept]: '#DD4B39',\r\n    [NodeTypes.ModelItemFilter]: '#4ECDC4',\r\n    [NodeTypes.Model]: '#713E5A',\r\n    [NodeTypes.Property]: '#484349',\r\n    [NodeTypes.Screen]: '#3A405A',\r\n    [NodeTypes.Attribute]: '#414770',\r\n    [NodeTypes.ChoiceList]: '#457B9D',\r\n    [NodeTypes.ValidationList]: '#A8DADC',\r\n    [NodeTypes.ValidationListItem]: '#EA526F',\r\n    [NodeTypes.OptionList]: '#2EC4B6',\r\n    [NodeTypes.OptionListItem]: '#856A5D',\r\n    [NodeTypes.OptionCustom]: '#403F4C',\r\n    [NodeTypes.ExtensionTypeList]: '#2C2B3C',\r\n    [NodeTypes.ExtensionType]: '#1B2432',\r\n    [NodeTypes.Method]: '#FE5F55',\r\n    [NodeTypes.Permission]: '#383F51',\r\n    [NodeTypes.Function]: '#553D36',\r\n    [NodeTypes.Parameter]: '#684A52',\r\n    [NodeTypes.FunctionOutput]: '#857885',\r\n    [NodeTypes.Services]: '#59FFA0',\r\n    [NodeTypes.ClassNode]: '#C3BAAA',\r\n    [NodeTypes.Maestro]: '#780116',\r\n    [NodeTypes.Condition]: '#CAFE48',\r\n    [NodeTypes.Validator]: '#151522',\r\n    [NodeTypes.ModelFilter]: '#312313',\r\n    [NodeTypes.Executor]: '#2176FF',\r\n    [NodeTypes.ReferenceNode]: '#F7B538',\r\n    [NodeTypes.ScreenCollection]: '#A9DBB8',\r\n    [NodeTypes.ScreenItem]: '#020887',\r\n    [NodeTypes.ScreenContainer]: '#60B2E5',\r\n    [NodeTypes.ComponentNode]: '#B7245C',\r\n    [NodeTypes.DataSource]: '#002500',\r\n    [NodeTypes.Condition]: '#F90093',\r\n    [NodeTypes.DataChain]: \"#FF6B6B\"\r\n\r\n}\r\n\r\nexport const FunctionGroups = {\r\n    External: 'external',\r\n    Internal: 'internal',\r\n    Core: 'core'\r\n}\r\nexport const GroupProperties = {\r\n    IsExternal: 'isExternal',\r\n    FunctionGroup: 'FunctionGroup',\r\n    GroupEntryNode: 'GroupEntryNode',\r\n    GroupExitNode: 'GroupExitNode',\r\n    ExternalExitNode: 'ExternalExitNode',\r\n    ExternalEntryNode: 'ExternalEntryNode'\r\n}\r\nexport const NameSpace = {\r\n    Model: '.Models',\r\n    StreamProcess: '.ActionStream',\r\n    Executors: '.Executors',\r\n    Tests: '.Tests',\r\n    Extensions: '.Extensions',\r\n    Controllers: '.Controllers',\r\n    Validations: '.Validations',\r\n    Constants: '.Constants',\r\n    Permissions: '.Permissions',\r\n    Parameters: '.Parameters',\r\n    Interface: '.Interface'\r\n}\r\n\r\nexport const MAIN_CONTENT = 'MAIN_CONTENT';\r\nexport const MIND_MAP = 'MIND_MAP';\r\nexport const CODE_VIEW = 'CODE_VIEW';\r\nexport const LAYOUT_VIEW = 'LAYOUT_VIEW';\r\n\r\nexport const GeneratedDataTypes = {\r\n    FirstName: 'First Name',\r\n    LastName: 'Last Name',\r\n    Name: 'Name',\r\n    Date: 'Date',\r\n    Id: 'Id',\r\n    Ids: 'Ids',\r\n    ProfileImage: 'Profile Image',\r\n    LoremIpsum: 'Lorem-Ipsum',\r\n    Guid: 'Guid',\r\n    ListOfGuids: 'Guids',\r\n    Number: 'Number'\r\n};\r\n\r\n\r\nexport const ConfigurationProperties = {\r\n    Domain: 'Configuration_Domain'\r\n}\r\nexport const NodeProperties = {\r\n    ComponentApi: 'component-api',\r\n    EnabledMenu: 'EnabledMenu',\r\n    ComponentParameters: 'ComponentParameters',\r\n    NavigationParameters: 'NavigationParameters',\r\n    ClientMethod: \"ClientMethod\",\r\n    MethodParameters: 'MethodParameters',\r\n    NavigationParametersProperty: 'NavigationParametersProperty',\r\n    MethodParameterProperty: 'MethodParameterProperty',\r\n    ScreenParameters: 'ScreenParameters',\r\n    SelectedLayoutCell: 'SelectedLayoutCell',\r\n    ChainParent: 'ChainParent',\r\n    Navigation: 'Navigation',\r\n    ClientMethodParameters: 'ClientMethodParameters',\r\n    AsOutput: \"AsOutput\",\r\n    EntryPoint: 'EntryPoint',\r\n    Property: 'Property',\r\n    DataChainEntry: 'DataChainEntry',\r\n    MergeChain: 'MergeChain',\r\n    ComponentProperties: \"ComponentProperties\",\r\n    Layout: 'Layout',\r\n    Domain: 'Domain',\r\n    Priority: 'Priority',\r\n    DataChain: 'DataChain',\r\n    Value: 'Value',\r\n    UIType: 'UIType',\r\n    TextType: 'TextType',\r\n    Enumeration: 'Enumeration',\r\n    ConditionType: 'ConditionType',\r\n    MatchReference: 'MatchReference',\r\n    MatchManyReferenceParameter: 'MatchManyReferenceParameter',\r\n    EnumerationReference: 'EnumerationReference',\r\n    AllowedExtensionValues: 'AllowedExtensionValues',\r\n    ServiceType: 'ServiceType',\r\n    DisallowedExtensionValues: 'DisallowedExtensionValues',\r\n    AllowedEnumValues: 'AllowedEnumerationValue',\r\n    DisallowedEnumValues: 'DisallowedEnumValues',\r\n    Condition: 'Condition',\r\n    ServiceTypeSettings: 'ServiceTypeSettings',\r\n    ValidatorModel: 'ValidatorModel',\r\n    ExecutorAgent: 'ExecutorAgent',\r\n    ExecutorFunction: 'ExecutorFunction',\r\n    ExecutorModel: 'ExecutorModel',\r\n    ExecutorModelOutput: 'ExecutorModelOutput',\r\n    ExecutorFunctionType: 'ExecutorFunctionType',\r\n    ValidatorFunction: 'ValidatorFunction',\r\n    UseEnumeration: 'UseEnumeration',\r\n    NameSpace: 'namespace',\r\n    FilterModel: 'filtermodel',\r\n    FilterAgent: 'filteragent',\r\n    Validator: 'Validator',\r\n    ModelItemFilter: 'ModelItemFilter',\r\n    Executor: 'Executor',\r\n    ValidatorAgent: 'ValidatorAgent',\r\n    Collapsed: 'collapsed',\r\n    UseExtension: 'usextension',\r\n    IncludedInList: 'includedInList',\r\n    Pinned: 'Pinned',\r\n    ExcludedFromList: 'excludedInList',\r\n    UseEqual: \"UseEqual\",\r\n    IsEqualTo: 'IsEqualTo',\r\n    CodeUser: 'codeUser',\r\n    HttpRoute: 'HttpRoute',\r\n    HttpMethod: 'HttpMethod',\r\n    ExcludeFromController: 'ExcludeFromController',\r\n    IsAgent: 'isAgent',\r\n    IsCompositeInput: 'IsCompositeInput',\r\n    IsParent: 'isParent', //This is a program setting. Just for allowing us to hide and show the model picker.\r\n    IsUser: 'IsUser', //User is the object directly associated with a IdentityProvider.\r\n    IsOwnedByAgents: 'IsOwnedByAgents',\r\n    UIUser: 'uiUser',\r\n    IsSharedResource: 'isSharedResource', // Not sure if this helps anything.\r\n    UIPermissions: 'uiPermissions',\r\n    IsOwned: 'isOwned',\r\n    UIName: 'uiName', // The name used in the ui.\r\n\r\n    NodePackage: 'NodePackage',\r\n    NodePackageType: 'NodePackageType',\r\n    NodePackageAgent: 'NodePackageAgent',\r\n    UIText: 'text',\r\n\r\n    IsReferenceList: 'isReferenceList',\r\n    UseHttps: 'UseHttps',\r\n\r\n    UISingular: 'uiSingular',\r\n    UIChoice: 'uiChoice',\r\n    UIChoiceType: 'uiChoiceType',\r\n    UIChoiceNode: 'uiChoiceNode', //A node that the \"parameter\" node points to.\r\n    PermissionRequester: 'permissions-requester',// The agent that is requesting permission to do something\r\n    PermissionManyToMany: 'permissions-many-to-many',\r\n    MatchIds: 'matchs-ids',\r\n    ConnectionExists: \"connection-exists\",\r\n    PermissionTarget: 'permissions-target',\r\n    // Property has a dependent property\r\n    UIDependsOn: 'uiDependsOn',\r\n    UseUIDependsOn: 'UseuiDependsOn',\r\n    UseUIOptions: 'UseuiOptions',\r\n    UIOptionType: 'uiOptionType',\r\n\r\n    //Use a custom option\r\n    UseCustomUIOption: 'useCustomUIOption',\r\n    UIOptionTypeCustom: 'uiOptionTypeCustom',\r\n    //An option\r\n    UIOption: 'uiOption',\r\n    //Use Extensions\r\n    UseUIExtensionList: 'UseuiExtensionList',\r\n    UIExtensionList: 'uiExtensionList',\r\n    UIExtension: 'uiExtension',\r\n    UIExtensionDefinition: 'uiExtensionDefinition',\r\n    Label: 'Label',\r\n    MethodProps: 'methodProperties',\r\n    FilterPropreties: 'filterproperties',\r\n    UIValidationType: 'uiValidationType',\r\n    UseUIValidations: 'UseuiValidations',\r\n    NODEType: 'nodeType',\r\n    ComponentType: 'component-type',\r\n    ReferenceType: 'referenceType', //Reference nodes will have this type.\r\n\r\n    ComponentDidMountEvent: 'component-did-mount',\r\n\r\n    UIAttributeType: 'uiAttributeType',\r\n    PermissionValueType: 'PermissionValueType',\r\n    UseModelAsType: 'useModelAsType',\r\n\r\n    IsDefaultProperty: 'isDefaultProperty',\r\n\r\n    HasLogicalChildren: 'hasLogicalChildren',\r\n    LogicalChildrenTypes: 'logicalChildrenTypes',\r\n    HasLogicalNieces: \"hasLogicalNieces\",\r\n    LogicalNieceTypes: 'logicalNieceTypes',\r\n\r\n    DataGenerationType: 'data-generation-type',\r\n\r\n    ManyToManyNexus: 'manyToManyNexux',\r\n    ManyToManyNexusType: 'manyToManyNexusType',\r\n    ManyToManyNexusTypes: 'manyToManyNexusTypes',\r\n\r\n    MethodType: \"MethodType\",\r\n    ChainNodeInput2: 'ChainNodeInput2',\r\n    ChainNodeInput1: 'ChainNodeInput1',\r\n    UIModelType: 'uiModelType',\r\n\r\n    UseScopeGraph: 'UseScopeGraph',\r\n    ScopeGraph: 'scopedGraph',\r\n\r\n    DataChainFunctionType: 'DataChainFunctionType',\r\n\r\n    AfterMethod: 'after-method',\r\n    AfterMethodSetup: 'after-method-setup',\r\n\r\n    //The name used for code.\r\n    Groups: 'groups',\r\n    GroupParent: 'groupParent',\r\n    CodeName: 'codeName',\r\n    ValueName: 'valueName',//The name of the instance variable to be used \r\n    AgentName: 'agentName',//The name of the instance variable to be used \r\n    CodePropertyType: 'codeProperty',\r\n    FunctionType: 'functionType',\r\n    MethodFunctionValidation: 'method-function-validation',\r\n    NotIncludedInController: 'not-included-in-controller',\r\n    PermissionImpl: 'permission-implementation',\r\n    NoApiPrefix: 'no-api-prefix',\r\n    AsForm: 'as-form',\r\n    ClassConstructionInformation: 'ClassConstructionInformation'\r\n}\r\n\r\nfunction codeTypeWord(x) {\r\n    if (typeof x === 'string') {\r\n        return x.split('').filter(y => 'abcdefghijklmnopqrstuvwxyzzz1234567890_'.indexOf(y.toLowerCase()) !== -1).join('');\r\n    }\r\n    return x;\r\n}\r\n\r\nexport const DIRTY_PROP_EXT = '$ _dirty_ $';\r\nexport const NodePropertiesDirtyChain = {\r\n    [NodeProperties.ServiceType]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIText,\r\n        chainFunc: codeTypeWord\r\n    }],\r\n    [NodeProperties.UIText]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord,\r\n    }, {\r\n        chainProp: NodeProperties.HttpRoute,\r\n        chainFunc: (x) => {\r\n            if (typeof x === 'string') {\r\n                return x.split(' ').join('/').toLowerCase();\r\n            }\r\n            return x;\r\n        }\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: (x) => {\r\n            return x;\r\n        }\r\n    }]\r\n}\r\nconst letters = 'abcdefghijklmnopqrstuvwxyz';\r\nconst alphanumerics = letters + '0123456789';\r\nconst allowedchars = alphanumerics + ' ';\r\nexport function MakeConstant(val) {\r\n    if (val) {\r\n        if (!isNaN(val)) {\r\n            return `\"${val}\"`;\r\n        }\r\n        val = `${val}`;\r\n        val = val.split('').filter(x => allowedchars.indexOf(x.toLowerCase()) !== -1).join('');\r\n        if (letters.indexOf(val[0].toLowerCase()) === -1) {\r\n            val = '_' + val;\r\n        }\r\n        return val.split(' ').join('_').toUpperCase();\r\n    }\r\n    throw 'needs to have value';\r\n}\r\n\r\nexport function ConstantsDeclaration(options) {\r\n    var { name, value } = options;\r\n\r\n    return `public const string ${name} = ${value};`;\r\n}\r\n\r\nexport function CreateStringList(options) {\r\n    var { name, list, instance } = options;\r\n    return `${instance ? '' : 'public'} IList<string> ${name} = new List<string> {\r\n        ${list}\r\n    }`\r\n}\r\nexport const LinkEvents = {\r\n    Remove: 'remove'\r\n}\r\nexport const LinkType = {\r\n    Choice: 'choice',\r\n\r\n    Executor: 'executor',\r\n    ExecutorItem: 'executor-item',\r\n    ExecutorProperty: 'executor-property',\r\n    ExecutorModel: 'executor-model',\r\n\r\n    Condition: 'condtion',\r\n    ModelItemFilter: 'model-item-filter',\r\n\r\n    AfterMethod: 'after-method',\r\n\r\n    Validation: 'validation',\r\n    ValidationItem: 'validation-item',\r\n    Validator: 'validator',\r\n    ValidatorProperty: 'validator-property',\r\n    ValidatorModel: 'validator-model',\r\n    Configuration: 'configuration',\r\n    ExecutorFunction: 'executor-function',\r\n    ValidatorFunction: 'validator-function',\r\n    ValidatorModelItem: 'validator-model-item',\r\n    ValidatorAgent: 'validator-agent',\r\n    Option: 'option',\r\n    OptionItem: 'option-item',\r\n    OptionCustom: 'option-custom',\r\n    DependsOn: 'depends-on',\r\n    ExtensionList: 'extension-list',\r\n    Extension: 'extension',\r\n    ScreenOptions: 'screen-options',\r\n    ListItem: 'list-item',\r\n    Enumeration: 'enumeration',\r\n    DataSource: 'DataSource',\r\n    Component: 'component',\r\n    DataChainLink: 'data-chain-link',\r\n    ComponentProperty: \"component-link\",\r\n    EnumerationReference: 'enumeration-reference',\r\n    LogicalChildren: 'logical-children',\r\n    LogicalNieces: 'logical-nieces',\r\n    ManyToManyLink: \"ManyToManyLink\",\r\n    Permission: 'permission',\r\n    AppliedPermissionLink: 'applied-permission',\r\n    RequestorPermissionLink: 'request-permission-link',//the agent/node that is requesting permissions \r\n    ManyToManyPermissionLink: 'many-to-many-permission-link',\r\n    ExtensionDependencyLink: 'extension-dependency-link',\r\n    FunctionOperator: 'function-operator',\r\n    FunctionLink: 'function-link',\r\n    OnScreenLink: 'screen-link',\r\n    OnSuccessLink: 'on-success-link',\r\n    OnFailureLink: 'on-failure-link',\r\n    OnAction: 'on-action',\r\n    ChildLink: 'child-link',//describing a link between screens\r\n    OnItemSelection: 'on-item-selection',\r\n    FunctionVariable: 'function-variable',\r\n    PropertyLink: 'property-link',\r\n    ParentLink: 'parent-link',\r\n    FunctionConstraintLink: 'function-constraint-link',\r\n    ErrorLink: 'error-link',\r\n    RequiredClassLink: 'required-class-link',\r\n    ModelTypeLink: 'model-type-link',\r\n    AgentTypeLink: 'agent-type-link',\r\n    UserLink: 'user-link', // A link between a user and a personal ([Customer, Manager, Hero])\r\n    MaestroLink: 'maestro-link',\r\n    AttributeLink: 'attribute-link',\r\n    PermissionFunction: 'permission-function',\r\n    Exist: 'exist', //A node that points with this link type, requires that the node exists, if it doesn't the link and the other node should dissapear.\r\n    PermissionPropertyDependency: 'permission-property-dependency', //There is a link between a permision and a property.\r\n    PermissionDependencyProperty: 'permission-dependency-property', //There is a link bewteen a property and a dependency\r\n    PermissionDependencyPropertyManyToManyLink: 'permission-dependency-property-many-to-many', //There is a link between a property and a dependency in a many to many situation.\r\n    PermissionPropertyDependencyManyToManyLink: 'permission-property-dependency-many-to-many'//There is a link between a permision and a property in a many to many situnation.\r\n}\r\nconst VIKTIG_LINKS = 5;\r\nexport const LinkStyles = {\r\n    [LinkType.FunctionLink]: {\r\n        type: LinkType.FunctionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.ErrorLink]: {\r\n        type: LinkType.ErrorLink,\r\n        stroke: NodeTypeColors[ColorStates.Error]\r\n    },\r\n    [LinkType.OnScreenLink]: {\r\n        type: LinkType.OnScreenLink,\r\n        stroke: '#E1CE7A',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnSuccessLink]: {\r\n        type: LinkType.OnSuccessLink,\r\n        stroke: '#A23B72',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnFailureLink]: {\r\n        type: LinkType.OnFailureLink,\r\n        stroke: '#3B1F2B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnItemSelection]: {\r\n        type: LinkType.OnItemSelection,\r\n        stroke: '#2E86AB',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnAction]: {\r\n        type: LinkType.OnAction,\r\n        stroke: '#A3320B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.ChildLink]: {\r\n        type: LinkType.ChildLink,\r\n        stroke: '#47A025',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.FunctionConstraintLink]: {\r\n        type: LinkType.FunctionConstraintLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.FunctionOperator]: {\r\n        type: LinkType.FunctionOperator,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.PropertyLink]: {\r\n        type: LinkType.PropertyLink,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.Choice]: {\r\n        type: LinkType.Choice,\r\n        stroke: NodeTypeColors[NodeTypes.ChoiceList]\r\n    },\r\n    [LinkType.Permission]: {\r\n        type: LinkType.Permission,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.AppliedPermissionLink]: {\r\n        type: LinkType.AppliedPermissionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.Validation]: {\r\n        type: LinkType.Validation,\r\n        stroke: NodeTypeColors[NodeTypes.ValidationList]\r\n    },\r\n    [LinkType.Validator]: {\r\n        type: LinkType.Validator,\r\n        stroke: NodeTypeColors[NodeTypes.Validator]\r\n    },\r\n    [LinkType.Option]: {\r\n        type: LinkType.Option,\r\n        stroke: NodeTypeColors[NodeTypes.OptionList]\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    [LinkType.OptionCustom]: {\r\n        type: LinkType.OptionCustom,\r\n        stroke: NodeTypeColors[NodeTypes.OptionCustom]\r\n    },\r\n    [LinkType.DependsOn]: {\r\n        type: LinkType.DependsOn,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.ExtensionList]: {\r\n        type: LinkType.ExtensionList,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    },\r\n    [LinkType.Extension]: {\r\n        type: LinkType.Extension,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionType]\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    [LinkType.ExtensionDependencyLink]: {\r\n        type: LinkType.ExtensionDependencyLink,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    }\r\n}\r\n\r\nexport const LinkPropertyKeys = {\r\n    TYPE: 'type',\r\n    CONSTRAINTS: 'constraints',\r\n    VALID_CONSTRAINTS: 'valid-constraints',\r\n    FUNCTION_ID: 'function-id'\r\n}\r\n\r\nexport const LinkProperties = {\r\n    EnumerationLink: {\r\n        type: LinkType.Enumeration\r\n    },\r\n    DataSourceLink: {\r\n        type: LinkType.DataSource\r\n    },\r\n    DataChainLink: {\r\n        type: LinkType.DataChainLink\r\n    },\r\n    ListItem: {\r\n        type: LinkType.ListItem\r\n    },\r\n    ComponentLink: {\r\n        type: LinkType.Component\r\n    },\r\n    ComponentPropertyLink: {\r\n        type: LinkType.ComponentProperty\r\n    },\r\n    ScreenOptionsLink: {\r\n        type: LinkType.ScreenOptions\r\n    },\r\n    ModelItemFilter: {\r\n        type: LinkType.ModelItemFilter\r\n    },\r\n    AfterMethod: {\r\n        type: LinkType.AfterMethod\r\n    },\r\n    EnumerationReferenceLink: {\r\n        type: LinkType.EnumerationReference\r\n    },\r\n    ConditionLink: {\r\n        type: LinkType.Condition\r\n    },\r\n    LogicalChildren: {\r\n        type: LinkType.LogicalChildren\r\n    },\r\n    LogicalNieces: {\r\n        type: LinkType.LogicalNieces\r\n    },\r\n    ManyToManyLink: {\r\n        type: LinkType.ManyToManyLink\r\n    },\r\n    PermissionFunctionLink: {\r\n        type: LinkType.PermissionFunction\r\n    },\r\n    FunctionVariable: {\r\n        type: LinkType.FunctionVariable,\r\n        [LinkPropertyKeys.FUNCTION_ID]: null\r\n    },\r\n    PermissionDependencyPropertyLink: {\r\n        type: LinkType.PermissionDependencyProperty\r\n    },\r\n    PermissionDependencyPropertyManyToManyLink: {\r\n        type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n    },\r\n    PermissionPropertyDependencyLink: {\r\n        type: LinkType.PermissionPropertyDependency\r\n    },\r\n    PermissionPropertyDependencyManyToManyLink: {\r\n        type: LinkType.PermissionPropertyDependencyManyToManyLink\r\n    },\r\n    AttributeLink: {\r\n        type: LinkType.AttributeLink\r\n    },\r\n    ExistLink: {\r\n        exist: LinkType.Exist\r\n    },\r\n    ModelTypeLink: {\r\n        type: LinkType.ModelTypeLink\r\n    },\r\n    AgentTypeLink: {\r\n        type: LinkType.AgentTypeLink\r\n    },\r\n    RequiredClassLink: {\r\n        type: LinkType.RequiredClassLink\r\n    },\r\n    OnScreenLink: {\r\n        type: LinkType.OnScreenLink\r\n    },\r\n    OnSuccessLink: {\r\n        type: LinkType.OnSuccessLink\r\n    },\r\n    OnFailureLink: {\r\n        type: LinkType.OnFailureLink\r\n    },\r\n    OnItemSelection: {\r\n        type: LinkType.OnItemSelection\r\n    },\r\n    OnAction: {\r\n        type: LinkType.OnAction\r\n    },\r\n    ChildLink: {\r\n        type: LinkType.ChildLink\r\n    },\r\n    FunctionLink: {\r\n        type: LinkType.FunctionLink\r\n    },\r\n    FunctionOperator: {\r\n        type: LinkType.FunctionOperator\r\n    },\r\n    FunctionConstraintLink: {\r\n        type: LinkType.FunctionConstraintLink\r\n    },\r\n    ChoiceLink: {\r\n        type: LinkType.Choice\r\n    },\r\n    PermissionLink: {\r\n        type: LinkType.Permission\r\n    },\r\n    AppliedPermissionLink: {\r\n        type: LinkType.AppliedPermissionLink\r\n    },\r\n    RequestorPermissionLink: {\r\n        type: LinkType.RequestorPermissionLink\r\n    },\r\n    ManyToManyPermissionLink: {\r\n        type: LinkType.ManyToManyPermissionLink\r\n    },\r\n    ValdationLink: {\r\n        type: LinkType.Validation\r\n    },\r\n    ValidationLinkItem: {\r\n        type: LinkType.ValidationItem\r\n    },\r\n    ValidatorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ValidatorModelLink: {\r\n        type: LinkType.ValidatorModel\r\n    },\r\n    ValidatorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ValidatorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ExecutorLink: {\r\n        type: LinkType.Executor\r\n    },\r\n    ExecutorLinkItem: {\r\n        type: LinkType.ExecutorItem\r\n    },\r\n    ExecutorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ExecutorModelLink: {\r\n        type: LinkType.ExecutorModel\r\n    },\r\n    ExecutorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ExecutorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ValidatorFunctionLink: {\r\n        type: LinkType.ValidatorFunction\r\n    },\r\n    ExecutorFunctionLink: {\r\n        type: LinkType.ExecutorFunction\r\n    },\r\n    OptionLink: {\r\n        type: LinkType.Option\r\n    },\r\n    OptionItemLink: {\r\n        type: LinkType.OptionItem\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    OptionCustomLink: {\r\n        type: LinkType.OptionCustom\r\n    },\r\n    DependsOnLink: {\r\n        type: LinkType.DependsOn\r\n    },\r\n    ExtensionListLink: {\r\n        type: LinkType.ExtensionList\r\n    },\r\n    ExtensionLink: {\r\n        type: LinkType.Extension\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    ExtensionDependencyLink: {\r\n        type: LinkType.ExtensionDependencyLink\r\n    },\r\n    PropertyLink: {\r\n        type: LinkType.PropertyLink\r\n    },\r\n    ParentLink: {\r\n        type: LinkType.ParentLink\r\n    },\r\n    UserLink: {\r\n        type: LinkType.UserLink\r\n    },\r\n    MaestroLink: {\r\n        type: LinkType.MaestroLink\r\n    }\r\n}\r\nObject.keys(LinkProperties).map(propTypes => {\r\n    if (LinkProperties[propTypes] && LinkProperties[propTypes].type) {\r\n        LinkProperties[propTypes][LinkProperties[propTypes].type] = {};\r\n    }\r\n})\r\nexport const Methods = {\r\n    Create: 'Create',\r\n    Get: 'Get',\r\n    GetAll: 'GetAll',\r\n    Update: 'Update',\r\n    Delete: 'Delete'\r\n}\r\nexport const ValidationVector = {\r\n    Content: 'content'\r\n}\r\nexport const UITypes = {\r\n    ReactNative: 'ReactNative',\r\n    Web: 'Web',\r\n    VR: 'VR',\r\n    AR: 'AR',\r\n    Desktop: 'Desktop'\r\n}\r\nexport const ValidationRules = {\r\n    CVV: \"cvv\",\r\n    AlphaNumericLike: \"alphanumericlike\",\r\n    AlphaNumericPuncLike: 'alphaNumericpunclike',\r\n    AlphaOnly: \"alphaonly\",\r\n    NumericOnly: 'numericonly',\r\n    Numeric: 'numeric',\r\n    Empty: 'empty',\r\n    AlphaOnlyWithSpaces: \"alphaonlywithspaces\",\r\n    NotEmpty: \"notempty\",\r\n    UrlEmpty: \"url_empty\",\r\n    IsTrue: 'is_true',\r\n    IsFalse: 'is_false',\r\n    GreaterThan: 'greater_than',\r\n    GreaterThanOrEqualTo: 'greater_than_equal_to',\r\n    LessThan: 'less_than',\r\n    LessThanOrEqualTo: 'less_than_equal_to',\r\n    EqualTo: 'equal_to',\r\n    Any: 'any',\r\n    Url: \"url\",\r\n    EmailEmpty: \"email_empty\",\r\n    Credit: \"credit\",\r\n    Email: \"email\",\r\n    ExpirationMonth: \"expirationMonth\",\r\n    BeforeNow: \"beforenow\",\r\n    Year: \"year\",\r\n    Debit: \"debit\",\r\n    ExpirationYear: \"expirationYear\",\r\n    PastDate: \"pastdate\",\r\n    ZipEmpty: \"zipempty\",\r\n    Zip: \"zip\",\r\n    SocialSecurity: \"socialsecurity\",\r\n    ListOfGuids: 'listofguids',\r\n    OneOf: 'one-of'\r\n}\r\n\r\n\r\nexport const ExtensionDefinitionTypes = {\r\n    DictionaryStringString: 'DictionaryStringString',\r\n    DictionaryStringDictionary: 'DictionaryStringDictionary',\r\n}\r\nexport const CollectionTypes = {\r\n    DebitCard: 'DebitCard',\r\n    Email: 'Email',\r\n    Telephone: 'Telephone'\r\n}\r\n\r\nexport const OptionsTypes = {\r\n    CHOICELIST: 'CHOICELIST',\r\n    CAPITALIZE_FIRST_LETTER: 'CAPITALIZE_FIRST_LETTER'\r\n}\r\nexport const NodePropertyTypes = {\r\n    STRING: 'STRING',\r\n    LISTOFSTRINGS: 'LISTOFSTRINGS',\r\n    DATETIME: 'DATETIME',\r\n    INT: 'INT',\r\n    FLOAT: 'FLOAT',\r\n    DOUBLE: 'DOUBLE',\r\n    BOOLEAN: 'BOOLEAN',\r\n    EMAIL: 'EMAIL',\r\n    PHONENUMBER: 'PHONENUMBER'\r\n}\r\nexport const NEW_LINE = `\r\n`;\r\nexport const ProgrammingLanguages = {\r\n    CSHARP: 'csharp'\r\n}\r\nexport const NodePropertyTypesByLanguage = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.DATETIME]: 'DateTime',\r\n        [NodePropertyTypes.STRING]: 'string',\r\n        [NodePropertyTypes.LISTOFSTRINGS]: 'IList<string>',\r\n        [NodePropertyTypes.INT]: 'int',\r\n        [NodePropertyTypes.FLOAT]: 'float',\r\n        [NodePropertyTypes.DOUBLE]: 'double',\r\n        [NodePropertyTypes.BOOLEAN]: 'bool',\r\n        [NodePropertyTypes.EMAIL]: 'Email',\r\n        [NodePropertyTypes.PHONENUMBER]: 'PhoneNumber'\r\n    }\r\n}\r\nexport const RED_QUICK_DATA = 'RedQuick.Data';\r\nexport const RED_QUICK_ATTRIBUTES = 'RedQuick.Attributes';\r\nexport const Usings = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.EMAIL]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES],\r\n        [NodePropertyTypes.PHONENUMBER]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES]\r\n    }\r\n}\r\nexport const NodeAttributePropertyTypes = {\r\n\r\n    ROUTINGNUMBER: \"ROUTINGNUMBER\",\r\n    CURRENCY: \"CURRENCY\",\r\n    CARMAKE: \"CARMAKE\",\r\n    SOCIALSECURITY: \"SOCIALSECURITY\",\r\n    EMAIL: \"EMAIL\",\r\n    PHONE: \"PHONE\",\r\n    CARMODEL: \"CARMODEL\",\r\n    CARYEAR: \"CARYEAR\",\r\n    VIN: \"VIN\",\r\n    LONGSTRING: \"LONGSTRING\",\r\n    CREDITCARD: \"CREDITCARD\",\r\n    LENGTH: \"LENGTH\",\r\n    INCH: \"INCH\",\r\n    DIMENSION: \"DIMENSION\",\r\n    MONEY: \"MONEY\",\r\n    COUNTRY: \"COUNTRY\",\r\n    DEBIT: \"DEBIT\",\r\n    MONTH: \"MONTH\",\r\n    STATE: \"STATE\",\r\n    CHOICE: \"CHOICE\",\r\n    NUMBER: \"NUMBER\",\r\n    SLIDER: \"SLIDER\",\r\n    DATE: \"DATE\",\r\n    TIME: \"TIME\",\r\n    BOOLEAN: \"BOOLEAN\",\r\n    ACCOUNTNUMBER: \"ACCOUNTNUMBER\",\r\n    ADDRESS: \"ADDRESS\",\r\n    COLLECTION: \"COLLECTION\",\r\n    OBJECT: \"OBJECT\",\r\n    RADIO: \"RADIO\",\r\n    CHECKLIST: \"CHECKLIST\",\r\n    STRING: \"STRING\",\r\n    GEOLOCATION: \"GEOLOCATION\",\r\n    YEAR: \"YEAR\"\r\n\r\n}\r\n\r\nconst COMMON_DATETIME_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.DATETIME,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nconst COMMON_STRING_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.STRING,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nconst COMMON_LISTSTRING_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.LISTOFSTRINGS,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nexport function GetValidationsFor(type) {\r\n    let result = {};\r\n    Object.keys(ValidationCases).filter(x => {\r\n        return ValidationCases[x].types.some(v => v === type);\r\n    }).map(t => {\r\n        result[t] = ValidationCases[t];\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function GetMoreCompatibles(a, vector, result = []) {\r\n    var parents = GetValidationParents(a, vector).map(t => t.id);\r\n    parents = parents.filter(t => result.indexOf(t) === -1);\r\n    result = [a, ...result, ...parents].unique();\r\n    parents.map(t => {\r\n        if (result.indexOf(t) !== -1) {\r\n            result = GetMoreCompatibles(t, vector, result);\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function AreCompatible(a, b, vector = ValidationVector.Content) {\r\n    var t = GetMoreCompatibles(a, vector);\r\n    var v = GetMoreCompatibles(b, vector);\r\n\r\n    return !!t.intersection(v).length;\r\n}\r\nexport function SortValidation(a, b, vector) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    var t = GetMoreCompatibles(a, vector);\r\n    var v = GetMoreCompatibles(b, vector);\r\n    var bIsIncluded = t.some(_t => _t === b);\r\n    var aIsIncluded = v.some(_v => _v === a);\r\n    if (bIsIncluded && aIsIncluded) {\r\n        return 0;\r\n    }\r\n    else if (bIsIncluded) {\r\n        return -1;\r\n    }\r\n    else if (aIsIncluded) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport function GetValidationParents(type, vector) {\r\n    var vc = ValidationCases[type];\r\n    if (vc) {\r\n        var vects = vc.vectors[vector];\r\n        if (Array.isArray(vects)) {\r\n            return vects.map(t => ValidationCases[t]).filter(x => x);\r\n        }\r\n        else {\r\n            return Object.keys(vects).map(t => {\r\n                return ValidationCases[t]\r\n            }).filter(x => x);\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexport function GetValidationTypes(type) {\r\n    var results = [];\r\n\r\n    Object.values(ValidationCases).map(t => {\r\n        if (t && t.types && t.types.indexOf(type) !== -1)\r\n            results.push(t);\r\n    })\r\n\r\n    return results;\r\n}\r\n\r\nexport const ValidationCases = {\r\n    [ValidationRules.ListOfGuids]: {\r\n        types: [NodePropertyTypes.LISTOFSTRINGS],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `new List<string> { \"${_.uuidv4()}\"}`\r\n            },\r\n            'long': function () {\r\n                return `new List<string> { \"${_.uuidv4()}asdf\" }`\r\n            },\r\n            '$empty': function () {\r\n                return `new List<string>()`\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 9, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            }\r\n        },\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.ZipEmpty],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 5, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        types: [NodePropertyTypes.DATETIME],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n        }\r\n    },\r\n\r\n    [ValidationRules.BeforeNow]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asdf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@asdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asadf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 23, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 16, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.Url]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.UrlEmpty]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Empty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            'false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NotEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NumericOnly]: {\r\n        vectors: {\r\n            content: [ValidationRules.Numeric]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Numeric]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234.34\"`\r\n            },\r\n            'false': function () {\r\n                return `\"12QW\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    //Cant be empty, that would  be the only difference between it and Any.\r\n    [ValidationRules.AlphaNumericPuncLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21df.!@#$ #$%^^&*^&*()aom\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21dfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaOnlyWithSpaces]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httasdfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas dfaom\"`\r\n            },\r\n            '$false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.IsTrue]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return 'true';\r\n            },\r\n            'false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.IsFalse]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            'true': function () {\r\n                return 'true';\r\n            },\r\n            '$false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThanOrEqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' >= '\r\n            },\r\n            'notgreater': function () {\r\n                return ' >= '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' > '\r\n            },\r\n            'notgreater': function () {\r\n                return ' > '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.LessThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$less': function () {\r\n                return ' < '\r\n            },\r\n            'notless': function () {\r\n                return ' < '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.EqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$equal_to': function () {\r\n                return ' = '\r\n            },\r\n            'not_equal': function () {\r\n                return ' = '\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.keys(ValidationCases).map(t => {\r\n    ValidationCases[t].id = t;\r\n})\r\nexport const ExecutorRules = {\r\n    ModelReference: 'model-reference',\r\n    Copy: 'copy',\r\n    AgentReference: 'agent-reference',\r\n    ParentReference: 'parent-reference',\r\n    AddModelReference: 'add-model-reference'\r\n}\r\nexport const ExecutorUI = {\r\n    [ExecutorRules.ModelReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ModelReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.AgentReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AgentReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.ParentReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ParentReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.AddModelReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AddModelReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_LISTSTRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            method_reference: {\r\n                reference: true\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.Copy]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'copy'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ExecutorUI).map(t => {\r\n    ExecutorUI[t].type = t;\r\n})\r\nexport const FilterRules = {\r\n    EqualsAgent: 'equals-agent',\r\n    EqualsParent: 'equals-parent',\r\n    EqualsTrue: 'equals-true',\r\n    EqualsFalse: 'equals-false',\r\n    EqualsModelRef: 'equals-model-ref',\r\n    EqualsModelProperty: 'equals-model-property',\r\n    IsInModelPropertyCollection: 'is-in-model-property-collection',\r\n    IsNotInModelPropertyCollection: 'is-not-in-model-property-collection',\r\n    Many2ManyPropertyIsTrue: 'many-2-many-property-is-true'\r\n}\r\nexport const FilterUI = {\r\n    [FilterRules.EqualsTrue]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsTrue'\r\n        },\r\n        template: './app/templates/filter/equals_true.tpl',\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsFalse]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsFalse'\r\n        },\r\n        template: './app/templates/filter/equals_false.tpl',\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsParent]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsParent'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsAgent]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsAgent'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsModelRef]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsModelRef'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            functionvariables: true\r\n        }\r\n    },\r\n    [FilterRules.EqualsModelProperty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsModelProperty'\r\n        },\r\n        template: './app/templates/filter/equals-model-property.tpl',\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            modelproperty: true\r\n        }\r\n    },\r\n    [FilterRules.IsInModelPropertyCollection]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'IsInModelPropertyCollection'\r\n        },\r\n        template: './app/templates/filter/is_in_model_property_collection.tpl',\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            modelproperty: true,\r\n        }\r\n    },\r\n    [FilterRules.IsNotInModelPropertyCollection]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'IsNotInModelPropertyCollection'\r\n        },\r\n        template: './app/templates/filter/is_not_in_model_property_collection.tpl',\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            modelproperty: true,\r\n        }\r\n    },\r\n    [FilterRules.Many2ManyPropertyIsTrue]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'Many2ManyPropertyIsTrue'\r\n        },\r\n        template: './app/templates/filter/many_2_many_property_is_true.tpl',\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            model2modelproperty: true\r\n        }\r\n    },\r\n    [ValidationRules.OneOf]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'OneOfAttribute'\r\n        },\r\n        template: './app/templates/filter/one-of.tpl',\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Enumeration,\r\n            reference: {\r\n                types: [NodeTypes.Enumeration, NodeTypes.ExtensionType]\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'SocialSecurityAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'PastDateAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.BeforeNow]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'BeforeNowAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'CreditCardAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Url]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaNumericLikeAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaOnlyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'NotEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(FilterUI).map(t => {\r\n    FilterUI[t].type = t;\r\n})\r\nexport const ValidationUI = {\r\n    [ValidationRules.OneOf]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'OneOfAttribute'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Enumeration,\r\n            reference: {\r\n                types: [NodeTypes.Enumeration, NodeTypes.ExtensionType]\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'SocialSecurityAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'PastDateAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.BeforeNow]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'BeforeNowAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'CreditCardAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Url]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaNumericLikeAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaOnlyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'NotEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ValidationUI).map(t => {\r\n    ValidationUI[t].type = t;\r\n})","import * as Titles from '../components/titles';\r\nimport fs from 'fs';\r\nimport { Methods, NodeTypes, NodeProperties } from './nodetypes';\r\n\r\n\r\nexport const FunctionTypes = {\r\n    //Functions with List<Child> result\r\n    Create_ManyToMany_Agent_Value__IListChild: 'Create/ManyToMany/Agent/Value => IList<Child>',\r\n    Update_ManyToMany_Agent_Value__IListChild: 'Update/ManyToMany/Agent/Value => IList<Child>',\r\n    Get_ManyToMany_Agent_Value__IListChild: 'Get/ManyToMany/Agent/Value => IList<Child>',\r\n    Delete_ManyToMany_Agent_Value__IListChild: 'Delete/ManyToMany/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Child> result\r\n    Create_Parent$Child_Agent_Value__IListChild: 'Create/Parent-Child/Agent/Value => IList<Child>',\r\n    Update_Parent$Child_Agent_Value__IListChild: 'Update/Parent-Child/Agent/Value => IList<Child>',\r\n    Get_Parent$Child_Agent_Value__IListChild: 'Get/Parent-Child/Agent/Value => IList<Child>',\r\n    Delete_Parent$Child_Agent_Value__IListChild: 'Delete/Parent-Child/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Object> result\r\n    Create_Object_Agent_Value__IListObject: 'Create/Object/Agent/Value => IList<Object>',\r\n    Update_Object_Agent_Value__IListObject: 'Update/Object/Agent/Value => IList<Object>',\r\n    Get_Object_Agent_Value__IListObject: 'Get/Object/Agent/Value => IList<Object>',\r\n    Delete_Object_Agent_Value__IListObject: 'Delete/Object/Agent/Value => IList<Object>',\r\n\r\n    Get_Agent_Value__IListObject: 'Get/Agent/Value => IList<Object>',\r\n    Get_Object_Agent_Value__IListObject_By_Specific: 'Get/Object/Agent/Value => IList<Object> specific id',\r\n    //Delete\r\n    Delete_M2M_By_Reference: 'Delete M2M by reference => list',\r\n\r\n    //Functions with Object result\r\n    Create_Parent_Child_Agent_Value__Child: 'Create/Parent-Child/Agent/Value => Child',\r\n    Update_Parent_Child_Agent_Value__Child: 'Update/Parent-Child/Agent/Value => Child',\r\n    Get_Parent_Child_Agent_Value__Child: 'Get/Parent-Child/Agent/Value => Child',\r\n    Delete_Parent_Child_Agent_Value__Child: 'Delete/Parent-Child/Agent/Value => Child',\r\n\r\n    //Functions width Object result.\r\n    Create_Object_Agent_Value__Object: 'Create/Object/Agent/Value => Object',\r\n    Update_Object_Agent_Value__Object: 'Update/Object/Agent/Value => Object',\r\n    Update_Object_Agent_Value__Object_With_Object: 'Update/Object/with/Model/Agent/Value => Object',\r\n    Get_Object_Agent_Value__Object: 'Get/Object/Agent/Value => Object',\r\n    Delete_Object_Agent_Value__Object: 'Delete/Object/Agent/Value => Object',\r\n\r\n    Create_Object_Agent_Many_to_Many_CompositeInput__Object: 'Create/Object/Agent/Many to Many with Composite Input => Object',\r\n    Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET: 'Create M2M Object with Agent and Return the updated M2M set',\r\n\r\n    Create_Object__Object: 'Create/Object => Object',\r\n    Update_Object__Object: 'Update/Object => Object',\r\n    Delete_Object__Object: 'Delete/Object => Object',\r\n    Get_Object__Object: 'Get/Object => Object',\r\n\r\n    //Function with bool result\r\n    Can_Execute_Agent_Parent_In_Valid_List: 'Can_Execute_Agent_Parent_In_Valid_List',\r\n    Login: 'Login',\r\n    Register: 'Register'\r\n    // IAgent_and_Permission_determing_the_permission_based_on_a_PROPERTY: 'Given an Agent and Permission, determing the permission based on a PROPERTY'\r\n}\r\n\r\n\r\nexport const FunctionTemplateKeys = {\r\n    Model: 'model',\r\n    ModelOutput: 'model_output',\r\n    ChangeParameter: 'change_parameter',\r\n    UpdateModel: 'model_update',\r\n    ReferenceClass: 'reference_class',\r\n    Reference: 'reference',\r\n    ModelProperty: 'model-property',\r\n    Bool: 'bool',\r\n    CanExecute: 'can-execute',\r\n    ModelDeterminingProperty: 'model-determining-property',\r\n    AgentDeterminingProperty: 'agent-determining-property',\r\n    Property: 'property',\r\n    Parent: 'parent',\r\n    AgentInstance: 'agent_instance',\r\n    Agent: 'agent',\r\n    Item: 'item',\r\n    AgentProperty: 'agent-property',\r\n    AgentType: 'agent_type',\r\n    User: 'user',\r\n    ConnectionType: 'connect_type',\r\n    ManyToManyModel: 'many_to_many',\r\n    Method: 'method',\r\n    MethodType: 'method_type',\r\n    Permission: 'permission',\r\n    UserInstance: 'user_instance',\r\n    ModelFilter: 'model_filter',\r\n    Value: 'value',\r\n    CompositeInput: 'composite-input',\r\n    CompositeInputProperty: 'composite-input-property'\r\n}\r\n\r\nexport const FunctionConstraintKeys = {\r\n    IsAgent: 'isAgent',\r\n    IsUser: 'isUser',\r\n    IsTypeOf: 'isTypeOf',\r\n    IsParent: 'isParent',\r\n    IsChild: 'isChild',\r\n    IsList: 'isList',\r\n    IsSingleLink: '$single$link',\r\n    IsModel: 'isModel',\r\n    IsFunction: 'isFunction',\r\n    IsProperty: 'isProperty',\r\n    IsEnumerable: 'isEnumerable',\r\n    IsInstanceVariable: 'isInstanceVariable',\r\n    IsInputVariable: 'isInputVariable'\r\n}\r\n\r\nconst COMMON_CONSTRAINTS = {\r\n    [FunctionTemplateKeys.CanExecute]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsFunction]: true,\r\n        key: FunctionTemplateKeys.CanExecute\r\n    },\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Parent,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsProperty]: true,\r\n        key: FunctionTemplateKeys.ModelDeterminingProperty\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        [FunctionConstraintKeys.IsParent]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Parent\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\n//Deprecated 6.12.2019\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelOutput]: {\r\n        key: FunctionTemplateKeys.ModelOutput,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT_MANY_TO_MANY_COMPOSITEINPUT_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.CompositeInput]: {\r\n        key: FunctionTemplateKeys.CompositeInput,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\nconst AfterEffectsTemplate = {\r\n    GenerateM2M_From_Result_and_Input: 'Generate Many 2 Many from result and input',\r\n    ExecuteStreamProcess: 'Execute stream process',\r\n    ExecuteStreamProcessUpdate: 'Execute stream process update'\r\n}\r\nexport const AFTER_EFFECTS = {\r\n    [AfterEffectsTemplate.GenerateM2M_From_Result_and_Input]: {\r\n        template: './app/templates/aftereffects/generate_m2m_from_result_and_input.tpl',\r\n        template_call: '                    await {{function_name}}(agent, data, result);',\r\n        templateKeys: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.CompositeInput]: {\r\n                key: FunctionTemplateKeys.CompositeInput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.CompositeInputProperty]: {\r\n                key: FunctionTemplateKeys.CompositeInputProperty,\r\n                nodeTypes: [NodeTypes.Property],\r\n                parent: FunctionTemplateKeys.CompositeInput\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ManyToManyModel]: {\r\n                key: FunctionTemplateKeys.ManyToManyModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [AfterEffectsTemplate.ExecuteStreamProcess]: {\r\n        template: './app/templates/aftereffects/execute_stream_process.tpl',\r\n        template_call: '                    await {{function_name}}(agent, result);',\r\n        update_with: `./app/templates/standard/update_model_property.tpl`,\r\n        stream_process_change_parameter: `./app/templates/stream_process/stream_process_change_class_extension_update_by_model.tpl`,\r\n        templateKeys: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ModelOutput]: {\r\n                key: FunctionTemplateKeys.ModelOutput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ManyToManyModel]: {\r\n                key: FunctionTemplateKeys.ManyToManyModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Method]: {\r\n                key: FunctionTemplateKeys.Method,\r\n                useNodes: true,\r\n                nodeTypes: [NodeTypes.Method]\r\n            },\r\n            [FunctionTemplateKeys.MethodType]: {\r\n                key: FunctionTemplateKeys.MethodType,\r\n                useMethodTypes: true\r\n            }\r\n\r\n        }\r\n    },\r\n    [AfterEffectsTemplate.ExecuteStreamProcessUpdate]: {\r\n        template: './app/templates/aftereffects/execute_stream_process_update.tpl',\r\n        template_call: `\r\n            var reference = {{reference}};\r\n            var model = result;\r\n            await {{function_name}}(agent, reference, model);`,\r\n        stream_process_change_parameter: `./app/templates/stream_process/stream_process_change_class_extension_update_by_model.tpl`,\r\n        update_with: `./app/templates/standard/update_model_property.tpl`,\r\n        templateKeys: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ModelOutput]: {\r\n                key: FunctionTemplateKeys.ModelOutput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.UpdateModel]: {\r\n                key: FunctionTemplateKeys.UpdateModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ReferenceClass]: {\r\n                key: FunctionTemplateKeys.ReferenceClass,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Reference]: {\r\n                key: FunctionTemplateKeys.Reference,\r\n                nodeTypes: [NodeTypes.Model],\r\n                useString: ['agent', 'result', 'newData', 'data'].map(t => `#${t}`)\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ManyToManyModel]: {\r\n                key: FunctionTemplateKeys.ManyToManyModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Method]: {\r\n                key: FunctionTemplateKeys.Method,\r\n                useNodes: true,\r\n                nodeTypes: [NodeTypes.Method]\r\n            },\r\n            [FunctionTemplateKeys.MethodType]: {\r\n                key: FunctionTemplateKeys.MethodType,\r\n                useMethodTypes: true\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst COMMON_CONSTRAINTS_OBJECT_METHOD = {\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelOutput]: {\r\n        key: FunctionTemplateKeys.ModelOutput,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelOutput]: {\r\n        key: FunctionTemplateKeys.ModelOutput,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ConnectionType]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ConnectionType,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_OUTPUT = {\r\n    LIST: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsList]: true\r\n    },\r\n    OBJECT: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsList]: false\r\n    },\r\n    BOOL: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Bool\r\n    }\r\n}\r\nexport const INTERNAL_TEMPLATE_REQUIREMENTS = {\r\n    METHODS: 'methods',\r\n    PARAMETERS: 'parameters',\r\n    PARAMETERSCLASS: 'Parameters', // Classes hold the parameters, that go to Change classes. See create____.tpl templates.\r\n    CHANGECLASS: 'Change', // Class objects are passed to streams for processing\r\n    RESPONSECLASS: 'Response', // When stream processing completes, these are sent back.\r\n    STREAMPROCESS: 'StreamProcess',\r\n    DETERMINING_PROPERTY: 'determining_property',\r\n    PARENTS_ID_PROPERTY: 'parentIdProperty',\r\n    MODEL: 'model',\r\n    CONSTRUCTORS: 'constructors',\r\n    TEMPLATE: 'template',\r\n    INTERFACE: 'interface',\r\n    PARENT: 'parent',\r\n    PROPERTY: 'property',\r\n    METHOD: {\r\n        CREATE: 'Create',\r\n        UPDATE: 'Update',\r\n        PROCESS: 'Process'\r\n    }\r\n}\r\nexport const FUNCTION_REQUIREMENT_KEYS = {\r\n    CLASSES: 'classes'\r\n}\r\nconst COMMON_FUNCTION_REQUIREMENTS = {\r\n    [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                },\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.UPDATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.RESPONSECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    attachment_methods: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.STREAMPROCESS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.PROCESS]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    propreties: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.DETERMINING_PROPERTY]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.PROPERTY]: FunctionTemplateKeys.Property,\r\n        }\r\n    }\r\n}\r\nexport const TEMPLATE_KEY_MODIFIERS = {\r\n    lower: 'lower',\r\n    alllower: 'alllower',\r\n    upper: 'upper'\r\n}\r\nexport function ToInterface(i) {\r\n    return `I${i}`;\r\n}\r\nexport const HTTP_METHODS = {\r\n    POST: 'HttpPost',\r\n    GET: 'HttpGet',\r\n    DELETE: 'HttpDelete',\r\n    PATCH: 'HttpPatch'\r\n}\r\nexport const COMMON_FUNCTION_TEMPLATE_KEYS = {\r\n    model: 'model',\r\n    function_name: 'function_name',\r\n    user: 'user',\r\n    user_instance: 'user_instance',\r\n    value: 'value',\r\n    agent: 'agent',\r\n    agent_type: 'agent_type'\r\n}\r\nconst PERMISSION_DEFAULTS = {\r\n    implementation: './app/templates/permissions/permission_method.tpl',\r\n    interface_: './app/templates/permissions/permission_method_interface.tpl',\r\n    params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent]\r\n}\r\n\r\nconst VALIDATION_DEFAULTS = {\r\n    implementation: './app/templates/validation/validation_method.tpl',\r\n    interface_: './app/templates/validation/validation_method_interface.tpl',\r\n    params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent, {\r\n        key: FunctionTemplateKeys.ChangeParameter,\r\n        changeparameter: true,\r\n        template: `{{${FunctionTemplateKeys.Model}}}ChangeBy{{${FunctionTemplateKeys.Agent}}}`\r\n    }]\r\n};\r\n\r\nconst FILTER_DEFAULTS = {\r\n    implementation: './app/templates/filter/filter_method.tpl',\r\n    interface_: './app/templates/filter/filter_method_interface.tpl',\r\n    params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent, { key: FunctionTemplateKeys.ModelOutput, metaparameter: true }]\r\n}\r\n\r\nexport const MethodFunctions = {\r\n    [FunctionTypes.Create_Object__Object]: {\r\n        title: Titles.Create_Object__Object,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_object.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_object_interface.tpl', 'utf8'),\r\n        templates: {\r\n        },\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET]: {\r\n        title: FunctionTypes.Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET,\r\n        template: fs.readFileSync('./app/templates/standard/many_2_many/create_with_agent_and_return_m2m_set.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/many_2_many/create_with_agent_and_return_m2m_set_interface.tpl', 'utf8'),\r\n        filter: {\r\n            params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent]\r\n        },\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Object_Agent_Many_to_Many_CompositeInput__Object]: {\r\n        title: Titles.Create_Object_Agent_Many_to_Many_CompositeInput__Object,\r\n        template: fs.readFileSync('./app/templates/standard/create_object_agent_many_to_many_compositeinput.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_object_agent_many_to_many_compositeinput_interface.tpl', 'utf8'),\r\n        permission: {\r\n            implementation: './app/templates/permissions/permission_method.tpl',\r\n            interface_: './app/templates/permissions/permission_method_interface.tpl',\r\n            params: [FunctionTemplateKeys.CompositeInput, FunctionTemplateKeys.Agent]\r\n        },\r\n        validation: {\r\n            ...VALIDATION_DEFAULTS,\r\n            asModel: FunctionTemplateKeys.CompositeInput, //Used as the model in the validation functions.\r\n            params: [FunctionTemplateKeys.CompositeInput, FunctionTemplateKeys.Agent, {\r\n                key: FunctionTemplateKeys.ChangeParameter,\r\n                changeparameter: true,\r\n                template: `{{${FunctionTemplateKeys.CompositeInput}}}ChangeBy{{${FunctionTemplateKeys.Agent}}}`\r\n            }]\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_MANY_TO_MANY_COMPOSITEINPUT_METHOD\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        ok: true,\r\n        isList: false,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Create_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_listobject_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ModelOutput]: {\r\n                key: FunctionTemplateKeys.ModelOutput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.User]: {\r\n                [NodeProperties.IsUser]: true,\r\n                key: FunctionTemplateKeys.User,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Permission]: {\r\n                key: FunctionTemplateKeys.Permission,\r\n                nodeTypes: [NodeTypes.Permission]\r\n            },\r\n            [FunctionTemplateKeys.ModelFilter]: {\r\n                key: FunctionTemplateKeys.ModelFilter,\r\n                nodeTypes: [NodeTypes.ModelFilter]\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Update_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_listobject_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__Object]: {\r\n        title: Titles.Update_Object_Agent_Value__Object,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_object.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_object_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__Object_With_Object]: {\r\n        title: Titles.Update_Object_Agent_Value__Object_With_Object,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_object_with_model.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_object_with_model_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent, FunctionTemplateKeys.UpdateModel]\r\n        },\r\n        templates: {\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD,\r\n            [FunctionTemplateKeys.UpdateModel]: {\r\n                key: FunctionTemplateKeys.UpdateModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            }\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Delete_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Delete_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Delete_M2M_By_Reference]: {\r\n        title: FunctionTypes.Delete_M2M_By_Reference,\r\n        template: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference_interface.tpl', 'utf8'),\r\n        test: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference_test.tpl', 'utf8'),\r\n        controller: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference_controller.tpl', 'utf8'),\r\n        filter: {\r\n            params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent, { key: FunctionTemplateKeys.ModelOutput, metaparameter: true }]\r\n        },\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Get_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Agent_Value__IListObject]: {\r\n        title: Titles.Get_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/get_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_agent_listobject_interface.tpl', 'utf8'),\r\n        controller: fs.readFileSync('./app/templates/standard/get_agent_listobjects_controller.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Agent]\r\n        },\r\n        filter: {\r\n            ...FILTER_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Agent, { key: FunctionTemplateKeys.ModelOutput, metaparameter: true }]\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Login]: {\r\n        title: Titles.Login,\r\n        // template: fs.readFileSync('./app/templates/standard/get_agent_listobject.tpl', 'utf8'),\r\n        // interface: fs.readFileSync('./app/templates/standard/get_agent_listobject_interface.tpl', 'utf8'),\r\n        // controller: fs.readFileSync('./app/templates/standard/get_agent_listobjects_controller.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        parameters: {\r\n            body: {},\r\n            parameters: false\r\n        },\r\n        isList: false,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Register]: {\r\n        title: Titles.Register,\r\n        // template: fs.readFileSync('./app/templates/standard/get_agent_listobject.tpl', 'utf8'),\r\n        // interface: fs.readFileSync('./app/templates/standard/get_agent_listobject_interface.tpl', 'utf8'),\r\n        // controller: fs.readFileSync('./app/templates/standard/get_agent_listobjects_controller.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        parameters: {\r\n            body: {},\r\n            parameters: false\r\n        },\r\n        isList: false,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Create_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/create_agent_childparent_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/create_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Update_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/update_agent_childparent_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/update_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Get_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/get_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Parent, FunctionTemplateKeys.Agent]\r\n        },\r\n        filter: {\r\n            ...FILTER_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Parent, FunctionTemplateKeys.Agent, { key: FunctionTemplateKeys.ModelOutput, metaparameter: true }]\r\n        },\r\n        constraints: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ModelOutput]: {\r\n                key: FunctionTemplateKeys.ModelOutput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Parent]: {\r\n                key: FunctionTemplateKeys.Parent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ManyToManyModel]: {\r\n                [NodeProperties.ManyToManyNexus]: true,\r\n                key: FunctionTemplateKeys.ManyToManyModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.User]: {\r\n                [NodeProperties.IsUser]: true,\r\n                key: FunctionTemplateKeys.User,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Permission]: {\r\n                key: FunctionTemplateKeys.Permission,\r\n                nodeTypes: [NodeTypes.Permission]\r\n            },\r\n            [FunctionTemplateKeys.ModelFilter]: {\r\n                key: FunctionTemplateKeys.ModelFilter,\r\n                nodeTypes: [NodeTypes.ModelFilter]\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        parentGet: true,\r\n        method: Methods.GetAll,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n\r\n    [FunctionTypes.Get_Object_Agent_Value__IListObject_By_Specific]: {\r\n        title: Titles.Get_Object_Agent_Value__IListObject_By_Specific,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_specific.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_specific_interface.tpl', 'utf8'),\r\n        controller: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_specific_controller.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Agent]\r\n        },\r\n        filter: {\r\n            ...FILTER_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Agent, { key: FunctionTemplateKeys.ModelOutput, metaparameter: true }]\r\n        },\r\n        constraints: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ModelOutput]: {\r\n                key: FunctionTemplateKeys.ModelOutput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.User]: {\r\n                [NodeProperties.IsUser]: true,\r\n                key: FunctionTemplateKeys.User,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Permission]: {\r\n                key: FunctionTemplateKeys.Permission,\r\n                nodeTypes: [NodeTypes.Permission]\r\n            },\r\n            [FunctionTemplateKeys.ModelFilter]: {\r\n                key: FunctionTemplateKeys.ModelFilter,\r\n                nodeTypes: [NodeTypes.ModelFilter]\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Object_Agent_Value__Object]: {\r\n        title: Titles.Get_Object_Agent_Value__Object,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_object.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_object_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.User]: {\r\n                [NodeProperties.IsUser]: true,\r\n                key: FunctionTemplateKeys.User,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Permission]: {\r\n                key: FunctionTemplateKeys.Permission,\r\n                nodeTypes: [NodeTypes.Permission]\r\n            },\r\n            [FunctionTemplateKeys.ModelFilter]: {\r\n                key: FunctionTemplateKeys.ModelFilter,\r\n                nodeTypes: [NodeTypes.ModelFilter]\r\n            }\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Get,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Get_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild_interface.tpl', 'utf8'),\r\n        filter: {\r\n            ...FILTER_DEFAULTS,\r\n            params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent, { key: FunctionTemplateKeys.ConnectionType, metaparameter: true }]\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        parentGet: true,\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Create_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Update_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild_interface.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Can_Execute_Agent_Parent_In_Valid_List]: {\r\n        title: Titles.Can_Execute_Agent_Parent_In_Valid_List,\r\n        template: fs.readFileSync('./app/templates/can_execute/can_execute_childparent_valid_list.tpl', 'utf8'),\r\n        permission: {\r\n            ...PERMISSION_DEFAULTS,\r\n        },\r\n        constraints: {\r\n            [FunctionTemplateKeys.AgentType]: {\r\n                [FunctionConstraintKeys.IsAgent]: true,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.AgentType\r\n            },\r\n            [FunctionTemplateKeys.AgentDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                key: FunctionTemplateKeys.AgentDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.Model]: {\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.Model\r\n            },\r\n            [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                [FunctionConstraintKeys.IsEnumerable]: true,\r\n                key: FunctionTemplateKeys.ModelDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.AgentInstance]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.AgentInstance,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            },\r\n            [FunctionTemplateKeys.Value]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.Value,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.BOOL\r\n        },\r\n        [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {},\r\n        attachment_methods: {},\r\n        propreties: {},\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }\r\n}\r\nObject.values(MethodFunctions).map(t => {\r\n    if (t && !t.permission) {\r\n        t.permission = { ...PERMISSION_DEFAULTS };\r\n        t.permission.usingDefault = true;\r\n    }\r\n    if (t && !t.validation) {\r\n        t.validation = { ...VALIDATION_DEFAULTS };\r\n    }\r\n    if (t && !t.filter) {\r\n        t.filter = { ...FILTER_DEFAULTS };\r\n    }\r\n});\r\n\r\nexport const MethodTemplateKeys = {\r\n    stream_process_change_parameter: 'stream_process_change_parameter',\r\n    update_with: 'update_with'\r\n}\r\nexport const FunctionMethodTypes = {\r\n    GET: 'GET',\r\n    CREATE: 'CREATE',\r\n    DELETE: 'DELETE',\r\n    UPDATE: 'UPDATE'\r\n}\r\nexport const ConditionTypes = {\r\n    InEnumerable: 'in-enumeration',\r\n    InExtension: 'in-extension',\r\n    MatchReference: 'match-reference',\r\n    MatchManyReferenceParameter: 'match-many-reference-parameter'\r\n}\r\nexport const ConditionCases = {\r\n    [ConditionTypes.MatchReference]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    },\r\n    [ConditionTypes.MatchManyReferenceParameter]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    }\r\n}\r\nexport const ConditionTypeParameters = {\r\n    RefManyToMany: 'refManyToMany',\r\n    RefManyToManyProperty: 'refManyToManyProperty',\r\n    Ref1: 'ref1',\r\n    Ref2: 'ref2',\r\n    Ref1UseId: 'ref1UseId',\r\n    Ref2UseId: 'ref2UseId',\r\n    Ref1Property: 'ref1Property',\r\n    Ref2Property: 'ref2Property'\r\n}\r\n\r\nexport const ConditionTypeOptions = {\r\n    IsFalse: 'is-false',\r\n    IsTrue: 'is-true'\r\n}\r\n\r\nexport const ConditionFunctionSetups = {\r\n    [ConditionTypes.MatchReference]: {},\r\n    [ConditionTypes.MatchManyReferenceParameter]: {},\r\n    [ConditionTypes.InEnumerable]: {}\r\n}\r\nObject.keys(MethodFunctions).map(key => {\r\n    if (MethodFunctions[key].constraints) {\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions = ConditionFunctionSetups[ConditionTypes.MatchReference].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions = ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions = ConditionFunctionSetups[ConditionTypes.InEnumerable].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n    }\r\n});\r\n\r\nexport const FunctionPerpetrators = {\r\n    Agent: 'Agent',\r\n    System: 'System' // This is theorhetical atm 23.05.2019\r\n}\r\n\r\nexport const ReturnTypes = {\r\n    CHILD: 'CHILD',\r\n    OBJECT: 'OBJECT',\r\n    LISTCHILD: 'LISTCHILD',\r\n    LISTOBJECT: 'LISTOBJECT', //May end up being a different dimension,\r\n    BOOL: 'BOOL'\r\n}\r\n\r\nexport function hasTemplate(templateString) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n    return hasTemplate;\r\n}\r\n\r\nexport function bindTemplate(templateString, data) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n    Object.keys(data).map(t => {\r\n        if (!data[t + '#lower']) {\r\n            data[t + '#lower'] = `${data[t]}`.toLowerCase();\r\n        }\r\n    });\r\n\r\n    if (hasTemplate) {\r\n        for (var t in data) {\r\n            var subregex = new RegExp('({{)' + t + '(}})', 'g');\r\n            var val = data[t];\r\n            templateString = templateString.replace(subregex, val === null || val === undefined ? '' : val);\r\n        }\r\n    }\r\n\r\n    return templateString;\r\n\r\n}","import * as Titles from '../components/titles'\r\nimport { NodeTypes, NodeTypeColors, NodeProperties, NodePropertiesDirtyChain, DIRTY_PROP_EXT, LinkProperties, LinkType, LinkPropertyKeys, NodePropertyTypes, GroupProperties, FunctionGroups, LinkEvents } from '../constants/nodetypes';\r\nimport { Functions, FunctionTemplateKeys, FunctionConstraintKeys, FUNCTION_REQUIREMENT_KEYS, INTERNAL_TEMPLATE_REQUIREMENTS } from '../constants/functiontypes';\r\nimport { GetNodeProp, GetLinkProperty, GetNodeTitle, GetGroupProperty, GetCurrentGraph, GetRootGraph, GetNodeById } from '../actions/uiactions';\r\nimport { uuidv4 } from '../utils/array';\r\nimport { isBuffer } from 'util';\r\nvar os = require('os');\r\n\r\nexport function createGraph() {\r\n    return {\r\n        id: uuidv4(),\r\n        version: {\r\n            major: 0,\r\n            minor: 0,\r\n            build: 0\r\n        },\r\n        workspace: '',\r\n        title: Titles.DefaultGraphTitle,\r\n        path: [],\r\n        namespace: '',\r\n        //Groups\r\n        groups: [],\r\n        groupLib: {},\r\n        groupsNodes: {}, // group => { node}\r\n        nodesGroups: {}, // node => {group}\r\n        childGroups: {}, // group => {group}\r\n        parentGroup: {}, // group => {group}\r\n        //Groups \r\n        //Reference nodes\r\n        referenceNodes: {},\r\n        //Reference nodes\r\n        nodeLib: {},\r\n        nodes: [],\r\n        nodeLinks: {}, // A library of nodes, and each nodes that it connects.\r\n        nodeConnections: {}, // A library of nodes, and each nodes links\r\n        linkLib: {},\r\n        links: [],\r\n        graphs: {},\r\n        classNodes: {},\r\n        functionNodes: {}, // A function nodes will be run through for checking constraints.\r\n        updated: null,\r\n        visibleNodes: {}, //Nodes that are visible now, and used to calculate the visibility of other nodes.\r\n        appConfig: {\r\n            \"Logging\": {\r\n                \"IncludeScopes\": false,\r\n                \"LogLevel\": {\r\n                    \"Default\": \"Debug\",\r\n                    \"System\": \"Information\",\r\n                    \"Microsoft\": \"Information\"\r\n                }\r\n            },\r\n            \"AppSettings\": {\r\n                \"Local-AuthorizationKey\": \"C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==\",\r\n                \"Local-EndPointUrl\": \"https://localhost:8081\",\r\n                \"use_local\": \"true\",\r\n                \"EndPointUrl\": \"\",\r\n                \"AuthorizationKey\": \"\",\r\n                \"DatabaseId\": \"red-db-001\",\r\n                \"AssemblyPrefixes\": \"Smash;RedQuick\",\r\n                \"Use-SingleCollection\": \"true\",\r\n                \"storage-key\": \"UseDevelopmentStorage=true\",\r\n                \"single-thread\": true,\r\n                \"ConfirmEmailController\": \"Account\",\r\n                \"ConfirmEmailAction\": \"ConfirmEmail\",\r\n                \"HomeAction\": \"Index\",\r\n                \"HomeController\": \"Home\",\r\n                \"ResetPasswordAction\": \"ResetPassword\",\r\n                \"ResetPasswordController\": \"Account\",\r\n                \"SecurityKey\": \"ajskdflajsdfklas20klasdkfj9laksdjfl4aksdjf3kanvdlnaekf\",\r\n                \"Domain\": \"https://localhost:13424\",\r\n                \"TokenExpirationInMinutes\": \"250\",\r\n                \"DomainPort\": \"13424\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const GraphKeys = {\r\n    NAMESPACE: 'namespace',\r\n    PROJECTNAME: 'project_name',\r\n    COLORSCHEME: 'color_scheme',\r\n    SERVER_SIDE_SETUP: 'server_side_setup'\r\n}\r\nexport function updateWorkSpace(graph, options) {\r\n    let {\r\n        workspace\r\n    } = options;\r\n\r\n    graph.workspaces = graph.workspaces || {};\r\n    graph.workspaces[os.platform()] = workspace;\r\n    if (graph.workspaces[os.platform()]) {\r\n        graph.workspace = workspace;\r\n    }\r\n    return graph;\r\n\r\n}\r\n\r\nexport function CreateLayout() {\r\n    return {\r\n        layout: {},\r\n        properties: {}\r\n    }\r\n}\r\nexport function FindLayoutRoot(id, root) {\r\n    if (root && root[id]) {\r\n        return root[id];\r\n    }\r\n    else {\r\n        let res;\r\n        Object.keys(root).find(t => {\r\n            if (root[t])\r\n                res = FindLayoutRoot(id, root[t]);\r\n            else { return false; }\r\n            return res;\r\n        });\r\n        return res;\r\n    }\r\n    return false;\r\n}\r\nexport function FindLayoutRootParent(id, root, parent) {\r\n    if (root[id]) {\r\n        return root || parent;\r\n    }\r\n    else {\r\n        let res;\r\n        Object.keys(root).find(t => {\r\n            res = FindLayoutRootParent(id, root[t], root);\r\n            return res;\r\n        });\r\n        return res;\r\n    }\r\n    return false;\r\n}\r\nexport function GetAllChildren(root) {\r\n    var result = Object.keys(root || {})\r\n    result.map(t => {\r\n        let temp = GetAllChildren(root[t]);\r\n        result = [...result, ...temp];\r\n    });\r\n    return result;\r\n}\r\nexport const DefaultCellProperties = {\r\n    style: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        height: '100%',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1\r\n    },\r\n    children: {}\r\n}\r\nexport function GetCellProperties(setup, id) {\r\n    var { properties } = setup;\r\n    return properties[id];\r\n}\r\nexport function RemoveCellLayout(setup, id) {\r\n    if (setup && setup.layout) {\r\n        let parent = FindLayoutRootParent(id, setup.layout);\r\n        if (parent) {\r\n            let kids = GetAllChildren(parent[id]);\r\n            kids.map(t => {\r\n                delete setup.properties[t];\r\n            });\r\n\r\n            delete parent[id];\r\n            delete setup.properties[id];\r\n        }\r\n    }\r\n    return setup;\r\n}\r\nexport function SetCellsLayout(setup, count, id, properties = DefaultCellProperties) {\r\n    let keys = [];\r\n    let root = null;\r\n    count = parseInt(count);\r\n    if (!id) {\r\n        keys = Object.keys(setup.layout);\r\n        root = setup.layout;\r\n    }\r\n    else {\r\n        root = FindLayoutRoot(id, setup.layout);\r\n        if (!root) {\r\n            throw 'missing root';\r\n        }\r\n        keys = Object.keys(root);\r\n    }\r\n    //If there is room add keys\r\n    if (keys.length - count < 0) {\r\n        [].interpolate(0, count - keys.length, () => {\r\n            let newkey = uuidv4();\r\n            root[newkey] = {};\r\n            setup.properties[newkey] = { ...JSON.parse(JSON.stringify(properties)) };\r\n        });\r\n    }\r\n    else if (keys.length - count > 0) {\r\n        [].interpolate(0, keys.length - count, (index) => {\r\n            delete root[keys[index]];\r\n            delete setup.properties[keys[index]];\r\n        })\r\n    }\r\n\r\n    return setup;\r\n}\r\n\r\n\r\nexport function incrementBuild(graph) {\r\n    graph.version.build++;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMinor(graph) {\r\n    graph.version.minor++;\r\n    graph.version.build = 0;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMajor(graph) {\r\n    graph.version.major++;\r\n    graph.version.minor = 0;\r\n    graph.version.build = 0;\r\n    return graph;\r\n}\r\n\r\nexport function updateGraphTitle(graph, ops) {\r\n    var { text } = ops;\r\n    graph.title = text;\r\n    return graph;\r\n}\r\n\r\nexport function createScreenParameter(parameter) {\r\n    return {\r\n        title: parameter || '',\r\n        id: uuidv4()\r\n    }\r\n}\r\nexport function GetParameterName(parameter) {\r\n    if (parameter)\r\n        return parameter.title || '';\r\n    return '';\r\n}\r\n\r\nexport function updateGraphProperty(graph, ops) {\r\n    var { prop, value } = ops;\r\n    graph[prop] = value;\r\n    return graph;\r\n}\r\n\r\nexport function addNewSubGraph(graph) {\r\n    var newgraph = createGraph();\r\n    newgraph.title = Titles.DefaultSubGraphTitle;\r\n    graph.graphs[newgraph.id] = newgraph;\r\n    return graph;\r\n}\r\nexport function removeSubGraph(graph, id) {\r\n    delete graph.graphs[id];\r\n    return graph\r\n}\r\n\r\nexport function getSubGraphs(graph) {\r\n    return graph && graph.graphs ? Object.keys(graph.graphs || {}).map(t => graph.graphs[t]) : [];\r\n}\r\n\r\nexport function getSubGraph(graph, scopes) {\r\n    var result = graph;\r\n\r\n    scopes.map(scope => {\r\n        result = graph.graphs[scope];\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function getScopedGraph(graph, options) {\r\n    var { scope } = options;\r\n    if (scope && scope.length) {\r\n        console.log(scope);\r\n        scope.map((s, i) => {\r\n            graph = graph.graphs[s];\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function setScopedGraph(root, options) {\r\n    var { scope, graph } = options;\r\n    if (scope && scope.length) {\r\n        var currentGraph = root;\r\n        scope.map((s, i) => {\r\n            if (i === scope.length - 1) {\r\n                currentGraph.graphs[s] = graph;\r\n            } else {\r\n                currentGraph = currentGraph.graphs[s];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        root = graph;\r\n    }\r\n    return root;\r\n}\r\n\r\nexport function newGroup(graph, callback) {\r\n    let group = createGroup();\r\n    let result = addGroup(graph, group);\r\n    if (callback) {\r\n        callback(group);\r\n    }\r\n    return result;\r\n}\r\nexport function GetNodesInGroup(graph, group) {\r\n    return (graph.groupsNodes && graph.groupsNodes[group] && Object.keys(graph.groupsNodes[group]).filter(v => graph.groupsNodes[group][v])) || [];\r\n}\r\nexport function addLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let leaves = graph.groupLib[id].leaves || [];\r\n    leaves = [...leaves, leaf].unique(x => x);\r\n\r\n    //Groups => nodes\r\n    graph.groupsNodes[id] = graph.groupsNodes[id] || {}\r\n    graph.groupsNodes[id][leaf] = true;\r\n    graph.groupsNodes = {\r\n        ...graph.groupsNodes\r\n    }\r\n\r\n    //Nodes => groups\r\n    graph.nodesGroups[leaf] = graph.nodesGroups[leaf] || {}\r\n    graph.nodesGroups[leaf][id] = true;\r\n    graph.nodesGroups = {\r\n        ...graph.nodesGroups\r\n    }\r\n\r\n\r\n\r\n    graph.groupLib[id].leaves = leaves;\r\n    return graph;\r\n}\r\nexport function removeLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    if (group) {\r\n        let leaves = group.leaves || [];\r\n        leaves = [...leaves.filter(t => t !== leaf)];\r\n        graph.groupLib[id].leaves = leaves;\r\n    }\r\n    if (graph.groupsNodes[id]) {\r\n        if (graph.groupsNodes[id][leaf]) {\r\n            delete graph.groupsNodes[id][leaf];\r\n        }\r\n        if (Object.keys(graph.groupsNodes[id]).length === 0) {\r\n            delete graph.groupsNodes[id];\r\n            graph.groups = [...graph.groups.filter(x => x !== id)];\r\n            delete graph.groupLib[id];\r\n        }\r\n        graph.groupsNodes = {\r\n            ...graph.groupsNodes\r\n        }\r\n    }\r\n\r\n    if (graph.nodesGroups[leaf]) {\r\n        if (graph.nodesGroups[leaf][id]) {\r\n            delete graph.nodesGroups[leaf][id];\r\n        }\r\n        if (Object.keys(graph.nodesGroups[leaf]).length === 0) {\r\n            delete graph.nodesGroups[leaf];\r\n        }\r\n        graph.nodesGroups = {\r\n            ...graph.nodesGroups\r\n        }\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\n\r\n\r\nexport function addGroupToGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    let groups = group.groups || [];\r\n\r\n    group.groups = [...groups, groupId].unique(x => x);\r\n    graph.groupLib[id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n\r\n    //Groups need to know who contains them,\r\n    graph.childGroups[id] = graph.childGroups[id] || {};\r\n    graph.childGroups[id][groupId] = true;\r\n    // and also the containers to know about the groups\r\n    graph.parentGroup[groupId] = graph.parentGroup[groupId] || {};\r\n    graph.parentGroup[groupId][id] = true;\r\n\r\n\r\n    return graph;\r\n}\r\nexport function removeGroupFromGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n\r\n    group.groups = [...group.groups.filter(x => x !== groupId)];\r\n    graph.groupLib[id] = { ...group };\r\n    if (graph.childGroups) {\r\n        if (graph.childGroups[id]) {\r\n            delete graph.childGroups[id][groupId];\r\n            if (!Object.keys(graph.childGroups[id]).length) {\r\n                delete graph.childGroups[id];\r\n            }\r\n        }\r\n\r\n        if (graph.parentGroup[groupId]) {\r\n            delete graph.parentGroup[groupId][id];\r\n            if (!Object.keys(graph.parentGroup[groupId]).length) {\r\n                delete graph.childGroups[groupId];\r\n            }\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function clearGroup(graph, ops) {\r\n    var { id } = ops\r\n    for (let i in graph.groupsNodes[id]) {\r\n        if (graph.nodesGroups[i]) {\r\n            delete graph.nodesGroups[i][id];\r\n            if (Object.keys(graph.nodesGroups[i]).length === 0) {\r\n                delete graph.nodesGroups[i];\r\n            }\r\n        }\r\n    }\r\n    for (let i in graph.childGroups[id]) {\r\n        if (graph.parentGroup[i]) {\r\n            delete graph.parentGroup[i][id]\r\n            if (Object.keys(graph.parentGroup[i]).length === 0) {\r\n                delete graph.parentGroup[i];\r\n            }\r\n        }\r\n    }\r\n    graph.groups = [...graph.groups.filter(x => x !== id)];\r\n    delete graph.groupLib[id]\r\n    delete graph.childGroups[id];\r\n    delete graph.groupsNodes[id];\r\n\r\n    return graph;\r\n}\r\nexport function createValidator() {\r\n    return {\r\n        properties: {}\r\n    }\r\n}\r\n\r\nexport function createMethodValidation(methodType) {\r\n    let res = {\r\n        methods: {\r\n        }\r\n    }\r\n\r\n    if (res && !res.methods[methodType]) {\r\n        res.methods[methodType] = createMethodValidationType();\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nexport function createMethodValidationType() {\r\n    return {};\r\n}\r\nexport function getMethodValidationType(methodValidation, methodType) {\r\n    var { methods } = methodValidation;\r\n    if (methods && methods[methodType]) {\r\n        return methods[methodType];\r\n    }\r\n    return null;\r\n}\r\nexport function addMethodValidationForParamter(methodValidation, methodType, methodParam, methedParamProperty) {\r\n    methodValidation = methodValidation || createMethodValidation(methodType);\r\n    if (getMethodValidationType(methodValidation, methodType)) {\r\n        let methodValidationType = getMethodValidationType(methodValidation, methodType);\r\n        if (methodParam) {\r\n            methodValidationType[methodParam] = methodValidationType[methodParam] || createProperyContainer();\r\n            if (methedParamProperty && methodValidationType[methodParam]) {\r\n                methodValidationType[methodParam].properties[methedParamProperty] = methodValidationType[methodParam].properties[methedParamProperty] || createValidatorProperty();\r\n            }\r\n        }\r\n    }\r\n    return methodValidation;\r\n}\r\nexport function createProperyContainer() {\r\n    return {\r\n        properties: {}\r\n    }\r\n}\r\nexport function getMethodValidationForParameter(methodValidation, methodType, methodParam, methodProperty) {\r\n    methodValidation = methodValidation || addMethodValidationForParamter(methodValidation, methodType, methodParam);\r\n    if (methodValidation) {\r\n        let temp = getMethodValidationType(methodValidation, methodType);\r\n        if (temp) {\r\n            if (temp[methodParam] && temp[methodParam]) {\r\n                return temp[methodParam];\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function removeMethodValidationParameter(methodValidation, methodType, methodParam, methedParamProperty) {\r\n    if (methodValidation) {\r\n        let temp = getMethodValidationType(methodValidation, methodType);\r\n        if (temp) {\r\n            if (temp[methodParam] && temp[methodParam].properties && temp[methodParam].properties[methedParamProperty]) {\r\n                delete temp[methodParam].properties[methedParamProperty];\r\n            };\r\n        }\r\n    }\r\n    return methodValidation\r\n}\r\nexport const createExecutor = createValidator;\r\n\r\nexport function createValidatorProperty() {\r\n    return {\r\n        validators: {\r\n        }\r\n    }\r\n}\r\nexport function addValidatator(validator, options) {\r\n    validator.properties[options.id] = validator.properties[options.id] || createValidatorProperty();\r\n    if (options.validator)\r\n        validator.properties[options.id].validators[options.validator] = options.validatorArgs;\r\n\r\n    return validator;\r\n}\r\nexport function removeValidatorValidation(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator];\r\n\r\n    return _validator;\r\n}\r\nexport function removeValidator(validator, options) {\r\n    delete validator.properties[options.id];\r\n    return validator;\r\n}\r\n\r\nexport function getValidatorItem(item, options) {\r\n    var { property, validator } = options;\r\n    return item.properties[property].validators[validator];\r\n}\r\n\r\nexport function getValidatorProperties(validator) {\r\n    return validator ? validator.properties : null;\r\n}\r\nexport function setDepth(graph, options) {\r\n    var { depth } = options;\r\n    graph.depth = depth;\r\n\r\n    return graph;\r\n}\r\nexport function newNode(graph) {\r\n    let node = createNode();\r\n    return addNode(graph, node);\r\n}\r\nexport function createExtensionDefinition() {\r\n    return {\r\n        //The code generation will define the unique 'value'.\r\n        config: {\r\n            //If this definition is a list or some sort of collection.\r\n            isEnumeration: false,\r\n            // If not, then it is a dictionary, and will have some sort of property that will  be considered the value.\r\n            dictionary: {},\r\n            // A list of objects, with the same shape as the dictionary.\r\n            list: []\r\n        },\r\n        definition: {}\r\n    }\r\n}\r\nexport function defaultExtensionDefinitionType() {\r\n    return 'string';\r\n}\r\nexport function removeNode(graph, options = {}) {\r\n    let { id } = options;\r\n    let existNodes = getNodesByLinkType(graph, { exist: true, id, direction: TARGET, type: LinkType.Exist });\r\n\r\n    graph = incrementBuild(graph);\r\n    //links\r\n    graph = clearLinks(graph, options);\r\n\r\n    //groups \r\n    graph = removeNodeFromGroups(graph, options);\r\n\r\n    if (graph.functionNodes && graph.functionNodes[id]) {\r\n        delete graph.functionNodes[id];\r\n        graph.functionNodes = { ...graph.functionNodes };\r\n    }\r\n    if (graph.classNodes && graph.classNodes[id]) {\r\n        delete graph.classNodes[id];\r\n        graph.classNodes = { ...graph.classNodes };\r\n    }\r\n    delete graph.nodeLib[id];\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes.filter(x => x !== id)];\r\n    if (existNodes) {\r\n        existNodes.map(en => {\r\n            graph = removeNode(graph, { id: en.id });\r\n        })\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function GetManyToManyNodes(state, ids) {\r\n    if (state && ids && ids.length) {\r\n\r\n        return NodesByType(state, NodeTypes.Model).filter(x => GetNodeProp(x, NodeProperties.ManyToManyNexus)).filter(x => {\r\n            return !(ids || []).some(t => {\r\n                return (GetNodeProp(x, NodeProperties.ManyToManyNexusTypes) || []).indexOf(t) !== -1;\r\n            });\r\n        });\r\n    }\r\n    return [];\r\n}\r\nexport function getPropertyNodes(graph, id) {\r\n    return getNodesByLinkType(graph, { id, direction: SOURCE, type: LinkType.PropertyLink });\r\n}\r\nexport function getDataChainNodes(graph, id) {\r\n    return getNodesByLinkType(graph, { id, direction: TARGET, type: LinkType.DataChainLink });\r\n}\r\nfunction isEmpty(obj) {\r\n    return obj && Object.keys(obj).length === 0;\r\n}\r\nfunction clearGroupDeep(graph, options) {\r\n    var { id, callback } = options;\r\n    var success = true;\r\n    if (graph.childGroups[id]) {\r\n        for (var i in graph.childGroups[id]) {\r\n            var ok = false;\r\n            graph = clearGroupDeep(graph, {\r\n                id: i,\r\n                callback: (v) => {\r\n                    ok = v;\r\n                    success = success && v;\r\n                }\r\n            })\r\n            if (graph.childGroups[id]) {\r\n                delete graph.childGroups[id][i];\r\n            }\r\n        }\r\n    }\r\n    if (success) {\r\n        //If the children were empty this can be cleared out\r\n        if (!graph.groupLib[id] || !graph.groupLib[id].leaves || !graph.groupLib[id].leaves.length) {\r\n            if (!graph.groupLib[id] || !graph.groupLib[id].groups || !graph.groupLib[id].groups.length) {\r\n                //if these conditions are met.\r\n                delete graph.groupLib[id];\r\n                graph.groups = [...graph.groups.filter(x => x !== id)];\r\n                delete graph.childGroups[id];\r\n                if (graph.parentGroup[id]) {\r\n                    for (var i in graph.parentGroup[id]) {\r\n                        graph = removeGroupFromGroup(graph, { groupId: id, id: i });\r\n                        graph = clearGroupDeep(graph, { id: i });\r\n                        if (graph.childGroups[i])\r\n                            delete graph.childGroups[i][id]\r\n                    }\r\n                    delete graph.parentGroup[id];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (callback) {\r\n            callback(false);\r\n        }\r\n    }\r\n    return graph;\r\n}\r\nexport function removeNodeFromGroups(graph, options) {\r\n    let { id } = options;\r\n    let groupsContainingNode = [];\r\n    //nodesGroups\r\n    if (graph.nodesGroups[id]) {\r\n        groupsContainingNode = Object.keys(graph.nodesGroups[id]);\r\n        groupsContainingNode.map(group => {\r\n            graph = removeLeaf(graph, { leaf: id, id: group })\r\n        })\r\n    }\r\n\r\n    //groupsNodes\r\n    if (graph.groupsNodes) {\r\n        groupsContainingNode.map(group => {\r\n            if (graph.groupsNodes[group]) {\r\n                if (graph.groupsNodes[group][id]) {\r\n                    delete graph.groupsNodes[group][id]\r\n                }\r\n\r\n                if (Object.keys(graph.groupsNodes[group]).length === 0) {\r\n                    delete graph.groupsNodes[group];\r\n                }\r\n            }\r\n            graph = clearGroupDeep(graph, { id: group });\r\n        })\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\nexport function clearLinks(graph, options) {\r\n    let { id } = options;\r\n    let linksToRemove = getAllLinksWithNode(graph, id);\r\n    for (let i = 0; i < linksToRemove.length; i++) {\r\n        let link = linksToRemove[i];\r\n        graph = removeLink(graph, link);\r\n    }\r\n    return graph;\r\n\r\n}\r\n\r\nexport function addNode(graph, node) {\r\n    graph.nodeLib[node.id] = node;\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes, node.id];\r\n    graph = { ...graph };\r\n    graph = incrementBuild(graph);\r\n    return graph;\r\n}\r\nexport function addGroup(graph, group) {\r\n    graph.groupLib[group.id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n    graph.groups = [...graph.groups, group.id].unique(x => x);\r\n    graph = { ...graph };\r\n    return graph;\r\n}\r\n\r\nexport function addNewPropertyNode(graph, options) {\r\n    return addNewNodeOfType(graph, options, NodeTypes.Property);\r\n}\r\n\r\nconst DEFAULT_PROPERTIES = [\r\n    { title: 'Owner', type: NodePropertyTypes.STRING },\r\n    { title: 'Id', type: NodePropertyTypes.STRING },\r\n    { title: 'Created', type: NodePropertyTypes.DATETIME },\r\n    { title: 'Updated', type: NodePropertyTypes.DATETIME },\r\n    { title: 'Deleted', type: NodePropertyTypes.BOOLEAN },\r\n    { title: 'Version', type: NodePropertyTypes.STRING }\r\n].map(t => {\r\n    t.nodeType = NodeTypes.Property;\r\n    return t;\r\n});\r\n\r\nexport function addDefaultProperties(graph, options) {\r\n    // updateNodeProperty\r\n    var propertyNodes = GetLinkChainFromGraph(graph, {\r\n        id: options.parent,\r\n        links: [{\r\n            direction: SOURCE,\r\n            type: LinkType.PropertyLink\r\n        }]\r\n    }).map(t => GetNodeProp(t, NodeProperties.UIText));\r\n    DEFAULT_PROPERTIES.filter(t => {\r\n        return propertyNodes.indexOf(t.title) === -1;\r\n    }).map(dp => {\r\n        graph = addNewNodeOfType(graph, options, dp.nodeType, (new_node, _graph) => {\r\n            _graph = updateNodeProperty(_graph, {\r\n                id: new_node.id,\r\n                prop: NodeProperties.UIText,\r\n                value: dp.title\r\n            });\r\n            _graph = updateNodeProperty(_graph, {\r\n                id: new_node.id,\r\n                prop: NodeProperties.IsDefaultProperty,\r\n                value: true\r\n            });\r\n            _graph = updateNodeProperty(_graph, {\r\n                id: new_node.id,\r\n                prop: NodeProperties.UIAttributeType,\r\n                value: dp.type\r\n            });\r\n            return _graph;\r\n        })\r\n    });\r\n\r\n    return graph;\r\n}\r\n\r\nfunction updateNode(node, options) {\r\n    if (options.node) {\r\n        Object.apply(node.properties, JSON.parse(JSON.stringify(options.node.properties)));\r\n    }\r\n}\r\nexport function addNewNodeOfType(graph, options, nodeType, callback) {\r\n    let { parent, linkProperties, groupProperties } = options;\r\n    let node = createNode(nodeType);\r\n    if (options.node) {\r\n        updateNode(node, options);\r\n        if (nodeType === NodeTypes.ReferenceNode) {\r\n            if (options.rootNode) {\r\n                options.rootNode.referenceNodes[graph.id] = {\r\n                    ...(options.rootNode.referenceNodes[graph.id] || {}),\r\n                    ...({\r\n                        [node.id]: options.node.id\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    graph = addNode(graph, node);\r\n    if (parent) {\r\n        graph = newLink(graph, { source: parent, target: node.id, properties: linkProperties ? linkProperties.properties : null });\r\n    }\r\n    if (options.links) {\r\n        options.links.map(link => {\r\n            graph = newLink(graph, { source: node.id, target: link.target, properties: link.linkProperties ? link.linkProperties.properties : null });\r\n        })\r\n    }\r\n    graph = updateNodeProperty(graph, { id: node.id, prop: NodeProperties.NODEType, value: nodeType });\r\n    graph = updateNodeProperty(graph, { id: node.id, prop: NodeProperties.Pinned, value: true });\r\n    if (options.properties) {\r\n        for (var p in options.properties) {\r\n            graph = updateNodeProperty(graph, { id: node.id, prop: p, value: options.properties[p] });\r\n        }\r\n    }\r\n    if (groupProperties) {\r\n        graph = updateNodeGroup(graph, { id: node.id, groupProperties, parent })\r\n    }\r\n    if (callback) {\r\n        graph = callback(GetNodeById(node.id, graph), graph) || graph;\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function updateNodeGroup(graph, options) {\r\n    var { id, groupProperties, parent } = options;\r\n    var group = null;\r\n    if (groupProperties && groupProperties.id) {\r\n        group = getGroup(graph, groupProperties.id);\r\n    }\r\n    else if (!hasGroup(graph, parent)) {\r\n        var group = createGroup();\r\n        graph = addGroup(graph, group);\r\n        graph = updateNodeProperty(graph, {\r\n            id: parent,\r\n            value: { group: group.id },\r\n            prop: NodeProperties.Groups\r\n        });\r\n        graph = addLeaf(graph, { leaf: parent, id: group.id });\r\n        var grandParent = GetNodeProp(graph.nodeLib[parent], NodeProperties.GroupParent);\r\n        if (grandParent && graph.groupLib[grandParent]) {\r\n            var gparentGroup = graph.groupLib[grandParent];\r\n            if (gparentGroup) {\r\n                var ancestores = getGroupAncenstors(graph, gparentGroup.id);\r\n                graph = addGroupToGroup(graph, {\r\n                    id: gparentGroup.id,\r\n                    groupId: group.id\r\n                });\r\n                ancestores.map(anc => {\r\n                    graph = addGroupToGroup(graph, {\r\n                        id: anc,\r\n                        groupId: group.id\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        let nodeGroupProp = GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups);\r\n        group = getGroup(graph, nodeGroupProp.group);\r\n    }\r\n\r\n    if (group) {\r\n        graph = addLeaf(graph, { leaf: id, id: group.id });\r\n        graph = updateNodeProperty(graph, {\r\n            id,\r\n            value: group.id,\r\n            prop: NodeProperties.GroupParent\r\n        });\r\n\r\n        if (groupProperties) {\r\n            for (var gp in groupProperties) {\r\n                graph = updateGroupProperty(graph, {\r\n                    id: group.id,\r\n                    prop: gp,\r\n                    value: groupProperties[gp]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\nfunction getGroupAncenstors(graph, id) {\r\n    var result = [];\r\n    if (graph.parentGroup[id]) {\r\n        for (var i in graph.parentGroup[id]) {\r\n            result = [...result, ...getGroupAncenstors(graph, i)];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function getGroup(graph, id) {\r\n    return graph.groupLib[id];\r\n}\r\nexport function hasGroup(graph, parent) {\r\n    return !!(graph.nodeLib[parent] && GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups));\r\n}\r\nexport function GetNode(graph, id) {\r\n    if (graph && graph.nodeLib) {\r\n        return graph.nodeLib[id];\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\nexport function GetChildComponentAncestors(state, id) {\r\n    let result = [];\r\n\r\n    let graph = GetRootGraph(state);\r\n    let ancestors = GetNodesLinkedTo(graph, {\r\n        id,\r\n        direction: TARGET\r\n    }).filter(x => {\r\n        let nodeType = GetNodeProp(x, NodeProperties.NODEType);\r\n        switch (nodeType) {\r\n            case NodeTypes.ScreenOption:\r\n            case NodeTypes.ComponentNode:\r\n                return true;\r\n        }\r\n        return false;\r\n    }).map(t => t.id);\r\n\r\n    result = [...result, ...ancestors].unique();\r\n    ancestors.map(t => {\r\n        let temp = GetChildComponentAncestors(state, t);\r\n        result = [...result, ...temp];\r\n    });\r\n    return result.unique();\r\n\r\n}\r\nexport function createComponentProperties() {\r\n    return {\r\n        properties: {},\r\n        instanceTypes: {}\r\n    };\r\n}\r\nexport function addComponentProperty(props, ops) {\r\n    let { modelType, modelProp, instanceType } = ops;\r\n    if (props && props.properties) {\r\n        props.properties[modelProp] = modelType;\r\n        props.instanceTypes[modelProp] = instanceType;\r\n    }\r\n    return props;\r\n}\r\nexport function removeComponentProperty(props, ops) {\r\n    let { modelProp } = ops;\r\n    if (props && props.properties) {\r\n        delete props.properties[modelProp];\r\n        delete props.instanceTypes[modelProp];\r\n    }\r\n    return props;\r\n\r\n}\r\n\r\n\r\n\r\nexport function updateClientMethod(methodParams, key, param, mparam, value) {\r\n    methodParams[key] = methodParams[key] || {};\r\n    methodParams[key].parameters = methodParams[key].parameters || {};\r\n    methodParams[key].parameters[param] = methodParams[key].parameters[param] || {};\r\n    methodParams[key].parameters[param] = {\r\n        ...methodParams[key].parameters[param],\r\n        [mparam]: value\r\n    }\r\n\r\n    return methodParams\r\n\r\n}\r\n\r\nexport function getClientMethod(methodParams, key, param, mparam) {\r\n    if (methodParams && methodParams[key] && methodParams[key].parameters && methodParams[key].parameters[param] && methodParams[key].parameters[param][mparam])\r\n        return methodParams[key].parameters[param][mparam];\r\n\r\n    return null;\r\n\r\n}\r\nexport function getComponentPropertyList(props) {\r\n    if (props && props.properties) {\r\n        return Object.keys(props.properties).map(t => ({ title: t, id: props.properties[t], value: t }))\r\n    }\r\n    return [];\r\n}\r\nexport function hasComponentProperty(props, prop) {\r\n    return props && props.properties && props.properties.hasOwnProperty(prop);\r\n}\r\nexport function getComponentProperty(props, prop, type = 'properties') {\r\n    return props && props[type] && props[type][(prop)];\r\n}\r\nexport function GetGroup(graph, id) {\r\n    if (graph && graph.groupLib) {\r\n        return graph.groupLib[id];\r\n    }\r\n    return null;\r\n}\r\nexport function applyConstraints(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n    if (functionNodes) {\r\n        for (let i in functionNodes) {\r\n            let node = GetNode(graph, i);\r\n            if (node) {\r\n                var functionType = GetNodeProp(node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject) {\r\n                        graph = checkConstraints(graph, { id: i, functionConstraints: functionConstraintObject });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let validationNodes = NodesByType(graph, NodeTypes.Validator);\r\n    validationNodes.map(x => {\r\n        graph = applyValidationNodeRules(graph, x);\r\n    })\r\n    return graph;\r\n}\r\n\r\nfunction applyValidationNodeRules(graph, node) {\r\n\r\n    let validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (validator) {\r\n        var nodesLinks = getNodesLinkedTo(graph, { id: node.id });\r\n        var validatorProperties = getValidatorProperties(validator);\r\n        Object.keys(validatorProperties).map(property => {\r\n            if (graph.nodeLinks[property] && graph.nodeLinks[property][node.id]) {\r\n                //link between nodes exists.\r\n            }\r\n            else {\r\n                //link between nodes exists.\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction NodesByType(graph, nodeType, options = {}) {\r\n\r\n    var currentGraph = graph;\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs && currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    return [];\r\n}\r\nexport function existsLinkBetween(graph, options) {\r\n    var { source, target, type } = options;\r\n    var link = findLink(graph, { source, target })\r\n    if (link) {\r\n        return GetLinkProperty(link, LinkPropertyKeys.TYPE) === type;\r\n    }\r\n    return false;\r\n}\r\nexport function updateReferenceNodes(root) {\r\n    if (root && root.referenceNodes) {\r\n        for (var scope in root.referenceNodes) {\r\n            if (root.graphs && root.graphs[scope]) {\r\n                let scopedGraph = root.graphs[scope];\r\n                for (let nodeId in root.referenceNodes[scope]) {\r\n                    var masterNode = root.nodeLib[root.referenceNodes[scope][nodeId]];\r\n                    if (masterNode) {\r\n                        var refNode = GetNode(scopedGraph, nodeId);\r\n                        if (refNode) {\r\n                            //may be more properties later.\r\n                            refNode.properties.text = masterNode.properties.text;\r\n                            refNode.properties.referenceType = masterNode.properties.nodeType;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}\r\nexport function constraintSideEffects(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n\r\n    if (functionNodes) {\r\n        let classes_that_must_exist = [];\r\n        for (let i in functionNodes) {\r\n            var function_node = GetNode(graph, i);\r\n            if (function_node) {\r\n                var functionType = GetNodeProp(function_node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject && functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES]) {\r\n                        let functionConstraintRequiredClasses = functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES];\r\n                        if (functionConstraintRequiredClasses) {\r\n                            for (let j in functionConstraintRequiredClasses) {\r\n                                //Get the model constraint key.\r\n                                //Should be able to find the singular model that is connected to the functionNode and children, if it exists.\r\n                                let constraintModelKey = functionConstraintRequiredClasses[j][INTERNAL_TEMPLATE_REQUIREMENTS.MODEL];\r\n                                if (constraintModelKey) {\r\n                                    var constraint_nodes = getNodesFunctionsConnected(graph, { id: i, constraintKey: constraintModelKey });\r\n                                    var nodes_one_step_down_the_line = [];\r\n                                    constraint_nodes.map(cn => {\r\n                                        var nextNodes = getNodesLinkedTo(graph, { id: cn.id });\r\n                                        nodes_one_step_down_the_line.push(...nextNodes);\r\n                                    });\r\n                                    nodes_one_step_down_the_line.map(node => {\r\n                                        classes_that_must_exist.push({\r\n                                            nodeId: node.id,\r\n                                            functionNode: function_node.id,\r\n                                            key: constraintModelKey,\r\n                                            class: j\r\n                                        })\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            classes_that_must_exist = [...classes_that_must_exist.unique(x => {\r\n                return JSON.stringify(x);\r\n            })]\r\n            //Remove class nodes that are no longer cool.\r\n            Object.keys(graph.classNodes).map(i => {\r\n                if (!classes_that_must_exist.find(cls => {\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    return matchObject(res, cls);\r\n                })) {\r\n                    graph = removeNode(graph, { id: i })\r\n                }\r\n                else {\r\n\r\n                }\r\n            });\r\n            //Could make this faster by using a dictionary \r\n            classes_that_must_exist.map(cls => {\r\n                var matching_nodes = Object.keys(graph.classNodes).filter(i => {\r\n\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    if (matchObject(res, cls)) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                });\r\n                if (matching_nodes.length === 0) {\r\n                    //Create new classNodes\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: cls.functionNode,\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.RequiredClassLink }\r\n                        }\r\n                    }, NodeTypes.ClassNode, (new_node) => {\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.UIText,\r\n                            value: RequiredClassName(\r\n                                cls.class,\r\n                                GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName)\r\n                            )\r\n                        });\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.ClassConstructionInformation,\r\n                            value: cls\r\n                        });\r\n                    })\r\n                }\r\n                else if (matching_nodes.length === 1) {\r\n                    var _cnode = graph.nodeLib[matching_nodes[0]];\r\n                    //The existing classNodes can be updated with any new dependent values. e.g. Text/title\r\n                    graph = updateNodeProperty(graph, {\r\n                        id: _cnode.id,\r\n                        prop: NodeProperties.UIText,\r\n                        value: RequiredClassName(cls.class, GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName))\r\n                    });\r\n                }\r\n                else {\r\n                    console.error('There should never be more than one');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nexport function RequiredClassName(cls, node_name) {\r\n    return `${node_name}${cls}`;\r\n}\r\n\r\nexport function getNodesFunctionsConnected(graph, options) {\r\n    var { id, constraintKey } = options;\r\n    var result = [];\r\n\r\n    let links = getNodeLinksWithKey(graph, { id, key: constraintKey });\r\n\r\n    return links.map(link => {\r\n        return graph.nodeLib[link.target];\r\n    })\r\n}\r\n\r\n\r\nexport function checkConstraints(graph, options) {\r\n    var { id, functionConstraints } = options;\r\n    if (graph.nodeConnections[id]) {\r\n        let node = graph.nodeLib[id];\r\n        Object.keys(graph.nodeConnections[id]).map(link => {\r\n            //check if link has a constraint attached.\r\n            let { properties } = graph.linkLib[link];\r\n            let _link = graph.linkLib[link];\r\n            if (properties) {\r\n                let { constraints } = properties;\r\n                if (constraints) {\r\n                    Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                        let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                        let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                        if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                            if (_link.properties.constraints.key === constraintObj.key) {\r\n                                let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                graph = updateLinkProperty(graph, {\r\n                                    id: _link.id,\r\n                                    prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                    value: !!valid\r\n                                })\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function applyFunctionConstraints(graph, options) {\r\n    let { id, value } = options;\r\n\r\n    let functionConstraints = Functions[value];\r\n    if (functionConstraints) {\r\n        if (functionConstraints.constraints) {\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                getNodeFunctionConstraintLinks(graph, { id }).map(link => {\r\n                    let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                    if (!hasMatchingConstraints(link_constraints, functionConstraints.constraints)) {\r\n                        let nodeToRemove = GetTargetNode(graph, link.id);\r\n\r\n                        if (nodeToRemove) {\r\n                            graph = removeNode(graph, { id: nodeToRemove.id })\r\n                        }\r\n                        else {\r\n                            console.warn(\"No nodes were removed as exepected\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            let core_group = null;\r\n            let internal_group = null; //Internal scope group\r\n            let external_group = null; //API Group\r\n            let node = graph.nodeLib[id];\r\n\r\n            var existingGroups = GetNodeProp(node, NodeProperties.Groups);\r\n\r\n            if (existingGroups) {\r\n                for (let i in existingGroups) {\r\n                    graph = clearGroup(graph, { id: existingGroups[i] });\r\n                }\r\n            }\r\n\r\n            if (graph.nodesGroups[id]) {\r\n                for (let i in graph.nodesGroups[id]) {\r\n                    switch (GetGroupProperty(graph.groupLib[i], GroupProperties.FunctionGroup)) {\r\n                        case FunctionGroups.Core:\r\n                            core_group = graph.groupLib[i];\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!core_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    core_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Core\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!internal_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    internal_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Internal\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!external_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    external_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.External\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!graph.groupsNodes[external_group.id] || !graph.groupsNodes[external_group.id][id]) {\r\n                graph = addLeaf(graph, { leaf: id, id: external_group.id })\r\n            }\r\n\r\n            if (!graph.childGroups[internal_group.id] || !graph.childGroups[internal_group.id][external_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: internal_group.id, id: external_group.id });\r\n            }\r\n\r\n            if (!graph.childGroups[core_group.id] || !graph.childGroups[core_group.id][internal_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: core_group.id, id: internal_group.id });\r\n            }\r\n\r\n\r\n            var existMatchinLinks = getNodeFunctionConstraintLinks(graph, { id });\r\n            var constraintKeys = existMatchinLinks.map(link => {\r\n                let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                return findMatchingConstraints(link_constraints, functionConstraints.constraints);\r\n            })\r\n\r\n            Object.keys(functionConstraints.constraints).map(constraint => {\r\n                //Create links to new nodes representing those constraints.\r\n                if (constraintKeys.indexOf(constraint) === -1) {\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: node.id,\r\n                        linkProperties: {\r\n                            properties: {\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                constraints: {\r\n                                    ...functionConstraints.constraints[constraint]\r\n                                }\r\n                            }\r\n                        }\r\n                    }, NodeTypes.Parameter, (new_node) => {\r\n                        graph = updateNodeProperty(graph, { id: new_node.id, prop: NodeProperties.UIText, value: constraint });\r\n\r\n                    });\r\n                }\r\n            });\r\n\r\n            var nodes_with_link = getNodeFunctionConstraintLinks(graph, { id: node.id });\r\n\r\n            nodes_with_link.map((link) => {\r\n                let new_node = graph.nodeLib[link.target];\r\n                var constraint = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                if (constraint && constraint.key && functionConstraints.constraints[constraint.key] &&\r\n                    functionConstraints.constraints[constraint.key][FunctionConstraintKeys.IsInputVariable]) {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: internal_group.id });\r\n                }\r\n                else {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: core_group.id })\r\n                }\r\n            });\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                Object.keys(graph.nodeConnections[id]).map(link => {\r\n                    //check if link has a constraint attached.\r\n                    let { properties } = graph.linkLib[link];\r\n                    let _link = graph.linkLib[link];\r\n                    if (properties) {\r\n                        let { constraints } = properties;\r\n                        if (constraints) {\r\n                            Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                                let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                                let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                                if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                                    if (_link.properties.constraints.key === constraintObj.key) {\r\n                                        let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                        graph = updateLinkProperty(graph, {\r\n                                            id: _link.id,\r\n                                            prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                            value: !!valid\r\n                                        })\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            graph = updateNodeProperty(graph, {\r\n                id,\r\n                prop: NodeProperties.Groups,\r\n                value: {\r\n                    core: core_group.id,\r\n                    internal: internal_group.id,\r\n                    external: external_group.id\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nfunction getNodeLinksWithKey(graph, options) {\r\n    var { id, key } = options;\r\n    var result = [];\r\n    if (graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).map(link => {\r\n            let _link = graph.linkLib[link];\r\n            return _link;\r\n        }).filter(_link => {\r\n            return _link && _link.source === id && _link.properties && _link.properties.constraints && _link.properties.constraints.key === key;\r\n        })\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasMatchingConstraints(linkConstraint, functionConstraints) {\r\n    return !!findMatchingConstraints(linkConstraint, functionConstraints);\r\n}\r\nfunction findMatchingConstraints(linkConstraint, functionConstraints) {\r\n    let lcj = JSON.stringify(linkConstraint);\r\n    return Object.keys(functionConstraints).find(f => JSON.stringify(functionConstraints[f]) === lcj)\r\n}\r\n\r\nfunction getNodeFunctionConstraintLinks(graph, options) {\r\n    let { id } = options;\r\n    if (graph && graph.nodeConnections && graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(link => {\r\n            return GetLinkProperty(graph.linkLib[link], LinkPropertyKeys.TYPE) === LinkType.FunctionConstraintLink;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nexport const FunctionMeetsConstraint = {\r\n    meets: (constraintObj, constraints, link, node, graph) => {\r\n        if (constraintObj) {\r\n            let _targetNode = graph.nodeLib[link.target];\r\n            var nextNodes = getNodesLinkedTo(graph, { id: _targetNode.id });\r\n            return nextNodes.find(targetNode => {\r\n                return Object.keys(constraintObj).find(constraint => {\r\n                    let result = true;\r\n                    if (result === false) {\r\n                        return;\r\n                    }\r\n                    switch (constraint) {\r\n                        //Instance variable are always ok\r\n                        // case FunctionConstraintKeys.IsInstanceVariable:\r\n                        //     result = true;\r\n                        //     break;\r\n                        case FunctionConstraintKeys.IsAgent:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsAgent)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsUser:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsUser)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsTypeOf:\r\n                            //If it is an input variable, then we will all anything.\r\n                            if (!constraintObj[FunctionConstraintKeys.IsInputVariable]) {\r\n                                if (targetNode) {\r\n                                    let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                    let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                    // The targetNodeType should match the other node.\r\n                                    let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                    if (linkWithConstraints.length) {\r\n                                        let links = linkWithConstraints.filter(linkWithConstraint => {\r\n\r\n                                            let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                            let nodeToMatchWithType = GetNodeProp(nodeToMatchWith, NodeProperties.NODEType);\r\n                                            return (nodeToMatchWithType !== targetNodeType);\r\n                                        });\r\n                                        if (links.length === 0) {\r\n                                            result = false;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsChild:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsParent:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        // case FunctionConstraintKeys.IsParent:\r\n                        //     if (targetNode) {\r\n                        //         let targetConstraint = constraintObj[constraint];\r\n                        //         let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                        //         if (linkWithConstraints) {\r\n                        //             let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                        //                 let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                        //                 let linkToParentParameter = getNodesLinkedFrom(graph, { id: nodeToMatchWith.id });\r\n                        //                 if (linkToParentParameter && linkToParentParameter.length) {\r\n                        //                     let relationshipLink = findLink(graph, { target: linkToParentParameter[0].id, source: node.id })\r\n                        //                     if (!relationshipLink || !GetLinkProperty(relationshipLink, LinkProperties.ParentLink.type)) {\r\n                        //                         return false;\r\n                        //                     }\r\n                        //                 }\r\n                        //                 else {\r\n                        //                     return false;\r\n                        //                 }\r\n                        //                 return true;\r\n                        //             });\r\n\r\n                        //             if (links.length === 0) {\r\n                        //                 result = false;\r\n                        //             }\r\n                        //         }\r\n                        //         else {\r\n                        //             result = false;\r\n                        //         }\r\n                        //     }\r\n                        //     else {\r\n                        //         result = false;\r\n                        //     }\r\n                        //     break;\r\n                    }\r\n\r\n                    return result;\r\n                });\r\n            })\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\nfunction findLinkWithConstraint(nodeId, graph, targetConstraint) {\r\n    return Object.keys(graph.nodeConnections[nodeId]).filter(t => graph.nodeConnections[nodeId][t] === SOURCE).filter(link => {\r\n        if (link && graph.linkLib && graph.linkLib[link] && graph.linkLib[link].properties && graph.linkLib[link].properties.constraints\r\n            && graph.linkLib[link].properties.constraints.key === targetConstraint) {\r\n            return graph.linkLib[link];\r\n        }\r\n        return false;\r\n    }).map(link => graph.linkLib[link]);\r\n}\r\nexport function getNodeLinks(graph, id, direction) {\r\n    if (graph && graph.nodeConnections) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(x => {\r\n            if (direction) {\r\n                return graph.nodeConnections[id][x] === direction;\r\n            }\r\n            return true;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n    return [];\r\n}\r\nfunction findLink(graph, options) {\r\n    let { target, source } = options;\r\n    let res = graph.links.find(link => {\r\n        return graph.linkLib && graph.linkLib[link] && graph.linkLib[link].target === target && graph.linkLib[link].source === source;\r\n    });\r\n    if (res) {\r\n        return graph.linkLib[res];\r\n    }\r\n    return null;\r\n}\r\nexport function newLink(graph, options) {\r\n    let { target, source, properties } = options;\r\n    let link = createLink(target, source, properties);\r\n    return addLink(graph, options, link);\r\n}\r\n\r\nexport function GetTargetNode(graph, linkId) {\r\n    if (graph && graph.linkLib && graph.linkLib[linkId]) {\r\n        let target = graph.linkLib[linkId].target;\r\n        return graph.nodeLib[target];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getNodesLinkedFrom(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: TARGET });\r\n}\r\nexport function getNodesLinkedTo(graph, options) {\r\n    return getNodeLinkedTo(graph, options);\r\n}\r\nexport function getNodeLinkedTo(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: SOURCE });\r\n}\r\nexport function matchOneWay(obj1, obj2) {\r\n    if (obj1 === obj2) {\r\n        return true;\r\n    }\r\n    if (!obj1) {\r\n        return false;\r\n    }\r\n    if (!obj2) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function matchObject(obj1, obj2) {\r\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\nexport function GetLinkByNodes(graph, options) {\r\n    var { source, target } = options;\r\n    return Object.values(graph.linkLib).find(t => {\r\n        return t.source === source && t.target === target;\r\n    })\r\n}\r\nexport function GetLinkChainItem(state, options) {\r\n    var chains = GetLinkChain(state, options);\r\n\r\n    if (chains && chains.length) {\r\n        return chains[0];\r\n    }\r\n    return null;\r\n}\r\nexport function SetAffterEffectProperty(currentNode, afterMethod, key, value) {\r\n    let afterEffectSetup = GetNodeProp(currentNode, NodeProperties.AfterMethodSetup) || {};\r\n    afterEffectSetup[afterMethod] = afterEffectSetup[afterMethod] || {};\r\n    afterEffectSetup[afterMethod] = { ...afterEffectSetup[afterMethod], ...{ [key]: value } };\r\n    return afterEffectSetup;\r\n}\r\nexport function GetAffterEffectProperty(currentNode, afterMethod, key) {\r\n    let afterEffectSetup = GetNodeProp(currentNode, NodeProperties.AfterMethodSetup);\r\n    if (afterEffectSetup && afterEffectSetup[afterMethod] && afterEffectSetup[afterMethod][key])\r\n        return afterEffectSetup[afterMethod][key];\r\n    return null;\r\n}\r\nexport function GetMethodNode(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Method);\r\n}\r\nexport function GetPermissionNode(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Permission);\r\n}\r\nexport function GetConditionNodes(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).filter(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Condition);\r\n}\r\nexport function GetConnectedNodesByType(state, id, type, direction) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id,\r\n        direction\r\n    }).filter(x => GetNodeProp(x, NodeProperties.NODEType) === type);\r\n}\r\nexport function GetDataChainEntryNodes(state) {\r\n    let graph = GetRootGraph(state);\r\n    return NodesByType(graph, NodeTypes.DataChain).filter(x => GetNodeProp(x, NodeProperties.EntryPoint));\r\n}\r\nexport function GetConnectedNodeByType(state, id, type, direction) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id,\r\n        direction\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === type);\r\n}\r\nexport function GetValidationNode(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Validator);\r\n}\r\nexport function GetDataSourceNode(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.DataSource);\r\n}\r\nexport function GetModelItemFilter(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ModelItemFilter);\r\n}\r\nexport function GetLinkChain(state, options) {\r\n    let graph = GetCurrentGraph(state);\r\n    return GetLinkChainFromGraph(graph, options);\r\n}\r\nexport function GetLinkChainFromGraph(graph, options, nodeType) {\r\n    var { id, links } = options;\r\n    var ids = [id];\r\n    var result = [];\r\n    links.map((op, il) => {\r\n        var newids = [];\r\n        ids.map(i => {\r\n            let newnodes = getNodesByLinkType(graph, {\r\n                id: i,\r\n                ...op\r\n            });\r\n            if (il === links.length - 1) {\r\n                result = newnodes;\r\n            }\r\n            else {\r\n                newids = [...newids, ...newnodes.map(t => t.id)];\r\n            }\r\n        })\r\n        newids = newids.unique(x => x);\r\n        ids = newids;\r\n    })\r\n    return result.filter(x => {\r\n        if (!nodeType) {\r\n            return true;\r\n        }\r\n        return nodeType.indexOf(GetNodeProp(x, NodeProperties.NODEType)) !== -1;\r\n    })\r\n}\r\nexport function getNodesByLinkType(graph, options) {\r\n    if (options) {\r\n        var { id, direction, type, exist } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks)\r\n                    .filter(x => nodeLinks[x])\r\n                    .map(_id => {\r\n                        var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n\r\n                        if (!target) {\r\n                            console.warn('Missing value in linkLib');\r\n                            return null;\r\n                        }\r\n                        if (exist && graph.linkLib[_id].properties && graph.linkLib[_id].properties.exist) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        if (!type || graph.linkLib[_id].properties &&\r\n                            (graph.linkLib[_id].properties.type === type ||\r\n                                graph.linkLib[_id].properties[type])) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        return null;\r\n                    }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\nexport function getNodeLinked(graph, options) {\r\n    if (options) {\r\n        var { id, direction, constraints } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks).filter(x => nodeLinks[x] === direction).map(_id => {\r\n                    var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n                    if (!target) {\r\n                        console.warn('Missing value in linkLib');\r\n                        return null;\r\n                    }\r\n                    if (constraints) {\r\n                        let link = graph.linkLib[_id];\r\n                        let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                        if (matchOneWay(constraints, link_constraints)) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return graph.nodeLib[target];\r\n                }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport function GetNodesLinkedTo(graph, options) {\r\n    if (options) {\r\n        var { id, direction } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks).map(_id => {\r\n                    var target = null;\r\n                    if (graph.linkLib[_id]) {\r\n                        if (graph.linkLib[_id].source !== id) {\r\n                            if (!direction || direction === TARGET)\r\n                                target = graph.linkLib[_id].source;\r\n                        }\r\n                        else {\r\n                            if (!direction || direction === SOURCE)\r\n                                target = graph.linkLib[_id].target;\r\n                        }\r\n                    }\r\n                    if (!target) {\r\n                        // console.warn('Missing value in linkLib');\r\n                        return null;\r\n                    }\r\n                    return graph.nodeLib[target];\r\n                }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const SOURCE = 'SOURCE';\r\nexport const TARGET = 'TARGET';\r\nexport function addLink(graph, options, link) {\r\n    let { target, source } = options;\r\n    if (target && source && target !== source) {\r\n        if (graph.nodeLib[target] && graph.nodeLib[source]) {\r\n            if (noSameLink(graph, { target, source })) {\r\n                graph.linkLib[link.id] = link;\r\n                graph.linkLib = { ...graph.linkLib };\r\n                graph.links = [...graph.links, link.id];\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.source] = {\r\n                    ...(graph.nodeConnections[link.source] || {}),\r\n                    ...{\r\n                        [link.id]: SOURCE\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.target] = {\r\n                    ...(graph.nodeConnections[link.target] || {}),\r\n                    ...{\r\n                        [link.id]: TARGET\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.source] = {\r\n                    ...(graph.nodeLinks[link.source] || {}),\r\n                    ...{\r\n                        [link.target]: graph.nodeLinks[link.source] ? (graph.nodeLinks[link.source][link.target] || 0) + 1 : 1\r\n                    }\r\n                };\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.target] = {\r\n                    ...graph.nodeLinks[link.target],\r\n                    ...{\r\n                        [link.source]: graph.nodeLinks[link.target] ? (graph.nodeLinks[link.target][link.source] || 0) + 1 : 1\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                var oldLink = findLink(graph, { target, source });\r\n                if (oldLink) {\r\n                    //  the type won't change onces its set\r\n                    // But the other properties can be \r\n                    oldLink.properties = {\r\n                        ...oldLink.properties,\r\n                        ...link.properties,\r\n                        ...({ type: oldLink.properties.type })\r\n                    };\r\n                }\r\n            }\r\n            graph.nodeLinks = { ...graph.nodeLinks }\r\n            graph = { ...graph };\r\n        }\r\n        graph = incrementMinor(graph);\r\n    }\r\n    return graph;\r\n}\r\nexport function addLinkBetweenNodes(graph, options) {\r\n    let { target, source, properties } = options;\r\n    if (target !== source) {\r\n        let link = createLink(target, source, properties);\r\n        return addLink(graph, options, link);\r\n    }\r\n    return graph;\r\n}\r\nexport function findLinkInstance(graph, options) {\r\n    let { target, source } = options;\r\n    let link = graph.links.find(x => graph.linkLib[x].source === source && graph.linkLib[x].target == target);\r\n    return link;\r\n}\r\nexport function getLinkInstance(graph, options) {\r\n    var linkId = findLinkInstance(graph, options);\r\n    if (linkId) {\r\n        return graph.linkLib[linkId];\r\n    }\r\n    return null;\r\n}\r\nexport function getAllLinksWithNode(graph, id) {\r\n    return graph.links.filter(x => graph.linkLib[x].source === id || graph.linkLib[x].target === id);\r\n}\r\nexport function removeLinkBetweenNodes(graph, options) {\r\n    let link = findLinkInstance(graph, options);\r\n    return removeLink(graph, link, options);\r\n}\r\nexport function removeLinkById(graph, options) {\r\n    let link = graph.linkLib[options.id];\r\n    return removeLink(graph, link);\r\n}\r\nexport function executeEvents(graph, link, evt) {\r\n    switch (evt) {\r\n        case LinkEvents.Remove:\r\n            graph = executeRemoveEvents(graph, link);\r\n            break;\r\n    }\r\n    return graph;\r\n}\r\nexport const EventFunctions = {};\r\nexport function addEventFunction(key, func) {\r\n    EventFunctions[key] = func;\r\n}\r\nexport function removeEventFunction(key) {\r\n    delete EventFunctions[key];\r\n}\r\nexport function executeRemoveEvents(graph, link) {\r\n    if (link && link.properties && link.properties.on && link.properties.on[LinkEvents.Remove]) {\r\n        link.properties.on[LinkEvents.Remove].map(args => {\r\n            if (args.function && EventFunctions[args.function]) {\r\n                graph = EventFunctions[args.function](graph, link, args.function, args)\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\nexport function isUIExtensionEnumerable(node) {\r\n    let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n    if (_node && _node.config) {\r\n        return _node.config.isEnumeration\r\n    }\r\n}\r\nexport function GetUIExentionEnumeration(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.list;\r\n    }\r\n    return null;\r\n}\r\nexport function GetUIExentionKeyField(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.keyField;\r\n    }\r\n    return null;\r\n}\r\naddEventFunction('OnRemoveValidationPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Validator), { id: target });\r\n    return graph;\r\n});\r\naddEventFunction('OnRemoveExecutorPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Executor), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveModelFilterPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.FilterModel), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveValidationItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveExecutorItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Executor);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\n\r\nexport function removeValidatorItem(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator]\r\n}\r\nexport function createEventProp(type, options = {}) {\r\n    var res = { on: {} };\r\n    switch (type) {\r\n        case LinkEvents.Remove:\r\n            res.on[type] = [{\r\n                ...options\r\n            }];\r\n            break;\r\n    }\r\n\r\n    return res;\r\n}\r\nexport function removeLink(graph, link, options = {}) {\r\n    if (link && options.linkType) {\r\n        let update_link = graph.linkLib[link];\r\n        if (update_link && update_link.properties && update_link.properties[options.linkType]) {\r\n            delete update_link.properties[options.linkType];\r\n\r\n            //If only the type is on the property\r\n        }\r\n        if (update_link && Object.keys(update_link.properties).length > 1) {\r\n            return { ...graph };\r\n        }\r\n    }\r\n    if (link) {\r\n        graph.links = [...graph.links.filter(x => x !== link)];\r\n        let del_link = graph.linkLib[link];\r\n        if (del_link.properties) {\r\n            if (del_link.properties.on && del_link.properties.on[LinkEvents.Remove]) {\r\n                graph = executeEvents(graph, del_link, LinkEvents.Remove);\r\n            }\r\n        }\r\n        delete graph.linkLib[link]\r\n        graph.linkLib = { ...graph.linkLib };\r\n        graph.nodeLinks[del_link.source] = {\r\n            ...graph.nodeLinks[del_link.source],\r\n            ...{\r\n                [del_link.target]: graph.nodeLinks[del_link.source] ? (graph.nodeLinks[del_link.source][del_link.target] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.source] && !graph.nodeLinks[del_link.source][del_link.target]) {\r\n            delete graph.nodeLinks[del_link.source][del_link.target];\r\n            if (Object.keys(graph.nodeLinks[del_link.source]).length === 0) {\r\n                delete graph.nodeLinks[del_link.source];\r\n            }\r\n        }\r\n        graph.nodeLinks[del_link.target] = {\r\n            ...graph.nodeLinks[del_link.target],\r\n            ...{\r\n                [del_link.source]: graph.nodeLinks[del_link.target] ? (graph.nodeLinks[del_link.target][del_link.source] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.target] && !graph.nodeLinks[del_link.target][del_link.source]) {\r\n            delete graph.nodeLinks[del_link.target][del_link.source];\r\n            if (Object.keys(graph.nodeLinks[del_link.target]).length === 0) {\r\n                delete graph.nodeLinks[del_link.target];\r\n            }\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.source] && graph.nodeConnections[del_link.source][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.source][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.source]).length === 0) {\r\n            delete graph.nodeConnections[del_link.source];\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.target] && graph.nodeConnections[del_link.target][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.target][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.target]).length === 0) {\r\n            delete graph.nodeConnections[del_link.target];\r\n        }\r\n        graph = incrementMinor(graph);\r\n\r\n    }\r\n    return { ...graph };\r\n\r\n}\r\nexport function updateNodeText(graph, options) {\r\n    let { id, value } = options;\r\n    if (id && graph.nodeLib && graph.nodeLib[id]) {\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                _properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    i: value\r\n                },\r\n                get properties() {\r\n                    return this._properties;\r\n                },\r\n                set properties(value) {\r\n                    this._properties = value;\r\n                },\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function updateNodeProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    let additionalChange = {};\r\n    if (id && prop && graph.nodeLib && graph.nodeLib[id]) {\r\n        if (NodePropertiesDirtyChain[prop]) {\r\n            let temps = NodePropertiesDirtyChain[prop];\r\n            temps.map(temp => {\r\n                if (!graph.nodeLib[id].dirty[temp.chainProp]) {\r\n                    additionalChange[temp.chainProp] = temp.chainFunc(value);\r\n                }\r\n            });\r\n        }\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                dirty: {\r\n                    [prop]: true,\r\n                    ...(graph.nodeLib[id].dirty || {})\r\n                },\r\n                properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    [prop]: value,\r\n                    ...additionalChange,\r\n                }\r\n            }\r\n        }\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.Function) {\r\n            graph.functionNodes = { ...graph.functionNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.functionNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.functionNodes[id];\r\n                graph.functionNodes = { ...graph.functionNodes };\r\n            }\r\n        }\r\n\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.ClassNode) {\r\n            graph.classNodes = { ...graph.classNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.classNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.classNodes[id];\r\n                graph.classNodes = { ...graph.classNodes };\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateLinkProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.linkLib && graph.linkLib[id]) {\r\n        graph.linkLib[id] = {\r\n            ...graph.linkLib[id], ...{\r\n                properties: {\r\n                    ...(graph.linkLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateGroupProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.groupLib && graph.groupLib[id]) {\r\n        graph.groupLib[id] = {\r\n            ...graph.groupLib[id], ...{\r\n                properties: {\r\n                    ...(graph.groupLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction noSameLink(graph, ops) {\r\n    return !graph.links.some(x => {\r\n        let temp = graph.linkLib[x];\r\n        return temp.source === ops.source && temp.target === ops.target;\r\n    })\r\n}\r\nfunction createGroup() {\r\n    return {\r\n        id: uuidv4(),\r\n        leaves: [],\r\n        groups: [],\r\n        properties: {}\r\n    }\r\n}\r\nfunction createNode(nodeType) {\r\n    return {\r\n        id: uuidv4(),\r\n        dirty: {\r\n\r\n        },\r\n        properties: {\r\n            text: nodeType || Titles.Unknown\r\n        }\r\n    }\r\n}\r\nfunction createLink(target, source, properties) {\r\n    properties = properties || {};\r\n    return {\r\n        id: uuidv4(),\r\n        source,\r\n        target,\r\n        properties\r\n    }\r\n}\r\nfunction copyLink(link) {\r\n    return {\r\n        ...(JSON.parse(JSON.stringify(link)))\r\n    }\r\n}\r\nexport function duplicateNode(nn) {\r\n    return {\r\n        ...nn\r\n    };\r\n}\r\nexport function duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.indexOf(nn.source),\r\n        target: nodes.indexOf(nn.target)\r\n    };\r\n}\r\n\r\nfunction GetNodesInsideGroup(graph, t, seenGroups = {}) {\r\n    var res = [...Object.keys(graph.groupsNodes[t])];\r\n    for (var i in graph.childGroups[t]) {\r\n        if (!seenGroups[i]) {\r\n            seenGroups = {\r\n                ...seenGroups,\r\n                [i]: true\r\n            };\r\n            res = [...res, ...GetNodesInsideGroup(graph, i, seenGroups)]\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\nexport const GroupImportanceOrder = {\r\n    [NodeTypes.Model]: 1,\r\n    [NodeTypes.Function]: 1,\r\n    [NodeTypes.Method]: 1,\r\n    [NodeTypes.Property]: 4,\r\n    [NodeTypes.ValidationList]: 5,\r\n    [NodeTypes.OptionList]: 6,\r\n    [NodeTypes.Parameter]: 4,\r\n    [NodeTypes.Permission]: 4,\r\n    [NodeTypes.Attribute]: 8,\r\n    [NodeTypes.ValidationList]: 10,\r\n    [NodeTypes.ValidationListItem]: 12,\r\n    [NodeTypes.ModelItemFilter]: 13\r\n}\r\n\r\nexport function SetVisible(graph) {\r\n    graph.visibleNodes = {}\r\n    graph.nodes.map(t => {\r\n        if (GetNodeProp(GetNode(graph, t), NodeProperties.Pinned)) {\r\n            graph.visibleNodes[t] = true;\r\n        }\r\n    });\r\n    if (graph.depth) {\r\n        [].interpolate(0, graph.depth, x => {\r\n            Object.keys(graph.visibleNodes).map(t => {\r\n                for (let h in graph.nodeLinks[t]) {\r\n                    graph.visibleNodes[h] = true;\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return graph;\r\n}\r\nfunction getDepth(groupId, graph) {\r\n    let res = 0;\r\n    if (graph.groupLib[groupId]) {\r\n        if (graph.parentGroup[groupId]) {\r\n            let parent = Object.keys(graph.parentGroup[groupId])[0];\r\n            if (parent) {\r\n                res = res + getDepth(parent, graph);\r\n            }\r\n        }\r\n        res = res + 1;\r\n    }\r\n    return res;\r\n}\r\nexport function FilterGraph(graph) {\r\n    let filteredGraph = createGraph();\r\n    filteredGraph.id = graph.id;\r\n    filteredGraph.linkLib = { ...graph.linkLib };\r\n    filteredGraph.nodesGroups = { ...graph.nodesGroups };\r\n    filteredGraph.groupsNodes = { ...graph.groupsNodes };\r\n    filteredGraph.groups = [...graph.groups];\r\n    filteredGraph.groupLib = { ...graph.groupLib };\r\n    filteredGraph.childGroups = { ...graph.childGroups };\r\n    filteredGraph.parentGroup = { ...graph.parentGroup };\r\n    filteredGraph.links = [...graph.links.filter(linkId => {\r\n        var { target, source } = graph.linkLib[linkId];\r\n        if (graph.visibleNodes[target] && graph.visibleNodes[source]) {\r\n            return true;\r\n        } else {\r\n            delete filteredGraph.linkLib[linkId];\r\n        }\r\n        return false;\r\n    })];\r\n    Object.keys(graph.nodesGroups).map(nodeId => {\r\n        if (!graph.visibleNodes[nodeId]) {\r\n            let temp = graph.nodesGroups[nodeId];\r\n            for (let i in temp) {\r\n                filteredGraph.groupsNodes[i] = { ...filteredGraph.groupsNodes[i] };\r\n                delete filteredGraph.groupsNodes[i][nodeId]\r\n                if (Object.keys(filteredGraph.groupsNodes[i]).length === 0) {\r\n                    delete filteredGraph.groupsNodes[i]\r\n                }\r\n            }\r\n            delete filteredGraph.nodesGroups[nodeId]\r\n        }\r\n    });\r\n    Object.keys(filteredGraph.groupLib).sort((b, a) => {\r\n        return getDepth(a, graph) - getDepth(b, graph);\r\n    }).map(group => {\r\n        if (filteredGraph.groupLib[group].leaves) {\r\n            filteredGraph.groupLib[group] = { ...filteredGraph.groupLib[group] };\r\n            filteredGraph.groupLib[group].leaves = [...filteredGraph.groupLib[group].leaves.filter(x => graph.visibleNodes[x])];\r\n            filteredGraph.groupLib[group].groups = [...filteredGraph.groupLib[group].groups.filter(x => filteredGraph.groupLib[x])];\r\n            if (!filteredGraph.groupLib[group].leaves.length && !filteredGraph.groupLib[group].groups.length) {\r\n                filteredGraph.groups = [...filteredGraph.groups.filter(x => x !== group)];\r\n                delete filteredGraph.groupLib[group]\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.childGroups).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.childGroups[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.childGroups[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.childGroups[group] = { ...filteredGraph.childGroups[group] }\r\n                    delete filteredGraph.childGroups[group][t]\r\n                }\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.parentGroup).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.parentGroup[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.parentGroup[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.parentGroup[group] = { ...filteredGraph.parentGroup[group] }\r\n                    delete filteredGraph.parentGroup[group][t]\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.keys(graph.visibleNodes).map(nodeId => {\r\n        filteredGraph.nodeLib[nodeId] = graph.nodeLib[nodeId];\r\n        filteredGraph.nodes.push(nodeId);\r\n        filteredGraph.nodeConnections[nodeId] = { ...graph.nodeConnections[nodeId] };\r\n        filteredGraph.nodeLinks[nodeId] = { ...graph.nodeLinks[nodeId] };\r\n\r\n        Object.keys(graph.nodeLinks[nodeId] || {}).map(t => {\r\n            if (!filteredGraph.linkLib[t]) {\r\n                filteredGraph.nodeLinks[nodeId] = { ...filteredGraph.nodeLinks[nodeId] }\r\n                delete filteredGraph.nodeLinks[nodeId][t];\r\n            }\r\n        })\r\n    })\r\n\r\n    return filteredGraph;\r\n}\r\nexport function VisualProcess(graph) {\r\n    let vgraph = createGraph();\r\n    vgraph.id = graph.id;\r\n    graph = SetVisible(graph);\r\n    graph = FilterGraph(graph)\r\n    let collapsedNodes = graph.nodes.filter(node => GetNodeProp(graph.nodeLib[node], NodeProperties.Collapsed));\r\n    let collapsingGroups = {};\r\n    collapsedNodes.map(t => {\r\n        if (graph.nodesGroups[t]) {\r\n            let t_importance = GroupImportanceOrder[GetNodeProp(graph.nodeLib[t], NodeProperties.NODEType)] || 1000;\r\n            var sortedGroups = Object.keys(graph.nodesGroups[t]).filter(nodeGroupKey => {\r\n\r\n                let nodesInGroup = GetNodesInsideGroup(graph, nodeGroupKey);\r\n                var moreImportantNode = nodesInGroup.find(n => {\r\n                    if (n === t) {\r\n                        return false;\r\n                    }\r\n                    var _type = GetNodeProp(graph.nodeLib[n], NodeProperties.NODEType);\r\n                    let n_importance = GroupImportanceOrder[_type] || 1000;\r\n\r\n                    if (n_importance > t_importance) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                if (moreImportantNode) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }).sort((b, a) => {\r\n                return Object.keys(graph.groupsNodes[a]).length - Object.keys(graph.groupsNodes[b]).length;\r\n            });\r\n            if (sortedGroups.length) {\r\n                collapsingGroups[sortedGroups[0]] = true;\r\n            }\r\n        }\r\n    });\r\n    let smallestsNonCrossingGroups = Object.keys(collapsingGroups).filter(cg => {\r\n        for (var g_ in graph.parentGroup[cg]) {\r\n            if (collapsingGroups[g_]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n    let disappearingNodes = {};\r\n    smallestsNonCrossingGroups.map(t => {\r\n        let dt = {};\r\n        let head = null;\r\n        let mostimportant = 10000;\r\n        let _nodes = GetNodesInsideGroup(graph, t);\r\n        _nodes.filter(t => {\r\n            var type = GetGroupProperty(graph.nodeLib[t], NodeProperties.NODEType);\r\n            dt[t] = true;\r\n            if (GroupImportanceOrder[type] < mostimportant) {\r\n                head = t;\r\n                mostimportant = GroupImportanceOrder[type];\r\n            }\r\n        });\r\n        delete dt[head];\r\n        for (var i in dt) {\r\n            dt[i] = head;\r\n        }\r\n        disappearingNodes = { ...disappearingNodes, ...dt };\r\n    });\r\n\r\n    vgraph.nodes = [...graph.nodes.filter(x => !disappearingNodes[x])]\r\n    vgraph.nodeLib = {};\r\n    vgraph.nodes.map(t => { vgraph.nodeLib[t] = graph.nodeLib[t] });\r\n    vgraph.links = graph.links.map(x => {\r\n        //Find any link that should be disappearing, and make it go away\r\n        var { source, target } = graph.linkLib[x];\r\n        var dupLink;\r\n        if (disappearingNodes[source] && disappearingNodes[target]) {\r\n            // the link is going totally away;\r\n            return false;\r\n        }\r\n        else if (disappearingNodes[source]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.source = disappearingNodes[source];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else if (disappearingNodes[target]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.target = disappearingNodes[target];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        if (dupLink.source === dupLink.target) {\r\n            return false;\r\n        }\r\n        return dupLink.id;\r\n    }).filter(x => x);\r\n\r\n    var vgroups = graph.groups.map((group, groupIndex) => {\r\n        let oldgroup = graph.groupLib[group];\r\n        let newgroup = createGroup();\r\n        newgroup.id = `${oldgroup.id}`;\r\n        if (oldgroup && oldgroup.leaves) {\r\n            oldgroup.leaves.map(leaf => {\r\n                if (vgraph.nodeLib[leaf]) {\r\n                    newgroup.leaves.push(leaf);\r\n                }\r\n            })\r\n        }\r\n        if (newgroup.leaves.length) {\r\n            vgraph.groupLib[newgroup.id] = newgroup;\r\n\r\n            return newgroup.id\r\n        }\r\n        return null;\r\n    }).filter(x => x);\r\n    vgroups.map((group) => {\r\n        vgraph.groupLib[group].groups = (graph.groupLib[group].groups || []).filter(og => {\r\n            if (vgraph.groupLib[og]) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n    })\r\n    vgraph.groups = vgroups;\r\n    return vgraph;\r\n}\r\n","import { NodeProperties } from \"./nodetypes\";\r\nexport const DataChainFunctionKeys = {\r\n    ModelProperty: 'Model - Property',\r\n    Model: 'Model',\r\n    Pass: 'Pass',\r\n    StringConcat: 'String Concat {0} {1}'\r\n};\r\nexport const DataChainFunctions = {\r\n    [DataChainFunctionKeys.ModelProperty]: {\r\n        ui: {\r\n            model: NodeProperties.UIModelType,\r\n            property: NodeProperties.Property\r\n        },\r\n        filter: {\r\n            [NodeProperties.NODEType]: true\r\n        },\r\n        value: 'model_property_selection'\r\n    },\r\n    [DataChainFunctionKeys.Model]: {\r\n        ui: {\r\n            model: NodeProperties.UIModelType,\r\n            property: false\r\n        },\r\n        filter: {\r\n            [NodeProperties.NODEType]: true\r\n        },\r\n        value: 'model_selection'\r\n    },\r\n    [DataChainFunctionKeys.Pass]: {\r\n        ui: {\r\n        },\r\n        filter: {\r\n            [NodeProperties.NODEType]: true\r\n        },\r\n        value: 'model_selection'\r\n    },\r\n    [DataChainFunctionKeys.StringConcat]: {\r\n        ui: {\r\n            node_1: NodeProperties.ChainNodeInput1,\r\n            node_2: NodeProperties.ChainNodeInput2\r\n        },\r\n        merge: true,\r\n        filter: {\r\n            [NodeProperties.MergeNode]: true\r\n        },\r\n        value: 'string_concat_2_values'\r\n    }\r\n};","var fs = require('fs');\r\n\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport * as NodeConstants from '../constants/nodetypes';\r\nimport * as Titles from '../components/titles';\r\nimport { MethodFunctions, bindTemplate, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport { DataChainFunctionKeys, DataChainFunctions } from '../constants/datachain';\r\nexport const VISUAL = 'VISUAL';\r\nexport const APPLICATION = 'APPLICATION';\r\nexport const GRAPHS = 'GRAPHS';\r\nexport const VISUAL_GRAPH = 'VISUAL_GRAPH';\r\nexport const DASHBOARD_MENU = 'DASHBOARD_MENU';\r\nexport const SELECTED_NODE_BB = 'SELECTED_NODE_BB';\r\nexport const SIDE_PANEL_EXTRA_WIDTH = 'SIDE_PANEL_EXTRA_WIDTH';\r\nexport const NodeTypes = NodeConstants.NodeTypes;\r\nexport const NodeTypeColors = NodeConstants.NodeTypeColors;\r\nexport const NodeProperties = NodeConstants.NodeProperties;\r\nexport const LinkProperties = NodeConstants.LinkProperties;\r\nexport const NodeAttributePropertyTypes = NodeConstants.NodeAttributePropertyTypes;\r\nexport const NodePropertyTypes = NodeConstants.NodePropertyTypes;\r\nexport const ValidationRules = NodeConstants.ValidationRules;\r\nexport const OptionsTypes = NodeConstants.OptionsTypes;\r\n\r\nexport const UI_UPDATE = 'UI_UPDATE';\r\nexport function GetC(state, section, item) {\r\n    if (state && state.uiReducer && state.uiReducer[section]) {\r\n        return state.uiReducer[section][item];\r\n    }\r\n    return null;\r\n}\r\nexport function generateDataSeed(node) {\r\n    let dataSeed = _generateDataSeed(node);\r\n    return JSON.stringify(dataSeed, null, 4);\r\n}\r\n\r\nfunction _generateDataSeed(node) {\r\n    let state = _getState();\r\n    let properties = {};\r\n    GraphMethods.getPropertyNodes(GetRootGraph(state), node.id).map(t => {\r\n        properties[t.id] = {\r\n            name: GetCodeName(t),\r\n            jsName: GetCodeName(t).toJavascriptName(),\r\n            type: GetNodeProp(t, NodeProperties.DataGenerationType)\r\n        };\r\n    });\r\n    GetLogicalChildren(node.id).map(t => {\r\n        properties[t.id] = {\r\n            name: GetCodeName(t),\r\n            jsName: GetCodeName(t).toJavascriptName(),\r\n            type: 'Id'\r\n        };\r\n    });\r\n    let dataSeed = {\r\n        name: GetCodeName(node),\r\n        properties\r\n    }\r\n    return dataSeed;\r\n}\r\n\r\nexport function generateDataSeeds() {\r\n    return JSON.stringify(NodesByType(_getState(), NodeTypes.Model).map(t => _generateDataSeed(t)));\r\n}\r\nexport function Visual(state, key) {\r\n    return GetC(state, VISUAL, key);\r\n}\r\nexport function IsCurrentNodeA(state, type) {\r\n    var currentNode = Node(state, Visual(state, SELECTED_NODE));\r\n    return currentNode && currentNode.properties && currentNode.properties.nodeType === type;\r\n}\r\nexport function Use(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function GetManyToManyNodes(ids) {\r\n    return GraphMethods.GetManyToManyNodes(GetCurrentGraph(_getState()), ids) || [];\r\n}\r\nexport function GetNodeProp(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function GetGroupProp(id, prop) {\r\n    let group = GraphMethods.GetGroup(GetCurrentGraph(_getState()), id);\r\n    if (group) {\r\n        return group && group.properties && group.properties[prop];\r\n    }\r\n\r\n    return null;\r\n}\r\nexport function GetConditionNodes(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetConditionNodes(state, id);\r\n}\r\nexport function IsAgent(node) {\r\n    return GetNodeProp(node, NodeProperties.IsAgent);\r\n}\r\nexport function GetLinkChainItem(options) {\r\n    return GraphMethods.GetLinkChainItem(GetState(), options);\r\n}\r\nexport function GetCodeName(node) {\r\n    if (typeof (node) === 'string') {\r\n        node = GraphMethods.GetNode(GetCurrentGraph(GetState()), node);\r\n    }\r\n    return GetNodeProp(node, NodeProperties.CodeName);\r\n}\r\n\r\nexport function GetJSCodeName(node) {\r\n    var l = GetCodeName(node);\r\n    if (l) {\r\n        return l.toJavascriptName();\r\n    }\r\n    return l;\r\n}\r\n\r\nexport function GetModelPropertyChildren(id) {\r\n\r\n    let property_nodes = GetModelPropertyNodes(id);\r\n    let logicalChildren = GetLogicalChildren(id);\r\n    return [...property_nodes, ...logicalChildren];\r\n}\r\nexport function GetMethodParameters(methodId) {\r\n    let method = GetNodeById(methodId);\r\n    if (method) {\r\n        let methodType = GetNodeProp(method, NodeProperties.FunctionType);\r\n        if (methodType && MethodFunctions[methodType]) {\r\n\r\n            let { parameters } = MethodFunctions[methodType];\r\n            if (parameters) {\r\n                return parameters;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function GetNodeById(node, graph) {\r\n    return GraphMethods.GetNode(graph || GetCurrentGraph(GetState()), node);\r\n}\r\n\r\nexport function GetChildComponentAncestors(id) {\r\n    return GraphMethods.GetChildComponentAncestors(_getState(), id);\r\n}\r\n\r\nexport function GetMethodDefinition(id) {\r\n    return MethodFunctions[GetMethodFunctionType(id)];\r\n}\r\nexport function GetMethodFunctionType(id) {\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n\r\n    return GetNodeProp(method, NodeProperties.FunctionType);\r\n}\r\nexport function GetMethodFunctionValidation(id) {\r\n\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n    return GetNodeProp(method, NodeProperties.MethodFunctionValidation);\r\n}\r\nexport function GetPermissionNode(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetPermissionNode(state, id);\r\n}\r\nexport function GetValidationNode(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetValidationNode(state, id);\r\n}\r\nexport function GetDataSourceNode(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetDataSourceNode(state, id);\r\n}\r\nexport function GetModelItemFilter(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetModelItemFilter(state, id);\r\n}\r\nexport function GetPermissionsConditions(id) {\r\n    return _getPermissionsConditions(_getState(), id);\r\n}\r\nexport function GetValidationsConditions(id) {\r\n    return _getValidationConditions(_getState(), id);\r\n}\r\nexport function GetModelItemConditions(id) {\r\n    return _getValidationConditions(_getState(), id);\r\n}\r\nexport function GetConditionSetup(condition) {\r\n    return GetNodeProp(condition, NodeProperties.Condition);\r\n}\r\nexport function GetDataChainEntryNodes() {\r\n    return GraphMethods.GetDataChainEntryNodes(_getState());\r\n}\r\nexport function GenerateChainFunction(id) {\r\n    let chain = GetDataChainParts(id);\r\n    let args = null;\r\n    let observables = [];\r\n    let setArgs = [];\r\n    let subscribes = [];\r\n    let setProcess = [];\r\n    let funcs = chain.map((c, index) => {\r\n        if (index === 0) {\r\n            args = GetDataChainArgs(c);\r\n        }\r\n        let temp = GenerateDataChainMethod(c);\r\n        observables.push(GenerateObservable(c, index));\r\n        setArgs.push(GenerateArgs(c, chain));\r\n        setProcess.push(GenerateSetProcess(c, chain));\r\n        subscribes.push(GetSubscribes(c, chain));\r\n        return temp;\r\n    });\r\n    let index = chain.indexOf(id);\r\n    let nodeName = (GetJSCodeName(id) || ('node' + index)).toJavascriptName();\r\n    let lastLink = GetLastChainLink(chain);\r\n    let lastLinkindex = chain.indexOf(lastLink);\r\n    let lastNodeName = (GetJSCodeName(lastLink) || ('node' + lastLinkindex)).toJavascriptName();\r\n    let method = `export function  ${GetCodeName(id)}(${args.join()}) {\r\n${observables.join(NodeConstants.NEW_LINE)}\r\n${setArgs.join(NodeConstants.NEW_LINE)}\r\n${setProcess.join(NodeConstants.NEW_LINE)}\r\n${subscribes.join(NodeConstants.NEW_LINE)}\r\n${nodeName}.update($id , '$id');\r\n\r\nreturn ${lastNodeName}.value;\r\n}`;\r\n\r\n    return method;\r\n}\r\nexport function GenerateSetProcess(id, parts) {\r\n    let index = parts.indexOf(id);\r\n    let nodeName = (GetJSCodeName(id) || ('node' + index)).toJavascriptName();\r\n    return `${nodeName}.setProcess(${GenerateDataChainMethod(id)})`;\r\n\r\n}\r\n\r\nexport function GetSubscribes(id, parts) {\r\n    let node = GetNodeById(id);\r\n    let index = parts.indexOf(id);\r\n    let nodeName = (GetJSCodeName(id) || ('node' + index)).toJavascriptName();\r\n    let functionType = GetNodeProp(node, NodeProperties.DataChainFunctionType);\r\n    if (functionType && DataChainFunctions[functionType] && DataChainFunctions[functionType].merge) {\r\n        // pulls args from other nodes\r\n        let args = Object.keys(DataChainFunctions[functionType].ui).map((key, kindex) => {\r\n            let temp = GetNodeProp(node, DataChainFunctions[functionType].ui[key]);\r\n            return `${(GetJSCodeName(temp) || ('node' + parts.indexOf(temp))).toJavascriptName()}`\r\n        });\r\n        if (args && args.length)\r\n            return `${args.map(v => `${v}.subscribe(${nodeName});\r\n`).join('')}`;\r\n    }\r\n    else {\r\n        let parent = (GetNodeProp(node, NodeProperties.ChainParent));\r\n        if (parent) {\r\n            return `${GetJSCodeName(parent).toJavascriptName()}.subscribe(${nodeName})`;\r\n        }\r\n    }\r\n    return '';\r\n}\r\n\r\n\r\nexport function GenerateArgs(id, parts) {\r\n    let node = GetNodeById(id);\r\n    let index = parts.indexOf(id);\r\n    let nodeName = (GetJSCodeName(id) || ('node' + index)).toJavascriptName();\r\n    let functionType = GetNodeProp(node, NodeProperties.DataChainFunctionType);\r\n    if (functionType && DataChainFunctions[functionType] && DataChainFunctions[functionType].merge) {\r\n        // pulls args from other nodes\r\n        let args = Object.keys(DataChainFunctions[functionType].ui).map((key, kindex) => {\r\n            let temp = GetNodeProp(node, DataChainFunctions[functionType].ui[key]);\r\n            return `['${(GetJSCodeName(temp) || ('node' + parts.indexOf(temp))).toJavascriptName()}']: ${kindex}`\r\n        });\r\n\r\n        return `${nodeName}.setArgs({ ${args} })`;\r\n    }\r\n    else {\r\n        let parent = (GetNodeProp(node, NodeProperties.ChainParent));\r\n        if (parent) {\r\n            return `${nodeName}.setArgs({ ['${GetJSCodeName(parent).toJavascriptName()}']: 0 })`;\r\n        }\r\n        else {\r\n            return `${nodeName}.setArgs({ $id: 0 })`;\r\n        }\r\n    }\r\n    return '';\r\n}\r\n\r\n\r\nexport function GetLastChainLink(parts) {\r\n    let lastLink = parts.find(id => {\r\n        return GetNodeProp(GetNodeById(id), NodeProperties.AsOutput);\r\n    })\r\n    return lastLink;\r\n}\r\nexport function GenerateObservable(id, index) {\r\n    let nodeName = (GetCodeName(id) || ('node' + index)).toJavascriptName();\r\n    return `let ${nodeName} = new RedObservable('${nodeName}');`\r\n}\r\nexport function GetDataChainArgs(id) {\r\n    let node = GetNodeById(id);\r\n    let functionType = GetNodeProp(node, NodeProperties.DataChainFunctionType);\r\n    if (functionType && DataChainFunctions[functionType]) {\r\n        let { merge, ui } = DataChainFunctions[functionType];\r\n        if (merge) {\r\n            return Object.keys(ui);\r\n        }\r\n        return ['$id']\r\n    }\r\n    return [];\r\n}\r\nexport function GenerateChainFunctions() {\r\n    let entryNodes = GetDataChainEntryNodes().map(x => x.id);\r\n    return entryNodes.map(GenerateChainFunction).join(NodeConstants.NEW_LINE);\r\n}\r\nexport function GetDataChainNext(id) {\r\n    let graph = GetRootGraph(_getState());\r\n    if (!graph) { throw 'no graph found'; }\r\n    let current = id;\r\n    let groupDaa = GetNodeProp(GetNodeById(current), NodeProperties.Groups);\r\n\r\n    if (groupDaa && groupDaa.group) {\r\n        let group = GraphMethods.GetGroup(graph, groupDaa.group);\r\n        if (group) {\r\n            let entryNode = GetGroupProp(group.id, NodeConstants.GroupProperties.GroupEntryNode);\r\n            if (entryNode === current) {\r\n                let exitNode = GetGroupProp(group.id, NodeConstants.GroupProperties.ExternalExitNode);\r\n                return GetNodeById(exitNode);\r\n            }\r\n        }\r\n    }\r\n    let next = GraphMethods.getNodesByLinkType(graph, {\r\n        id: current,\r\n        type: NodeConstants.LinkType.DataChainLink,\r\n        direction: GraphMethods.SOURCE\r\n    }).filter(x => x.id !== current).sort((a, b) => {\r\n        var a_ = GetNodeProp(a, NodeProperties.ChainParent) ? 1 : 0;\r\n        var b_ = GetNodeProp(b, NodeProperties.ChainParent) ? 1 : 0;\r\n        return a_ - b_;\r\n    }).unique(x => x.id)[0];\r\n    return next;\r\n}\r\nexport function GetDataChainNextId(id) {\r\n    let next = GetDataChainNext(id);\r\n    return next && next.id;\r\n}\r\nexport function GetDataChainParts(id, result) {\r\n    result = result ? result : [id];\r\n    result.push(id);\r\n    result = [...result].unique();\r\n    let node = GetNodeById(id);\r\n    let nodeGroup = GetNodeProp(node, NodeProperties.Groups) || {};\r\n    let groups = Object.values(nodeGroup);\r\n    let current = id;\r\n    let dataChains = NodesByType(_getState(), NodeTypes.DataChain);\r\n    let oldlength;\r\n    do {\r\n        oldlength = result.length;\r\n        let dc = dataChains.filter(x => result.some(v => v === GetNodeProp(x, NodeProperties.ChainParent)));\r\n        result.push(...dc.map(v => v.id));\r\n        dc.map(_dc => {\r\n            groups = [...groups, ...Object.values(GetNodeProp(_dc, NodeProperties.Groups) || {})];\r\n        });\r\n        groups.map(g => {\r\n            let nodes = GetNodesInGroup(g);\r\n            result.push(...nodes);\r\n        });\r\n        result = result.unique();\r\n    } while (result.length !== oldlength);\r\n\r\n    return result;\r\n}\r\nexport function GetNodesInGroup(groupId) {\r\n    return GraphMethods.GetNodesInGroup(GetCurrentGraph(_getState()), groupId);\r\n}\r\nexport function GetDataChainFrom(id) {\r\n    let result = [id];\r\n    let current = id;\r\n    let graph = GetRootGraph(_getState());\r\n    if (!graph) { throw 'no graph found'; }\r\n    for (var i = 0; i < 10; i++) {\r\n        let next = GetDataChainNext(current);\r\n        current = null;\r\n        if (next && next.id) {\r\n            result.push(next.id);\r\n            current = next.id;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\nexport function getGroup(id) {\r\n    // return graph.groupLib[id];\r\n    return GraphMethods.getGroup(GetCurrentGraph(_getState()), id);\r\n}\r\nexport function hasGroup(id) {\r\n    //    return !!(graph.nodeLib[parent] && GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups));\r\n    return GraphMethods.hasGroup(GetCurrentGraph(_getState()), id);\r\n}\r\n\r\n\r\nexport function IsEndOfDataChain(id) {\r\n    return GetDataChainFrom(id).length === 1;\r\n}\r\nexport function GenerateDataChainMethod(id) {\r\n    let node = GetNodeById(id);\r\n    let model = GetNodeProp(node, NodeProperties.UIModelType);\r\n    let property = GetNodeProp(node, NodeProperties.Property);\r\n    let functionType = GetNodeProp(node, NodeProperties.DataChainFunctionType);\r\n    let lastpart = 'return item;';\r\n    switch (functionType) {\r\n        case DataChainFunctionKeys.ModelProperty:\r\n            if (property) {\r\n                lastpart = `if(item) {\r\n        return item.${GetJSCodeName(property) || property};\r\n    }\r\n    return null;`\r\n            }\r\n            return `(id) => {\r\n    let item = GetItem(Models.${GetCodeName(model)}, id);\r\n    ${lastpart}\r\n}`;\r\n        case DataChainFunctionKeys.Model:\r\n            return `(id) => {\r\n    let item = GetItem(Models.${GetCodeName(model)}, id);\r\n    ${lastpart}\r\n}`;\r\n        case DataChainFunctionKeys.Pass:\r\n            return `(arg) => {\r\n    return arg;\r\n}`;\r\n        case DataChainFunctionKeys.StringConcat:\r\n            return `(node1, node2) => { return \\`\\${node1} \\${node2}\\` }`\r\n            break;\r\n    }\r\n}\r\nexport function GetPermissionsSortedByAgent() {\r\n    return GetNodesSortedByAgent(NodeTypes.Permission);\r\n}\r\n\r\nexport function GetValidationsSortedByAgent() {\r\n    return GetNodesSortedByAgent(NodeTypes.Validator);\r\n}\r\n\r\nexport function GetNodesSortedByAgent(type) {\r\n    let state = _getState();\r\n    let nodes = NodesByType(state, type);\r\n\r\n    return nodes.filter((node) => {\r\n        let methodNode = GraphMethods.GetMethodNode(state, node.id);\r\n        return methodNode;\r\n    }).groupBy(node => {\r\n        let methodNode = GraphMethods.GetMethodNode(state, node.id);\r\n        return GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent);\r\n    })\r\n}\r\n\r\nexport function GetArbitersForNodeType(type) {\r\n    let state = _getState();\r\n    let permissions = NodesByType(state, type);\r\n    let models = [];\r\n    permissions.map((permission) => {\r\n        let methodNode = GraphMethods.GetMethodNode(state, permission.id);\r\n        let methodProps = GetMethodProps(methodNode);\r\n        Object.values(methodProps).map(id => {\r\n            let node = GetGraphNode(id);\r\n            let nodeType = GetNodeProp(node, NodeProperties.NODEType);\r\n            if ([NodeTypes.Model].some(v => v === nodeType)) {\r\n                models.push(id);\r\n            }\r\n        })\r\n    })\r\n    return models.unique();\r\n}\r\nexport function GetAgentNodes() {\r\n    return NodesByType(_getState(), NodeTypes.Model).filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n}\r\nexport function GetUsers() {\r\n    return NodesByType(_getState(), NodeTypes.Model).filter(x => GetNodeProp(x, NodeProperties.IsUser));\r\n}\r\nexport function GetArbitersForPermissions() {\r\n    return GetArbitersForNodeType(NodeTypes.Permission);\r\n}\r\n\r\nexport function GetArbitersForValidations() {\r\n    return GetArbitersForNodeType(NodeTypes.Validator);\r\n}\r\n\r\nexport function GetNameSpace() {\r\n    let state = _getState();\r\n\r\n    let graphRoot = GetRootGraph(state);\r\n\r\n    let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n    return namespace;\r\n}\r\n\r\nexport function GetArbiterPropertyDefinitions(tabs = 3, language = NodeConstants.ProgrammingLanguages.CSHARP) {\r\n    let arbiters = GetArbitersForPermissions();\r\n    let template = `IRedArbiter<{{model}}> arbiter{{model}};`\r\n    let tab = [].interpolate(0, tabs, () => `   `).join('');\r\n    let definitions = arbiters.map(arbiter => {\r\n        return tab + bindTemplate(template, {\r\n            model: GetCodeName(arbiter)\r\n        });\r\n    });\r\n    return definitions.join(NodeConstants.NEW_LINE);\r\n}\r\n\r\nexport function GetArbiterPropertyImplementations(tabs = 4, language = NodeConstants.ProgrammingLanguages.CSHARP) {\r\n    let arbiters = GetArbitersForPermissions();\r\n    let template = `arbiter{{model}} = RedStrapper.Resolve<IRedArbiter<{{model}}>>();`\r\n    let tab = [].interpolate(0, tabs, () => `   `).join('');\r\n    let definitions = arbiters.map(arbiter => {\r\n        return tab + bindTemplate(template, {\r\n            model: GetCodeName(arbiter)\r\n        });\r\n    });\r\n    return definitions.join(NodeConstants.NEW_LINE);\r\n}\r\n\r\n\r\n\r\nexport function GetCombinedCondition(id, language = NodeConstants.ProgrammingLanguages.CSHARP) {\r\n    let node = GetGraphNode(id);\r\n    let conditions = [];\r\n    let final_result = 'res';\r\n    let tabcount = 0;\r\n    switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n        case NodeTypes.Permission:\r\n            conditions = GetPermissionsConditions(id);;\r\n            final_result = 'result';\r\n            tabcount = 3;\r\n            break;\r\n        case NodeTypes.ModelItemFilter:\r\n            conditions = GetModelItemConditions(id);\r\n            break;\r\n        case NodeTypes.Validator:\r\n            conditions = GetValidationsConditions(id);\r\n            tabcount = 3;\r\n            final_result = 'result';\r\n            break;\r\n    }\r\n    let tabs = [].interpolate(0, tabcount, () => `    `).join('');\r\n    let clauses = [];\r\n    conditions.map(condition => {\r\n        let selectedConditionSetup = GetSelectedConditionSetup(id, condition);\r\n        let res = GetConditionsClauses(id, selectedConditionSetup, language);\r\n        clauses = [...clauses, ...res.map(t => t.clause)];\r\n    });\r\n    let finalClause = clauses.map((_, index) => {\r\n        return `res_` + index;\r\n    }).join(' && ') || 'true';\r\n    clauses.push(`${final_result} = ${finalClause};`)\r\n    return clauses.map((clause, index) => {\r\n        return tabs + bindTemplate(clause, {\r\n            result: `res_${index}`\r\n        });\r\n    }).join(NodeConstants.NEW_LINE)\r\n\r\n}\r\nexport function GetConditionsClauses(adjacentId, clauseSetup, language) {\r\n    let result = [];\r\n    if (clauseSetup) {\r\n        Object.keys(clauseSetup).map(clauseKey => {\r\n            let { properties } = clauseSetup[clauseKey];\r\n            if (properties) {\r\n                Object.keys(properties).map(modelId => {\r\n                    let propertyName = GetCodeName(modelId);\r\n                    let { validators } = properties[modelId];\r\n                    if (validators) {\r\n                        Object.keys(validators).map(validatorId => {\r\n                            let validator = validators[validatorId];\r\n                            let res = GetConditionClause(adjacentId, clauseKey, propertyName, validator, language);\r\n                            result.push({\r\n                                clause: res,\r\n                                id: validatorId\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n}\r\nexport function safeFormatTemplateProperty(str) {\r\n    return str.split('-').join('_');\r\n}\r\nexport function GetConditionClause(adjacentId, clauseKey, propertyName, validator, language) {\r\n    let method = GetNodesMethod(adjacentId);\r\n    let clauseKeyNodeId = GetMethodNodeProp(method, clauseKey);\r\n    let { type, template, node, nodeProperty, many2manyProperty, many2many, many2manyMethod } = validator;\r\n    let nodeNodeId = GetMethodNodeProp(method, node);\r\n    let conditionTemplate = '';\r\n    let properties = {};\r\n    if (template) {\r\n        conditionTemplate = fs.readFileSync(template, 'utf8');\r\n    }\r\n    else {\r\n        throw 'no template found'\r\n    }\r\n    switch (type) {\r\n        case NodeConstants.FilterRules.IsInModelPropertyCollection:\r\n        case NodeConstants.FilterRules.EqualsModelProperty:\r\n        case NodeConstants.FilterRules.EqualsFalse:\r\n        case NodeConstants.FilterRules.IsNotInModelPropertyCollection:\r\n            properties = {\r\n                agent: safeFormatTemplateProperty(clauseKey),\r\n                agent_property: safeFormatTemplateProperty(propertyName),\r\n                model: node,\r\n                model_property: GetCodeName(nodeProperty)\r\n            }\r\n            break;\r\n        case NodeConstants.FilterRules.Many2ManyPropertyIsTrue:\r\n            properties = {\r\n                agent: safeFormatTemplateProperty(clauseKey),\r\n                agent_property: safeFormatTemplateProperty(propertyName),\r\n                agent_type: GetCodeName(clauseKeyNodeId) || 'agent_type missing',\r\n                model_type: GetCodeName(nodeNodeId) || 'model_type missing',\r\n                model: node,\r\n                model_property: GetCodeName(nodeProperty),\r\n                connection_type: GetCodeName(many2many),\r\n                connection_is_true: GetConnectionClause({\r\n                    many2manyProperty,\r\n                    many2manyMethod\r\n                }) //\r\n            }\r\n            break;\r\n        case NodeConstants.ValidationRules.OneOf:\r\n            let listItems = GenerateConstantList(validator);\r\n            properties = {\r\n                agent: safeFormatTemplateProperty(clauseKey),\r\n                agent_property: safeFormatTemplateProperty(propertyName),\r\n                agent_type: GetCodeName(clauseKeyNodeId) || 'agent_type missing',\r\n                list: listItems\r\n            }\r\n            break;\r\n        default:\r\n            throw 'Unhandled condition clause case: ' + type;\r\n    }\r\n\r\n    return bindTemplate(conditionTemplate, properties);\r\n}\r\nfunction GenerateConstantList(validator) {\r\n    let node = GetGraphNode(validator.node);\r\n    let { enumeration } = validator;\r\n    switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n        case NodeTypes.Enumeration:\r\n            var enums = GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n\r\n            return enums.map(enum_ => {\r\n                if (enumeration[enum_.id || enum_]) {\r\n                    return `${GetCodeName(validator.node)}.${NodeConstants.MakeConstant(enum_.value || enum_)}`;\r\n                }\r\n            }).filter(x => x).join(', ');\r\n        default:\r\n            throw 'not implemented capturing of enums';\r\n    }\r\n}\r\nexport function GetConnectionClause(args) {\r\n    let {\r\n        many2manyProperty,\r\n        many2manyMethod\r\n    } = args;\r\n    switch (many2manyMethod) {\r\n        case NodeConstants.FilterRules.EqualsTrue:\r\n            return bindTemplate('_x => _x.{{connection_property}} == {{connection_value}}', {\r\n                connection_property: GetCodeName(many2manyProperty),\r\n                connection_value: 'true'\r\n            });\r\n        case NodeConstants.FilterRules.EqualsFalse:\r\n            return bindTemplate('_x => _x.{{connection_property}} == {{connection_value}}', {\r\n                connection_property: GetCodeName(many2manyProperty),\r\n                connection_value: 'false'\r\n            });\r\n        default:\r\n            throw 'unhandle get connection clause : ' + many2manyMethod\r\n    }\r\n}\r\n\r\nexport function GetSelectedConditionSetup(permissionId, condition) {\r\n    var method = GraphMethods.GetMethodNode(_getState(), permissionId);\r\n    if (method) {\r\n        let conditionSetup = GetConditionSetup(condition);\r\n        if (conditionSetup && conditionSetup.methods) {\r\n            return conditionSetup.methods[GetNodeProp(method, NodeProperties.FunctionType)];\r\n        }\r\n        else {\r\n            // console.warn('condition is improperly formed');\r\n        }\r\n    }\r\n    else {\r\n        // console.warn('no method node found');\r\n    }\r\n    return null;\r\n}\r\nexport function _getPermissionsConditions(state, id) {\r\n    return _getConditions(state, id);\r\n}\r\n\r\nexport function _getValidationConditions(state, id) {\r\n    return _getConditions(state, id);\r\n}\r\nexport function _getConditions(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GraphMethods.GetNodesLinkedTo(graph, {\r\n        id\r\n    }).filter(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Condition);\r\n}\r\n\r\nexport function GetComponentNodes() {\r\n    let state = GetState();\r\n    return NodesByType(state, NodeTypes.ComponentNode);\r\n}\r\nexport function GetComponentNodeProperties() {\r\n    return GetComponentNodes().map(node => {\r\n\r\n        let componentProperties = GetNodeProp(node, NodeProperties.ComponentProperties);\r\n        let componentPropertiesList = GraphMethods.getComponentPropertyList(componentProperties);\r\n\r\n        return { id: node.id, componentPropertiesList };\r\n    })\r\n}\r\nexport function GetConnectedScreenOptions(id) {\r\n    let state = _getState();\r\n    let graph = GetRootGraph(state);\r\n    return GraphMethods.GetNodesLinkedTo(graph, {\r\n        id\r\n    }).filter(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ScreenOption);\r\n}\r\nexport function GetModelPropertyNodes(refId) {\r\n    var state = _getState();\r\n    return GraphMethods.GetLinkChain(state, {\r\n        id: refId,\r\n        links: [{\r\n            type: NodeConstants.LinkType.PropertyLink,\r\n            direction: GraphMethods.SOURCE\r\n        }]\r\n    });\r\n}\r\n\r\nexport function GetLogicalChildren(id) {\r\n    let currentNode = GraphMethods.GetNode(GetCurrentGraph(GetState()), id);\r\n    var hasLogicalChildren = GetNodeProp(currentNode, NodeProperties.HasLogicalChildren);\r\n    if (hasLogicalChildren)\r\n        return (GetNodeProp(currentNode, NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n            let node = GraphMethods.GetNode(GetCurrentGraph(_getState()), t);\r\n            return node;\r\n        }).filter(x => x);\r\n    return [];\r\n}\r\n\r\nexport function GetMethodNodeSelectOptions(methodProps) {\r\n    return Object.keys(methodProps).map(val => {\r\n        return {\r\n            value: val,\r\n            title: `${GetCodeName(methodProps[val])} (${val})`\r\n        }\r\n    })\r\n}\r\nexport function GetNodeCode(graph, id) {\r\n    return GetCodeName(GraphMethods.GetNode(graph, id));\r\n}\r\n\r\nexport function GetMethodPropNode(graph, node, key) {\r\n    var methodProps = GetNodeProp(node, NodeProperties.MethodProps);\r\n    if (methodProps) {\r\n        return GraphMethods.GetNode(graph, methodProps[key] || null);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function GetMethodOptions(methodProps) {\r\n    if (!methodProps) {\r\n        return [];\r\n    }\r\n    let state = _getState();\r\n    return Object.keys(methodProps).map(t => {\r\n        var n = GraphMethods.GetNode(GetRootGraph(state), methodProps[t]);\r\n        return {\r\n            title: `${GetCodeName(n)} (${t})`,\r\n            value: t\r\n        }\r\n    });\r\n}\r\n\r\nexport function GetLinkProperty(link, prop) {\r\n    return link && link.properties && link.properties[prop]\r\n}\r\n\r\nexport function GetGroupProperty(group, prop) {\r\n    return group && group.properties && group.properties[prop]\r\n}\r\n\r\nexport function VisualEq(state, key, value) {\r\n    return Visual(state, key) === value;\r\n}\r\nexport function Node(state, nodeId) {\r\n\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph && currentGraph.nodeLib) {\r\n        return currentGraph.nodeLib[nodeId];\r\n    }\r\n    return null;\r\n}\r\nexport function ModelNotConnectedToFunction(agentId, modelId, packageType, nodeType = NodeTypes.Method) {\r\n    let connections = NodesByType(_getState(), nodeType).filter(x => {\r\n        let match = GetNodeProp(x, NodeProperties.NodePackage) === modelId &&\r\n            GetNodeProp(x, NodeProperties.NodePackageType) === packageType &&\r\n            GetNodeProp(x, NodeProperties.NodePackageAgent) === agentId\r\n        return match;\r\n    }).length;\r\n\r\n    return !connections\r\n}\r\nexport function Application(state, key) {\r\n    return GetC(state, APPLICATION, key);\r\n}\r\nexport function GetVisualGraph(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    return currentGraph ? GetC(state, VISUAL_GRAPH, currentGraph.id) : null;\r\n}\r\nexport function SaveApplication(value, key, dispatch) {\r\n    dispatch(UIC(APPLICATION, key, value));\r\n}\r\nexport function Graphs(state, key) {\r\n    return GetC(state, GRAPHS, key);\r\n}\r\n\r\nexport function SaveGraph(graph, dispatch) {\r\n    graph = {\r\n        ...graph,\r\n        ...{\r\n            updated: Date.now()\r\n        }\r\n    };\r\n    let visualGraph = GraphMethods.VisualProcess(graph);\r\n    if (visualGraph)\r\n        dispatch(UIC(VISUAL_GRAPH, visualGraph.id, visualGraph));\r\n    dispatch(UIC(GRAPHS, graph.id, graph));\r\n}\r\nexport function UIC(section, item, value) {\r\n    return {\r\n        type: UI_UPDATE,\r\n        item,\r\n        value,\r\n        section\r\n    }\r\n}\r\nexport function toggleVisual(key) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, !!!GetC(state, VISUAL, key)))\r\n    }\r\n\r\n}\r\n\r\nexport function GUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nexport function setVisual(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, value))\r\n    }\r\n\r\n}\r\nexport function setApplication(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(APPLICATION, key, value))\r\n    }\r\n\r\n}\r\nexport const SELECTED_LINK = 'SELECTED_LINK';\r\nexport const HOVERED_LINK = 'HOVERED_LINK';\r\nexport const SELECTED_NODE = 'SELECTED_NODE';\r\nexport const CONTEXT_MENU_VISIBLE = 'CONTEXT_MENU_VISIBLE';\r\nexport const CONTEXT_MENU_MODE = 'CONTEXT_MENU_MODE';\r\nexport function SelectedNode(nodeId) {\r\n    return (dispatch, getState) => {\r\n        dispatch(UIC(VISUAL, SELECTED_NODE, nodeId));\r\n    }\r\n}\r\nexport function toggleDashboardMinMax() {\r\n    return toggleVisual(DASHBOARD_MENU);\r\n}\r\nexport function GetNodeTitle(node) {\r\n    if (typeof (node) === 'string') {\r\n        node = GraphMethods.GetNode(GetCurrentGraph(GetState()), node);\r\n    }\r\n\r\n    if (!node) { return Titles.Unknown }\r\n    return node.properties ? node.properties.text || node.id : node.id;\r\n}\r\nexport function GetNodes(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return [...currentGraph.nodes.map(t => currentGraph.nodeLib[t])];\r\n    }\r\n    return [];\r\n}\r\nexport function CanChangeType(node) {\r\n    var nodeType = GetNodeProp(node, NodeProperties.NODEType);\r\n    switch (nodeType) {\r\n        case NodeTypes.ReferenceNode:\r\n            return false;\r\n        default:\r\n            return true;\r\n    }\r\n}\r\nexport function GetScreenNodes() {\r\n    var state = _getState();\r\n    return NodesByType(state, NodeTypes.Screen);\r\n}\r\nexport function GetModelNodes() {\r\n    return NodesByType(_getState(), NodeTypes.Model);\r\n}\r\nexport function GetConfigurationNodes() {\r\n    return NodesByType(_getState(), NodeTypes.Configuration);\r\n}\r\nexport function GetMaestroNode(id) {\r\n    let state = _getState();\r\n    let graph = GetRootGraph(state);\r\n    let nodes = GraphMethods.GetNodesLinkedTo(graph, {\r\n        id\r\n    }).filter(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Maestro);\r\n    if (nodes && nodes.length) {\r\n        return nodes[0];\r\n    }\r\n    return null;\r\n}\r\nexport function GetControllerNode(id) {\r\n    let state = _getState();\r\n    let graph = GetRootGraph(state);\r\n    let nodes = GraphMethods.GetNodesLinkedTo(graph, {\r\n        id\r\n    }).filter(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Controller);\r\n    if (nodes && nodes.length) {\r\n        return nodes[0];\r\n    }\r\n    return null;\r\n}\r\nexport function HasCurrentGraph(options = {}) {\r\n    let state = _getState();\r\n    var currentGraph = options.useRoot ? GetRootGraph(state) : GetCurrentGraph(state);\r\n    return !!currentGraph;\r\n}\r\nexport function NodesByType(state, nodeType, options = {}) {\r\n\r\n    var currentGraph = options.useRoot ? GetRootGraph(state) : GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib && currentGraph.nodeLib[x] && currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs &&\r\n                    currentGraph.nodeLib &&\r\n                    currentGraph.nodeLib[x] &&\r\n                    currentGraph.nodeLib[x].properties &&\r\n                    currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    return [];\r\n}\r\n\r\nexport function GetNodeFromRoot(state, id) {\r\n    var graph = GetRootGraph(state);\r\n    if (graph) {\r\n        return GraphMethods.GetNode(graph, id);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function NodesConnectedTo(state, nodeId) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return (t) => {\r\n            if (currentGraph.linkLib[t.id]) {\r\n                return currentGraph.linkLib[t.id][nodeId];\r\n            }\r\n        }\r\n    }\r\n    return () => false;\r\n}\r\nlet _getState;\r\nlet _dispatch;\r\nexport function GetState() {\r\n    return _getState();\r\n}\r\nexport function GetDispatchFunc() {\r\n    return _dispatch;\r\n}\r\nexport function GetStateFunc() {\r\n    return _getState;\r\n}\r\nexport function setTestGetState(func) {\r\n    _getState = func;\r\n}\r\nexport function setState() {\r\n    return (dispatch, getState) => {\r\n        _getState = getState;\r\n        _dispatch = dispatch;\r\n    }\r\n}\r\n\r\nexport function clearPinned() {\r\n    let state = _getState();\r\n    _dispatch(graphOperation(GetNodes(state).filter(x => GetNodeProp(x, NodeProperties.Pinned)).map(node => {\r\n        return {\r\n            operation: CHANGE_NODE_PROPERTY,\r\n            options: {\r\n                prop: NodeProperties.Pinned,\r\n                id: node.id,\r\n                value: false\r\n            }\r\n        }\r\n    })));\r\n}\r\n\r\nexport function removeCurrentNode() {\r\n    graphOperation(REMOVE_NODE, { id: Visual(_getState(), SELECTED_NODE) })(_dispatch, _getState);\r\n}\r\nexport function togglePinned() {\r\n    let state = _getState();\r\n    let currentNode = Node(state, Visual(state, SELECTED_NODE));\r\n    _dispatch(graphOperation(CHANGE_NODE_PROPERTY, {\r\n        prop: NodeProperties.Pinned,\r\n        id: currentNode.id,\r\n        value: !GetNodeProp(currentNode, NodeProperties.Pinned)\r\n    }))\r\n}\r\nexport function GetGraphNode(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetNode(GetRootGraph(state), id);\r\n}\r\nexport function GetFunctionType(methodNode) {\r\n    return GetNodeProp(methodNode, NodeProperties.FunctionType);\r\n}\r\nexport function GetMethodNode(id) {\r\n    return GraphMethods.GetMethodNode(_getState(), id);\r\n}\r\nexport function GetMethodNodeProp(methodNode, key) {\r\n    let methodProps = (GetNodeProp(methodNode, NodeProperties.MethodProps) || {});\r\n    if (typeof (key) === 'string')\r\n        return methodProps[key];\r\n    if (!key) return null;\r\n    let { template } = key;\r\n    let temp = {};\r\n    Object.keys(methodProps).map(t => {\r\n        temp[t] = GetCodeName(methodProps[t]);\r\n    })\r\n    return bindTemplate(template, temp);\r\n\r\n}\r\nexport function GetMethodProps(methodNode) {\r\n    return (GetNodeProp(methodNode, NodeProperties.MethodProps) || {});\r\n}\r\nexport function GetMethodsProperties(id) {\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n    let methodProps = GetMethodProps(method);\r\n    return methodProps;\r\n}\r\nexport function GetMethodsProperty(id, prop) {\r\n    let methodProps = GetMethodsProperties(id);\r\n    if (methodProps) {\r\n        return methodProps[prop];\r\n    }\r\n    return null;\r\n}\r\nexport function GetMethodFilterParameters(id, all) {\r\n    return GetMethod_Parameters(id, 'filter', all);\r\n}\r\nexport function GetMethodFilterMetaParameters(id, all) {\r\n    return GetMethod_MetaParameters(id, 'filter');\r\n}\r\nfunction GetMethod_MetaParameters(id, key) {\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n    let methodProps = GetMethodProps(method);\r\n    let methodType = GetNodeProp(method, NodeProperties.FunctionType);\r\n    if (methodType) {\r\n        let setup = MethodFunctions[methodType];\r\n        if (setup && setup[key] && setup[key].params && methodProps) {\r\n            return setup[key].params.filter(x => typeof (x) === 'object' || x.metaparameter).map(x => {\r\n                let _x = x.key;\r\n                let nodeName = GetNodeTitle(methodProps[_x]);\r\n                let nodeClass = GetCodeName(methodProps[_x]);\r\n                return {\r\n                    title: nodeName,\r\n                    value: _x,\r\n                    paramClass: nodeClass,\r\n                    paramName: _x\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return [];\r\n}\r\nfunction GetMethod_Parameters(id, key, all) {\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n    let methodProps = GetMethodProps(method);\r\n    let methodType = GetNodeProp(method, NodeProperties.FunctionType);\r\n    if (methodType) {\r\n        let setup = MethodFunctions[methodType];\r\n        if (setup && setup[key] && setup[key].params && methodProps) {\r\n            return setup[key].params.filter(x => all || typeof (x) === 'string' || !x.metaparameter)\r\n                .map(x => !x.metaparameter ? x : x.metaparameter)\r\n                .map(_x => {\r\n                    let nodeName = GetNodeTitle(methodProps[_x]);\r\n                    let nodeClass = GetCodeName(methodProps[_x]);\r\n                    return {\r\n                        title: nodeName,\r\n                        value: _x,\r\n                        paramClass: nodeClass,\r\n                        paramName: _x\r\n                    }\r\n                });\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexport function GetMethodPermissionParameters(id, all) {\r\n    return GetMethod_Parameters(id, 'permission', all);\r\n}\r\nexport function GetMethodValidationParameters(id, all) {\r\n    return GetMethod_Parameters(id, 'validation', all);\r\n}\r\nexport function GetPermissionMethod(permission) {\r\n    return GetLinkChainItem({\r\n        id: permission.id,\r\n        links: [{\r\n            type: NodeConstants.LinkType.FunctionOperator,\r\n            direction: GraphMethods.TARGET\r\n        }]\r\n    })\r\n}\r\nexport function GetNodesMethod(id) {\r\n    return GetPermissionMethod(GetNodeById(id));\r\n}\r\nexport function GetCurrentGraph(state) {\r\n    var scopedGraph = GetCurrentScopedGraph(state);\r\n    return scopedGraph;\r\n    // if (currentGraph) {\r\n    //     currentGraph = Graphs(state, currentGraph);\r\n    // }\r\n    // return currentGraph;\r\n}\r\nexport function GetRootGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n    }\r\n    else if (dispatch) {\r\n        currentGraph = GraphMethods.createGraph();\r\n        SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n    }\r\n\r\n    return currentGraph;\r\n}\r\nexport function GetSubGraphs(state) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        let subgraphs = GraphMethods.getSubGraphs(currentGraph);\r\n        return subgraphs;\r\n    }\r\n    return null;\r\n}\r\nexport function addNewSubGraph() {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = GraphMethods.addNewSubGraph(rootGraph);\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\n\r\nexport function setRootGraph(key, value) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = {\r\n            ...rootGraph, ...{ [key]: value }\r\n        };\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\nexport function setAppsettingsAssemblyPrefixes(prefixes) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph.appConfig.AppSettings.AssemblyPrefixes = ['RedQuick', prefixes].unique(x => x).join(';')\r\n        SaveGraph(rootGraph, dispatch);\r\n    }\r\n}\r\nexport function GetCurrentScopedGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    let scope = Application(state, GRAPH_SCOPE) || [];\r\n    if (!currentGraph) {\r\n        if (dispatch) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n        }\r\n    }\r\n    else {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        if (scope.length) {\r\n            currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n        }\r\n    }\r\n    return currentGraph\r\n}\r\nexport const SELECTED_TAB = 'SELECTED_TAB';\r\nexport const DEFAULT_TAB = 'DEFAULT_TAB';\r\nconst SIDE_PANEL_OPEN = 'side-panel-open';\r\nexport const PARAMETER_TAB = 'PARAMETER_TAB';\r\nexport const SCOPE_TAB = 'SCOPE_TAB';\r\nexport const QUICK_MENU = 'QUICK_MENU';\r\n\r\nexport function newNode() {\r\n    graphOperation(NEW_NODE)(_dispatch, _getState);\r\n    setVisual(SIDE_PANEL_OPEN, true)(_dispatch, _getState);\r\n    setVisual(SELECTED_TAB, DEFAULT_TAB)(_dispatch, _getState);\r\n}\r\nexport function GetSelectedSubgraph(state) {\r\n    var root = GetRootGraph(state);\r\n    if (root) {\r\n        var scope = Application(state, GRAPH_SCOPE);\r\n        if (scope && scope.length) {\r\n            return GraphMethods.getSubGraph(root, scope);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function BuildPackage(model, _package) {\r\n    let { id } = model;\r\n    let methodFunctionDefinition = MethodFunctions[_package.methodType];\r\n    if (methodFunctionDefinition) {\r\n        let { constraints } = methodFunctionDefinition;\r\n\r\n        Object.keys(constraints).values(_const => {\r\n            let { key } = _const;\r\n        });\r\n    }\r\n}\r\n\r\nexport const UPDATE_GRAPH_TITLE = 'UPDATE_GRAPH_TITLE';\r\nexport const NEW_NODE = 'NEW_NODE';\r\nexport const REMOVE_NODE = 'REMOVE_NODE';\r\nexport const NEW_LINK = 'NEW_LINK';\r\nexport const CHANGE_NODE_TEXT = 'CHANGE_NODE_TEXT';\r\nexport const CURRENT_GRAPH = 'CURRENT_GRAPH';\r\nexport const GRAPH_SCOPE = 'GRAPH_SCOPE';\r\nexport const ADD_DEFAULT_PROPERTIES = 'ADD_DEFAULT_PROPERTIES';\r\nexport const CHANGE_NODE_PROPERTY = 'CHANGE_NODE_PROPERTY';\r\nexport const NEW_PROPERTY_NODE = 'NEW_PROPERTY_NODE';\r\nexport const NEW_PERMISSION_NODE = 'NEW_PERMISSION_NODE';\r\nexport const NEW_ATTRIBUTE_NODE = 'NEW_ATTRIBUTE_NODE';\r\nexport const ADD_LINK_BETWEEN_NODES = 'ADD_LINK_BETWEEN_NODES';\r\nexport const NEW_CONDITION_NODE = 'NEW_CONDITION_NODE';\r\nexport const ADD_NEW_NODE = 'ADD_NEW_NODE';\r\nexport const REMOVE_LINK_BETWEEN_NODES = 'REMOVE_LINK_BETWEEN_NODES';\r\nexport const REMOVE_LINK = 'REMOVE_LINK';\r\nexport const NEW_CHOICE_ITEM_NODE = 'NEW_CHOICE_ITEM_NODE';\r\nexport const NEW_PARAMETER_NODE = 'NEW_PARAMETER_NODE';\r\nexport const NEW_FUNCTION_OUTPUT_NODE = 'NEW_FUNCTION_OUTPUT_NODE';\r\nexport const NEW_MODEL_ITEM_FILTER = 'NEW_MODEL_ITEM_FILTER';\r\nexport const NEW_AFTER_METHOD = 'NEW_AFTER_METHOD';\r\nexport const NEW_VALIDATION_ITEM_NODE = 'NEW_VALIDATION_ITEM_NODE';\r\nexport const NEW_CHOICE_TYPE = 'NEW_CHOICE_TYPE';\r\nexport const NEW_VALIDATION_TYPE = 'NEW_VALIDATION_TYPE';\r\nexport const NEW_OPTION_ITEM_NODE = 'NEW_OPTION_ITEM_NODE';\r\nexport const NEW_OPTION_NODE = 'NEW_OPTION_NODE';\r\nexport const NEW_CUSTOM_OPTION = 'NEW_CUSTOM_OPTION';\r\nexport const UPDATE_GROUP_PROPERTY = 'UPDATE_GROUP_PROPERTY';\r\nexport const NEW_DATA_SOURCE = 'NEW_DATA_SOURCE';\r\nexport const NEW_COMPONENT_NODE = 'NEW_COMPONENT_NODE';\r\nexport const NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE = 'NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE';\r\nexport const NEW_EXTENSION_LIST_NODE = 'NEW_EXTENSION_LIST_NODE';\r\nexport const NEW_EXTENTION_NODE = 'NEW_EXTENTION_NODE';\r\nexport const NEW_SCREEN_OPTIONS = 'NEW_SCREEN_OPTIONS';\r\nexport const ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY = 'ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY';\r\nexport const APPLY_FUNCTION_CONSTRAINTS = 'APPLY_FUNCTION_CONSTRAINTS';\r\nexport const ADD_NEW_REFERENCE_NODE = 'ADD_NEW_REFERENCE_NODE;'\r\nexport const SET_DEPTH = 'SET_DEPTH';\r\nexport function PerformGraphOperation(commands) {\r\n    return graphOperation(commands);\r\n}\r\nexport function executeGraphOperation(model, op) {\r\n    return (dispatch, getState) => {\r\n        op.method({ model, dispatch, getState });\r\n    }\r\n}\r\nexport function graphOperation(operation, options) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let rootGraph = null;\r\n        var currentGraph = Application(state, CURRENT_GRAPH);\r\n        let scope = Application(state, GRAPH_SCOPE) || [];\r\n        if (!currentGraph) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n            rootGraph = currentGraph\r\n        }\r\n        else {\r\n            currentGraph = Graphs(state, currentGraph);\r\n            rootGraph = currentGraph;\r\n            if (scope.length) {\r\n                currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n            }\r\n        }\r\n        var operations = operation;\r\n        if (!Array.isArray(operation)) {\r\n            operations = [{ operation: operation, options }]\r\n        }\r\n        operations.filter(x => x).map(op => {\r\n            let { operation, options } = op;\r\n            switch (operation) {\r\n                case SET_DEPTH:\r\n                    currentGraph = GraphMethods.setDepth(currentGraph, options);\r\n                    break;\r\n                case NEW_NODE:\r\n                    currentGraph = GraphMethods.newNode(currentGraph);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case REMOVE_NODE:\r\n                    currentGraph = GraphMethods.removeNode(currentGraph, options);\r\n                    break;\r\n                case UPDATE_GRAPH_TITLE:\r\n                    currentGraph = GraphMethods.updateGraphTitle(currentGraph, options);\r\n                    break;\r\n                case NEW_LINK:\r\n                    currentGraph = GraphMethods.newLink(currentGraph, options)\r\n                    break;\r\n                case ADD_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.addLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.removeLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK:\r\n                    currentGraph = GraphMethods.removeLinkById(currentGraph, options);\r\n                    break;\r\n                case UPDATE_GROUP_PROPERTY:\r\n                    currentGraph = GraphMethods.updateGroupProperty(currentGraph, options);\r\n                    break;\r\n                case CHANGE_NODE_TEXT:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, { ...options, prop: 'text' });\r\n                    break;\r\n                case CHANGE_NODE_PROPERTY:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, options);\r\n                    break;\r\n                case NEW_PROPERTY_NODE:\r\n                    currentGraph = GraphMethods.addNewPropertyNode(currentGraph, options);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_DEFAULT_PROPERTIES:\r\n                    currentGraph = GraphMethods.addDefaultProperties(currentGraph, options);\r\n                    break;\r\n                case NEW_ATTRIBUTE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Attribute);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CONDITION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Condition);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_NEW_NODE:\r\n                    if (options.nodeType) {\r\n                        currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, options.nodeType, options.callback);\r\n                        setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    }\r\n                    break;\r\n                case NEW_MODEL_ITEM_FILTER:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ModelItemFilter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_AFTER_METHOD:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.AfterEffect);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_COMPONENT_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ComponentNode);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_DATA_SOURCE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.DataSource);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.PermissionDependency);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CHOICE_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ChoiceList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PARAMETER_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Parameter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_FUNCTION_OUTPUT_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.FunctionOutput);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Permission);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CUSTOM_OPTION:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionCustom);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_SCREEN_OPTIONS:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ScreenOption);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_NEW_REFERENCE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ReferenceNode);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENSION_LIST_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionTypeList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionType);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case APPLY_FUNCTION_CONSTRAINTS:\r\n                    currentGraph = GraphMethods.applyFunctionConstraints(currentGraph, options);\r\n                    // setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY:\r\n                    break;\r\n            }\r\n            currentGraph = GraphMethods.applyConstraints(currentGraph);\r\n            currentGraph = GraphMethods.constraintSideEffects(currentGraph);\r\n        })\r\n\r\n        if (scope.length) {\r\n            rootGraph = GraphMethods.setScopedGraph(rootGraph, { scope, graph: currentGraph });\r\n        }\r\n        else {\r\n            rootGraph = currentGraph;\r\n        }\r\n        rootGraph = GraphMethods.updateReferenceNodes(rootGraph);\r\n        SaveGraph(rootGraph, dispatch)\r\n    }\r\n}\r\n\r\nexport const Colors = {\r\n    SelectedNode: '#f39c12'\r\n};\r\n\r\n\r\n((array) => {\r\n    if (!array.toNodeSelect) {\r\n        Object.defineProperty(array, 'toNodeSelect', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function () {\r\n                var collection = this;\r\n                return collection.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        id: node.id,\r\n                        title: GetNodeTitle(node)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n})(Array.prototype);","export const HandlerEvents = {\r\n    scaffold: {\r\n        message: 'scaffold-project',\r\n        reply: 'scaffold-project-reply'\r\n    },\r\n    reactnative: {\r\n        message: 'react-project',\r\n        reply: 'react-project-reply'\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\n\r\nconst NAME_SPACE_TEMPLATE = './app/templates/namespace.tpl';\r\n\r\nexport default class NamespaceGenerator {\r\n    static Generate(options) {\r\n        var { template, namespace, space, usings } = options;\r\n        let namespaceTemplate = fs.readFileSync(NAME_SPACE_TEMPLATE, 'utf8');\r\n\r\n        namespaceTemplate = bindTemplate(namespaceTemplate, {\r\n            namespace,\r\n            space,\r\n            imports: usings ? usings.map(x=> `using ${x};`).unique(x => x).join('\\r\\n') : null,\r\n            body: template\r\n        })\r\n\r\n        return namespaceTemplate;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONTROLLER_CLASS_TEMPLATE = './app/templates/controller/controller.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE = './app/templates/controller/controller_functions_get.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class ControllerGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let controllers = NodesByType(state, NodeTypes.Controller);\r\n\r\n        let _controllerTemplateClass = fs.readFileSync(CONTROLLER_CLASS_TEMPLATE, 'utf8');\r\n        let _controllerTemplateFunction = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_TEMPLATE, 'utf8');\r\n        let _controllerTemplateFunctionGet = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE, 'utf8');\r\n        let root = GetRootGraph(state);\r\n        let result = {};\r\n        controllers.map(controller => {\r\n            let controllerTemplateClass = _controllerTemplateClass;\r\n            let functions = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(controller, NodeProperties.CodeName)}`;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            let maestro_functions = [];\r\n            let maestros = GraphMethods.getNodesByLinkType(root, {\r\n                id: controller.id,\r\n                type: LinkType.MaestroLink,\r\n                direction: GraphMethods.SOURCE\r\n            }).map(maestro => {\r\n                let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                    id: maestro.id,\r\n                    type: LinkType.FunctionLink,\r\n                    direction: GraphMethods.SOURCE\r\n                });\r\n                let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n                maestro_functions = tempfunctions;\r\n                if (maestro_functions.length) {\r\n                    maestro_functions.filter(x => !GetNodeProp(x, NodeProperties.NotIncludedInController)).map(maestro_function => {\r\n                        var ft = MethodFunctions[GetNodeProp(maestro_function, NodeProperties.FunctionType)];\r\n                        if (ft) {\r\n                            let tempFunction = ft.controller || _controllerTemplateFunction;\r\n                            let parameters = '';\r\n                            let parameter_route = '';\r\n                            let parameter_values = '';\r\n                            //If the function is a get then, use the get template.\r\n                            if (!ft.controller)\r\n                                if ([Methods.Get, Methods.GetAll].some(v => v === GetNodeProp(maestro_function, NodeProperties.MethodType))) {\r\n                                    tempFunction = _controllerTemplateFunctionGet;\r\n                                    let paramName = 'modelId';\r\n                                    if (ft.parentGet) {\r\n                                        paramName = 'parentId';\r\n                                    }\r\n                                    parameters = `string ${paramName}`;\r\n                                    parameter_route = `/{${paramName}}`;\r\n                                    parameter_values = `${paramName}`;\r\n                                }\r\n                            let codeNode = GetNodeProp(maestro_function, NodeProperties.CodeName);\r\n                            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                                id: maestro_function.id,\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                direction: GraphMethods.SOURCE\r\n                            });\r\n\r\n                            let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                            let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                            let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                            let methodProperties = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                            if (!methodProperties) return;\r\n                            let modelNode = GraphMethods.GetNode(root, methodProperties.model);\r\n                            let compositeInput = GraphMethods.GetNode(graphRoot, methodProperties[FunctionTemplateKeys.CompositeInput])\r\n                            let output_type = '{controller_generator_missing_model}';\r\n                            if (modelNode) {\r\n                                output_type = GetNodeProp(modelNode, NodeProperties.CodeName) || output_type;\r\n                                if (ft.isList) {\r\n                                    output_type = `IList<${output_type}>`;\r\n                                }\r\n                            }\r\n                            tempFunction = bindTemplate(tempFunction, {\r\n                                functionName: functionName,\r\n                                maestro_function: functionName,\r\n                                parameters,\r\n                                parameter_values,\r\n                                parameter_route,\r\n                                http_route: httpRoute || '{controller_generator_http_method',\r\n                                http_method: httpMethod || '{controller_generator_http_method',\r\n                                user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                                output_type: output_type,\r\n                                maestro_interface: ToInterface(maestroName),\r\n                                input_type: (compositeInput || modelNode) ? GetCodeName(compositeInput || modelNode) : '{controller_generator_missing_model}'\r\n                            })\r\n                            // let template = ft.template;\r\n                            // if (ft.template_keys) {\r\n                            //     for (var template_key in template_key) {\r\n                            //         for (var modifiers in TEMPLATE_KEY_MODIFIERS) {\r\n\r\n                            //         }\r\n                            //     }\r\n                            // }\r\n                            functions += jNL + tempFunction;\r\n                        }\r\n\r\n                    })\r\n                }\r\n                controllerTemplateClass = bindTemplate(controllerTemplateClass, {\r\n                    codeName: codeName,\r\n                    'codeName#alllower': codeName.toLowerCase(),\r\n                    user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                    user: userNode ? GetNodeProp(userNode, NodeProperties.CodeName) : '{controller_generator_code_name}',\r\n                    functions\r\n                });\r\n            });\r\n            result[GetNodeProp(controller, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(controller, NodeProperties.CodeName),\r\n                name: GetNodeProp(controller, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: controllerTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        'Microsoft.AspNetCore.Mvc'\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, GetRootGraph, NodesByType, NodePropertyTypes, NEW_LINK, GetCurrentGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, Usings, ValidationRules, NameSpace, NodeTypes, STANDARD_CONTROLLER_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nconst MODEL_TEMPLATE = './app/templates/models/model.tpl';\r\nconst MODEL_PROPERTY_TEMPLATE = './app/templates/models/model_property.tpl';\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst MODEL_ATTRIBUTE_TEMPLATE = './app/templates/models/model_attributes.tpl';\r\nexport default class ModelGenerator {\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let result = {};\r\n        models.map(model => {\r\n            var res = ModelGenerator.GenerateModel({\r\n                graph: graphRoot,\r\n                nodeId: model.id,\r\n                state\r\n            });\r\n            result[res.id] = res;\r\n        });\r\n\r\n        return result;\r\n    }\r\n    static GenerateModel(options) {\r\n        var { state, graph, nodeId } = options;\r\n        var key = nodeId;\r\n        var usings = [];\r\n        var templateSwapDictionary = {};\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n\r\n        var node = GraphMethods.GetNode(graph, nodeId);\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        templateSwapDictionary.model = GetNodeProp(node, NodeProperties.CodeName);\r\n        templateSwapDictionary.base_model = GetNodeProp(node, NodeProperties.IsUser) ? 'RedUser' : 'DBaseData';\r\n        templateSwapDictionary.account_enabling_func = '';\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            templateSwapDictionary.account_enabling_func = `\r\n            \r\n        public static User Create(RedExternalLoginViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }\r\n        public static User Create(RedRegisterViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }`\r\n        }\r\n        templateSwapDictionary.attributes = '';\r\n        var connectedProperties = GraphMethods.getNodesByLinkType(graph, {\r\n            id: node.id,\r\n            type: LinkType.PropertyLink,\r\n            direction: GraphMethods.SOURCE\r\n        });\r\n        let propertyTemplate = fs.readFileSync(MODEL_PROPERTY_TEMPLATE, 'utf8');\r\n        let attributeTemplate = fs.readFileSync(MODEL_ATTRIBUTE_TEMPLATE, 'utf8');\r\n        let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf8');\r\n\r\n        let validatorFunctions = GraphMethods.getNodesByLinkType(graph, {\r\n            id: nodeId,\r\n            type: LinkType.ValidatorModel,\r\n            direction: GraphMethods.TARGET\r\n        }).map(t => GetNodeProp(t, NodeProperties.CodeName)).map(t => ModelGenerator.tabs(1) + `[${t}]` + NEW_LINE).join('');\r\n        templateSwapDictionary.attributes = validatorFunctions;\r\n\r\n        let staticFunctions = [];\r\n        let properties = connectedProperties.filter(x => !GetNodeProp(x, NodeProperties.IsDefaultProperty)).map(propNode => {\r\n            var connectedAttributes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propNode.id,\r\n                type: LinkType.AttributeLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let property_instance_template = propertyTemplate;\r\n            let np = GetNodeProp(propNode, NodeProperties.UIAttributeType);\r\n            if (Usings[ProgrammingLanguages.CSHARP][np]) {\r\n                usings.push(\r\n                    ...Usings[ProgrammingLanguages.CSHARP][np],\r\n                    `${namespace}${NameSpace.Model}`,\r\n                    `${namespace}${NameSpace.Extensions}`)\r\n            }\r\n            let propType = NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][np];\r\n            if (GetNodeProp(propNode, NodeProperties.UIModelType)) {\r\n                propType = 'string';\r\n\r\n            }\r\n            \r\n            if (GetNodeProp(propNode, NodeProperties.UseModelAsType)) {\r\n                if (GetNodeProp(propNode, NodeProperties.IsReferenceList)) {\r\n                    propType = `IList<${propType}>`;\r\n                }\r\n            }\r\n\r\n            let propSwapDictionary = {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                property_type: propType,\r\n                property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                attributes: connectedAttributes.map(attr => {\r\n                    var options_lists = GraphMethods.getNodesByLinkType(graph, {\r\n                        id: attr.id,\r\n                        type: LinkType.Option,\r\n                        direction: GraphMethods.SOURCE\r\n                    });\r\n                    let options_list = [];\r\n                    options_lists.map(ol => {\r\n                        var ols = GraphMethods.getNodesByLinkType(graph, {\r\n                            id: ol.id,\r\n                            type: LinkType.OptionItem,\r\n                            direction: GraphMethods.SOURCE\r\n                        });\r\n                        ols.map(_ols => {\r\n                            if (GetNodeProp(_ols, NodeProperties.UseCustomUIOption)) {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionTypeCustom));\r\n                            }\r\n                            else {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionType));\r\n                            }\r\n                        })\r\n                    });\r\n                    options_list = options_list.unique().map(t => `UIAttribute.${t}`);\r\n\r\n                    var ReverseRules = {};\r\n                    Object.keys(ValidationRules).map(_key => {\r\n                        ReverseRules[ValidationRules[_key]] = _key;\r\n                    })\r\n                    var validations = [];\r\n                    if (GetNodeProp(attr, NodeProperties.UseUIValidations)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Validation,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            GraphMethods.getNodesByLinkType(graph, {\r\n                                id: vnode.id,\r\n                                type: LinkType.ValidationItem,\r\n                                direction: GraphMethods.SOURCE\r\n                            }).map(vnodeItem => {\r\n                                validations.push(`ValidationRules.${ReverseRules[GetNodeProp(vnodeItem, NodeProperties.UIValidationType)]}`)\r\n                            })\r\n                        });\r\n                    }\r\n                    let choice_name = null;\r\n                    if (GetNodeProp(attr, NodeProperties.UIExtensionList)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Extension,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            choice_name = GetNodeProp(vnode, NodeProperties.CodeName)\r\n                        });\r\n                    }\r\n\r\n                    let options = options_list && options_list.length ? bindTemplate(`Options = new string[] { {{options_list}} },`, {\r\n                        options_list: options_list.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let validation_rules = validations && validations.length ? bindTemplate(`ValidationRules = new string[] { {{validation_list}} },`, {\r\n                        validation_list: validations.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let choice_type_list = [];\r\n                    let choice_type = choice_name ? bindTemplate('ChoiceType = {{choice_type}}.Name,', {\r\n                        choice_type: choice_name\r\n                    }) : '';\r\n\r\n                    let attributeSwapDictionary = {\r\n                        property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                        property_type: GetNodeProp(propNode, NodeProperties.UseModelAsType) ? GetNodeProp(propNode, NodeProperties.UIModelType) : GetNodeProp(propNode, NodeProperties.UIAttributeType),\r\n                        ui_title: GetNodeProp(propNode, NodeProperties.UIName),\r\n                        singular: GetNodeProp(propNode, NodeProperties.UISingular) ? 'true' : 'false',\r\n                        options,\r\n                        choice_type,\r\n                        validation_rules\r\n                    }\r\n                    if (attr && attr.uiValidationType) {\r\n                    }\r\n                    return bindTemplate(attributeTemplate, attributeSwapDictionary);\r\n                }).filter(x => x).join('\\r\\n')\r\n            }\r\n\r\n            property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n            return property_instance_template;\r\n        });\r\n        if (GetNodeProp(node, NodeProperties.HasLogicalChildren) && GetNodeProp(node, NodeProperties.ManyToManyNexus)) {\r\n            (GetNodeProp(node, NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                let propNode = GraphMethods.GetNode(GetCurrentGraph(state), t);\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                };\r\n\r\n                properties.push(bindTemplate(propertyTemplate, propSwapDictionary));\r\n            });\r\n        }\r\n\r\n\r\n        let staticDic = {\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        };\r\n        staticFunctions.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            var agenNodes = NodesByType(state, NodeTypes.Model).filter(x => x.id !== node.id && GetNodeProp(x, NodeProperties.IsAgent));\r\n            agenNodes.map(agent => {\r\n\r\n                let property_instance_template = propertyTemplate;\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                }\r\n                property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n                properties.push(property_instance_template);\r\n            })\r\n        }\r\n        templateSwapDictionary.properties = properties.join('');\r\n        templateSwapDictionary.staticFunctions = staticFunctions.unique(x => x).join('\\n');\r\n        console.log(templateSwapDictionary.properties)\r\n        let modelTemplate = fs.readFileSync(MODEL_TEMPLATE, 'utf8');\r\n        modelTemplate = bindTemplate(modelTemplate, templateSwapDictionary);\r\n\r\n        var result = {\r\n            id: GetNodeProp(node, NodeProperties.CodeName),\r\n            name: GetNodeProp(node, NodeProperties.CodeName),\r\n            template: NamespaceGenerator.Generate({\r\n                template: modelTemplate,\r\n                usings: [...usings,\r\n                    `RedQuickCore.Identity`,\r\n                ...STANDARD_CONTROLLER_USING],\r\n                namespace,\r\n                space: NameSpace.Model\r\n            })\r\n        };\r\n        return result;\r\n    }\r\n    static tabs(c) {\r\n        let res = '';\r\n        var TAB = \"\\t\";\r\n        for (var i = 0; i < c; i++) {\r\n            res = res + TAB;\r\n        }\r\n        return res;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, MakeConstant, ConstantsDeclaration, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst EXTENSION_CLASS_TEMPLATE = './app/templates/extensions/extensions.tpl';\r\nconst EXTENSION_PROPERTY_TEMPLATE = './app/templates/extensions/extension_properties.tpl';\r\nconst EXTENSION_NEW_INSTANCE = './app/templates/extensions/extension_new_instance.tpl';\r\nconst EXTENSION_NEW_PROPERTY = './app/templates/extensions/extension_new_instance_properties.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_LIST = './app/templates/extensions/extension_new_instance_list.tpl';\r\nconst EXTENSION_NEW_INSTANCE_LIST_ADD = './app/templates/extensions/extension_new_instance_list_add.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY = './app/templates/extensions/extension_new_instance_dictionary.tpl';\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY_ADD = './app/templates/extensions/extension_new_instance_dictionary_add.tpl';\r\nconst EXTENSION_NEW_TEMPLATE_LIST = './app/templates/extensions/create_new_list_instance.tpl'\r\nconst PROPERTY_TABS = 6;\r\nexport default class ExtensionGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static GetExtensionNodeValues(extensionNode) {\r\n        var def = GetNodeProp(extensionNode, NodeProperties.UIExtensionDefinition);\r\n        if (def && def.config) {\r\n            if (def.config.isEnumeration) {\r\n                var extensionValues = def.config.list.map(t => {\r\n                    return def.config.keyField ? t[def.config.keyField] : t[Object.keys(t)[0]];\r\n                });\r\n                return extensionValues\r\n            }\r\n        }\r\n        throw new Error(\"unhandled - getting extensions nodes not as an enumeration\")\r\n    }\r\n    static CreateListInstanceTemplate(options) {\r\n        let { node, name } = options;\r\n        let _newTemplateList = fs.readFileSync(EXTENSION_NEW_TEMPLATE_LIST, 'utf8');\r\n        return bindTemplate(_newTemplateList, {\r\n            name,\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        });\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let extensions = NodesByType(state, NodeTypes.ExtensionType);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _extensionClassTemplate = fs.readFileSync(EXTENSION_CLASS_TEMPLATE, 'utf8');\r\n        let _extensionPropertyTemplate = fs.readFileSync(EXTENSION_PROPERTY_TEMPLATE, 'utf8');\r\n        let _extensionNewInstance = fs.readFileSync(EXTENSION_NEW_INSTANCE, 'utf8');\r\n        let _extensionNewProperty = fs.readFileSync(EXTENSION_NEW_PROPERTY, 'utf8');\r\n        let _extensionNewInstanceList = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST, 'utf8');\r\n        let _extensionNewInstanceListAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST_ADD, 'utf8');\r\n        let _extensionNewInstanceDictionary = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY, 'utf8');\r\n        let _extensionNewInstanceDictionaryAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY_ADD, 'utf8');\r\n        let result = {};\r\n        extensions.map(extension => {\r\n            let extensionClassTemplate = _extensionClassTemplate;\r\n            let properties = '';\r\n            let statics = '';\r\n            var constants = [];\r\n            let uiExtensionDefinition = GetNodeProp(extension, NodeProperties.UIExtensionDefinition);\r\n            if (uiExtensionDefinition) {\r\n                let modelName = GetNodeProp(extension, NodeProperties.CodeName);\r\n                let { config, definition } = uiExtensionDefinition;\r\n                if (definition) {\r\n                    definition = { ...definition, Value: 'string' };\r\n                    properties = Object.keys(definition).map(e => {\r\n                        var extensionPropertyTemplate = _extensionPropertyTemplate;\r\n\r\n                        extensionPropertyTemplate = bindTemplate(extensionPropertyTemplate, {\r\n                            name: modelName,\r\n                            property: e,\r\n                            type: definition[e]\r\n                        });\r\n                        return extensionPropertyTemplate;\r\n                    }).join('');\r\n                    if (config) {\r\n                        var instances = [];\r\n                        let instance = '';\r\n                        if (config.isEnumeration) {\r\n                            instances = config.list.map((item, item_index) => {\r\n                                item = { ...item, Value: (item_index + 1) }\r\n                                let temp;\r\n                                let props = Object.keys(item).map(key => {\r\n                                    let temp = _extensionNewProperty;\r\n                                    temp = bindTemplate(temp, {\r\n                                        property: key,\r\n                                        value: MakeConstant(item[key])\r\n                                    });\r\n                                    if (isNaN(item[key]))\r\n                                        constants.push({\r\n                                            name: MakeConstant(item[key]),\r\n                                            value: `\"${item[key]}\"`\r\n                                        })\r\n                                    return temp;\r\n                                }).join(`,${NL}`);\r\n                                temp = _extensionNewInstance;\r\n                                temp = bindTemplate(temp, {\r\n                                    properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                    model: modelName\r\n                                });\r\n                                return temp;\r\n                            })\r\n                        }\r\n                        else {\r\n                            let temp;\r\n                            let props = Object.keys(config.dictionary).map(key => {\r\n                                let temp = _extensionNewProperty;\r\n                                let item = { ...config.dictionary };\r\n                                temp = bindTemplate(temp, {\r\n                                    property: key,\r\n                                    value: MakeConstant(item[key])\r\n                                });\r\n                                if (isNaN(item[key]))\r\n                                    constants.push({\r\n                                        name: MakeConstant(item[key]),\r\n                                        value: `\"${item[key]}\"`\r\n                                    })\r\n                                return temp;\r\n                            }).join(`,${NL}`);\r\n                            temp = _extensionNewInstance;\r\n                            temp = bindTemplate(temp, {\r\n                                properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp;\r\n                            let temp_instance = _extensionNewInstanceDictionary;\r\n                            temp_instance = bindTemplate(temp_instance, {\r\n                                instance,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp_instance;\r\n                        }\r\n                        instances = instances.map(inst => {\r\n                            let temp = _extensionNewInstanceListAdd;\r\n\r\n                            temp = bindTemplate(temp, {\r\n                                instance: inst\r\n                            })\r\n                            return temp;\r\n                        });\r\n\r\n                        let templist = _extensionNewInstanceList;\r\n                        statics = bindTemplate(templist, {\r\n                            addings: instances.join(''),\r\n                            model: modelName\r\n                        }) + jNL + instance;\r\n                    }\r\n                }\r\n            }\r\n            extensionClassTemplate = bindTemplate(extensionClassTemplate, {\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                properties,\r\n                statics: statics,\r\n                constants: constants.unique(x => x).map(co => jNL + ExtensionGenerator.Tabs(3) + ConstantsDeclaration(co)).join('')\r\n            });\r\n\r\n            result[GetNodeProp(extension, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(extension, NodeProperties.CodeName),\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: extensionClassTemplate,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Extensions\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph, GetLinkProperty, GetCodeName, GetMethodPropNode, GetLinkChainItem, GetPermissionMethod, GetFunctionType, GetMethodNodeProp, GetNodeCode, GetC } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, MakeConstant, CreateStringList, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, ConditionTypes, ConditionTypeParameters, ConditionCases, FunctionTemplateKeys, FunctionTypes, INTERNAL_TEMPLATE_REQUIREMENTS } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport ExtensionGenerator from './extensiongenerator';\r\nimport { debug } from 'util';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst TEST_CASE = './app/templates/permissions/tests/test_case.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst TEST_CASE_PROPERTY = './app/templates/permissions/tests/test_case_property.tpl';\r\nconst PERMISSIONS_INTERFACE = './app/templates/permissions/permissions_interface.tpl';\r\nconst PERMISSIONS_CASE_EXTENSION = './app/templates/permissions/permissions_case.tpl';\r\nconst PERMISSIONS_CASE_ENUMERATION = './app/templates/permissions/permissions_case_enumeration.tpl';\r\nconst PERMISSIONS_CASE_INCLUDED_IN_LIST = './app/templates/permissions/permissions_case_included_in_list.tpl';\r\nconst PERMISSIONS_METHODS = './app/templates/permissions/permissions_method.tpl';\r\nconst PERMISSIONS_ARBITER_PROP = './app/templates/permissions/permissions_arbiter_prop.tpl';\r\nconst PERMISSIONS_IMPL = './app/templates/permissions/permissions_impl.tpl';\r\nconst PERMISSIONS_INTERFACE_METHODS = './app/templates/permissions/permissions_interface_methods.tpl';\r\nconst MATCH_TO_MANY_REFERENCE_PARAMETER = './app/templates/permissions/match-many-reference-parameter.tpl';\r\nconst MANY_TO_MANY_CONSTRUCTOR = './app/templates/permissions/tests/many_to_many_constructor.tpl';\r\nconst MATCH_REFERENCE = './app/templates/permissions/match-reference.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class PermissionGenerator {\r\n    static PermissionMatches(permission, agent, model) {\r\n        var methodNode = GetPermissionMethod(permission);\r\n        if (methodNode) {\r\n            let function_type = GetFunctionType(methodNode);\r\n            switch (function_type) {\r\n                //Add more cases as required.\r\n                case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        GetMethodNodeProp(methodNode, FunctionTemplateKeys.Parent) === model.id;\r\n                    return result;\r\n                default:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        (GetMethodNodeProp(methodNode, FunctionTemplateKeys.Model) === model.id ||\r\n                            GetMethodNodeProp(methodNode, FunctionTemplateKeys.CompositeInput) === model.id);\r\n                    return result;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    static createInstanceEnumerationListName(dNode, enu, method, type = 'Enums') {\r\n        return `list${type}${GetNodeProp(dNode, NodeProperties.CodeName) || dNode}${GetNodeProp(enu, NodeProperties.CodeName) || enu}${method}`\r\n    }\r\n\r\n    static _createConstantList(name, constants) {\r\n        let result = constants.map(ea => {\r\n            return `${name}.${MakeConstant(ea)}`\r\n        })\r\n        return result;\r\n    }\r\n    //Deprecated\r\n    static _createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_allowed;\r\n    }\r\n    static _getNotAllowedConstances(dpNode, enumerationNode, method) {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_notallowed = ext_disallowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_notallowed\r\n    }\r\n    static createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n        let constants_allowed = PermissionGenerator._createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n        // var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        // let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        // let constants_allowed = ext_allowed.map(ea => {\r\n        //     return `${enumerationName}.${MakeConstant(ea)}`\r\n        // })\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static createStringList(options) {\r\n        var { name, constants_allowed, enumerationName } = options;\r\n        constants_allowed = constants_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static _createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_allowed;\r\n\r\n    }\r\n    static _getNotAllowedExtectionConstances(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_disallowed = ext_disallowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_disallowed;\r\n\r\n    }\r\n    static createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extensionNode, method, 'Extensions');\r\n\r\n        let constants_allowed = PermissionGenerator._createExtensionInstanceList(dpNode, extensionNode, method, type);\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n\r\n    }\r\n    static IsRequestor(graph, model, permission) {\r\n        var requestorNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.RequestorPermissionLink\r\n        });\r\n        return !!requestorNodes.find(node => {\r\n            return node.id === model.id;\r\n        })\r\n    }\r\n    static GetExtensionNodeValues(graph, permission, method, agent, model) {\r\n        const value_string = 'value';\r\n        var dependingPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.PermissionPropertyDependency\r\n        });\r\n        let listOfCases = [];\r\n        dependingPermissionNodes.map(dpNode => {\r\n            let propertyNodeLinkedToByDependencyPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: dpNode.id,\r\n                type: LinkType.PermissionPropertyDependency\r\n            });\r\n\r\n            let propertyNodeLinkedToByDependencyPermissionNode = propertyNodeLinkedToByDependencyPermissionNodes[0];\r\n            if (!propertyNodeLinkedToByDependencyPermissionNode) {\r\n                return;\r\n            }\r\n            let propertyNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propertyNodeLinkedToByDependencyPermissionNode.id,\r\n                type: LinkType.PermissionDependencyProperty\r\n            });\r\n            let propertyNode = null;\r\n            if (propertyNodes.length === 1) {\r\n                propertyNode = propertyNodes[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            var agentLinkExists = GraphMethods.existsLinkBetween(graph, { target: propertyNode.id, source: agent.id, type: LinkType.PropertyLink });\r\n            let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.Enumeration));\r\n            let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.UIExtension));\r\n            let useEnumeration = GetNodeProp(dpNode, NodeProperties.UseEnumeration);\r\n            let useExtension = GetNodeProp(dpNode, NodeProperties.UseExtension);\r\n            let useIncludedInList = GetNodeProp(dpNode, NodeProperties.IncludedInList);\r\n\r\n            if (useIncludedInList) {\r\n                let permissionCaseIncludedInList = fs.readFileSync(PERMISSIONS_CASE_INCLUDED_IN_LIST, 'utf8');\r\n                var tempBindingValues = {\r\n                    method,\r\n                    // It currently happens to be that this is correct, but maybe in the future this needs to be more general.\r\n                    parent: `${GetNodeProp(agent, NodeProperties.AgentName) || 'agent'}`.toLowerCase(),\r\n                    parent_property: 'Id',\r\n                    ///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: ''\r\n                };\r\n                let temp = bindTemplate(permissionCaseIncludedInList, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n            if (useEnumeration) {\r\n                let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf8');\r\n                let enumInstance = PermissionGenerator.createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n                var tempBindingValues = {\r\n                    method,\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: enumInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n\r\n            }\r\n\r\n            if (useExtension) {\r\n                let definition = GetNodeProp(extentionNode, NodeProperties.UIExtensionDefinition);\r\n                let permissionCaseExtensionTemplate = fs.readFileSync(PERMISSIONS_CASE_EXTENSION, 'utf8');\r\n                let extensionInstance = PermissionGenerator.createExtensionInstanceList(dpNode, extentionNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extentionNode, method, 'Extensions');\r\n                let tempBindingValues = {\r\n                    method,\r\n                    value: `value`,\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension_propery_key: definition && definition.config ? definition.config.keyField : null,\r\n                    extension_value_property: 'Value',\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: extensionInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseExtensionTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static IsAppliedPermission(graph, permission, propertyNode) {\r\n        let appliedPermissionLinks = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.AppliedPermissionLink\r\n        });\r\n        //\r\n        if (appliedPermissionLinks && appliedPermissionLinks.length) {\r\n            var link = GraphMethods.GetLinkByNodes(graph, {\r\n                source: appliedPermissionLinks[0].id,\r\n                target: propertyNode.id\r\n            });\r\n            if (link) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static GetTestExtensionNodeValues(graph, permission, method, agent, model) {\r\n        return [];\r\n        const value_string = 'value';\r\n        var conditionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.Condition\r\n        });\r\n        let listOfCases = [];\r\n        conditionNodes.map(conditionNode => {\r\n\r\n            // let isAppliedPermission = PermissionGenerator.IsAppliedPermission(graph, permission, propertyNode);\r\n            // let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.Enumeration));\r\n            // let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.UIExtension));\r\n            let conditionType = GetNodeProp(conditionNode, NodeProperties.ConditionType);\r\n            switch (conditionType) {\r\n                case ConditionTypes.MatchReference:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchReference);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchReference].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchReference].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.MatchManyReferenceParameter:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchManyReferenceParameter);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.InEnumerable:\r\n\r\n                    var enumRef = GetNodeProp(conditionNode, NodeProperties.EnumerationReference);\r\n                    var enumerationNodeName = PermissionGenerator.getReferencedNodeName(graph, enumRef, NodeProperties.Enumeration);\r\n                    var constList = PermissionGenerator.getReference(enumRef, NodeProperties.AllowedEnumValues);\r\n                    var disAllowedConstList = PermissionGenerator.getReference(enumRef, NodeProperties.DisallowedEnumValues);\r\n                    let enumInstance = PermissionGenerator._createConstantList(enumerationNodeName, constList);\r\n                    let enumNotAllowed = PermissionGenerator._createConstantList(enumerationNodeName, disAllowedConstList);;\r\n                    let nameEnum = PermissionGenerator.createInstanceEnumerationListName(conditionNode, enumerationNodeName, method);\r\n                    let propertyEnum = PermissionGenerator.getReferencedNodeName(graph, enumRef, ConditionTypeParameters.Ref1Property);\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameEnum,\r\n                        ref: enumRef[ConditionTypeParameters.Ref1],\r\n                        property: propertyEnum,\r\n                        values: enumInstance,\r\n                        neg: enumNotAllowed,\r\n                        options: { ...enumRef }\r\n                    });\r\n\r\n                    break;\r\n                case ConditionTypes.InExtension:\r\n                    let definition = GetNodeProp(conditionNode, NodeProperties.UIExtensionDefinition);\r\n                    let extensionInstance = PermissionGenerator._createExtensionInstanceList(conditionNode, extentionNode, method);\r\n                    let extensionsNotAllowed = PermissionGenerator._getNotAllowedExtectionConstances(conditionNode, extentionNode, method);\r\n                    let nameExt = PermissionGenerator.createInstanceEnumerationListName(conditionNode, extentionNode, method, 'Extensions');\r\n                    let propertyExt = GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName);\r\n                    // definition && definition.config ? definition.config.keyField : null;\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameExt,\r\n                        property: propertyExt,\r\n                        values: extensionInstance,\r\n                        neg: extensionsNotAllowed,\r\n                        options: { ...definition }\r\n                    });\r\n                    break;\r\n                default:\r\n                    throw 'not handled [permissiongenerator]';\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static getReferencedNodeName(graph, enumRef, type) {\r\n        return GetNodeProp(PermissionGenerator.getReferencedValue(graph, enumRef, type), NodeProperties.CodeName);\r\n    }\r\n    static getReferencedValue(graph, enumRef, type) {\r\n        return GraphMethods.GetNode(graph, enumRef[type])\r\n    }\r\n    static getReference(enumRef, type) {\r\n        return enumRef[type]\r\n    }\r\n    static GenerateCases(state, permission, agent, model) {\r\n        var graph = GetCurrentGraph(state);\r\n        let _manyToManyMatchCondition = fs.readFileSync(MATCH_TO_MANY_REFERENCE_PARAMETER, 'utf8');\r\n        let _matchReferenceCondition = fs.readFileSync(MATCH_REFERENCE, 'utf8');\r\n        let result = {};\r\n        if (permission) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n                    let cases = [];\r\n                    let conditions = GraphMethods.GetLinkChain(state, {\r\n                        id: permission.id,\r\n                        links: [{\r\n                            type: LinkType.Condition,\r\n                            direction: GraphMethods.SOURCE\r\n                        }]\r\n                    });\r\n                    if (conditions && conditions.length) {\r\n                        conditions.map((t, index) => {\r\n                            var variable = 'variable_' + index;\r\n                            switch (GetNodeProp(t, NodeProperties.ConditionType)) {\r\n                                case ConditionTypes.MatchReference:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchReference);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.Ref1]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n                                                var ref1UseId = mmrp[ConditionTypeParameters.Ref1UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref1UseId]]);\r\n                                                var ref2UseId = mmrp[ConditionTypeParameters.Ref2UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref2UseId]]);\r\n\r\n                                                cases.push({\r\n                                                    template: bindTemplate(_matchReferenceCondition, {\r\n                                                        variable,\r\n                                                        value_property: ref1UseId ? 'Id' : GetNodeCode(graph, mmrp[ConditionTypeParameters.Ref1Property]),\r\n                                                        data_property: ref2UseId ? 'Id' : GetNodeCode(graph, mmrp[ConditionTypeParameters.Ref2Property]),\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    options: mmrp,\r\n                                                    methodProps,\r\n                                                    sameInstance: !!(methodProps[mmrp[ConditionTypeParameters.Ref1]] && methodProps[mmrp[ConditionTypeParameters.Ref2]]),\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.MatchManyReferenceParameter:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchManyReferenceParameter);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.RefManyToManyProperty]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n\r\n                                                let parms = [ConditionTypeParameters.Ref1, ConditionTypeParameters.Ref2];\r\n                                                var relationship = GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.RefManyToMany]]);\r\n                                                let use_parent = parms.find(p => mmrp[p] === INTERNAL_TEMPLATE_REQUIREMENTS.PARENT && methodProps.model && methodProps.model !== methodProps.parent);\r\n                                                cases.push({\r\n                                                    arbiter: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                    template: bindTemplate(_manyToManyMatchCondition, {\r\n                                                        variable,\r\n                                                        data: use_parent ? INTERNAL_TEMPLATE_REQUIREMENTS.PARENT : 'data',\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    methodProps,\r\n                                                    options: mmrp,\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.InEnumerable:\r\n                                    var ine = GetNodeProp(t, NodeProperties.EnumerationReference);\r\n                                    if (ine) {\r\n                                        let ref1 = ine[ConditionTypeParameters.Ref1];\r\n\r\n                                        let enumerationNode = GraphMethods.GetNode(graph, ine[NodeProperties.Enumeration]);\r\n                                        if (enumerationNode) {\r\n                                            let casename = GetNodeProp(t, NodeProperties.CodeName) || GetNodeProp(t, NodeProperties.NODEType);\r\n                                            let name = `${casename}_valid_items`;\r\n                                            let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf8');\r\n                                            let enumInstance = PermissionGenerator.createStringList({\r\n                                                name,\r\n                                                constants_allowed: ine[NodeProperties.AllowedEnumValues],\r\n                                                enumerationName: GetNodeProp(enumerationNode, NodeProperties.CodeName)\r\n                                            });\r\n                                            let propertyNodeLinkedToByDependencyPermissionNode = GraphMethods.GetNode(graph, ine[ConditionTypeParameters.Ref1Property])\r\n                                            var tempBindingValues = {\r\n                                                method,\r\n                                                value: `${ref1 !== 'model' ? 'value' : 'data'}`.toLowerCase(),\r\n                                                value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                                                model: GetNodeProp(model, NodeProperties.CodeName) || GetNodeProp(model, NodeProperties.NODEType),\r\n                                                casename,\r\n                                                'allowed-values-list': name,\r\n                                                instance_list: enumInstance\r\n                                            };\r\n                                            let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                                            cases.push({\r\n                                                variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                                                template: temp\r\n                                            });\r\n\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        })\r\n                    }\r\n                    result[method] = cases;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static EnumerateCases(cases) {\r\n        let vects = cases.map(x => {\r\n            return (x && x.values ? x.values.length : 0) + (x && x.neg ? x.neg.length : 0);\r\n        });\r\n        return enumerate(vects);\r\n    }\r\n    static EnumeratePermissionCases(graph, permission, method, agent, model) {\r\n        if (!permission || !method || !agent || !model) {\r\n            return [];\r\n        }\r\n\r\n        let cases = PermissionGenerator.GetTestExtensionNodeValues(graph, permission, method, agent, model);\r\n        let enums = PermissionGenerator.EnumerateCases(cases);\r\n        let testCaseProperty = fs.readFileSync(TEST_CASE_PROPERTY, 'utf8');\r\n        let methodNode = GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        });\r\n\r\n        let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n\r\n        let res = enums.map((_enum) => {\r\n            let props = [];\r\n            let properties = [];\r\n            let setup_cases = [];\r\n            let ispositive = true;\r\n            _enum.map((which, index) => {\r\n                let _case = cases[index];\r\n                ispositive = ispositive && _case.values.length > which;\r\n                let is_model_parameter;\r\n                switch (_case.type) {\r\n                    case ConditionTypes.MatchManyReferenceParameter:\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            methodProps &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref1]] &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref2]] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property]\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `\"wrong\"`\r\n                                        });\r\n                                        props.push({\r\n                                            props: ispositive ? '' : template,\r\n                                            type: _case.type\r\n                                        });\r\n                                        properties.push({\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `${ref2Model}.Id`\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ConditionTypes.MatchReference:\r\n\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            let mmrp = _case.options;\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property];\r\n                                    ref1Property = GetCodeName(ref1Property);\r\n                                }\r\n                                let ref2Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref2UseId]) {\r\n                                    ref2Property = _case.options[ConditionTypeParameters.Ref2Property];\r\n                                    ref2Property = GetCodeName(ref2Property);\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n                                let propType2 = _case.options[ConditionTypeParameters.Ref2];\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: !ispositive ? '\"wrong\"' : `${ref2Model}.${ref2Property}`\r\n                                        });\r\n                                        setup_cases.push(template);\r\n                                        props.push({\r\n                                            setup_cases: ['asdf'],\r\n                                            props: template,\r\n                                            sameInstance: !!(methodProps[mmrp[ConditionTypeParameters.Ref1]] && methodProps[mmrp[ConditionTypeParameters.Ref2]]),\r\n                                            type: ConditionTypes.MatchReference\r\n                                        });\r\n                                        properties.push({\r\n                                            props: {\r\n                                                property: `.${ref1Property}`,\r\n                                                value: `${ref2Model}.${ref2Property}`\r\n                                            },\r\n                                            type: propType\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        is_model_parameter = _case.ref === 'model';\r\n                        let value = _case.values.length <= which ? _case.neg[which - _case.values.length] : _case.values[which];\r\n                        let temp = bindTemplate(testCaseProperty, {\r\n                            model: is_model_parameter ? 'model' : 'agent', // THis may need to expand\r\n                            property: `.${_case.property}`,\r\n                            value: value\r\n                        });\r\n                        if (is_model_parameter) {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Model });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Model\r\n                            })\r\n                        }\r\n                        else {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Agent });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Agent\r\n                            })\r\n                        }\r\n                        break;\r\n                }\r\n\r\n            });\r\n            return {\r\n                setup_cases: setup_cases,\r\n                props: [\r\n                    ...props\r\n                ],\r\n                properties: [\r\n                    ...properties\r\n                ],\r\n                resultSuccess: ispositive\r\n            }\r\n        });\r\n\r\n        return res;\r\n    }\r\n    static GenerateTestCases(state, permission, agent, model, pindex) {\r\n        var graph = GetCurrentGraph(state);\r\n        let parent = null;\r\n        let manyToMany = null;\r\n        let many_to_many_register = '';\r\n        let many_to_many_constructor = '';\r\n        let testCase = fs.readFileSync(TEST_CASE, 'utf8');\r\n        let result = [];\r\n        let methodNode = permission ? GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        }) : null;\r\n        parent = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.Parent);\r\n        manyToMany = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.ManyToManyModel);\r\n\r\n        if (GetCodeName(parent)) {\r\n            many_to_many_register = fs.readFileSync('./app/templates/permissions/tests/many_to_many_register.tpl', 'utf8');\r\n\r\n            switch (GetNodeProp(methodNode, NodeProperties.FunctionType)) {\r\n                case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                    testCase = fs.readFileSync('./app/templates/permissions/tests/Get_ManyToMany_Agent_Value__IListChild.tpl', 'utf8');\r\n                    if (model) {\r\n                        many_to_many_register = bindTemplate(many_to_many_register, {\r\n                            ref1type: GetCodeName(parent),\r\n                            ref1: FunctionTemplateKeys.Parent,\r\n                            ref2type: GetCodeName(model),\r\n                            ref2: FunctionTemplateKeys.Model,\r\n                        });\r\n                    }\r\n                    else {\r\n                        many_to_many_register = '';\r\n                    }\r\n                    break;\r\n                case FunctionTypes.Create_Parent$Child_Agent_Value__IListChild:\r\n                    testCase = fs.readFileSync('./app/templates/permissions/tests/Create_Parent$Child_Agent_Value__IListChild.tpl', 'utf8');\r\n                    if (agent) {\r\n                        many_to_many_register = bindTemplate(many_to_many_register, {\r\n                            ref1type: GetCodeName(parent),\r\n                            ref1: FunctionTemplateKeys.Parent,\r\n                            ref2type: GetCodeName(agent),\r\n                            ref2: FunctionTemplateKeys.Agent,\r\n                        })\r\n                    }\r\n                    else {\r\n                        many_to_many_register = '';\r\n                    }\r\n                    break;\r\n                case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                    testCase = fs.readFileSync('./app/templates/permissions/tests/Get_Parent$Child_Agent_Value__IListChild.tpl', 'utf8');\r\n                    if (agent) {\r\n                        many_to_many_register = bindTemplate(many_to_many_register, {\r\n                            ref1type: GetCodeName(parent),\r\n                            ref1: FunctionTemplateKeys.Parent,\r\n                            ref2type: GetCodeName(agent),\r\n                            ref2: FunctionTemplateKeys.Agent,\r\n                        })\r\n                    }\r\n                    else {\r\n                        many_to_many_register = '';\r\n                    }\r\n                    break;\r\n                default:\r\n                    many_to_many_register = '';\r\n                    break;\r\n            }\r\n        }\r\n        switch (GetNodeProp(methodNode, NodeProperties.FunctionType)) {\r\n            case FunctionTypes.Get_Object_Agent_Value__Object:\r\n                many_to_many_register = fs.readFileSync('./app/templates/permissions/tests/many_to_many_register.tpl', 'utf8');\r\n                if (model) {\r\n                    many_to_many_register = bindTemplate(many_to_many_register, {\r\n                        ref1type: GetCodeName(manyToMany.properties.logicalChildrenTypes[0]),\r\n                        ref1: FunctionTemplateKeys.Agent,\r\n                        ref2type: GetCodeName(manyToMany.properties.logicalChildrenTypes[1]),\r\n                        ref2: FunctionTemplateKeys.Model,\r\n                    });\r\n\r\n                    many_to_many_constructor = bindTemplate(fs.readFileSync(MANY_TO_MANY_CONSTRUCTOR, 'utf8'), {\r\n                        many_to_many: GetCodeName(manyToMany)\r\n                    });\r\n                }\r\n                else {\r\n                    many_to_many_register = '';\r\n                }\r\n                break;\r\n        }\r\n        if (!manyToMany) {\r\n            many_to_many_register = '';\r\n        }\r\n        if (methodNode) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permission && permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n\r\n\r\n                    let modelCodeName = GetNodeProp(model, NodeProperties.CodeName);\r\n                    var permissionNode = permission;\r\n                    let permissionValueType = GetNodeProp(permissionNode, NodeProperties.PermissionValueType)\r\n\r\n                    let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n                    if (permissionValueType && methodProps) {\r\n                        modelCodeName = GetCodeName(methodProps[permissionValueType]);\r\n                    }\r\n\r\n\r\n                    let res = PermissionGenerator.EnumeratePermissionCases(graph, permission, method, agent, model);\r\n\r\n                    res = res.map((t, testIndex) => {\r\n                        var { props, resultSuccess, templates = {}, setup_cases = [] } = t;\r\n\r\n                        return bindTemplate(bindTemplate(testCase, {\r\n                            many_to_many_register,\r\n                        }), {\r\n                                setup_cases: (setup_cases).join(NEW_LINE),\r\n                                set_agent_properties: props.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).join(NEW_LINE),\r\n                                set_model_properties: props.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).join(NEW_LINE),\r\n                                set_parent_properties: props.filter(x => x.type === FunctionTemplateKeys.Parent).map(t => t.props).join(NEW_LINE),\r\n                                set_match_reference_properties: props.filter(x => x.type === ConditionTypes.MatchReference).map(t => t.props).join(NEW_LINE),\r\n                                set_match_many_reference_properties: props.filter(x => x.type === ConditionTypes.MatchManyReferenceParameter).map(t => t.props).join(NEW_LINE),\r\n                                agent_type: GetCodeName(agent),\r\n                                parent_setup: '',\r\n                                many_to_many_constructor,\r\n                                model: modelCodeName,\r\n                                many_to_many: GetCodeName(manyToMany),\r\n                                many_to_many_arbiter_constructor: manyToMany ? bindTemplate(`var manyToManyArbiter = RedStrapper.Resolve<IRedArbiter<{{many_to_many}}>>();`, {\r\n                                    many_to_many: GetCodeName(manyToMany)\r\n                                }) : '',\r\n                                parent: GetCodeName(parent),\r\n                                parent_agent_are_the_same: resultSuccess && parent && agent && parent.id && agent.id && parent.id === agent.id ? `parent = agent;` : '',\r\n                                method,\r\n                                test: `_${GetCodeName(agent)}_${GetCodeName(model)}_${method}_${testIndex}_case${pindex}`,\r\n                                result: resultSuccess ? 'true' : 'false',\r\n                                function_name: GetCodeName(permission) + method,\r\n                                ...templates\r\n                            });\r\n                    })\r\n                    result = [...result, ...res];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let permissions = NodesByType(state, NodeTypes.Permission);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testTemplate = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let _permissionInterface = fs.readFileSync(PERMISSIONS_INTERFACE, 'utf8');\r\n        let _permissionImplementation = fs.readFileSync(PERMISSIONS_IMPL, 'utf8');\r\n        let _permissionInterfaceMethods = fs.readFileSync(PERMISSIONS_INTERFACE_METHODS, 'utf8');\r\n        let _permissionMethods = fs.readFileSync(PERMISSIONS_METHODS, 'utf8');\r\n        let _permissionArbiters = fs.readFileSync(PERMISSIONS_ARBITER_PROP, 'utf8');\r\n        let result = {};\r\n\r\n        agents.map(agent => {\r\n            let streamProcessChangeClassExtension = _permissionImplementation;\r\n            let permissionInterface = _permissionInterface;\r\n            let testPermission = _testTemplate;\r\n            let methodImplementations = [];\r\n            let methodInterfaces = [];\r\n            let testMethodPermisionCases = [];\r\n            let arbiters = [];\r\n            models.map(model => {\r\n                let matchingPermissionNodes = permissions.filter(permission => PermissionGenerator.PermissionMatches(permission, agent, model));\r\n                if (!matchingPermissionNodes || !matchingPermissionNodes.length) {\r\n                    return;\r\n                }\r\n                let permissionCases = [];\r\n                let permissionCodeNames = [];\r\n                matchingPermissionNodes.map((matchingPermissionNode, pindex) => {\r\n                    if (matchingPermissionNode) {\r\n                        permissionCodeNames.push(GetNodeProp(matchingPermissionNode, NodeProperties.CodeName));\r\n                        let temp = PermissionGenerator.GenerateCases(state, matchingPermissionNode, agent, model);\r\n                        let testTemp = PermissionGenerator.GenerateTestCases(state, matchingPermissionNode, agent, model, pindex);\r\n                        permissionCases.push(temp);\r\n                        testMethodPermisionCases.push(...testTemp);\r\n                    }\r\n                })\r\n                permissionCases.map((perms, index) => {\r\n                    for (var permKey in perms) {\r\n                        let cases = perms[permKey];\r\n                        let parent_setup = '';\r\n                        let parent_type = '';\r\n                        cases.map(t => {\r\n                            if (t && t.arbiter) {\r\n                                arbiters.push(t);\r\n                            }\r\n                            if (t && t.options && t.methodProps) {\r\n                                let parms = [ConditionTypeParameters.Ref1, ConditionTypeParameters.Ref2];\r\n                                parms.map(parm => {\r\n                                    if (t.methodProps[t.options[parm]]) {\r\n                                        let arbiter = GetCodeName(t.methodProps[t.options[parm]]);\r\n                                        if (t.options[parm] === INTERNAL_TEMPLATE_REQUIREMENTS.PARENT) {\r\n                                            if (t.methodProps.parent !== model.id)\r\n                                                parent_type = arbiter;\r\n                                        }\r\n                                        if (arbiter) {\r\n                                            arbiters.push({\r\n                                                arbiter\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        parent_setup = parent_type ? `var parent = data.${parent_type} != null ? (await arbiter${parent_type}.Get<${parent_type}>(data.${parent_type})) : null;` : 'var parent = data;';\r\n                        let modelCodeName = GetNodeProp(model, NodeProperties.CodeName);\r\n                        var permissionNode = matchingPermissionNodes[index];\r\n                        let permissionValueType = GetNodeProp(permissionNode, NodeProperties.PermissionValueType)\r\n                        var methodNode = permissionNode ? GetLinkChainItem({\r\n                            id: permissionNode.id,\r\n                            links: [{\r\n                                direction: GraphMethods.TARGET,\r\n                                type: LinkType.FunctionOperator\r\n                            }]\r\n                        }) : null;\r\n\r\n                        let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n                        if (permissionValueType && methodProps) {\r\n                            modelCodeName = GetCodeName(methodProps[permissionValueType]);\r\n                        }\r\n                        let permissionMethods = _permissionMethods;\r\n                        let permissionInterfaceMethods = _permissionInterfaceMethods;\r\n                        permissionMethods = bindTemplate(permissionMethods, {\r\n                            model: modelCodeName,\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            agent: `value`,\r\n                            parent_setup,\r\n                            method: permKey,\r\n                            cases: cases.map(c => jNL + Tabs(4) + c.template).join(''),\r\n                            case_result: jNL + Tabs(4) + `result = ${cases.map(c => c.variable).join(' && ')};`\r\n                        });\r\n                        permissionInterfaceMethods = bindTemplate(permissionInterfaceMethods, {\r\n                            model: modelCodeName,\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: `value`,\r\n                            method: permKey\r\n                        });\r\n                        methodInterfaces.push(permissionInterfaceMethods);\r\n                        methodImplementations.push(permissionMethods);\r\n\r\n                    }\r\n                });\r\n            }).join(jNL);\r\n            arbiters = arbiters.map(t => t.arbiter).unique(x => x).map(t => {\r\n                return bindTemplate(_permissionArbiters, {\r\n                    arbiter: t\r\n                })\r\n            }).join(jNL)\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                arbiters,\r\n                methods: methodImplementations.unique().join(jNL + jNL)\r\n            });\r\n            permissionInterface = bindTemplate(permissionInterface, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                methods: methodInterfaces.unique().join(jNL + jNL)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                tname: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}Tests`,\r\n                iname: `IPermissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        arbiters && arbiters.length ? `${namespace}${NameSpace.Controllers}` : null,\r\n                        `${namespace}${NameSpace.Constants}`].filter(x => x),\r\n                    namespace,\r\n                    space: NameSpace.Permissions\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: permissionInterface,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: bindTemplate(testPermission, {\r\n                        tests: testMethodPermisionCases.join(NEW_LINE),\r\n                        name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                    }),\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst VALIDATION_CLASS = './app/templates/validation/validation_class.tpl';\r\nconst VALIDATION_TEST = './app/templates/validation/tests/validation.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst VALIDATION_PROPERTY = './app/templates/validation/validation_property.tpl';\r\n\r\nexport default class ValidationRuleGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => {\r\n            return Object.keys(x.values.cases).length\r\n        });\r\n\r\n        var enumeration = ValidationRuleGenerator.enumerate(vects);\r\n        return enumeration;\r\n    }\r\n    static enumerate(vects, j = 0) {\r\n        var results = [];\r\n\r\n        if (j < vects.length)\r\n            for (var i = 0; i < vects[j]; i++) {\r\n                var rest = ValidationRuleGenerator.enumerate(vects, j + 1);\r\n                var temp = [i];\r\n                if (rest.length) {\r\n                    rest.map(r => {\r\n                        results.push([...temp, ...r])\r\n                    });\r\n                }\r\n                else {\r\n                    results.push(temp);\r\n                }\r\n            }\r\n        return results;\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static GenerateValidationCases(graph, validatorNode) {\r\n\r\n        var model = GetNodeProp(validatorNode, NodeProperties.ValidatorModel);\r\n        var validator = GetNodeProp(validatorNode, NodeProperties.Validator);\r\n        let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n        var validation_test_vectors = [];\r\n        Object.keys(validatorProperties || {}).map(property => {\r\n            let propertyNode = GraphMethods.GetNode(graph, property);\r\n            let validatorPs = validatorProperties[property];\r\n\r\n            return Object.keys(validatorPs.validators).map(vld => {\r\n                let validators = validatorPs.validators[vld];\r\n                let node = GraphMethods.GetNode(graph, validators.node);\r\n                let attribute_type_arguments = '';\r\n                if (node) {\r\n                    switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                        case NodeTypes.ExtensionType:\r\n                            if (validators && validators.extension) {\r\n                                let temp = { '_ _': '\"__ _ __\"' };\r\n                                attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                    if (validators.extension[ext]) {\r\n                                        temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                        return temp[`$${ext}`];\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: temp, invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                            }\r\n                            break;\r\n                        case NodeTypes.Enumeration:\r\n                            if (validators && validators.enumeration) {\r\n                                let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                    if (validators.enumeration[ext]) {\r\n                                        return `${enumName}.${MakeConstant(ext)}`\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                if (ValidationCases[validators.type]) {\r\n                    validation_test_vectors.push({\r\n                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                        values: ValidationCases[validators.type]\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n        let testProps = vectors.map((vector, index) => {\r\n            let successCase = true;\r\n            let propertyInformation = [];\r\n            let properylines = vector.map((v, vindex) => {\r\n                var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                if (typeof (projected_value) === 'function') {\r\n                    projected_value = projected_value();\r\n                }\r\n                else {\r\n                    if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                        _case = '$$';\r\n                    }\r\n                }\r\n                successCase = successCase && (_case || [false])[0] === '$';\r\n                let propline = ValidationRuleGenerator.Tabs(3) + `{{model}}.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                propertyInformation.push({\r\n                    set_properties: propline,\r\n                    property: validation_test_vectors[vindex].property,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                })\r\n                return propline;\r\n            }).join(NEW_LINE);\r\n            let temp = {\r\n                resultSuccess: successCase,\r\n                propertyInformation,\r\n                set_properties: properylines,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            };\r\n\r\n            return temp;\r\n        });\r\n        return testProps;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let nodes = NodesByType(state, NodeTypes.Validator);\r\n        let _validation_class = fs.readFileSync(VALIDATION_CLASS, 'utf8');\r\n        let _validation_property = fs.readFileSync(VALIDATION_PROPERTY, 'utf8');\r\n        let _validation_test = fs.readFileSync(VALIDATION_TEST, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        nodes.map(node => {\r\n            var agent = GetNodeProp(node, NodeProperties.ValidatorAgent);\r\n            var model = GetNodeProp(node, NodeProperties.ValidatorModel);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var funct = GetNodeProp(node, NodeProperties.ValidatorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var validator = GetNodeProp(node, NodeProperties.Validator);\r\n            let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n            var validation_test_vectors = [];\r\n            let propertyValidationStatements = Object.keys(validatorProperties).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = validatorProperties[property];\r\n\r\n                return Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"__ _ __\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`$${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp, invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                if (validators && validators.enumeration) {\r\n                                    let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                    let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                    attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                        if (validators.enumeration[ext]) {\r\n                                            return `${enumName}.${MakeConstant(ext)}`\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    var templateRes = bindTemplate(_validation_property, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`\r\n                    });\r\n                    return templateRes + NEW_LINE\r\n                }).join('');\r\n            }).join('');\r\n            var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n            let testProps = vectors.map((vector, index) => {\r\n                let validation_test = _validation_test;\r\n                let successCase = true;\r\n                let properylines = vector.map((v, vindex) => {\r\n                    var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                    var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                    if (typeof (projected_value) === 'function') {\r\n                        projected_value = projected_value();\r\n                    }\r\n                    else {\r\n                        if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                            _case = '$$';\r\n                        }\r\n                    }\r\n                    successCase = successCase && (_case || [false])[0] === '$';\r\n                    return ValidationRuleGenerator.Tabs(3) + `model.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                }).join(NEW_LINE);\r\n                let temp = bindTemplate(_validation_test, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    test_name: `Test${index}`,\r\n                    attribute_parameters: \"\",\r\n                    expected_value: successCase ? 'true' : 'false',\r\n                    set_properties: properylines,\r\n                    attribute_type: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                    properties: propertyValidationStatements,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                });\r\n\r\n                return temp;\r\n            });\r\n\r\n            var templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n            var testTemplate = bindTemplate(_testClass, {\r\n                name: GetNodeProp(node, NodeProperties.CodeName),\r\n                tests: testProps.join(NEW_LINE)\r\n            })\r\n\r\n            templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}AttributeTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Validations\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Validations}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                }),\r\n            };\r\n        });\r\n\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes, GetCodeName, GetMethodProps, IsAgent, GetGraphNode, GetValidationsSortedByAgent } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING, NEW_LINE, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys, MethodFunctions, AFTER_EFFECTS } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE = './app/templates/stream_process/stream_process_orchestration.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_ROOT_TEMPLATE = './app/templates/stream_process/stream_process_orchestration_root.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE = './app/templates/stream_process/stream_process_orchestration_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS = './app/templates/stream_process/stream_process_orchestration_agenttype_methods.tpl';\r\nconst STREAM_PROCESS_AGENT_CRUD_UPDATE = './app/templates/stream_process/agent_methods/update.tpl';\r\nconst STREAM_PROCESS_AGENT_CRUD_CREATE = './app/templates/stream_process/agent_methods/create.tpl';\r\nconst STREAM_PROCESS_AGENT_CRUD_DELETE = './app/templates/stream_process/agent_methods/delete.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE = './app/templates/stream_process/stream_process_orchestration_agenttype_methods_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES = './app/templates/stream_process/stream_process_orchestration_selected_staged_changes.tpl';\r\nconst STREAM_METHOD_TESTS = './app/templates/stream_process/tests/stream_process_execution_tests.tpl';\r\nconst CREATE_MODEL_TESTS = './app/templates/stream_process/tests/create_model_tests.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nexport default class StreamProcessOrchestrationGenerator {\r\n    static GenerateStaticMethods(models) {\r\n\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES, 'utf8');\r\n        let staticMethods = models.map(model => {\r\n            let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n            let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n            let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                model: modelCode,\r\n                [`model#allupper`]: modelCode.toUpperCase(),\r\n                [`model#lower`]: modelCode.toLowerCase()\r\n            });\r\n\r\n            return res + jNL\r\n        });\r\n\r\n        return staticMethods;\r\n    }\r\n    static GenerateAgentMethods(state, agent) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let methods = NodesByType(state, NodeTypes.Method);\r\n        let agents = [agent] // models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS, 'utf8');\r\n        models = models.filter(model => {\r\n            return methods.find(method => {\r\n                var props = GetMethodProps(method);\r\n                return props[FunctionTemplateKeys.Agent] === agent.id &&\r\n                    (props[FunctionTemplateKeys.Model] === model.id ||\r\n                        props[FunctionTemplateKeys.CompositeInput] === model.id);\r\n            })\r\n        });\r\n        let result = [];\r\n        let modelexecution = [];\r\n        let executors = NodesByType(state, NodeTypes.Executor).filter(x => GetNodeProp(x, NodeProperties.ExecutorAgent) === agent.id);\r\n\r\n        agents.map(agent => {\r\n            models.filter(model => {\r\n                return executors.find(executor => GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id);\r\n            }).map(model => {\r\n                modelexecution.push(Tabs(4) + `await Process${GetNodeProp(model, NodeProperties.CodeName)}ChangesBy${GetCodeName(agent)}();` + jNL);\r\n            })\r\n        });\r\n        result.push(`       public async Task ProcessStagedChanges(Distribution distribution = null) {\r\n${modelexecution.join('')}\r\n        }\r\n`)\r\n        // agents.map(agent => {\r\n        executors.map(executor => {\r\n            let agent = GetGraphNode(GetNodeProp(executor, NodeProperties.ExecutorAgent));\r\n            let model = GetGraphNode(GetNodeProp(executor, NodeProperties.ExecutorModel));\r\n            let model_output = GetGraphNode(GetNodeProp(executor, NodeProperties.ExecutorModelOutput));\r\n            let methodNode = GraphMethods.GetMethodNode(state, executor.id, LinkType.ExecutorFunction, GraphMethods.SOURCE);\r\n            let methodProps = GetMethodProps(methodNode);\r\n            let afterEffectMethods = GraphMethods.GetLinkChain(state, {\r\n                id: methodNode.id,\r\n                links: [{\r\n                    type: LinkType.AfterMethod,\r\n                    direction: GraphMethods.SOURCE\r\n                }]\r\n            });\r\n            let ae_calls = [];\r\n            let ae_functions = [];\r\n            afterEffectMethods.map(afterEffectMethod => {\r\n                var ae_type = GetNodeProp(afterEffectMethod, NodeProperties.AfterMethod);\r\n                var ae_setup = GetNodeProp(afterEffectMethod, NodeProperties.AfterMethodSetup);\r\n                if (AFTER_EFFECTS[ae_type] && ae_setup && ae_setup[ae_type]) {\r\n                    let { templateKeys, template_call, template } = AFTER_EFFECTS[ae_type];\r\n                    let templateString = fs.readFileSync(template, 'utf8');\r\n                    Object.keys(templateKeys).map(key => {\r\n                        if (ae_setup[ae_type][key]) {\r\n                            let key_val = ae_setup[ae_type][key] || '';\r\n                            var name = key_val.startsWith('#') ? key_val.split('#').join('') : GetCodeName((methodProps[key_val] || key_val)) || key_val;\r\n                            templateString = bindTemplate(templateString, {\r\n                                [key]: name,\r\n                                [`${key}#lower`]: `${name}`.toLowerCase()\r\n                            });\r\n                            template_call = bindTemplate(template_call, {\r\n                                [key]: name,\r\n                                [`${key}#lower`]: `${name}`.toLowerCase()\r\n                            })\r\n                        }\r\n                    })\r\n                    templateString = bindTemplate(templateString, {\r\n                        function_name: GetCodeName(afterEffectMethod)\r\n                    });\r\n                    template_call = bindTemplate(template_call, {\r\n                        function_name: GetCodeName(afterEffectMethod)\r\n                    });\r\n                    ae_calls.push(template_call);\r\n                    ae_functions.push(templateString);\r\n                }\r\n            });\r\n            let update_method = '';\r\n            let update_call = '';\r\n            let delete_method = '';\r\n            let delete_call = '';\r\n            let create_method = '';\r\n            let create_call = '';\r\n\r\n            let bind_params = {\r\n                'model_output#lower': `${GetCodeName(model_output, NodeProperties.CodeName)}`.toLowerCase(),\r\n                model: GetCodeName(model, NodeProperties.CodeName),\r\n                'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase(),\r\n                update_method,\r\n                create_method,\r\n                delete_method,\r\n                create_call,\r\n                update_call,\r\n                delete_call\r\n            };\r\n            ae_calls = ae_calls.unique().join(NEW_LINE)\r\n            if (GetNodeProp(executor, NodeProperties.ExecutorFunctionType) === Methods.Update &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorAgent) === agent.id &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id) {\r\n                update_method = bindTemplate(fs.readFileSync(STREAM_PROCESS_AGENT_CRUD_UPDATE, 'utf8'), {\r\n                    ...bind_params,\r\n                    ae_calls\r\n                });\r\n                update_call = `case Methods.Update:\r\n                    await Update(change);\r\n                    break;`\r\n            }\r\n            else if (GetNodeProp(executor, NodeProperties.ExecutorFunctionType) === Methods.Create &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorAgent) === agent.id &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id) {\r\n                create_method = bindTemplate(fs.readFileSync(STREAM_PROCESS_AGENT_CRUD_CREATE, 'utf8'), {\r\n                    ...bind_params,\r\n                    ae_calls\r\n                });\r\n                create_call = `case Methods.Create:\r\n                    await Create(change);\r\n                    break;`\r\n            }\r\n            else if (GetNodeProp(executor, NodeProperties.ExecutorFunctionType) === Methods.Delete &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorAgent) === agent.id &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id) {\r\n                delete_method = bindTemplate(fs.readFileSync(STREAM_PROCESS_AGENT_CRUD_DELETE, 'utf8'), {\r\n                    ...bind_params,\r\n                    ae_calls\r\n                });\r\n                delete_call = `\r\n                    case Methods.Delete:\r\n                        await Delete(change);\r\n                        break;`;\r\n            }\r\n\r\n            var res = bindTemplate(_streamAgentMethods, {\r\n                ...bind_params,\r\n                update_method,\r\n                update_call,\r\n                create_method,\r\n                create_call,\r\n                delete_method,\r\n                delete_call,\r\n                ae_functions: ae_functions.unique().join('')\r\n            })\r\n            result.push(res);\r\n            //   });\r\n        });\r\n\r\n        return result.join('')\r\n    }\r\n    static GenerateAgentInterfaceMethods(state, agent) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let methods = NodesByType(state, NodeTypes.Method);\r\n        let agents = [agent];//models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE, 'utf8');\r\n        models = models.filter(model => {\r\n            return methods.find(method => {\r\n                var props = GetMethodProps(method);\r\n                return props[FunctionTemplateKeys.Agent] === agent.id &&\r\n                    (props[FunctionTemplateKeys.Model] === model.id ||\r\n                        props[FunctionTemplateKeys.CompositeInput] === model.id);\r\n            })\r\n        });\r\n        let result = [];\r\n        let executors = NodesByType(state, NodeTypes.Executor).filter(x => GetNodeProp(x, NodeProperties.ExecutorAgent) === agent.id);\r\n        let methods_interface = [];\r\n        // agents.map(agent => {    \r\n        executors.map(_ex => {\r\n            let agent = GetGraphNode(GetNodeProp(_ex, NodeProperties.ExecutorAgent));\r\n            let model = GetGraphNode(GetNodeProp(_ex, NodeProperties.ExecutorModel));\r\n            let model_output = GetGraphNode(GetNodeProp(_ex, NodeProperties.ExecutorModelOutput));\r\n\r\n            if (GetNodeProp(_ex, NodeProperties.ExecutorFunctionType)) {\r\n                methods_interface.push(bindTemplate(`\r\n                Task {{method}}({{model}}ChangeBy{{agent_type}} change);\r\n`, {\r\n                        method: GetNodeProp(_ex, NodeProperties.ExecutorFunctionType),\r\n                        model: GetCodeName(model),\r\n                        agent_type: GetCodeName(agent)\r\n                    }));\r\n            }\r\n\r\n\r\n            var res = bindTemplate(_streamAgentMethods, {\r\n                model: GetNodeProp(model, NodeProperties.CodeName),\r\n                model_output: GetCodeName(model_output),\r\n                'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase(),\r\n                update_method: 'here interface ok'\r\n\r\n            });\r\n            result.push(...methods_interface);\r\n            result.push(res);\r\n        });\r\n        // });\r\n\r\n        return result.unique().join('')\r\n    }\r\n    static GenerateStrappers(models, agent) {\r\n        let result = [];\r\n        var sortedValidations = GetValidationsSortedByAgent();\r\n        if (sortedValidations && agent && sortedValidations[agent.id]) {\r\n            result.push(Tabs(4) + bindTemplate(`validator = RedStrapper.Resolve<I{{agent}}Validations>();`, {\r\n                agent: GetCodeName(agent)\r\n            }) + jNL);\r\n        }\r\n        var agents = [agent];// models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}Arbiter = RedStrapper.Resolve<IRedArbiter<${modelName}>>();` + jNL);\r\n            agents.map(agent => {\r\n                var agentName = GetCodeName(agent);\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}ChangeBy${agentName}Arbiter = RedStrapper.Resolve<IRedArbiter<${modelName}ChangeBy${agentName}>>();` + jNL);\r\n            });\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}ResponseArbiter = RedStrapper.Resolve<IRedArbiter<${modelName}Response>>();` + jNL);\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}Executor = RedStrapper.Resolve<I${modelName}Executor>();` + jNL);\r\n            }\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStrappersInstances(models, agent) {\r\n        let result = [];\r\n\r\n        var sortedValidations = GetValidationsSortedByAgent();\r\n        if (sortedValidations && agent && sortedValidations[agent.id]) {\r\n            result.push(Tabs(3) + bindTemplate(`public I{{agent}}Validations validator;`, { agent: GetCodeName(agent) }) + jNL);\r\n        }\r\n        var agents = [agent];// models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(3) + `public IRedArbiter<${modelName}> ${modelName.toLowerCase()}Arbiter;` + jNL)\r\n            agents.map(agent => {\r\n                var agentName = GetCodeName(agent);\r\n                result.push(Tabs(3) + `public IRedArbiter<${modelName}ChangeBy${agentName}> ${modelName.toLowerCase()}ChangeBy${agentName}Arbiter;` + jNL)\r\n            });\r\n\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(3) + `public IRedArbiter<${modelName}Response> ${modelName.toLowerCase()}ResponseArbiter;` + jNL);\r\n                result.push(Tabs(3) + `public I${modelName}Executor ${modelName.toLowerCase()}Executor;` + jNL);\r\n            }\r\n\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStreamOrchestrations(models) {\r\n        let result = [];\r\n        var agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        agents.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}StreamProcessOrchestration = RedStrapper.Resolve<I${modelName}StreamProcessOrchestration>();` + jNL);\r\n\r\n        });\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStreamOrchestrationInstances(models) {\r\n        let result = [];\r\n\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        var agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        agents.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(`public I${modelName}${StreamProcessOrchestration} ${modelName.toLowerCase()}StreamProcessOrchestration;`)\r\n        })\r\n        return result.map(v => Tabs(3) + v + jNL).join('');\r\n    }\r\n    static GenerateProcessTests(state) {\r\n        let graph = GetRootGraph(state);\r\n        let functions = NodesByType(state, NodeTypes.Method).filter(x => ![\r\n            Methods.Get,\r\n            Methods.GetAll].some(t => t === GetNodeProp(x, NodeProperties.MethodType)));\r\n        let res = '';\r\n        // STREAM_METHOD_TESTS\r\n        let _stramMethodTests = fs.readFileSync(STREAM_METHOD_TESTS, 'utf8');\r\n        let _createModelTests = fs.readFileSync(CREATE_MODEL_TESTS, 'utf8');\r\n        let agent_process_orchestration_mocks = `           builder.RegisterType<{{agent_type}}StreamProcessOrchestration>().As<I{{agent_type}}StreamProcessOrchestration>();\r\n`;\r\n        let agent_process_orc_mocks = NodesByType(state, NodeTypes.Model).filter(x => {\r\n            var isAgent = IsAgent(x);\r\n            return isAgent;\r\n        }).map(t => bindTemplate(agent_process_orchestration_mocks, {\r\n            agent_type: GetCodeName(t)\r\n        })).join('');\r\n        res = functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            //      let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var userTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.User]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    //   cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, method, agentTypeNode, modelNode);\r\n                }\r\n            }\r\n            if (modelNode && agentTypeNode && func) {\r\n                return bindTemplate(_stramMethodTests, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                    function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                    test_name: `${GetNodeProp(func, NodeProperties.CodeName)}Test`,\r\n                    stream_process_orchestration_mocks: agent_process_orc_mocks\r\n                });\r\n            }\r\n        }).filter(x => x).join(NEW_LINE);\r\n        let func_Cases = [];\r\n        functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n                    let validatorCases = null;\r\n                    if (validators && validators.length) {\r\n                        validatorCases = validators.map(validator => {\r\n                            return {\r\n                                cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                                isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                            };\r\n                        })\r\n                    }\r\n                    if (validatorCases)\r\n                        enumerate(validatorCases.map(x => x.cases.length)).map((_enum, caseindex) => {\r\n                            let v1 = validatorCases[0].cases[_enum[0]];\r\n                            let v2 = validatorCases[1].cases[_enum[1]];\r\n                            let agent_properties = '';\r\n                            let model_properties = '';\r\n                            if (!validatorCases[1].isModel) {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                            }\r\n                            else {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                            }\r\n                            // cases.map((_case, caseindex) => {\r\n                            func_Cases.push(bindTemplate(_createModelTests, {\r\n                                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                                agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                                set_agent_propeties: agent_properties,\r\n                                set_model_properties: model_properties,\r\n                                function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                                test_result: !(v1.resultSuccess && v2.resultSuccess),\r\n                                test_name: `${GetNodeProp(func, NodeProperties.CodeName)}${caseindex}Test`\r\n                            }));\r\n\r\n                        })\r\n                    //  });\r\n                }\r\n            }\r\n        }).join(NEW_LINE);\r\n        return res + NEW_LINE + func_Cases.join(NEW_LINE);\r\n    }\r\n    static EnumerateFunctionValidators(state, func) {\r\n        let graph = GetRootGraph(state);\r\n        let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n        let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n        let validatorCases = null;\r\n        if (validators && validators.length) {\r\n            validatorCases = validators.map(validator => {\r\n                return {\r\n                    cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                    isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                };\r\n            })\r\n        }\r\n        return enumerate((validatorCases || []).map(x => x.cases.length)).map((_enum, caseindex) => {\r\n            let v1 = validatorCases[0].cases[_enum[0]];\r\n            let v2 = validatorCases[1].cases[_enum[1]];\r\n            let agent_properties = '';\r\n            let model_properties = '';\r\n            if (!validatorCases[1].isModel) {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                return {\r\n                    agent: v2,\r\n                    model: v1\r\n                }\r\n            }\r\n            else {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                return {\r\n                    model: v2,\r\n                    agent: v1\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static GetFunctionValidators(state, funct) {\r\n        return NodesByType(state, NodeTypes.Validator).filter(x => GetNodeProp(x, NodeProperties.ValidatorFunction) === funct.id);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_ROOT_TEMPLATE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let _streamProcessInterfaceTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE, 'utf8');\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let result = {};\r\n        agents.map(agent => {\r\n            var temp = StreamProcessOrchestrationGenerator.GenerateAgent({ state, key, agent });\r\n            result = { ...result, ...temp };\r\n        });\r\n        let strappers = StreamProcessOrchestrationGenerator.GenerateStreamOrchestrations(models);\r\n        let strapperInstances = StreamProcessOrchestrationGenerator.GenerateStreamOrchestrationInstances(models);\r\n\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            agent_type_methods: `\r\n\r\n        public async Task ProcessStagedChanges(Distribution distribution = null) \r\n        {\r\n${agents.map(agent => {\r\n                return `await ${GetCodeName(agent).toLowerCase()}StreamProcessOrchestration.ProcessStagedChanges(distribution);`;\r\n            }).map(v => Tabs(4) + v + jNL).join('')}\r\n        }\r\n        `,\r\n            arbiters_strappers: strappers,\r\n            arbiter_instances: strapperInstances\r\n        });\r\n        let stream_process_tests = StreamProcessOrchestrationGenerator.GenerateProcessTests(state);\r\n        let testTemplate = bindTemplate(_testClass, {\r\n            name: StreamProcessOrchestration,\r\n            tests: stream_process_tests\r\n        })\r\n        _streamProcessInterfaceTemplate = bindTemplate(_streamProcessInterfaceTemplate, {\r\n            agent_type_methods: '',\r\n            agent_type: ''\r\n        });\r\n        let streamOrchestration = {\r\n            [StreamProcessOrchestration]: {\r\n                id: StreamProcessOrchestration,\r\n                name: StreamProcessOrchestration,\r\n                iname: `I${StreamProcessOrchestration}`,\r\n                //  tname: `${StreamProcessOrchestration}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Linq.Expressions',\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: _streamProcessInterfaceTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                // test: NamespaceGenerator.Generate({\r\n                //     template: testTemplate,\r\n                //     usings: [\r\n                //         ...STANDARD_CONTROLLER_USING,\r\n                //         ...STANDARD_TEST_USING,\r\n                //         `${namespace}${NameSpace.Model}`,\r\n                //         `${namespace}${NameSpace.Parameters}`,\r\n                //         `${namespace}${NameSpace.Interface}`,\r\n                //         `${namespace}${NameSpace.StreamProcess}`,\r\n                //         `${namespace}${NameSpace.Executors}`,\r\n                //         `${namespace}${NameSpace.Extensions}`,\r\n                //         `${namespace}${NameSpace.Constants}`],\r\n                //     namespace,\r\n                //     space: NameSpace.Tests\r\n                // })\r\n            }\r\n        };\r\n        result = { ...result, ...streamOrchestration };\r\n        return result;\r\n    }\r\n    static GenerateAgent(options) {\r\n        var { state, key, agent } = options;\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE, 'utf8');\r\n        let _streamProcessInterfaceTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let agent_methods = StreamProcessOrchestrationGenerator.GenerateAgentMethods(state, agent);\r\n        let agent_methods_interface = StreamProcessOrchestrationGenerator.GenerateAgentInterfaceMethods(state, agent);\r\n        let statics = StreamProcessOrchestrationGenerator.GenerateStaticMethods(models, agent);\r\n        let strappers = StreamProcessOrchestrationGenerator.GenerateStrappers(models, agent);\r\n        let strapperInstances = StreamProcessOrchestrationGenerator.GenerateStrappersInstances(models, agent);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.join(''),\r\n            agent_type_methods: agent_methods,\r\n            agent_type: GetCodeName(agent),\r\n            agent: GetCodeName(agent),\r\n            arbiters_strappers: strappers,\r\n            arbiter_instances: strapperInstances\r\n        });\r\n        let stream_process_tests = StreamProcessOrchestrationGenerator.GenerateProcessTests(state, agent);\r\n        let testTemplate = bindTemplate(_testClass, {\r\n            name: `${GetCodeName(agent)}${StreamProcessOrchestration}`,\r\n            agent_type: GetCodeName(agent),\r\n            tests: stream_process_tests\r\n        })\r\n        _streamProcessInterfaceTemplate = bindTemplate(_streamProcessInterfaceTemplate, {\r\n            agent_type: GetCodeName(agent),\r\n            agent_type_methods: agent_methods_interface\r\n        });\r\n        return {\r\n            [`${(GetCodeName(agent) + StreamProcessOrchestration)}`]: {\r\n                id: StreamProcessOrchestration,\r\n                name: `${GetCodeName(agent)}${StreamProcessOrchestration}`,\r\n                iname: `I${GetCodeName(agent)}${StreamProcessOrchestration}`,\r\n                // tname: `${GetCodeName(agent)}${StreamProcessOrchestration}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Linq.Expressions',\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: _streamProcessInterfaceTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                // test: NamespaceGenerator.Generate({\r\n                //     template: testTemplate,\r\n                //     usings: [\r\n                //         ...STANDARD_CONTROLLER_USING,\r\n                //         ...STANDARD_TEST_USING,\r\n                //         `${namespace}${NameSpace.Model}`,\r\n                //         `${namespace}${NameSpace.Parameters}`,\r\n                //         `${namespace}${NameSpace.Interface}`,\r\n                //         `${namespace}${NameSpace.StreamProcess}`,\r\n                //         `${namespace}${NameSpace.Executors}`,\r\n                //         `${namespace}${NameSpace.Extensions}`,\r\n                //         `${namespace}${NameSpace.Constants}`],\r\n                //     namespace,\r\n                //     space: NameSpace.Tests\r\n                // })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle, GetCodeName, GetMethodProps, GetMethodFilterParameters, GetMethodFilterMetaParameters, GetConditionNodes, GetCombinedCondition } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules, FilterUI, FilterRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType, Filter } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/itemfilters/item_filter.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE = './app/templates/models/itemfilters/filter_property_function_value.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE_EQUALS = './app/templates/models/itemfilters/filter_property_function_value_equals.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelItemFilterGenerator {\r\n    static predicates(nodes, out_ = {}) {\r\n\r\n        return nodes.map(x => {\r\n            let validator = GetNodeProp(x, NodeProperties.FilterModel);\r\n            let params = [];\r\n            let filterModelParams = GetMethodFilterParameters(x.id);\r\n            if (filterModelParams && filterModelParams.length) {\r\n                params = filterModelParams.map(x => `${x.paramName}`)\r\n            }\r\n            else if (validator) {\r\n                Object.values(validator.properties).map(t => Object.values(t.validators).map(v => {\r\n                    if (v && v.type === FilterRules.EqualsModelRef) {\r\n                        out_[v.node] = true;\r\n                        params.push(v.node);\r\n                    }\r\n                }))\r\n                params = params.filter(x => x).unique().sort();\r\n            }\r\n            let text = `${GetCodeName(x)}.Filter({{predicate_parameters}})`;\r\n            return bindTemplate(text, {\r\n                predicate_parameters: params.join(', ')\r\n            });\r\n        });\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let modelitemfilters = NodesByType(state, NodeTypes.ModelItemFilter);\r\n        modelitemfilters.map(modelitemfilter => {\r\n            var method = GraphMethods.GetMethodNode(state, modelitemfilter.id);\r\n            var methodProps = null;\r\n            if (method) {\r\n                methodProps = GetMethodProps(method);\r\n            }\r\n            let itemFilter = GetNodeProp(modelitemfilter, NodeProperties.ModelItemFilter);\r\n            let filterModel = GetNodeProp(modelitemfilter, NodeProperties.FilterModel);\r\n            let conditions = GetConditionNodes(modelitemfilter.id);\r\n            let filterMethodParameters = GetMethodFilterParameters(modelitemfilter.id);\r\n            let meta_parameters = GetMethodFilterMetaParameters(modelitemfilter.id);\r\n            let funcs = [];\r\n            let parameters = [];\r\n\r\n            if (filterModel && filterModel.properties) {\r\n                let filterPropFunction = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE, 'utf8');\r\n                let filters = [];\r\n                Object.keys(filterModel.properties).map(prop => {\r\n                    let propName = GetCodeName(prop);\r\n                    if (filterModel.properties[prop]) {\r\n                        Object.keys(filterModel.properties[prop].validators).map(validator => {\r\n                            let _validatorProps = filterModel.properties[prop].validators[validator];\r\n                            let validatorValue = '';\r\n                            let validatorName = GetCodeName(validator);\r\n                            let _function = '==';\r\n                            let meta_parameter = 'item';\r\n                            let filterPropFunctionValueEquals = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE_EQUALS, 'utf8');\r\n                            if (_validatorProps && _validatorProps.type)\r\n                                switch (_validatorProps.type) {\r\n                                    case FilterRules.EqualsTrue:\r\n                                        validatorValue = 'true';\r\n                                        break;\r\n                                    case FilterRules.EqualsFalse:\r\n                                        validatorValue = 'false';\r\n                                        break;\r\n                                    case FilterRules.EqualsAgent:\r\n                                        validatorValue = `agent.${propName}`;\r\n                                        break;\r\n                                    case FilterRules.EqualsParent:\r\n                                        validatorValue = `parent.${propName}`;\r\n                                        break;\r\n                                    case FilterRules.EqualsModelRef:\r\n                                        if (_validatorProps.node) {\r\n                                            let mNode = GraphMethods.GetNode(graph, methodProps[_validatorProps.node]);\r\n                                            if (mNode) {\r\n                                                parameters.push(`${GetCodeName(mNode)} ${_validatorProps.node}`);\r\n                                            }\r\n                                            validatorValue = `${_validatorProps.node}.Id`;\r\n                                        }\r\n                                        break;\r\n                                    case FilterRules.EqualsModelProperty:\r\n                                        if (_validatorProps.node && _validatorProps.nodeProperty) {\r\n                                            let mNode = GraphMethods.GetNode(graph, methodProps[_validatorProps.node]);\r\n                                            if (mNode) {\r\n                                                parameters.push(`${GetCodeName(mNode)} ${_validatorProps.node}`);\r\n                                            }\r\n                                            validatorValue = `${_validatorProps.node}.${GetCodeName(_validatorProps.nodeProperty)}`;\r\n                                        }\r\n                                        break;\r\n                                    case FilterRules.IsInModelPropertyCollection:\r\n                                        if (_validatorProps.node && _validatorProps.nodeProperty) {\r\n                                            let mNode = GraphMethods.GetNode(graph, methodProps[_validatorProps.node]);\r\n                                            if (mNode) {\r\n                                                parameters.push(`${GetCodeName(mNode)} ${_validatorProps.node}`);\r\n                                            }\r\n                                            validatorValue = `${_validatorProps.node}.${GetCodeName(_validatorProps.nodeProperty)}`;\r\n                                            filterPropFunctionValueEquals = FilterUI[_validatorProps.type].template;\r\n                                        }\r\n                                        break;\r\n                                    default:\r\n                                        throw 'not handled model item filter generation case';\r\n                                }\r\n\r\n                            filters.push(bindTemplate(filterPropFunctionValueEquals, {\r\n                                property: propName,\r\n                                value: validatorValue,\r\n                                meta_parameter,\r\n                                function: _function\r\n                            }));\r\n                        })\r\n                    }\r\n                });\r\n                parameters = parameters.filter(x => x).unique().sort();\r\n                if (filterMethodParameters && filterMethodParameters.length) {\r\n                    parameters = filterMethodParameters.map(item => {\r\n                        return `${item.paramClass} ${item.paramName}`\r\n                    });\r\n                }\r\n                if (meta_parameters && meta_parameters.length) {\r\n                    meta_parameters = meta_parameters.map(item => {\r\n                        return `${item.paramName}`;\r\n                    })\r\n                }\r\n                if (conditions && conditions.length) {\r\n                    filters = GetCombinedCondition(modelitemfilter.id);\r\n                }\r\n                else {\r\n                    filters = filters.join('');\r\n                }\r\n\r\n                funcs.push(bindTemplate(filterPropFunction, {\r\n                    filter: filters,\r\n                    model: GetCodeName(itemFilter),\r\n                    model_output: GetCodeName(itemFilter),\r\n                    meta_parameter: meta_parameters.join(', '),\r\n                    parameters: parameters.join(', ')\r\n                }))\r\n            }\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                code_name: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                filter: funcs\r\n            });\r\n\r\n            result[GetNodeProp(modelitemfilter, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(modelitemfilter, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport StreamProcessOrchestrationGenerator from './streamprocessorchestrationgenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ModelItemFilterGenerator from './modelitemfiltergenerator';\r\n\r\nconst MAESTRO_CLASS_TEMPLATE = './app/templates/maestro/maestro.tpl';\r\nconst MAESTRO_INTERFACE_TEMPLATE = './app/templates/maestro/imaestro.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst MAESTRO_FUNCTION_TESTS = './app/templates/maestro/tests/maestro.tpl';\r\nconst MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS = './app/templates/maestro/tests/maestro_same_agent_model.tpl';\r\nconst get_agent_manytomany_listchild_interface = './app/templates/maestro/tests/get_agent_manytomany_listchild_interface.tpl';\r\nconst MAESTRO_FUNCTION_GET_TESTS = './app/templates/maestro/tests/maestro_get.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class MaestroGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let maestros = NodesByType(state, NodeTypes.Maestro);\r\n\r\n        let _maestroTemplateClass = fs.readFileSync(MAESTRO_CLASS_TEMPLATE, 'utf8');\r\n        let _MAESTRO_INTERFACE_TEMPLATE = fs.readFileSync(MAESTRO_INTERFACE_TEMPLATE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let testFunctionTemplate = fs.readFileSync(MAESTRO_FUNCTION_TESTS, 'utf8');\r\n        let testFunctionGetSameParentTemplate = fs.readFileSync(MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS, 'utf8');\r\n\r\n        let testFunctionGetTemplate = fs.readFileSync(MAESTRO_FUNCTION_GET_TESTS, 'utf8');\r\n        let root = GetRootGraph(state);\r\n        let graph = GetCurrentGraph(state);\r\n        let result = {};\r\n        maestros.map(maestro => {\r\n            let maestroTemplateClass = _maestroTemplateClass;\r\n            let functions = '';\r\n            let functionsInterface = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(maestro, NodeProperties.CodeName)}`;\r\n\r\n            let maestro_functions = [];\r\n            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                id: maestro.id,\r\n                type: LinkType.FunctionLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let arbiters = [];\r\n            let permissions = [];\r\n            let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n            maestro_functions = tempfunctions;\r\n            let permissionValidationCases = [];\r\n            if (maestro_functions.length) {\r\n                maestro_functions.filter(x => !GetNodeProp(x, NodeProperties.NotIncludedInController)).map(maestro_function => {\r\n                    let function_type = GetNodeProp(maestro_function, NodeProperties.FunctionType);\r\n                    var ft = MethodFunctions[function_type];\r\n                    if (ft) {\r\n\r\n                        let tempFunction = ft.template;\r\n                        let interfaceFunction = ft.interface;\r\n                        let testFunction = ft.test;\r\n                        let value_type = '';\r\n                        let parent_type = '';\r\n                        if (ft.parentGet) {\r\n                            value_type = 'string';\r\n                        }\r\n                        let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                        let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                        let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                        let agentTypeNode = null;\r\n                        let userTypeNode = null;\r\n                        let parentNode = null;\r\n                        let permissionNode = null;\r\n                        let modelFilterNode = null;\r\n                        let compositeInput = null;\r\n                        let manyToManyNode = null;\r\n                        let connectingNode = null;\r\n                        let parent_setup = '';\r\n                        let modelNode = null;\r\n                        let parent = null;\r\n                        let model_output = null;\r\n                        let methodProps = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                        let predicates = '';\r\n                        if (methodProps) {\r\n                            agentTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.AgentType] || methodProps[FunctionTemplateKeys.Agent]);\r\n                            modelNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Model]);\r\n                            userTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.User]);\r\n                            permissionNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Permission]);\r\n                            modelFilterNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ModelFilter]);\r\n                            compositeInput = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.CompositeInput])\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            connectingNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ConnectionType]);\r\n                            model_output = GetCodeName(methodProps[FunctionTemplateKeys.ModelOutput])\r\n                            parentNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Parent]);\r\n                            parent_type = parentNode ? GetNodeProp(parentNode, NodeProperties.CodeName) : '{missing parent name}';\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            var modelItemFilters = GraphMethods.GetLinkChain(state, {\r\n                                id: maestro_function.id,\r\n                                links: [{\r\n                                    type: LinkType.ModelItemFilter,\r\n                                    direction: GraphMethods.SOURCE\r\n                                }]\r\n                            });\r\n                            var out_predicate = {}\r\n                            predicates = ModelItemFilterGenerator.predicates(modelItemFilters, out_predicate);\r\n                            if (predicates.length) {\r\n                                predicates = predicates.join(', ');\r\n                            }\r\n                            else {\r\n                                predicates = '';\r\n                            }\r\n                            if (out_predicate.parent) {\r\n                                parent_setup = `var parent = await arbiter${parent_type}.Get<${parent_type}>(model.${parent_type});`\r\n                            }\r\n                        }\r\n\r\n                        let agent = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}` : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let model_type = modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : `{maestro_generator_mising_model}`;\r\n                        let agent_type = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}` : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let methodType = GetNodeProp(maestro_function, NodeProperties.MethodType);\r\n                        let connect_type = connectingNode ? GetCodeName(connectingNode) : '{maestro_connection_type_missing}';\r\n                        if (parentNode)\r\n                            arbiters.push(parent_type);\r\n                        let manyNodes = GraphMethods.GetManyToManyNodes(graphRoot, [modelNode ? modelNode.id : false, agentTypeNode ? agentTypeNode.id : null].filter(x => x)) || [];\r\n                        arbiters.push(...manyNodes.map(manyNode => {\r\n                            return GetNodeProp(manyNode, NodeProperties.CodeName);\r\n                        }));\r\n                        arbiters.push(agent_type, model_type);\r\n                        permissions.push({ agent_type, model_type });\r\n                        let value = '';\r\n                        let agentAndModelIsTheSame = false;\r\n                        if (ft.parentGet) {\r\n                            value = parentNode ? `${GetNodeProp(parentNode, NodeProperties.CodeName)}`.toLowerCase() : '{missing parent name}';\r\n                            if (agentTypeNode && parentNode) {\r\n                                agentAndModelIsTheSame = agentTypeNode.id === parentNode.id;\r\n                            }\r\n                        }\r\n                        else {\r\n                            value = modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`;\r\n                        }\r\n\r\n                        let bindOptions = {\r\n                            function_name: functionName,\r\n                            agent_type: agent_type,\r\n                            'agent_type#lower': `${agent_type}`.toLowerCase(),\r\n                            parent_type,\r\n                            agent: agent,\r\n                            'composite-input': GetCodeName(compositeInput) || '',\r\n                            model_input: GetCodeName(compositeInput) || model_type,\r\n                            value_type,\r\n                            value,\r\n                            parent_setup,\r\n                            model_output,\r\n                            parent: GetCodeName(parentNode),\r\n                            model: model_type,\r\n                            connect_type,\r\n                            comma: predicates.length ? ',' : '',\r\n                            predicates,\r\n                            maestro_function: functionName,\r\n                            filter_function: modelFilterNode ? GetNodeProp(modelFilterNode, NodeProperties.CodeName) : '{missing filter node}',\r\n                            user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                            http_route: httpRoute || '{maestro_generator_http_method',\r\n                            http_method: httpMethod || '{maestro_generator_http_method',\r\n                            user_instance: userTypeNode ? `${GetNodeProp(userTypeNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_userNode}`,\r\n                            output_type: modelNode ? GetCodeName(modelNode) : '{maestro_generator_missing_model}',\r\n                            maestro_interface: ToInterface(maestroName),\r\n                            permission_function: permissionNode ? GetNodeProp(permissionNode, NodeProperties.CodeName) : `{MISSING_PERMISSION_FUNCTION}`,\r\n                            input_type: modelNode ? GetCodeName(modelNode) : '{maestro_generator_missing_model}'\r\n                        };\r\n                        tempFunction = bindTemplate(tempFunction, bindOptions);\r\n                        interfaceFunction = bindTemplate(interfaceFunction, bindOptions)\r\n\r\n                        functions += jNL + tempFunction;\r\n                        functionsInterface += jNL + interfaceFunction;\r\n\r\n                        var cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, methodType, agentTypeNode, modelNode);\r\n                        let validators = StreamProcessOrchestrationGenerator.EnumerateFunctionValidators(state, maestro_function);\r\n                        if (validators && cases) {\r\n                            validators.map(validator => {\r\n                                cases.map(_case => {\r\n                                    let pvc = {};\r\n                                    let pvc2 = {};\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ...validator.agent.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.properties.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).map((t, index) => {\r\n                                                if (validator.agent.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.agentProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ...validator.model.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).map((t, index) => {\r\n                                                if (validator.model.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.itemProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.model = (temp);\r\n                                    }\r\n\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ..._case.agentProperties.map((t, index) => _case.agentProps[index]),\r\n                                            ...validator.agent.propertyInformation.map((t, index) => {\r\n                                                if (_case.agentProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.agent.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ..._case.itemProperties.map((t, index) => _case.itemProps[index]),\r\n                                            ...validator.model.propertyInformation.map((t, index) => {\r\n                                                if (_case.itemProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.model.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.model = (temp);\r\n                                    }\r\n\r\n                                    permissionValidationCases.push(pvc2);\r\n                                    permissionValidationCases.push(pvc);\r\n                                })\r\n                            })\r\n\r\n                            permissionValidationCases = permissionValidationCases.map((pvc, index) => {\r\n                                //Generate tests.\r\n                                let templ = testFunctionTemplate;\r\n                                switch (ft.method) {\r\n                                    case Methods.Get:\r\n                                    case Methods.GetAll:\r\n                                        templ = testFunctionGetTemplate;\r\n                                        if (agentAndModelIsTheSame) {\r\n                                            templ = testFunctionGetSameParentTemplate;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                switch (function_type) {\r\n                                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                                        templ = fs.readFileSync(get_agent_manytomany_listchild_interface, 'utf8');\r\n                                        break;\r\n                                }\r\n                                if (ft.test) {\r\n                                    templ = ft.test;\r\n                                }\r\n                                return bindTemplate(templ, {\r\n                                    agent: agent_type,\r\n                                    many_to_many: GetNodeProp(manyToManyNode, NodeProperties.CodeName),\r\n                                    parent: GetNodeProp(parentNode, NodeProperties.CodeName),\r\n                                    set_many_to_many_properties: '//{not set yet}',\r\n                                    value: modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`,\r\n                                    model: model_type,\r\n                                    model_input: GetCodeName(compositeInput) || model_type,\r\n                                    function_name: functionName,\r\n                                    maestro: maestroName,\r\n                                    set_agent_properties: pvc.agent,\r\n                                    user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                                    set_model_properties: pvc.model,\r\n                                    testname: `${functionName}Test${index}`\r\n                                });\r\n                            });\r\n                            // Do analysis on whether these validations are completely bonk.\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n            arbiters = arbiters.unique();\r\n            permissions = permissions.unique(x => `${x.agent_type}`);\r\n            var injectedServices = arbiters.map(x => `IRedArbiter<${x}> _arbiter${x}`);\r\n            var injectedPermissionServices = permissions.map(x => `IPermissions${x.agent_type} _${x.agent_type.toLowerCase()}Permissions`);\r\n            var set_properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(4) + `arbiter${x} = _arbiter${x};`);\r\n            var set_permissions = permissions.map(x => jNL + MaestroGenerator.Tabs(4) + `${x.agent_type.toLowerCase()}Permissions = _${x.agent_type.toLowerCase()}Permissions;`);\r\n            var properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IRedArbiter<${x}> arbiter${x};`);\r\n            var permissions_properties = permissions.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IPermissions${x.agent_type} ${x.agent_type.toLowerCase()}Permissions;`);\r\n            let testTemplate = bindTemplate(_testClass, {\r\n                name: codeName,\r\n                tests: permissionValidationCases.join(NEW_LINE)\r\n            })\r\n            maestroTemplateClass = bindTemplate(maestroTemplateClass, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions\r\n            });\r\n            let maestro_interface_template = bindTemplate(_MAESTRO_INTERFACE_TEMPLATE, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions: functionsInterface\r\n            })\r\n            result[GetNodeProp(maestro, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                name: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                iname: `I${GetNodeProp(maestro, NodeProperties.CodeName)}`,\r\n                tname: `${GetNodeProp(maestro, NodeProperties.CodeName)}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: maestroTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Parameters}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: maestro_interface_template,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Controllers}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetMethodNodeProp, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionConstraintKeys, FunctionTemplateKeys, FunctionMethodTypes, MethodFunctions, MethodTemplateKeys, AFTER_EFFECTS } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_change_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_change_class_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS = './app/templates/stream_process/tests/stream_process_change_class_constructor.tpl';\r\n\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeParameterGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let afterEffects = NodesByType(state, NodeTypes.AfterEffect);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf8');\r\n        let _streamProcessChangeClassConstrictorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS, 'utf8');\r\n        let result = {};\r\n        models.map(model => {\r\n\r\n            agents.map(agent => {\r\n                let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n                let testClass = _testClass;\r\n                let properties = '';\r\n                let statics = '';\r\n                let constructors = [];\r\n                let tests = [];\r\n                let updates_with = [];\r\n                let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf8');\r\n                afterEffects.filter(afterEffect => {\r\n                    let functionType = GetNodeProp(afterEffect, NodeProperties.AfterMethod);\r\n                    let setup = GetNodeProp(afterEffect, NodeProperties.AfterMethodSetup);\r\n                    if (setup && functionType && setup[functionType][FunctionTemplateKeys.ModelOutput]) {\r\n                        var method = GraphMethods.GetMethodNode(state, afterEffect.id);\r\n                        if (method) {\r\n                            var valid = GetMethodNodeProp(method, setup[functionType][FunctionTemplateKeys.Agent]) === agent.id &&\r\n                                GetMethodNodeProp(method, setup[functionType][FunctionTemplateKeys.ModelOutput]) == model.id;\r\n                            return valid;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }).filter(afterEffect => {\r\n                    let functionType = GetNodeProp(afterEffect, NodeProperties.AfterMethod);\r\n                    let setup = GetNodeProp(afterEffect, NodeProperties.AfterMethodSetup);\r\n                    if (AFTER_EFFECTS[functionType] && AFTER_EFFECTS[functionType]) {\r\n                        let methodNode = GraphMethods.GetMethodNode(state, afterEffect.id);\r\n                        let stream_process_change_parameter = AFTER_EFFECTS[functionType][MethodTemplateKeys.stream_process_change_parameter];\r\n                        if (stream_process_change_parameter) {\r\n                            let spcp_template = fs.readFileSync(stream_process_change_parameter, 'utf8');\r\n                            spcp_template = bindTemplate(spcp_template, {\r\n                                model: GetCodeName(model),\r\n                                value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                                agent_type: GetCodeName(agent),\r\n                                model_update: GetCodeName(GetMethodNodeProp(methodNode, setup[functionType][FunctionTemplateKeys.UpdateModel])),\r\n                                agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                                change_type: `Methods.${setup[functionType][FunctionTemplateKeys.MethodType]}`,\r\n                                method: setup[functionType][FunctionTemplateKeys.MethodType]\r\n                            });\r\n\r\n                            constructors.push(spcp_template);\r\n                        }\r\n\r\n                        let update_with = AFTER_EFFECTS[functionType][MethodTemplateKeys.update_with];\r\n                        if (update_with) {\r\n                            let spcp_template = fs.readFileSync(update_with, 'utf8');\r\n                            spcp_template = bindTemplate(spcp_template, {\r\n                                model_update: GetCodeName(GetMethodNodeProp(methodNode, setup[functionType][FunctionTemplateKeys.UpdateModel])),\r\n                            });\r\n                            updates_with.push(spcp_template + NEW_LINE);\r\n                        }\r\n                    }\r\n                });\r\n                Object.values(Methods).filter(x => ![Methods.Get, Methods.GetAll].some(v => v == x)).map(method => {\r\n\r\n                    let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n\r\n                    streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                        model: GetCodeName(model),\r\n                        value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetCodeName(agent),\r\n                        agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    let streamProcessChangeClassConstrictorsTest = _streamProcessChangeClassConstrictorsTest;\r\n\r\n                    streamProcessChangeClassConstrictorsTest = bindTemplate(streamProcessChangeClassConstrictorsTest, {\r\n                        model: GetCodeName(model),\r\n                        value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetCodeName(agent),\r\n                        agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    constructors.push(streamProcessChangeClassConstructors);\r\n                    tests.push(streamProcessChangeClassConstrictorsTest);\r\n\r\n                })\r\n\r\n                let staticDic = {\r\n                    model: `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                };\r\n                constructors.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n                streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    updates_with: updates_with.unique().join(''),\r\n                    constructors: constructors.unique().join(jNL)\r\n                });\r\n\r\n                testClass = bindTemplate(testClass, {\r\n                    name: `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                    tests: tests.unique(x => x).join('')\r\n                })\r\n\r\n                let change_param_name = `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`;\r\n                result[change_param_name] = {\r\n                    id: change_param_name,\r\n                    name: change_param_name,\r\n                    tname: `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}Tests`,\r\n                    template: NamespaceGenerator.Generate({\r\n                        template: streamProcessChangeClassExtension,\r\n                        usings: [\r\n                            ...STANDARD_CONTROLLER_USING,\r\n                            `${namespace}${NameSpace.Constants}`,\r\n                            `${namespace}${NameSpace.Model}`],\r\n                        namespace,\r\n                        space: NameSpace.Parameters\r\n                    }),\r\n                    test: NamespaceGenerator.Generate({\r\n                        template: testClass,\r\n                        usings: [\r\n                            ...STANDARD_CONTROLLER_USING,\r\n                            ...STANDARD_TEST_USING,\r\n                            `${namespace}${NameSpace.Constants}`,\r\n                            `${namespace}${NameSpace.Parameters}`,\r\n                            `${namespace}${NameSpace.Model}`],\r\n                        namespace,\r\n                        space: NameSpace.Tests\r\n                    })\r\n                };\r\n\r\n            });\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONSTANTS_CLASS = './app/templates/constants.tpl';\r\n\r\nexport default class ConstantsGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { values = [], state } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _constantsClass = fs.readFileSync(CONSTANTS_CLASS, 'utf8');\r\n        let result = {};\r\n        values.map(value => {\r\n            let { model, name } = value;\r\n            let constantsClass = _constantsClass;\r\n            let constructors = [];\r\n            var consts = Object.keys(model).map(key => {\r\n                let template = `public const string {{name}} = \"{{value}}\";`\r\n                let temp = bindTemplate(template, {\r\n                    name: key,\r\n                    value: model[key]\r\n                });\r\n                return ConstantsGenerator.Tabs(3) + temp;\r\n            }).join(jNL)\r\n\r\n            constantsClass = bindTemplate(constantsClass, {\r\n                constants: consts,\r\n                constants_type: name\r\n            });\r\n\r\n            result[name] = {\r\n                id: name,\r\n                name: name,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: constantsClass,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Constants\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import {\r\n    GetMethodNode, GetMethodDefinition, GetMethodNodeProp, GetCodeName,\r\n    GetCombinedCondition, GetPermissionsSortedByAgent, GetNameSpace,\r\n    GetArbiterPropertyDefinitions,\r\n    GetNodeCode,\r\n    GetArbiterPropertyImplementations,\r\n    GetAgentNodes,\r\n    safeFormatTemplateProperty\r\n} from \"../actions/uiactions\";\r\nimport { bindTemplate } from \"../constants/functiontypes\";\r\nimport fs from 'fs';\r\nimport { ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, NEW_LINE } from \"../constants/nodetypes\";\r\nimport NamespaceGenerator from \"../generators/namespacegenerator\";\r\nfunction GetMethodDefinitionPermissionSection(id) {\r\n    let methodDefinition = GetMethodDefinition(id);\r\n    if (methodDefinition && methodDefinition.permission) {\r\n        return methodDefinition.permission;\r\n    }\r\n    console.warn('doesnt define a permission for method type ');\r\n    return false;\r\n}\r\n\r\nexport function GetPermissionMethodImplementation(id, language = ProgrammingLanguages.CSHARP) {\r\n    let permissionSection = GetMethodDefinitionPermissionSection(id);\r\n    let { implementation } = permissionSection;\r\n    let implementation_template = fs.readFileSync(implementation, 'utf8');\r\n    let parameters = GetPermissionMethodParametersImplementation(id, language);\r\n    let conditions = GetCombinedCondition(id, language);\r\n\r\n    return bindTemplate(implementation_template, {\r\n        parameters,\r\n        conditions,\r\n        function_name: GetCodeName(id)\r\n    })\r\n}\r\n\r\nexport function GetPermissionMethodInterface(id, language = ProgrammingLanguages.CSHARP) {\r\n    let permissionSection = GetMethodDefinitionPermissionSection(id);\r\n    if (!permissionSection) {\r\n        return false;\r\n    }\r\n    let { interface_ } = permissionSection;\r\n\r\n    let interface_template = fs.readFileSync(interface_, 'utf8');\r\n    let parameters = GetPermissionMethodParametersImplementation(id, language);\r\n\r\n    return bindTemplate(interface_template, {\r\n        parameters,\r\n        function_name: GetCodeName(id)\r\n    })\r\n}\r\n\r\nexport function GetAgentPermissionInterface(agentId) {\r\n    let dictionary = GetPermissionsSortedByAgent();\r\n    if (dictionary && dictionary[agentId]) {\r\n        let namespace = GetNameSpace();\r\n        let interface_ = BuildAgentPermissionInterface(agentId, dictionary[agentId].map(t => t.id));\r\n        return NamespaceGenerator.Generate({\r\n            template: interface_,\r\n            usings: [\r\n                ...STANDARD_CONTROLLER_USING,\r\n                `${namespace}${NameSpace.Interface}`,\r\n                `${namespace}${NameSpace.Model}`\r\n            ],\r\n            namespace,\r\n            space: NameSpace.Interface\r\n        });\r\n    }\r\n    else {\r\n        throw 'agent doesnt have any permissions';\r\n    }\r\n}\r\n\r\nexport function GenerateAgentPermissionInterfacesAndImplementations() {\r\n    var agents = GetAgentNodes();\r\n    let result = {};\r\n    agents.map(agent => {\r\n        let agentName = GetCodeName(agent.id);\r\n        let temp = {\r\n            name: `Permissions${agentName}`,\r\n            iname: `IPermissions${agentName}`,\r\n            template: GetAgentPermissionImplementation(agent.id),\r\n            interface: GetAgentPermissionInterface(agent.id)\r\n        };\r\n        result[agentName] = temp;\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function GetAgentPermissionImplementation(agentId) {\r\n    let dictionary = GetPermissionsSortedByAgent();\r\n    if (dictionary && dictionary[agentId]) {\r\n        let namespace = GetNameSpace();\r\n        let implementation = BuildAgentPermissionImplementation(agentId, dictionary[agentId].map(t => t.id));\r\n        return NamespaceGenerator.Generate({\r\n            template: implementation,\r\n            usings: [\r\n                ...STANDARD_CONTROLLER_USING,\r\n                `${namespace}${NameSpace.Extensions}`,\r\n                `${namespace}${NameSpace.Model}`,\r\n                `${namespace}${NameSpace.Interface}`,\r\n                `${namespace}${NameSpace.Controllers}`,\r\n                `${namespace}${NameSpace.Constants}`].filter(x => x),\r\n            namespace,\r\n            space: NameSpace.Permissions\r\n        });\r\n    }\r\n    else {\r\n        throw 'agent doesnt have any permissions';\r\n    }\r\n}\r\n\r\nexport function BuildAgentPermissionInterface(agentId, permissions, language = ProgrammingLanguages.CSHARP) {\r\n    let methods = permissions.map(permission => {\r\n        return GetPermissionMethodInterface(permission, language);\r\n    }).filter(x => x).join(NEW_LINE);\r\n    let template = fs.readFileSync('./app/templates/permissions/permissions_interface.tpl', 'utf8');\r\n\r\n    return bindTemplate(template, {\r\n        agent_type: GetCodeName(agentId),\r\n        methods\r\n    });\r\n}\r\n\r\nexport function BuildAgentPermissionImplementation(agentId, permissions, language = ProgrammingLanguages.CSHARP) {\r\n    let methods = permissions.map(permission => {\r\n        return GetPermissionMethodImplementation(permission, language);\r\n    }).filter(x => x).join(NEW_LINE);\r\n    let template = fs.readFileSync('./app/templates/permissions/permissions_impl.tpl', 'utf8');\r\n    let _constructTemplate = fs.readFileSync('./app/templates/permissions/constructor.tpl', 'utf8');\r\n    let constructor = bindTemplate(_constructTemplate, {\r\n        agent_type: `${GetCodeName(agentId)}`,\r\n        arbiters: GetArbiterPropertyImplementations(4, language)\r\n    });\r\n    return bindTemplate(template, {\r\n        agent_type: GetCodeName(agentId),\r\n        arbiters: GetArbiterPropertyDefinitions(),\r\n        constructor,\r\n        methods\r\n    });\r\n}\r\n\r\nexport function GetPermissionMethodParameters(id) {\r\n    let permissionSection = GetMethodDefinitionPermissionSection(id);\r\n    let { params } = permissionSection;\r\n    let methodNode = GetMethodNode(id);\r\n    return params.map(param => {\r\n        return {\r\n            paramClass: GetMethodNodeProp(methodNode, param),\r\n            paramProperty: safeFormatTemplateProperty(param)\r\n        };\r\n    });\r\n}\r\n\r\nexport function GetPermissionMethodParametersImplementation(id, language) {\r\n    let parameters = GetPermissionMethodParameters(id);\r\n    switch (language) {\r\n        case ProgrammingLanguages.CSHARP:\r\n            return parameters.map(t => `${GetCodeName(t.paramClass)} ${t.paramProperty}`).join(', ');\r\n\r\n    }\r\n}","import { GenerateAgentPermissionInterfacesAndImplementations } from '../service/permissionservice';\r\nexport default class PermissionGenerator {\r\n\r\n    static Generate(options) {\r\n        let result = GenerateAgentPermissionInterfacesAndImplementations();\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_TEMPLATE = './app/templates/stream_process/stream_process.tpl';\r\nconst STREAM_PROCESS_TEMPLATE_TESTS = './app/templates/stream_process/tests/stream_process.tpl';\r\nconst STREAM_PROCESS_FUNCTION_TEMPLATE = './app/templates/stream_process/stream_process_function.tpl';\r\n\r\nexport default class StreamProcessGenerator {\r\n    static GenerateStaticMethods(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_FUNCTION_TEMPLATE, 'utf8');\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods;\r\n    }\r\n    static GenerateStaticMethodTests(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessTemplateTests = fs.readFileSync(STREAM_PROCESS_TEMPLATE_TESTS, 'utf8');\r\n        let _streamProcessFunctionTemplate = _streamProcessTemplateTests;\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods.unique(x => x);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_TEMPLATE, 'utf8');\r\n        let _streamProcessTemplateTests = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let statics = StreamProcessGenerator.GenerateStaticMethods(models);\r\n        let staticTests = StreamProcessGenerator.GenerateStaticMethodTests(models);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.unique(x => x).join('')\r\n        });\r\n\r\n        _streamProcessTemplateTests = bindTemplate(_streamProcessTemplateTests, {\r\n            tests: staticTests.unique(x => x).join(''),\r\n            name: 'StreamProcess'\r\n        });\r\n\r\n        return {\r\n            'StreamProcess': {\r\n                id: 'StreamProcess',\r\n                name: 'StreamProcess',\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Threading',\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                // test: NamespaceGenerator.Generate({\r\n                //     template: _streamProcessTemplateTests,\r\n                //     usings: [\r\n                //         ...STANDARD_CONTROLLER_USING,\r\n                //         ...STANDARD_TEST_USING,\r\n                //         'System.Threading',\r\n                //         `${namespace}${NameSpace.Constants}`,\r\n                //         `${namespace}${NameSpace.StreamProcess}`,\r\n                //         `${namespace}${NameSpace.Parameters}`,\r\n                //         `${namespace}${NameSpace.Model}`],\r\n                //     namespace,\r\n                //     space: NameSpace.Tests\r\n                // })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_response_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST = './app/templates/stream_process/tests/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED = './app/templates/stream_process/stream_process_response_class_extention_constructor_failed.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeResponseGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf8');\r\n        let _streamProcessChangeClassConstructorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST, 'utf8');\r\n        let _streamProcessChangeClassConstructorsFailed = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED, 'utf8');\r\n        let _test = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let result = {};\r\n        agents.map(agent => {\r\n            let constructors = [];\r\n            let tests = [];\r\n            let properties = '';\r\n            let statics = '';\r\n            let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n            let test = _test;\r\n            models.map(model2 => {\r\n                models.map(model => {\r\n                    Object.values(Methods).filter(x => x !== Methods.Get && x !== Methods.GetAll).map(method => {\r\n\r\n                        let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n                        let streamProcessChangeClassConstructorsFailed = _streamProcessChangeClassConstructorsFailed;\r\n                        let streamProcessChangeClassConstructorsTest = _streamProcessChangeClassConstructorsTest;\r\n                        let parameterTemplate = null;\r\n                        let arrange = '';\r\n                        let changeParameterName = `${GetNodeProp(model2, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                        if (method === Methods.Delete) {\r\n                            parameterTemplate = `${changeParameterName} change, bool res`;\r\n                            arrange = `\r\n            var change = ${changeParameterName}.Create();\r\n            var res = true;\r\n                            `;\r\n                        }\r\n                        else {\r\n                            parameterTemplate = `${changeParameterName} change, ${GetNodeProp(model, NodeProperties.CodeName)} ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}`;\r\n                            arrange = `\r\n            var change = ${changeParameterName}.Create();\r\n            var res =  ${GetNodeProp(model, NodeProperties.CodeName)}.Create();\r\n            change.Response = \"response\";\r\n            change.ChangeType = \"changeType\";\r\n                            `;\r\n                        }\r\n                        let parameter_properties = `\r\n            ${method === Methods.Delete ? '' : (`\r\n            result.IdValue = ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}.Id;`)}\r\n            result.Response = change.Response;\r\n            result.ChangeType = change.ChangeType;\r\n            `;\r\n                        let act = `\r\n            var response = ${GetNodeProp(agent, NodeProperties.CodeName)}Response.${method}(change, res);\r\n`;\r\n                        let assert = `\r\n            Assert.AreEqual(response.Response, change.Response);\r\n            Assert.AreEqual(response.ChangeType, change.ChangeType);\r\n`\r\n                        streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsTest = bindTemplate(streamProcessChangeClassConstructorsTest, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            model2: GetNodeProp(model2, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            assert,\r\n                            act,\r\n                            arrange,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsFailed = bindTemplate(streamProcessChangeClassConstructorsFailed, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n                        if (!tests.some(x => x === streamProcessChangeClassConstructorsTest)) {\r\n                            tests.push(streamProcessChangeClassConstructorsTest);\r\n                        }\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructors) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructors);\r\n\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructorsFailed) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructorsFailed);\r\n\r\n                    })\r\n                })\r\n            });\r\n\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                properties: ''\r\n            });\r\n            test = bindTemplate(test, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                properties: '',\r\n                tests: tests.join(jNL)\r\n            });\r\n\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                tname: `${GetNodeProp(agent, NodeProperties.CodeName)}ResponseTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: test,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace} ${NameSpace.Parameters} `,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n            };\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                `\r\nconst jNL = `\r\n                `\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetMethodProps, GetCodeName, GetNodeCode } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst EXECUTOR_CLASS = './app/templates/executor/executor_class.tpl';\r\nconst EXECUTOR_INTERFACE = './app/templates/executor/executor_class_interface.tpl';\r\nconst EXECUTOR_CREATE = './app/templates/executor/create.tpl';\r\nconst EXECUTOR_CREATE_COMPOSITE_INPUT = './app/templates/executor/create_composite_input.tpl';\r\n\r\nconst EXECUTOR_ENTRY_METHODS = './app/templates/executor/executor_entry_methods.tpl';\r\nconst EXECUTOR_ENTRY_METHODS_INTERFACE = './app/templates/executor/executor_entry_methods_interface.tpl';\r\nconst EXECUTOR_METHOD_CASE = './app/templates/executor/entry_method_case.tpl';\r\nconst EXECUTOR_UPDATE = './app/templates/executor/update.tpl';\r\nconst EXECUTOR_GET = './app/templates/executor/get.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst EXECUTOR_METHOD_COMPOSITE_INPUT = './app/templates/executor/executor_method_composite_input.tpl';\r\nconst EXECUTOR_METHODS = './app/templates/executor/executor_methods.tpl';\r\nconst EXECUTOR_METHODS_INTERFACE = './app/templates/executor/executor_methods_interface.tpl';\r\n\r\nexport default class ExecutorGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ExecutorGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let executor_nodes = NodesByType(state, NodeTypes.Executor);\r\n        let _executor_class = fs.readFileSync(EXECUTOR_CLASS, 'utf8');\r\n        let _executor_class_interface = fs.readFileSync(EXECUTOR_INTERFACE, 'utf8');\r\n        let _executor_methods = fs.readFileSync(EXECUTOR_METHODS, 'utf8');\r\n        let _executor_methods_composite_input = fs.readFileSync(EXECUTOR_METHOD_COMPOSITE_INPUT, 'utf8');\r\n        let _executor_methods_interface = fs.readFileSync(EXECUTOR_METHODS_INTERFACE, 'utf8');\r\n        let _executor_create = fs.readFileSync(EXECUTOR_CREATE, 'utf8');\r\n        let _executor_create_composite_input = fs.readFileSync(EXECUTOR_CREATE_COMPOSITE_INPUT, 'utf8');\r\n        let _executor_update = fs.readFileSync(EXECUTOR_UPDATE, 'utf8');\r\n        let _executor_get = fs.readFileSync(EXECUTOR_GET, 'utf8');\r\n        let _exe_method = fs.readFileSync(EXECUTOR_ENTRY_METHODS, 'utf8');\r\n        let _exe_method_interface = fs.readFileSync(EXECUTOR_ENTRY_METHODS_INTERFACE, 'utf8');\r\n        let _exe_case = fs.readFileSync(EXECUTOR_METHOD_CASE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let agentFunctionDic = {};\r\n        let agentFunctionInterfaceDic = {};\r\n        let executor_entry_methods = [];\r\n        let agentModelDic = {};\r\n        let agmCombos = [];\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let allfunctions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n\r\n        allfunctions.map(fun => {\r\n            let methodProps = GetMethodProps(fun);\r\n            let model_output;\r\n            if (methodProps && methodProps[FunctionTemplateKeys.CompositeInput]) {\r\n                model_output = GetCodeName(methodProps[FunctionTemplateKeys.CompositeInput])\r\n            }\r\n            let agent = methodProps[FunctionTemplateKeys.Agent];\r\n            let model = methodProps[FunctionTemplateKeys.Model];\r\n\r\n            agmCombos.push({\r\n                agentId: agent,\r\n                agent: GetCodeName(agent),\r\n                model: model_output || GetCodeName(model),\r\n                model_output: GetCodeName(model),\r\n                function: GetCodeName(fun),\r\n                method: GetNodeProp(fun, NodeProperties.MethodType)\r\n            });\r\n        });\r\n\r\n        executor_nodes.map(executor_node => {\r\n            var agent = GetNodeProp(executor_node, NodeProperties.ExecutorAgent);\r\n            var model = GetNodeProp(executor_node, NodeProperties.ExecutorModel);\r\n            var modelOutput = GetNodeProp(executor_node, NodeProperties.ExecutorModelOutput);\r\n            var modelOutputNode = GraphMethods.GetNode(graph, modelOutput);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var agentNode = GraphMethods.GetNode(graph, agent);\r\n            var funct = GetNodeProp(executor_node, NodeProperties.ExecutorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var functType = GetNodeProp(executor_node, NodeProperties.ExecutorFunctionType);\r\n            var functionNode = GraphMethods.GetNode(graph, funct);\r\n            var executor = GetNodeProp(executor_node, NodeProperties.Executor);\r\n            let executorProperties = GraphMethods.getValidatorProperties(executor);\r\n            var validation_test_vectors = [];\r\n            let amdid = GetNodeProp(agentNode, NodeProperties.CodeName) + GetNodeProp(modelNode, NodeProperties.CodeName) + GetNodeProp(functionNode, NodeProperties.MethodType);\r\n            agentModelDic[amdid] = agentModelDic[amdid] || [];\r\n\r\n            agentModelDic[amdid].push({\r\n                agent: GetCodeName(agentNode),\r\n                model: GetCodeName(modelNode),\r\n                model_output: GetCodeName(modelOutputNode),\r\n                functType,\r\n                funct: GetCodeName(functNode)\r\n            })\r\n            let methodProps = GetMethodProps(functNode);\r\n            let propertyValidationStatements = Object.keys(executorProperties || {}).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = executorProperties[property];\r\n\r\n                let properties = Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"_____\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    attribute_type_arguments = temp.filter(x => x).unique(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    let template = `result{{model_property}} = data{{model_property}};`;\r\n                    let templateBindings = {};\r\n                    switch (validators.type) {\r\n                        case ExecutorRules.AgentReference:\r\n                            template = `result{{model_property}} = agent.Id;`\r\n                            break;\r\n                        case ExecutorRules.ParentReference:\r\n                            template = `result{{model_property}} = data{{model_property}};`\r\n                            break;\r\n                        case ExecutorRules.Copy:\r\n                            break;\r\n                        case ExecutorRules.AddModelReference:\r\n                            template = fs.readFileSync(`app/templates/executor/snippets/add-model-reference.tpl`, 'utf8');\r\n                            \r\n                            let { references } = validators;\r\n                            if (references) {\r\n                                let methodNode = GraphMethods.GetMethodNode(state, executor_node.id);\r\n                                if (methodNode) {\r\n                                    let methodProps = GetMethodProps(methodNode);\r\n                                    Object.keys(references).map(ref_key => {\r\n                                        templateBindings[ref_key] = GetCodeName(methodProps[references[ref_key]]);\r\n                                    })\r\n                                }\r\n                            }\r\n                            break;\r\n                        default:\r\n                            throw 'not handle [execution generator]';\r\n                    }\r\n                    var templateRes = bindTemplate(template, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`,\r\n                        ...({ ...templateBindings })\r\n                    });\r\n                    return ExecutorGenerator.Tabs(4) + templateRes + NEW_LINE\r\n                }).unique(x => x).join('');\r\n\r\n\r\n                return properties;\r\n            }).unique(x => x).join('');\r\n            let template = '{{not-defined template}}';\r\n            let execution_method = _executor_methods;\r\n            switch (functType) {\r\n                case Methods.Create:\r\n                    template = _executor_create;\r\n                    if (methodProps[FunctionTemplateKeys.CompositeInput]) {\r\n                        execution_method = _executor_methods_composite_input;\r\n                        template = _executor_create_composite_input;\r\n                    }\r\n                    break;\r\n                case Methods.Update:\r\n                    template = _executor_update;\r\n                    break;\r\n                case Methods.Get:\r\n                case Methods.GetAll:\r\n                    template = _executor_get;\r\n                    break;\r\n            }\r\n            var templateRes = bindTemplate(template, {\r\n                property_sets: propertyValidationStatements,\r\n                model: `${GetCodeName(modelNode)}`,\r\n                model_output: GetCodeName(modelOutputNode)\r\n            });\r\n\r\n            // var vectors = ExecutorGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n            let agent_parameter = GetCodeName(agentNode);\r\n            agent_parameter = agent_parameter ? `${agent_parameter} agent` : false;\r\n\r\n            let data_parameter = GetCodeName(modelNode);\r\n            data_parameter = data_parameter ? `${data_parameter} data` : false;\r\n\r\n            let change_parameter = !agent_parameter ? false : `${GetNodeProp(modelNode, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agentNode, NodeProperties.CodeName)}`;\r\n            change_parameter = change_parameter ? `${change_parameter} change` : false;\r\n\r\n            let parameters = [data_parameter, agent_parameter, change_parameter].filter(x => x).join(', ');\r\n\r\n            var templateRes = bindTemplate(execution_method, {\r\n                model: GetCodeName(modelNode),\r\n                model_output: GetCodeName(modelOutputNode) || GetCodeName(modelNode),\r\n                method_name: GetCodeName(functionNode),\r\n                parameters,\r\n                data: GetCodeName(modelNode),\r\n                agent: GetCodeName(agentNode),\r\n                change: `${GetCodeName(modelNode)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n\r\n            var templateResInterface = bindTemplate(_executor_methods_interface, {\r\n                model: GetCodeName(modelNode),\r\n                model_output: GetCodeName(modelOutputNode) || GetCodeName(modelNode),\r\n                method_name: GetCodeName(functionNode),\r\n                parameters,\r\n                data: GetCodeName(modelNode),\r\n                agent: GetCodeName(agentNode),\r\n                change: `${GetCodeName(modelNode)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n\r\n            // var testTemplate = bindTemplate(_testClass, {\r\n            //     name: GetNodeProp(node, NodeProperties.CodeName),\r\n            //     tests: testProps.join(NEW_LINE)\r\n            // });\r\n            agentFunctionInterfaceDic[agent] = agentFunctionInterfaceDic[agent] || [];\r\n            agentFunctionDic[agent] = agentFunctionDic[agent] || [];\r\n            agentFunctionDic[agent].push(templateRes)\r\n            agentFunctionInterfaceDic[agent].push(templateResInterface)\r\n\r\n        });\r\n        let lastCase;\r\n        let static_methods = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                agentId,\r\n                model,\r\n                model_output,\r\n                method,\r\n            } = amd;\r\n            let cases = (agentModelDic[agent + model + amd.method] || []).map(_cases => {\r\n                var {\r\n                    agent,\r\n                    model,\r\n                    functType,\r\n                    funct\r\n                } = _cases;\r\n                if (amd.agent !== agent) { ''; }\r\n\r\n                let _case = bindTemplate(_exe_case, {\r\n                    agent,\r\n                    model,\r\n                    func_name: funct\r\n                });\r\n                return _case + NEW_LINE;\r\n            }).unique(x => x).join('');\r\n            return {\r\n                template: bindTemplate(_exe_method, {\r\n                    agent,\r\n                    model,\r\n                    cases,\r\n                    change: `${model}`,\r\n                    model_output: model_output || model,\r\n                    method\r\n                }) + NEW_LINE,\r\n                agent: agentId\r\n            }\r\n        });\r\n        let static_methods_interface = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                model,\r\n                method,\r\n                agentId,\r\n                model_output\r\n            } = amd;\r\n            return {\r\n                template: bindTemplate(_exe_method_interface, {\r\n                    agent,\r\n                    model,\r\n                    model_output: model_output || model,\r\n                    change: `${model}`,\r\n                    method\r\n                }) + NEW_LINE,\r\n                agent: agentId\r\n            }\r\n        });\r\n        Object.keys(agentFunctionDic).map(agent => {\r\n\r\n            var node = GraphMethods.GetNode(graph, agent);\r\n            let templateRes = bindTemplate(_executor_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionDic[agent].join(''),\r\n                staticentry: static_methods.unique(x => x.template).filter(x => x.agent === agent).map(x => x.template).join('')\r\n            });\r\n\r\n            let templateInterfaceRes = bindTemplate(_executor_class_interface, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionInterfaceDic[agent].unique(x => x).join(''),\r\n                staticentry: static_methods_interface.unique(x => x.template).filter(x => x.agent === agent).map(x => x.template).join('')\r\n\r\n            })\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}ExecutorTests`,\r\n                iname: `I${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Executors\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: templateInterfaceRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                // test: NamespaceGenerator.Generate({\r\n                //     template: testTemplate,\r\n                //     usings: [\r\n                //         ...STANDARD_CONTROLLER_USING,\r\n                //         ...STANDARD_TEST_USING,\r\n                //         `${namespace}${NameSpace.Executors}`,\r\n                //         `${namespace}${NameSpace.Model}`,\r\n                //         `${namespace}${NameSpace.Constants}`],\r\n                //     namespace,\r\n                //     space: NameSpace.Tests\r\n                // }),\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle, GetMethodsProperties } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/returns/returns_class.tpl';\r\nconst RETURN_GET_FUNCTION = './app/templates/models/returns/returns_funcs.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf8');\r\n        let _return_get_methods = fs.readFileSync(RETURN_GET_FUNCTION, 'utf8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n            var methods = allfilters.filter(x => {\r\n                var methodProps = GetMethodsProperties(x.id);\r\n                if (methodProps) {\r\n                    return methodProps[FunctionTemplateKeys.Agent] === agent.id;\r\n                }\r\n            }).map(filterNode => {\r\n                var methodProps = GetMethodsProperties(filterNode.id);\r\n                let model = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ModelOutput] || methodProps[FunctionTemplateKeys.Model]);\r\n                let properties = GraphMethods.getNodesByLinkType(graph, {\r\n                    id: model.id,\r\n                    direction: GraphMethods.SOURCE,\r\n                    type: LinkType.PropertyLink\r\n                }).filter(t => GetNodeProp(filterNode, NodeProperties.FilterPropreties) ? GetNodeProp(filterNode, NodeProperties.FilterPropreties)[t.id] : '')\r\n                    .map(t => {\r\n                        return `           result.${GetNodeProp(t, NodeProperties.CodeName)} = model.${GetNodeProp(t, NodeProperties.CodeName)};`\r\n                    }).join(NEW_LINE);\r\n                return bindTemplate(_return_get_methods, {\r\n                    function: GetNodeProp(filterNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    set_properties: properties\r\n                });\r\n            }).join(NEW_LINE);\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Return`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/exceptions/exceptions_class.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Exceptions`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst MODEL_GET_CLASS = './app/templates/models/gets/model_get_class.tpl';\r\nconst MODEL_GET_FUNCTION = './app/templates/models/gets/model_get_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION = './app/templates/models/gets/model_get_many_to_many_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD = './app/templates/models/gets/model_get_many_to_many_function_get_child.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelGetGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ModelGetGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _get_class = fs.readFileSync(MODEL_GET_CLASS, 'utf8');\r\n        let _get_methods = fs.readFileSync(MODEL_GET_FUNCTION, 'utf8');\r\n        let _get_methods_many_to_many = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION, 'utf8');\r\n        let _get_method_many_to_many_get_child = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD, 'utf8');\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        allmodels.filter(x => !GetNodeProp(x, NodeProperties.IsCompositeInput)).map(agent => {\r\n            var methods = allmodels.filter(x => x.id !== agent.id)\r\n                .filter(x => {\r\n                    if (GetNodeProp(agent, NodeProperties.HasLogicalChildren) && (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []).some(v => v === x.id)) {\r\n                        if (!GetNodeProp(agent, NodeProperties.ManyToManyNexus))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                })\r\n                .map(model => {\r\n                    return bindTemplate(_get_methods, {\r\n                        item_property: GetNodeProp(model, NodeProperties.IsOwnedByAgents) ? 'Owner' : GetNodeProp(agent, NodeProperties.CodeName),\r\n                        agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    });\r\n                });\r\n\r\n            if (GetNodeProp(agent, NodeProperties.ManyToManyNexus)) {\r\n                var childrenTypes = (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []);\r\n                if (childrenTypes && childrenTypes.length) {\r\n                    let namesAreUnique = childrenTypes.map(t => GetNodeProp(GraphMethods.GetNode(graph, t), NodeProperties.CodeName)).unique(x => x).length === childrenTypes.length;\r\n                    childrenTypes.map(ct => {\r\n                        methods.push(bindTemplate(_get_method_many_to_many_get_child, {\r\n                            model: GetNodeProp(GraphMethods.GetNode(graph, ct), NodeProperties.CodeName),\r\n                            many_to_many: GetNodeProp(agent, NodeProperties.CodeName)\r\n                        }));\r\n                    })\r\n                    enumerate([].interpolate(0, childrenTypes.length, function () {\r\n                        return childrenTypes.length + 1;\r\n                    })).filter(x => x.length === x.unique(t => t).length)\r\n                        .map(model => {\r\n                            let params = model.subset(0, model.length).map((t, index) => {\r\n                                if (childrenTypes.length === t) {\r\n                                    return false;\r\n                                }\r\n                                let paramName = `x${index}`;\r\n                                if (namesAreUnique) {\r\n                                    paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                }\r\n                                return bindTemplate(`{{_type}} ${paramName}`, {\r\n                                    _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                })\r\n                            }).filter(x => x);\r\n                            if (params.length) {\r\n                                methods.push(bindTemplate(_get_methods_many_to_many, {\r\n                                    parameters: params.join(', '),\r\n                                    query: model.subset(0, model.length).map((t, index) => {\r\n                                        if (childrenTypes.length === t) {\r\n                                            return false;\r\n                                        }\r\n\r\n                                        let paramName = `x${index}`;\r\n                                        if (namesAreUnique) {\r\n                                            paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                        }\r\n\r\n                                        return bindTemplate(`item != null && ${paramName} != null && item.{{_type}} == ${paramName}.Id`, {\r\n                                            _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                        })\r\n                                    }).filter(x => x).join(' && '),// \r\n                                    model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                                }));\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n            let templateRes = bindTemplate(_get_class, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods.unique(x => x).join(NEW_LINE)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Get`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import { NodeTypes } from \"./nodetypes\";\r\nimport { NodeProperties, GetRootGraph, GetNodeProp, GetState, GetCodeName } from \"../actions/uiactions\";\r\nimport { GetNodesLinkedTo } from \"../methods/graph_methods\";\r\nimport { bindTemplate } from \"./functiontypes\";\r\n\r\nexport const NAVIGATION = '-NAVIGATION';\r\nexport const APP_METHOD = '-APP_METHOD';\r\n\r\nexport const ComponentTypes = {\r\n    ReactNative: {\r\n        Badge: {},\r\n        Body: {},\r\n        Button: {\r\n            template: './app/templates/components/button.tpl',\r\n            properties: {\r\n                full: {\r\n                    nodeProperty: 'ButtonDefault',\r\n                    template: '{{value}}',\r\n                    options: ['transparent', 'bordered', 'rounded', 'block', 'full'],\r\n                    ui: true\r\n                },\r\n                color: {\r\n                    nodeProperty: 'ButtonColor',\r\n                    template: '{{value}}',\r\n                    options: ['primary', 'light', 'dark'],\r\n                    ui: true\r\n                },\r\n                onPress: {\r\n                    nodeProperty: 'onPress',\r\n                    template: '() => { {{value}} }',\r\n                    method: true,\r\n                    nowrap: true,\r\n                    options: [NAVIGATION, APP_METHOD],\r\n                    ui: true\r\n                }\r\n            },\r\n        },\r\n        Card: {},\r\n        CardItem: {},\r\n        CheckBox: {},\r\n        Container: {},\r\n        Content: {},\r\n        Fab: {},\r\n        Footer: {},\r\n        FooterTab: {},\r\n        Form: {\r\n            layout: true,\r\n            template: './app/templates/components/form.tpl'\r\n        },\r\n        H1: {},\r\n        H2: {},\r\n        H3: {},\r\n        Header: {\r\n            template: './app/templates/components/header.tpl',\r\n            properties: {\r\n                left: {\r\n                    nodeProperty: 'HeaderLeft',\r\n                    template: '{{value}}',\r\n                    options: ['true', 'false'],\r\n                    ui: true\r\n                },\r\n                right: {\r\n                    nodeProperty: 'HeaderRight',\r\n                    template: '{{value}}',\r\n                    options: ['true', 'false'],\r\n                    ui: true\r\n                },\r\n                title: {\r\n                    nodeProperty: 'HeaderTitle',\r\n                    template: '{{value}}',\r\n                    options: ['true', 'false'],\r\n                    ui: true\r\n                },\r\n            }\r\n        },\r\n        Icon: {},\r\n        Image: {\r\n            library: 'react-native',\r\n            template: './app/templates/components/image.tpl',\r\n            properties: {\r\n                data: {\r\n                    ui: true,\r\n                    nodeProperty: 'data',\r\n                    nodeTypes: [NodeTypes.DataChain],\r\n                    nodeFilter: (item) => {\r\n                        return GetNodeProp(item, NodeProperties.EntryPoint);\r\n                    },\r\n                    template: (node) => {\r\n                        let func = GetCodeName(GetNodeProp(node, 'data'));\r\n                        if (func)\r\n                            return bindTemplate(`DC.{{function}}({{value}})`, {\r\n                                function: func,\r\n                                value: `this.props.data`\r\n                            });\r\n                        return `this.props.data`\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        Input: {\r\n            template: './app/templates/components/input.tpl',\r\n            properties: {\r\n                item_attributes: {\r\n                    nodeProperty: NodeProperties.TextType,\r\n                    template: '{{value}}',\r\n                    options: ['fixedLabel', 'inlineLabel', 'floatingLabel', 'stackedLabel', 'regular', 'rounded', 'success', 'error', 'disabled'],\r\n                    ui: true\r\n                },\r\n                value: {\r\n                    nodeProperty: NodeProperties.Value,\r\n                    template: (node) => {\r\n                        let func = GetCodeName(GetNodeProp(node, 'data'));\r\n                        if (GetNodeProp(node, 'component-as-label')) {\r\n                            return `titleService.get('${GetNodeProp(node, NodeProperties.Label)}')`\r\n                        }\r\n                        if (func)\r\n                            return bindTemplate(`DC.{{function}}({{value}})`, {\r\n                                function: func,\r\n                                value: `this.props.data`\r\n                            });\r\n                        return `this.props.data`\r\n                    },\r\n                    parameterConfig: true,\r\n                    ui: true\r\n                },\r\n                label: {\r\n                    nodeProperty: NodeProperties.Label,\r\n                    template: `{titleService.get('{{value}}')}`\r\n                }\r\n            }\r\n        },\r\n        InputGroup: {},\r\n        Item: {},\r\n        Label: {},\r\n        Left: {},\r\n        List: {\r\n            library: 'react-native',\r\n            layout: true,\r\n            specialLayout: true,\r\n            template: './app/templates/components/list.tpl',\r\n            datasource: true,\r\n            properties: {\r\n                item_attributes: {\r\n                    nodeProperty: NodeProperties.TextType,\r\n                    template: '{{value}}',\r\n                    component_options: [NodeTypes.ComponentNode],\r\n                    ui: true\r\n                },\r\n            },\r\n            ui: true\r\n        },\r\n        ListItem: {\r\n            layout: true,\r\n            ui: true,\r\n            [NAVIGATION]: true,\r\n            [APP_METHOD]: true,\r\n            properties: {\r\n                onPress: {\r\n                    nodeProperty: 'onPress',\r\n                    template: '() => { {{value}} }',\r\n                    method: true,\r\n                    options: [NAVIGATION, APP_METHOD],\r\n                    ui: true\r\n                }\r\n            }\r\n        },\r\n        Picker: {},\r\n        Radio: {},\r\n        Right: {},\r\n        Segment: {},\r\n        Separator: {},\r\n        Spinner: {},\r\n        Subtitle: {},\r\n        SwipeRow: {},\r\n        Switch: {},\r\n        Tab: {},\r\n        TabBar: {},\r\n        TabContainer: {},\r\n        TabHeader: {},\r\n        Text: {\r\n            template: './app/templates/components/text.tpl',\r\n            properties: {\r\n                label: {\r\n                    ui: true,\r\n                    nodeProperty: 'component-as-label',\r\n                    boolean: true\r\n                },\r\n                data: {\r\n                    ui: true,\r\n                    nodeProperty: 'data',\r\n                    nodeTypes: [NodeTypes.DataChain],\r\n                    nodeFilter: (item) => {\r\n                        return GetNodeProp(item, NodeProperties.EntryPoint);\r\n                    },\r\n                    template: (node) => {\r\n                        let func = GetCodeName(GetNodeProp(node, 'data'));\r\n                        if (GetNodeProp(node, 'component-as-label')) {\r\n                            return `titleService.get('${GetNodeProp(node, NodeProperties.Label)}')`\r\n                        }\r\n                        if (func)\r\n                            return bindTemplate(`DC.{{function}}({{value}})`, {\r\n                                function: func,\r\n                                value: `this.props.data`\r\n                            });\r\n                        return `this.props.data`\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        Textarea: {},\r\n        Thumbnail: {\r\n            template: './app/templates/components/thumbnail.tpl',\r\n            properties: {\r\n                data: {\r\n                    ui: true,\r\n                    nodeProperty: 'data',\r\n                    nodeTypes: [NodeTypes.DataChain],\r\n                    nodeFilter: (item) => {\r\n                        return GetNodeProp(item, NodeProperties.EntryPoint);\r\n                    },\r\n                    template: (node) => {\r\n                        let func = GetCodeName(GetNodeProp(node, 'data'));\r\n                        if (func)\r\n                            return bindTemplate(`DC.{{function}}({{value}})`, {\r\n                                function: func,\r\n                                value: `this.props.data`\r\n                            });\r\n                        return `this.props.data`\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        Title: {},\r\n        Toast: {},\r\n        View: {\r\n            layout: true\r\n        },\r\n        LoginSelector: {\r\n            template: './app/templates/components/loginselector.tpl',\r\n            library: './login-selector'\r\n        }\r\n    }\r\n}\r\n\r\nObject.keys(ComponentTypes.ReactNative).map(key => {\r\n    if (ComponentTypes.ReactNative[key]) {\r\n        ComponentTypes.ReactNative[key].library = ComponentTypes.ReactNative[key].library || 'native-base';\r\n        ComponentTypes.ReactNative[key].key = key;\r\n        ComponentTypes.ReactNative[key].properties = ComponentTypes.ReactNative[key].properties || {};\r\n        ComponentTypes.ReactNative[key].properties.label = ComponentTypes.ReactNative[key].properties.label || {\r\n            nodeProperty: NodeProperties.Label,\r\n            template: `{titleService.get('{{value}}')}`,\r\n            ui: true\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const InstanceTypes = {\r\n    ScreenInstance: 'ScreenInstance',\r\n    Instance: 'Instance',\r\n    AppState: 'AppState',\r\n    PropInstance: 'PropInstance',\r\n    ApiProperty: 'ApiProperty',\r\n    ScreenParam: 'ScreenParam',\r\n    AddAnotherIfTheseDontMakeSense: 'add another if these dont make sense'\r\n}\r\n\r\nexport function GetListItemNode(id) {\r\n    let state = GetState();\r\n    let graph = GetRootGraph(state);\r\n    let nodes = GetNodesLinkedTo(graph, {\r\n        id\r\n    }).filter(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ComponentNode && GetNodeProp(x, NodeProperties.ComponentType) === ComponentTypes.ReactNative.ListItem.key);\r\n    if (nodes && nodes.length) {\r\n        return nodes[0];\r\n    }\r\n    return null;\r\n}\r\n","import { UITypes, NEW_LINE } from \"../constants/nodetypes\";\r\nimport { GetNodeById, NodeProperties, GetNodeProp, GetCodeName } from \"../actions/uiactions\";\r\nimport { GenerateMarkupTag } from \"./screenservice\";\r\nimport { GetCellProperties, getComponentProperty } from \"../methods/graph_methods\";\r\nimport { InstanceTypes } from \"../constants/componenttypes\";\r\n\r\n\r\nexport function GetPropertyConsts(id, language = UITypes.ReactNative) {\r\n    let node = GetNodeById(id);\r\n    let layout = GetNodeProp(node, NodeProperties.Layout);\r\n    let components = GetNodeComponents(layout);\r\n    return components;\r\n}\r\n\r\nexport function GetModelConsts(id, language = UITypes.ReactNative) {\r\n    let node = GetNodeById(id);\r\n    let layout = GetNodeProp(node, NodeProperties.Layout);\r\n    return GetNodeComponentsKeys(layout).map(cell => {\r\n        let cellProperties = GetCellProperties(layout, cell);\r\n\r\n        if (cellProperties && cellProperties.cellModel) {\r\n            return cellProperties.cellModel[cell];\r\n        }\r\n    }).filter(x => x).unique();\r\n}\r\n\r\nexport function GetModelPropertyConsts(id, language = UITypes.ReactNative) {\r\n    let node = GetNodeById(id);\r\n    let layout = GetNodeProp(node, NodeProperties.Layout);\r\n    return GetNodeComponentsKeys(layout).map(cell => {\r\n        //console.log(cell);\r\n        let cellProperties = GetCellProperties(layout, cell);\r\n        // console.log(cellProperties);\r\n\r\n        if (cellProperties && cellProperties.cellModelProperty) {\r\n            return cellProperties.cellModelProperty[cell];\r\n        }\r\n    }).filter(x => x).unique();\r\n}\r\n\r\nexport function GetRNModelInstances(id) {\r\n    let node = GetNodeById(id);\r\n    let layout = GetNodeProp(node, NodeProperties.Layout);\r\n    let componentProperties = GetNodeProp(node, NodeProperties.ComponentProperties)\r\n    return GetNodeComponentsKeys(layout).map(cell => {\r\n        // console.log(componentProperties);\r\n        let cellProperties = GetCellProperties(layout, cell);\r\n        // console.log(cellProperties);\r\n        // let loginModel = GetScreenInstance(state, ScreenInstances.LoginForm, const_loginModel) || CreateDefaultLoginModel();\r\n        if (cellProperties &&\r\n            cellProperties.cellModel &&\r\n            cellProperties.cellModel[cell]) {\r\n            let instanceType = getComponentProperty(componentProperties, cellProperties.cellModel[cell], 'instanceTypes');\r\n            if (instanceType != InstanceTypes.PropInstance &&\r\n                instanceType != InstanceTypes.ScreenParam && instanceType)\r\n                return `let ${(cellProperties.cellModel[cell])} = Get${instanceType}(${instanceType}.${GetCodeName(id)}, const_${(cellProperties.cellModel[cell])}) || {};` // CreateDefault${GetCodeName(id)}()\r\n        }\r\n    }).filter(x => x).unique();\r\n}\r\n\r\nexport function GetRNConsts(id) {\r\n    let prop_consts = GetPropertyConsts(id);\r\n    let model_consts = GetModelConsts(id);\r\n    let model_propconsts = GetModelPropertyConsts(id);\r\n\r\n    return [...prop_consts.map(x => {\r\n        return `const const_${(GetCodeName(x) || '').toJavascriptName()} = '${(GetCodeName(x) || '').toJavascriptName()}';`\r\n    }), ...model_consts.map(x => {\r\n        return GetRNModelConst(x);\r\n    }), ...model_propconsts.map(x => {\r\n        return `const const_${(GetCodeName(x) || '').toJavascriptName()} = '${(GetCodeName(x) || '').toJavascriptName()}';`\r\n    })]\r\n}\r\n\r\nexport function GetRNModelConst(x) {\r\n    return `const const_${(x || '').toJavascriptName()} = '${(x || '').toJavascriptName()}';`\r\n}\r\nexport function GetRNModelConstValue(x) {\r\n    return `const_${(x || '').toJavascriptName()}`;\r\n}\r\n\r\nexport function GetNodeComponents(layoutObj, item, currentRoot) {\r\n    let imports = [];\r\n    if (!layoutObj) { return imports; }\r\n    let { layout, properties } = layoutObj;\r\n    if (!currentRoot) {\r\n        currentRoot = layout;\r\n    }\r\n\r\n    Object.keys(currentRoot).map((item) => {\r\n        imports = [...imports, ...GetNodeComponents(layoutObj, item, currentRoot[item])];\r\n        if (properties[item]) {\r\n            let children = properties[item].children || {};\r\n            if (children[item])\r\n                imports.push(children[item]);\r\n        }\r\n    });\r\n\r\n    return imports;\r\n}\r\nexport function GetNodeComponentsKeys(layoutObj, item, currentRoot) {\r\n    let imports = [];\r\n    if (!layoutObj) {\r\n        return imports;\r\n    }\r\n\r\n    let { layout, properties } = layoutObj;\r\n    if (!currentRoot) {\r\n        currentRoot = layout;\r\n    }\r\n\r\n    Object.keys(currentRoot).map((item) => {\r\n        imports = [...imports, ...GetNodeComponentsKeys(layoutObj, item, currentRoot[item])];\r\n        if (properties[item]) {\r\n            let children = properties[item].children || {};\r\n            if (children[item])\r\n                imports.push(item);\r\n        }\r\n    });\r\n\r\n    return imports;\r\n}\r\n\r\nexport function buildLayoutTree(layoutObj, currentRoot, language, imports = [], node = null) {\r\n    let result = [];\r\n    let { layout, properties } = layoutObj;\r\n    if (!currentRoot) {\r\n        currentRoot = layout;\r\n    }\r\n    Object.keys(currentRoot).map((item, index) => {\r\n        result.push(createSection(layoutObj, item, currentRoot[item], index + 1, language, imports, node));\r\n    })\r\n    return result;\r\n}\r\nexport function createSection(layoutObj, item, currentRoot, index, language, imports, node) {\r\n    let { properties } = layoutObj;\r\n    let style = properties[item].style || {};\r\n    let children = properties[item].children || {};\r\n    let cellModel = properties[item].cellModel || {};\r\n    let cellRoot = properties[item].cellRoot = {};\r\n    let cellModelProperty = properties[item].cellModelProperty || {};\r\n    // <UserName value={loginModel.userName} onChange={value => {\r\n    //     this.props.updateScreenInstance(ScreenInstances.LoginForm, const_loginModel, const_userName, value);\r\n    // }} />\r\n    let tree = Object.keys(currentRoot).length ? buildLayoutTree(layoutObj, currentRoot, language, imports, node) : [];\r\n    if (children && children[item]) {\r\n        if (!imports.some(v => v === children[item]))\r\n            imports.push(children[item]);\r\n        tree = [addNewLine(GenerateMarkupTag(GetNodeById(children[item]), language, node, {\r\n            children,\r\n            cellModel,\r\n            cellModelProperty,\r\n            item\r\n        }), 2)];\r\n    }\r\n\r\n    let _style = { ...style };\r\n    [\"borderStyle\", \"borderWidth\", \"borderColor\", 'display'].map(t => {\r\n        delete _style[t];\r\n    });\r\n    Object.keys(_style).map(t => {\r\n        if (_style[t] === null) {\r\n            delete _style[t];\r\n        }\r\n    })\r\n    // _style.backgroundColor = '#' + ('dd4b39-3a405a-553d36-684a52-857885-94e8b4-72bda3-5e8c61-4e6151-3b322c-cfdbd5-e8eddf-f5cb5c-242423-333533'.split('-')[Math.floor(Math.random() * 5)]);\r\n    switch (language) {\r\n        case UITypes.ReactNative:\r\n            if (!Object.keys(_style).length || cellRoot[item]) {\r\n                return tree.tightenPs();\r\n            }\r\n            return (\r\n                `\r\n<View style={${JSON.stringify({ ..._style }, null, 4)}}>\r\n${addNewLine(tree.tightenPs())}\r\n</View>\r\n            `);\r\n    }\r\n\r\n}\r\n\r\nexport function addNewLine(str, count) {\r\n    let spaces = [].interpolate(0, count || 1, () => `    `).join('');\r\n    return ((str ? (NEW_LINE + spaces) : '') + (str || '')).split(NEW_LINE).filter(x => x.trim()).join(NEW_LINE + spaces)\r\n}","import { GetScreenNodes, GetCodeName, GetNodeTitle, GetConnectedScreenOptions, GetNodeProp, GetNodeById, NodesByType, GetState, GetJSCodeName, GetDataSourceNode, GetMethodParameters, GetComponentNodeProperties } from \"../actions/uiactions\";\r\nimport fs from 'fs';\r\nimport { bindTemplate } from \"../constants/functiontypes\";\r\nimport { NodeProperties, UITypes, NEW_LINE, NodeTypes } from \"../constants/nodetypes\";\r\nimport { buildLayoutTree, addNewLine, GetNodeComponents, GetRNConsts, GetRNModelInstances, GetRNModelConst, GetRNModelConstValue } from \"./layoutservice\";\r\nimport { ComponentTypes, GetListItemNode, InstanceTypes, NAVIGATION, APP_METHOD } from \"../constants/componenttypes\";\r\nimport { getComponentProperty, getClientMethod } from \"../methods/graph_methods\";\r\n\r\nexport function GenerateScreens(options) {\r\n    let temps = BindScreensToTemplate();\r\n    let result = {};\r\n\r\n    temps.map(t => {\r\n        result[t.name] = t;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function GenerateScreenMarkup(id, language) {\r\n    let screen = GetNodeById(id);\r\n    let screenOption = GetScreenOption(id, language);\r\n    if (screenOption) {\r\n        let imports = GetScreenImports(id, language);\r\n        let elements = [GenerateMarkupTag(screenOption, language)];\r\n        let template = fs.readFileSync('./app/templates/screens/rn_screen.tpl', 'utf8');\r\n\r\n        return bindTemplate(template, {\r\n            name: GetCodeName(screen),\r\n            title: `\"${GetNodeTitle(screen)}\"`,\r\n            imports: imports.join(NEW_LINE),\r\n            elements: elements.join(NEW_LINE),\r\n            component_did_mount: GetComponentDidMount(screenOption)\r\n        })\r\n    }\r\n}\r\n\r\nexport function GenerateScreenOptionSource(node, parent, language) {\r\n    switch (language) {\r\n        case UITypes.ReactNative:\r\n            return GenerateRNScreenOptionSource(node, null, language);\r\n    }\r\n}\r\n\r\nexport function GetDefaultElement(language) {\r\n    return '<View><Text>DE</Text></View>';\r\n}\r\nexport function GetItemRender(node, imports, language) {\r\n    let listItemNode = GetListItemNode(node.id);\r\n    imports.push(GenerateComponentImport(listItemNode, node, language))\r\n\r\n    return `(item)=> <${GetCodeName(listItemNode)} data={item} />`;\r\n}\r\nexport function GetItemRenderImport(node) {\r\n    let listItemNode = GetListItemNode(node.id);\r\n\r\n    return `(item)=> <${GetCodeName(listItemNode)} data={item} />`;\r\n}\r\n\r\nexport function GetItemData(node) {\r\n    let dataSourceNode = GetDataSourceNode(node.id);\r\n\r\n    return `(()=> {\r\n    return GetItems(Models.${GetCodeName(GetNodeProp(dataSourceNode, NodeProperties.UIModelType))});\r\n})()`\r\n}\r\n\r\nexport function GenerateRNScreenOptionSource(node, relativePath, language) {\r\n    let layoutObj = GetNodeProp(node, NodeProperties.Layout);\r\n    let componentType = GetNodeProp(node, NodeProperties.ComponentType);\r\n    let { specialLayout, template } = ComponentTypes[language][componentType] ? ComponentTypes[language][componentType] : {};\r\n\r\n    let imports = [];\r\n    let extraimports = [];\r\n    let layoutSrc;\r\n    if (!specialLayout) { // if not a List or something like that \r\n        layoutSrc = layoutObj ? buildLayoutTree(layoutObj, null, language, imports, node).join(NEW_LINE) : GetDefaultElement();\r\n    }\r\n    else {\r\n        extraimports.push(`import * as Models from '${relativePath.split('/').map(t => `../`).subset(2).join('')}model_keys.js';`)\r\n        if (layoutObj) {\r\n            buildLayoutTree(layoutObj, null, language, imports, node).join(NEW_LINE)\r\n        };\r\n        layoutSrc = bindTemplate(fs.readFileSync(template, 'utf8'), {\r\n            item_render: GetItemRender(node, extraimports, language),\r\n            data: GetItemData(node)\r\n        });\r\n    }\r\n\r\n    if (ComponentTypes) {\r\n        if (ComponentTypes[language]) {\r\n            if (ComponentTypes[language][componentType]) {\r\n                if (ComponentTypes[language][componentType].properties && ComponentTypes[language][componentType].properties) {\r\n                    let { onPress } = ComponentTypes[language][componentType].properties;\r\n                    if (onPress) {\r\n                        layoutSrc = wrapOnPress(layoutSrc, onPress, node);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let templateStr = fs.readFileSync('./app/templates/screens/rn_screenoption.tpl', 'utf8');\r\n\r\n    let results = [];\r\n    imports.map(t => {\r\n        let relPath = relativePath ? `${relativePath}/${(GetCodeName(node) || '').toJavascriptName()}` : `./src/components/${(GetCodeName(node) || '').toJavascriptName()}`;\r\n        results.push(...GenerateRNComponents(GetNodeById(t), relPath, language))\r\n    });\r\n    imports = imports.unique().map(t => GenerateComponentImport(t, node, language));\r\n\r\n    let _consts = GetRNConsts(node.id ? node.id : node) || [];\r\n    let modelInstances = GetRNModelInstances(node.id ? node.id : node) || [];\r\n    let screen_options = addNewLine([..._consts, ...modelInstances].unique().join(NEW_LINE), 4);\r\n\r\n\r\n    templateStr = bindTemplate(templateStr, {\r\n        name: GetCodeName(node),\r\n        relative_depth: [].interpolate(0, relativePath ? relativePath.split('/').length - 2 : 1, () => '../').join(''),\r\n        title: `\"${GetNodeTitle(node)}\"`,\r\n        screen_options,\r\n        imports: [...imports, ...extraimports].unique().join(NEW_LINE),\r\n        elements: addNewLine(layoutSrc, 4)\r\n    });\r\n    return [{\r\n        template: templateStr,\r\n        relative: relativePath ? relativePath : './src/components',\r\n        relativeFilePath: `./${(GetCodeName(node) || '').toJavascriptName()}.js`,\r\n        name: GetCodeName(node)\r\n    }, ...results];\r\n}\r\nexport function bindComponent(node, componentBindingDefinition) {\r\n    if (componentBindingDefinition && componentBindingDefinition.template) {\r\n        let template = fs.readFileSync(componentBindingDefinition.template, 'utf8');\r\n        let { properties } = componentBindingDefinition;\r\n        let bindProps = {};\r\n        Object.keys(properties).map(key => {\r\n            if (properties[key] && properties[key].nodeProperty) {\r\n                bindProps[key] = GetNodeProp(node, properties[key].nodeProperty);\r\n                if (properties[key].parameterConfig) {\r\n                    let parameterConfig = GetNodeProp(node, properties[key].nodeProperty);\r\n                    if (parameterConfig && parameterConfig[key]) {\r\n                        bindProps[key] = writeApiProperties({ [key]: parameterConfig[key] });\r\n                    }\r\n                }\r\n                else if (properties[key].template) {\r\n                    if (typeof (properties[key].template) === 'function') {\r\n                        bindProps[key] = properties[key].template(node);\r\n                    }\r\n                    else {\r\n                        let temp = bindProps[key];\r\n                        bindProps[key] = bindTemplate(properties[key].template, {\r\n                            value: temp\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n            if (!bindProps[key])\r\n                bindProps[key] = '';\r\n        });\r\n\r\n        return bindTemplate(template, bindProps);\r\n    }\r\n}\r\nexport function wrapOnPress(elements, onPress, node, options) {\r\n\r\n    let onpress = GetNodeProp(node, 'onPress');\r\n    switch (onpress) {\r\n        case APP_METHOD:\r\n            let key = 'onPress';\r\n            let methodParams = GetNodeProp(node, NodeProperties.ClientMethodParameters) || {};\r\n            let clientMethod = GetNodeProp(node, NodeProperties.ClientMethod);\r\n            let bodytext = 'let body = null;';\r\n            let parameterstext = `let parameters = null;`\r\n            if (clientMethod) {\r\n                let jsClientMethodName = GetJSCodeName(clientMethod);\r\n                let methodParameters = GetMethodParameters(clientMethod);\r\n                if (methodParameters) {\r\n\r\n                    let { parameters, body } = methodParameters;\r\n                    if (body) {\r\n                        let componentNodeProperties = GetComponentNodeProperties();\r\n                        let instanceType = getClientMethod(methodParams, key, 'body', 'instanceType');\r\n                        let componentModel = getClientMethod(methodParams, key, 'body', 'componentModel')\r\n                        let c_props = componentNodeProperties.find(x => x.id === getClientMethod(methodParams, key, 'body', 'component'));\r\n                        let c_props_options = c_props && c_props.componentPropertiesList ? c_props.componentPropertiesList : []\r\n                        if (c_props_options.length) {\r\n                            let c_prop_option = c_props_options.find(v => v.value === componentModel);\r\n                            if (c_prop_option) {\r\n                                let componentModelName = c_prop_option.value;\r\n                                bodytext = `let body = Get${instanceType}('${GetCodeName(c_props.id)}', '${componentModelName}');`\r\n                            }\r\n                        }\r\n                    }\r\n                    let pressfunc = `this.props.${jsClientMethodName}({ body, parameters })`;\r\n                    if (options && options.onPress && options.onPress.nowrap) {\r\n                        elements = bindTemplate(elements, {\r\n                            onPressEvent: `onPress={() => {\r\n${parameterstext}\r\n${bodytext}\r\n${pressfunc} }}`\r\n                        })\r\n                    }\r\n                    else {\r\n                        elements = bindTemplate(elements, { onPressEvent: '' });\r\n                        elements = `\r\n                        <TouchableOpacity onPress={() => {\r\n    ${parameterstext}\r\n    ${bodytext}\r\n    ${pressfunc} }}>\r\n                ${elements}\r\n                        </TouchableOpacity>`;\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n            break;\r\n        case NAVIGATION:\r\n            let navigation = GetNodeProp(node, NodeProperties.Navigation);\r\n            let targetScreen = GetNodeById(navigation);\r\n            let screenParameters = GetNodeProp(targetScreen, NodeProperties.ScreenParameters);\r\n            let params = [];\r\n            if (screenParameters) {\r\n                let navigationProperties = GetNodeProp(node, NodeProperties.NavigationParameters);\r\n                let parameterProperty = GetNodeProp(node, NodeProperties.NavigationParametersProperty) || {};\r\n                let componentProperties = GetNodeProp(node, NodeProperties.ComponentProperties);\r\n                screenParameters.map(sparam => {\r\n                    let { title, id } = sparam;\r\n                    let propName = navigationProperties[id];\r\n                    if (propName) {\r\n                        let propPropName = parameterProperty[propName];\r\n                        if (propPropName) {\r\n                            let listitem = '';\r\n                            if (GetNodeProp(node, NodeProperties.ComponentType) === ComponentTypes.ReactNative.ListItem.key) {\r\n                                listitem = '.item';\r\n                            }\r\n                            let propertyNode = GetNodeById(propPropName);\r\n                            if (propertyNode) {\r\n                                params.push(`${title}: this.props.${propName}${listitem}.${GetJSCodeName(propertyNode)}`);\r\n                            }\r\n                            else {\r\n                                params.push(`${title}: this.props.${propName}${listitem}`);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if (navigation && params) {\r\n                let navfunc = `navigate('${GetCodeName(navigation)}', {${(params).join(', ')}})`;\r\n                if (options && options.onPress && options.onPress.nowrap) {\r\n                    elements = bindTemplate(elements, {\r\n                        onPressEvent: `onPress={() => { ${navfunc} }}`\r\n                    })\r\n                }\r\n                else {\r\n                    elements = bindTemplate(elements, { onPressEvent: '' });\r\n                    elements = `\r\n    <TouchableOpacity onPress={() => { ${navfunc} }}>\r\n${elements}\r\n    </TouchableOpacity>`;\r\n                }\r\n            }\r\n            break;\r\n    }\r\n\r\n    return elements;\r\n}\r\nexport function GenerateRNComponents(node, relative = './src/components', language = UITypes.ReactNative) {\r\n    let result = [];\r\n    let layoutObj = GetNodeProp(node, NodeProperties.Layout);\r\n    let componentType = GetNodeProp(node, NodeProperties.ComponentType);\r\n    if (!layoutObj && (\r\n        !ComponentTypes[language] ||\r\n        !ComponentTypes[language][componentType] ||\r\n        !ComponentTypes[language][componentType].specialLayout)) {\r\n        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n            case NodeTypes.ComponentNode:\r\n                let template = fs.readFileSync('./app/templates/screens/rn_screenoption.tpl', 'utf8');\r\n                let elements = null;\r\n                if (ComponentTypes[language] && ComponentTypes[language][componentType]) {\r\n                    elements = bindComponent(node, ComponentTypes[language][componentType]);\r\n                    if (ComponentTypes[language][componentType].properties && ComponentTypes[language][componentType].properties) {\r\n                        let { onPress, nowrap } = ComponentTypes[language][componentType].properties;\r\n                        if (onPress) {\r\n                            elements = wrapOnPress(elements, onPress, node, ComponentTypes[language][componentType].properties);\r\n                        }\r\n                    }\r\n                }\r\n                result.push(\r\n                    {\r\n                        relative: relative ? relative : './src/components',\r\n                        relativeFilePath: `./${(GetCodeName(node) || '').toJavascriptName()}.js`,\r\n                        name: GetCodeName(node),\r\n                        template: bindTemplate(template, {\r\n                            name: GetCodeName(node),\r\n                            imports: '',\r\n                            screen_options: '',\r\n                            relative_depth: [].interpolate(0, relative ? relative.split('/').length - 2 : 1, () => '../').join(''),\r\n                            elements: elements || GetDefaultElement(),\r\n\r\n                        })\r\n                    });\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    else {\r\n        let src = GenerateRNScreenOptionSource(node, relative || './src/components', language);\r\n        if (src)\r\n            result.push(...src);\r\n    }\r\n    let components = GetNodeComponents(layoutObj);\r\n    components.map(component => {\r\n        let relPath = relative ? `${relative}/${(GetCodeName(node) || '').toJavascriptName()}` : `./src/components/${(GetCodeName(node) || '').toJavascriptName()}`;\r\n        let temp = GenerateRNComponents(component, relPath, language);\r\n        result.push(...temp);\r\n    })\r\n    return result;\r\n}\r\n\r\nexport function GenerateMarkupTag(node, language, parent, params) {\r\n    let {\r\n        children,\r\n        cellModel,\r\n        cellModelProperty,\r\n        item\r\n    } = (params || {});\r\n    let listItem = '';\r\n    switch (language) {\r\n        case UITypes.ReactNative:\r\n            // let layout = GetNodeProp(parent, NodeProperties.Layout);\r\n            let onChange = '';\r\n            let dataBinding = '';\r\n            let instanceType = '';\r\n            let model = '';\r\n            let property = '';\r\n            let componentProperties;\r\n            let modelName = '';\r\n            let parentLayoutProperties = null;\r\n            let propertyName = '';\r\n            let parentComponentApiConfig = null;\r\n            if (parent && children && cellModel && cellModelProperty && cellModel[item] && cellModelProperty[item]) {\r\n                componentProperties = GetNodeProp(parent, NodeProperties.ComponentProperties);\r\n                parentLayoutProperties = GetNodeProp(parent, NodeProperties.Layout);\r\n                instanceType = getComponentProperty(componentProperties, cellModel[item], 'instanceTypes');\r\n                model = GetRNModelConstValue(cellModel[item]);\r\n                var { componentApi } = getComponentProperty(parentLayoutProperties, item) || {};\r\n                parentComponentApiConfig = componentApi;\r\n                modelName = `${cellModel[item]}`.toJavascriptName();\r\n                propertyName = (GetCodeName(cellModelProperty[item]) || '').toJavascriptName();\r\n                property = GetRNModelConstValue(propertyName);\r\n\r\n            };\r\n            if (parent && language === 'ReactNative' && GetNodeProp(parent, NodeProperties.ComponentType) === ComponentTypes[language].ListItem.key) {\r\n                listItem = '.item';\r\n            }\r\n            switch (instanceType) {\r\n                case InstanceTypes.PropInstance:\r\n                    if (model && property) {\r\n                        dataBinding = `this.props.${modelName} && this.props.${modelName}${listItem} ? this.props.${modelName}${listItem}.${propertyName} : null`\r\n                    }\r\n                    else if (model) {\r\n                        dataBinding = `this.props.${modelName}${listItem}`\r\n                    }\r\n                    break;\r\n                case InstanceTypes.ScreenParam:\r\n                    dataBinding = `GetScreenParam('${modelName}')`;\r\n                    break;\r\n                case InstanceTypes.ApiProperty:\r\n                    debugger;\r\n                    break\r\n                default:\r\n                    if (model && property && GetCodeName(parent))\r\n                        onChange = `onChange={value => {\r\n    this.props.update${instanceType}(${model}, ${property}, value);\r\n}}`;\r\n                    break;\r\n            }\r\n            let apiProperties = '';\r\n            if (parentComponentApiConfig) {\r\n                apiProperties = writeApiProperties(parentComponentApiConfig);\r\n            }\r\n            if (dataBinding) {\r\n                dataBinding = `data={${dataBinding}}`;\r\n            }\r\n            return `<${GetCodeName(node)} ${dataBinding} ${apiProperties} ${onChange}/>`;\r\n    }\r\n}\r\nexport function writeApiProperties(apiConfig) {\r\n    var result = '';\r\n    var res = [];\r\n\r\n    if (apiConfig) {\r\n        for (var i in apiConfig) {\r\n            let property = '';\r\n            let { instanceType, model, modelProperty, apiProperty } = apiConfig[i];\r\n            switch (instanceType) {\r\n                case InstanceTypes.ScreenInstance:\r\n                    property = `GetScreenInstance('${model}', '${GetCodeName(modelProperty)}')`;\r\n                    break;\r\n                case InstanceTypes.ApiProperty:\r\n                    property = `this.props.${apiProperty}`;\r\n                    break;\r\n                default:\r\n                    throw 'write api properties unhandled case ' + instanceType;\r\n            }\r\n            //There is an opportunity to wrapp the result in a getter.\r\n            res.push(`${i}={${property}}`)\r\n        }\r\n    }\r\n\r\n    result = res.join(' ');\r\n\r\n    return result;\r\n}\r\nexport function GetScreenOption(id, type) {\r\n    let screen = GetNodeById(id);\r\n    let screenOptions = screen ? GetConnectedScreenOptions(screen.id) : null;\r\n    if (screenOptions && screenOptions.length) {\r\n        let reactScreenOption = screenOptions.find(x => GetNodeProp(x, NodeProperties.UIType) === UITypes.ReactNative);\r\n        if (reactScreenOption) {\r\n            return reactScreenOption;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function GetScreenImports(id, language) {\r\n    let screen = GetNodeById(id);\r\n    let screenOptions = screen ? GetConnectedScreenOptions(screen.id) : null;\r\n    if (screenOptions && screenOptions.length) {\r\n        let reactScreenOption = screenOptions.find(x => GetNodeProp(x, NodeProperties.UIType) === language);\r\n        if (reactScreenOption) {\r\n            return [GenerateImport(reactScreenOption, screen, language)];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function GetComponentDidMount(screenOption) {\r\n    let events = GetNodeProp(screenOption, NodeProperties.ComponentDidMountEvent);\r\n    let componentDidMount = `componentDidMount() {\r\n        this.props.setGetState();\r\n{{handles}}\r\n}\r\n`;\r\n    let evntHandles = [];\r\n    if (events && events.length) {\r\n        evntHandles = events.map(evt => {\r\n            let methodNode = GetNodeById(evt);\r\n            return `this.props.${GetJSCodeName(methodNode)}();`;\r\n        }).join(NEW_LINE);\r\n\r\n    }\r\n\r\n    return addNewLine(bindTemplate(componentDidMount, {\r\n        handles: addNewLine(evntHandles, 1)\r\n    }), 1)\r\n}\r\n\r\n\r\nexport function GenerateImport(node, parentNode, language) {\r\n    switch (language) {\r\n        case UITypes.ReactNative:\r\n            if (node) {\r\n                return `import ${GetCodeName(node)} from '../components/${(GetCodeName(node) || '').toJavascriptName()}'`;\r\n            }\r\n    }\r\n}\r\n\r\nexport function GenerateComponentImport(node, parentNode, language) {\r\n    switch (language) {\r\n        case UITypes.ReactNative:\r\n            if (node) {\r\n                return `import ${GetCodeName(node)} from './${(GetCodeName(parentNode) || '').toJavascriptName()}/${(GetCodeName(node) || '').toJavascriptName()}'`;\r\n            }\r\n    }\r\n}\r\n\r\nexport function GetScreens() {\r\n    var screens = GetScreenNodes();\r\n    return screens\r\n}\r\n\r\nexport function BindScreensToTemplate(language = UITypes.ReactNative) {\r\n    var screens = GetScreens();\r\n    let template = fs.readFileSync('./app/templates/screens/screen.tpl', 'utf8');\r\n    let moreresults = [];\r\n    let result = screens.map(screen => {\r\n        let screenOptions = GetConnectedScreenOptions(screen.id);\r\n        if (screenOptions && screenOptions.length) {\r\n            let reactScreenOption = screenOptions.find(x => GetNodeProp(x, NodeProperties.UIType) === UITypes.ReactNative);\r\n            if (reactScreenOption) {\r\n                template = GenerateScreenMarkup(screen.id, language);\r\n                let screenOptionSrc = GenerateScreenOptionSource(reactScreenOption, screen, language);\r\n                if (screenOptionSrc) {\r\n                    moreresults.push(...screenOptionSrc.filter(x => x));\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            template: bindTemplate(template, {\r\n                name: GetCodeName(screen),\r\n                title: `\"${GetNodeTitle(screen)}\"`\r\n            }),\r\n            relative: './src/screens',\r\n            relativeFilePath: `./${GetCodeName(screen).toJavascriptName()}.js`,\r\n            name: GetCodeName(screen)\r\n        }\r\n    });\r\n\r\n    moreresults.push({\r\n        template: bindTemplate(`{{source}}`, {\r\n            source: NodesByType(GetState(), [NodeTypes.Screen, NodeTypes.ScreenOption, NodeTypes.ComponentNode]).map(t => `export const ${GetCodeName(t)} = '${GetCodeName(t)}';`).join(NEW_LINE)\r\n        }),\r\n        relative: './src/actions',\r\n        relativeFilePath: `./screenInstances.js`,\r\n        name: ``\r\n    })\r\n\r\n    return [...result, ...moreresults];\r\n}","import { GenerateScreens } from '../service/screenservice';\r\nexport default class ScreenGenerator {\r\n\r\n    static Generate(options) {\r\n        let result = GenerateScreens(options);\r\n        return result;\r\n    }\r\n}","import { GetCodeName, GetNodeTitle, GetNodeProp, NodeProperties, GetConnectedScreenOptions } from \"../actions/uiactions\";\r\nimport fs from 'fs';\r\nimport { bindTemplate } from \"../constants/functiontypes\";\r\nimport { GetScreens } from \"./screenservice\";\r\nimport { NEW_LINE, UITypes } from \"../constants/nodetypes\";\r\nimport { EnableMenu } from \"../components/titles\";\r\n\r\nexport function GenerateScreens(options) {\r\n    let temps = BindScreensToTemplate();\r\n    let result = {};\r\n\r\n    temps.map(t => {\r\n        result[t.name] = t;\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function GenerateNavigation() {\r\n    let temps = GenerateNavigationRoot();\r\n    let result = {};\r\n\r\n    temps.map(t => {\r\n        result[t.name] = t;\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function GenerateNavigationRoot() {\r\n    let template = BindScreensToTemplate();\r\n    return [{\r\n        template,\r\n        relative: './src',\r\n        relativeFilePath: `./navigationstack.js`,\r\n        name: 'navigationstack'\r\n    }];\r\n}\r\nexport function BindScreensToTemplate() {\r\n    var screens = GetScreens();\r\n    let template = fs.readFileSync('./app/templates/navigation/navigation.tpl', 'utf8');\r\n    let import_template = `import {{name}} from './screens/{{namejs}}';`\r\n    let import_property = `     {{name}} : { screen: {{name}} }`;\r\n    let add_drawer = `const {{name}} = createDrawerNavigator(\r\n        {\r\n          Home: { screen: _{{name}} }\r\n        },\r\n        {\r\n          contentComponent: _{{name}}.drawerContent,\r\n          navigationOptions: _{{name}}.navigationOptions\r\n        }\r\n      );`\r\n    let importStatements = screens.sort((b, a) => {\r\n        return (GetNodeProp(a, NodeProperties.Priority) || 0) - (GetNodeProp(b, NodeProperties.Priority) || 0);\r\n    }).map(screen => {\r\n        let screenOptions = GetConnectedScreenOptions(screen.id);\r\n        let reactNativeOptions = screenOptions.find(x => GetNodeProp(x, NodeProperties.UIType) === UITypes.ReactNative);\r\n        let temp_template = import_template;\r\n        if (GetNodeProp(reactNativeOptions, NodeProperties.EnabledMenu)) {\r\n            temp_template = `import _{{name}} from './screens/{{namejs}}';`\r\n        }\r\n        return bindTemplate(temp_template, {\r\n            name: GetCodeName(screen),\r\n            namejs: GetCodeName(screen).toJavascriptName()\r\n        });\r\n    });\r\n\r\n    let combos = screens.map(screen => {\r\n        let screenOptions = GetConnectedScreenOptions(screen.id);\r\n        let reactNativeOptions = screenOptions.find(x => GetNodeProp(x, NodeProperties.UIType) === UITypes.ReactNative);\r\n        if (GetNodeProp(reactNativeOptions, NodeProperties.EnabledMenu)) {\r\n            return bindTemplate(add_drawer, {\r\n                name: GetCodeName(screen)\r\n            });\r\n        }\r\n        return false;\r\n    }).filter(x => x);\r\n\r\n\r\n    let properties = screens.map(screen => {\r\n        return bindTemplate(import_property, {\r\n            name: GetCodeName(screen)\r\n        });\r\n    });\r\n\r\n    return bindTemplate(template, {\r\n        imports: importStatements.join(NEW_LINE),\r\n        combos: combos.join(NEW_LINE),\r\n        properties: properties.join(',' + NEW_LINE)\r\n    })\r\n}","import { GenerateNavigation } from '../service/navigatorservice';\r\nexport default class NavigationGenerator {\r\n\r\n    static Generate(options) {\r\n        let result = GenerateNavigation(options);\r\n        return result;\r\n    }\r\n}","import { GenerateModelKeys } from '../service/keyservice';\r\nimport { GenerateUi } from '../service/uiservice';\r\nexport default class KeyGenerator {\r\n\r\n    static Generate(options) {\r\n        let temp = GenerateModelKeys(options);\r\n        let temp2 = GenerateUi(options);\r\n        let result = {};\r\n        temp.map(t => {\r\n            result[t.name] = t;\r\n        })\r\n        temp2.map(t => {\r\n            result[t.name] = t;\r\n        })\r\n        return result;\r\n    }\r\n}","import { bindTemplate } from \"../constants/functiontypes\";\r\nimport { GetCodeName, GetModelNodes, GetRootGraph } from \"../actions/uiactions\";\r\nimport { NEW_LINE } from \"../constants/nodetypes\";\r\nimport { GraphKeys } from \"../methods/graph_methods\";\r\n\r\nexport function GenerateModelKeys(options) {\r\n    let { state, key } = options;\r\n    let models = GetModelNodes();\r\n\r\n    let template = `export const {{name}} = '{{name}}';`\r\n\r\n    let templates = models.map(model => {\r\n        return bindTemplate(template, {\r\n            name: GetCodeName(model)\r\n        });\r\n    });\r\n\r\n    \r\n    return [{\r\n        template: templates.join(NEW_LINE),\r\n        relative: './src',\r\n        relativeFilePath: `./model_keys.js`,\r\n        name: 'model_keys'\r\n    }, {\r\n        template: bindTemplate(`{\r\n        \"appName\": \"{{appName}}\"\r\n    }`, { appName: GetRootGraph(state)[GraphKeys.PROJECTNAME] }),\r\n        relative: './',\r\n        relativeFilePath: `./app.json`,\r\n        name: 'app_json'\r\n    }];\r\n}","import { bindTemplate } from \"../constants/functiontypes\";\r\nimport { GetCodeName, GetModelNodes, GetRootGraph } from \"../actions/uiactions\";\r\nimport { NEW_LINE } from \"../constants/nodetypes\";\r\nimport { GraphKeys } from \"../methods/graph_methods\";\r\nimport fs from 'fs';\r\nexport function GenerateUi(options) {\r\n    let { state, key } = options;\r\n    let defaultColors = {\r\n        color1: '#3F51B5',\r\n        color2info: '#3F57D3',\r\n        color3success: '#5cb85c',\r\n        color4: '#d9534f',\r\n        color5warning: '#f0ad4e'\r\n    };\r\n    let alterNate = {\r\n        color1: '#494947',\r\n        color2info: '#35FF69',\r\n        color3success: '#44CCFF',\r\n        color4: '#7494EA',\r\n        color5warning: '#D138BF'\r\n    };\r\n    let colors = GetRootGraph(state)[GraphKeys.COLORSCHEME] || 'e5e1ee-dffdff-90bede-68edc6-90f3ff';\r\n    Object.keys(alterNate).map((t, _i) => {\r\n\r\n        alterNate[t] = '#' + (colors.split('-')[_i]);\r\n\r\n    })\r\n    let template = fs.readFileSync('./app/templates/themes/react_variables.tpl', 'utf8');\r\n\r\n    let templates = [bindTemplate(template, {\r\n        ...defaultColors,\r\n        ...alterNate\r\n    })];\r\n\r\n    return [{\r\n        template: templates.join(NEW_LINE),\r\n        relative: './native-base-theme/variables',\r\n        relativeFilePath: `./variables.js`,\r\n        name: 'native_base_theme_variables'\r\n    }];\r\n}","import { GetConfigurationNodes, GetNodeProp, NodeProperties } from \"../actions/uiactions\";\r\nimport { ConfigurationProperties } from \"../constants/nodetypes\";\r\nimport fs from 'fs';\r\nimport { bindTemplate } from \"../constants/functiontypes\";\r\nexport default class ConfigurationGenerator {\r\n\r\n    static Generate(options) {\r\n        let temp = GetConfigurationNodes(options);\r\n        let res = {};\r\n        temp.map(node => {\r\n            res.https = res.https || (GetNodeProp(node, NodeProperties.UseHttps) ? 'https' : 'http');\r\n            Object.keys(ConfigurationProperties).map(key => {\r\n                res[key] = res[key] || GetNodeProp(node, key);\r\n            });\r\n        });\r\n        let template = fs.readFileSync('./app/templates/components/configuration.tpl', 'utf8');\r\n        template = bindTemplate(template, res);\r\n\r\n        let temps = [{\r\n            template,\r\n            relative: './src',\r\n            relativeFilePath: `./configuration.js`,\r\n            name: 'configuration'\r\n        }];\r\n\r\n        let result = {};\r\n        temps.map(t => {\r\n            result[t.name] = t;\r\n        });\r\n\r\n        return result;\r\n    }\r\n}","import { GetConfigurationNodes, GetNodeProp, NodesByType, NodeTypes, GetJSCodeName, GetCodeName, NodeProperties, GetMaestroNode, GetControllerNode, GetMethodNodeProp } from \"../actions/uiactions\";\r\nimport { ConfigurationProperties, NEW_LINE } from \"../constants/nodetypes\";\r\nimport fs from 'fs';\r\nimport * as Titles from '../components/titles';\r\nimport { bindTemplate, MethodTemplateKeys, FunctionTemplateKeys, HTTP_METHODS } from \"../constants/functiontypes\";\r\nimport { addNewLine } from \"../service/layoutservice\";\r\nimport ControllerGenerator from \"./controllergenerator\";\r\nexport default class ControllerActionGenerator {\r\n\r\n    static GenerateService(options) {\r\n        let { state } = options;\r\n        let temp = NodesByType(state, NodeTypes.Method);\r\n        let serviceTemplate = fs.readFileSync('./app/templates/screens/service.tpl', 'utf8');\r\n        let methodTemplate = `\r\n{{methodName}}: async (params) => {\r\n    let { parameters } = params;\r\n    return redservice().{{methodType}}(endpoints.{{methodName}});\r\n}`;\r\n        let postMethodTemplate = `\r\n{{methodName}}: async (params) => {\r\n    let { body, parameters } = params;\r\n    return redservice().{{methodType}}(endpoints.{{methodName}}, body, {{options}});\r\n}`;\r\n        let endpoints = {};\r\n        temp = temp.map(method => {\r\n            let maestroNode = GetMaestroNode(method.id);\r\n            if (maestroNode) {\r\n                let controllerNode = GetControllerNode(maestroNode.id);\r\n                if (controllerNode) {\r\n                    if (GetNodeProp(method, NodeProperties.NoApiPrefix)) {\r\n                        endpoints[GetJSCodeName(method)] = `${GetNodeProp(method, NodeProperties.HttpRoute)}`\r\n                    }\r\n                    else {\r\n                        endpoints[GetJSCodeName(method)] = `api/${GetJSCodeName(controllerNode)}/${GetNodeProp(method, NodeProperties.HttpRoute)}`\r\n                    }\r\n                    let methodType = GetNodeProp(method, NodeProperties.HttpMethod);\r\n                    let asForm = 'null';\r\n                    if (GetNodeProp(method, NodeProperties.AsForm)) {\r\n                        asForm = '{ asForm : true }';\r\n                    }\r\n                    return bindTemplate(methodType === HTTP_METHODS.POST ? postMethodTemplate : methodTemplate, {\r\n                        methodName: GetJSCodeName(method),\r\n                        methodType: `${methodType}`.toLowerCase().split('http').join(''),\r\n                        options: asForm\r\n                    });\r\n                }\r\n            }\r\n\r\n        }).filter(x => x).join(',' + NEW_LINE);\r\n        return {\r\n            template: bindTemplate(serviceTemplate, {\r\n                service_methods: addNewLine(temp, 1),\r\n                endpoints: JSON.stringify(endpoints, null, 4)\r\n            }),\r\n            relative: './src/util',\r\n            relativeFilePath: `./controllerService.js`,\r\n            name: 'controllerService'\r\n        }\r\n    }\r\n    static Generate(options) {\r\n        let { state } = options;\r\n        let temp = NodesByType(state, NodeTypes.Method);\r\n\r\n        const ControllerMethodTemplate = `export function {{methodName}}({{arguments}}){\r\n    {{method_call}}\r\n}\r\n        `;\r\n        const controllerActionTemplate = `import * as Models from '../model_keys';\r\nimport service from '../util/controllerService';\r\nimport * as Util from './util';\r\n{{body}}\r\n        `;\r\n        let controllerActions = temp.map(node => {\r\n            let method_call = `return (dispatch, getState) => Util.simple(service.${GetJSCodeName(node)}, { ...parameters }, {\r\n    loading: Models.${GetCodeName(GetMethodNodeProp(node, FunctionTemplateKeys.ModelOutput)) || Titles.Unknown}, \r\n    objectType: Models.${GetCodeName(GetMethodNodeProp(node, FunctionTemplateKeys.ModelOutput)) || Titles.Unknown} \r\n})(dispatch, getState);`;\r\n            return bindTemplate(ControllerMethodTemplate, {\r\n                methodName: GetJSCodeName(node),\r\n                method_call: addNewLine(method_call, 1),\r\n                arguments: 'parameters'\r\n            });\r\n        }).join(NEW_LINE);\r\n\r\n        let temps = [{\r\n            template: bindTemplate(controllerActionTemplate, { body: addNewLine(controllerActions, 1) }),\r\n            relative: './src/actions',\r\n            relativeFilePath: `./controllerActions.js`,\r\n            name: 'controllerActions'\r\n        }, ControllerActionGenerator.GenerateService(options)];\r\n\r\n        let result = {};\r\n        temps.map(t => {\r\n            result[t.name] = t;\r\n        });\r\n\r\n        return result;\r\n    }\r\n}","import { GenerateChainFunctions } from \"../actions/uiactions\";\r\nimport { readFileSync } from \"fs\";\r\n\r\nexport default class DataChainGenerator {\r\n\r\n    static Generate(options) {\r\n        let funcs = GenerateChainFunctions();\r\n        let temps = [{\r\n            template: `import { GetItem, Chain } from './uiActions';\r\nimport * as Models from '../model_keys.js';\r\nimport RedObservable from './observable.js';\r\n${funcs}`,\r\n            relative: './src/actions',\r\n            relativeFilePath: `./data-chain.js`,\r\n            name: 'data-chain'\r\n        }, {\r\n            template: readFileSync('./app/utils/observable.js', 'utf8'),\r\n            relative: './src/actions',\r\n            relativeFilePath: './observable.js',\r\n            name: 'observable'\r\n        }];\r\n\r\n        let result = {};\r\n\r\n        temps.map(t => {\r\n            result[t.name] = t;\r\n        });\r\n\r\n        return result;\r\n    }\r\n}","import {\r\n    GetMethodNode, GetMethodDefinition, GetMethodNodeProp, GetCodeName,\r\n    GetCombinedCondition, GetValidationsSortedByAgent, GetNameSpace,\r\n    GetArbiterPropertyDefinitions,\r\n    GetNodeCode,\r\n    GetArbiterPropertyImplementations,\r\n    GetAgentNodes,\r\n    GetMethodFunctionValidation,\r\n    GetValidationNode,\r\n    safeFormatTemplateProperty\r\n} from \"../actions/uiactions\";\r\nimport { bindTemplate, FunctionTemplateKeys } from \"../constants/functiontypes\";\r\nimport fs from 'fs';\r\nimport { ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, NEW_LINE } from \"../constants/nodetypes\";\r\nimport NamespaceGenerator from \"../generators/namespacegenerator\";\r\nfunction GetMethodDefinitionValidationSection(id) {\r\n    let methodDefinition = GetMethodDefinition(id);\r\n    if (methodDefinition && methodDefinition.validation) {\r\n        return methodDefinition.validation;\r\n    }\r\n    console.warn('doesnt define a validation for method type ');\r\n    return false;\r\n}\r\nexport function GetValidationEntries(agent, as_interface, language = ProgrammingLanguages.CSHARP) {\r\n    let dictionary = GetValidationsSortedByAgent();\r\n    if (dictionary && dictionary[agent]) {\r\n\r\n\r\n        let validation_entry = as_interface ? './app/templates/validation/validation_entry_interface.tpl' : './app/templates/validation/validation_entry.tpl';\r\n        let validation_entry_template = fs.readFileSync(validation_entry, 'utf8');\r\n\r\n        let validatorNodes = dictionary[agent];\r\n        let methods = validatorNodes.map(valNode => {\r\n            return GetMethodNode(valNode.id);\r\n        }).unique().groupBy(x => {\r\n            var validationNode = GetValidationNode(x.id);\r\n            let validationSection = GetMethodDefinitionValidationSection(validationNode.id);\r\n            if (validationSection.asModel) {\r\n                return GetMethodNodeProp(x, validationSection.asModel)\r\n            }\r\n            return GetMethodNodeProp(x, FunctionTemplateKeys.Model)\r\n        });\r\n\r\n        let validation_case_template = fs.readFileSync('./app/templates/validation/validation_case.tpl', 'utf8');\r\n        return Object.keys(methods).map(modelId => {\r\n            let parameters = `${GetCodeName(modelId)} model, ${GetCodeName(agent)} agent, ${GetCodeName(modelId)}ChangeBy${GetCodeName(agent)} change_parameter`;\r\n            let conditions = '';\r\n            conditions = methods[modelId].map(method => {\r\n                let validationNode = GetValidationNode(method.id);\r\n                if (validatorNodes.some(v => v.id === validationNode.id))\r\n                    return bindTemplate(validation_case_template, {\r\n                        function_name: `FunctionName.${GetCodeName(method.id)}`,\r\n                        function: `${GetCodeName(validationNode)}`,\r\n                        parameters: `model, agent, change_parameter`\r\n                    })\r\n\r\n            }).filter(x => x);\r\n            return bindTemplate(validation_entry_template, {\r\n                parameters,\r\n                switch_parameter: 'change_parameter.FunctionName',\r\n                conditions: conditions.join(NEW_LINE)\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\nexport function GetValidationMethodImplementation(id, language = ProgrammingLanguages.CSHARP) {\r\n    let validationSection = GetMethodDefinitionValidationSection(id);\r\n    if (!validationSection) { return false }\r\n    let { implementation } = validationSection;\r\n    let implementation_template = fs.readFileSync(implementation, 'utf8');\r\n    let parameters = GetValidationMethodParametersImplementation(id, language);\r\n    let conditions = GetCombinedCondition(id, language);\r\n\r\n    return bindTemplate(implementation_template, {\r\n        parameters,\r\n        conditions,\r\n        function_name: GetCodeName(id)\r\n    })\r\n}\r\n\r\nexport function GetValidationMethodInterface(id, language = ProgrammingLanguages.CSHARP) {\r\n    let validationSection = GetMethodDefinitionValidationSection(id);\r\n    if (!validationSection) {\r\n        return false;\r\n    }\r\n    let { interface_ } = validationSection;\r\n\r\n    let interface_template = fs.readFileSync(interface_, 'utf8');\r\n    let parameters = GetValidationMethodParametersImplementation(id, language);\r\n\r\n    return bindTemplate(interface_template, {\r\n        parameters,\r\n        function_name: GetCodeName(id)\r\n    })\r\n}\r\n\r\nexport function GetAgentValidationInterface(agentId) {\r\n    let dictionary = GetValidationsSortedByAgent();\r\n    if (dictionary && dictionary[agentId]) {\r\n        let namespace = GetNameSpace();\r\n        let interface_ = BuildAgentValidationInterface(agentId, dictionary[agentId].map(t => t.id));\r\n        return NamespaceGenerator.Generate({\r\n            template: interface_,\r\n            usings: [\r\n                ...STANDARD_CONTROLLER_USING,\r\n                `${namespace}${NameSpace.Interface}`,\r\n                `${namespace}${NameSpace.Model}`,\r\n                `${namespace}${NameSpace.Parameters}`\r\n            ],\r\n            namespace,\r\n            space: NameSpace.Interface\r\n        });\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport function GenerateAgentValidationInterfacesAndImplementations() {\r\n    var agents = GetAgentNodes();\r\n    let result = {};\r\n    agents.map(agent => {\r\n        let agentName = GetCodeName(agent.id);\r\n        let template = GetAgentValidationImplementation(agent.id);\r\n        let _interface = GetAgentValidationInterface(agent.id);\r\n        if (!template || !_interface) {\r\n            return;\r\n        }\r\n        let temp = {\r\n            name: `${agentName}Validations`,\r\n            iname: `I${agentName}Validations`,\r\n            template,\r\n            interface: _interface\r\n        };\r\n        result[agentName] = temp;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function GetAgentValidationImplementation(agentId) {\r\n    let dictionary = GetValidationsSortedByAgent();\r\n    if (dictionary && dictionary[agentId]) {\r\n        let namespace = GetNameSpace();\r\n        let implementation = BuildAgentValidationImplementation(agentId, dictionary[agentId].map(t => t.id));\r\n        return NamespaceGenerator.Generate({\r\n            template: implementation,\r\n            usings: [\r\n                ...STANDARD_CONTROLLER_USING,\r\n                `${namespace}${NameSpace.Extensions}`,\r\n                `${namespace}${NameSpace.Model}`,\r\n                `${namespace}${NameSpace.Interface}`,\r\n                `${namespace}${NameSpace.Parameters}`,\r\n                `${namespace}${NameSpace.Controllers}`,\r\n                `${namespace}${NameSpace.Constants}`].filter(x => x),\r\n            namespace,\r\n            space: NameSpace.Validations\r\n        });\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function BuildAgentValidationInterface(agentId, validations, language = ProgrammingLanguages.CSHARP) {\r\n    let methods = validations.map(Validation => {\r\n        return GetValidationMethodInterface(Validation, language);\r\n    }).filter(x => x).join(NEW_LINE);\r\n    let template = fs.readFileSync('./app/templates/validation/validation_interface.tpl', 'utf8');\r\n    let validation_entries = GetValidationEntries(agentId, true, language);\r\n\r\n    return bindTemplate(template, {\r\n        agent_type: GetCodeName(agentId),\r\n        validations: validation_entries.join(NEW_LINE),\r\n        methods\r\n    });\r\n}\r\n\r\nexport function BuildAgentValidationImplementation(agentId, validations, language = ProgrammingLanguages.CSHARP) {\r\n    let methods = validations.map(validation_ => {\r\n        return GetValidationMethodImplementation(validation_, language);\r\n    }).filter(x => x).join(NEW_LINE);\r\n    let validation_entries = GetValidationEntries(agentId, false, language);\r\n    let template = fs.readFileSync('./app/templates/validation/validations_impl.tpl', 'utf8');\r\n    let _constructTemplate = fs.readFileSync('./app/templates/validation/constructor.tpl', 'utf8');\r\n    let constructor = bindTemplate(_constructTemplate, {\r\n        agent_type: `${GetCodeName(agentId)}`,\r\n        arbiters: GetArbiterPropertyImplementations(4, language)\r\n    });\r\n    return bindTemplate(template, {\r\n        agent_type: GetCodeName(agentId),\r\n        arbiters: GetArbiterPropertyDefinitions(),\r\n        validations: validation_entries.join(NEW_LINE),\r\n        constructor,\r\n        methods\r\n    });\r\n}\r\n\r\nexport function GetValidationMethodParameters(id) {\r\n    let validationSection = GetMethodDefinitionValidationSection(id);\r\n    let { params } = validationSection;\r\n    let methodNode = GetMethodNode(id);\r\n    return (params || []).map(param => {\r\n        return {\r\n            paramClass: GetMethodNodeProp(methodNode, param),\r\n            paramProperty: param\r\n        };\r\n    })\r\n}\r\n\r\nexport function GetValidationMethodParametersImplementation(id, language = ProgrammingLanguages.CSHARP) {\r\n    let parameters = GetValidationMethodParameters(id);\r\n    switch (language) {\r\n        case ProgrammingLanguages.CSHARP:\r\n            return parameters.map(t => `${GetCodeName(t.paramClass) || t.paramClass} ${safeFormatTemplateProperty(t.paramProperty && t.paramProperty.key ? t.paramProperty.key : t.paramProperty)}`).join(', ');\r\n\r\n    }\r\n}","import { GenerateAgentValidationInterfacesAndImplementations } from '../service/validationservice';\r\nexport default class ValidatorGenerator {\r\n\r\n    static Generate(options) {\r\n        let result = GenerateAgentValidationInterfacesAndImplementations();\r\n        return result;\r\n    }\r\n}","import ControllerGenerator from \"./controllergenerator\";\r\nimport * as Titles from \"../components/titles\";\r\nimport { NodeTypes, GeneratedTypes, Methods, GeneratedConstants, NodeProperties, ConstantsDeclaration, MakeConstant, ReactNativeTypes } from \"../constants/nodetypes\";\r\nimport ModelGenerator from \"./modelgenerators\";\r\nimport ExtensionGenerator from \"./extensiongenerator\";\r\nimport MaestroGenerator from \"./maestrogenerator\";\r\nimport ChangeParameterGenerator from \"./changeparametergenerator\";\r\nimport ConstantsGenerator from \"./constantsgenerator\";\r\nimport PermissionGenerator from \"./permission_conditiongenerator\";\r\nimport StreamProcessGenerator from \"./streamprocessgenerator\";\r\nimport { NodesByType, GetNodeProp } from \"../actions/uiactions\";\r\nimport StreamProcessOrchestrationGenerator from \"./streamprocessorchestrationgenerator\";\r\nimport ChangeResponseGenerator from \"./changeresponsegenerator\";\r\nimport ValidationRuleGenerator from \"./validationrulegenerator\";\r\nimport ExecutorGenerator from \"./executiongenerator\";\r\nimport ModelReturnGenerator from './modelreturngenerator';\r\nimport ModelExceptionGenerator from './modelexceptiongenerator';\r\nimport ModelItemFilter from './modelitemfiltergenerator';\r\nimport ModelGetGenerator from './modelgetgenerators';\r\nimport ReactNativeScreens from './screengenerator';\r\nimport ReactNativeNavigation from './navigationgenerator';\r\nimport ReactNativeKeys from './keygenerator';\r\nimport ReactNativeConfiguration from './configurationgenerator';\r\nimport ReactNativeControllerActions from './controlleractionsgenerator';\r\nimport ReactNativeDataChainFunctions from './datachaingenerator';\r\nimport ValidatorGenerator from \"./validatorgenerator\";\r\nexport default class Generator {\r\n    static generate(options) {\r\n        var { state, type, key } = options;\r\n        switch (type) {\r\n            case NodeTypes.Controller:\r\n                let temp = ControllerGenerator.Generate({ state, key });\r\n                return temp;\r\n            case NodeTypes.Model:\r\n                return ModelGenerator.Generate({ state, key });\r\n            case NodeTypes.ExtensionType:\r\n                return ExtensionGenerator.Generate({ state, key });\r\n            case NodeTypes.Maestro:\r\n                return MaestroGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeParameter:\r\n                return ChangeParameterGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeResponse:\r\n                return ChangeResponseGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Constants:\r\n                //Add enumerations here.\r\n                let models = NodesByType(state, NodeTypes.Model);\r\n                let functions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n                let enumerations = NodesByType(state, NodeTypes.Enumeration).map(node => {\r\n                    var enums = GetNodeProp(node, NodeProperties.Enumeration);\r\n                    var larg = {};\r\n                    enums.map(t => {\r\n                        larg[MakeConstant(t.value || t)] = t.value;\r\n                    })\r\n                    return {\r\n                        name: GetNodeProp(node, NodeProperties.CodeName),\r\n                        model: larg\r\n                    }\r\n                });\r\n                let streamTypes = {};\r\n                models.map(t => {\r\n                    streamTypes[GetNodeProp(t, NodeProperties.CodeName).toUpperCase()] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                let functionsTypes = {};\r\n                functions.map(t => {\r\n                    functionsTypes[GetNodeProp(t, NodeProperties.CodeName)] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                return ConstantsGenerator.Generate({\r\n                    values: [{\r\n                        name: GeneratedConstants.Methods,\r\n                        model: Methods\r\n                    }, {\r\n                        name: GeneratedConstants.StreamTypes,\r\n                        model: streamTypes\r\n                    }, {\r\n                        name: GeneratedConstants.FunctionName,\r\n                        model: functionsTypes\r\n                    }, ...enumerations],\r\n                    state,\r\n                    key\r\n                });\r\n            case GeneratedTypes.Permissions:\r\n                return PermissionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Validators:\r\n                return ValidatorGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcess:\r\n                return StreamProcessGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcessOrchestration:\r\n                return StreamProcessOrchestrationGenerator.Generate({ state, key });\r\n            // case GeneratedTypes.ValidationRule:\r\n            //     return ValidationRuleGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Executors:\r\n                return ExecutorGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelGet:\r\n                return ModelGetGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelReturn:\r\n                return ModelReturnGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelExceptions:\r\n                return ModelExceptionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelItemFilter:\r\n                return ModelItemFilter.Generate({ state, key });\r\n            case ReactNativeTypes.Screens:\r\n                return ReactNativeScreens.Generate({ state, key });\r\n            case ReactNativeTypes.Navigation:\r\n                return ReactNativeNavigation.Generate({ state, key });\r\n            case ReactNativeTypes.Keys:\r\n                return ReactNativeKeys.Generate({ state, key });\r\n            case ReactNativeTypes.Configuration:\r\n                return ReactNativeConfiguration.Generate({ state, key });\r\n            case ReactNativeTypes.ControllerActions:\r\n                return ReactNativeControllerActions.Generate({ state, key });\r\n            case ReactNativeTypes.DataChainFunctions:\r\n                return ReactNativeDataChainFunctions.Generate({ state, key });\r\n        }\r\n    }\r\n}","import { createGraph, updateWorkSpace, updateGraphTitle, updateGraphProperty } from '../methods/graph_methods';\r\nimport { SaveApplication, SaveGraph, CURRENT_GRAPH, GetRootGraph, Visual, toggleVisual, CONTEXT_MENU_VISIBLE, setVisual, CONTEXT_MENU_MODE, GetDispatchFunc, GetStateFunc } from './uiactions';\r\n\r\nvar fs = require('fs');\r\nconst { ipcRenderer } = require('electron')\r\nconst remote = require('electron').remote;\r\nvar dialog = remote.dialog;\r\n\r\nexport function openGraph() {\r\n    openRedQuickBuilderGraph()(_dispatch, _getState);\r\n}\r\n\r\nexport function toggleContextMenu(mode) {\r\n    if (mode) {\r\n        setVisual(CONTEXT_MENU_MODE, mode)(_dispatch, _getState);\r\n        setVisual(CONTEXT_MENU_VISIBLE, true)(_dispatch, _getState);\r\n    }\r\n    else {\r\n        toggleVisual(CONTEXT_MENU_VISIBLE)(_dispatch, _getState);\r\n    }\r\n}\r\nconst SELECTED_TAB = 'SELECTED_TAB';\r\nconst DEFAULT_TAB = 'DEFAULT_TAB';\r\nconst PARAMETER_TAB = 'PARAMETER_TAB';\r\nconst SCOPE_TAB = 'SCOPE_TAB';\r\nconst QUICK_MENU = 'QUICK_MENU';\r\nexport function setRightMenuTab(num) {\r\n    switch (num) {\r\n        case '1':\r\n            setVisual(SELECTED_TAB, DEFAULT_TAB)(_dispatch, _getState);\r\n            break;\r\n        case '2':\r\n            setVisual(SELECTED_TAB, PARAMETER_TAB)(_dispatch, _getState);\r\n            break;\r\n        case '3':\r\n            setVisual(SELECTED_TAB, SCOPE_TAB)(_dispatch, _getState);\r\n            break;\r\n        case '4':\r\n            setVisual(SELECTED_TAB, QUICK_MENU)(_dispatch, _getState);\r\n            break;\r\n    }\r\n}\r\nexport function openRedQuickBuilderGraph() {\r\n    return (dispatch, getState) => {\r\n        dialog.showOpenDialog(\r\n            remote.getCurrentWindow(),\r\n            {\r\n                filters: [\r\n                    { name: 'Red Quick Builder', extensions: [RED_QUICK_FILE_EXT$] }\r\n                ],\r\n                properties: ['openFile']\r\n            },\r\n            (fileName) => {\r\n                if (fileName === undefined) {\r\n                    console.log(\"You didn't save the file\");\r\n                    return;\r\n                }\r\n\r\n                if (fileName.length && Array.isArray(fileName)) {\r\n                    fileName = fileName[0];\r\n                }\r\n\r\n                if (!fileName.endsWith(RED_QUICK_FILE_EXT)) {\r\n                    fileName = `${fileName}${RED_QUICK_FILE_EXT}`;\r\n                }\r\n                console.log(fileName);\r\n                fs.readFile(fileName, { encoding: 'utf8' }, (err, res) => {\r\n                    if (err) {\r\n                        console.error(\"An error ocurred updating the file\" + err.message);\r\n                        console.log(err);\r\n                        return;\r\n                    }\r\n                    try {\r\n                        var opened_graph = JSON.parse(res);\r\n                        if (opened_graph) {\r\n                            var default_graph = createGraph();\r\n                            opened_graph = { ...default_graph, ...opened_graph };\r\n                            SaveApplication(opened_graph.id, CURRENT_GRAPH, dispatch);\r\n                            SaveGraph(opened_graph, dispatch);\r\n                        }\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                    console.warn(\"The file has been succesfully saved\");\r\n                });\r\n            });\r\n\r\n    }\r\n}\r\nexport function newRedQuickBuilderGraph() {\r\n    return (dispatch, getState) => {\r\n        var default_graph = createGraph();\r\n        var opened_graph = { ...default_graph };\r\n        SaveApplication(opened_graph.id, CURRENT_GRAPH, dispatch);\r\n        SaveGraph(opened_graph, dispatch);\r\n    }\r\n}\r\nexport function newGraph() {\r\n    newRedQuickBuilderGraph()(GetDispatchFunc(), GetStateFunc());\r\n}\r\nipcRenderer.on('save-graph-to-file-reply', (event, arg) => {\r\n    console.log(arg) // prints \"pong\"\r\n})\r\nexport const RED_QUICK_FILE_EXT = '.rqb';\r\nexport const RED_QUICK_FILE_EXT$ = 'rqb';\r\nexport function saveGraphToFile() {\r\n    return (dispatch, getState) => {\r\n        var currentGraph = GetRootGraph(getState());\r\n        // You can obviously give a direct path without use the dialog (C:/Program Files/path/myfileexample.txt)\r\n        if (currentGraph) {\r\n            var content = JSON.stringify(currentGraph);\r\n            dialog.showSaveDialog(\r\n                remote.getCurrentWindow(),\r\n                {\r\n                    filters: [\r\n                        { name: 'Red Quick Builder', extensions: [RED_QUICK_FILE_EXT$] }\r\n                    ]\r\n                },\r\n                (fileName) => {\r\n                    if (fileName === undefined) {\r\n                        console.log(\"You didn't save the file\");\r\n                        return;\r\n                    }\r\n\r\n                    if (!fileName.endsWith(RED_QUICK_FILE_EXT)) {\r\n                        fileName = `${fileName}${RED_QUICK_FILE_EXT}`;\r\n                    }\r\n                    console.log(fileName);\r\n                    updateGraphProperty(currentGraph, { prop: 'graphFile', value: fileName });\r\n                    fs.writeFile(fileName, content, (err) => {\r\n                        if (err) {\r\n                            console.error(\"An error ocurred updating the file\" + err.message);\r\n                            console.log(err);\r\n                            return;\r\n                        }\r\n\r\n                        console.warn(\"The file has been succesfully saved\");\r\n                    });\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveGraph(graph) {\r\n    return (dispatch, getState) => {\r\n        var currentGraph = GetRootGraph(getState());\r\n        if (currentGraph && currentGraph.graphFile) {\r\n            if (fs.existsSync(currentGraph.graphFile)) {\r\n                fs.writeFileSync(currentGraph.graphFile, JSON.stringify(currentGraph));\r\n            }\r\n        }\r\n    }\r\n}\r\nlet _dispatch = null;\r\nlet _getState = null;\r\nexport function setRemoteState() {\r\n    return (dispatch, getState) => {\r\n        _dispatch = dispatch;\r\n        _getState = getState;\r\n    }\r\n}\r\nexport function saveCurrentGraph() {\r\n    let state = _getState();\r\n    saveGraph(GetRootGraph(state))(_dispatch, _getState);\r\n}\r\n\r\nexport function setWorkingDirectory() {\r\n    return (dispatch, getState) => {\r\n        var currentGraph = GetRootGraph(getState());\r\n        // You can obviously give a direct path without use the dialog (C:/Program Files/path/myfileexample.txt)\r\n        if (currentGraph) {\r\n            dialog.showOpenDialog(\r\n                remote.getCurrentWindow(),\r\n                {\r\n                    properties: ['openDirectory']\r\n                },\r\n                (fileName) => {\r\n                    if (fileName === undefined) {\r\n                        console.log(\"You didn't save the file\");\r\n                        return;\r\n                    }\r\n\r\n                    console.log(fileName);\r\n                    currentGraph = updateWorkSpace(currentGraph, { workspace: fileName[0] });\r\n                    SaveGraph(currentGraph, dispatch)\r\n                });\r\n        }\r\n    }\r\n}","import { HandlerEvents } from '../ipc/handler-events';\r\nimport { GraphKeys } from '../methods/graph_methods';\r\nimport { GetRootGraph, NodesByType, GetNodeProp, NodeProperties, clearPinned, togglePinned, GetDispatchFunc, GetStateFunc, removeCurrentNode, newNode } from './uiactions';\r\nimport fs from 'fs';\r\nconst { ipcRenderer } = require('electron');\r\nimport path from 'path';\r\nimport { GeneratedTypes, NodeTypes, ReactNativeTypes } from '../constants/nodetypes';\r\nimport Generator from '../generators/generator';\r\nimport { fstat, writeFileSync } from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { uuidv4 } from '../utils/array';\r\nimport { platform } from 'os';\r\nimport { saveCurrentGraph, openGraph, toggleContextMenu, setRightMenuTab, newGraph } from './remoteActions';\r\n\r\nconst hub = {};\r\nipcRenderer.on('message-reply', (event, arg) => {\r\n    console.log(arg) // prints \"pong\"\r\n    let reply = JSON.parse(arg);\r\n    if (hub[reply.id]) {\r\n        hub[reply.id].resolve(reply.msg);\r\n    }\r\n    delete hub[reply.id];\r\n});\r\n\r\nipcRenderer.on('commands', (event, arg) => {\r\n    console.log(event);\r\n    console.log(arg);\r\n    switch (arg.args) {\r\n        case 'w':\r\n            clearPinned();\r\n            break;\r\n        case 'p':\r\n            togglePinned();\r\n            break;\r\n        case 'y':\r\n            publishFiles();\r\n            break;\r\n        case 's':\r\n            saveCurrentGraph();\r\n            break;\r\n        case 'o':\r\n            openGraph();\r\n            break;\r\n        case 'n':\r\n            newGraph();\r\n            break;\r\n        case 'm':\r\n            newNode();\r\n            break;\r\n        case 'l':\r\n            toggleContextMenu('layout');\r\n            break;\r\n        case 'x':\r\n            removeCurrentNode();\r\n            break;\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n            setRightMenuTab(arg.args);\r\n            break;\r\n    }\r\n});\r\n\r\nfunction message(msg, body) {\r\n    return {\r\n        msg,\r\n        body,\r\n        id: uuidv4()\r\n    }\r\n}\r\nfunction send(mess, body) {\r\n    var m = message(mess, body);\r\n    hub[m.id] = {};\r\n    let result = Promise.resolve().then(() => {\r\n        return new Promise((resolve, fail) => {\r\n            hub[m.id].resolve = resolve;\r\n            hub[m.id].fail = fail;\r\n        })\r\n    });\r\n    ipcRenderer.send('message', JSON.stringify(m));\r\n    return result;\r\n}\r\nexport function publishFiles() {\r\n    scaffoldProject({ filesOnly: true })(GetDispatchFunc(), GetStateFunc());\r\n}\r\n\r\nexport function scaffoldProject(options = {}) {\r\n    var { filesOnly } = options;\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let root = GetRootGraph(state);\r\n        let solutionName = root.title.split(' ').join('.');\r\n        let workspace = root.workspaces ? root.workspaces[platform()] || root.workspace : root.workspace;\r\n        ensureDirectory(path.join(workspace));\r\n        ensureDirectory(path.join(workspace, root.title));\r\n        (filesOnly ? Promise.resolve() : send(HandlerEvents.scaffold.message, {\r\n            solutionName,\r\n            appName: root[GraphKeys.PROJECTNAME] || '',\r\n            workspace: path.join(workspace, root.title, 'netcore')\r\n        })).then(() => {\r\n            return (filesOnly ? Promise.resolve() : send(HandlerEvents.reactnative.message, {\r\n                solutionName,\r\n                appName: root[GraphKeys.PROJECTNAME] || '',\r\n                workspace: path.join(workspace, root.title, 'reactnative')\r\n            }))\r\n        }).then(res => {\r\n            console.log('Finished Scaffolding.');\r\n            generateFiles(path.join(workspace, root.title, 'netcore'), solutionName, state);\r\n        }).then(() => {\r\n            console.log('generate react-native files');\r\n            generateReactNative(path.join(workspace, root.title, 'reactnative', root[GraphKeys.PROJECTNAME]), state);\r\n        }).then(() => {\r\n\r\n            let namespace = root ? root[GraphKeys.NAMESPACE] : null;\r\n            let server_side_setup = root ? root[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            if (server_side_setup) {\r\n\r\n                return generateFolderStructure(path.join(`./app/templates/net_core_mvc/identity/${server_side_setup}`), {\r\n                    model: GetNodeProp(userNode, NodeProperties.CodeName),\r\n                    namespace\r\n                }, null, path.join(path.join(workspace, root.title, 'netcore'), solutionName + path.join('.Web')));\r\n            }\r\n        }).then(() => {\r\n            console.log('Write react-native files')\r\n            let appName = root[GraphKeys.PROJECTNAME];\r\n            let version = 'v1';\r\n            if (appName) {\r\n                return generateFolderStructure(path.join(`./app/templates/react_native/${version}`), {\r\n\r\n                }, null, path.join(workspace, root.title, 'reactnative', appName));\r\n            }\r\n            else {\r\n                console.warn('No app name given');\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction generateFolderStructure(dir, lib, relative, target_dir) {\r\n    let directories = fs.readdirSync(dir);\r\n    relative = relative || dir;\r\n    directories.map(item => {\r\n        let dirPath = path.join(dir, item);\r\n        if (fs.existsSync(dirPath) && fs.lstatSync(dirPath).isDirectory()) {\r\n            let reldir = dir.substr(relative.length)\r\n            ensureDirectory(path.join(target_dir, reldir, item));\r\n            generateFolderStructure(dirPath, lib, relative, target_dir);\r\n        }\r\n        else if (fs.existsSync(dirPath)) {\r\n            let file = fs.readFileSync(dirPath, 'utf8');\r\n            let reldir = dir.substr(relative.length)\r\n            file = bindTemplate(file, lib);\r\n            fs.writeFileSync(path.join(target_dir, reldir, item), file, 'utf8');\r\n        }\r\n    })\r\n}\r\nfunction generateReactNative(workspace, state) {\r\n    let code_types = [...Object.values(ReactNativeTypes)];\r\n    let root = GetRootGraph(state);\r\n\r\n    code_types.map(code_type => {\r\n        let temp = Generator.generate({\r\n            type: code_type,\r\n            state\r\n        });\r\n\r\n        for (var fileName in temp) {\r\n            ensureDirectory(path.join(workspace, temp[fileName].relative));\r\n            writeFileSync(path.join(workspace, temp[fileName].relative, `${temp[fileName].relativeFilePath}`), temp[fileName].template)\r\n        }\r\n    })\r\n}\r\nfunction generateFiles(workspace, solutionName, state) {\r\n\r\n\r\n    var code_types = [\r\n        NodeTypes.Controller,\r\n        NodeTypes.Model,\r\n        NodeTypes.ExtensionType,\r\n        NodeTypes.Maestro,\r\n        ...Object.values(GeneratedTypes)\r\n    ];\r\n    let root = GetRootGraph(state);\r\n    code_types.map(code_type => {\r\n\r\n        var temp = Generator.generate({\r\n            type: code_type,\r\n            state\r\n        });\r\n        let area = CodeTypeToArea[code_type];\r\n        for (var fileName in temp) {\r\n            ensureDirectory(path.join(workspace, solutionName + area))\r\n            writeFileSync(path.join(workspace, solutionName + area, `${temp[fileName].name}.cs`), temp[fileName].template)\r\n            if (temp[fileName].interface) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Interfaces'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Interfaces', `${temp[fileName].iname || fileName}.cs`), temp[fileName].interface);\r\n            }\r\n            if (temp[fileName].test) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Tests', `${temp[fileName].tname || fileName}.cs`), temp[fileName].test);\r\n\r\n            }\r\n        }\r\n    })\r\n    if (root) {\r\n        ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Tests', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n        ensureDirectory(path.join(workspace, solutionName + '.Web'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Web', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n    }\r\n}\r\n\r\nfunction ensureDirectory(dir) {\r\n    if (!fs.existsSync(dir)) {\r\n        console.log('doesnt exist : ' + dir);\r\n    }\r\n    else {\r\n    }\r\n    let _dir_parts = dir.split(path.sep);\r\n    _dir_parts.map((_, i) => {\r\n        if (i > 1 || _dir_parts.length - 1 === i) {\r\n            let tempDir = path.join(..._dir_parts.subset(0, i + 1));\r\n            if (dir.startsWith(path.sep)) {\r\n                tempDir = `${path.sep}${tempDir}`;\r\n            }\r\n            if (!fs.existsSync(tempDir)) {\r\n                fs.mkdirSync(tempDir);\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\nconst CodeTypeToArea = {\r\n    [NodeTypes.Controller]: path.join('.Web', 'Controllers'),\r\n    [NodeTypes.Model]: '.Models',\r\n    [NodeTypes.ExtensionType]: '.Models',\r\n    [NodeTypes.Maestro]: '.Controllers',\r\n    [GeneratedTypes.ChangeParameter]: '.Models',\r\n    [GeneratedTypes.ChangeResponse]: '.Models',\r\n    [GeneratedTypes.ValidationRule]: '.Models',\r\n    [GeneratedTypes.Executors]: '.Controllers',\r\n    [GeneratedTypes.ModelGet]: '.Controllers',\r\n    [GeneratedTypes.ModelReturn]: '.Controllers',\r\n    [GeneratedTypes.ModelExceptions]: '.Controllers',\r\n    [GeneratedTypes.Constants]: '.Models',\r\n    [GeneratedTypes.Permissions]: '.Controllers',\r\n    [GeneratedTypes.Validators]: '.Controllers',\r\n    [GeneratedTypes.ModelItemFilter]: '.Controllers',\r\n    [GeneratedTypes.StreamProcess]: '.Controllers',\r\n    [GeneratedTypes.StreamProcessOrchestration]: '.Controllers'\r\n\r\n}","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as _ from './array';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as IPCEvents from '../actions/ipcActions';\r\nimport * as RemoteActions from '../actions/remoteActions';\r\nexport function mapStateToProps(state) {\r\n    return {\r\n        state\r\n    };\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        ...UIA,\r\n        ...IPCEvents,\r\n        ...RemoteActions\r\n    }, dispatch);\r\n}\r\n\r\n\r\n\r\nexport function UIConnect(component) {\r\n    return connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(component);\r\n}\r\nString.prototype.padding = function (n, c) {\r\n    var val = this.valueOf();\r\n    if (Math.abs(n) <= val.length) {\r\n        return val;\r\n    }\r\n    var m = Math.max((Math.abs(n) - this.length) || 0, 0);\r\n    var pad = Array(m + 1).join(String(c || ' ').charAt(0));\r\n    //      var pad = String(c || ' ').charAt(0).repeat(Math.abs(n) - this.length);\r\n    return (n < 0) ? pad + val : val + pad;\r\n    //      return (n < 0) ? val + pad : pad + val;\r\n};\r\n\r\nString.prototype.unCamelCase = function () {\r\n    var str = this || '';\r\n    return str\r\n        // insert a space between lower & upper\r\n        .replace(/([a-z])([A-Z])/g, '$1 $2')\r\n        // space before last upper in a sequence followed by lower\r\n        .replace(/\\b([A-Z]+)([A-Z])([a-z])/, '$1 $2$3')\r\n        // uppercase the first character\r\n        .replace(/^./, function (str) { return str.toUpperCase(); }).trim();\r\n};\r\nexport function enumerate(vects, j = 0) {\r\n    var results = [];\r\n\r\n    if (j < vects.length)\r\n        for (var i = 0; i < vects[j]; i++) {\r\n            var rest = enumerate(vects, j + 1);\r\n            var temp = [i];\r\n            if (rest.length) {\r\n                rest.map(r => {\r\n                    results.push([...temp, ...r])\r\n                });\r\n            }\r\n            else {\r\n                results.push(temp);\r\n            }\r\n        }\r\n    return results;\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <a className=\"logo\">\r\n                <span className=\"logo-mini\"><b>R</b>QB</span>\r\n                <span className=\"logo-lg\"><b>Red</b>QuickBuilder</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"main-header\">\r\n                {this.props.children}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-static-top\">\r\n                {this.props.children}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nclass SidebarToggle extends Component {\r\n    render() {\r\n        var me = this;\r\n        return (\r\n            <a\r\n                onClick={() => {\r\n                    me.props.toggleDashboardMinMax();\r\n                }}\r\n                className=\"sidebar-toggle\"\r\n                data-toggle=\"push-menu\" role=\"button\">\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SidebarToggle);","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarMenu extends Component {\r\n    render() {\r\n        let style = {};\r\n        if (this.props.paddingRight) {\r\n            style.paddingRight = this.props.paddingRight;\r\n        }\r\n        if (this.props.style) {\r\n            style = { ...style, ...this.props.style };\r\n        }\r\n        return (\r\n            <div className=\"navbar-custom-menu\" style={style}>\r\n                <ul className=\"nav navbar-nav\">\r\n                    {this.props.children}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const GraphOperationMenu = 'GraphOperationMenu';\r\nexport const GraphPropertiesMenu = 'GraphPropertiesMenu';\r\nexport const ApplicationMenu = 'ApplicationMenu';\r\n\r\nexport const RelativeMenuCss = {\r\n    position: 'relative',\r\n    zIndex: 'auto',\r\n    width: 'auto',\r\n    minheight: 'auto',\r\n    top: 'auto',\r\n    left: 'auto',\r\n    paddingTop: 0,\r\n    display: 'block'\r\n};\r\nexport const PaddingTopZero = {\r\n    paddingTop: 0\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { RelativeMenuCss } from '../constants/visual';\r\n\r\n\r\nexport default class Header extends Component {\r\n    relative() {\r\n        return this.props.relative ? RelativeMenuCss : {};\r\n    }\r\n    render() {\r\n        if (this.props.notactive) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <aside className={`main-sidebar`} style={this.relative()}>\r\n                <section className=\"sidebar\" style={{ height: 'auto' }}>\r\n                    {this.props.children}\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class ControlSideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"control-sidebar-menu\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class ControlSideBarMenuItem extends Component {\r\n    icon() {\r\n        return this.props.icon || 'fa fa-birthday-cake';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={`menu-icon ${this.icon()} bg-red`}></i>\r\n\r\n                    <div className=\"menu-info\">\r\n                        <h4 className=\"control-sidebar-subheading\">{this.props.title || ''}</h4>\r\n\r\n                        <p>{this.props.description || ''}</p>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ControlSideBarMenuHeader extends Component {\r\n    render() {\r\n        return (\r\n            <h3 className=\"control-sidebar-heading\">{this.props.title}</h3>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabPane extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-pane ${this.active()}`}>\r\n                {this.props.active ? this.props.children : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class FormControl extends Component {\r\n    _class() {\r\n        return this.props.sidebarform ? 'sidebar-form' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <form role=\"form\" className={this._class()} {...{ style: this.props.style || {} }}>\r\n                {this.props.children}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as Titles from './titles';\r\n\r\nexport default class SelectInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    options() {\r\n        if (this.props.options) {\r\n            return this.props.options.map((t, index) => {\r\n                return (<option key={`option-${index}`} value={t.value}>{t.title}</option>)\r\n            })\r\n        }\r\n        return [];\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>{this.label()}</label>\r\n                <select className=\"form-control\" disabled={this.disabled()} onSelect={(evt) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(evt.target.value);\r\n                    }\r\n                }}\r\n                    onChange={(evt) => {\r\n                        if (this.props.onChange) {\r\n                            this.props.onChange(evt.target.value);\r\n                        }\r\n                    }} value={this.value()}>\r\n                    <option value={''}>{this.props.defaultSelectText || Titles.Select}</option>\r\n                    {this.options()}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class TextInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    placeholder() {\r\n        return this.props.placeholder || '';\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.props.inputgroup ? 'input-group' : \"form-group\"}>\r\n                {this.props.inputgroup ? null : <label>{this.label()}</label>}\r\n                <input type=\"text\" disabled={this.disabled()} className={\"form-control\"} value={this.value()} onChange={(v) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(v.target.value);\r\n                    }\r\n                }} placeholder={this.placeholder()} />\r\n                {this.props.inputgroup ? (<span className=\"input-group-btn\">\r\n                    <button type=\"submit\" onClick={() => {\r\n                        if (this.props.onClick) {\r\n                            this.props.onClick();\r\n                        }\r\n                    }} name=\"search\" id=\"search-btn\" className=\"btn btn-flat\"><i className=\"fa fa-edit\"></i>\r\n                    </button>\r\n                </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport { NodeTypes, NodeProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\n\r\nconst BATCH_MODEL = 'BATCH_MODEL';\r\nconst BATCH_AGENT = 'BATCH_AGENT';\r\nconst BATCH_FUNCTION_NAME = 'BATCH_FUNCTION_NAME';\r\nclass BatchMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        if (!state || !UIA.HasCurrentGraph()) { return <div></div> }\r\n        return (\r\n            <TabPane active={true}>\r\n                <FormControl>\r\n                    <h3>{Titles.QuickMethods}</h3>\r\n                    <SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).toNodeSelect()}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n                            this.props.setVisual(BATCH_MODEL, value)\r\n                        }}\r\n                        value={UIA.Visual(state, BATCH_MODEL)} />\r\n                    <SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).filter(t => UIA.GetNodeProp(t, NodeProperties.IsAgent)).toNodeSelect()}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n                            this.props.setVisual(BATCH_AGENT, value);\r\n                        }}\r\n                        value={UIA.Visual(state, BATCH_AGENT)} />\r\n                    <TextInput\r\n                        label={Titles.MethodName}\r\n                        value={UIA.Visual(state, BATCH_FUNCTION_NAME)}\r\n                        onChange={(value) => {\r\n                            this.props.setVisual(BATCH_FUNCTION_NAME, value);\r\n                        }} />\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(BatchMenu)","\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class SideBarHeader extends Component {\r\n    render() {\r\n        return (<li className=\"header\" onClick={this.props.onClick}>{this.props.title}</li>);\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class CheckBox extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <div className=\"checkbox\">\r\n                    <label title={this.title()}>\r\n                        <input type=\"checkbox\" checked={this.value()} onChange={(v) => {\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange(v.target.checked);\r\n                            }\r\n                        }} />\r\n                        {this.label()}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport TabPane from './tabpane';\r\n\r\n\r\nexport default class ButtonList extends Component {\r\n    render() {\r\n        return (\r\n            <TabPane active={this.props.active}>\r\n                {(this.props.items || []).map((item) => {\r\n                    return <div\r\n                        title={item.title}\r\n                        key={`allowed-${item.id}`} className={`external-event ${this.props.isSelected(item) ? 'bg-red' : 'bg-green'}`}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis'\r\n                        }} onClick={() => {\r\n                            if (this.props.onClick) {\r\n                                this.props.onClick(item);\r\n                            }\r\n                        }} > {item.title}</div>;\r\n                })\r\n                }\r\n            </TabPane >)\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { RelativeMenuCss } from '../constants/visual';\r\n\r\n\r\nexport default class SideBar extends Component {\r\n    open() {\r\n        return this.props.open ? 'control-sidebar-open' : '';\r\n    }\r\n    extraWidth() {\r\n        return this.props.extraWide ? 'extra-wide' : '';\r\n    }\r\n    relative() {\r\n        return this.props.relative ? RelativeMenuCss : {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <aside style={{ ...this.relative(), ...(this.props.style || {}) }} className={`control-sidebar control-sidebar-dark ${this.open()} ${this.extraWidth()}`\r\n            }>\r\n                {this.props.children}\r\n            </aside >\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TreeViewMenu extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'menu-open' : '';\r\n    }\r\n    display() {\r\n        return this.props.open ? 'block' : 'block';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-dashboard\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={`treeview ${this.active()} ${this.open()}`}>\r\n                <a onClick={() => {\r\n                    if (this.props.toggle)\r\n                        this.props.toggle()\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    {this.props.hideIcon ? null : <i className={`${this.icon()}`}></i>}\r\n                    <span title={this.props.title}>{this.props.title}</span>\r\n                    {this.props.hideArrow ? null : (<span className=\"pull-right-container\">\r\n                        <i className=\"fa fa-angle-left pull-right\" ></i>\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                    {!this.props.hideArrow && this.props.right ? null : (<span className=\"pull-right-container\">\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                </a>\r\n                <ul className=\"treeview-menu\" style={{ display: this.display() }}>\r\n                    {this.props.children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"sidebar-menu tree\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItem extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick)\r\n                        this.props.onClick();\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.props.title}\r\n                    {this.props.right ? (<span class=\"pull-right-container\">\r\n                        {this.props.right}\r\n                    </span>) : null}\r\n                </a>\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport MainSideBar from './mainsidebar';\r\nimport FormControl from './formcontrol';\r\nimport SideBar from './sidebar';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode, NodeTypes, NodeProperties, MAIN_CONTENT, LAYOUT_VIEW, LinkProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { ComponentTypes, NAVIGATION } from '../constants/componenttypes';\r\nimport { GetConnectedNodeByType, CreateLayout, TARGET, GetParameterName, getComponentPropertyList, GetNodesLinkedTo, SOURCE } from '../methods/graph_methods';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst NAVIGATION_PARAMETERS = 'NAVIGATION_PARAMETERS';\r\nconst SELECTED_TAB = 'SELECTED_TAB'\r\nclass SideMenuContainer extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        if (this.props.tab && !UIA.VisualEq(state, SELECTED_TAB, this.props.tab)) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <MainSideBar notactive={!this.props.active} relative={true}>\r\n                    <SideBar relative={true} style={{ paddingTop: 0 }}>\r\n                        <SideBarMenu>\r\n                            <TreeViewMenu\r\n                                title={`${this.props.title}`}\r\n                                icon={(this.props.icon || 'fa fa-object-group')}\r\n                                open={UIA.Visual(state, this.props.visual)}\r\n                                active={UIA.Visual(state, this.props.visual)}\r\n                                onClick={() => {\r\n                                    this.props.toggleVisual(this.props.visual)\r\n                                }}>\r\n                                <br />\r\n                                {this.props.children}\r\n                            </TreeViewMenu>\r\n                        </SideBarMenu>\r\n                    </SideBar>\r\n                </MainSideBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(SideMenuContainer)","import { MethodFunctions, FunctionTypes, FunctionTemplateKeys, FunctionMethodTypes, HTTP_METHODS } from \"./functiontypes\";\r\nimport { NodeTypes, LinkProperties, NodeProperties, Methods } from \"./nodetypes\";\r\nimport {\r\n    ADD_NEW_NODE,\r\n    GetAgentNodes,\r\n    GetUsers,\r\n    GetNodeProp,\r\n    GetNodeTitle,\r\n    PerformGraphOperation,\r\n    CHANGE_NODE_PROPERTY,\r\n    ADD_LINK_BETWEEN_NODES,\r\n    GetNodeById,\r\n    ModelNotConnectedToFunction,\r\n    GetCurrentGraph,\r\n    GetStateFunc,\r\n    GetDispatchFunc,\r\n    NodePropertyTypes\r\n} from \"../actions/uiactions\";\r\nimport { newNode } from \"../methods/graph_methods\";\r\n\r\n\r\nexport const GetSpecificModels = {\r\n    type: 'get-specific-models',\r\n    method: (args) => {\r\n        let { model, dispatch, getState } = args;\r\n        //Check for existing method of this type\r\n\r\n        // if no methods exist, then create a new method.\r\n        // graph = GraphMethods.addNewNodeOfType(graph, options, NodeTypes.Model);\r\n        let agents = GetAgentNodes();\r\n\r\n        agents.map(agent => {\r\n            let methodProps;\r\n\r\n            if (ModelNotConnectedToFunction(agent.id, model.id, GetSpecificModels.type)) {\r\n                let outer_commands = [{\r\n                    operation: ADD_NEW_NODE,\r\n                    options: {\r\n                        nodeType: NodeTypes.Method,\r\n                        parent: model.id,\r\n                        groupProperties: {\r\n                        },\r\n                        properties: {\r\n                            [NodeProperties.NodePackage]: model.id,\r\n                            [NodeProperties.NodePackageType]: GetSpecificModels.type,\r\n                            [NodeProperties.NodePackageAgent]: agent.id,\r\n                            [NodeProperties.FunctionType]: FunctionTypes.Get_Object_Agent_Value__IListObject_By_Specific,\r\n                            [NodeProperties.MethodType]: Methods.GetAll,\r\n                            [NodeProperties.HttpMethod]: HTTP_METHODS.POST,\r\n                            [NodeProperties.UIText]: `${GetNodeTitle(model)} Get Specific Objects`\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.FunctionOperator }\r\n                        },\r\n                        callback: (methodNode) => {\r\n                            setTimeout(() => {\r\n                                new Promise((resolve) => {\r\n\r\n                                    let { constraints } = MethodFunctions[FunctionTypes.Get_Object_Agent_Value__IListObject_By_Specific];\r\n                                    let commands = [];\r\n                                    let permissionNode = null;\r\n                                    Object.values(constraints).map(constraint => {\r\n                                        switch (constraint.key) {\r\n                                            case FunctionTemplateKeys.Model:\r\n                                            case FunctionTemplateKeys.Agent:\r\n                                            case FunctionTemplateKeys.User:\r\n                                            case FunctionTemplateKeys.ModelOutput:\r\n                                                methodProps = { ...methodProps, ...(GetNodeProp(GetNodeById(methodNode.id), NodeProperties.MethodProps) || {}) };\r\n                                                if (constraint[NodeProperties.IsAgent]) {\r\n                                                    methodProps[constraint.key] = agent.id;\r\n                                                }\r\n                                                else if (constraint.key === FunctionTemplateKeys.User) {\r\n                                                    methodProps[constraint.key] = GetNodeProp(GetNodeById(agent.id), NodeProperties.UIUser) || GetUsers()[0].id;\r\n                                                }\r\n                                                else {\r\n                                                    methodProps[constraint.key] = model.id;\r\n                                                }\r\n                                                break;\r\n                                            case FunctionTemplateKeys.Permission:\r\n                                            case FunctionTemplateKeys.ModelFilter:\r\n                                                let perOrModelNode = null;\r\n                                                PerformGraphOperation([({\r\n                                                    operation: ADD_NEW_NODE,\r\n                                                    options: {\r\n                                                        parent: methodNode.id,\r\n                                                        nodeType: constraint.key === FunctionTemplateKeys.Permission ? NodeTypes.Permission : NodeTypes.ModelFilter,\r\n                                                        groupProperties: {\r\n                                                        },\r\n                                                        properties: {\r\n                                                            [NodeProperties.NodePackage]: model.id,\r\n                                                            [NodeProperties.NodePackageType]: GetSpecificModels.type,\r\n                                                            [NodeProperties.UIText]: `${GetNodeTitle(methodNode)} ${constraint.key === FunctionTemplateKeys.Permission ? NodeTypes.Permission : NodeTypes.ModelFilter}`\r\n                                                        },\r\n                                                        linkProperties: {\r\n                                                            properties: { ...LinkProperties.FunctionOperator }\r\n                                                        },\r\n                                                        callback: (newNode) => {\r\n                                                            methodProps = { ...methodProps, ...(GetNodeProp(GetNodeById(methodNode.id), NodeProperties.MethodProps) || {}) };\r\n                                                            methodProps[constraint.key] = newNode.id;\r\n                                                            perOrModelNode = newNode;\r\n                                                        }\r\n                                                    }\r\n                                                })])(dispatch, getState);\r\n                                                if (constraint.key === FunctionTemplateKeys.ModelFilter) {\r\n                                                    commands = [...commands, {\r\n                                                        operation: CHANGE_NODE_PROPERTY,\r\n                                                        options: {\r\n                                                            prop: NodeProperties.FilterAgent,\r\n                                                            id: perOrModelNode.id,\r\n                                                            value: agent.id\r\n                                                        }\r\n                                                    }, {\r\n                                                        operation: CHANGE_NODE_PROPERTY,\r\n                                                        options: {\r\n                                                            prop: NodeProperties.FilterModel,\r\n                                                            id: perOrModelNode.id,\r\n                                                            value: model.id\r\n                                                        }\r\n                                                    }, {\r\n                                                        operation: ADD_LINK_BETWEEN_NODES,\r\n                                                        options: {\r\n                                                            target: model.id,\r\n                                                            source: perOrModelNode.id,\r\n                                                            properties: { ...LinkProperties.ModelTypeLink }\r\n                                                        }\r\n                                                    }, {\r\n                                                        operation: ADD_LINK_BETWEEN_NODES,\r\n                                                        options: {\r\n                                                            target: agent.id,\r\n                                                            source: perOrModelNode.id,\r\n                                                            properties: { ...LinkProperties.AgentTypeLink }\r\n                                                        }\r\n                                                    }]\r\n                                                }\r\n                                                break;\r\n                                        }\r\n                                        commands = [...commands, ...[{\r\n                                            operation: CHANGE_NODE_PROPERTY,\r\n                                            options: {\r\n                                                prop: NodeProperties.MethodProps,\r\n                                                id: methodNode.id,\r\n                                                value: methodProps\r\n                                            }\r\n                                        }, {\r\n                                            operation: ADD_LINK_BETWEEN_NODES,\r\n                                            options: {\r\n                                                target: methodProps[constraint.key],\r\n                                                source: methodNode.id,\r\n                                                properties: { ...LinkProperties.FunctionOperator }\r\n                                            }\r\n                                        }]];\r\n                                    })\r\n                                    if (ModelNotConnectedToFunction(agent.id, model.id, GetSpecificModels.type, NodeTypes.Controller)) {\r\n                                        commands.push({\r\n                                            operation: ADD_NEW_NODE,\r\n                                            options: {\r\n                                                nodeType: NodeTypes.Controller,\r\n                                                properties: {\r\n                                                    [NodeProperties.NodePackage]: model.id,\r\n                                                    [NodeProperties.NodePackageType]: GetSpecificModels.type,\r\n                                                    [NodeProperties.NodePackageAgent]: agent.id,\r\n                                                    [NodeProperties.UIText]: `${GetNodeTitle(model)} ${GetNodeTitle(agent)} Controller`\r\n                                                },\r\n                                                linkProperties: {\r\n                                                    properties: { ...LinkProperties.FunctionOperator }\r\n                                                },\r\n                                                callback: (controllerNode) => {\r\n                                                    setTimeout(() => {\r\n                                                        if (ModelNotConnectedToFunction(agent.id, model.id, GetSpecificModels.type, NodeTypes.Maestro)) {\r\n                                                            PerformGraphOperation([{\r\n                                                                operation: ADD_NEW_NODE,\r\n                                                                options: {\r\n                                                                    nodeType: NodeTypes.Maestro,\r\n                                                                    parent: controllerNode.id,\r\n\r\n                                                                    properties: {\r\n                                                                        [NodeProperties.NodePackage]: model.id,\r\n                                                                        [NodeProperties.NodePackageType]: GetSpecificModels.type,\r\n                                                                        [NodeProperties.NodePackageAgent]: agent.id,\r\n                                                                        [NodeProperties.UIText]: `${GetNodeTitle(model)} ${GetNodeTitle(agent)} Maestro`\r\n                                                                    },\r\n                                                                    linkProperties: {\r\n                                                                        properties: { ...LinkProperties.MaestroLink }\r\n                                                                    },\r\n                                                                    callback: (maestroNode) => {\r\n                                                                        setTimeout(() => {\r\n                                                                            PerformGraphOperation([{\r\n                                                                                operation: ADD_LINK_BETWEEN_NODES,\r\n                                                                                options: {\r\n                                                                                    target: methodNode.id,\r\n                                                                                    source: maestroNode.id,\r\n                                                                                    properties: {\r\n                                                                                        ...LinkProperties.FunctionLink\r\n                                                                                    }\r\n                                                                                }\r\n                                                                            }])(dispatch, getState);\r\n\r\n                                                                        }, 1500)\r\n                                                                    }\r\n                                                                }\r\n                                                            }])(dispatch, getState)\r\n                                                        }\r\n\r\n                                                    }, 1500)\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    PerformGraphOperation(commands)(dispatch, getState)\r\n                                    resolve();\r\n                                })\r\n                            }, 1500)\r\n                        }\r\n                    }\r\n                }]\r\n                PerformGraphOperation(outer_commands)(dispatch, getState);\r\n            }\r\n        });\r\n    },\r\n    methodType: FunctionTypes.Get_Object_Agent_Value__IListObject_By_Specific\r\n}\r\n\r\nexport const GetAllModels = {\r\n    type: 'get-all-models',\r\n    method: CreateFunction({\r\n        nodePackageType: 'get-all-models',\r\n        methodType: Methods.GetAll,\r\n        httpMethod: HTTP_METHODS.GET,\r\n        functionType: FunctionTypes.Get_Agent_Value__IListObject,\r\n        functionName: `Get All`\r\n    }),\r\n    methodType: FunctionTypes.Get_Agent_Value__IListObject\r\n}\r\nexport const CreateLoginModels = {\r\n    type: 'login-models',\r\n    methodType: 'Login Models',\r\n    method: () => {\r\n        // let currentGraph = GetCurrentGraph(GetStateFunc()());\r\n        // currentGraph = newNode(currentGraph);\r\n        let nodePackageType = 'login-models';\r\n        let nodePackage = 'login-models';\r\n        PerformGraphOperation([({\r\n            operation: ADD_NEW_NODE,\r\n            options: {\r\n                nodeType: NodeTypes.Model,\r\n                // groupProperties: {},\r\n                properties: {\r\n                    [NodeProperties.NodePackage]: nodePackage,\r\n                    [NodeProperties.NodePackageType]: nodePackageType,\r\n                    [NodeProperties.UIText]: `Blue Login Model`\r\n                },\r\n                callback: (newNode) => {\r\n                    // methodProps = { ...methodProps, ...(GetNodeProp(GetNodeById(methodNode.id), NodeProperties.MethodProps) || {}) };\r\n                    // methodProps[constraint.key] = newNode.id;\r\n                    // perOrModelNode = newNode;\r\n                    setTimeout(() => {\r\n                        PerformGraphOperation([\r\n                            { propName: 'User Name' },\r\n                            { propName: 'Password' },\r\n                            { propName: 'Remember Me' }\r\n                        ].map(v => {\r\n                            let { propName } = v;\r\n                            return ({\r\n                                operation: ADD_NEW_NODE,\r\n                                options: {\r\n                                    nodeType: NodeTypes.Property,\r\n                                    linkProperties: {\r\n                                        properties: { ...LinkProperties.PropertyLink }\r\n                                    },\r\n                                    groupProperties: {\r\n                                    },\r\n                                    parent: newNode.id,\r\n                                    properties: {\r\n                                        [NodeProperties.NodePackage]: nodePackage,\r\n                                        [NodeProperties.UIAttributeType]: NodePropertyTypes.STRING,\r\n                                        [NodeProperties.NodePackageType]: nodePackageType,\r\n                                        [NodeProperties.UIText]: propName\r\n                                    }\r\n                                }\r\n                            });\r\n                        }))(GetDispatchFunc(), GetStateFunc());\r\n                    }, 1000);\r\n                }\r\n            }\r\n        }), ({\r\n            operation: ADD_NEW_NODE,\r\n            options: {\r\n                nodeType: NodeTypes.Model,\r\n                // groupProperties: {},\r\n                properties: {\r\n                    [NodeProperties.NodePackage]: nodePackage,\r\n                    [NodeProperties.NodePackageType]: nodePackageType,\r\n                    [NodeProperties.UIText]: `Blue Register View Model`\r\n                },\r\n                callback: (newNode) => {\r\n                    // methodProps = { ...methodProps, ...(GetNodeProp(GetNodeById(methodNode.id), NodeProperties.MethodProps) || {}) };\r\n                    // methodProps[constraint.key] = newNode.id;\r\n                    // perOrModelNode = newNode;\r\n                    setTimeout(() => {\r\n                        PerformGraphOperation([\r\n                            { propName: 'User Name' },\r\n                            { propName: 'Email' },\r\n                            { propName: 'Password' },\r\n                            { propName: 'Confirm Password' }\r\n                        ].map(v => {\r\n                            let { propName } = v;\r\n                            return ({\r\n                                operation: ADD_NEW_NODE,\r\n                                options: {\r\n                                    nodeType: NodeTypes.Property,\r\n                                    linkProperties: {\r\n                                        properties: { ...LinkProperties.PropertyLink }\r\n                                    },\r\n                                    groupProperties: {},\r\n                                    parent: newNode.id,\r\n                                    properties: {\r\n                                        [NodeProperties.NodePackage]: nodePackage,\r\n                                        [NodeProperties.UIAttributeType]: NodePropertyTypes.STRING,\r\n                                        [NodeProperties.NodePackageType]: nodePackageType,\r\n                                        [NodeProperties.UIText]: propName\r\n                                    }\r\n                                }\r\n                            });\r\n                        }))(GetDispatchFunc(), GetStateFunc());\r\n                    }, 1000);\r\n                }\r\n            }\r\n        })])(GetDispatchFunc(), GetStateFunc());\r\n    }\r\n}\r\nfunction CreateFunction(option) {\r\n    let {\r\n        nodePackageType,\r\n        methodType,\r\n        httpMethod,\r\n        functionType,\r\n        functionName\r\n    } = option;\r\n    if (!nodePackageType) {\r\n        throw 'missing node package type';\r\n    }\r\n    if (!methodType) {\r\n        throw 'missing method type';\r\n    }\r\n    if (!httpMethod) {\r\n        throw 'missing http method';\r\n    }\r\n    if (!functionType) {\r\n        throw 'function type missing';\r\n    }\r\n    if (!functionName) {\r\n        throw 'function name is missing';\r\n    }\r\n    return (args) => {\r\n        let { model, dispatch, getState } = args;\r\n        //Check for existing method of this type\r\n\r\n        // if no methods exist, then create a new method.\r\n        // graph = GraphMethods.addNewNodeOfType(graph, options, NodeTypes.Model);\r\n        let agents = GetAgentNodes();\r\n\r\n        agents.filter(x => !GetNodeProp(x, NodeProperties.ExcludeFromController)).map(agent => {\r\n            let methodProps;\r\n\r\n            if (ModelNotConnectedToFunction(agent.id, model.id, nodePackageType)) {\r\n                let outer_commands = [{\r\n                    operation: ADD_NEW_NODE,\r\n                    options: {\r\n                        nodeType: NodeTypes.Method,\r\n                        parent: model.id,\r\n                        groupProperties: {\r\n                        },\r\n                        properties: {\r\n                            [NodeProperties.NodePackage]: model.id,\r\n                            [NodeProperties.NodePackageType]: nodePackageType,\r\n                            [NodeProperties.NodePackageAgent]: agent.id,\r\n                            [NodeProperties.FunctionType]: functionType,\r\n                            [NodeProperties.MethodType]: methodType,\r\n                            [NodeProperties.HttpMethod]: httpMethod,\r\n                            [NodeProperties.UIText]: `${GetNodeTitle(model)} ${functionName}`\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.FunctionOperator }\r\n                        },\r\n                        callback: (methodNode) => {\r\n                            setTimeout(() => {\r\n                                new Promise((resolve) => {\r\n\r\n                                    let { constraints } = MethodFunctions[functionType];\r\n                                    let commands = [];\r\n                                    let permissionNode = null;\r\n                                    Object.values(constraints).map(constraint => {\r\n                                        switch (constraint.key) {\r\n                                            case FunctionTemplateKeys.Model:\r\n                                            case FunctionTemplateKeys.Agent:\r\n                                            case FunctionTemplateKeys.User:\r\n                                            case FunctionTemplateKeys.ModelOutput:\r\n                                                methodProps = { ...methodProps, ...(GetNodeProp(GetNodeById(methodNode.id), NodeProperties.MethodProps) || {}) };\r\n                                                if (constraint[NodeProperties.IsAgent]) {\r\n                                                    methodProps[constraint.key] = agent.id;\r\n                                                }\r\n                                                else if (constraint.key === FunctionTemplateKeys.User) {\r\n                                                    methodProps[constraint.key] = GetNodeProp(GetNodeById(agent.id), NodeProperties.UIUser) || GetUsers()[0].id;\r\n                                                }\r\n                                                else {\r\n                                                    methodProps[constraint.key] = model.id;\r\n                                                }\r\n                                                break;\r\n                                            case FunctionTemplateKeys.Permission:\r\n                                            case FunctionTemplateKeys.ModelFilter:\r\n                                                let perOrModelNode = null;\r\n                                                PerformGraphOperation([({\r\n                                                    operation: ADD_NEW_NODE,\r\n                                                    options: {\r\n                                                        parent: methodNode.id,\r\n                                                        nodeType: constraint.key === FunctionTemplateKeys.Permission ? NodeTypes.Permission : NodeTypes.ModelFilter,\r\n                                                        groupProperties: {\r\n                                                        },\r\n                                                        properties: {\r\n                                                            [NodeProperties.NodePackage]: model.id,\r\n                                                            [NodeProperties.NodePackageType]: nodePackageType,\r\n                                                            [NodeProperties.UIText]: `${GetNodeTitle(methodNode)} ${constraint.key === FunctionTemplateKeys.Permission ? NodeTypes.Permission : NodeTypes.ModelFilter}`\r\n                                                        },\r\n                                                        linkProperties: {\r\n                                                            properties: { ...LinkProperties.FunctionOperator }\r\n                                                        },\r\n                                                        callback: (newNode) => {\r\n                                                            methodProps = { ...methodProps, ...(GetNodeProp(GetNodeById(methodNode.id), NodeProperties.MethodProps) || {}) };\r\n                                                            methodProps[constraint.key] = newNode.id;\r\n                                                            perOrModelNode = newNode;\r\n                                                        }\r\n                                                    }\r\n                                                })])(dispatch, getState);\r\n                                                if (constraint.key === FunctionTemplateKeys.ModelFilter) {\r\n                                                    commands = [...commands, {\r\n                                                        operation: CHANGE_NODE_PROPERTY,\r\n                                                        options: {\r\n                                                            prop: NodeProperties.FilterAgent,\r\n                                                            id: perOrModelNode.id,\r\n                                                            value: agent.id\r\n                                                        }\r\n                                                    }, {\r\n                                                        operation: CHANGE_NODE_PROPERTY,\r\n                                                        options: {\r\n                                                            prop: NodeProperties.FilterModel,\r\n                                                            id: perOrModelNode.id,\r\n                                                            value: model.id\r\n                                                        }\r\n                                                    }, {\r\n                                                        operation: ADD_LINK_BETWEEN_NODES,\r\n                                                        options: {\r\n                                                            target: model.id,\r\n                                                            source: perOrModelNode.id,\r\n                                                            properties: { ...LinkProperties.ModelTypeLink }\r\n                                                        }\r\n                                                    }, {\r\n                                                        operation: ADD_LINK_BETWEEN_NODES,\r\n                                                        options: {\r\n                                                            target: agent.id,\r\n                                                            source: perOrModelNode.id,\r\n                                                            properties: { ...LinkProperties.AgentTypeLink }\r\n                                                        }\r\n                                                    }]\r\n                                                }\r\n                                                break;\r\n                                        }\r\n                                        commands = [...commands, ...[{\r\n                                            operation: CHANGE_NODE_PROPERTY,\r\n                                            options: {\r\n                                                prop: NodeProperties.MethodProps,\r\n                                                id: methodNode.id,\r\n                                                value: methodProps\r\n                                            }\r\n                                        }, {\r\n                                            operation: ADD_LINK_BETWEEN_NODES,\r\n                                            options: {\r\n                                                target: methodProps[constraint.key],\r\n                                                source: methodNode.id,\r\n                                                properties: { ...LinkProperties.FunctionOperator }\r\n                                            }\r\n                                        }]];\r\n                                    })\r\n                                    if (ModelNotConnectedToFunction(agent.id, model.id, nodePackageType, NodeTypes.Controller)) {\r\n                                        commands.push({\r\n                                            operation: ADD_NEW_NODE,\r\n                                            options: {\r\n                                                nodeType: NodeTypes.Controller,\r\n                                                properties: {\r\n                                                    [NodeProperties.NodePackage]: model.id,\r\n                                                    [NodeProperties.NodePackageType]: nodePackageType,\r\n                                                    [NodeProperties.NodePackageAgent]: agent.id,\r\n                                                    [NodeProperties.UIText]: `${GetNodeTitle(model)} ${GetNodeTitle(agent)} Controller`\r\n                                                },\r\n                                                linkProperties: {\r\n                                                    properties: { ...LinkProperties.FunctionOperator }\r\n                                                },\r\n                                                callback: (controllerNode) => {\r\n                                                    setTimeout(() => {\r\n                                                        if (ModelNotConnectedToFunction(agent.id, model.id, nodePackageType, NodeTypes.Maestro)) {\r\n                                                            PerformGraphOperation([{\r\n                                                                operation: ADD_NEW_NODE,\r\n                                                                options: {\r\n                                                                    nodeType: NodeTypes.Maestro,\r\n                                                                    parent: controllerNode.id,\r\n\r\n                                                                    properties: {\r\n                                                                        [NodeProperties.NodePackage]: model.id,\r\n                                                                        [NodeProperties.NodePackageType]: nodePackageType,\r\n                                                                        [NodeProperties.NodePackageAgent]: agent.id,\r\n                                                                        [NodeProperties.UIText]: `${GetNodeTitle(model)} ${GetNodeTitle(agent)} Maestro`\r\n                                                                    },\r\n                                                                    linkProperties: {\r\n                                                                        properties: { ...LinkProperties.MaestroLink }\r\n                                                                    },\r\n                                                                    callback: (maestroNode) => {\r\n                                                                        setTimeout(() => {\r\n                                                                            PerformGraphOperation([{\r\n                                                                                operation: ADD_LINK_BETWEEN_NODES,\r\n                                                                                options: {\r\n                                                                                    target: methodNode.id,\r\n                                                                                    source: maestroNode.id,\r\n                                                                                    properties: {\r\n                                                                                        ...LinkProperties.FunctionLink\r\n                                                                                    }\r\n                                                                                }\r\n                                                                            }])(dispatch, getState);\r\n\r\n                                                                        }, 1500)\r\n                                                                    }\r\n                                                                }\r\n                                                            }])(dispatch, getState)\r\n                                                        }\r\n\r\n                                                    }, 1500)\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    PerformGraphOperation(commands)(dispatch, getState)\r\n                                    resolve();\r\n                                })\r\n                            }, 1500)\r\n                        }\r\n                    }\r\n                }]\r\n                PerformGraphOperation(outer_commands)(dispatch, getState);\r\n            }\r\n        });\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport SideMenuContainer from './sidemenucontainer';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\nimport { clipboard } from 'electron';\r\nimport { GetSpecificModels, GetAllModels, CreateLoginModels } from '../constants/nodepackages';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport { PARAMETER_TAB } from './dashboard';\r\nimport SideBar from './sidebar';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport MainSideBar from './mainsidebar';\r\n\r\nclass QuickMethods extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        return (\r\n            <MainSideBar relative={true}>\r\n                <SideBar relative={true} style={{ paddingTop: 0 }}>\r\n                    <SideBarMenu>\r\n                        <TreeViewMenu\r\n                            title={Titles.QuickMethods}\r\n                            open={UIA.Visual(state, Titles.QuickMethods)}\r\n                            active={UIA.Visual(state, Titles.QuickMethods)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(Titles.QuickMethods)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu hideArrow={true} title={GetSpecificModels.type} icon={'fa fa-plus'} onClick={(() => {\r\n                                this.props.executeGraphOperation(currentNode, GetSpecificModels);\r\n                            })} />\r\n                            <TreeViewMenu hideArrow={true} title={GetAllModels.type} icon={'fa fa-plus'} onClick={(() => {\r\n                                this.props.executeGraphOperation(currentNode, GetAllModels);\r\n                            })} />\r\n                            <TreeViewMenu hideArrow={true} title={CreateLoginModels.type} icon={'fa fa-plus'} onClick={(() => {\r\n                                this.props.executeGraphOperation(currentNode, CreateLoginModels);\r\n                            })} />\r\n                        </TreeViewMenu>\r\n                    </SideBarMenu>\r\n                </SideBar>\r\n            </MainSideBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(QuickMethods)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Content extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"content-wrapper\" style={{ minHeight: '946px' }}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport MainSideBar from './mainsidebar';\r\nimport FormControl from './formcontrol';\r\nimport SideBar from './sidebar';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode, NodeTypes, NodeProperties, MAIN_CONTENT, LAYOUT_VIEW, LinkProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { ComponentTypes, NAVIGATION } from '../constants/componenttypes';\r\nimport { GetConnectedNodeByType, CreateLayout, TARGET, GetParameterName, getComponentPropertyList, GetNodesLinkedTo, SOURCE } from '../methods/graph_methods';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst NAVIGATION_PARAMETERS = 'NAVIGATION_PARAMETERS';\r\nclass NavigationParameterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) === UIA.NodeTypes.ComponentNode;\r\n        let screenOption = currentNode ? GetConnectedNodeByType(state, currentNode.id, NodeTypes.ScreenOption) || GetConnectedNodeByType(state, currentNode.id, NodeTypes.ComponentNode, TARGET) : null;\r\n        let _ui_type = UIA.GetNodeProp(screenOption, UIA.NodeProperties.UIType);\r\n        let componentTypes = ComponentTypes[_ui_type] || {};\r\n        let componentType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType);\r\n        let componentProperties = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentProperties);\r\n        let componentPropertiesList = getComponentPropertyList(componentProperties);\r\n        let components = [];\r\n        if (componentTypes[componentType] && componentTypes[componentType].properties) {\r\n            Object.keys(componentTypes[componentType].properties).map(key => {\r\n                let prop_obj = componentTypes[componentType].properties[key];\r\n                if (prop_obj && prop_obj.ui) {\r\n                    if (prop_obj.options) {\r\n                        let nodeproperty = UIA.GetNodeProp(currentNode, prop_obj.nodeProperty);\r\n                        if (nodeproperty === NAVIGATION) {\r\n                            components.push((<SelectInput\r\n                                label={Titles.Navigation}\r\n                                key={`${nodeproperty} - ${_ui_type} - ${componentType} - ${key}`}\r\n                                options={UIA.NodesByType(state, NodeTypes.Screen).toNodeSelect()}\r\n                                value={UIA.GetNodeProp(currentNode, NodeProperties.Navigation)}\r\n                                onChange={(value) => {\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: NodeProperties.Navigation,\r\n                                        id: currentNode.id,\r\n                                        value\r\n                                    });\r\n                                }} />));\r\n\r\n                            let screenParameters = UIA.GetNodeProp(UIA.GetNodeById(UIA.GetNodeProp(currentNode, NodeProperties.Navigation)), NodeProperties.ScreenParameters) || [];\r\n                            let treeMenu = (screenParameters.map(v => {\r\n                                let innertree = `${nodeproperty} - ${_ui_type} - ${componentType} - parameter - ${GetParameterName(v)}`;\r\n                                let navparameters = UIA.GetNodeProp(currentNode, NodeProperties.NavigationParameters) || {};\r\n                                let parameterProperty = UIA.GetNodeProp(currentNode, UIA.NodeProperties.NavigationParametersProperty) || {};\r\n                                return (\r\n                                    <TreeViewMenu\r\n                                        title={`${GetParameterName(v)}`}\r\n                                        icon={'fa fa-object-group'}\r\n                                        open={UIA.Visual(state, innertree)}\r\n                                        active={UIA.Visual(state, innertree)}\r\n                                        onClick={() => {\r\n                                            this.props.toggleVisual(innertree)\r\n                                        }}>\r\n                                        <FormControl>\r\n                                            <SelectInput\r\n                                                label={GetParameterName(v)}\r\n                                                key={`${innertree}`}\r\n                                                options={componentPropertiesList}\r\n                                                value={navparameters[v.id]}\r\n                                                onChange={(value) => {\r\n                                                    let parameters = UIA.GetNodeProp(currentNode, NodeProperties.NavigationParameters) || {};\r\n                                                    parameters[v.id] = value;\r\n                                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                        prop: NodeProperties.NavigationParameters,\r\n                                                        id: currentNode.id,\r\n                                                        value: parameters\r\n                                                    });\r\n                                                }} />\r\n                                            {componentProperties && navparameters && v && v.id && navparameters[v.id] ? <SelectInput\r\n                                                options={GetNodesLinkedTo(UIA.GetRootGraph(state), {\r\n                                                    id: componentProperties.properties[navparameters[v.id]],\r\n                                                    direction: SOURCE\r\n                                                }).toNodeSelect()}\r\n                                                onChange={(val) => {\r\n                                                    parameterProperty[navparameters[v.id]] = val;\r\n                                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                        prop: UIA.NodeProperties.NavigationParametersProperty,\r\n                                                        id: currentNode.id,\r\n                                                        value: parameterProperty\r\n                                                    });\r\n                                                }}\r\n                                                label={Titles.Property}\r\n                                                value={parameterProperty[navparameters[v.id]]} /> : null}\r\n                                        </FormControl>\r\n                                    </TreeViewMenu>)\r\n                            }));\r\n                            components.push(treeMenu);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <MainSideBar notactive={!active} relative={true}>\r\n                    <SideBar relative={true} style={{ paddingTop: 0 }}>\r\n                        <SideBarMenu>\r\n                            <TreeViewMenu\r\n                                title={`${Titles.Navigation}`}\r\n                                icon={'fa fa-object-group'}\r\n                                open={UIA.Visual(state, NAVIGATION_PARAMETERS)}\r\n                                active={UIA.Visual(state, NAVIGATION_PARAMETERS)}\r\n                                onClick={() => {\r\n                                    this.props.toggleVisual(NAVIGATION_PARAMETERS)\r\n                                }}>\r\n                                <br />\r\n                                {components}\r\n                            </TreeViewMenu>\r\n                        </SideBarMenu>\r\n                    </SideBar>\r\n                </MainSideBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(NavigationParameterMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\nclass ScreenActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Screen);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var show_dependent = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseUIDependsOn];;\r\n            var use_model_as_type = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseModelAsType);\r\n            var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n            var property_nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).filter(x => {\r\n                return x.id !== currentNode.id;\r\n            }).map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.ScreenOptions} />\r\n                <SelectInput\r\n                    label={Titles.Priority}\r\n                    options={[].interpolate(0, 10, x => x).map(t => ({ title: t, value: t }))}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Priority)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Priority,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_SCREEN_OPTIONS, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.ScreenOptionsLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddScreenOptions} description={Titles.AddScreenOptions} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ScreenActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, LinkProperties } from '../constants/nodetypes';\r\nimport { addValidatator, TARGET, createEventProp, GetNode, GetLinkChain, GetLinkChainItem, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { FunctionTypes, FunctionTemplateKeys } from '../constants/functiontypes';\r\n\r\nclass DataSourceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.DataSource);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIModelType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                            })\r\n                        }}\r\n                        label={Titles.Models}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.UIModelType)}\r\n                        options={UIA.GetModelNodes().toNodeSelect()}\r\n                    />\r\n                </FormControl>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    this.props.graphOperation(UIA.NEW_CONDITION_NODE, {\r\n                        parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                        groupProperties: {\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.ConditionLink }\r\n                        }\r\n                    });\r\n                }}>{Titles.AddCondition}</button>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(DataSourceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTabs extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs nav-justified control-sidebar-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTab extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-wrench\";\r\n    }\r\n    active() {\r\n        return this.props.active ? 'active' : \"\";\r\n    }\r\n    ariaExapanded() {\r\n        return this.props.active ? 'true' : 'false';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded={this.ariaExapanded()}>\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties, UITypes, MAIN_CONTENT, MIND_MAP, LAYOUT_VIEW } from '../constants/nodetypes';\r\nimport { GetNode, CreateLayout } from '../methods/graph_methods';\r\nimport { ComponentTypes } from '../constants/componenttypes';\r\nclass ScreenOptionsActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ScreenOption);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n\r\n        }\r\n        let componentTypes = ComponentTypes[UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIType)] || {};\r\n        let componentType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType);\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.ScreenOptions} />\r\n                <SelectInput\r\n                    label={Titles.UIType}\r\n                    options={Object.keys(UITypes).map(t => ({ title: t, value: t }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIType,\r\n                            id: currentNode.id,\r\n                            value: value\r\n                        });\r\n                    }}\r\n\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIType)} />\r\n\r\n                <CheckBox\r\n                    label={Titles.EnableMenu}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.EnabledMenu)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.EnabledMenu,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />\r\n\r\n                <SelectInput label={Titles.AddComponentDidMount}\r\n                    options={UIA.NodesByType(state, UIA.NodeTypes.Method).toNodeSelect()}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentDidMountEvent)}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                            source: id\r\n                        })\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ComponentDidMountEvent,\r\n                            id: currentNode.id,\r\n                            value: [value, ...(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentDidMountEvent) || [])].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {}\r\n                        });\r\n                    }} />\r\n                <ButtonList active={true} isSelected={(item) => {\r\n                    var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentDidMountEvent) || [];\r\n                    return item && types.some(x => x === item.id);\r\n                }}\r\n                    items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentDidMountEvent) || []).map(t => {\r\n                        return GetNode(UIA.GetCurrentGraph(state), t);\r\n                    }).toNodeSelect()}\r\n                    onClick={(item) => {\r\n                        let id = currentNode.id;\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentDidMountEvent) || [];\r\n                        var ids = types;\r\n                        if (types.some(t => item.id === t)) {\r\n                            ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                        }\r\n                        else {\r\n                            ids = [...ids, item.id].unique(x => x)\r\n                        }\r\n                        this.props.graphOperation([{\r\n                            operation: UIA.CHANGE_NODE_PROPERTY,\r\n                            options: {\r\n                                prop: UIA.NodeProperties.ComponentDidMountEvent,\r\n                                id: currentNode.id,\r\n                                value: ids\r\n                            }\r\n                        }, {\r\n                            operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                            options: {\r\n                                target: item.id,\r\n                                source: id\r\n                            }\r\n                        }]);\r\n                    }} />\r\n\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Layout,\r\n                            id: currentNode.id,\r\n                            value: UIA.GetNodeProp(currentNode, NodeProperties.Layout) || CreateLayout()\r\n                        });\r\n                        this.props.setVisual(MAIN_CONTENT, LAYOUT_VIEW);\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.SetupLayout} description={Titles.SetupLayout} />\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_COMPONENT_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            properties: {\r\n                                [UIA.NodeProperties.UIType]: UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIType)\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.ComponentLink }\r\n                            }\r\n                        });\r\n\r\n                        this.props.setVisual(MAIN_CONTENT, LAYOUT_VIEW);\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddComponentNew} description={Titles.AddComponentNew} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ScreenOptionsActivityMenu)","export const ServiceTypes = {\r\n    Facebook: 'Facebook',\r\n    Twitter: 'Twitter',\r\n    Google: 'Google',\r\n    Microsoft: 'Microsoft'\r\n}\r\n\r\nexport const ServiceTypeSetups = {\r\n    [ServiceTypes.Facebook]: {\r\n        properties: {\r\n            UseFacebook: { type: 'boolean' },\r\n            FacebookAppId: { type: 'string' },\r\n            FacebookAppSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Microsoft]: {\r\n        properties: {\r\n            UseMicrosoftAccount: { type: 'boolean' },\r\n            MicrosoftClientId: { type: 'string' },\r\n            MicrosoftClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Google]: {\r\n        properties: {\r\n            UseGoogle: { type: 'boolean' },\r\n            GoogleClientId: { type: 'string' },\r\n            GoogleClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Twitter]: {\r\n        properties: {\r\n            UseTwitter: { type: 'boolean' },\r\n            TwitterConsumerKey: { type: 'string' },\r\n            TwitterConsumerSecret: { type: 'string' }\r\n        }\r\n    }\r\n}\r\n\r\nexport const SystemSettings = {\r\n    Domain: 'Domain'\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nimport { ServiceTypes, ServiceTypeSetups } from '../constants/servicetypes';\r\nclass ServiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Services);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let serviceType = currentNode ? UIA.GetNodeProp(currentNode, NodeProperties.ServiceType) : '';\r\n        let propinputs = [];\r\n        if (serviceType) {\r\n            let serviceTypeSetup = ServiceTypeSetups[serviceType];\r\n            if (serviceTypeSetup && serviceTypeSetup.properties) {\r\n                Object.keys(serviceTypeSetup.properties).map(prop => {\r\n                    var prop_setup = serviceTypeSetup.properties[prop];\r\n                    var value = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ServiceTypeSettings) || {};\r\n                    if (prop_setup && prop_setup.type) {\r\n                        switch (prop_setup.type) {\r\n                            case 'string':\r\n                                propinputs.push(<TextInput\r\n                                    key={`service-type${prop}`}\r\n                                    onChange={(val) => {\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                            id: currentNode.id,\r\n                                            value: { ...value, [prop]: val }\r\n                                        });\r\n                                    }}\r\n                                    label={prop.unCamelCase()}\r\n                                    value={value[prop] || ''} />)\r\n                                break;\r\n                            case 'boolean':\r\n                                    propinputs.push(<CheckBox\r\n                                        key={`service-type${prop}`}\r\n                                        onChange={(val) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                                id: currentNode.id,\r\n                                                value: { ...value, [prop]: val }\r\n                                            });\r\n                                        }}\r\n                                        label={prop.unCamelCase()}\r\n                                        value={value[prop] || ''} />)\r\n                                break;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.ServiceActivity}\r\n                        options={Object.keys(ServiceTypes).map(t => {\r\n                            return { title: t, value: ServiceTypes[t] }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ServiceType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={serviceType} />\r\n                        {propinputs}\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ServiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarContent extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"tab-content\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarButton extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} title={this.title()} data-toggle=\"control-sidebar\">\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Box extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title() {\r\n        return this.props.title || '{title}';\r\n    }\r\n    primary() {\r\n        return this.props.primary ? 'box-primary' : '';\r\n    }\r\n    backgroundColor() {\r\n        return this.props.backgroundColor ? this.props.backgroundColor : '';\r\n    }\r\n    render() {\r\n        var style = {};\r\n        var styleAll = {};\r\n        var maxStyle = {};\r\n        if (this.props.maxheight) {\r\n            style.maxHeight = `${this.props.maxheight}px`;\r\n            style.overflowY = 'auto';\r\n\r\n        }\r\n\r\n        if (this.backgroundColor()) {\r\n            style.background = this.backgroundColor();\r\n            styleAll.background = this.backgroundColor();\r\n        }\r\n\r\n        return (\r\n            <div className={`box ${this.primary()}`} style={{ ...styleAll, ...maxStyle }}>\r\n                <div className=\"box-header with-border\" style={{ ...styleAll }}>\r\n                    <h3 className=\"box-title\" style={{ ...styleAll }}>{this.title()}</h3>\r\n                </div>\r\n                <div className=\"box-body\" style={{ ...styleAll, ...style }}>\r\n                    {this.props.children}\r\n                </div>\r\n                <div className=\"box-footer\" style={{ ...styleAll }}>\r\n                    {this.props.footer}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nexport default class EnumerationEditMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput onClick={() => {\r\n                    if (this.props.onComplete) {\r\n                        this.props.onComplete(this.state.value);\r\n                        this.setState({ value: '' })\r\n                    }\r\n                }} value={this.state.value} onChange={(value) => {\r\n                    this.setState({ value })\r\n                }} inputgroup={true} placeholder={Titles.Enumeration} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, FilterRules } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField,\r\n    GetLinkChainFromGraph,\r\n    GetMethodNode\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        var function_variables = [];\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        else if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ModelItemFilter)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator];\r\n            var methods = GetLinkChainFromGraph(graph, {\r\n                id: currentNode.id,\r\n                links: [{\r\n                    direction: TARGET,\r\n                    type: LinkType.ModelItemFilter\r\n                }]\r\n            }, [NodeTypes.Method]);\r\n            if (methods && methods.length) {\r\n                var props = UIA.GetMethodProps(methods[0]);\r\n                let filterParameters = UIA.GetMethodFilterParameters(currentNode.id, true);\r\n                if (filterParameters && filterParameters.length) {\r\n                    function_variables = filterParameters;\r\n                }\r\n                else if (props) {\r\n                    function_variables = Object.keys(props).map(t => ({ title: t, value: t }));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            validator = this.props.selectedValidator;\r\n            if (validator) {\r\n                validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n            }\r\n            function_variables = this.props.function_variables;\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    validator = validator || UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum.id || _enum] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum.id || _enum] = !item.enumeration[_enum.id || _enum];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum.value}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                validator = validator || UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (this.props.onChange) {\r\n                                    this.props.onChange();\r\n                                }\r\n                                else {\r\n                                    if (old_one) {\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                            target: old_one,\r\n                                            source: id,\r\n                                        });\r\n                                    }\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: NodeProperties.Executor,\r\n                                        value: validator\r\n                                    })\r\n                                    this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                        target: value,\r\n                                        source: id,\r\n                                        properties: {\r\n                                            ...UIA.LinkProperties.ExecutorModelItemLink,\r\n                                            ...createEventProp(LinkEvents.Remove, {\r\n                                                property: this.props.property,\r\n                                                validator: this.props.validator,\r\n                                                function: 'OnRemoveExecutorItemPropConnection',\r\n                                                node: item.node\r\n                                            })\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            else if (validatorItem.arguments && validatorItem.arguments.method_reference) {\r\n                return this.getMethodReferenceItem(validator, validatorItem);\r\n            }\r\n            else if (validatorItem.arguments && validatorItem.arguments.functionvariables) {\r\n                let functionVariableControl = (<FormControl>\r\n                    <SelectInput\r\n                        options={function_variables}\r\n                        label={Titles.FunctionVariables}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            validator = validator || this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            let old_one = item.node;\r\n                            item.node = value;\r\n\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                })\r\n                            }\r\n                        }}\r\n                        value={validatorItem ? validatorItem.node : ''} />\r\n                </FormControl>);\r\n\r\n                return functionVariableControl\r\n            }\r\n            else if (validatorItem.arguments && validatorItem.arguments.modelproperty) {\r\n                let modelParameters = function_variables || UIA.GetMethodFilterParameters(currentNode.id, true);\r\n                let node_value = validatorItem ? validatorItem.node : '';\r\n                let nodeProperty = validatorItem ? validatorItem.nodeProperty : '';\r\n                let properties = [];\r\n                if (node_value) {\r\n                    let node_ref = UIA.GetMethodsProperty(this.props.adjacentNodeId || currentNode.id, node_value);\r\n                    if (node_ref) {\r\n                        properties = UIA.GetModelPropertyChildren(node_ref).toNodeSelect();\r\n                    }\r\n                }\r\n                let functionVariableControl = (<FormControl>\r\n                    <SelectInput\r\n                        options={modelParameters}\r\n                        label={Titles.FunctionVariables}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.node = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={node_value} />\r\n                    <SelectInput\r\n                        options={properties}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.nodeProperty = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={nodeProperty} />\r\n                </FormControl>);\r\n\r\n                return functionVariableControl\r\n            }\r\n            else if (validatorItem.arguments && validatorItem.arguments.model2modelproperty) {\r\n                let modelParameters = function_variables || UIA.GetMethodFilterParameters(currentNode.id, true);\r\n                let node_value = validatorItem ? validatorItem.node : '';\r\n                let many2many = validatorItem ? validatorItem.many2many : '';\r\n                let nodeProperty = validatorItem ? validatorItem.nodeProperty : '';\r\n                let many2manyProperty = validatorItem ? validatorItem.many2manyProperty : '';\r\n                let many2manyMethod = validatorItem ? validatorItem.many2manyMethod : '';\r\n                let properties = [];\r\n                if (node_value) {\r\n                    let node_ref = UIA.GetMethodsProperty(this.props.adjacentNodeId || currentNode.id, node_value);\r\n                    if (node_ref) {\r\n                        properties = UIA.GetModelPropertyChildren(node_ref).toNodeSelect();\r\n                    }\r\n                }\r\n                let manyNodeSelector = null;\r\n                let manyNodePropertySelector = null;\r\n                let manyNodePropertyMethodSelector = null;\r\n                if (modelParameters) {\r\n                    let manyNodes = UIA.GetManyToManyNodes([this.props.property, node_value].filter(x => x)) || [];\r\n\r\n                    manyNodeSelector = (\r\n                        <SelectInput\r\n                            options={manyNodes.toNodeSelect()}\r\n                            label={Titles.ManyToMany}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                validator = validator || this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                                let item = getValidatorItem(validator, {\r\n                                    property: this.props.property,\r\n                                    validator: this.props.validator\r\n                                });\r\n                                item.many2many = value;\r\n                                if (this.props.onChange) {\r\n                                    this.props.onChange();\r\n                                }\r\n                                else {\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: NodeProperties.FilterModel,\r\n                                        value: validator\r\n                                    });\r\n                                }\r\n\r\n                            }}\r\n                            value={many2many} />\r\n                    );\r\n                    if (many2many) {\r\n                        manyNodePropertySelector = (\r\n                            <SelectInput\r\n                                options={UIA.GetModelPropertyNodes(many2many).toNodeSelect()}\r\n                                label={Titles.Many2ManyProperties}\r\n                                onChange={(value) => {\r\n                                    var id = currentNode.id;\r\n                                    validator = validator || this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                                    let item = getValidatorItem(validator, {\r\n                                        property: this.props.property,\r\n                                        validator: this.props.validator\r\n                                    });\r\n                                    item.many2manyProperty = value;\r\n                                    if (this.props.onChange) {\r\n                                        this.props.onChange();\r\n                                    }\r\n                                    else {\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id,\r\n                                            prop: NodeProperties.FilterModel,\r\n                                            value: validator\r\n                                        });\r\n                                    }\r\n\r\n                                }}\r\n                                value={many2manyProperty} />\r\n                        );\r\n                        if (many2manyProperty) {\r\n                            manyNodePropertyMethodSelector = (\r\n                                <SelectInput\r\n                                    options={Object.keys(FilterRules).map(t => {\r\n                                        return {\r\n                                            title: t,\r\n                                            value: FilterRules[t]\r\n                                        }\r\n                                    })}\r\n                                    label={Titles.Many2ManyProperties}\r\n                                    onChange={(value) => {\r\n                                        var id = currentNode.id;\r\n                                        validator = validator || this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                                        let item = getValidatorItem(validator, {\r\n                                            property: this.props.property,\r\n                                            validator: this.props.validator\r\n                                        });\r\n                                        item.many2manyMethod = value;\r\n                                        if (this.props.onChange) {\r\n                                            this.props.onChange();\r\n                                        }\r\n                                        else {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                id,\r\n                                                prop: NodeProperties.FilterModel,\r\n                                                value: validator\r\n                                            });\r\n                                        }\r\n\r\n                                    }}\r\n                                    value={many2manyMethod} />\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n                let functionVariableControl = (<FormControl>\r\n                    <SelectInput\r\n                        options={modelParameters}\r\n                        label={Titles.FunctionVariables}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            validator = validator || this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.node = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={node_value} />\r\n                    <SelectInput\r\n                        options={properties}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            validator = validator || this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.nodeProperty = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={nodeProperty} />\r\n                    {manyNodeSelector}\r\n                    {manyNodePropertySelector}\r\n                    {manyNodePropertyMethodSelector}\r\n                </FormControl>);\r\n\r\n                return functionVariableControl\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n    getMethodReferenceItem(validator, validatorItem) {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        let methodNode = GetMethodNode(state, currentNode.id, LinkType.ExecutorFunction);\r\n        let methodNodeProperties = UIA.GetMethodProps(methodNode);\r\n        if (validatorItem.arguments && validatorItem.arguments.method_reference) {\r\n            return Object.keys(validatorItem.arguments.method_reference).map(ref => {\r\n                validator = validator || UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                let editlist = [];\r\n                let options = UIA.GetMethodNodeSelectOptions(methodNodeProperties);\r\n                let formControll = (<FormControl key={ref}>\r\n                    <SelectInput\r\n                        options={options}\r\n                        defaultSelectText={Titles.NodeType}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            validator = validator || UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.references = item.references || {};\r\n                            item.references[ref] = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Executor,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={validatorItem && validatorItem.references ? validatorItem.references[ref] : ''} />\r\n                    {editlist}\r\n                </FormControl>);\r\n\r\n                return formControll\r\n            });\r\n        }\r\n        return (<div>reference</div>)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties, ExecutorUI } from '../constants/nodetypes';\r\nimport { createValidator, addValidatator, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { uuidv4 } from '../utils/array';\r\nimport SideBarHeader from './sidebarheader';\r\nclass GenericPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType);\r\n        if (!active) {\r\n            return <div></div>;\r\n        }\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var genericProperty = this.props.executor || this.props.validator || this.props.methodParamSetup;\r\n        let _ui = this.props.ui;\r\n        let propertyExecutors = <div></div>;\r\n        if (_ui && genericProperty && genericProperty.properties) {\r\n            propertyExecutors = Object.keys(genericProperty.properties).map(key => {\r\n                let _validates = genericProperty.properties[key];\r\n                let visualKey = `GenericPropertyMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={(() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = genericProperty;\r\n\r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v]\r\n\r\n                                    if (this.props.onRemove) {\r\n                                        this.props.onRemove();\r\n                                    }\r\n                                })} />\r\n                            <ExecutorItem\r\n                                adjacentNodeId={this.props.adjacentNodeId}\r\n                                onChange={this.props.onChange}\r\n                                function_variables={this.props.function_variables}\r\n                                selectedValidator={genericProperty}\r\n                                node={currentNode.id}\r\n                                property={key}\r\n                                validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(_ui).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(ui => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${ui}-afjlskf-asfd`}\r\n                            title={ui}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={(() => {\r\n                                let id = currentNode.id;\r\n                                var executor = genericProperty;\r\n                                executor = addValidatator(executor, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: ui,\r\n                                        ..._ui[ui]\r\n                                    }\r\n                                });\r\n                                if (this.props.onAdd) {\r\n                                    this.props.onAdd();\r\n                                }\r\n                            })} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveExecution} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n                            if (this.props.onRemove) {\r\n                                this.props.onRemove(key);\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                    target: key,\r\n                                    source: id,\r\n                                });\r\n                            }\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedExecutors}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-executions`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectExecution}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectexecution`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyExecutors = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar relative={true}>\r\n                        <SideBar relative={true}>\r\n                            <SideBarMenu relative={true}>\r\n                                <SideBarHeader title={'Property Setups'} />\r\n                                {propertyExecutors}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyExecutors\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(GenericPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SideBarContent from './sidebarcontent';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties, ExecutorUI } from '../constants/nodetypes';\r\nimport { createValidator, addValidatator, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { uuidv4 } from '../utils/array';\r\n\r\nimport SideBarHeader from './sidebarheader';\r\nclass GenericPropertyContainer extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType);\r\n        if (!active) {\r\n            return <div></div>;\r\n        }\r\n\r\n        return (\r\n            <MainSideBar relative={true}>\r\n                <SideBar relative={true}>\r\n                    {this.props.top ? this.props.top : null}\r\n                    <SideBarMenu>\r\n                        {this.props.children}\r\n                    </SideBarMenu>\r\n                </SideBar>\r\n            </MainSideBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(GenericPropertyContainer)","export const PERMISSION = 'permission';\r\nexport const FILTER = 'filter';\r\nexport const VALIDATION = 'validation';","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBarHeader from './sidebarheader';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes, FilterUI } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport Box from './box';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode, createExecutor, addMethodValidationForParamter, getMethodValidationForParameter, createValidator, removeMethodValidationParameter } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport GenericPropertyMenu from './genericpropertymenu';\r\nimport GenericPropertyContainer from './genericpropertycontainer';\r\nimport TextInput from './textinput';\r\nimport ButtonList from './buttonlist';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport { PERMISSION, FILTER, VALIDATION } from '../constants/condition';\r\nconst CONDITION_FILTER_MENU_PARAMETER = 'condition-filter-menu-parameter';\r\nconst CONDITION_FILTER_MENU_PARAMETER_PROPERTIES = 'condition-filter-menu-parameter-properties';\r\nconst DATA_SOURCE = 'DATA_SOURCE';\r\nclass ConditionFilterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let methodProps;\r\n        let methodDefinition;\r\n        let methodDefinitionKey = this.props.methodDefinitionKey;\r\n        let interestingNode;\r\n        if (currentNode) {\r\n            switch (methodDefinitionKey) {\r\n                case PERMISSION:\r\n                    interestingNode = UIA.GetPermissionNode(currentNode.id);\r\n                    break;\r\n                case FILTER:\r\n                    interestingNode = UIA.GetModelItemFilter(currentNode.id);\r\n                    break;\r\n                case VALIDATION:\r\n                    interestingNode = UIA.GetValidationNode(currentNode.id);\r\n                    break;\r\n\r\n            }\r\n            if (interestingNode) {\r\n                methodDefinition = interestingNode ? UIA.GetMethodDefinition(interestingNode.id) : null;\r\n                methodProps = UIA.GetMethodsProperties(interestingNode.id);\r\n            }\r\n        }\r\n        if (methodDefinition && methodDefinition[methodDefinitionKey] && methodDefinition[methodDefinitionKey].params && methodDefinition[methodDefinitionKey].params.length) {\r\n\r\n        }\r\n        else if (this.props.view && currentNode) {\r\n            interestingNode = UIA.GetDataSourceNode(currentNode.id);\r\n            if (!interestingNode) {\r\n                return <div></div>\r\n            }\r\n            methodProps = {\r\n                [DATA_SOURCE]: UIA.GetNodeProp(interestingNode, NodeProperties.UIModelType)\r\n            }\r\n        }\r\n        else {\r\n            return <div></div>\r\n        }\r\n        let filterParameters = UIA.GetMethodPermissionParameters(interestingNode.id, true);\r\n\r\n        let id = currentNode.id;\r\n        let models = [];\r\n        if (methodDefinition) {\r\n            models = methodDefinition[methodDefinitionKey].params.map(t => {\r\n                if (typeof (t) === 'object') {\r\n                    return t.key;\r\n                }\r\n                return t;\r\n            }).map(t => {\r\n                return {\r\n                    title: `${UIA.GetNodeTitle(methodProps[t])} (${t})`,\r\n                    value: t,\r\n                    id: t\r\n                }\r\n            });\r\n        }\r\n        else if (this.props.view) {\r\n            models = UIA.GetModelNodes().toNodeSelect();\r\n        }\r\n        let methodFunctionType = this.props.view ? DATA_SOURCE : UIA.GetMethodFunctionType(interestingNode.id);\r\n        let methodFunctionValidation = UIA.GetNodeProp(currentNode, NodeProperties.Condition);// UIA.GetMethodFunctionValidation(permissionNode.id);\r\n        let param_list_key = `${currentNode.id} ${methodFunctionType}`;\r\n        let param = UIA.Visual(state, param_list_key);\r\n        let param_property_list_key = UIA.Visual(state, param_list_key) ? `${param_list_key} ${param}` : null;\r\n        let selectedParameter = UIA.Visual(state, param_list_key);\r\n        let model_properties = UIA.GetModelPropertyChildren(this.props.view ? param : methodProps[param]).toNodeSelect();\r\n        let top = this.getTop({\r\n            model_properties,\r\n            methodProps,\r\n            selectedParameter,\r\n            filterMenuParameter: `${currentNode.id}${CONDITION_FILTER_MENU_PARAMETER}`,\r\n            filterMenuParameterProperties: `${currentNode.id} ${CONDITION_FILTER_MENU_PARAMETER_PROPERTIES}`,\r\n            param_list_key,\r\n            methodFunctionValidation,\r\n            models,\r\n            methodFunctionType,\r\n            param_property_list_key\r\n        });\r\n\r\n        let methodParamSetup = getMethodValidationForParameter(\r\n            methodFunctionValidation,\r\n            methodFunctionType,\r\n            UIA.Visual(state, param_list_key),\r\n            UIA.Visual(state, param_property_list_key));\r\n\r\n        let updateValidation = () => {\r\n            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                prop: UIA.NodeProperties.Condition,\r\n                id: currentNode.id,\r\n                value: methodFunctionValidation\r\n            });\r\n        };\r\n        let onRemoveValidation = (remove) => {\r\n            if (remove) {\r\n                methodFunctionValidation = removeMethodValidationParameter(\r\n                    methodFunctionValidation,\r\n                    methodFunctionType,\r\n                    UIA.Visual(state, param_list_key), remove);\r\n            }\r\n            updateValidation();\r\n        }\r\n        return (<GenericPropertyContainer title='asdf' subTitle='afaf' nodeType={NodeTypes.Condition} top={top} >\r\n            <GenericPropertyMenu\r\n                ui={FilterUI}\r\n                function_variables={filterParameters}\r\n                methodParamSetup={methodParamSetup}\r\n                nodeType={NodeTypes.Condition}\r\n                onRemove={onRemoveValidation}\r\n                adjacentNodeId={interestingNode.id}\r\n                onChange={updateValidation}\r\n                onAdd={updateValidation}\r\n            />\r\n        </GenericPropertyContainer>)\r\n    }\r\n    getTop(args = {}) {\r\n        let {\r\n            methodProps,\r\n            model_properties,\r\n            models,\r\n            selectedParameter,\r\n            filterMenuParameter = CONDITION_FILTER_MENU_PARAMETER,\r\n            filterMenuParameterProperties = CONDITION_FILTER_MENU_PARAMETER_PROPERTIES,\r\n            param_list_key,\r\n            methodFunctionValidation,\r\n            methodFunctionType,\r\n            param_property_list_key\r\n        } = args;\r\n\r\n        let { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        return (\r\n            (<SideBarMenu relative={true}>\r\n                <TreeViewMenu\r\n                    open={UIA.Visual(state, filterMenuParameter)}\r\n                    active={UIA.Visual(state, filterMenuParameter)}\r\n                    title={`${UIA.GetNodeTitle(methodProps[selectedParameter])} (${selectedParameter})` || 'Parameters'}\r\n                    toggle={() => {\r\n                        this.props.toggleVisual(filterMenuParameter)\r\n                    }}>\r\n                    <SideBarHeader title={'Parameters'} />\r\n                    <ButtonList\r\n                        active={true}\r\n                        isSelected={(item) => {\r\n                            return item && selectedParameter === item.id;\r\n                        }}\r\n                        items={models}\r\n                        onClick={(item) => {\r\n                            let methodValidationForParameter = addMethodValidationForParamter(methodFunctionValidation, methodFunctionType, item.id);\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Condition,\r\n                                id: currentNode.id,\r\n                                value: methodValidationForParameter\r\n                            });\r\n                            this.props.setVisual(param_list_key, item.id);\r\n                        }}></ButtonList>\r\n                </TreeViewMenu>\r\n                <TreeViewMenu\r\n                    open={UIA.Visual(state, filterMenuParameterProperties)}\r\n                    active={UIA.Visual(state, filterMenuParameterProperties)}\r\n                    title={UIA.GetNodeTitle(UIA.Visual(state, param_property_list_key)) || 'Parameter Properties'}\r\n                    toggle={() => {\r\n                        this.props.toggleVisual(filterMenuParameterProperties)\r\n                    }}>\r\n                    <SideBarHeader title={'Parameter Properties'} />\r\n                    {param_property_list_key ? (<ButtonList\r\n                        active={true}\r\n                        isSelected={(item) => {\r\n                            return item && UIA.Visual(state, param_property_list_key) === item.id;\r\n                        }}\r\n                        items={model_properties}\r\n                        onClick={(item) => {\r\n                            let methodValidationForParameter = addMethodValidationForParamter(\r\n                                methodFunctionValidation,\r\n                                methodFunctionType,\r\n                                UIA.Visual(state, param_list_key),\r\n                                item.id);\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Condition,\r\n                                id: currentNode.id,\r\n                                value: methodValidationForParameter\r\n                            });\r\n                            this.props.setVisual(param_property_list_key, item.id)\r\n                        }}></ButtonList>) : null}\r\n                </TreeViewMenu>\r\n            </SideBarMenu>\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default UIConnect(ConditionFilterMenu)","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","\r\nimport * as d3Zoom from 'd3-zoom'\r\nimport * as d3 from 'd3';\r\nimport * as Cola from 'webcola'\r\nimport * as GraphMethods from '../methods/graph_methods';\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport { NodeTypeColors } from '../actions/uiactions';\r\nimport { LinkStyles, LinkType, LinkPropertyKeys, GetNodeTypeIcon } from '../constants/nodetypes';\r\n\r\nconst MIN_DIMENSIONAL_SIZE = 20;\r\nlet iconSize = 30;\r\nexport default class MindMap extends Component {\r\n    constructor() {\r\n        super();\r\n        this.textSize = {};\r\n        this.mapScale = 1;\r\n        this.mapTranslate = { x: 0, y: 0 };\r\n        this.state = {\r\n            id: `id-${Date.now()}`,\r\n            graph: {\r\n                \"nodes\": [].map(t => { t.id = t.name; return t; }),\r\n                links: [],\r\n                \"groups\": [\r\n                    // { \"leaves\": [0], \"groups\": [1] },\r\n                    // { \"leaves\": [1, 2] },\r\n                    // { \"leaves\": [3, 4] }\r\n                ]\r\n            }\r\n        }\r\n        this.draw = this.draw.bind(this);\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.mouseMove = this.mouseMove.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // Draw for the first time to initialize.\r\n        this.draw();\r\n\r\n        // Redraw based on the new size whenever the browser window is resized.\r\n        window.addEventListener(\"resize\", this.draw);\r\n        window.addEventListener('mousemove', this.mouseMove);\r\n        window.addEventListener('mouseup', this.mouseUp);\r\n        window.addEventListener('mousedown', this.mouseDown);\r\n    }\r\n    mouseDown(evt) {\r\n        this.mouseStartEvent = evt;\r\n    }\r\n    mouseUp(evt) {\r\n        this.mouseStartEvent = null;\r\n        this.mouseMoved = null;\r\n    }\r\n    mouseMove(evt) {\r\n        if (this.mouseStartEvent) {\r\n            this.mouseMoveEvt = evt;\r\n            this.mouseMoved = {\r\n                x: evt.clientX - this.mouseStartEvent.clientX,\r\n                y: evt.clientY - this.mouseStartEvent.clientY\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.draw);\r\n        window.removeEventListener('mousemove', this.mouseMove);\r\n        window.removeEventListener('mousedown', this.mouseUp);\r\n        window.removeEventListener('mouseup', this.mouseDown);\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n        if (domObj) {\r\n            domObj.innerHTML = '';\r\n        }\r\n    }\r\n    calculateNodeTextSize(text, pad) {\r\n        var div = document.querySelector('#secret-div-space');\r\n        if (!div) {\r\n            div = document.createElement('div');\r\n            div.id = 'secret-div-space';\r\n            div.setAttribute('id', 'secret-div-space');\r\n            div.style.visibility = 'hidden';\r\n            div.style.position = 'absolute';\r\n            div.classList.add('label');\r\n            div.style.whiteSpace = 'normal';\r\n            div.style.maxWidth = (text || '').split(' ').length > 1 ? `200px` : '300px';\r\n            div.style.top = '-10000px';\r\n            div.style.padding = (pad * 2) + 'px';\r\n            document.querySelector(`#${this.state.id}`).appendChild(div);\r\n        }\r\n        div.innerHTML = text;\r\n        return div.getBoundingClientRect();\r\n    }\r\n    draw() {\r\n        var me = this;\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n\r\n        domObj.innerHTML = '';\r\n        var bb = domObj.getBoundingClientRect();\r\n        var force = Cola.d3adaptor(d3);\r\n        var width = bb.width - 10;// 960;\r\n        var height = bb.height - 10;// 800;\r\n        var color = d3.scaleOrdinal(d3.schemeCategory10)\r\n\r\n        var margin = 6, pad = 12;;\r\n        force\r\n            .linkDistance(this.props.linkDistance || 280)\r\n            .avoidOverlaps(true)\r\n            .handleDisconnected(false)\r\n            .size([width, height]);\r\n\r\n        var svg = makeSVG();\r\n        function makeSVG() {\r\n            var outer = d3.select(`#${me.state.id}`).append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"pointer-events\", \"all\");\r\n            // define arrow markers for graph links\r\n            outer.append('svg:defs').append('svg:marker')\r\n                .attr('id', 'end-arrow')\r\n                .attr('viewBox', '0 -5 10 10')\r\n                .attr('refX', 5)\r\n                .attr('markerWidth', 3)\r\n                .attr('markerHeight', 3)\r\n                .attr('orient', 'auto')\r\n                .append('svg:path')\r\n                .attr('d', 'M0,-5L10,0L0,5L2,0')\r\n                .attr('stroke-width', '0px')\r\n                .attr('fill', function (d) {\r\n                    if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                        return LinkStyles[d.properties.type].stroke;\r\n                    }\r\n                    return '#555';\r\n                });\r\n\r\n\r\n            var vis = outer.append('g');\r\n            outer.on(\"wheel\", function (d) {\r\n                me.mapScale += d3.event.wheelDelta / (me.props.zoomFactor || 5000);\r\n                redraw();\r\n            });\r\n            function redraw() {\r\n                var { x = 0, y = 0 } = (me.mouseMoved || {});\r\n                vis.attr('transform', `scale(${me.mapScale || 1}) translate(${me.mapTranslate.x + x}, ${me.mapTranslate.y + y})`);\r\n            }\r\n            outer.on('mousemove', function (x, v) {\r\n                if (me.panning) {\r\n                    redraw();\r\n                }\r\n            });\r\n\r\n            outer.on(\"mousedown\", function (d) {\r\n                me.panning = true;\r\n            });\r\n            outer.on(\"mouseup\", function (d) {\r\n                me.panning = false;\r\n\r\n                if (me.mouseMoved && me.mapTranslate) {\r\n                    me.mapTranslate = {\r\n                        x: me.mapTranslate.x + me.mouseMoved.x,\r\n                        y: me.mapTranslate.y + me.mouseMoved.y\r\n                    }\r\n                }\r\n            });\r\n\r\n            redraw();\r\n            return vis;\r\n        }\r\n\r\n        var graph = this.state.graph;\r\n\r\n        graph.nodes.forEach(function (v) {\r\n            var bb = me.calculateNodeTextSize(getLabelText(v), pad);\r\n            v.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n            v.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height);\r\n        })\r\n        graph.groups.forEach(function (g) { g.padding = pad })\r\n\r\n        force.nodes(graph.nodes)\r\n            .groups(graph.groups)\r\n            .links(graph.links)\r\n            .on(\"tick\", tick)\r\n\r\n        var group = svg.selectAll(\".group\")\r\n            .data(graph.groups)\r\n            .enter().append(\"rect\")\r\n            .attr(\"rx\", 8).attr(\"ry\", 8)\r\n            .attr(\"class\", \"group\")\r\n            .style(\"fill\", function (d, i) { return color(i) })\r\n            .call(force.drag)\r\n\r\n        var node = svg.selectAll(\".node\");\r\n        this.$node = node;\r\n        this.buildNode(graph, force, color);\r\n        var link = svg.selectAll(\".link\")\r\n            .data(graph.links)\r\n            .enter().append(\"line\")\r\n            .attr(\"class\", \"link\")\r\n            .style('stroke', function (d) {\r\n                if (d.selected) {\r\n                    return '#ff0000';\r\n                }\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return LinkStyles[LinkType.ErrorLink].stroke;\r\n                }\r\n                else if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                    return LinkStyles[d.properties.type].stroke;\r\n                }\r\n                return '#555';\r\n            })\r\n            .style(\"stroke-dasharray\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return '5,5';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"d\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return 'M5 20 l215 0';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"stroke-width\", function (d) {\r\n                if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].strokeWidth) {\r\n                    return LinkStyles[d.properties.type].strokeWidth;\r\n                }\r\n                return Math.sqrt(d.value);\r\n            });\r\n        link.on('click', (d, index, els) => {\r\n            if (me.props.onLinkClick && d) {\r\n                me.props.onLinkClick({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        });\r\n        link.on('mouseover', (d, index, els) => {\r\n            if (me.props.onLinkHover && d) {\r\n                me.props.onLinkHover({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        })\r\n        var label = svg.selectAll(\".label\")\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append(\"foreignObject\")\r\n            .attr(\"class\", \"label\");\r\n        label.on('click', (d, index, els) => {\r\n            if (me.props.onNodeClick && d && d.id) {\r\n                me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n            }\r\n        });\r\n\r\n        var features = svg.selectAll('.features')\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', 'features')\r\n\r\n        features.append(\"rect\")\r\n            .attr(\"width\", function (d) { return d.selected ? 5 : 0; })\r\n            .attr(\"height\", function (d) { return d.height - 10; })\r\n            .attr('x', 3)\r\n            .attr('y', 5)\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d.selected && me.props.selectedColor) {\r\n                    return me.props.selectedColor;\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n\r\n        var topdiv = label.append('xhtml:div')\r\n            .style('pointer-events', 'none');\r\n\r\n\r\n        topdiv.append(\"xhtml:object\")\r\n            .attr(\"data\", (d) => {\r\n                if (d && d.properties && d.properties.nodeType && NodeTypeColors[d.properties.nodeType]) {\r\n                    return GetNodeTypeIcon(d.properties.nodeType);\r\n                }\r\n                return \"./css/svg/003-cupcake.svg\";\r\n            })\r\n            .attr(\"type\", (n) => {\r\n                return \"image/svg+xml\";\r\n            })\r\n            .attr(\"width\", function (d) { return iconSize; })\r\n            .attr(\"height\", function (d) { return iconSize; })\r\n            .attr('x', 40)\r\n            .attr('y', 40)\r\n            .style('width', 40)\r\n            .style('height', 40);\r\n        var titles = topdiv.append('xhtml:div')\r\n            .style('width', x => {\r\n                return `${x.width - pad / 2}px`\r\n            })\r\n            .style('white-space', 'normal')\r\n            .style('text-align', 'start')\r\n            //.style('word-break', 'break-all')\r\n            .style('height', x => {\r\n                return `${x.height - pad / 2}px`\r\n            })\r\n            .text(function (d) { return `${getLabelText(d)}` })\r\n            .call(force.drag);\r\n\r\n\r\n        this.$force = force;\r\n        this.setState({\r\n            $node: node,\r\n            $color: color\r\n        })\r\n\r\n        function getLabelText(d) {\r\n            return d && d.properties ? d.properties.text || d.name : d.name;\r\n        }\r\n\r\n        function rotate(source, degree = Math.PI / 2) {\r\n            var { innerBounds, x, y } = source;\r\n            var rise = innerBounds.y - innerBounds.Y;\r\n            var run = innerBounds.x - innerBounds.X;\r\n\r\n            return Object.assign(innerBounds, {\r\n                x: 1 + innerBounds.x,\r\n                y: rise ? ((run / rise) * 1) + innerBounds.y : innerBounds.y,\r\n                X: 1 + innerBounds.X,\r\n                Y: rise ? ((run / rise) * 1) + innerBounds.Y : innerBounds.Y\r\n            });\r\n        }\r\n\r\n        function tick() {\r\n            if (me.$_nodes) {\r\n                me.$_nodes.each(function (d) {\r\n                    var bb = me.calculateNodeTextSize(getLabelText(d), pad);\r\n                    d.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n                    d.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height)\r\n                    d.innerBounds = d.bounds.inflate(- margin);\r\n                });\r\n            }\r\n\r\n            if (me.$_nodes) {\r\n                me.$_nodes\r\n                    .attr(\"width\", function (d) { return d.width; })\r\n                    .attr(\"height\", function (d) { return d.height; })\r\n                    .attr(\"x\", function (d) { return d.x - d.width / 2 })\r\n                    .attr(\"y\", function (d) { return d.y - d.height / 2 })\r\n            }\r\n\r\n            group.attr(\"x\", function (d) { return d.bounds.x })\r\n                .attr(\"y\", function (d) { return d.bounds.y })\r\n                .attr(\"width\", function (d) { return d.bounds.width() })\r\n                .attr(\"height\", function (d) { return d.bounds.height() })\r\n\r\n            link.each(function (d) {\r\n                //  d.route = Cola.makeEdgeBetween(rotate(d.source), rotate(d.target, -Math.PI / 2), 5);\r\n                d.route = Cola.makeEdgeBetween(rotate(d.source), rotate(d.target, 0), 5);\r\n            });\r\n\r\n            link.attr(\"x1\", function (d) { return d.route.sourceIntersection.x; })\r\n                .attr(\"y1\", function (d) { return d.route.sourceIntersection.y; })\r\n                .attr(\"x2\", function (d) { return d.route.arrowStart.x; })\r\n                .attr(\"y2\", function (d) { return d.route.arrowStart.y; });\r\n\r\n            features.attr(\"transform\", function (d) {\r\n                var y = d.y - d.height / 2;\r\n                var x = d.x - d.width / 2;\r\n                return `translate(${x},${y})`;\r\n            })\r\n\r\n\r\n            label.attr(\"x\", function (d) {\r\n                return d.x - d.width / 2\r\n            }).attr(\"y\", function (d) {\r\n                var innerbit = this.querySelector('div');\r\n                var h = innerbit ? innerbit.getBoundingClientRect().height : 0;\r\n\r\n                return d.y + h / 2 - d.height + -pad / 2 - iconSize;\r\n            })\r\n            titles.text(function (d) {\r\n                return getLabelText(d);\r\n            })\r\n        }\r\n        force.start();\r\n    }\r\n    buildNode(graph, cola, color) {\r\n        var me = this;\r\n        var node = this.$node.data(cola.nodes(), x => x.id || x.name);\r\n        var temp = node.enter().append(\"rect\")\r\n            .attr(\"class\", \"node\")\r\n            .attr(\"width\", function (d) { return d.width; })\r\n            .attr(\"height\", function (d) { return d.height; })\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d && d.properties && d.properties.nodeType && NodeTypeColors[d.properties.nodeType]) {\r\n                    return NodeTypeColors[d.properties.nodeType]\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n            .on('click', (d, index, els) => {\r\n                if (me.props.onNodeClick && d) {\r\n                    me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n                }\r\n            })\r\n            .call(cola.drag);\r\n\r\n        node.exit().remove();\r\n        this.$_nodes = temp;\r\n    }\r\n    applyNodeVisualData(nn) {\r\n        nn.width = 40;\r\n        nn.height = 40;\r\n        nn.name = nn.id;\r\n        return nn;\r\n    }\r\n    componentWillReceiveProps(props, state) {\r\n        if (props.graph) {\r\n            var { graph } = props;\r\n            var draw = true;\r\n            // d3.event.stopPropagation();\r\n            this.$force.stop();\r\n            if (graph.nodes && this.state && this.state.graph && this.state.graph.nodes) {\r\n                var removedNodes = this.state.graph.nodes.relativeCompliment(graph.nodes, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.nodes.indexOf(t);\r\n                });\r\n                this.state.graph.nodes.removeIndices(removedNodes);\r\n                var newNodes = graph.nodes.relativeCompliment(this.state.graph.nodes, (x, y) => x === y.id);\r\n                newNodes.map(nn => {\r\n                    this.state.graph.nodes.push(\r\n                        this.applyNodeVisualData(GraphMethods.duplicateNode(graph.nodeLib[nn]))\r\n                    );\r\n                });\r\n\r\n                if (props.selectedNodes) {\r\n                    this.state.graph.nodes.map(nn => {\r\n                        nn.selected = !!props.selectedNodes.find(t => t == nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.nodes.map(nn => {\r\n                    var nl = graph.nodeLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                })\r\n\r\n                draw = true;\r\n            }\r\n            if (graph.links && this.state && this.state.graph && this.state.graph.links) {\r\n                let removedLinks = this.state.graph.links.relativeCompliment(graph.links, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.links.indexOf(t);\r\n                });\r\n                this.state.graph.links.removeIndices(removedLinks);\r\n                let newLinks = graph.links.relativeCompliment(this.state.graph.links, (x, y) => x === y.id);\r\n                newLinks.map(nn => {\r\n                    this.state.graph.links.push(\r\n                        (duplicateLink(graph.linkLib[nn], this.state.graph.nodes))\r\n                    );\r\n                });\r\n                if (props.selectedLinks) {\r\n                    this.state.graph.links.map(nn => {\r\n                        nn.selected = !!props.selectedLinks.find(t => t.id === nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.links.map(nn => {\r\n                    let nl = graph.linkLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                });\r\n                draw = true;\r\n            }\r\n\r\n            if (graph.groups && this.state && this.state.graph && this.state.graph.groups) {\r\n                let graph_groups = graph.groups.filter(x => graph.groupLib[x].leaves || graph.groupLib[x].groups);\r\n                let removedGroups = this.state.graph.groups.relativeCompliment(graph_groups, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.groups.indexOf(t);\r\n                });\r\n                this.state.graph.groups.removeIndices(removedGroups);\r\n                let newGroups = graph_groups\r\n                    .relativeCompliment(this.state.graph.groups, (x, y) => x === y.id)\r\n                    .filter(x => graph.groupLib[x] && (graph.groupLib[x].leaves || graph.groupLib[x].groups));\r\n                newGroups.map(nn => {\r\n                    this.state.graph.groups.push(\r\n                        (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                    )\r\n                })\r\n                graph_groups.forEach(group => {\r\n                    let g = this.state.graph.groups.find(x => x.id === group);\r\n                    applyGroup(g, graph.groupLib[group], this.state.graph.groups, this.state.graph.nodes);\r\n                    // (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                })\r\n\r\n                // this.state.graph.groups.map(group => {\r\n                //     var _group = graph.groupLib[group.id];\r\n                // })\r\n            }\r\n\r\n\r\n            if (draw) {\r\n                this.draw();\r\n            }\r\n        }\r\n    }\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div id={this.state.id} className=\"mindmap\" style={{ minHeight: 946 }}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.findIndex(x => x.id === nn.source),\r\n        target: nodes.findIndex(x => x.id === nn.target)\r\n    };\r\n}\r\nfunction applyGroup(mindmapgroup, _group, groups, nodes) {\r\n    if (_group) {\r\n        if (_group.leaves && _group.leaves.length) {\r\n            mindmapgroup.leaves = (mindmapgroup.leaves || []);\r\n            mindmapgroup.leaves.length = 0\r\n            mindmapgroup.leaves.push(..._group.leaves.map(l => nodes.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.leaves\r\n        }\r\n\r\n        if (_group.groups && _group.groups.length) {\r\n            mindmapgroup.groups = (mindmapgroup.groups || []);\r\n            mindmapgroup.groups.length = 0;\r\n            mindmapgroup.groups.push(..._group.groups.map(l => groups.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.groups\r\n        }\r\n\r\n        // if (nn.leaves) {\r\n        //     let leaves = nn.leaves.map(l => nodes.findIndex(x => x.id === l));\r\n        //     temp.leaves = leaves;\r\n        // }\r\n        // if (groups && nn.groups) {\r\n        //     let groups = nn.groups.map(l => groups.findIndex(x => x.id === l));\r\n        //     temp.groups = groups;\r\n        // }\r\n    }\r\n}\r\nfunction duplicateGroup(nn, nodes, groups) {\r\n    let temp = {\r\n        ...nn,\r\n    };\r\n    delete temp.leaves;\r\n    delete temp.groups;\r\n    return temp;\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport SideMenuContainer from './sidemenucontainer';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\nimport { clipboard } from 'electron';\r\nimport { GetSpecificModels, GetAllModels, CreateLoginModels } from '../constants/nodepackages';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport { PARAMETER_TAB } from './dashboard';\r\n\r\nclass ModelActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var is_parent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsParent);\r\n        var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n        var permission_nodes = UIA.NodesByType(state, UIA.NodeTypes.Permission).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        return (\r\n            <SideMenuContainer active={active} tab={PARAMETER_TAB} visual={\"model-activities\"} title={Titles.ModelActivityMenu}>\r\n                <TabPane active={active}>\r\n                    {currentNode ? (<FormControl>\r\n                        <CheckBox\r\n                            label={Titles.IsAgent}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsAgent] : ''}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.IsAgent,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                        {is_agent ? (<SelectInput\r\n                            label={Titles.UserModel}\r\n                            options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                                return {\r\n                                    value: node.id,\r\n                                    title: UIA.GetNodeTitle(node)\r\n                                }\r\n                            })}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIUser],\r\n                                    source: id,\r\n                                    linkType: UIA.LinkProperties.UserLink.type\r\n                                })\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIUser,\r\n                                    id,\r\n                                    value\r\n                                });\r\n                                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.UserLink }\r\n                                });\r\n                            }}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIUser] : ''} />) : null}\r\n                        <CheckBox\r\n                            label={Titles.IsUser}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsUser] : ''}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.IsUser,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                        <CheckBox\r\n                            label={Titles.IsOwnedByAgents}\r\n                            title={Titles.IsOwnedByAgentsDescriptions}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsOwnedByAgents] : ''}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.IsOwnedByAgents,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                        <CheckBox\r\n                            label={Titles.ManyToManyNexus}\r\n                            title={Titles.ManyToManyNexusDescription}\r\n                            value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation([{\r\n                                    operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                        prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                        id: currentNode.id,\r\n                                        value\r\n                                    }\r\n                                }]);\r\n                            }} />\r\n                        <CheckBox\r\n                            label={Titles.IsCompositeInput}\r\n                            value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsCompositeInput)}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.IsCompositeInput,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                        <CheckBox\r\n                            label={Titles.ExcludeFromController}\r\n                            value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExcludeFromController)}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.ExcludeFromController,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                        {many_to_many_enabled ? (<SelectInput\r\n                            options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                                return {\r\n                                    value: x.id,\r\n                                    title: UIA.GetNodeTitle(x)\r\n                                }\r\n                            })}\r\n                            label={Titles.ManyToManyNexusModel}\r\n                            onChange={(value) => {\r\n                                let id = currentNode.id;\r\n                                var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                                this.props.graphOperation([{\r\n                                    operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                    options: {\r\n                                        prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                        id: currentNode.id,\r\n                                        value: [...types, value].unique(x => x)\r\n                                    }\r\n                                }, {\r\n                                    operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                    options: {\r\n                                        target: value,\r\n                                        source: id,\r\n                                        properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                    }\r\n                                }]);\r\n                            }}\r\n                            value={''} />) : null}\r\n                        <ButtonList active={true} isSelected={(item) => {\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                            return item && types.some(x => x === item.id);\r\n                        }}\r\n                            items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || []).map(t => {\r\n                                let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                                if (node) {\r\n                                    return {\r\n                                        title: UIA.GetNodeTitle(node),\r\n                                        id: node.id\r\n                                    }\r\n                                }\r\n                            })}\r\n                            onClick={(item) => {\r\n                                let id = currentNode.id;\r\n                                var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                                var ids = types;\r\n                                if (types.some(t => item.id === t)) {\r\n                                    ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                                }\r\n                                else {\r\n                                    ids = [...ids, item.id].unique(x => x)\r\n                                }\r\n                                this.props.graphOperation([{\r\n                                    operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                    options: {\r\n                                        prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                        id: currentNode.id,\r\n                                        value: ids\r\n                                    }\r\n                                }, {\r\n                                    operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                    options: {\r\n                                        target: item.id,\r\n                                        source: id,\r\n                                        linkType: UIA.LinkProperties.ManyToManyLink.type\r\n                                    }\r\n                                }]);\r\n                            }} />\r\n                    </FormControl>) : null}\r\n\r\n                    <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n\r\n                    <ControlSideBarMenu>\r\n                        <ControlSideBarMenuItem onClick={() => {\r\n                            this.props.graphOperation(UIA.ADD_DEFAULT_PROPERTIES, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                groupProperties: {\r\n                                },\r\n                                linkProperties: {\r\n                                    properties: { ...UIA.LinkProperties.PropertyLink }\r\n                                }\r\n                            });\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.SetDefaultProperties} description={Titles.SetDefaultPropertiesDescription} />\r\n                        <ControlSideBarMenuItem onClick={() => {\r\n                            this.props.graphOperation(UIA.NEW_PROPERTY_NODE, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                groupProperties: {\r\n                                },\r\n                                linkProperties: {\r\n                                    properties: { ...UIA.LinkProperties.PropertyLink }\r\n                                }\r\n                            });\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.AddProperty} description={Titles.AddPropertyDescription} />\r\n                        <ControlSideBarMenuItem onClick={() => {\r\n                            clipboard.writeText(UIA.generateDataSeed(currentNode))\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.CreateObjectDataSeed} description={Titles.CreateObjectDataSeed} />\r\n                        <TreeViewMenu\r\n                            title={Titles.QuickMethods}\r\n                            open={UIA.Visual(state, Titles.QuickMethods)}\r\n                            active={UIA.Visual(state, Titles.QuickMethods)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(Titles.QuickMethods)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu hideArrow={true} title={GetSpecificModels.type} icon={'fa fa-plus'} onClick={(() => {\r\n                                this.props.executeGraphOperation(currentNode, GetSpecificModels);\r\n                            })} />\r\n                            <TreeViewMenu hideArrow={true} title={GetAllModels.type} icon={'fa fa-plus'} onClick={(() => {\r\n                                this.props.executeGraphOperation(currentNode, GetAllModels);\r\n                            })} />\r\n                            <TreeViewMenu hideArrow={true} title={CreateLoginModels.type} icon={'fa fa-plus'} onClick={(() => {\r\n                                this.props.executeGraphOperation(currentNode, CreateLoginModels);\r\n                            })} />\r\n                        </TreeViewMenu>\r\n\r\n                    </ControlSideBarMenu>\r\n                    {is_agent ? (<SelectInput\r\n                        label={Titles.PermissionType}\r\n                        options={permission_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.PermissionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n                    {currentNode ? (<FormControl>\r\n                        <CheckBox\r\n                            label={Titles.IsParent}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsParent] : ''}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.IsParent,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                    </FormControl>) : null}\r\n                    {is_parent ? (<SelectInput\r\n                        label={Titles.ParentTo}\r\n                        options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                            return {\r\n                                value: node.id,\r\n                                title: UIA.GetNodeTitle(node)\r\n                            }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.ParentLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceNode,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ParentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n                    <ControlSideBarMenu>\r\n                        {is_agent ? (<ControlSideBarMenuItem onClick={() => {\r\n                            this.props.graphOperation(UIA.NEW_PERMISSION_NODE, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                linkProperties: {\r\n                                    properties: { ...UIA.LinkProperties.PermissionLink }\r\n                                }\r\n                            });\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.AddPermission} description={Titles.AddPermissionDescription} />) : null}\r\n                    </ControlSideBarMenu>\r\n                </TabPane>\r\n            </SideMenuContainer>);\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { HTTP_METHODS, MethodFunctions } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass FunctionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Function);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var agent_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).filter(x => UIA.GetNodeProp(x, UIA.NodeProperties.IsAgent)).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var function_types = Object.keys(MethodFunctions).map(funcKey => {\r\n            return {\r\n                title: MethodFunctions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.AgentOperator}\r\n                    options={agent_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n\r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.CustomFunction}\r\n                    title={Titles.CustomFunctionDescription}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseScopeGraph] : ''}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseScopeGraph,\r\n                            id: currentNode.id,\r\n                            value: value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.APPLY_FUNCTION_CONSTRAINTS, {\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PARAMETER_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddParameter} description={Titles.AddParameterDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_FUNCTION_OUTPUT_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddFunctionOutput} description={Titles.AddFunctionOutputDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(FunctionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties, GeneratedDataTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\nclass PropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Property);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var show_dependent = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseUIDependsOn];;\r\n            var use_model_as_type = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseModelAsType);\r\n            var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n            var property_nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).filter(x => {\r\n                return x.id !== currentNode.id;\r\n            }).map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseDependentProperty}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIDependsOn] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIDependsOn,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_dependent ? (<SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        options={property_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIDependsOn,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIDependsOn] : ''} />) : null}\r\n                </FormControl>) : null}\r\n\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                </FormControl>) : null}\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.ManyToManyNexus}\r\n                        title={Titles.ManyToManyNexusDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.ManyToManyNexusType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }].filter(x => x));\r\n                        }} />\r\n                    <SelectInput\r\n                        options={Object.keys(GeneratedDataTypes).map(key => ({ title: key, value: key }))}\r\n                        label={Titles.PropertyGeneratedType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.DataGenerationType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.DataGenerationType)} />\r\n                    {many_to_many_enabled ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).filter(x => UIA.GetNodeProp(x, NodeProperties.ManyToManyNexus)).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.ManyToManyNexus}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusType)} />) : null}\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseModelAsType}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseModelAsType] : ''}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UseModelAsType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.UIModelType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {!use_model_as_type ? (<SelectInput\r\n                        options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />) : null}\r\n                    {use_model_as_type ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyModelType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UIModelType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIModelType] : ''} />) : null}\r\n                    {use_model_as_type ? (<CheckBox\r\n                        label={Titles.IsReferenceList}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsReferenceList] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsReferenceList,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />) : null}\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_ATTRIBUTE_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.AttributeLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddAttribute} description={Titles.AddAttributeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, LinkProperties } from '../constants/nodetypes';\r\nimport { addValidatator, TARGET, createEventProp, GetNode, GetLinkChain, GetLinkChainItem, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { FunctionTypes, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport { DataChainFunctions } from '../constants/datachain';\r\n\r\nclass DataChainActvityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.DataChain);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let dataChainFuncType = UIA.GetNodeProp(currentNode, NodeProperties.DataChainFunctionType);\r\n        let showModel = DataChainFunctions[dataChainFuncType] ? DataChainFunctions[dataChainFuncType].ui.model : false;\r\n        let showProperty = DataChainFunctions[dataChainFuncType] ? DataChainFunctions[dataChainFuncType].ui.property : false;\r\n        let showNode1 = DataChainFunctions[dataChainFuncType] ? DataChainFunctions[dataChainFuncType].ui.node_1 : false;\r\n        let showNode2 = DataChainFunctions[dataChainFuncType] ? DataChainFunctions[dataChainFuncType].ui.node_2 : false;\r\n        let node_inputs = UIA.NodesByType(state, NodeTypes.DataChain).filter(x => {\r\n            return UIA.GetNodeProp(x, NodeProperties.GroupParent) === UIA.GetNodeProp(currentNode, NodeProperties.GroupParent) && x !== currentNode;\r\n        }).toNodeSelect();\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <CheckBox\r\n                        label={Titles.EntryPoint}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.EntryPoint)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.EntryPoint,\r\n                                id: currentNode.id,\r\n                                value: value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.AsOutput}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.AsOutput)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.AsOutput,\r\n                                id: currentNode.id,\r\n                                value: value\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.DataChainFunctionType,\r\n                                id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        label={Titles.FunctionTypes}\r\n                        value={dataChainFuncType}\r\n                        options={Object.keys(DataChainFunctions).map(key => ({ title: key, value: key }))}\r\n                    />\r\n                    {showModel ? <SelectInput\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIModelType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                            })\r\n                        }}\r\n                        label={Titles.Models}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.UIModelType)}\r\n                        options={UIA.GetModelNodes().toNodeSelect()}\r\n                    /> : null}\r\n                    {showProperty ? <SelectInput\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: UIA.GetNodeProp(currentNode, UIA.NodeProperties.Property),\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Property,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.PropertyLink }\r\n                            })\r\n                        }}\r\n                        label={Titles.Property}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.Property)}\r\n                        options={UIA.GetModelPropertyChildren(UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIModelType)).toNodeSelect()}\r\n                    /> : null}\r\n                    {showNode1 ? <SelectInput\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                source: currentNode.properties[UIA.NodeProperties.ChainNodeInput1],\r\n                                target: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ChainNodeInput1,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                source: value,\r\n                                target: id,\r\n                                properties: { ...UIA.LinkProperties.DataChainLink }\r\n                            })\r\n                        }}\r\n                        label={`${Titles.Input} 1`}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.ChainNodeInput1)}\r\n                        options={node_inputs}\r\n                    /> : null}\r\n                    {showNode2 ? <SelectInput\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                source: currentNode.properties[UIA.NodeProperties.ChainNodeInput2],\r\n                                target: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ChainNodeInput2,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                source: value,\r\n                                target: id,\r\n                                properties: { ...UIA.LinkProperties.DataChainLink }\r\n                            })\r\n                        }}\r\n                        label={`${Titles.Input} 2`}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.ChainNodeInput2)}\r\n                        options={node_inputs}\r\n                    /> : null}\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(DataChainActvityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { AFTER_EFFECTS } from '../constants/functiontypes';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport { SetAffterEffectProperty, GetMethodNode, GetNode, TARGET, GetLinkChain, SOURCE } from '../methods/graph_methods';\r\nimport { LinkType, Methods } from '../constants/nodetypes';\r\n\r\nclass AfterEffectsActivityMenu extends Component {\r\n\tgetControls() {\r\n\t\tvar { state } = this.props;\r\n\t\tvar currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\t\tlet result = [];\r\n\t\tlet afterMethod = UIA.GetNodeProp(currentNode, UIA.NodeProperties.AfterMethod);\r\n\t\tresult.push(<SelectInput\r\n\t\t\tlabel={Titles.Type}\r\n\t\t\toptions={Object.keys(AFTER_EFFECTS).map(val => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: val,\r\n\t\t\t\t\ttitle: val\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t\tonChange={(value) => {\r\n\t\t\t\tvar id = currentNode.id;\r\n\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\tprop: UIA.NodeProperties.AfterMethod,\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tvalue\r\n\t\t\t\t});\r\n\t\t\t}}\r\n\t\t\tvalue={UIA.GetNodeProp(currentNode, UIA.NodeProperties.AfterMethod)} />)\r\n\t\tlet methodNode = GetMethodNode(state, currentNode.id);\r\n\t\tlet methodProps = UIA.GetMethodProps(methodNode);\r\n\r\n\t\tif (afterMethod && AFTER_EFFECTS[afterMethod]) {\r\n\t\t\tlet { templateKeys } = AFTER_EFFECTS[afterMethod];\r\n\t\t\tif (templateKeys) {\r\n\t\t\t\tObject.values(templateKeys).map(value => {\r\n\t\t\t\t\tlet { key, nodeTypes, parent, useNodes, useMethodTypes, useString } = value;\r\n\t\t\t\t\tlet setup = UIA.GetNodeProp(currentNode, UIA.NodeProperties.AfterMethodSetup);\r\n\t\t\t\t\tif (!parent && !useNodes && !useMethodTypes && !useString) {\r\n\t\t\t\t\t\tresult.push(<SelectInput\r\n\t\t\t\t\t\t\tlabel={key}\r\n\t\t\t\t\t\t\toptions={UIA.GetMethodNodeSelectOptions(methodProps)}\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tvar afterEffectSetup = SetAffterEffectProperty(currentNode, afterMethod, key, value);\r\n\r\n\t\t\t\t\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\t\t\t\t\tprop: UIA.NodeProperties.AfterMethodSetup,\r\n\t\t\t\t\t\t\t\t\tid: currentNode.id,\r\n\t\t\t\t\t\t\t\t\tvalue: afterEffectSetup\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={setup && setup[afterMethod] && setup[afterMethod][key] ? setup[afterMethod][key] : null} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (setup && setup[afterMethod] && setup[afterMethod][parent]) {\r\n\t\t\t\t\t\tif (methodProps[setup[afterMethod][parent]]) {\r\n\t\t\t\t\t\t\tlet parentNode = UIA.GetGraphNode(methodProps[setup[afterMethod][parent]]);\r\n\t\t\t\t\t\t\tif (parentNode) {\r\n\t\t\t\t\t\t\t\tlet propertyNodes = GetLinkChain(state, {\r\n\t\t\t\t\t\t\t\t\tid: parentNode.id,\r\n\t\t\t\t\t\t\t\t\tlinks: [{\r\n\t\t\t\t\t\t\t\t\t\ttype: LinkType.PropertyLink,\r\n\t\t\t\t\t\t\t\t\t\tdirection: SOURCE\r\n\t\t\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tresult.push(<SelectInput\r\n\t\t\t\t\t\t\t\t\tlabel={key}\r\n\t\t\t\t\t\t\t\t\toptions={propertyNodes.toNodeSelect()}\r\n\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\tvar afterEffectSetup = SetAffterEffectProperty(currentNode, afterMethod, key, value);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\t\t\t\t\t\t\tprop: UIA.NodeProperties.AfterMethodSetup,\r\n\t\t\t\t\t\t\t\t\t\t\tid: currentNode.id,\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: afterEffectSetup\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvalue={setup && setup[afterMethod] && setup[afterMethod][key] ? setup[afterMethod][key] : null} />)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet ae_nodes = UIA.NodesByType(state, nodeTypes);\r\n\t\t\t\t\t\tlet options = [];\r\n\t\t\t\t\t\tif (useNodes) {\r\n\t\t\t\t\t\t\toptions = ae_nodes.toNodeSelect();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (useMethodTypes) {\r\n\t\t\t\t\t\t\toptions = Object.keys(Methods).map(t => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttitle: t,\r\n\t\t\t\t\t\t\t\t\tvalue: Methods[t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (useString) {\r\n\t\t\t\t\t\t\toptions = Object.values(useString).map(t => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttitle: t,\r\n\t\t\t\t\t\t\t\t\tvalue: t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult.push(<SelectInput\r\n\t\t\t\t\t\t\tlabel={key}\r\n\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tvar afterEffectSetup = SetAffterEffectProperty(currentNode, afterMethod, key, value);\r\n\r\n\t\t\t\t\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\t\t\t\t\tprop: UIA.NodeProperties.AfterMethodSetup,\r\n\t\t\t\t\t\t\t\t\tid: currentNode.id,\r\n\t\t\t\t\t\t\t\t\tvalue: afterEffectSetup\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={setup && setup[afterMethod] && setup[afterMethod][key] ? setup[afterMethod][key] : null} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\trender() {\r\n\t\tvar { state } = this.props;\r\n\t\tvar active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.AfterEffect);\r\n\t\tvar currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\t\tlet controls = active ? this.getControls() : [];\r\n\t\treturn (\r\n\t\t\t<TabPane active={active}>\r\n\t\t\t\t{currentNode ? (<FormControl>\r\n\t\t\t\t\t{controls}\r\n\t\t\t\t</FormControl>) : null}\r\n\t\t\t</TabPane>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UIConnect(AfterEffectsActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass AttributeFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Attribute);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var choice_nodes = UIA.NodesByType(state, UIA.NodeTypes.ChoiceList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var validation_nodes = UIA.NodesByType(state, UIA.NodeTypes.ValidationList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var show_choice = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UIAttributeType] == UIA.NodeAttributePropertyTypes.CHOICE;\r\n        var show_validations = UIA.Use(currentNode, UIA.NodeProperties.UseUIValidations);\r\n        var show_options = UIA.Use(currentNode, UIA.NodeProperties.UseUIOptions);\r\n        var show_extenions = UIA.Use(currentNode, UIA.NodeProperties.UseUIExtensionList);\r\n        var option_nodes = UIA.NodesByType(state, UIA.NodeTypes.OptionList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        \r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        title={Titles.UINameDescription}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.NodeAttributePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodeAttributePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />\r\n                    {show_choice ? (<SelectInput\r\n                        label={Titles.ChoiceTypes}\r\n                        options={choice_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceType] : ''} />) : null}\r\n                    {show_choice ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CHOICE_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddChoice}\r\n                                description={Titles.AddChoiceDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UISingular}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UISingular] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UISingular,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.UseUIValidations}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIValidations] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIValidations,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_validations ? (<SelectInput\r\n                        label={Titles.ValidationTypes}\r\n                        options={validation_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIValidationType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValdationLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />) : null}\r\n                    {show_validations ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_VALIDATION_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddValidationList}\r\n                                description={Titles.AddValidationListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UseUIOptions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIOptions] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIOptions,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_options ? (<SelectInput\r\n                        label={Titles.OptionsType}\r\n                        options={option_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />) : null}\r\n                    {show_options ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_OPTION_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseUIExtensions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIExtensionList] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIExtensionList,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                    {show_extenions ? (<SelectInput\r\n                        label={Titles.ExtensionTypes}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtensionList],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionList,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtensionList] : ''} />) : null}\r\n                    {show_extenions ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_EXTENSION_LIST_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddExtensionList}\r\n                                description={Titles.AddExtensionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(AttributeFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass NodeList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n\r\n        let nodeProperty = this.props.nodeProperty;\r\n        let currentNode = this.props.node;\r\n        if (!currentNode) {\r\n            return <div></div>\r\n        }\r\n        let linkType = this.props.linkType;\r\n        let items = this.props.items;\r\n        //  (UIA.GetNodeProp(currentNode, nodeProperty) || []).map(t => {\r\n        //     let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n        //     if (node) {\r\n        //         return {\r\n        //             title: UIA.GetNodeTitle(node),\r\n        //             id: node.id\r\n        //         }\r\n        //     }\r\n        // });\r\n        let { state } = this.props;\r\n\r\n        return <ButtonList active={true} isSelected={(item) => {\r\n            var types = UIA.GetNodeProp(currentNode, nodeProperty) || [];\r\n            if (types && types.some)\r\n                return item && types.some(x => x === item.id);\r\n        }}\r\n            items={items}\r\n            onClick={(item) => {\r\n                if (this.props.removeLink) {\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target: item.value,\r\n                        source: currentNode.id\r\n                    })\r\n                }\r\n                if (this.props.removeNode) {\r\n                    this.props.graphOperation(UIA.REMOVE_NODE, {\r\n                        id: item.value\r\n                    })\r\n                }\r\n            }} />\r\n    }\r\n}\r\nexport default UIConnect(NodeList)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport NodeList from './nodelist';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\n\r\nclass PermissionMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Condition);\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ChoiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {/* <ControlSideBarMenuHeader title={Titles.ChoiceListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_CHOICE_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddChoiceItem}\r\n                        description={Titles.AddChoiceItemDescription} />\r\n                </ControlSideBarMenu> */}\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItemContainer extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                {this.props.title}\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewItem from './treeviewitem';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\nimport MainSideBar from './mainsidebar';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport SideBar from './sidebar';\r\nimport { GetParameterName, createScreenParameter } from '../methods/graph_methods';\r\nimport TabPane from './tabpane';\r\n\r\nconst NODE_MANAGEMENT_MENU = 'NODE_MANAGEMENT_MENU';\r\nconst NODE_MANAGEMENT = 'NODE_MANAGEMENT';\r\nclass UIParameters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Screen);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let filter = (this.state.filter || '').toLowerCase();\r\n        let groups = UIA.GetNodes(state).filter(x => {\r\n            if (!filter) {\r\n                return false;\r\n            }\r\n            var str = this.toFilterString(x);\r\n            return str.indexOf(filter) !== -1;\r\n        }).groupBy(x => UIA.GetNodeProp(x, NodeProperties.NODEType));\r\n        let screenParameters = UIA.GetNodeProp(currentNode, NodeProperties.ScreenParameters) || [];\r\n        let body = screenParameters.map((t, index) => {\r\n            return (\r\n                <TreeViewMenu title={GetParameterName(t)} hideArrow={true} icon={'fa fa-terminal'} key={'param' + index} onClick={() => {\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: NodeProperties.ScreenParameters,\r\n                        id: currentNode.id,\r\n                        value: screenParameters.filter(x => x !== t)\r\n                    });\r\n                }} />)\r\n        }) || [];\r\n        const UI_PARAMETERS = 'UI_PARAMETERS';\r\n        const SCREEN_PARAMETERS = 'SCREEN_PARAMETERS';\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <MainSideBar active={active} relative={true}>\r\n                    <SideBar relative={true} style={{ paddingTop: 0 }}>\r\n                        <SideBarMenu>\r\n                            <TreeViewMenu\r\n                                title={`${Titles.UIParameters}`}\r\n                                icon={'fa fa-object-group'}\r\n                                open={UIA.Visual(state, UI_PARAMETERS)}\r\n                                active={UIA.Visual(state, UI_PARAMETERS)}\r\n                                onClick={() => {\r\n                                    this.props.toggleVisual(UI_PARAMETERS)\r\n                                }}>\r\n                                <FormControl sidebarform={true}>\r\n                                    <TextInput value={UIA.Application(state, 'ui-parameter')}\r\n                                        onClick={() => {\r\n                                            let uiParameter = UIA.Application(state, 'ui-parameter');\r\n                                            if (uiParameter) {\r\n                                                let parameter = createScreenParameter(uiParameter);\r\n                                                screenParameters.push(parameter);\r\n                                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                    prop: NodeProperties.ScreenParameters,\r\n                                                    id: currentNode.id,\r\n                                                    value: screenParameters.unique(x => x.name)\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        onChange={(value) => {\r\n                                            this.props.setApplication('ui-parameter', value);\r\n                                        }} inputgroup={true} placeholder={Titles.Filter} />\r\n                                </FormControl>\r\n                                <TreeViewMenu\r\n                                    icon=\"fa fa-dot-circle-o\"\r\n                                    title={Titles.Menu}\r\n                                    open={UIA.Visual(state, SCREEN_PARAMETERS)}\r\n                                    active={UIA.Visual(state, SCREEN_PARAMETERS)}\r\n                                    onClick={() => {\r\n                                        this.props.toggleVisual(SCREEN_PARAMETERS)\r\n                                    }}>\r\n                                    {body}\r\n                                </TreeViewMenu>\r\n                            </TreeViewMenu >\r\n                        </SideBarMenu>\r\n                    </SideBar>\r\n                </MainSideBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(UIParameters);","import { uuidv4 } from \"../utils/array\";\r\n\r\nexport function createComponentApi() {\r\n    return {\r\n        properties: {},\r\n        instanceTypes: {}\r\n    };\r\n}\r\nexport function getComponentApiList(props) {\r\n    if (props && props.properties) {\r\n        return Object.values(props.properties).map(v => ({ title: v.property, id: v.id, value: v.property }))\r\n    }\r\n    return [];\r\n}\r\nexport function addComponentApi(props, ops) {\r\n    let { modelProp } = ops;\r\n    if (props && props.properties) {\r\n        if (!props.properties[modelProp])\r\n            props.properties[modelProp] = { property: modelProp, id: uuidv4() };\r\n        else {\r\n            props.properties[modelProp].property = modelProp;\r\n        }\r\n    }\r\n    return props;\r\n}\r\nexport function removeComponentApi(props, ops) {\r\n    let { modelProp } = ops;\r\n    if (props && props.properties) {\r\n        delete props.properties[modelProp];\r\n    }\r\n    return props;\r\n\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport MainSideBar from './mainsidebar';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode, NodeTypes, NodeProperties, MAIN_CONTENT, LAYOUT_VIEW, LinkProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { ComponentTypes, NAVIGATION, InstanceTypes } from '../constants/componenttypes';\r\nimport { GetConnectedNodeByType, CreateLayout, TARGET, GetParameterName, getComponentPropertyList, GetCellProperties, GetNodesLinkedTo, SOURCE } from '../methods/graph_methods';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport CheckBox from './checkbox';\r\nimport { getComponentApiList } from '../methods/component_api_methods';\r\nclass ComponentActivityMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    getComponentApi(prop_obj, key) {\r\n        let { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodeLayout = UIA.GetNodeProp(currentNode, NodeProperties.ComponentParameters);\r\n\r\n        let currentProperty = this.state.selectedCell;\r\n        if (prop_obj && prop_obj.nodeProperty) {\r\n\r\n            let componentApi = UIA.GetNodeProp(currentNode, NodeProperties.ComponentApi);\r\n            if (componentApi) {\r\n                let selectedComponentApiProperty = key;\r\n                let componentProperties = UIA.GetNodeProp(currentNode, prop_obj.nodeProperty);\r\n                componentProperties = componentProperties || {};\r\n                let {\r\n                    instanceType,\r\n                    model,\r\n                    apiProperty,\r\n                    modelProperty\r\n                } = componentProperties[selectedComponentApiProperty] || {};\r\n\r\n                return [\r\n                    selectedComponentApiProperty ? (<SelectInput\r\n                        label={Titles.InstanceType}\r\n                        value={instanceType}\r\n                        options={Object.keys(InstanceTypes).map(t => ({\r\n                            title: t,\r\n                            value: InstanceTypes[t]\r\n                        }))}\r\n                        onChange={(value) => {\r\n                            componentProperties[selectedComponentApiProperty] = componentProperties[selectedComponentApiProperty] || {};\r\n                            let temp = componentProperties[selectedComponentApiProperty];\r\n                            temp.instanceType = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: prop_obj.nodeProperty,\r\n                                id: currentNode.id,\r\n                                value: componentProperties\r\n                            });\r\n                        }} />) : null,\r\n\r\n                    selectedComponentApiProperty && instanceType === InstanceTypes.ApiProperty ? (<SelectInput\r\n                        label={key}\r\n                        value={apiProperty}\r\n                        options={getComponentApiList(componentApi)}\r\n                        onChange={(value) => {\r\n                            componentProperties[selectedComponentApiProperty] = componentProperties[selectedComponentApiProperty] || {};\r\n                            let temp = componentProperties[selectedComponentApiProperty];\r\n                            temp.apiProperty = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: prop_obj.nodeProperty,\r\n                                id: currentNode.id,\r\n                                value: componentProperties\r\n                            });\r\n                        }} />) : null,\r\n                    selectedComponentApiProperty && instanceType === InstanceTypes.ScreenInstance ? (<SelectInput\r\n                        label={Titles.Models}\r\n                        value={model}\r\n                        options={UIA.NodesByType(this.props.state, NodeTypes.Model).toNodeSelect()}\r\n                        onChange={(value) => {\r\n                            componentProperties[selectedComponentApiProperty] = componentProperties[selectedComponentApiProperty] || {};\r\n                            let temp = componentProperties[selectedComponentApiProperty];\r\n                            temp.model = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: prop_obj.nodeProperty,\r\n                                id: currentNode.id,\r\n                                value: componentProperties\r\n                            });\r\n                        }} />) : null,\r\n                    selectedComponentApiProperty && instanceType === InstanceTypes.ScreenInstance ? (<SelectInput\r\n                        options={GetNodesLinkedTo(UIA.GetRootGraph(state), {\r\n                            id: model,\r\n                            direction: SOURCE\r\n                        }).toNodeSelect()}\r\n                        onChange={(val) => {\r\n                            componentProperties[selectedComponentApiProperty] = componentProperties[selectedComponentApiProperty] || {};\r\n                            let temp = componentProperties[selectedComponentApiProperty];\r\n                            temp.modelProperty = val;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: prop_obj.nodeProperty,\r\n                                id: currentNode.id,\r\n                                value: componentProperties\r\n                            });\r\n                        }}\r\n                        label={Titles.Property}\r\n                        value={modelProperty} />) : null\r\n                ].filter(x => x)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) === UIA.NodeTypes.ComponentNode;\r\n        let screenOption = currentNode ? GetConnectedNodeByType(state, currentNode.id, NodeTypes.ScreenOption) || GetConnectedNodeByType(state, currentNode.id, NodeTypes.ComponentNode, TARGET) : null;\r\n        let _ui_type = UIA.GetNodeProp(screenOption, UIA.NodeProperties.UIType);\r\n        let componentTypes = ComponentTypes[_ui_type] || {};\r\n        let componentType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType);\r\n        let components = [];\r\n        if (componentTypes[componentType] && componentTypes[componentType].properties) {\r\n            Object.keys(componentTypes[componentType].properties).map(key => {\r\n                let prop_obj = componentTypes[componentType].properties[key];\r\n                if (prop_obj && prop_obj.ui) {\r\n                    if (prop_obj.options) {\r\n                        components.push((<SelectInput\r\n                            label={key}\r\n                            key={`${_ui_type} - ${componentType}- ${key}`}\r\n                            options={prop_obj.options.map(t => ({ title: t, value: t }))}\r\n                            value={UIA.GetNodeProp(currentNode, prop_obj.nodeProperty)}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: prop_obj.nodeProperty,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />));\r\n                    }\r\n                    else if (prop_obj.nodeTypes) {\r\n                        components.push((<SelectInput\r\n                            label={key}\r\n                            key={`${_ui_type} - ${componentType}- ${key}`}\r\n                            options={UIA.NodesByType(state, prop_obj.nodeTypes).filter(prop_obj.nodeFilter || (() => true)).toNodeSelect()}\r\n                            value={UIA.GetNodeProp(currentNode, prop_obj.nodeProperty)}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: prop_obj.nodeProperty,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />));\r\n                    }\r\n                    else if (prop_obj.boolean) {\r\n                        components.push((<CheckBox\r\n                            label={key}\r\n                            key={`${_ui_type} - ${componentType}- ${key}`}\r\n                            value={UIA.GetNodeProp(currentNode, prop_obj.nodeProperty)}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: prop_obj.nodeProperty,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />));\r\n                    }\r\n                    else if (prop_obj.parameterConfig) {\r\n                        components.push(this.getComponentApi(prop_obj, key));\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        components = components.filter(x => x);\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.Label}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Label)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Label,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        label={Titles.ComponentType}\r\n                        options={Object.keys(componentTypes).map(t => ({ title: t, value: t }))}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ComponentType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {components}\r\n                </FormControl>) : null}\r\n                {componentType && componentTypes && componentTypes[componentType] && componentTypes[componentType].layout ? (\r\n                    <ControlSideBarMenu>\r\n                        <ControlSideBarMenuItem onClick={() => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Layout,\r\n                                id: currentNode.id,\r\n                                value: UIA.GetNodeProp(currentNode, NodeProperties.Layout) || CreateLayout()\r\n                            });\r\n                            this.props.setVisual(MAIN_CONTENT, LAYOUT_VIEW);\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.SetupLayout} description={Titles.SetupLayout} />\r\n                        <ControlSideBarMenuItem onClick={() => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Layout,\r\n                                id: currentNode.id,\r\n                                value: null\r\n                            });\r\n                            this.props.setVisual(MAIN_CONTENT, null);\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.ClearLayout} description={Titles.ClearLayout} />\r\n                        <ControlSideBarMenuItem onClick={() => {\r\n                            this.props.graphOperation(UIA.NEW_COMPONENT_NODE, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                groupProperties: {\r\n                                },\r\n                                properties: {\r\n                                    [UIA.NodeProperties.UIType]: UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIType)\r\n                                },\r\n                                linkProperties: {\r\n                                    properties: { ...LinkProperties.ComponentLink }\r\n                                }\r\n                            });\r\n                            this.props.setVisual(MAIN_CONTENT, LAYOUT_VIEW);\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.AddComponentNew} description={Titles.AddComponentNew} />\r\n                        {UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType) === ComponentTypes.ReactNative.List.key ? (<ControlSideBarMenuItem onClick={() => {\r\n                            this.props.graphOperation(UIA.NEW_COMPONENT_NODE, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                groupProperties: {\r\n                                },\r\n                                properties: {\r\n                                    [UIA.NodeProperties.UIType]: UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIType)\r\n                                },\r\n                                linkProperties: {\r\n                                    properties: { ...LinkProperties.ListItem }\r\n                                }\r\n                            });\r\n                            this.props.setVisual(MAIN_CONTENT, LAYOUT_VIEW);\r\n                        }} icon={'fa fa-puzzle-piece'} title={Titles.SetListItem} description={Titles.SetListItem} />) : null\r\n                        }\r\n                    </ControlSideBarMenu>\r\n                ) : null}\r\n\r\n                {componentType && componentTypes && componentTypes[componentType] && componentTypes[componentType].datasource ? (\r\n                    <ControlSideBarMenu> <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_DATA_SOURCE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            properties: {\r\n                                [UIA.NodeProperties.UIType]: UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIType),\r\n                                [UIA.NodeProperties.UIText]: `${UIA.GetNodeTitle(currentNode)} Data Source`\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.DataSourceLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddDataSource} description={Titles.AddDataSource} />  </ControlSideBarMenu>) : null}\r\n\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ComponentActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode, NodeTypes, NodeProperties, MAIN_CONTENT, LAYOUT_VIEW, LinkProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { ComponentTypes, InstanceTypes } from '../constants/componenttypes';\r\nimport { GetConnectedNodeByType, CreateLayout, TARGET, createComponentProperties, addComponentProperty, hasComponentProperty, getComponentProperty, getComponentPropertyList, removeComponentProperty } from '../methods/graph_methods';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport TextInput from './textinput';\r\nimport SideMenuContainer from './sidemenucontainer';\r\nimport ButtonList from './buttonlist';\r\nimport { SCOPE_TAB } from './dashboard';\r\nclass ComponentPropertyMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = [UIA.NodeTypes.ComponentNode, UIA.NodeTypes.ScreenOption].some(v => v === UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType));\r\n        let screenOption = currentNode ? GetConnectedNodeByType(state, currentNode.id, NodeTypes.ScreenOption) || GetConnectedNodeByType(state, currentNode.id, NodeTypes.ComponentNode, TARGET) : null;\r\n        let componentTypes = ComponentTypes[UIA.GetNodeProp(screenOption, UIA.NodeProperties.UIType)] || {};\r\n        let componentType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType);\r\n        let models = UIA.NodesByType(state, NodeTypes.Model).toNodeSelect();\r\n        let componentProps = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentProperties) || createComponentProperties();\r\n        return (\r\n            <SideMenuContainer active={active} tab={SCOPE_TAB} visual={\"component-property-menu\"} title={Titles.ComponentPropertyMenu}>\r\n                <TabPane active={active}>\r\n                    {currentNode ? (<FormControl>\r\n                        <SelectInput\r\n                            label={Titles.Models}\r\n                            options={models}\r\n                            value={this.state.modelType}\r\n                            onChange={(value) => {\r\n                                this.setState({ modelType: value })\r\n                            }} />\r\n                        <TextInput\r\n                            label={Titles.Property}\r\n                            value={this.state.modelProp}\r\n                            onChange={(value) => {\r\n                                this.setState({ modelProp: value });\r\n                            }} />\r\n                        <SelectInput\r\n                            label={Titles.InstanceType}\r\n                            value={this.state.instanceType}\r\n                            options={Object.keys(InstanceTypes).map(t => ({ title: t, value: InstanceTypes[t] }))}\r\n                            onChange={(value) => {\r\n                                this.setState({ instanceType: value });\r\n                            }} />\r\n                    </FormControl>) : null}\r\n                    {componentType && componentTypes && componentTypes[componentType] && componentTypes[componentType] ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                if (this.state.modelType && this.state.modelProp) {\r\n\r\n                                    if (hasComponentProperty(componentProps, this.state.modelProp)) {\r\n\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                            target: getComponentProperty(componentProps, this.state.modelProp),\r\n                                            source: currentNode.id\r\n                                        });\r\n                                    }\r\n\r\n                                    componentProps = addComponentProperty(componentProps, {\r\n                                        instanceType: this.state.instanceType,\r\n                                        modelType: this.state.modelType,\r\n                                        modelProp: this.state.modelProp\r\n                                    })\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.ComponentProperties,\r\n                                        id: currentNode.id,\r\n                                        value: componentProps\r\n                                    });\r\n                                    this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                        target: this.state.modelType,\r\n                                        source: currentNode.id,\r\n                                        properties: {\r\n                                            ...UIA.LinkProperties.ComponentPropertyLink\r\n                                        }\r\n                                    })\r\n                                }\r\n                            }} icon={'fa fa-plus'} title={Titles.Add} description={Titles.Add} />\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                if (this.state.modelType && this.state.modelProp) {\r\n\r\n                                    if (hasComponentProperty(componentProps, this.state.modelProp)) {\r\n\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                            target: getComponentProperty(componentProps, this.state.modelProp),\r\n                                            source: currentNode.id\r\n                                        });\r\n                                    }\r\n\r\n                                    componentProps = removeComponentProperty(componentProps, { instanceType: this.state.instanceType, modelType: this.state.modelType, modelProp: this.state.modelProp })\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.ComponentProperties,\r\n                                        id: currentNode.id,\r\n                                        value: componentProps\r\n                                    });\r\n\r\n                                }\r\n                            }} icon={'fa fa-plus'} title={Titles.Remove} description={Titles.Remove} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <ButtonList active={true} isSelected={(item) => { return item.value === this.state.selectedItem; }}\r\n                        items={getComponentPropertyList(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentProperties))}\r\n                        onClick={(item) => {\r\n                            this.setState({\r\n                                modelType: getComponentProperty(componentProps, item.value),\r\n                                instanceType: getComponentProperty(componentProps, item.value, 'instanceTypes'),\r\n                                modelProp: item.value,\r\n                                selectedItem: item.value\r\n                            })\r\n                        }} />\r\n                </TabPane>\r\n            </SideMenuContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ComponentPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model)\r\n            .map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        let agents = UIA.NodesByType(state, NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n\r\n        var input = currentNode ? (<SelectInput\r\n            label={Titles.Models}\r\n            options={nodes}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterModel),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterModel,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterModel)} />) : null;\r\n        var agentinput = currentNode ? (<SelectInput\r\n            label={Titles.Agents}\r\n            options={agents}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterAgent,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.AgentTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent)} />) : null;\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {input}\r\n                    {agentinput}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode, NodeTypes, NodeProperties, MAIN_CONTENT, LAYOUT_VIEW, LinkProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { ComponentTypes, InstanceTypes } from '../constants/componenttypes';\r\nimport { GetConnectedNodeByType, CreateLayout, TARGET, addComponentProperty, hasComponentProperty, getComponentProperty, getComponentPropertyList, removeComponentProperty } from '../methods/graph_methods';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport TextInput from './textinput';\r\nimport SideMenuContainer from './sidemenucontainer';\r\nimport ButtonList from './buttonlist';\r\nimport { SCOPE_TAB } from './dashboard';\r\nimport { createComponentApi, removeComponentApi, addComponentApi } from '../methods/component_api_methods';\r\nclass ComponentAPIMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = [UIA.NodeTypes.ComponentNode, UIA.NodeTypes.ScreenOption].some(v => v === UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType));\r\n        let screenOption = currentNode ? GetConnectedNodeByType(state, currentNode.id, NodeTypes.ScreenOption) || GetConnectedNodeByType(state, currentNode.id, NodeTypes.ComponentNode, TARGET) : null;\r\n        let componentTypes = ComponentTypes[UIA.GetNodeProp(screenOption, UIA.NodeProperties.UIType)] || {};\r\n        let componentType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType);\r\n        let models = UIA.NodesByType(state, NodeTypes.Model).toNodeSelect();\r\n        let componentProps = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentApi) || createComponentApi();\r\n        return (\r\n            <SideMenuContainer active={active} tab={SCOPE_TAB} visual={\"component-api-menu\"} title={Titles.ComponentAPIMenu}>\r\n                <TabPane active={active}>\r\n                    {currentNode ? (<FormControl>\r\n                        <TextInput\r\n                            label={Titles.Property}\r\n                            value={this.state.modelProp}\r\n                            onChange={(value) => {\r\n                                this.setState({ modelProp: value });\r\n                            }} />\r\n                    </FormControl>) : null}\r\n                    {componentType && componentTypes && componentTypes[componentType] && componentTypes[componentType] ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                if (this.state.modelProp) {\r\n                                    componentProps = addComponentApi(componentProps, {\r\n                                        modelProp: this.state.modelProp\r\n                                    })\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.ComponentApi,\r\n                                        id: currentNode.id,\r\n                                        value: componentProps\r\n                                    });\r\n                                }\r\n                            }} icon={'fa fa-plus'} title={Titles.Add} description={Titles.Add} />\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                if (this.state.modelType && this.state.modelProp) {\r\n                                    componentProps = removeComponentApi(componentProps, { modelProp: this.state.modelProp })\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.ComponentApi,\r\n                                        id: currentNode.id,\r\n                                        value: componentProps\r\n                                    });\r\n\r\n                                }\r\n                            }} icon={'fa fa-plus'} title={Titles.Remove} description={Titles.Remove} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <ButtonList active={true} isSelected={(item) => { return item.value === this.state.selectedItem; }}\r\n                        items={getComponentPropertyList(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentApi))}\r\n                        onClick={(item) => {\r\n                            this.setState({\r\n                                modelProp: item.value,\r\n                                selectedItem: item.value\r\n                            })\r\n                        }} />\r\n                </TabPane>\r\n            </SideMenuContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ComponentAPIMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ValidationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.ValidationListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_VALIDATION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidationLinkItem\r\n                                }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddValidationItem}\r\n                        description={Titles.AddValidationItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass ValidationItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.ValidationRules).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.ValidationRules[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.ValidationType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />\r\n\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, LinkProperties } from '../constants/nodetypes';\r\n\r\nclass ValidatorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.Method, UIA.NodeTypes.Function]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorFunction] : ''} />\r\n                </FormControl>) : null}\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    this.props.graphOperation(UIA.NEW_CONDITION_NODE, {\r\n                        parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                        groupProperties: {\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.ConditionLink }\r\n                        }\r\n                    });\r\n                }}>{Titles.AddCondition}</button>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass OptionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.OptionListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_OPTION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.OptionItemLink }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddOptionItem}\r\n                        description={Titles.AddOptionItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createExecutor();\r\n                            executor = addValidatator(executor, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Executor,\r\n                                value: executor\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ExecutorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveExecutorPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes, ConfigurationProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport TextInput from './textinput';\r\nclass ConfigurationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Configuration);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <CheckBox\r\n                    label={Titles.UseHttps}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseHttps)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseHttps,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />\r\n                {\r\n                    Object.keys(ConfigurationProperties).map(key => {\r\n                        return (<TextInput\r\n                            label={key}\r\n                            key={key}\r\n                            value={UIA.GetNodeProp(currentNode, key)}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: key,\r\n                                    id: currentNode.id,\r\n                                    value: value\r\n                                });\r\n                            }} />\r\n                        );\r\n                    })\r\n                }\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ConfigurationActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport TextInput from './textinput';\r\nclass ConditionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Condition);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var conditionType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ConditionType);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var methods = currentNode ? GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }, {\r\n                type: LinkType.FunctionOperator,\r\n                direction: TARGET\r\n            }]\r\n        }) : [];\r\n        let ref2_properties = [];\r\n        let ref1_properties = [];\r\n        let matchRef = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        var model_options = [];\r\n        var functions = methods.map(x => UIA.GetNodeProp(x, NodeProperties.FunctionType)).filter(x => x);\r\n        if (ConditionFunctionSetups[conditionType] && ConditionFunctionSetups[conditionType].functions && functions && functions.length === 1) {\r\n            let { constraints } = ConditionFunctionSetups[conditionType].functions[functions[0]];\r\n            if (constraints) {\r\n                let methodProps = UIA.GetNodeProp(methods[0], NodeProperties.MethodProps);\r\n                model_options = Object.keys(constraints).filter(t => constraints[t].nodeTypes.indexOf(NodeTypes.Model) !== -1)\r\n                    .map(x => {\r\n                        if (methodProps && methodProps[x]) {\r\n                            return {\r\n                                title: `${UIA.GetNodeProp(GetNode(graph, methodProps[x]), NodeProperties.UIText) || x}(${x})`,\r\n                                value: x\r\n                            }\r\n                        }\r\n                        return {\r\n                            title: x,\r\n                            value: x\r\n                        }\r\n                    });\r\n\r\n                if (methodProps) {\r\n\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    if (temp.ref2) {\r\n                        ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n                    }\r\n                    if (temp.ref1) {\r\n                        ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <TextInput\r\n                    label={Titles.NodeLabel}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                    }} />\r\n                <SelectInput\r\n                    label={Titles.ConditionType}\r\n                    options={Object.keys(ConditionTypes).map(t => ({ title: t, value: ConditionTypes[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ConditionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={conditionType} />\r\n                {this.getMatchManyReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getEnumeration({\r\n                    conditionType,\r\n                    graph,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getMatchReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods,\r\n                    graph\r\n                })}\r\n            </TabPane>\r\n        );\r\n    }\r\n\r\n    getProperties(methodProps, temp, state, key = 'ref2') {\r\n        let refId = methodProps[temp[key]];\r\n        let properties = [];\r\n        let nodeProperties = UIA.GetModelPropertyNodes(refId);\r\n        let currentNode = UIA.GetNodeById(refId);\r\n        if (nodeProperties) {\r\n            properties = nodeProperties.toNodeSelect();\r\n        }\r\n        let logicalChildren = UIA.GetLogicalChildren(currentNode.id);\r\n        properties = [...properties, ...logicalChildren.toNodeSelect()];\r\n        return properties;\r\n    }\r\n    getEnumeration(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            graph,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {};\r\n        if (conditionType !== ConditionTypes.InEnumerable) {\r\n            return [];\r\n        }\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var permissionNode = GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }]\r\n        })[0]\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {\r\n            ref1: GetNodeProp(permissionNode, UIA.NodeProperties.PermissionRequester)\r\n        };\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        var enumeration = temp && temp[UIA.NodeProperties.Enumeration] ? temp[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (temp && temp[UIA.NodeProperties.AllowedEnumValues] ? temp[UIA.NodeProperties.AllowedEnumValues] : []);\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).toNodeSelect();\r\n        return [\r\n            (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.EnumerationReference,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ),\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    temp.ref1Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />,\r\n            currentNode ? (<SelectInput\r\n                label={Titles.Enumeration}\r\n                options={enumeration_nodes}\r\n                key={`${currentNode.id}-enum`}\r\n                onChange={(value) => {\r\n                    var id = currentNode.id;\r\n                    let target = temp[UIA.NodeProperties.Enumeration] || '';\r\n                    temp[UIA.NodeProperties.Enumeration] = value;\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target,\r\n                        source: id,\r\n                        linkType: UIA.LinkProperties.EnumerationReferenceLink.type\r\n                    })\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id,\r\n                        value: temp\r\n                    });\r\n                    this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                        target: value,\r\n                        source: id,\r\n                        properties: { ...UIA.LinkProperties.EnumerationReferenceLink }\r\n                    });\r\n                }}\r\n                value={temp[UIA.NodeProperties.Enumeration] || ''} />) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-allowed-enum-title`} title={Titles.AllowedEnums} />,\r\n            allowed && allowed.length ? allowed.map((_enum) => {\r\n                return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed].filter(x => x !== _enum);\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-disalloweditem-title`} title={Titles.DisallowedEnums} />,\r\n            disallowed && disallowed.length ? disallowed.map((_enum) => {\r\n                return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed, _enum].unique();\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null\r\n        ]\r\n    }\r\n\r\n    getMatchManyReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ) : null,\r\n            matchRef.ref1 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref1UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref1UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && !temp.ref1UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref1_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref1Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1Property} />\r\n            ) : null,\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref2 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref2UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref2UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref2 && !temp.ref2UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref2_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref2Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2Property} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.ManyToManyNexus}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp[ConditionTypeParameters.RefManyToMany] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef[ConditionTypeParameters.RefManyToMany]} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.ManyToManyExists}\r\n                    value={matchRef.refManyToManyExists}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyExists = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={refManyToMany_properties}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyProperty = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.refManyToManyProperty} />\r\n            ) : null,\r\n            matchRef.refManyToManyProperty && matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (<SelectInput\r\n                title={Titles.Condition}\r\n                label={Titles.Condition}\r\n                options={[...Object.keys(ConditionTypeOptions)].map(t => ({ title: t, value: t }))}\r\n                value={matchRef.refManyToManyCondition}\r\n                onChange={(value) => {\r\n                    temp.refManyToManyCondition = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />) : null\r\n        ].filter((x) => x).map((x, index) => {\r\n\r\n            return x;\r\n        });\r\n    }\r\n\r\n    getMatchReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        if (conditionType !== ConditionTypes.MatchReference) {\r\n            return null;\r\n        }\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var propertyType = UIA.NodeProperties.MatchReference;\r\n\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [(\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1} />\r\n        ),\r\n        matchRef.ref1 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref1UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref1 && !temp.ref1UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp[ConditionTypeParameters.Ref1Property] = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />\r\n        ) : null,\r\n        (\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2} />\r\n        ),\r\n        matchRef.ref2 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref2UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref2 && !temp.ref2UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref2_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2Property} />\r\n        ) : null\r\n        ].filter(x => x)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ConditionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SelectInput from './selectinput';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { getNodeLinks, getNodesLinkedFrom } from '../methods/graph_methods';\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\nimport { FunctionConstraintKeys } from '../constants/functiontypes';\r\nclass ParameterActivityMenu extends Component {\r\n    mustBeModel(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsModel]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeProperty(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsProperty]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeFunction(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsFunction]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Parameter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var linkedNodes = [];\r\n        var nodes = [];\r\n        if (currentNode && active) {\r\n            linkedNodes = getNodesLinkedFrom(UIA.GetCurrentGraph(state), { id: currentNode.id });\r\n            var musBeModel = this.mustBeModel(currentNode);\r\n            if (musBeModel) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeProperty(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeFunction(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Function).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode && linkedNodes.length === 0 ? (<SelectInput\r\n                    label={Titles.ParameterType}\r\n                    options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                        return {\r\n                            value: UIA.NodePropertyTypes[x],\r\n                            title: x\r\n                        }\r\n                    })}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.CodePropertyType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodePropertyType] : ''} />) : null}\r\n\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.ChoiceTypes}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIChoiceNode,\r\n                            id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ParameterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass OptionItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var show_custom = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseCustomUIOption];\r\n\r\n        var custom_options = UIA.NodesByType(state, UIA.NodeTypes.OptionCustom).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseCustomOption}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseCustomUIOption] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseCustomUIOption,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_custom ? (<SelectInput\r\n                        options={custom_options}\r\n                        label={Titles.OptionsType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionTypeCustom,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionCustomLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom] : ''} />) : (<SelectInput\r\n                            options={Object.keys(UIA.OptionsTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                return {\r\n                                    value: UIA.OptionsTypes[x],\r\n                                    title: x\r\n                                }\r\n                            })}\r\n                            label={Titles.OptionsType}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIOptionType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />)}\r\n                    {show_custom ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CUSTOM_OPTION, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties, ExecutorUI } from '../constants/nodetypes';\r\nimport { createValidator, addValidatator, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { uuidv4 } from '../utils/array';\r\n\r\nclass ExecutorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType || UIA.NodeTypes.Executor);\r\n        if (!active) {\r\n            return <div></div>;\r\n        }\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, this.props.modelKey || UIA.NodeProperties.ExecutorModel)) {\r\n\r\n            executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor);\r\n        }\r\n        let _ui = this.props.ui || ExecutorUI;\r\n        let propertyExecutors = <div></div>;\r\n        if (executor && executor.properties) {\r\n            propertyExecutors = Object.keys(executor.properties).map(key => {\r\n                let _validates = executor.properties[key];\r\n                let visualKey = `ExecutorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n\r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v]\r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ExecutorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(_ui).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(executorUI => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${executorUI}-afjlskf-asfd`}\r\n                            title={executorUI}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n                                executor = addValidatator(executor, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: executorUI,\r\n                                        ..._ui[executorUI]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                    value: executor\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveExecution} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedExecutors}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-executions`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectExecution}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectexecution`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyExecutors = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyExecutors}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyExecutors\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass ExecutorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(Methods).map(t => ({ title: t, value: t }))}\r\n                        label={Titles.Methods}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunctionType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunctionType] : ''} />\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.OutputModel}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorModelOutput],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorModelOutput,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorModelLink }\r\n                            });\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModelOutput)} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunction] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = [];\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let visualKey = `ValidatorPropertyMenu${key}-${currentNode.id}`;\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                            validator = addValidatator(validator, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Validator,\r\n                                value: validator\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidatorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveValidationPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum.id] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum.id] = !item.enumeration[_enum.id];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum.value}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (old_one) {\r\n                                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                        target: old_one,\r\n                                        source: id,\r\n                                    });\r\n                                }\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.ValidatorModelItemLink,\r\n                                        ...createEventProp(LinkEvents.Remove, {\r\n                                            property: this.props.property,\r\n                                            validator: this.props.validator,\r\n                                            function: 'OnRemoveValidationItemPropConnection',\r\n                                            node: item.node\r\n                                        })\r\n                                    }\r\n                                });\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ValidatorItem from './validatoritem';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, ValidationUI } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, removeValidator, removeValidatorValidation, uuidv4 } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = <div></div>;\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let _validates = validator.properties[key];\r\n                let visualKey = `ValidatorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n \r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v] \r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: NodeProperties.Validator,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ValidatorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(ValidationUI).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(valiationUi => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${valiationUi}-afjlskf-asfd`}\r\n                            title={valiationUi}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                validator = addValidatator(validator, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: valiationUi,\r\n                                        ...ValidationUI[valiationUi]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveValidation} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedValidations}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-validations`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectValidation}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectvalidation`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyValidations\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport SelectInput from './selectinput';\r\nclass ExtensionListActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionTypeList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\r\n        var extentiontypes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={extentiontypes}\r\n                        label={Titles.ExtensionOptions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ExtensionListTypeActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_EXTENTION_NODE, {\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddExtensionNode}\r\n                        description={Titles.AddExtensionNodeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionListActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetLinkChain, GetLinkChainItem, TARGET } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\nimport SidebarButton from './sidebarbutton';\r\n\r\nclass PermissionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Permission);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var permissions = currentNode ? { ...Methods, ...(currentNode.properties[UIA.NodeProperties.UIPermissions] || {}) } : null;\r\n        var model_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var targetNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionTarget] : '';\r\n\r\n        var requestorNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionRequester] : '';\r\n        var propertyNodes = null;\r\n        if (targetNodeId) {\r\n            propertyNodes = getNodesByLinkType(graph, { id: targetNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            if (propertyNodes)\r\n                propertyNodes = propertyNodes.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                })\r\n        }\r\n        var requestorPropertyNodes = null;\r\n        if (requestorNodeId) {\r\n            requestorPropertyNodes = getNodesByLinkType(graph, { id: requestorNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            requestorPropertyNodes = requestorPropertyNodes.map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            })\r\n        }\r\n        var methodNode = currentNode ? GetLinkChainItem(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                direction: TARGET,\r\n                type: LinkType.FunctionOperator\r\n            }]\r\n        }) : null;\r\n\r\n        let methodProps = UIA.GetMethodOptions(UIA.GetNodeProp(methodNode, NodeProperties.MethodProps));\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionAttributes} />\r\n                {currentNode ? (<CheckBox\r\n                    title={Titles.OwnedResourcesDescription}\r\n                    label={Titles.OwnedResources}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsOwned]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsOwned,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                <ControlSideBarMenuHeader title={Titles.PermissionActions} />\r\n                {\r\n                    permissions ? (<FormControl>{(Object.keys(permissions).map(key => {\r\n                        return (<CheckBox key={`permissions-${key}`}\r\n                            label={Titles.Permissions[key]}\r\n                            value={permissions[key]}\r\n                            onChange={(value) => {\r\n                                permissions[key] = value;\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIPermissions,\r\n                                    id: currentNode.id,\r\n                                    value: {\r\n                                        ...permissions\r\n                                    }\r\n                                });\r\n                            }} />);\r\n                    }))}</FormControl>) : null\r\n                }\r\n                {methodProps && methodProps.length ? (<SelectInput\r\n                    options={methodProps}\r\n                    label={Titles.PermissionValueType}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.PermissionValueType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionValueType)} />) : null}\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    this.props.graphOperation(UIA.NEW_CONDITION_NODE, {\r\n                        parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                        groupProperties: {\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.ConditionLink }\r\n                        }\r\n                    });\r\n                }}>{Titles.AddCondition}</button>\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nclass ReferenceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = !!(UIA.Application(state, UIA.GRAPH_SCOPE) || []).length;\r\n        var referencable_nodes = (UIA.NodesByType(state, NodeTypes.Model, { useRoot: true }) || []).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.AddReference}\r\n                        options={referencable_nodes}\r\n                        onChange={(id) => {\r\n                            var node = UIA.GetNodeFromRoot(state, id);\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.ADD_NEW_REFERENCE_NODE,\r\n                                options: {\r\n                                    node,\r\n                                    rootNode: UIA.GetRootGraph(state)\r\n                                }\r\n                            }])\r\n                            // this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            //     target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                            //     source: id\r\n                            // })\r\n                            // this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            //     prop: UIA.NodeProperties.UIDependsOn,\r\n                            //     id,\r\n                            //     value\r\n                            // });\r\n                            // this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            //     target: value,\r\n                            //     source: id,\r\n                            //     properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            // });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ReferenceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as UIA from '../actions/uiactions';\r\n\r\nexport default class NavBarButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: UIA.GUID()\r\n        }\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    menuItems() {\r\n        var result = [];\r\n        var { menuItems } = this.props;\r\n        if (menuItems) {\r\n            menuItems.map((mi, index) => {\r\n                if (mi.onClick && mi.icon) {\r\n                    result.push((\r\n                        <a key={`goo-menu-${this.state.id}-icon-index-${index}`} title={mi.title} className=\"menu-item\" onClick={mi.onClick} style={{ pointerEvents: 'all' }}> <i className={mi.icon}></i> </a>\r\n                    ));\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        if (!this.props.visible) {\r\n            return <div></div>\r\n        }\r\n        var menuItems = this.menuItems();\r\n        return (\r\n            <div className=\"goo-menu container\" style={{\r\n                position: 'fixed',\r\n                transition: 'all 200ms',\r\n                top: this.props.top || 0,\r\n                left: this.props.left || 0\r\n            }}>\r\n                <nav className=\"menu\" style={{ pointerEvents: 'none' }}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={() => {\r\n                            if (this.props.onToggle) {\r\n                                this.props.onToggle();\r\n                            }\r\n                        }}\r\n                        checked={this.props.open}\r\n                        style={{ pointerEvents: 'all' }}\r\n                        href=\"#\" className=\"menu-open\"\r\n                        id={`${this.state.id}`} />\r\n                    <label className=\"menu-open-button\" htmlFor={`${this.state.id}`} style={{ pointerEvents: 'all' }}>\r\n                        <span className=\"hamburger hamburger-1\"></span>\r\n                        <span className=\"hamburger hamburger-2\"></span>\r\n                        <span className=\"hamburger hamburger-3\"></span>\r\n                    </label>\r\n                    {menuItems}\r\n                    {/* <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-bar-chart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-plus\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-heart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-envelope\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-cog\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-ellipsis-h\"></i> </a> */}\r\n                </nav>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport class GooMenuSVG extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'none' }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n                    <defs>\r\n                        <filter id=\"shadowed-goo\">\r\n\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feGaussianBlur in=\"goo\" stdDeviation=\"3\" result=\"shadow\" />\r\n                            <feColorMatrix in=\"shadow\" mode=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 -0.2\" result=\"shadow\" />\r\n                            <feOffset in=\"shadow\" dx=\"1\" dy=\"1\" result=\"shadow\" />\r\n                            <feComposite in2=\"shadow\" in=\"goo\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                        <filter id=\"goo\">\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                    </defs>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport Box from './box';\r\nclass ChoiceListItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceListItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let properties = [];\r\n        if (currentNode) {\r\n            let model = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel);\r\n            properties = (getNodesByLinkType(graph, {\r\n                id: model,\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }) || []).map(t => {\r\n                return (<CheckBox\r\n                    key={`checkbox-${t.id}`}\r\n                    label={UIA.GetNodeTitle(t)}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties)[t.id] : ''}\r\n                    onChange={(value) => {\r\n                        let fprops = UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) || {};\r\n                        fprops[t.id] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FilterPropreties,\r\n                            id: currentNode.id,\r\n                            value: fprops\r\n                        });\r\n                    }} />)\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {properties}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, LinkProperties, GroupProperties } from '../constants/nodetypes';\r\nimport { addValidatator, TARGET, createEventProp, GetNode, GetLinkChain, GetLinkChainItem, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { FunctionTypes, FunctionTemplateKeys } from '../constants/functiontypes';\r\n\r\nclass DataChainOperator extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.DataChain);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <MainSideBar active={active} relative={true}>\r\n                <SideBar style={{ paddingTop: 0 }}>\r\n                    <SideBarMenu>\r\n                        <TreeViewMenu active={true} hideArrow={true} title={Titles.SplitDataChain} icon={'fa fa-share-alt'} onClick={() => {\r\n                            let id = currentNode.id;\r\n                            this.props.graphOperation(UIA.ADD_NEW_NODE, {\r\n                                parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                                nodeType: NodeTypes.DataChain,\r\n                                groupProperties: {\r\n                                    [GroupProperties.ExternalEntryNode]: UIA.GetNodeProp(currentNode, NodeProperties.ChainParent),\r\n                                    [GroupProperties.GroupEntryNode]: currentNode.id,\r\n                                    [GroupProperties.GroupExitNode]: currentNode.id,\r\n                                    [GroupProperties.ExternalExitNode]: UIA.GetDataChainNextId(currentNode.id)\r\n                                },\r\n                                properties: {\r\n                                    [NodeProperties.ChainParent]: currentNode.id\r\n                                },\r\n                                linkProperties: {\r\n                                    properties: { ...LinkProperties.DataChainLink }\r\n                                }\r\n                            });\r\n                        }} />\r\n                        {UIA.GetNodeProp(currentNode, NodeProperties.GroupParent) ? <TreeViewMenu active={true} hideArrow={true} title={Titles.MergeChain} icon={'fa fa-code-fork '} onClick={() => {\r\n                            let groupProperties = UIA.GetNodeProp(currentNode, NodeProperties.GroupParent) ? {\r\n                                id: UIA.getGroup(UIA.GetNodeProp(currentNode, NodeProperties.GroupParent)).id\r\n                            } : null;\r\n                            if (groupProperties)\r\n                                this.props.graphOperation(UIA.ADD_NEW_NODE, {\r\n                                    nodeType: NodeTypes.DataChain,\r\n                                    properties: { [NodeProperties.MergeChain]: true },\r\n                                    groupProperties,\r\n                                    linkProperties: {\r\n                                        properties: { ...LinkProperties.DataChainLink }\r\n                                    }\r\n                                });\r\n                        }} /> : null}\r\n                        {UIA.GetNodeProp(currentNode, NodeProperties.GroupParent) ? <TreeViewMenu active={true} hideArrow={true} title={Titles.StitchEnd} icon={'fa fa-compress'} onClick={() => {\r\n                            let groupProperties = UIA.GetNodeProp(currentNode, NodeProperties.GroupParent) ? {\r\n                                id: UIA.getGroup(UIA.GetNodeProp(currentNode, NodeProperties.GroupParent)).id\r\n                            } : null;\r\n                            if (groupProperties) {\r\n                                let groupExitNode = UIA.GetGroupProp(groupProperties.id, GroupProperties.GroupExitNode);\r\n                                let externalExitNode = UIA.GetGroupProp(groupProperties.id, GroupProperties.ExternalExitNode);\r\n                                if (externalExitNode) {\r\n                                    this.props.graphOperation([{\r\n                                        operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                            target: externalExitNode,\r\n                                            source: groupExitNode\r\n                                        }\r\n                                    }, {\r\n                                        operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                            target: externalExitNode,\r\n                                            source: currentNode.id\r\n                                        }\r\n                                    }, {\r\n                                        operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                            id: externalExitNode,\r\n                                            prop: NodeProperties.ChainParent,\r\n                                            value: externalExitNode\r\n                                        }\r\n                                    },{\r\n                                        operation: UIA.UPDATE_GROUP_PROPERTY, options: {\r\n                                            id: groupProperties.id,\r\n                                            prop: GroupProperties.GroupExitNode,\r\n                                            value: currentNode.id\r\n                                        }\r\n                                    }]);\r\n                                }\r\n                            }\r\n                        }} /> : null}\r\n                        {currentNode && UIA.IsEndOfDataChain(currentNode.id) ? (\r\n                            <TreeViewMenu active={true} hideArrow={true} title={Titles.AddDataChain} icon={'fa fa-plus'} onClick={() => {\r\n                                let groupProperties = UIA.GetNodeProp(currentNode, NodeProperties.GroupParent) ? {\r\n                                    id: UIA.getGroup(UIA.GetNodeProp(currentNode, NodeProperties.GroupParent)).id\r\n                                } : null;\r\n                                this.props.graphOperation(UIA.ADD_NEW_NODE, {\r\n                                    parent: currentNode.id,\r\n                                    nodeType: NodeTypes.DataChain,\r\n                                    groupProperties,\r\n                                    properties: {\r\n                                        [NodeProperties.ChainParent]: currentNode.id\r\n                                    },\r\n                                    linkProperties: {\r\n                                        properties: { ...LinkProperties.DataChainLink }\r\n                                    }\r\n                                });\r\n                            }} />) : null}\r\n                    </SideBarMenu>\r\n                </SideBar>\r\n            </MainSideBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(DataChainOperator)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Slider extends Component {\r\n    min() {\r\n        return this.props.min || \"1\";\r\n    }\r\n    max() {\r\n        return this.props.max || \"100\";\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"slidecontainer\">\r\n                <input type=\"range\" min={this.min()} onChange={(evt) => {\r\n                    if (this.props.onChange && !isNaN(evt.target.value)) {\r\n                        this.props.onChange(parseFloat(evt.target.value));\r\n                    }\r\n                }} max={this.max()} value={this.value()} className=\"slider\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenu extends Component {\r\n    menuType() {\r\n        return 'messages-menu';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'open' : '';\r\n    }\r\n    ariaExpanded() {\r\n        return this.props.open ? 'true' : 'false';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    label() {\r\n        return null;//<span className=\"label label-success\">4</span>\r\n    }\r\n    usermode() {\r\n        return this.props.usermode;\r\n    }\r\n    usermenu() {\r\n        return this.props.usermode ? 'user user-menu' : '';\r\n    }\r\n    userbody() {\r\n        return this.props.usermode ? 'user user-body' : '';\r\n    }\r\n    userheader() {\r\n        return this.props.usermode ? 'header' : 'header';\r\n    }\r\n    render() {\r\n        var ops = {};\r\n        if (this.props.width) {\r\n            ops.style = { width: this.props.width }\r\n        }\r\n        return (\r\n            <li className={`dropdown ${this.usermenu()} ${this.menuType()} ${this.open()}`}>\r\n                <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded={this.ariaExpanded()} onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.label()}\r\n                </a>\r\n                <ul className=\"dropdown-menu\" {...ops}>\r\n                    {this.props.headerText ? <li className={this.userheader()}>{this.props.headerText}</li> : null}\r\n                    {this.props.header ? <li className={this.userheader()}>{this.props.header}</li> : null}\r\n                    {this.usermode() ? (<li className={this.userbody()}>\r\n                        <div className=\"row\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </li>) : (<li className={this.userbody()}>\r\n                        <ul className=\"menu\">\r\n                            {this.props.children}\r\n                        </ul>\r\n                    </li>)}\r\n                    {this.props.footer ? this.props.footer : null}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContent extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-content`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className=\"user-footer\">\r\n                {this.props.children} \r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`nav-tabs-custom`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class EnumeratedTable extends Component {\r\n    render() {\r\n        var me = this;\r\n        var dataFunc = me.props.dataFunc || ((y) => y || '');\r\n        var rows = (me.props.data || []).map((x, xi) => {\r\n            return (<tr key={`${xi}-row`}>\r\n                {(me.props.columns || []).map((c, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell`}>{dataFunc(x[c.value], c.value, xi)}</td>)\r\n                })\r\n                }\r\n                {(me.props.columnButtons || []).map((fx, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell-btn`}>{fx(x, xi)}</td>)\r\n                })}\r\n            </tr>);\r\n        });\r\n        var headers = (me.props.columns || []).map((x, index) => {\r\n            return (<th key={`col-${index}`}>{x.title}</th>)\r\n        });\r\n\r\n        (me.props.columnButtons || []).map((fx, inde) => {\r\n            headers.push(<th key={`${inde}-cell-header`}></th>)\r\n        })\r\n        var ops = {};\r\n        ops.style = { maxHeight: this.props.maxHeight || 500, overflowY: 'auto' }\r\n        return (\r\n            <div {...ops}>\r\n                <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {headers}\r\n                        </tr>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport DropDownMenu from './dropdown';\r\nimport Box from './box';\r\nimport TabContent from './tabcontent';\r\nimport UserFooter from './userfooter';\r\nimport TabContainer from './tabcontainer';\r\nimport EnumeratedTable from './enumeratedtable';\r\n\r\nimport { createExtensionDefinition, defaultExtensionDefinitionType } from '../methods/graph_methods';\r\nconst EXTENSION_DEFINITION_MENU = 'EXTENSION_DEFINITION_MENU';\r\nconst EDITMODE = 'EDITMODE';\r\nclass ExtensionDefinitionMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            property: ''\r\n        }\r\n    }\r\n    form() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            if (def) {\r\n\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    editKey(k) {\r\n        return `${k}-edit`\r\n    }\r\n    tabKey(k) {\r\n        return `${k}-tabkey`;\r\n    }\r\n    footer() {\r\n        //\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active && currentNode) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            var addBtn = def && def.config.isEnumeration ? (<div className=\"pull-right\">\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    def.config.list = [...def.config.list, {}];\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                        id: currentNode.id,\r\n                        value: { ...def }\r\n                    });\r\n                }}>{Titles.Add}</button>\r\n            </div>) : null;\r\n            var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n            var btns = (<div className=\"pull-left\">\r\n                <div className=\"btn-group\">\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionDefinition)}\r\n                        type=\"button\"\r\n                        title={Titles.ExtensionDefinition}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-pencil-square\" /></button>\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionConfig)}\r\n                        type=\"button\" title={Titles.ExtensionConfig}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-book\" /></button>\r\n                    <button onClick={() => {\r\n                        if (!def) {\r\n                            def = createExtensionDefinition();\r\n                        }\r\n                        this.props.setVisual(tab_key, Titles.DependsOn);\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                            id: currentNode.id,\r\n                            value: def\r\n                        });\r\n                    }}\r\n                        type=\"button\" title={Titles.DependsOn}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-balance-scale\" /></button>\r\n                </div>\r\n                <div className=\"btn-group\">\r\n                    {UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? (<button onClick={() => {\r\n                        if (this.state.property) {\r\n                            if (!def) {\r\n                                def = createExtensionDefinition();\r\n                            }\r\n                            def.definition[this.state.property] = defaultExtensionDefinitionType();\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: def\r\n                            });\r\n\r\n                            this.setState({ property: '' });\r\n                        }\r\n                    }}\r\n                        type=\"button\" className=\"btn btn-default btn-flat\">{Titles.Add}</button>) : null}\r\n                </div>\r\n            </div>\r\n            )\r\n            return (<UserFooter>\r\n                {btns}\r\n                {addBtn}\r\n            </UserFooter>)\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var form = this.form();\r\n        var footer = this.footer();\r\n        var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n        var properties = currentNode ? UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        }) : [];\r\n        return (\r\n            <TabPane active={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                {!UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    {def ? <CheckBox\r\n                        label={Titles.Enumerable}\r\n                        value={def.config.isEnumeration}\r\n                        onChange={(value) => {\r\n                            def.config.isEnumeration = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, config: { ...def.config } }\r\n                            });\r\n                        }} /> : null}\r\n\r\n                    <TextInput\r\n                        value={this.state.property}\r\n                        label={Titles.Property}\r\n                        onChange={(val) => {\r\n                            this.setState({ property: val });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionConfig) ? (\r\n                    <EnumeratedTable columns={Object.keys(def.definition).map(key => {\r\n                        return { title: key, value: key }\r\n                    })}\r\n                        dataFunc={(x, key, index) => {\r\n                            return (<TextInput\r\n                                label={Titles.Value}\r\n                                value={x}\r\n                                onChange={(value) => {\r\n                                    if (def.config.isEnumeration) {\r\n                                        if (def.config && def.config.list && def.config.list[index]) {\r\n                                            def.config.list[index][key] = value;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (def.config && def.config.dictionary) {\r\n                                            def.config.dictionary[key] = value;\r\n                                        }\r\n                                    }\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def, config: { ...def.config, dictionary: { ...def.config.dictionary }, list: [...def.config.list] } }\r\n                                    });\r\n                                }}\r\n                            />)\r\n                        }}\r\n                        columnButtons={def.config.isEnumeration ? [(x, xi) => {\r\n                            return <div className=\"pull-right\"><button onClick={() => {\r\n                                if (def.config.isEnumeration) {\r\n                                    if (def.config && def.config.list && def.config.list[xi]) {\r\n                                        def.config.list = [...def.config.list.filter((a, i) => i !== xi)];\r\n                                    }\r\n                                    // delete def.definition[x.name];\r\n                                    // def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n                                }\r\n\r\n                            }} className=\"btn btn-block btn-default\"><i className=\"fa fa-trash\" /></button></div>\r\n                        }] : []}\r\n                        data={(def.config.isEnumeration ? def.config.list.map(obj => {\r\n                            return {\r\n                                ...obj\r\n                            }\r\n                        }) : ([{ ...def.config.dictionary }]))}\r\n                    />\r\n                ) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? <EnumeratedTable columns={[{ title: Titles.Name, value: 'name' }]}\r\n                    columnButtons={[(x) => {\r\n                        return <div className=\"pull-right\">\r\n                            <div class=\"btn-group\">\r\n                                <button title={Titles.KeyField} onClick={() => {\r\n                                    def.config = { ...def.config, keyField: x.name };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className={`btn   ${x.name === def.config.keyField ? 'btn-success' : 'btn-default'}`}><i className={`fa fa-anchor`} /></button>\r\n                                <button onClick={() => {\r\n                                    delete def.definition[x.name];\r\n                                    def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className=\"btn btn-default\">x</button>\r\n                            </div>\r\n                        </div>\r\n                    }]}\r\n                    data={Object.keys(def.definition).map(key => {\r\n                        return {\r\n                            name: key\r\n                        }\r\n                    })}\r\n                /> : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.DependsOn}\r\n                        title={Titles.DependsOnDescription}\r\n                        value={def.definition.dependsOn}\r\n                        onChange={(value) => {\r\n                            def.definition.dependsOn = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        title={Titles.DependentPropertyDescription}\r\n                        options={properties}\r\n                        value={def.definition.property}\r\n                        onChange={(value) => {\r\n                            def.definition.property = value;\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionDependencyLink }\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <TextInput\r\n                        label={Titles.MatchingValue}\r\n                        title={Titles.MatchingValueDescription}\r\n                        value={def.definition.match}\r\n                        onChange={(value) => {\r\n                            def.definition.match = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {footer}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionDefinitionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, HTTP_METHODS, MethodFunctions } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\n\r\nclass MethodActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var function_types = Object.keys(MethodFunctions).map(funcKey => {\r\n            return {\r\n                title: MethodFunctions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.NotIncludeInController}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.NotIncludedInController,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.NotIncludedInController)} />) : null}\r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.AsForm}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AsForm,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.AsForm)} />) : null}\r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.NoApiPrefix}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.NoApiPrefix,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.NoApiPrefix)} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_MODEL_ITEM_FILTER, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.ModelItemFilter }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddModelItemFilter} description={Titles.AddModelItemFilterDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_AFTER_METHOD, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.AfterMethod }\r\n                            },\r\n                            properties: {\r\n                                [NodeProperties.UIText]: `${UIA.GetNodeProp(currentNode, NodeProperties.UIText)} After Effect`\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddAfterMethods} description={Titles.AddAfterMethodsDescription} />) : null}\r\n\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass MethodPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var functionType = UIA.GetNodeProp(currentNode, NodeProperties.FunctionType);\r\n        let functionObject = MethodFunctions[functionType];\r\n        let methodparams = [];\r\n        if (functionObject && functionObject.constraints) {\r\n            methodparams = Object.values(functionObject.constraints).map(constraint => {\r\n                let nodes = UIA.NodesByType(state, constraint.nodeTypes).filter(node => {\r\n                    return !Object.keys(constraint).filter(x => x != 'key' && x !== 'nodeTypes')\r\n                        .find(x => UIA.GetNodeProp(node, x) !== constraint[x])\r\n                }).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n                return (<SelectInput\r\n                    key={constraint.key}\r\n                    label={constraint.key}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        let methodProps = UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) || {};\r\n                        let oldConnect = methodProps[constraint.key];\r\n                        methodProps[constraint.key] = value;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: oldConnect,\r\n                            source: id,\r\n                            linkType: UIA.LinkProperties.FunctionOperator.type\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodProps,\r\n                            id: currentNode.id,\r\n                            value: methodProps\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) ? UIA.GetNodeProp(currentNode, NodeProperties.MethodProps)[constraint.key] : ''} />);\r\n            })\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {methodparams}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst MAESTRO_DETAILS_MENU = 'MAESTRO_DETAILS_MENU';\r\n\r\nclass MaestroDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                active={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(MAESTRO_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-maestro-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewItem from './treeviewitem';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nconst NODE_MANAGEMENT_MENU = 'NODE_MANAGEMENT_MENU';\r\nconst NODE_MANAGEMENT = 'NODE_MANAGEMENT';\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let filter = (this.state.filter || '').toLowerCase();\r\n        let groups = UIA.GetNodes(state).filter(x => {\r\n            if (!filter) {\r\n                return false;\r\n            }\r\n            var str = this.toFilterString(x);\r\n            return str.indexOf(filter) !== -1;\r\n        }).groupBy(x => UIA.GetNodeProp(x, NodeProperties.NODEType));\r\n        let body = [];\r\n        body = Object.keys(groups).filter(group => groups[group].length).map((group, gi) => {\r\n            let groupKey = `NodeManagement-${group}`;\r\n            let groupNodes = groups[group].map((gn, gni) => {\r\n                return (\r\n                    <TreeViewMenu key={`node-${group}-${gi}-${gni}`}\r\n                        hideArrow={true}\r\n                        title={UIA.GetNodeProp(gn, NodeProperties.UIText)}\r\n                        icon={!UIA.GetNodeProp(gn, NodeProperties.Pinned) ? \"fa fa-circle-o\" : 'fa fa-check-circle-o'}\r\n                        toggle={() => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Pinned,\r\n                                id: gn.id,\r\n                                value: !UIA.GetNodeProp(gn, NodeProperties.Pinned)\r\n                            });\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            })\r\n            return (\r\n                <TreeViewMenu title={group} key={`node-${group}-${gi}`}\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    open={UIA.Visual(state, groupKey)}\r\n                    active={UIA.Visual(state, groupKey)}\r\n                    right={<span className=\"label label-primary \">{groups[group].length}</span>}\r\n                    toggle={() => {\r\n                        this.props.toggleVisual(groupKey)\r\n                    }}>\r\n                    {groupNodes}\r\n                </TreeViewMenu>\r\n            );\r\n        })\r\n        return (\r\n            <TreeViewMenu\r\n                title={`${Titles.Nodes} ${graph ? Object.keys(graph.visibleNodes || {}).length : ''}`}\r\n                icon={'fa fa-object-group'}\r\n                open={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                active={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(NODE_MANAGEMENT)\r\n                }}>\r\n\r\n                <TreeViewMenu\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    title={Titles.Menu}\r\n                    open={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    active={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    onClick={() => {\r\n                        this.props.toggleVisual(NODE_MANAGEMENT_MENU)\r\n                    }}>\r\n                    <TreeViewMenu hideArrow={true} title={Titles.ClearPinned} icon={'fa fa-times'} onClick={() => {\r\n                        this.props.graphOperation(UIA.GetNodes(state).filter(x => UIA.GetNodeProp(x, NodeProperties.Pinned)).map(node => {\r\n                            return {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.Pinned,\r\n                                    id: node.id,\r\n                                    value: false\r\n                                }\r\n                            }\r\n                        }));\r\n                    }} />\r\n                </TreeViewMenu>\r\n                <FormControl sidebarform={true}>\r\n                    <TextInput value={this.state.filter} onChange={(value) => {\r\n                        this.setState({ filter: value });\r\n                    }} inputgroup={true} placeholder={Titles.Filter} />\r\n                </FormControl>\r\n                {body}\r\n            </TreeViewMenu >\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport MainSideBar from './mainsidebar';\r\nimport FormControl from './formcontrol';\r\nimport SideBar from './sidebar';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode, NodeTypes, NodeProperties, MAIN_CONTENT, LAYOUT_VIEW, LinkProperties } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { ComponentTypes, APP_METHOD, InstanceTypes } from '../constants/componenttypes';\r\nimport { GetConnectedNodeByType, CreateLayout, TARGET, GetParameterName, getComponentPropertyList, GetNodesLinkedTo, SOURCE, updateClientMethod, getClientMethod } from '../methods/graph_methods';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport { MethodFunctions } from '../constants/functiontypes';\r\nconst METHOD_PARAMETERS = 'METHOD_PARAMETERS';\r\nclass MethodParameterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) === UIA.NodeTypes.ComponentNode;\r\n        let screenOption = currentNode ? GetConnectedNodeByType(state, currentNode.id, NodeTypes.ScreenOption) || GetConnectedNodeByType(state, currentNode.id, NodeTypes.ComponentNode, TARGET) : null;\r\n        let _ui_type = UIA.GetNodeProp(screenOption, UIA.NodeProperties.UIType);\r\n        let componentTypes = ComponentTypes[_ui_type] || {};\r\n        let componentType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentType);\r\n        let componentProperties = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentProperties);\r\n        let componentPropertiesList = getComponentPropertyList(componentProperties);\r\n        let components = [];\r\n        let methodParams = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ClientMethodParameters) || {};\r\n        let componentNodeProperties = UIA.GetComponentNodeProperties();\r\n        if (componentTypes[componentType] && componentTypes[componentType].properties) {\r\n            Object.keys(componentTypes[componentType].properties).map(key => {\r\n                let prop_obj = componentTypes[componentType].properties[key];\r\n                if (prop_obj && prop_obj.ui) {\r\n                    if (prop_obj.options) {\r\n                        let nodeproperty = UIA.GetNodeProp(currentNode, prop_obj.nodeProperty);\r\n                        if (nodeproperty === APP_METHOD) {\r\n                            components.push((<SelectInput\r\n                                label={Titles.ClientMethod}\r\n                                key={`${nodeproperty} - ${_ui_type} - ${componentType} - ${key}`}\r\n                                options={UIA.NodesByType(state, NodeTypes.Method).toNodeSelect()}\r\n                                value={UIA.GetNodeProp(currentNode, NodeProperties.ClientMethod)}\r\n                                onChange={(value) => {\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: NodeProperties.ClientMethod,\r\n                                        id: currentNode.id,\r\n                                        value\r\n                                    });\r\n                                }} />));\r\n                            let methodId = UIA.GetNodeProp(currentNode, NodeProperties.ClientMethod);\r\n                            if (methodId) {\r\n                                let method_parameters = UIA.GetMethodParameters(methodId);\r\n                                if (method_parameters) {\r\n                                    let { parameters, body } = method_parameters;\r\n                                    if (body) {\r\n                                        let bodyparameters = `${nodeproperty} - ${_ui_type} - ${componentType} - parameter - body`;\r\n                                        let c_props = componentNodeProperties.find(x => x.id === getClientMethod(methodParams, key, 'body', 'component'));\r\n                                        let c_props_options = c_props && c_props.componentPropertiesList ? c_props.componentPropertiesList : []\r\n                                        components.push((\r\n                                            <TreeViewMenu\r\n                                                open={UIA.Visual(state, bodyparameters)}\r\n                                                active={UIA.Visual(state, bodyparameters)}\r\n                                                onClick={() => {\r\n                                                    this.props.toggleVisual(bodyparameters)\r\n                                                }}\r\n                                                key={'body'}\r\n                                                title={Titles.Body} icon={'fa fa-tv'}\r\n                                            >\r\n                                                <FormControl>\r\n                                                    <SelectInput\r\n                                                        label={Titles.InstanceType}\r\n                                                        value={getClientMethod(methodParams, key, 'body', 'instanceType')}\r\n                                                        options={Object.keys(InstanceTypes).map(t => ({ title: t, value: InstanceTypes[t] }))}\r\n                                                        onChange={(value) => {\r\n                                                            methodParams = updateClientMethod(methodParams, key, 'body', 'instanceType', value);\r\n                                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                                prop: NodeProperties.ClientMethodParameters,\r\n                                                                id: currentNode.id,\r\n                                                                value: methodParams\r\n                                                            });\r\n                                                        }} />\r\n                                                    <SelectInput\r\n                                                        label={Titles.Models}\r\n                                                        value={getClientMethod(methodParams, key, 'body', 'component')}\r\n                                                        options={componentNodeProperties.map(v => {\r\n                                                            return {\r\n                                                                title: UIA.GetCodeName(v.id),\r\n                                                                value: v.id\r\n                                                            }\r\n                                                        })}\r\n                                                        onChange={(value) => {\r\n                                                            methodParams = updateClientMethod(methodParams, key, 'body', 'component', value);\r\n                                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                                prop: NodeProperties.ClientMethodParameters,\r\n                                                                id: currentNode.id,\r\n                                                                value: methodParams\r\n                                                            });\r\n                                                        }} />\r\n\r\n                                                    <SelectInput\r\n                                                        label={Titles.Models}\r\n                                                        value={getClientMethod(methodParams, key, 'body', 'componentModel')}\r\n                                                        options={c_props_options}\r\n                                                        onChange={(value) => {\r\n                                                            methodParams = updateClientMethod(methodParams, key, 'body', 'componentModel', value);\r\n                                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                                prop: NodeProperties.ClientMethodParameters,\r\n                                                                id: currentNode.id,\r\n                                                                value: methodParams\r\n                                                            });\r\n                                                        }} />\r\n                                                </FormControl>\r\n                                            </TreeViewMenu>))\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            let screenParameters = UIA.GetNodeProp(UIA.GetNodeById(UIA.GetNodeProp(currentNode, NodeProperties.ClientMethod)), NodeProperties.ScreenParameters) || [];\r\n                            let treeMenu = (screenParameters.map(v => {\r\n                                let innertree = `${nodeproperty} - ${_ui_type} - ${componentType} - parameter - ${GetParameterName(v)}`;\r\n                                let methodparameters = UIA.GetNodeProp(currentNode, NodeProperties.MethodParameters) || {};\r\n                                let parameterProperty = UIA.GetNodeProp(currentNode, UIA.NodeProperties.MethodParameterProperty) || {};\r\n                                return (\r\n                                    <TreeViewMenu\r\n                                        title={`${GetParameterName(v)}`}\r\n                                        icon={'fa fa-object-group'}\r\n                                        open={UIA.Visual(state, innertree)}\r\n                                        active={UIA.Visual(state, innertree)}\r\n                                        onClick={() => {\r\n                                            this.props.toggleVisual(innertree)\r\n                                        }}>\r\n                                        <FormControl>\r\n                                            <SelectInput\r\n                                                label={GetParameterName(v)}\r\n                                                key={`${innertree}`}\r\n                                                options={componentPropertiesList}\r\n                                                value={methodparameters[v.id]}\r\n                                                onChange={(value) => {\r\n                                                    let parameters = UIA.GetNodeProp(currentNode, NodeProperties.MethodParameters) || {};\r\n                                                    parameters[v.id] = value;\r\n                                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                        prop: NodeProperties.MethodParameters,\r\n                                                        id: currentNode.id,\r\n                                                        value: parameters\r\n                                                    });\r\n                                                }} />\r\n                                            {componentProperties && methodparameters && v && v.id && methodparameters[v.id] ? <SelectInput\r\n                                                options={GetNodesLinkedTo(UIA.GetRootGraph(state), {\r\n                                                    id: componentProperties.properties[methodparameters[v.id]],\r\n                                                    direction: SOURCE\r\n                                                }).toNodeSelect()}\r\n                                                onChange={(val) => {\r\n                                                    parameterProperty[methodparameters[v.id]] = val;\r\n                                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                        prop: UIA.NodeProperties.MethodParameterProperty,\r\n                                                        id: currentNode.id,\r\n                                                        value: parameterProperty\r\n                                                    });\r\n                                                }}\r\n                                                label={Titles.Property}\r\n                                                value={parameterProperty[methodparameters[v.id]]} /> : null}\r\n                                        </FormControl>\r\n                                    </TreeViewMenu>)\r\n                            }));\r\n                            components.push(treeMenu);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <div style={{ position: 'relative' }}>\r\n                <MainSideBar notactive={!active} relative={true}>\r\n                    <SideBar relative={true} style={{ paddingTop: 0 }}>\r\n                        <SideBarMenu>\r\n                            <TreeViewMenu\r\n                                title={`${Titles.ClientMethod}`}\r\n                                icon={'fa fa-object-group'}\r\n                                open={UIA.Visual(state, METHOD_PARAMETERS)}\r\n                                active={UIA.Visual(state, METHOD_PARAMETERS)}\r\n                                onClick={() => {\r\n                                    this.props.toggleVisual(METHOD_PARAMETERS)\r\n                                }}>\r\n                                <br />\r\n                                {components}\r\n                            </TreeViewMenu>\r\n                        </SideBarMenu>\r\n                    </SideBar>\r\n                </MainSideBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodParameterMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport SideMenuContainer from './sidemenucontainer';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode } from '../constants/nodetypes';\r\nimport { PARAMETER_TAB } from './dashboard';\r\nclass CommonActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType)];\r\n        return (\r\n            <SideMenuContainer active={active} tab={PARAMETER_TAB} visual={\"common-activty+menu\"} title={Titles.CommonProperties}>\r\n                <TabPane active={active}>\r\n                    {currentNode ? (<FormControl>\r\n                        <TextBox\r\n                            label={Titles.CodeName}\r\n                            disabled={!UIA.CanChangeType(currentNode)}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodeName] : ''}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.CodeName,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                        <TextBox\r\n                            label={Titles.ValueName}\r\n                            disabled={!UIA.CanChangeType(currentNode)}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValueName] : ''}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.ValueName,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                        <TextBox\r\n                            label={Titles.AgentName}\r\n                            disabled={!UIA.CanChangeType(currentNode)}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.AgentName] : ''}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.AgentName,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }} />\r\n                    </FormControl>) : null}\r\n                </TabPane>\r\n            </SideMenuContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CommonActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, LinkProperties } from '../constants/nodetypes';\r\nimport { addValidatator, TARGET, createEventProp, GetNode, GetLinkChain, GetLinkChainItem, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { FunctionTypes, FunctionTemplateKeys } from '../constants/functiontypes';\r\n\r\nclass ModelFilterItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelItemFilter);\r\n        var propertyNodes = [];\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var methodNode = GetLinkChainItem(state, {\r\n                id: currentNode.id,\r\n                links: [{\r\n                    direction: TARGET,\r\n                    type: LinkType.ModelItemFilter\r\n                }]\r\n            });\r\n            var node = null;\r\n            var methodProps = UIA.GetMethodProps(methodNode);\r\n            if (methodProps) {\r\n                switch (UIA.GetFunctionType(methodNode)) {\r\n                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                        node = GetNode(graph, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                        break;\r\n                    case FunctionTypes.Create_Object_Agent_Value__IListObject:\r\n                    case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                    case FunctionTypes.Create_Parent$Child_Agent_Value__IListChild:\r\n                    case FunctionTypes.Create_Parent_Child_Agent_Value__Child:\r\n                    default:\r\n                        node = GetNode(graph, methodProps[FunctionTemplateKeys.ModelOutput] || methodProps[FunctionTemplateKeys.Model]);\r\n                        break;\r\n                }\r\n            }\r\n            if (node) {\r\n                let property_nodes = UIA.GetModelPropertyChildren(node.id);\r\n                propertyNodes = [...property_nodes.toNodeSelect()];\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.NodeLabel}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                        }} />\r\n                    <TextInput\r\n                        label={Titles.NodeType}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.NODEType)} disabled={true} />\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let filterModel = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createExecutor();\r\n                            filterModel = addValidatator(filterModel, { id: value });\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: filterModel\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.ModelItemFilter,\r\n                                    value: node.id\r\n                                }\r\n                            }])\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ModelItemFilter,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveModelFilterPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>) : null}\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    this.props.graphOperation(UIA.NEW_CONDITION_NODE, {\r\n                        parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                        groupProperties: {\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.ConditionLink }\r\n                        }\r\n                    });\r\n                }}>{Titles.AddCondition}</button>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass ModelRelationshipMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var hasLogicalChildren = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren);\r\n        var hasLogicalNieces = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalChildren}\r\n                        title={Titles.HasLogicalChildrenDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalChildren,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalChildren ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalChildrenTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalChildren ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalNieces}\r\n                        title={Titles.HasLogicalNiecesDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalNieces,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalNieces ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalNieceTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalNieces ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelRelationshipMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport FormControl from './formcontrol';\r\n\r\nimport RadioButton from './radiobutton';\r\nimport * as UIA from '../actions/uiactions';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport Box from './box';\r\nimport * as Titles from './titles';\r\nimport SelectInput from './selectinput';\r\n\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        if (!graph) {\r\n\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <Box title={Titles.Depth}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.Type}\r\n                        options={[].interpolate(0, 7, x => ({ title: 'Depth  ' + x, value: x }))}\r\n                        onChange={(val) => {\r\n                            this.props.graphOperation([{ operation: UIA.SET_DEPTH, options: { depth: val } }]);\r\n                        }}\r\n                        value={graph.depth} />\r\n                </FormControl>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions, FunctionConstraintKeys } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\n\r\nclass MaestroActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Functions}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddFunction}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.FunctionLink\r\n                            }\r\n                        });\r\n\r\n                        var inputVariables = getNodesLinkedTo(graph, {\r\n                            id: value,\r\n                            constraints: {\r\n                                [FunctionConstraintKeys.IsInputVariable]: true\r\n                            }\r\n                        });\r\n\r\n                        inputVariables.map(inputVariable => {\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                source: inputVariable.id,\r\n                                target: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.FunctionVariable,\r\n                                    [LinkPropertyKeys.FUNCTION_ID]: value\r\n                                }\r\n                            });\r\n                        })\r\n                    }}\r\n                    value={''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBarHeader from './sidebarheader';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes, FilterUI, LAYOUT_VIEW, MAIN_CONTENT, MIND_MAP, CODE_VIEW } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport Box from './box';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode, createExecutor, addMethodValidationForParamter, getMethodValidationForParameter, createValidator, removeMethodValidationParameter } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport GenericPropertyMenu from './genericpropertymenu';\r\nimport GenericPropertyContainer from './genericpropertycontainer';\r\nimport TextInput from './textinput';\r\nimport ButtonList from './buttonlist';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport { PERMISSION, FILTER, VALIDATION } from '../constants/condition';\r\nconst CONDITION_FILTER_MENU_PARAMETER = 'condition-filter-menu-parameter';\r\nconst CONDITION_FILTER_MENU_PARAMETER_PROPERTIES = 'condition-filter-menu-parameter-properties';\r\nconst DATA_SOURCE = 'DATA_SOURCE';\r\nclass ContextMenu extends Component {\r\n    getMenuMode(mode) {\r\n        let result = [];\r\n        let exit = () => {\r\n            this.props.setVisual(UIA.CONTEXT_MENU_MODE, null);\r\n        }\r\n        switch (mode) {\r\n            case 'layout':\r\n                result.push((\r\n                    <TreeViewMenu\r\n                        open={true}\r\n                        active={true}\r\n                        title={Titles.Layout}\r\n                        toggle={() => {\r\n                        }}>\r\n                        <TreeViewMenu title={Titles.Layout} hideArrow={true} icon={'fa fa-taxi'} key={'layoutview'} onClick={() => {\r\n                            this.props.setVisual(MAIN_CONTENT, LAYOUT_VIEW);\r\n                            exit();\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.MindMap} hideArrow={true} icon={'fa fa-taxi'} key={'mindmap'} onClick={() => {\r\n                            this.props.setVisual(MAIN_CONTENT, MIND_MAP);\r\n                            exit();\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.CodeView} hideArrow={true} icon={'fa fa-taxi'} key={'codeview'} onClick={() => {\r\n                            this.props.setVisual(MAIN_CONTENT, CODE_VIEW);\r\n                            exit();\r\n                        }} /></TreeViewMenu>))\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let display = UIA.Visual(state, UIA.CONTEXT_MENU_MODE) ? 'block' : 'none';\r\n        let nodeType = UIA.Visual(state, UIA.CONTEXT_MENU_MODE) ? UIA.GetNodeProp(currentNode, NodeProperties.NODEType) : null;\r\n        let menuMode = UIA.Visual(state, UIA.CONTEXT_MENU_MODE);\r\n        let menuitems = this.getMenuMode(menuMode);\r\n        return (<div className=\"context-menu\" style={{ position: 'fixed', width: 250, height: 400, display, top: 250, left: 500 }}>\r\n            <GenericPropertyContainer active={true} title='asdf' subTitle='afaf' nodeType={nodeType} >\r\n\r\n                {menuitems}\r\n            </GenericPropertyContainer>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ContextMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst CONTROLLER_DETAILS_MENU = 'CONTROLLER_DETAILS_MENU';\r\n\r\nclass ControllerDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                active={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(CONTROLLER_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-controller-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, FunctionConstraintKeys, HTTP_METHODS } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys, NodeProperties, ExcludeDefaultNode } from '../constants/nodetypes';\r\n\r\nclass ControllerActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Controller);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, UIA.NodeTypes.Maestro).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Maestros}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddMaestros}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.MaestroLink\r\n                            }\r\n                        });\r\n                    }}\r\n                    value={''} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.CodeUser}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.CodeUser)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.CodeUser\r\n                        })\r\n                    }} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties } from '../constants/nodetypes';\r\n\r\nclass PermissionDependencyActivityMenu extends Component {\r\n    getTargetNodes(graph, currentNode) {\r\n        let targetPropertyNodes = [];\r\n        if (currentNode) {\r\n            targetPropertyNodes = getNodesByLinkType(graph, {\r\n                id: currentNode.id,\r\n                direction: SOURCE,\r\n                type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n            });\r\n            if (!targetPropertyNodes.length) {\r\n                targetPropertyNodes = getNodesByLinkType(graph, {\r\n                    id: currentNode.id,\r\n                    direction: SOURCE,\r\n                    type: LinkType.PermissionDependencyProperty\r\n                });\r\n            }\r\n        }\r\n        return targetPropertyNodes;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.PermissionDependency);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n\r\n        var extensionNodeId = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : '';\r\n        var ext_allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedExtensionValues] : []) || [];\r\n        var ext_disallowed = [];\r\n\r\n        if (extensionNodeId) {\r\n            var extensionNode = GetNode(graph, extensionNodeId);\r\n            if (extensionNode) {\r\n                var def = UIA.GetNodeProp(extensionNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n                if (def && def.config) {\r\n                    if (def.config.isEnumeration) {\r\n                        var extensionValues = def.config.list.map(t => {\r\n                            return t[def.config.keyField || Object.keys(t)[0]];\r\n                        })\r\n                        ext_allowed = ext_allowed.intersection(extensionValues);\r\n                        ext_disallowed = extensionValues.relativeCompliment(ext_allowed);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var enumeration = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedEnumValues] : []) || [];\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let targetPropertyNodes = this.getTargetNodes(graph, currentNode);\r\n        let targetNodeType = null;\r\n        let targetPropertyNode = null;\r\n        if (targetPropertyNodes.length) {\r\n            targetPropertyNode = targetPropertyNodes[0];\r\n            targetNodeType = UIA.GetNodeProp(targetPropertyNode, UIA.NodeProperties.UIAttributeType);\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionsDependencyAttribute} />\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN ? (<CheckBox\r\n                    title={Titles.UseEqualDescription}\r\n                    label={Titles.UseEqual}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEqual]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEqual,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN && UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseEqual) ? (<SelectInput\r\n                    title={Titles.IsEqualToDescription}\r\n                    label={Titles.IsEqualTo}\r\n                    options={['true', 'false'].map(t => ({ title: t, value: t }))}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsEqualTo]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsEqualTo,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.IncludedInListDescription}\r\n                    label={Titles.IncludedInList}\r\n                    value={currentNode.properties[UIA.NodeProperties.IncludedInList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IncludedInList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.ExcludedFromListDescription}\r\n                    label={Titles.ExcludedFromList}\r\n                    value={currentNode.properties[UIA.NodeProperties.ExcludedFromList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ExcludedFromList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseEnumeration}\r\n                    label={Titles.UseEnumeration}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEnumeration]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEnumeration,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseUIExtensions}\r\n                    label={Titles.UseUIExtensions}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseExtension]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && ext_allowed && ext_allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_allowed.map((_enum) => {\r\n                    return <div key={`ext_allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed].filter(x => x !== _enum))\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && ext_disallowed && ext_disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_disallowed.map((_enum) => {\r\n                    return <div key={`ext_disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed, _enum].unique())\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? (<SelectInput\r\n                        label={Titles.Extensions}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.ExtensionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />) : null\r\n                }\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? (<SelectInput\r\n                        label={Titles.Enumeration}\r\n                        options={enumeration_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.Enumeration],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.EnumerationLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Enumeration,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.EnumerationLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : ''} />) : null\r\n                }\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && allowed && allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? allowed.map((_enum) => {\r\n                    return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && disallowed && disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? disallowed.map((_enum) => {\r\n                    return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionDependencyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenuItem extends Component {\r\n\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <div className=\"pull-left\">\r\n                        <i style={{ fontSize: 34 }} className={this.icon()}></i>\r\n                    </div>\r\n                    <h4>\r\n                        {this.props.title}\r\n                        {/* <small><i className=\"fa fa-clock-o\"></i> 5 mins</small> */}\r\n                    </h4>\r\n                    <p>{this.props.description}</p>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport DropDownMenu from './dropdown';\r\nimport DropDownMenuItem from './dropdownmenuitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst GRAPH_MENU = 'GRAPH_MENU';\r\nclass GraphMenu extends Component {\r\n    render() {\r\n        var me = this;\r\n        var { state } = me.props;\r\n        return (\r\n            <DropDownMenu icon={'fa fa-cart-plus'} open={UIA.Visual(state, GRAPH_MENU)} onClick={() => {\r\n                this.props.toggleVisual(GRAPH_MENU)\r\n            }}>\r\n                <DropDownMenuItem icon={\"fa fa-plus\"}\r\n                    title={Titles.AddNewSection}\r\n                    onClick={() => {\r\n                        this.props.addNewSubGraph();\r\n                    }}\r\n                    description={Titles.AddNewSectionDescription}></DropDownMenuItem>\r\n            </DropDownMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(GraphMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst SECTION_LIST = 'SECTION_LIST';\r\nclass SectionList extends Component {\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n        let sections = [];\r\n        let subGraphs = UIA.GetSubGraphs(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        if (subGraphs) {\r\n            subGraphs.map(sg => {\r\n                sections.push((\r\n                    <TreeViewItem\r\n                        key={sg.id}\r\n                        title={sg.title || Titles.Unknown}\r\n                        right={<span className=\"label label-primary pull-right\">{sg.nodes.length}</span>}\r\n                        onClick={() => {\r\n                            me.props.setApplication(UIA.GRAPH_SCOPE, [sg.id]);\r\n                        }} ></TreeViewItem>\r\n                ))\r\n            })\r\n        }\r\n        let body = sections;\r\n        if (rootGraph) {\r\n            body = (\r\n                <TreeViewMenu\r\n                    hideIcon={true}\r\n                    right={<span className=\"label label-primary pull-right\">{rootGraph.nodes.length}</span>}\r\n                    title={rootGraph.title || Titles.Unknown}\r\n                    hideArrow={true}\r\n                    open={true}\r\n                    active={true}\r\n                    onClick={() => {\r\n                        me.props.setApplication(UIA.GRAPH_SCOPE, null);\r\n                    }}>\r\n                    {sections}\r\n                </TreeViewMenu>)\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                title={Titles.Sections}\r\n                icon={'fa fa-cart-plus'}\r\n                open={UIA.Visual(state, SECTION_LIST)}\r\n                active={UIA.Visual(state, SECTION_LIST)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(SECTION_LIST)\r\n                }}>\r\n                {body}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SectionList);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport { uuidv4 } from '../utils/array';\r\n\r\nclass EnumerationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Enumeration);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n        return (\r\n            <TabPane active={active} >\r\n                <EnumerationEditMenu onComplete={(val) => {\r\n                    if (val) {\r\n                        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums, { value: val, id: uuidv4() }].unique(x => x.value)\r\n                        });\r\n                    }\r\n                }\r\n                } />\r\n                {active && enums && enums.length ? enums.map((_enum) => {\r\n                    return <div className=\"external-event bg-red\" style={{ cursor: 'pointer' }} key={_enum.id} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums].filter(x => x !== _enum)\r\n                        });\r\n                    }} > {_enum && _enum.id ? _enum.value : _enum}</div>;\r\n                }) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(EnumerationActivityMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nclass SectionEdit extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        var section = UIA.GetCurrentScopedGraph(state);\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput value={section ? section.title : ''} onChange={(value) => {\r\n                    this.props.graphOperation(UIA.UPDATE_GRAPH_TITLE, { text: value });\r\n                }} inputgroup={true} placeholder={Titles.SectionEdit} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(SectionEdit)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nexport default class TopViewer extends Component {\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var style = {\r\n            position: 'relative',\r\n            width: '100%'\r\n        }\r\n        let active = this.active();\r\n        let height = 600;\r\n        return (\r\n            <div style={style}>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    transition: 'all 1s',\r\n                    pointerEvents: active ? 'all' : 'none',\r\n                    top: active ? 0 : '-1000px',\r\n                    backgroundColor: '#dd4b39d2'\r\n                }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export default {\n  \"hljs\": {\n    \"display\": \"block\",\n    \"overflowX\": \"auto\",\n    \"padding\": \"0.5em\",\n    \"color\": \"#000\",\n    \"background\": \"#f8f8ff\"\n  },\n  \"hljs-comment\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-quote\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-keyword\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-selector-tag\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-literal\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-subst\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-number\": {\n    \"color\": \"#40a070\"\n  },\n  \"hljs-string\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-doctag\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-selector-id\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-selector-class\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-section\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-type\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-params\": {\n    \"color\": \"#00f\"\n  },\n  \"hljs-title\": {\n    \"color\": \"#458\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-tag\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-name\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-attribute\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-template-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-regexp\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-link\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-symbol\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-bullet\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-built_in\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-builtin-name\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-meta\": {\n    \"color\": \"#999\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-deletion\": {\n    \"background\": \"#fdd\"\n  },\n  \"hljs-addition\": {\n    \"background\": \"#dfd\"\n  },\n  \"hljs-emphasis\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-strong\": {\n    \"fontWeight\": \"bold\"\n  }\n};","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded=\"true\">{this.title()}</a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tabs extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport TopViewer from './topviewer';\r\nimport Box from './box';\r\nimport SelectInput from './selectinput';\r\nimport { NodeTypes, NodeProperties, NameSpace, GeneratedTypes, GeneratedTypesMatch, GeneratedConstants, IdentityManagement } from '../constants/nodetypes';\r\nimport ModelGenerator from '../generators/modelgenerators';\r\nimport NamespaceGenerator from '../generators/namespacegenerator';\r\nimport ExtensionsGenerator from '../generators/extensiongenerator';\r\nimport ControllerGenerator from '../generators/controllergenerator';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport TextInput from './textinput';\r\nimport { GraphKeys } from '../methods/graph_methods';\r\n\r\nimport Tab from './tab';\r\nimport TabContainer from './tabcontainer';\r\nimport TabContent from './tabcontent';\r\nimport Tabs from './tabs';\r\nimport Generator from '../generators/generator';\r\nimport ButtonList from './buttonlist';\r\n\r\nconst MODEL_CODE = 'MODEL_CODE';\r\nconst SELECTED_CODE_TYPE = 'SELECTED_CODE_TYPE';\r\nconst CLASS_KEY = 'CLASS_KEY';\r\nconst CODE_VIEW_TAB = 'CODE_VIEW_TAB';\r\n\r\nclass CodeView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        let active = this.active();\r\n\r\n        let codeString = '';\r\n        let info = UIA.Visual(state, MODEL_CODE) || null;\r\n        let graphRoot = UIA.GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphKeys.NAMESPACE] : null;\r\n        let projectname = graphRoot ? graphRoot[GraphKeys.PROJECTNAME] : null;\r\n        let colorscheme  = graphRoot ? graphRoot[GraphKeys.COLORSCHEME] : null;\r\n        let server_side_setup = graphRoot ? graphRoot[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n\r\n\r\n        let controllers = [];\r\n        let generatedContent = null;\r\n        if (state && graphRoot && active) {\r\n            var viewTab = UIA.Visual(state, CODE_VIEW_TAB);\r\n            var classKey = this.state[UIA.Visual(state, CODE_VIEW_TAB)];\r\n\r\n            var temp = Generator.generate({\r\n                type: viewTab,\r\n                key: classKey,\r\n                state\r\n            });\r\n            generatedContent = temp;\r\n\r\n            if (temp && temp[classKey]) {\r\n                codeString = temp[classKey].template;\r\n            }\r\n        }\r\n\r\n\r\n        var code_types = [\r\n            NodeTypes.Controller,\r\n            NodeTypes.Model,\r\n            NodeTypes.ExtensionType,\r\n            NodeTypes.Maestro,\r\n            ...Object.values(GeneratedTypes)\r\n        ];\r\n        let modelType = UIA.Visual(state, CODE_VIEW_TAB);\r\n        let models = [];\r\n        if (generatedContent) {\r\n            Object.keys(generatedContent).map(gcKey => {\r\n                models.push({\r\n                    id: gcKey,\r\n                    title: generatedContent[gcKey].name,\r\n                    value: generatedContent[gcKey].name\r\n                })\r\n            })\r\n        }\r\n\r\n        return (\r\n            <TopViewer active={active}>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <Box primary={true} title={Titles.Project}>\r\n                                <TextInput\r\n                                    onChange={(val) => {\r\n                                        this.props.setRootGraph(GraphKeys.NAMESPACE, val);\r\n                                        this.props.setAppsettingsAssemblyPrefixes(val);\r\n                                    }}\r\n                                    label={Titles.NameSpace}\r\n                                    value={namespace} />\r\n                                <TextInput\r\n                                    onChange={(val) => {\r\n                                        this.props.setRootGraph(GraphKeys.PROJECTNAME, val);\r\n                                    }}\r\n                                    label={Titles.ProjectName}\r\n                                    value={projectname} />\r\n                                <TextInput\r\n                                    onChange={(val) => {\r\n                                        this.props.setRootGraph(GraphKeys.COLORSCHEME, val);\r\n                                    }}\r\n                                    label={Titles.ColorScheme}\r\n                                    value={colorscheme} />\r\n                                <SelectInput\r\n                                    label={Titles.ServerSideSetup}\r\n                                    options={Object.keys(IdentityManagement).map(t => {\r\n                                        return { title: t, value: IdentityManagement[t] };\r\n                                    })}\r\n                                    onChange={(value) => {\r\n                                        this.props.setRootGraph(GraphKeys.SERVER_SIDE_SETUP, value);\r\n                                    }}\r\n                                    value={server_side_setup} />\r\n                            </Box>\r\n                            <Box primary={true} title={Titles.CodeTypes}>\r\n                                <ButtonList active={true} isSelected={(item) => {\r\n                                    return item && this.state[UIA.Visual(state, CODE_VIEW_TAB)] === item.id;\r\n                                }}\r\n                                    items={models}\r\n                                    onClick={(item) => {\r\n                                        this.setState({\r\n                                            [UIA.Visual(state, CODE_VIEW_TAB)]: item.id\r\n                                        });\r\n                                    }} />\r\n                            </Box>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <TabContainer>\r\n                                <Tabs>\r\n                                    {code_types ? code_types.map(ct => {\r\n                                        return (<Tab key={ct} active={UIA.VisualEq(state, CODE_VIEW_TAB, ct)}\r\n                                            title={ct} onClick={() => {\r\n                                                this.props.setVisual(CODE_VIEW_TAB, ct)\r\n                                            }} />\r\n                                        );\r\n                                    }) : null}\r\n                                </Tabs>\r\n                            </TabContainer>\r\n                            <TabContent>\r\n                                <TabPane active={UIA.Visual(state, CODE_VIEW_TAB)}>\r\n                                    <Box title={Titles.Code} primary={true} maxheight={700}>\r\n                                        {codeString ? <SyntaxHighlighter language='csharp' style={docco}>{codeString}</SyntaxHighlighter> : null}\r\n                                    </Box>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </TopViewer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CodeView)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class LayoutCreator extends Component {\r\n    buildLayoutTree(layoutObj, currentRoot) {\r\n        let result = [];\r\n        let { layout, properties } = layoutObj;\r\n        if (!currentRoot) {\r\n            currentRoot = layout;\r\n        }\r\n        Object.keys(currentRoot).map((item, index) => {\r\n            result.push(this.createSection(layoutObj, item, currentRoot[item], index + 1));\r\n        })\r\n        return result;\r\n    }\r\n    createSection(layoutObj, item, currentRoot, index) {\r\n        let { properties } = layoutObj;\r\n        let style = properties[item].style || {};\r\n        let tree = Object.keys(currentRoot).length ? this.buildLayoutTree(layoutObj, currentRoot) : null;\r\n        let overrides = {};\r\n        if (this.props.selectedCell === item) {\r\n            overrides = { backgroundColor: '#ffffff33' }\r\n        }\r\n        overrides.padding = 10;\r\n        return (<div key={item} onClick={(e) => {\r\n            if (this.props.onSelectionClick) {\r\n                this.props.onSelectionClick(item);\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        }} style={{ ...style, ...overrides }}>{tree || index}</div>)\r\n    }\r\n    render() {\r\n        let colors = 'dd4b39-3a405a-fff2f2-e8e8e8-857885'.split('-').map(t => (`#${t}`));\r\n        let layoutObj = this.props.layout;\r\n        let tree = null;\r\n        if (layoutObj) {\r\n            tree = this.buildLayoutTree(layoutObj);\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                display: 'flex',\r\n                height: '100%',\r\n                borderStyle: 'solid',\r\n                borderWidth: 1,\r\n                borderColor: (colors[2]), ...this.props.style\r\n            }}>\r\n                {tree}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport TopViewer from './topviewer';\r\nimport Box from './box';\r\nimport SelectInput from './selectinput';\r\nimport { NodeTypes, NodeProperties, NameSpace, GeneratedTypes, GeneratedTypesMatch, GeneratedConstants, IdentityManagement } from '../constants/nodetypes';\r\nimport ModelGenerator from '../generators/modelgenerators';\r\nimport NamespaceGenerator from '../generators/namespacegenerator';\r\nimport ExtensionsGenerator from '../generators/extensiongenerator';\r\nimport ControllerGenerator from '../generators/controllergenerator';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport TextInput from './textinput';\r\nimport { GraphKeys, SetCellsLayout, GetCellProperties, FindLayoutRoot, RemoveCellLayout, GetConnectedNodesByType, CreateLayout, TARGET, SOURCE, getComponentPropertyList, GetNodesLinkedTo, getComponentProperty } from '../methods/graph_methods';\r\n\r\nimport Tab from './tab';\r\nimport CheckBox from './checkbox';\r\nimport TabContainer from './tabcontainer';\r\nimport TabContent from './tabcontent';\r\nimport Tabs from './tabs';\r\nimport Generator from '../generators/generator';\r\nimport ButtonList from './buttonlist';\r\nimport LayoutCreator from './layoutcreator';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport { getComponentApiList } from '../methods/component_api_methods';\r\nimport { InstanceTypes } from '../constants/componenttypes';\r\n\r\n\r\nclass LayoutView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    getComponentApi(cellChildren) {\r\n        let { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodeLayout = UIA.GetNodeProp(currentNode, NodeProperties.Layout);\r\n\r\n        let selectedCell = this.state.selectedCell;\r\n        if (cellChildren && cellChildren[selectedCell]) {\r\n\r\n            let childComponent = cellChildren[selectedCell];\r\n            let componentApi = UIA.GetNodeProp(UIA.GetNodeById(childComponent), NodeProperties.ComponentApi);\r\n            if (componentApi) {\r\n                let selectedComponentApiProperty = this.state.componentApi ? this.state.componentApi[selectedCell] : null;\r\n                let cellProperties = GetCellProperties(nodeLayout, this.state.selectedCell);\r\n                cellProperties.componentApi = cellProperties.componentApi || {};\r\n                let { instanceType, model, modelProperty } = cellProperties.componentApi[selectedComponentApiProperty] || {};\r\n                let componentProperties = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentProperties);\r\n                let componentPropertiesList = getComponentPropertyList(componentProperties);\r\n                return [\r\n                    (<SelectInput\r\n                        label={Titles.ComponentAPIMenu}\r\n                        value={selectedComponentApiProperty}\r\n                        options={getComponentApiList(componentApi)}\r\n                        onChange={(value) => {\r\n                            this.setState({ componentApi: { ...(this.state.componentApi || {}), [selectedCell]: value } });\r\n                        }} />),\r\n                    selectedComponentApiProperty ? (<SelectInput\r\n                        label={Titles.InstanceType}\r\n                        value={instanceType}\r\n                        options={Object.keys(InstanceTypes).map(t => ({\r\n                            title: t, value: InstanceTypes[t]\r\n                        }))}\r\n                        onChange={(value) => {\r\n                            cellProperties.componentApi[selectedComponentApiProperty] = cellProperties.componentApi[selectedComponentApiProperty] || {};\r\n                            let temp = cellProperties.componentApi[selectedComponentApiProperty];\r\n                            temp.instanceType = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Layout,\r\n                                id: currentNode.id,\r\n                                value: nodeLayout\r\n                            });\r\n                        }} />) : null,\r\n                    selectedComponentApiProperty && instanceType === InstanceTypes.ScreenInstance ? (<SelectInput\r\n                        label={Titles.Models}\r\n                        value={model}\r\n                        options={componentPropertiesList}\r\n                        onChange={(value) => {\r\n                            cellProperties.componentApi[selectedComponentApiProperty] = cellProperties.componentApi[selectedComponentApiProperty] || {};\r\n                            let temp = cellProperties.componentApi[selectedComponentApiProperty] || {};\r\n                            temp.model = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Layout,\r\n                                id: currentNode.id,\r\n                                value: nodeLayout\r\n                            });\r\n                        }} />) : null,\r\n                    selectedComponentApiProperty && instanceType === InstanceTypes.ScreenInstance ? (<SelectInput\r\n                        options={GetNodesLinkedTo(UIA.GetRootGraph(state), {\r\n                            id: getComponentProperty(componentProperties, model),\r\n                            direction: SOURCE\r\n                        }).toNodeSelect()}\r\n                        onChange={(val) => {\r\n                            cellProperties.componentApi[selectedComponentApiProperty] = cellProperties.componentApi[selectedComponentApiProperty] || {};\r\n                            let temp = cellProperties.componentApi[selectedComponentApiProperty] || {};\r\n                            temp.modelProperty = val;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Layout,\r\n                                id: currentNode.id,\r\n                                value: nodeLayout\r\n                            });\r\n                        }}\r\n                        label={Titles.Property}\r\n                        value={modelProperty} />) : null\r\n                ].filter(x => x)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        let active = this.active();\r\n\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let componentNodes = currentNode ? GetConnectedNodesByType(state, currentNode.id, NodeTypes.ComponentNode, SOURCE) : [];\r\n        let namespace = 'namespace';\r\n        let nodeLayout = UIA.GetNodeProp(currentNode, NodeProperties.Layout);\r\n        let cellProperties;\r\n        let cellStyle = null;\r\n        let cellChildren = null;\r\n        let cellModel = null;\r\n        let cellModelProperty = null;\r\n        let cellRoot = null;\r\n        let cellEvents = null;\r\n        let selectedLayoutRoot = null;\r\n        if (nodeLayout && this.state.selectedCell) {\r\n            cellProperties = GetCellProperties(nodeLayout, this.state.selectedCell);\r\n            if (cellProperties) {\r\n                cellStyle = cellProperties.style;\r\n                cellProperties.children = cellProperties.children || {};\r\n                cellChildren = cellProperties.children;\r\n                cellProperties.cellModel = cellProperties.cellModel || {};\r\n                cellModel = cellProperties.cellModel;\r\n\r\n                cellProperties.cellModelProperty = cellProperties.cellModelProperty || {};\r\n                cellModelProperty = cellProperties.cellModelProperty;\r\n\r\n                cellProperties.cellRoot = cellProperties.cellRoot || {};\r\n                cellRoot = cellProperties.cellRoot;\r\n\r\n\r\n                cellProperties.cellEvents = cellProperties.cellEvents || {};\r\n                cellEvents = cellProperties.cellEvents;\r\n            }\r\n            selectedLayoutRoot = FindLayoutRoot(this.state.selectedCell, nodeLayout.layout) || nodeLayout.layout;\r\n        }\r\n        let componentProperties = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ComponentProperties);\r\n        let componentPropertiesList = getComponentPropertyList(componentProperties);\r\n        return (\r\n            <TopViewer active={active}>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <Box primary={true} maxheight={350} title={Titles.Layout}>\r\n                                {this.state.selectedCell ? (<button onClick={() => {\r\n                                    let layout = UIA.GetNodeProp(currentNode, NodeProperties.Layout) || CreateLayout();\r\n                                    layout = RemoveCellLayout(layout, this.state.selectedCell);\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.Layout,\r\n                                        id: currentNode.id,\r\n                                        value: layout\r\n                                    });\r\n                                    this.setState({ selectedCell: null })\r\n                                }}>Remove Selected</button>) : null}\r\n                                <SelectInput\r\n                                    options={[].interpolate(1, 12, (t) => ({ title: t, value: t }))}\r\n                                    onChange={(val) => {\r\n                                        let layout = UIA.GetNodeProp(currentNode, NodeProperties.Layout) || CreateLayout();\r\n                                        layout = SetCellsLayout(layout, val, this.state.selectedCell)\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.Sections}\r\n                                    value={Object.keys(selectedLayoutRoot || {}).length} />\r\n                                {cellStyle ? (<SelectInput\r\n                                    options={['column', 'row'].map((t) => ({ title: t, value: t }))}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellStyle.flexDirection = val;\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.FlexDirection}\r\n                                    value={cellStyle.flexDirection} />) : null}\r\n\r\n                                {cellStyle ? (<SelectInput\r\n                                    options={[].interpolate(0, 12, (t) => ({ title: t, value: t }))}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        if (!parseInt(val))\r\n                                            cellStyle.flex = null;\r\n                                        else\r\n                                            cellStyle.flex = parseInt(val);\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.Flex}\r\n                                    value={cellStyle.flex} />) : null}\r\n                                {cellStyle ? (<SelectInput\r\n                                    options={['flex-start', 'flex-end', 'center', 'space-between'].map((t) => ({ title: t, value: t }))}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n\r\n                                        cellStyle.justifyContent = (val);\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={'justify-content'}\r\n                                    value={cellStyle.justifyContent} />) : null}\r\n                                {cellStyle ? (<SelectInput\r\n                                    options={['flex-start', 'flex-end', 'center', 'stretch'].map((t) => ({ title: t, value: t }))}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n\r\n                                        cellStyle.alignItems = (val);\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={'align-items'}\r\n                                    value={cellStyle.alignItems} />) : null}\r\n                                {cellStyle ? (<TextInput\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellStyle.height = val === '' ? null : parseInt(val);\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.Height}\r\n                                    value={cellStyle.height} />) : null}\r\n                                {cellStyle ? (<TextInput\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellStyle.width = val === '' ? null : parseInt(val);\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.Width}\r\n                                    value={cellStyle.width} />) : null}\r\n\r\n                                {cellEvents ? <CheckBox\r\n                                    label={Titles.OnChange}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellEvents[this.state.selectedCell] = cellEvents[this.state.selectedCell] || {};\r\n                                        cellEvents[this.state.selectedCell] = { ...cellEvents[this.state.selectedCell], onChange: val };\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    value={cellEvents && cellEvents[this.state.selectedCell] && cellEvents[this.state.selectedCell].onChange} /> : null}\r\n                                {cellEvents ? <CheckBox\r\n                                    label={Titles.OnPress}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellEvents[this.state.selectedCell] = cellEvents[this.state.selectedCell] || {};\r\n                                        cellEvents[this.state.selectedCell] = { ...cellEvents[this.state.selectedCell], onPress: val };\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    value={cellEvents && cellEvents[this.state.selectedCell] && cellEvents[this.state.selectedCell].onPress} /> : null}\r\n\r\n                                {cellChildren ? (<SelectInput\r\n                                    options={componentNodes.toNodeSelect()}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellChildren[this.state.selectedCell] = val;\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.Component}\r\n                                    value={cellChildren[this.state.selectedCell]} />) : null}\r\n                                {cellChildren && cellChildren[this.state.selectedCell] ? this.getComponentApi(cellChildren) : null}\r\n                                {cellChildren && cellChildren[this.state.selectedCell] ? <CheckBox\r\n                                    label={Titles.UseAsRoot}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellRoot[this.state.selectedCell] = val;\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    value={cellRoot[this.state.selectedCell]} /> : null}\r\n\r\n                                {cellChildren && cellChildren[this.state.selectedCell] && componentPropertiesList && componentPropertiesList.length ? (<SelectInput\r\n                                    options={componentPropertiesList}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellModel[this.state.selectedCell] = val;\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.Models}\r\n                                    value={cellModel[this.state.selectedCell]} />) : null}\r\n                                {cellModel && cellModel[this.state.selectedCell] && componentPropertiesList && componentPropertiesList.length ? (<SelectInput\r\n                                    options={GetNodesLinkedTo(UIA.GetRootGraph(state), {\r\n                                        id: getComponentProperty(componentProperties, cellModel[this.state.selectedCell]),\r\n                                        direction: SOURCE\r\n                                    }).toNodeSelect()}\r\n                                    onChange={(val) => {\r\n                                        let layout = nodeLayout || CreateLayout();\r\n                                        cellModelProperty[this.state.selectedCell] = val;\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.Layout,\r\n                                            id: currentNode.id,\r\n                                            value: layout\r\n                                        });\r\n                                    }}\r\n                                    label={Titles.Property}\r\n                                    value={cellModelProperty[this.state.selectedCell]} />) : null}\r\n                            </Box>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <LayoutCreator\r\n                                selectedCell={this.state.selectedCell}\r\n                                layout={UIA.GetNodeProp(currentNode, NodeProperties.Layout)}\r\n                                onSelectionClick={(item) => {\r\n                                    this.setState({ selectedCell: this.state.selectedCell !== item ? item : null })\r\n                                }}\r\n                                style={{ height: 500 }} />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </TopViewer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(LayoutView)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../constants/routes';\r\nimport { UIConnect } from '../utils/utils';\r\nconst { clipboard } = require('electron')\r\nimport DashboardLogo from './dashboardlogo';\r\nimport Header from './header';\r\nimport DashboardNavBar from './dashboardnavbar';\r\nimport SidebarToggle from './sidebartoggle';\r\nimport * as UIA from '../actions/uiactions';\r\nimport NavBarMenu from './navbarmenu';\r\nimport MainSideBar from './mainsidebar';\r\nimport BatchMenu from './batchmenu';\r\nimport SideBarHeader from './sidebarheader';\r\nimport QuickMethods from './quickmethods';\r\nimport * as Titles from './titles';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport Content from './content';\r\nimport NavigationParameterMenu from './navigationparametermenu';\r\nimport ScreenActivityMenu from './screenactivitymenu';\r\nimport SideBar from './sidebar';\r\nimport DataSourceActivityMenu from './datasourceactivitymenu';\r\nimport SideBarTabs from './sidebartabs';\r\nimport SideBarTab from './sidebartab';\r\nimport ScreenOptionsActivityMenu from './screenoptionsactivitymenu';\r\nimport ServiceActivityMenu from './serviceactivitymenu';\r\nimport SideBarContent from './sidebarcontent';\r\nimport NavBarButton from './navbarbutton';\r\nimport ConditionFilterMenu from './conditionfiltermenu';\r\nimport CheckBox from './checkbox';\r\nimport * as VC from '../constants/visual';\r\nimport MindMap from './mindmap';\r\nimport ModelActivityMenu from './modelactivitymenu';\r\nimport FunctionActivityMenu from './functionactivitymenu';\r\nimport PropertyActivityMenu from './propertyactivitymenu';\r\nimport DataChainActvityMenu from './datachainactivitymenu';\r\nimport AfterEffectsActivityMenu from './aftereffectsactivitymenu';\r\nimport AttributeFormControl from './attributeformcontrol';\r\nimport PermissionMenu from './permissionmenu';\r\nimport ChoiceActivityMenu from './choiceactivitymenu';\r\nimport TreeViewItemContainer from './treeviewitemcontainer';\r\nimport UIParameters from './uiparameters';\r\nimport ComponentActivityMenu from './componentactivitymenu';\r\nimport ComponentPropertyMenu from './componentpropertymenu';\r\nimport ModelFilterActivityMenu from './modelfilteractivitymenu';\r\nimport ComponentAPIMenu from './componentapimenu';\r\nimport ValidationActivityMenu from './validationactivitymenu';\r\nimport ValidationItemFormControl from './validationitemactivitymenu';\r\nimport ValidatorActivityMenu from './validatoractivitymenu';\r\nimport OptionActivityMenu from './optionactivitymenu';\r\nimport ExecutorPropertyMenu from './executorpropertymenu';\r\nimport ConfigurationActivityMenu from './configurationactivitymenu';\r\nimport ConditionActivityMenu from './conditionactivitymenu';\r\nimport ParameterActivityMenu from './parameteractivitymenu';\r\nimport OptionItemFormControl from './optionitemformcontrol';\r\nimport ExecutorPropertyActivityMenu from './executorpropertyactivitymenu';\r\nimport ExecutorActivityMenu from './executoractivitymenu';\r\nimport ValidatorPropertyMenu from './validatorpropertymenu';\r\nimport ValidatorPropertyActivityMenu from './validatorpropertyactivitymenu';\r\nimport ExtensionListActivityMenu from './ExtensionListActivityMenu';\r\nimport PermissionActivityMenu from './permissionsactivitymenu';\r\nimport ReferenceActivityMenu from './referenceactivitymenu';\r\nimport { GooMenuSVG } from './goomenu';\r\nimport ChoiceListItemActivityMenu from './choicelistitemactivitymenu';\r\nimport GooMenu from './goomenu';\r\nimport FormControl from './formcontrol';\r\nimport ModelFilterMenu from './modelfiltermenu';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport DataChainOperator from './datachainoperator';\r\nimport Slider from './slider';\r\nimport SideMenuContainer from './sidemenucontainer';\r\nimport ExtensionDefinitionMenu from './extensiondefinitionmenu';\r\nimport MethodActivityMenu from './methodactivitymenu';\r\nimport MethodPropertyMenu from './methodpropertymenu';\r\nimport MaestroDetailsMenu from './maestrodetailsmenu';\r\nimport NodeManagement from './nodemanagement';\r\nimport MethodParameterMenu from './methodparameteremenu';\r\nimport CommonActivityMenu from './commonactivitymenu';\r\nimport ModelFilterItemActivityMenu from './modelfilteritemactivitymenu';\r\nimport ModelRelationshipMenu from './modelrelationshipmenu';\r\nimport DepthChoice from './depthchoice';\r\nimport MaestroActivityMenu from './maestroactivitymenu';\r\nimport ContextMenu from './contextmenu';\r\nimport SidebarButton from './sidebarbutton';\r\nimport ControllerDetailsMenu from './controllerdetailsmenu';\r\nimport ControllerActivityMenu from './controlleractivitymenu';\r\nimport PermissionDependencyActivityMenu from './permissionsdependentactivitymenu';\r\nimport GraphMenu from './graphmenu';\r\nimport SectionList from './sectionlist';\r\nimport EnumerationActivityMenu from './enumerationactivitymenu'\r\nimport SectionEdit from './sectionedit'; import { NotSelectableNodeTypes, NodeProperties, NodeTypes, LinkType, LinkProperties, ExcludeDefaultNode, FilterUI, MAIN_CONTENT, MIND_MAP, CODE_VIEW, LAYOUT_VIEW } from '../constants/nodetypes';\r\nimport CodeView from './codeview';\r\nimport LayoutView from './layoutview';\r\nimport { findLinkInstance, getLinkInstance } from '../methods/graph_methods';\r\nimport { platform } from 'os';\r\nconst SIDE_PANEL_OPEN = 'side-panel-open';\r\nconst NODE_MENU = 'NODE_MENU';\r\nconst CONNECTING_NODE = 'CONNECTING_NODE';\r\nconst LINK_DISTANCE = 'LINK_DISTANCE';\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setState();\r\n        this.props.setRemoteState();\r\n    }\r\n    minified() {\r\n        var { state } = this.props;\r\n        return UIA.GetC(state, UIA.VISUAL, UIA.DASHBOARD_MENU) ? 'sidebar-collapse' : '';\r\n    }\r\n    nodeSelectionMenuItems() {\r\n        var result = [];\r\n        var { state } = this.props;\r\n        if (UIA.Visual(state, UIA.SELECTED_NODE)) {\r\n            var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n            switch (UIA.GetNodeProp(currentNode, NodeProperties.NODEType)) {\r\n                case NodeTypes.Method:\r\n                case NodeTypes.Action:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnScreenLink);\r\n                        },\r\n                        icon: 'fa fa-download',\r\n                        title: Titles.OnLoad\r\n                    }, {\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnSuccessLink);\r\n                        },\r\n                        icon: 'fa  fa-trophy',\r\n                        title: Titles.OnSuccessLink\r\n                    }, {\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnItemSelection);\r\n                        },\r\n                        icon: 'fa  fa-tasks',\r\n                        title: Titles.OnItemSelection\r\n                    }, {\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnAction);\r\n                        },\r\n                        icon: 'fa  fa-tasks',\r\n                        title: Titles.OnAction\r\n                    }, {\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnFailureLink);\r\n                        },\r\n                        icon: 'fa  fa-frown-o',\r\n                        title: Titles.OnFailureLink\r\n                    });\r\n                    break;\r\n                case NodeTypes.ScreenItem:\r\n                case NodeTypes.ScreenCollection:\r\n                case NodeTypes.ScreenContainer:\r\n                case NodeTypes.Screen:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.ChildLink);\r\n                        },\r\n                        icon: 'fa  fa-share-alt',\r\n                        title: Titles.ChildLink\r\n                    });\r\n                    break;\r\n            }\r\n            result.push({\r\n                onClick: () => {\r\n                    this.props.setVisual(CONNECTING_NODE, true);\r\n                },\r\n                icon: 'fa fa-link',\r\n                title: Titles.GenericLink\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var selected_node_bb = UIA.Visual(state, UIA.SELECTED_NODE_BB);\r\n        var menu_left = 0;\r\n        var menu_top = 0;\r\n        if (selected_node_bb) {\r\n            menu_left = selected_node_bb.right;\r\n            menu_top = selected_node_bb.top;\r\n        }\r\n        var nodeSelectionMenuItems = this.nodeSelectionMenuItems();\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let graph = UIA.GetCurrentGraph(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        let vgraph = UIA.GetVisualGraph(state);\r\n        let main_content = UIA.Visual(state, MAIN_CONTENT);\r\n        let version = '0.0.0';\r\n        let workspace = null;\r\n        if (rootGraph) {\r\n            version = `${rootGraph.version.major}.${rootGraph.version.minor}.${rootGraph.version.build}`;\r\n            workspace = rootGraph.workspaces ? rootGraph.workspaces[platform()] || rootGraph.workspace : rootGraph.workspace;\r\n        }\r\n        let hoveredLink = null;\r\n        if (UIA.Visual(state, UIA.HOVERED_LINK)) {\r\n            hoveredLink = getLinkInstance(rootGraph, UIA.Visual(state, UIA.HOVERED_LINK));\r\n        }\r\n        return (\r\n            <div className={`skin-red sidebar-mini skin-red ${this.minified()}`} style={{\r\n                height: 'auto',\r\n                minHeight: '100vh'\r\n            }}>\r\n                <div className=\"wrapper\" style={{ height: '100vh' }} >\r\n                    <GooMenuSVG />\r\n                    <GooMenu\r\n                        visible={UIA.Visual(state, UIA.SELECTED_NODE)}\r\n                        left={menu_left - 20}\r\n                        open={UIA.Visual(state, NODE_MENU)}\r\n                        onToggle={() => {\r\n                            this.props.toggleVisual(NODE_MENU);\r\n                        }}\r\n                        top={menu_top + 30}\r\n                        menuItems={nodeSelectionMenuItems}\r\n                    />\r\n                    <div data-tid=\"container\">\r\n                        <Header>\r\n                            <DashboardLogo />\r\n                            <DashboardNavBar>\r\n                                <SidebarToggle />\r\n\r\n                                <NavBarMenu>\r\n                                    {UIA.Visual(state, UIA.SELECTED_LINK) ? <NavBarButton icon={'fa fa-cube'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, UIA.Visual(state, UIA.SELECTED_LINK));\r\n                                        this.props.setVisual(UIA.SELECTED_LINK, null);\r\n                                    }} /> : null}\r\n                                    <GraphMenu />\r\n                                    <NavBarButton icon={'fa fa-asterisk'} onClick={() => {\r\n                                        clipboard.writeText(UIA.generateDataSeeds());\r\n                                    }} />\r\n                                    <NavBarButton icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.NEW_NODE);\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n\r\n                                    <NavBarButton icon={'fa fa-minus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_NODE, { id: UIA.Visual(state, UIA.SELECTED_NODE) });\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, false);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                    <NavBarButton onClick={() => {\r\n                                        this.props.toggleVisual('side-panel-open')\r\n                                    }} />\r\n                                </NavBarMenu>\r\n                                <NavBarMenu paddingRight={15}>\r\n                                    <NavBarButton icon={'fa fa-remove'} title={Titles.ClearPinned} onClick={() => {\r\n                                        this.props.graphOperation(UIA.GetNodes(state).filter(x => UIA.GetNodeProp(x, NodeProperties.Pinned)).map(node => {\r\n                                            return {\r\n                                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                                options: {\r\n                                                    prop: UIA.NodeProperties.Pinned,\r\n                                                    id: node.id,\r\n                                                    value: false\r\n                                                }\r\n                                            }\r\n                                        }));\r\n                                    }} />\r\n                                </NavBarMenu>\r\n                                <NavBarMenu paddingRight={15} style={{ float: 'left' }}>\r\n                                    {UIA.Visual(state, 'MAIN_NAV') ? <NavBarButton active={main_content === MIND_MAP || !main_content} hideArrow={true} title={Titles.MindMap} icon={'fa fa-map'} onClick={() => {\r\n                                        this.props.setVisual(MAIN_CONTENT, MIND_MAP);\r\n                                    }} /> : null}\r\n                                    {UIA.Visual(state, 'MAIN_NAV') ? <NavBarButton active={main_content === CODE_VIEW} hideArrow={true} title={Titles.CodeView} icon={'fa fa-code'} onClick={() => {\r\n                                        this.props.setVisual(MAIN_CONTENT, CODE_VIEW);\r\n                                    }} /> : null}\r\n\r\n                                </NavBarMenu>\r\n                                <NavBarMenu paddingRight={15} style={{ float: 'left' }}>\r\n                                    <NavBarButton title={Titles.New} icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.newRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <NavBarButton title={Titles.Open} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.openRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    {rootGraph ? <NavBarButton title={Titles.SaveAs} icon={'fa fa-cloud-upload'} onClick={() => {\r\n                                        this.props.saveGraphToFile();\r\n                                    }} /> : null}\r\n                                    {rootGraph && rootGraph.fileName ? <NavBarButton title={Titles.Save} icon={'fa fa-save'} onClick={() => {\r\n                                        this.props.saveGraph();\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <NavBarButton title={Titles.Scaffold} icon={'fa fa-building'} onClick={() => {\r\n                                        if (confirm(\"Are you sure you want to scaffold the project\"))\r\n                                            this.props.scaffoldProject();\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <NavBarButton title={Titles.PublishFiles} icon={'fa  fa-building-o'} onClick={() => {\r\n                                        this.props.scaffoldProject({ filesOnly: true });\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <NavBarButton title={Titles.SetWorkingDirectory} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.setWorkingDirectory();\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <NavBarButton title={version} /> : null}\r\n                                    {workspace ? <NavBarButton title={workspace} icon={'fa fa-cog'} /> : null}\r\n                                </NavBarMenu>\r\n                            </DashboardNavBar>\r\n                        </Header>\r\n                        <MainSideBar>\r\n                            <SideBarMenu>\r\n                                <SideBarHeader title={Titles.MainNavigation} onClick={() => {\r\n                                    this.props.toggleVisual('MAIN_NAV');\r\n                                }} />\r\n                                {UIA.Visual(state, 'MAIN_NAV') ? <TreeViewMenu active={main_content === MIND_MAP || !main_content} hideArrow={true} title={Titles.MindMap} icon={'fa fa-map'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, MIND_MAP);\r\n                                }} /> : null}\r\n                                {UIA.Visual(state, 'MAIN_NAV') ? <TreeViewMenu active={main_content === CODE_VIEW} hideArrow={true} title={Titles.CodeView} icon={'fa fa-code'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, CODE_VIEW);\r\n                                }} /> : null}\r\n\r\n                                {hoveredLink && hoveredLink.properties ? <SideBarHeader title={hoveredLink.properties.type} /> : null}\r\n                                <SideBarHeader title={Titles.FileMenu} />\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    active={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    title={Titles.AppMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.ApplicationMenu)\r\n                                    }}>\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.New} icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.newRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Open} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.openRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    {rootGraph ? <TreeViewMenu hideArrow={true} title={Titles.SaveAs} icon={'fa fa-cloud-upload'} onClick={() => {\r\n                                        this.props.saveGraphToFile();\r\n                                    }} /> : null}\r\n                                    {rootGraph && rootGraph.fileName ? <TreeViewMenu hideArrow={true} title={Titles.Save} icon={'fa fa-save'} onClick={() => {\r\n                                        this.props.saveGraph();\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <TreeViewMenu hideArrow={true} title={Titles.Scaffold} icon={'fa  fa-building'} onClick={() => {\r\n                                        if (confirm(\"Are you sure you want to scaffold the project\"))\r\n                                            this.props.scaffoldProject();\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <TreeViewMenu hideArrow={true} title={Titles.PublishFiles} icon={'fa  fa-building-o'} onClick={() => {\r\n                                        this.props.scaffoldProject({ filesOnly: true });\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <TreeViewMenu hideArrow={true} title={Titles.SetWorkingDirectory} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.setWorkingDirectory();\r\n                                    }} /> : null}\r\n                                    {rootGraph ? <TreeViewMenu title={version} hideArrow={true} /> : null}\r\n                                    {workspace ? <TreeViewMenu hideArrow={true} title={workspace} icon={'fa fa-cog'} /> : null}\r\n                                    <SectionEdit />\r\n                                </TreeViewMenu>\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    active={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    title={Titles.GraphPropertiesMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.GraphPropertiesMenu)\r\n                                    }}>\r\n                                    <TreeViewItemContainer>\r\n                                        <Slider min={30} max={1500}\r\n                                            onChange={(value) => {\r\n                                                this.props.setVisual(LINK_DISTANCE, value);\r\n                                            }}\r\n                                            value={UIA.Visual(state, LINK_DISTANCE)} />\r\n                                    </TreeViewItemContainer>\r\n                                    <TreeViewItemContainer>\r\n                                        <DepthChoice />\r\n                                    </TreeViewItemContainer>\r\n                                </TreeViewMenu>\r\n                                <SectionList />\r\n                                <NodeManagement />\r\n                                <MaestroDetailsMenu />\r\n                                <ControllerDetailsMenu />\r\n                            </SideBarMenu>\r\n                        </MainSideBar>\r\n                        <Content>\r\n                            <CodeView active={UIA.Visual(state, MAIN_CONTENT) === CODE_VIEW} />\r\n                            <LayoutView active={UIA.Visual(state, MAIN_CONTENT) === LAYOUT_VIEW} />\r\n                            <MindMap\r\n                                linkDistance={UIA.Visual(state, LINK_DISTANCE)}\r\n                                onNodeClick={(nodeId, boundingBox) => {\r\n                                    if (UIA.Visual(state, CONNECTING_NODE)) {\r\n                                        let selectedId = UIA.Visual(state, UIA.SELECTED_NODE);\r\n                                        console.log(`selectedId:${selectedId} => nodeId:${nodeId}`)\r\n                                        let properties = UIA.Visual(state, CONNECTING_NODE);\r\n                                        if (properties === true) {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId\r\n                                            });\r\n                                        }\r\n                                        else {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId,\r\n                                                properties\r\n                                            });\r\n                                        }\r\n                                        this.props.setVisual(CONNECTING_NODE, false);\r\n                                        this.props.setVisual(UIA.SELECTED_NODE, null);\r\n                                    }\r\n                                    else {\r\n                                        if ([UIA.Visual(state, UIA.SELECTED_NODE)].indexOf(nodeId) === -1) {\r\n                                            this.props.SelectedNode(nodeId);\r\n                                            this.props.setVisual(UIA.SELECTED_NODE_BB, boundingBox);\r\n                                            this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        }\r\n                                        else {\r\n                                            this.props.SelectedNode(null);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                onLinkClick={(linkId, boundingBox) => {\r\n                                    console.log(`link id : ${linkId}`)\r\n                                    this.props.setVisual(UIA.SELECTED_LINK, linkId);\r\n\r\n                                    this.props.setVisual(UIA.HOVERED_LINK, linkId);\r\n                                }}\r\n\r\n                                selectedColor={UIA.Colors.SelectedNode}\r\n                                selectedLinks={[UIA.Visual(state, UIA.SELECTED_LINK)].filter(x => x)}\r\n                                selectedNodes={[UIA.Visual(state, UIA.SELECTED_NODE)].filter(x => x)}\r\n                                graph={vgraph || graph}></MindMap>\r\n                        </Content>\r\n                        <SideBar open={UIA.Visual(state, SIDE_PANEL_OPEN)} extraWide={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                            <SideBarTabs>\r\n                                <SideBarTab\r\n                                    icon=\"fa fa-cog\"\r\n                                    active={UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB)} onClick={() => {\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, PARAMETER_TAB)\r\n                                }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, SCOPE_TAB)\r\n                                }} />\r\n                                <SideBarTab\r\n                                    icon={'fa fa-institution'}\r\n                                    active={UIA.VisualEq(state, SELECTED_TAB, QUICK_MENU)} onClick={() => {\r\n                                        this.props.setVisual(SELECTED_TAB, QUICK_MENU)\r\n                                    }} />\r\n                            </SideBarTabs>\r\n                            {currentNode && !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, NodeProperties.NODEType)] ? (\r\n                                <SideMenuContainer active={true} tab={DEFAULT_TAB} key={\"node-properties\"} title={Titles.NodeProperties}>\r\n                                    <FormControl>\r\n                                        <SideBarMenu>\r\n                                            <SideBarHeader onClick={() => {\r\n                                                clipboard.writeText(UIA.Visual(state, UIA.SELECTED_NODE))\r\n                                            }} title={UIA.Visual(state, UIA.SELECTED_NODE)}></SideBarHeader>\r\n                                        </SideBarMenu>\r\n                                        <ChoiceListItemActivityMenu />\r\n                                        {/* <ConditionActivityMenu /> */}\r\n                                        <DataChainActvityMenu />\r\n                                        <TextInput\r\n                                            label={Titles.NodeLabel}\r\n                                            value={currentNode.properties ? currentNode.properties.text : ''}\r\n                                            onChange={(value) => {\r\n                                                this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                                            }} />\r\n                                        {NotSelectableNodeTypes[currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null] ? null : (<SelectInput\r\n                                            disabled={!UIA.CanChangeType(currentNode)}\r\n                                            label={Titles.NodeType}\r\n                                            options={Object.keys(UIA.NodeTypes).filter(x => !NotSelectableNodeTypes[UIA.NodeTypes[x]]).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                                return {\r\n                                                    value: UIA.NodeTypes[x],\r\n                                                    title: x\r\n                                                }\r\n                                            })}\r\n                                            onChange={(value) => {\r\n                                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, { prop: UIA.NodeProperties.NODEType, id: currentNode.id, value })\r\n                                            }}\r\n                                            value={currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null} />)}\r\n                                        <CheckBox\r\n                                            label={Titles.Collapsed}\r\n                                            value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Collapsed)}\r\n                                            onChange={(value) => {\r\n                                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                    prop: UIA.NodeProperties.Collapsed,\r\n                                                    id: currentNode.id,\r\n                                                    value\r\n                                                });\r\n                                            }} />\r\n                                        <CheckBox\r\n                                            label={Titles.Pinned}\r\n                                            title={Titles.PinnedShortCut}\r\n                                            value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Pinned)}\r\n                                            onChange={(value) => {\r\n                                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                    prop: UIA.NodeProperties.Pinned,\r\n                                                    id: currentNode.id,\r\n                                                    value\r\n                                                });\r\n                                            }} />\r\n                                    </FormControl>\r\n\r\n                                </SideMenuContainer>) : null}\r\n\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (\r\n                                <ConditionFilterMenu methodDefinitionKey={'validation'} />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (\r\n                                <ConditionFilterMenu methodDefinitionKey={'permission'} />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (\r\n                                <ConditionFilterMenu methodDefinitionKey={'filter'} />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (\r\n                                <ConditionFilterMenu view={'datasource'} />) : null}\r\n                            <CommonActivityMenu />\r\n                            <ModelActivityMenu />\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (<SideBarContent>\r\n                                <ControllerActivityMenu />\r\n                                <ModelFilterItemActivityMenu />\r\n                                <DataSourceActivityMenu />\r\n                                <FunctionActivityMenu />\r\n                                <ConfigurationActivityMenu />\r\n                                <MethodActivityMenu />\r\n                                <ComponentActivityMenu />\r\n                                <AttributeFormControl />\r\n                                <ParameterActivityMenu />\r\n                                <ValidatorActivityMenu />\r\n                                <ExecutorActivityMenu />\r\n                                <PropertyActivityMenu />\r\n                                <ValidationItemFormControl />\r\n                                <ChoiceActivityMenu />\r\n                                <MaestroActivityMenu />\r\n                                <ScreenActivityMenu />\r\n                                <ValidationActivityMenu />\r\n                                <OptionActivityMenu />\r\n                                <ExtensionListActivityMenu />\r\n                                <ScreenOptionsActivityMenu />\r\n                                <OptionItemFormControl />\r\n                                <PermissionActivityMenu />\r\n                                <ExtensionDefinitionMenu />\r\n                                <ModelFilterActivityMenu />\r\n                                <PermissionDependencyActivityMenu />\r\n                                <AfterEffectsActivityMenu />\r\n                                <EnumerationActivityMenu />\r\n                                <ServiceActivityMenu />\r\n                            </SideBarContent>) : null}\r\n                            <ComponentPropertyMenu />\r\n                            <ComponentAPIMenu />\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<SideBarContent>\r\n                                <ValidatorPropertyMenu />\r\n                                <ReferenceActivityMenu />\r\n                                <ExecutorPropertyMenu />\r\n                                <ModelRelationshipMenu />\r\n                                <MethodPropertyMenu />\r\n                                <PermissionMenu />\r\n                                <ModelFilterMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ValidatorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ExecutorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (\r\n                                <ExecutorPropertyActivityMenu\r\n                                    ui={FilterUI}\r\n                                    modelKey={NodeProperties.ModelItemFilter}\r\n                                    nodeType={NodeTypes.ModelItemFilter}\r\n                                    nodeProp={NodeProperties.FilterModel} />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (\r\n                                <ExecutorPropertyActivityMenu\r\n                                    ui={FilterUI}\r\n                                    modelKey={NodeProperties.Condition}\r\n                                    nodeType={NodeTypes.Condition}\r\n                                    nodeProp={NodeProperties.Condition} />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, QUICK_MENU) ? (<SideBarContent>\r\n                                <BatchMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB) ? (<DataChainOperator />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<UIParameters />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<NavigationParameterMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<MethodParameterMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, QUICK_MENU) ? (<QuickMethods />) : null}\r\n                        </SideBar>\r\n                    </div>\r\n                    <ContextMenu />\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\nexport const SELECTED_TAB = 'SELECTED_TAB';\r\nexport const DEFAULT_TAB = 'DEFAULT_TAB';\r\nexport const PARAMETER_TAB = 'PARAMETER_TAB';\r\nexport const SCOPE_TAB = 'SCOPE_TAB';\r\nexport const QUICK_MENU = 'QUICK_MENU';\r\nexport default UIConnect(Dashboard)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport Routes from '../Routes';\r\n\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    const { store, history } = this.props;\r\n    return (\r\n      <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n          <Routes />\r\n        </ConnectedRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport routes from './constants/routes';\r\nimport App from './containers/App';\r\nimport Dashboard from './components/dashboard';\r\nexport default () => (\r\n  <App>\r\n    <Switch>\r\n      <Route path={routes.HOME} component={Dashboard} />\r\n    </Switch>\r\n  </App>\r\n);\r\n","// @flow\r\nimport type { GetState, Dispatch } from '../reducers/types';\r\n\r\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\r\n\r\nexport function increment() {\r\n  return {\r\n    type: INCREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function decrement() {\r\n  return {\r\n    type: DECREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function incrementIfOdd() {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    const { counter } = getState();\r\n\r\n    if (counter % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch(increment());\r\n  };\r\n}\r\n\r\nexport function incrementAsync(delay: number = 1000) {\r\n  return (dispatch: Dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(increment());\r\n    }, delay);\r\n  };\r\n}\r\n","// @flow\r\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER } from '../actions/counter';\r\nimport type { Action } from './types';\r\n\r\nexport default function counter(state: number = 0, action: Action) {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return state + 1;\r\n    case DECREMENT_COUNTER:\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// @flow\r\nimport * as UIA from '../actions/uiactions';\r\nexport function updateUI(state, action) {\r\n    var newstate = { ...state };\r\n    newstate[action.section] = { ...newstate[action.section] || {} }\r\n    newstate[action.section][action.item] = action.value;\r\n    return newstate;\r\n}\r\nexport function makeDefaultState() {\r\n    return {};\r\n}\r\nexport default function uiReducer(state, action) {\r\n    state = state || makeDefaultState();\r\n    switch (action.type) {\r\n        case UIA.UI_UPDATE:\r\n            return updateUI(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport counter from './counter';\r\nimport uiReducer from './uiReducer';\r\nexport default function createRootReducer(history) {\r\n  return combineReducers({\r\n    router: connectRouter(history),\r\n    counter,\r\n    uiReducer\r\n  });\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware, routerActions } from 'connected-react-router';\r\nimport { createLogger } from 'redux-logger';\r\nimport createRootReducer from '../reducers';\r\nimport * as counterActions from '../actions/counter';\r\nimport type { counterStateType } from '../reducers/types';\r\n\r\nconst history = createHashHistory();\r\n\r\nconst rootReducer = createRootReducer(history);\r\n\r\nconst configureStore = (initialState?: counterStateType) => {\r\n  // Redux Configuration\r\n  const middleware = [];\r\n  const enhancers = [];\r\n\r\n  // Thunk Middleware\r\n  middleware.push(thunk);\r\n\r\n  // Logging Middleware\r\n  const logger = createLogger({\r\n    level: 'info',\r\n    collapsed: true\r\n  });\r\n\r\n  // Skip redux logs in console during the tests\r\n  if (process.env.NODE_ENV !== 'test') {\r\n    middleware.push(logger);\r\n  }\r\n\r\n  // Router Middleware\r\n  const router = routerMiddleware(history);\r\n  middleware.push(router);\r\n\r\n  // Redux DevTools Configuration\r\n  const actionCreators = {\r\n    ...counterActions,\r\n    ...routerActions\r\n  };\r\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n  /* eslint-disable no-underscore-dangle */\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Options: http://extension.remotedev.io/docs/API/Arguments.html\r\n        actionCreators\r\n      })\r\n    : compose;\r\n  /* eslint-enable no-underscore-dangle */\r\n\r\n  // Apply Middleware & Compose Enhancers\r\n  enhancers.push(applyMiddleware(...middleware));\r\n  const enhancer = composeEnhancers(...enhancers);\r\n\r\n  // Create Store\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\r\n      '../reducers',\r\n      // eslint-disable-next-line global-require\r\n      () => store.replaceReducer(require('../reducers').default)\r\n    );\r\n  }\r\n\r\n  return store;\r\n};\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from '../reducers';\r\nconst history = createHashHistory();\r\nconst rootReducer = createRootReducer(history);\r\nconst router = routerMiddleware(history);\r\nconst enhancer = applyMiddleware(thunk, router);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, enhancer);\r\n}\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport configureStoreDev from './configureStore.dev';\r\nimport configureStoreProd from './configureStore.prod';\r\n\r\nconst selectedConfigureStore =\r\n  process.env.NODE_ENV === 'production'\r\n    ? configureStoreProd\r\n    : configureStoreDev;\r\n\r\nexport const { configureStore } = selectedConfigureStore;\r\n\r\nexport const { history } = selectedConfigureStore;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport Root from './containers/Root';\r\nimport { configureStore, history } from './store/configureStore';\r\nimport './app.global.css';\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n  <AppContainer>\r\n    <Root store={store} history={history} />\r\n  </AppContainer>,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./containers/Root', () => {\r\n    // eslint-disable-next-line global-require\r\n    const NextRoot = require('./containers/Root').default;\r\n    render(\r\n      <AppContainer>\r\n        <NextRoot store={store} history={history} />\r\n      </AppContainer>,\r\n      document.getElementById('root')\r\n    );\r\n  });\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _reactRouter = require('react-router');\n\nvar _actions = require('./actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar createConnectedRouter = function createConnectedRouter(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n  /*\n   * ConnectedRouter listens to a history object passed from props.\n   * When history is changed, it dispatches action to redux store.\n   * Then, store will pass props to component to render.\n   * This creates uni-directional flow from history->store->router->components.\n   */\n\n  var ConnectedRouter = function (_get__2) {\n    _inherits(ConnectedRouter, _get__2);\n\n    function ConnectedRouter(props, context) {\n      _classCallCheck(this, ConnectedRouter);\n\n      var _this = _possibleConstructorReturn(this, (ConnectedRouter.__proto__ || Object.getPrototypeOf(ConnectedRouter)).call(this, props));\n\n      _this.inTimeTravelling = false;\n\n      // Subscribe to store changes\n      _this.unsubscribe = context.store.subscribe(function () {\n        // Extract store's location\n        var _toJS = toJS(getIn(context.store.getState(), ['router', 'location'])),\n            pathnameInStore = _toJS.pathname,\n            searchInStore = _toJS.search,\n            hashInStore = _toJS.hash;\n        // Extract history's location\n\n\n        var _props$history$locati = props.history.location,\n            pathnameInHistory = _props$history$locati.pathname,\n            searchInHistory = _props$history$locati.search,\n            hashInHistory = _props$history$locati.hash;\n\n        // If we do time travelling, the location in store is changed but location in history is not changed\n\n        if (pathnameInHistory !== pathnameInStore || searchInHistory !== searchInStore || hashInHistory !== hashInStore) {\n          _this.inTimeTravelling = true;\n          // Update history's location to match store's location\n          props.history.push({\n            pathname: pathnameInStore,\n            search: searchInStore,\n            hash: hashInStore\n          });\n        }\n      });\n\n      var handleLocationChange = function handleLocationChange(location, action) {\n        // Dispatch onLocationChanged except when we're in time travelling\n        if (!_this.inTimeTravelling) {\n          props.onLocationChanged(location, action);\n        } else {\n          _this.inTimeTravelling = false;\n        }\n      };\n\n      // Listen to history changes\n      _this.unlisten = props.history.listen(handleLocationChange);\n      // Dispatch a location change action for the initial location\n      handleLocationChange(props.history.location, props.history.action);\n      return _this;\n    }\n\n    _createClass(ConnectedRouter, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.unlisten();\n        this.unsubscribe();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            history = _props.history,\n            children = _props.children;\n\n\n        return _get__('React').createElement(\n          _get__('Router'),\n          { history: history },\n          children\n        );\n      }\n    }]);\n\n    return ConnectedRouter;\n  }(_get__('Component'));\n\n  ConnectedRouter.contextTypes = {\n    store: _get__('PropTypes').shape({\n      getState: _get__('PropTypes').func.isRequired,\n      subscribe: _get__('PropTypes').func.isRequired\n    }).isRequired\n  };\n\n  ConnectedRouter.propTypes = {\n    history: _get__('PropTypes').shape({\n      action: _get__('PropTypes').string.isRequired,\n      listen: _get__('PropTypes').func.isRequired,\n      location: _get__('PropTypes').object.isRequired,\n      push: _get__('PropTypes').func.isRequired\n    }).isRequired,\n    location: _get__('PropTypes').oneOfType([_get__('PropTypes').object, _get__('PropTypes').string]).isRequired,\n    action: _get__('PropTypes').string.isRequired,\n    basename: _get__('PropTypes').string,\n    children: _get__('PropTypes').oneOfType([_get__('PropTypes').func, _get__('PropTypes').node]),\n    onLocationChanged: _get__('PropTypes').func.isRequired\n  };\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      action: getIn(state, ['router', 'action']),\n      location: getIn(state, ['router', 'location'])\n    };\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      onLocationChanged: function onLocationChanged(location, action) {\n        return dispatch(_get__('onLocationChanged')(location, action));\n      }\n    };\n  };\n\n  return _get__('connect')(mapStateToProps, mapDispatchToProps)(ConnectedRouter);\n};\n\nexports.default = _get__('createConnectedRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'Component':\n      return _react.Component;\n\n    case 'PropTypes':\n      return _propTypes2.default;\n\n    case 'onLocationChanged':\n      return _actions.onLocationChanged;\n\n    case 'connect':\n      return _reactRedux.connect;\n\n    case 'createConnectedRouter':\n      return createConnectedRouter;\n\n    case 'React':\n      return _react2.default;\n\n    case 'Router':\n      return _reactRouter.Router;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectedRouter === 'undefined' ? 'undefined' : _typeof(createConnectedRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectedRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectedRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * This action type will be dispatched when your history\n * receives a location change.\n */\nvar LOCATION_CHANGE = exports.LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\n\nvar onLocationChanged = exports.onLocationChanged = function onLocationChanged(location, action) {\n  return {\n    type: _get__('LOCATION_CHANGE'),\n    payload: {\n      location: location,\n      action: action\n    }\n  };\n};\n\n/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\nvar CALL_HISTORY_METHOD = exports.CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\n\nvar updateLocation = function updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: _get__('CALL_HISTORY_METHOD'),\n      payload: {\n        method: method,\n        args: args\n      }\n    };\n  };\n};\n\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\nvar push = exports.push = _get__('updateLocation')('push');\nvar replace = exports.replace = _get__('updateLocation')('replace');\nvar go = exports.go = _get__('updateLocation')('go');\nvar goBack = exports.goBack = _get__('updateLocation')('goBack');\nvar goForward = exports.goForward = _get__('updateLocation')('goForward');\n\nvar routerActions = exports.routerActions = { push: _get__('push'), replace: _get__('replace'), go: _get__('go'), goBack: _get__('goBack'), goForward: _get__('goForward') };\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return LOCATION_CHANGE;\n\n    case 'CALL_HISTORY_METHOD':\n      return CALL_HISTORY_METHOD;\n\n    case 'updateLocation':\n      return updateLocation;\n\n    case 'push':\n      return push;\n\n    case 'replace':\n      return replace;\n\n    case 'go':\n      return go;\n\n    case 'goBack':\n      return goBack;\n\n    case 'goForward':\n      return goForward;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _actions = require('./actions');\n\nvar actions = _interopRequireWildcard(_actions);\n\nvar _ConnectedRouter = require('./ConnectedRouter');\n\nvar _ConnectedRouter2 = _interopRequireDefault(_ConnectedRouter);\n\nvar _reducer = require('./reducer');\n\nvar _reducer2 = _interopRequireDefault(_reducer);\n\nvar _middleware = require('./middleware');\n\nvar _middleware2 = _interopRequireDefault(_middleware);\n\nvar _selectors = require('./selectors');\n\nvar _selectors2 = _interopRequireDefault(_selectors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar createAll = function createAll(structure) {\n  return _extends({}, _get__('actions'), _get__('createSelectors')(structure), {\n    ConnectedRouter: _get__('createConnectedRouter')(structure),\n    connectRouter: _get__('createConnectRouter')(structure),\n    routerMiddleware: _get__('routerMiddleware')\n  });\n};\n\nexports.default = _get__('createAll');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'actions':\n      return _filterWildcardImport__(actions);\n\n    case 'createSelectors':\n      return _selectors2.default;\n\n    case 'createConnectedRouter':\n      return _ConnectedRouter2.default;\n\n    case 'createConnectRouter':\n      return _reducer2.default;\n\n    case 'routerMiddleware':\n      return _middleware2.default;\n\n    case 'createAll':\n      return createAll;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createAll === 'undefined' ? 'undefined' : _typeof(createAll);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createAll, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createAll)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nfunction _filterWildcardImport__() {\n  var wildcardImport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__' && propertyName !== '__RewireAPI__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = exports.createMatchSelector = exports.getAction = exports.getLocation = exports.routerMiddleware = exports.connectRouter = exports.ConnectedRouter = exports.routerActions = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.CALL_HISTORY_METHOD = exports.LOCATION_CHANGE = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createAll = require('./createAll');\n\nvar _createAll2 = _interopRequireDefault(_createAll);\n\nvar _plain = require('./structure/plain');\n\nvar _plain2 = _interopRequireDefault(_plain);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _get__2 = _get__('createAll')(_get__('plainStructure'));\n\nvar LOCATION_CHANGE = _get__2.LOCATION_CHANGE,\n    CALL_HISTORY_METHOD = _get__2.CALL_HISTORY_METHOD,\n    push = _get__2.push,\n    replace = _get__2.replace,\n    go = _get__2.go,\n    goBack = _get__2.goBack,\n    goForward = _get__2.goForward,\n    routerActions = _get__2.routerActions,\n    ConnectedRouter = _get__2.ConnectedRouter,\n    connectRouter = _get__2.connectRouter,\n    routerMiddleware = _get__2.routerMiddleware,\n    getLocation = _get__2.getLocation,\n    getAction = _get__2.getAction,\n    createMatchSelector = _get__2.createMatchSelector;\nexports.LOCATION_CHANGE = LOCATION_CHANGE;\nexports.CALL_HISTORY_METHOD = CALL_HISTORY_METHOD;\nexports.push = push;\nexports.replace = replace;\nexports.go = go;\nexports.goBack = goBack;\nexports.goForward = goForward;\nexports.routerActions = routerActions;\nexports.ConnectedRouter = ConnectedRouter;\nexports.connectRouter = connectRouter;\nexports.routerMiddleware = routerMiddleware;\nexports.getLocation = getLocation;\nexports.getAction = getAction;\nexports.createMatchSelector = createMatchSelector;\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'createAll':\n      return _createAll2.default;\n\n    case 'plainStructure':\n      return _plain2.default;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\nvar routerMiddleware = function routerMiddleware(history) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        // eslint-disable-line no-unused-vars\n        if (action.type !== _get__('CALL_HISTORY_METHOD')) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n\n        history[method].apply(history, _toConsumableArray(args));\n      };\n    };\n  };\n};\n\nexports.default = _get__('routerMiddleware');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'CALL_HISTORY_METHOD':\n      return _actions.CALL_HISTORY_METHOD;\n\n    case 'routerMiddleware':\n      return routerMiddleware;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof routerMiddleware === 'undefined' ? 'undefined' : _typeof(routerMiddleware);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(routerMiddleware, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(routerMiddleware)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: history.location,\n      action: history.action\n    });\n\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === _get__('LOCATION_CHANGE')) {\n        return merge(state, payload);\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexports.default = _get__('createConnectRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return _actions.LOCATION_CHANGE;\n\n    case 'createConnectRouter':\n      return createConnectRouter;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectRouter === 'undefined' ? 'undefined' : _typeof(createConnectRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _reactRouter = require('react-router');\n\nvar createSelectors = function createSelectors(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n\n  var getLocation = function getLocation(state) {\n    return toJS(getIn(state, ['router', 'location']));\n  };\n  var getAction = function getAction(state) {\n    return toJS(getIn(state, ['router', 'action']));\n  };\n\n  // It only makes sense to recalculate the `matchPath` whenever the pathname\n  // of the location changes. That's why `createMatchSelector` memoizes\n  // the latest result based on the location's pathname.\n  var createMatchSelector = function createMatchSelector(path) {\n    var lastPathname = null;\n    var lastMatch = null;\n\n    return function (state) {\n      var _ref = getLocation(state) || {},\n          pathname = _ref.pathname;\n\n      if (pathname === lastPathname) {\n        return lastMatch;\n      }\n      lastPathname = pathname;\n      var match = _get__('matchPath')(pathname, path);\n      if (!match || !lastMatch || match.url !== lastMatch.url) {\n        lastMatch = match;\n      }\n\n      return lastMatch;\n    };\n  };\n\n  return { getLocation: getLocation, getAction: getAction, createMatchSelector: createMatchSelector };\n};\n\nexports.default = _get__('createSelectors');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'matchPath':\n      return _reactRouter.matchPath;\n\n    case 'createSelectors':\n      return createSelectors;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createSelectors === 'undefined' ? 'undefined' : _typeof(createSelectors);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createSelectors, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createSelectors)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* Code from github.com/erikras/redux-form by Erik Rasmussen */\n\nvar getIn = function getIn(state, path) {\n  if (!state) {\n    return state;\n  }\n\n  var length = path.length;\n  if (!length) {\n    return undefined;\n  }\n\n  var result = state;\n  for (var i = 0; i < length && !!result; ++i) {\n    result = result[path[i]];\n  }\n\n  return result;\n};\n\nexports.default = _get__(\"getIn\");\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getIn\":\n      return getIn;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === \"undefined\" ? \"undefined\" : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof getIn === \"undefined\" ? \"undefined\" : _typeof(getIn);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(getIn, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(getIn)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _getIn = require('./getIn');\n\nvar _getIn2 = _interopRequireDefault(_getIn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar structure = {\n  fromJS: function fromJS(value) {\n    return value;\n  },\n  getIn: _get__('getIn'),\n  merge: function merge(state, payload) {\n    return _extends({}, state, payload);\n  },\n  toJS: function toJS(value) {\n    return value;\n  }\n};\n\nexports.default = _get__('structure');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'getIn':\n      return _getIn2.default;\n\n    case 'structure':\n      return structure;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof structure === 'undefined' ? 'undefined' : _typeof(structure);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(structure, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(structure)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = false;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","module.exports = require(\"d3\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"history\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-hot-loader\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-router\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"react-syntax-highlighter\");","module.exports = require(\"redux\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"util\");","module.exports = require(\"webcola\");"],"sourceRoot":""}