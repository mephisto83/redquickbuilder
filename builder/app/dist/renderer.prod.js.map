{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/containers/App.js","webpack:///./app/components/titles.js","webpack:///./app/constants/nodetypes.js","webpack:///./app/constants/functiontypes.js","webpack:///./app/methods/graph_methods.js","webpack:///./app/actions/uiactions.js","webpack:///./app/utils/array.js","webpack:///./app/ipc/handler-events.js","webpack:///./app/generators/namespacegenerator.js","webpack:///./app/generators/controllergenerator.js","webpack:///./app/generators/modelgenerators.js","webpack:///./app/generators/extensiongenerator.js","webpack:///./app/generators/permissiongenerator.js","webpack:///./app/generators/validationrulegenerator.js","webpack:///./app/generators/streamprocessorchestrationgenerator.js","webpack:///./app/generators/modelitemfiltergenerator.js","webpack:///./app/generators/maestrogenerator.js","webpack:///./app/generators/changeparametergenerator.js","webpack:///./app/generators/constantsgenerator.js","webpack:///./app/generators/streamprocessgenerator.js","webpack:///./app/generators/changeresponsegenerator.js","webpack:///./app/generators/executiongenerator.js","webpack:///./app/generators/modelreturngenerator.js","webpack:///./app/generators/modelexceptiongenerator.js","webpack:///./app/generators/modelgetgenerators.js","webpack:///./app/generators/generator.js","webpack:///./app/actions/ipcActions.js","webpack:///./app/actions/remoteActions.js","webpack:///./app/utils/utils.js","webpack:///./app/components/dashboardlogo.js","webpack:///./app/components/header.js","webpack:///./app/components/dashboardnavbar.js","webpack:///./app/components/sidebartoggle.js","webpack:///./app/components/navbarmenu.js","webpack:///./app/components/mainsidebar.js","webpack:///./app/components/sidebarheader.js","webpack:///./app/components/sidebarmenu.js","webpack:///./app/components/treeviewmenu.js","webpack:///./app/components/content.js","webpack:///./app/components/sidebar.js","webpack:///./app/components/sidebartabs.js","webpack:///./app/components/sidebartab.js","webpack:///./app/components/controlsidebarmenu.js","webpack:///./app/components/tabpane.js","webpack:///./app/components/formcontrol.js","webpack:///./app/components/textinput.js","webpack:///./app/components/selectinput.js","webpack:///./app/components/checkbox.js","webpack:///./app/constants/servicetypes.js","webpack:///./app/components/serviceactivitymenu.js","webpack:///./app/components/sidebarcontent.js","webpack:///./app/components/navbarbutton.js","webpack:///./app/components/box.js","webpack:///./app/components/enumerationeditmenu.js","webpack:///./app/components/executoritem.js","webpack:///./app/components/genericpropertymenu.js","webpack:///./app/components/genericpropertycontainer.js","webpack:///./app/components/buttonlist.js","webpack:///./app/components/conditionfiltermenu.js","webpack:///./app/constants/visual.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./app/components/mindmap.js","webpack:///./app/components/modelactivitymenu.js","webpack:///./app/components/functionactivitymenu.js","webpack:///./app/components/propertyactivitymenu.js","webpack:///./app/components/aftereffectsactivitymenu.js","webpack:///./app/components/attributeformcontrol.js","webpack:///./app/components/nodelist.js","webpack:///./app/components/permissionmenu.js","webpack:///./app/components/choiceactivitymenu.js","webpack:///./app/components/treeviewitemcontainer.js","webpack:///./app/components/modelfilteractivitymenu.js","webpack:///./app/components/validationactivitymenu.js","webpack:///./app/components/validationitemactivitymenu.js","webpack:///./app/components/validatoractivitymenu.js","webpack:///./app/components/optionactivitymenu.js","webpack:///./app/components/executorpropertymenu.js","webpack:///./app/components/conditionactivitymenu.js","webpack:///./app/components/parameteractivitymenu.js","webpack:///./app/components/optionitemformcontrol.js","webpack:///./app/components/executorpropertyactivitymenu.js","webpack:///./app/components/executoractivitymenu.js","webpack:///./app/components/validatorpropertymenu.js","webpack:///./app/components/validatoritem.js","webpack:///./app/components/validatorpropertyactivitymenu.js","webpack:///./app/components/ExtensionListActivityMenu.js","webpack:///./app/components/permissionsactivitymenu.js","webpack:///./app/components/referenceactivitymenu.js","webpack:///./app/components/goomenu.js","webpack:///./app/components/choicelistitemactivitymenu.js","webpack:///./app/components/modelfiltermenu.js","webpack:///./app/components/slider.js","webpack:///./app/components/dropdown.js","webpack:///./app/components/tabcontent.js","webpack:///./app/components/userfooter.js","webpack:///./app/components/tabcontainer.js","webpack:///./app/components/enumeratedtable.js","webpack:///./app/components/extensiondefinitionmenu.js","webpack:///./app/components/methodactivitymenu.js","webpack:///./app/components/methodpropertymenu.js","webpack:///./app/components/treeviewitem.js","webpack:///./app/components/maestrodetailsmenu.js","webpack:///./app/components/nodemanagement.js","webpack:///./app/components/commonactivitymenu.js","webpack:///./app/components/modelfilteritemactivitymenu.js","webpack:///./app/components/modelrelationshipmenu.js","webpack:///./app/components/depthchoice.js","webpack:///./app/components/maestroactivitymenu.js","webpack:///./app/components/controllerdetailsmenu.js","webpack:///./app/components/controlleractivitymenu.js","webpack:///./app/components/permissionsdependentactivitymenu.js","webpack:///./app/components/dropdownmenuitem.js","webpack:///./app/components/graphmenu.js","webpack:///./app/components/sectionlist.js","webpack:///./app/components/enumerationactivitymenu.js","webpack:///./app/components/sectionedit.js","webpack:///./app/components/topviewer.js","webpack:///./node_modules/react-syntax-highlighter/dist/esm/styles/hljs/docco.js","webpack:///./app/components/tab.js","webpack:///./app/components/tabs.js","webpack:///./app/components/codeview.js","webpack:///./app/components/dashboard.js","webpack:///./app/containers/Root.js","webpack:///./app/Routes.js","webpack:///./app/actions/counter.js","webpack:///./app/reducers/counter.js","webpack:///./app/reducers/uiReducer.js","webpack:///./app/reducers/index.js","webpack:///./app/store/configureStore.dev.js","webpack:///./app/store/configureStore.prod.js","webpack:///./app/store/configureStore.js","webpack:///./app/index.js","webpack:///./node_modules/connected-react-router/lib/ConnectedRouter.js","webpack:///./node_modules/connected-react-router/lib/actions.js","webpack:///./node_modules/connected-react-router/lib/createAll.js","webpack:///./node_modules/connected-react-router/lib/index.js","webpack:///./node_modules/connected-react-router/lib/middleware.js","webpack:///./node_modules/connected-react-router/lib/reducer.js","webpack:///./node_modules/connected-react-router/lib/selectors.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/getIn.js","webpack:///./node_modules/connected-react-router/lib/structure/plain/index.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_bind.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_function-to-string.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/es6.function.bind.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/redux-logger/dist/redux-logger.js","webpack:///external \"d3\"","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"history\"","webpack:///external \"path\"","webpack:///external \"react\"","webpack:///external \"react-dom\"","webpack:///external \"react-hot-loader\"","webpack:///external \"react-redux\"","webpack:///external \"react-router\"","webpack:///external \"react-router-dom\"","webpack:///external \"react-syntax-highlighter\"","webpack:///external \"redux\"","webpack:///external \"redux-thunk\"","webpack:///external \"util\"","webpack:///external \"webcola\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","React","render","children","this","props","_jsx","external_react_","RemoveValidation","RemoveExecution","SelectValidation","SelectExecution","SelectedValidations","Remove","Type","ServerSideSetup","AddCondition","GraphPropertiesMenu","NodeLabel","NodeType","Nodes","Models","OutputModel","ConditionType","Reference","Depth","New","ServiceActivity","CodeTypes","Project","NameSpace","Pinned","Collapsed","GenericLink","OnLoad","ChildLink","OnFailureLink","OnAction","OnItemSelection","OnSuccessLink","SelectedExecutors","Agents","SelectProperty","DisallowedEnums","FunctionVariables","Methods","AllowedEnums","ModelActions","SetDefaultPropertiesDescription","SetDefaultProperties","AddProperty","PermissionsDependencyAttribute","KeyField","UseEnumeration","Enumeration","CodeUser","AddPropertyDescription","AddAttribute","AddAttributeDescription","UIName","UINameDescription","UISingular","Unknown","PropertyValueType","PropertyModelType","AddReference","IsReferenceList","AgentOperator","Enumerable","Value","AppMenu","CodeName","ValueName","AgentName","FileMenu","Code","MainNavigation","AddParameter","AddParameterDescription","AddFunctionOutput","Menu","AddFunctionOutputDescription","IsAgent","IsOwnedByAgents","IsOwnedByAgentsDescriptions","IsUser","ParameterType","OwnedResources","AddAfterMethods","AddAfterMethodsDescription","AddModelItemFilter","AddModelItemFilterDescription","PermissionType","PermissionAttributes","OwnedResourcesDescription","PermissionActions","PermissionValueType","Permissions","Create","Get","GetAll","Getall","Delete","Getbyowner","Update","ChoiceTypes","AddChoice","AddChoiceDescription","AddPermissionDescription","AddPermission","Select","ValidationListActions","AddValidationItem","AddValidationItemDescription","UseUIValidations","AddValidationList","AddValidationListDescription","Add","ValidationTypes","ValidationType","OptionListActions","AddOptionItem","AddOptionItemDescription","Name","OptionsType","UseCustomOption","UseUIOptions","AddOptionList","AddOptionListDescription","DependentProperty","UseDependentProperty","UseUIExtensions","IncludedInList","IsEqualTo","UseEqualDescription","UseEqual","IsEqualToDescription","ExcludedFromList","ExcludedFromListDescription","IncludedInListDescription","ExtensionTypes","AddExtensionList","AddExtensionListDescription","ExtensionListTypeActions","AddExtensionNode","ExtensionOptions","AddExtensionNodeDescription","ExtensionDefinition","Extensions","ExtensionConfig","DependsOn","UseId","Property","Condition","DependsOnDescription","DependentPropertyDescription","MatchingValue","MatchingValueDescription","FunctionTypes","Functions","AddFunction","MaestroDetails","HttpMethod","AddMaestros","HttpRoute","NotIncludeInController","Maestros","Save","Open","PublishFiles","Scaffold","SetWorkingDirectory","MindMap","CodeView","ParentTo","IsParent","IsCompositeInput","UserModel","ManyToManyNexus","ManyToManyExists","ManyToManyNexusModel","ManyToManyNexusDescription","HasLogicalChildren","LogicalChildrenTypes","LogicalNieceTypes","HasLogicalChildrenDescription","HasLogicalNieces","HasLogicalNiecesDescription","UseModelAsType","CustomFunction","CustomFunctionDescription","AddNewSection","Sections","AddNewSectionDescription","SectionEdit","DefaultGraphTitle","DefaultSubGraphTitle","ClearPinned","Filter","NodeTypes","Concept","Model","ModelFilter","ScreenContainer","Screen","ScreenCollection","ScreenItem","Attribute","ChoiceList","Permission","PermissionDependency","ModelItemFilter","ValidationList","ValidationListItem","Validator","Executor","OptionList","OptionListItem","OptionCustom","ExtensionTypeList","ExtensionType","Function","Method","AfterEffect","Action","Parameter","FunctionOutput","Controller","Maestro","Services","ReferenceNode","ClassNode","ExcludeDefaultNode","[object Object]","GeneratedTypes","ChangeParameter","ChangeResponse","Constants","Executors","ModelReturn","ModelGet","ModelExceptions","StreamProcess","StreamProcessOrchestration","ValidationRule","IdentityManagement","RedQuickViews","STANDARD_TEST_USING","STANDARD_CONTROLLER_USING","GeneratedConstants","StreamTypes","FunctionName","ColorStates","NotSelectableNodeTypes","NodeTypeColors","FunctionGroups","External","Internal","Core","GroupProperties","IsExternal","FunctionGroup","Tests","Controllers","Validations","Parameters","Interface","NodeProperties","MatchReference","MatchManyReferenceParameter","EnumerationReference","AllowedExtensionValues","ServiceType","DisallowedExtensionValues","AllowedEnumValues","DisallowedEnumValues","ServiceTypeSettings","ValidatorModel","ExecutorAgent","ExecutorFunction","ExecutorModel","ExecutorModelOutput","ExecutorFunctionType","ValidatorFunction","FilterModel","FilterAgent","ValidatorAgent","UseExtension","UIUser","IsSharedResource","UIPermissions","IsOwned","UIText","UIChoice","UIChoiceType","UIChoiceNode","PermissionRequester","PermissionManyToMany","MatchIds","ConnectionExists","PermissionTarget","UIDependsOn","UseUIDependsOn","UIOptionType","UseCustomUIOption","UIOptionTypeCustom","UIOption","UseUIExtensionList","UIExtensionList","UIExtension","UIExtensionDefinition","MethodProps","FilterPropreties","UIValidationType","NODEType","ReferenceType","UIAttributeType","IsDefaultProperty","ManyToManyNexusType","ManyToManyNexusTypes","MethodType","UIModelType","UseScopeGraph","ScopeGraph","AfterMethod","AfterMethodSetup","Groups","GroupParent","CodePropertyType","FunctionType","MethodFunctionValidation","NotIncludedInController","PermissionImpl","ClassConstructionInformation","codeTypeWord","x","split","filter","y","indexOf","toLowerCase","join","NodePropertiesDirtyChain","chainProp","chainFunc","letters","allowedchars","MakeConstant","val","isNaN","toUpperCase","LinkEvents","LinkType","Choice","ExecutorItem","ExecutorProperty","Validation","ValidationItem","ValidatorProperty","ValidatorModelItem","Option","OptionItem","ExtensionList","Extension","LogicalChildren","LogicalNieces","ManyToManyLink","AppliedPermissionLink","RequestorPermissionLink","ManyToManyPermissionLink","ExtensionDependencyLink","FunctionOperator","FunctionLink","OnScreenLink","FunctionVariable","PropertyLink","ParentLink","FunctionConstraintLink","ErrorLink","RequiredClassLink","ModelTypeLink","AgentTypeLink","UserLink","MaestroLink","AttributeLink","PermissionFunction","Exist","PermissionPropertyDependency","PermissionDependencyProperty","PermissionDependencyPropertyManyToManyLink","PermissionPropertyDependencyManyToManyLink","LinkStyles","type","stroke","strokeWidth","LinkPropertyKeys","TYPE","CONSTRAINTS","VALID_CONSTRAINTS","FUNCTION_ID","LinkProperties","EnumerationLink","EnumerationReferenceLink","ConditionLink","PermissionFunctionLink","PermissionDependencyPropertyLink","PermissionPropertyDependencyLink","ExistLink","exist","ChoiceLink","PermissionLink","ValdationLink","ValidationLinkItem","ValidatorAgentLink","ValidatorModelLink","ValidatorModelItemLink","ValidatorPropertyLink","ExecutorLink","ExecutorLinkItem","ExecutorAgentLink","ExecutorModelLink","ExecutorModelItemLink","ExecutorPropertyLink","ValidatorFunctionLink","ExecutorFunctionLink","OptionLink","OptionItemLink","OptionCustomLink","DependsOnLink","ExtensionListLink","ExtensionLink","keys","map","propTypes","ValidationRules","CVV","AlphaNumericLike","AlphaNumericPuncLike","AlphaOnly","NumericOnly","Numeric","Empty","AlphaOnlyWithSpaces","NotEmpty","UrlEmpty","IsTrue","IsFalse","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","EqualTo","Any","Url","EmailEmpty","Credit","Email","ExpirationMonth","BeforeNow","Year","Debit","ExpirationYear","PastDate","ZipEmpty","Zip","SocialSecurity","ListOfGuids","OneOf","NodePropertyTypes","STRING","LISTOFSTRINGS","DATETIME","INT","FLOAT","DOUBLE","BOOLEAN","EMAIL","PHONENUMBER","NEW_LINE","ProgrammingLanguages","CSHARP","NodePropertyTypesByLanguage","Usings","COMMON_DATETIME_ARGS","nodeType","COMMON_STRING_ARGS","COMMON_LISTSTRING_ARGS","ValidationCases","types","vectors","content","length","cases","$true","e","_","long","$empty","interpolate","Math","floor","random","short","invalid","empty","invalid2","false","$false","true","self","b","$greater","notgreater","$less","notless","$equal_to","not_equal","id","ExecutorRules","ModelReference","Copy","AgentReference","ParentReference","AddModelReference","ExecutorUI","code","arguments","reference","method_reference","FilterRules","EqualsAgent","EqualsParent","EqualsTrue","EqualsFalse","EqualsModelRef","EqualsModelProperty","FilterUI","functionvariables","modelproperty","ValidationUI","Create_ManyToMany_Agent_Value__IListChild","Update_ManyToMany_Agent_Value__IListChild","Get_ManyToMany_Agent_Value__IListChild","Delete_ManyToMany_Agent_Value__IListChild","Create_Parent$Child_Agent_Value__IListChild","Update_Parent$Child_Agent_Value__IListChild","Get_Parent$Child_Agent_Value__IListChild","Delete_Parent$Child_Agent_Value__IListChild","Create_Object_Agent_Value__IListObject","Update_Object_Agent_Value__IListObject","Get_Object_Agent_Value__IListObject","Delete_Object_Agent_Value__IListObject","Delete_M2M_By_Reference","Create_Parent_Child_Agent_Value__Child","Update_Parent_Child_Agent_Value__Child","Get_Parent_Child_Agent_Value__Child","Delete_Parent_Child_Agent_Value__Child","Create_Object_Agent_Value__Object","Update_Object_Agent_Value__Object","Update_Object_Agent_Value__Object_With_Object","Get_Object_Agent_Value__Object","Delete_Object_Agent_Value__Object","Create_Object_Agent_Many_to_Many_CompositeInput__Object","Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET","Create_Object__Object","Update_Object__Object","Delete_Object__Object","Get_Object__Object","Can_Execute_Agent_Parent_In_Valid_List","FunctionTemplateKeys","ModelOutput","UpdateModel","ReferenceClass","ModelProperty","Bool","CanExecute","ModelDeterminingProperty","AgentDeterminingProperty","Parent","AgentInstance","Agent","AgentProperty","AgentType","User","ManyToManyModel","UserInstance","CompositeInput","CompositeInputProperty","FunctionConstraintKeys","IsTypeOf","IsChild","IsList","IsSingleLink","IsModel","IsFunction","IsProperty","IsEnumerable","IsInstanceVariable","IsInputVariable","COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD","nodeTypes","COMMON_CONSTRAINTS_AGENT_OBJECT_MANY_TO_MANY_COMPOSITEINPUT_METHOD","AfterEffectsTemplate","AFTER_EFFECTS","template","template_call","templateKeys","parent","update_with","stream_process_change_parameter","useNodes","useMethodTypes","useString","COMMON_CONSTRAINTS_OBJECT_METHOD","COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD","COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD","COMMON_OUTPUT","INTERNAL_TEMPLATE_REQUIREMENTS","METHODS","PARAMETERS","PARAMETERSCLASS","CHANGECLASS","RESPONSECLASS","STREAMPROCESS","DETERMINING_PROPERTY","PARENTS_ID_PROPERTY","MODEL","CONSTRUCTORS","TEMPLATE","INTERFACE","PARENT","PROPERTY","METHOD","CREATE","UPDATE","PROCESS","FUNCTION_REQUIREMENT_KEYS","CLASSES","COMMON_FUNCTION_REQUIREMENTS","fs","readFileSync","attachment_methods","propreties","ToInterface","HTTP_METHODS","POST","GET","DELETE","PATCH","COMMON_FUNCTION_TEMPLATE_KEYS","model","function_name","user","user_instance","agent","agent_type","MethodFunctions","title","interface","templates","constraints","output","isList","method","template_keys","params","test","controller","permission","parentGet","MethodTemplateKeys","ConditionTypes","InEnumerable","InExtension","ConditionCases","$matching","notmatching","ConditionTypeParameters","RefManyToMany","RefManyToManyProperty","Ref1","Ref2","Ref1UseId","Ref2UseId","Ref1Property","Ref2Property","ConditionTypeOptions","ConditionFunctionSetups","functions","bindTemplate","templateString","data","hasTemplate","RegExp","subregex","replace","createGraph","uuidv4","version","major","minor","build","workspace","Titles","path","namespace","groups","groupLib","groupsNodes","nodesGroups","childGroups","parentGroup","referenceNodes","nodeLib","nodes","nodeLinks","nodeConnections","linkLib","links","graphs","classNodes","functionNodes","updated","visibleNodes","appConfig","Logging","IncludeScopes","LogLevel","Default","System","Microsoft","AppSettings","Local-AuthorizationKey","Local-EndPointUrl","use_local","EndPointUrl","AuthorizationKey","DatabaseId","AssemblyPrefixes","Use-SingleCollection","storage-key","single-thread","ConfirmEmailController","ConfirmEmailAction","HomeAction","HomeController","ResetPasswordAction","ResetPasswordController","SecurityKey","Domain","TokenExpirationInMinutes","DomainPort","GraphKeys","NAMESPACE","SERVER_SIDE_SETUP","incrementBuild","graph","incrementMinor","getScopedGraph","options","scope","console","log","newGroup","callback","group","createGroup","result","addGroup","addLeaf","ops","leaf","leaves","unique","addGroupToGroup","groupId","removeGroupFromGroup","clearGroup","createValidator","properties","getMethodValidationType","methodValidation","methodType","methods","addMethodValidationForParamter","methodParam","methedParamProperty","res","createMethodValidation","methodValidationType","validators","createExecutor","addValidatator","validator","validatorArgs","removeValidator","getValidatorItem","item","getValidatorProperties","removeNode","existNodes","getNodesByLinkType","direction","TARGET","groupsContainingNode","removeLeaf","clearGroupDeep","success","v","removeNodeFromGroups","linksToRemove","source","target","getAllLinksWithNode","link","removeLink","clearLinks","en","addNode","node","DEFAULT_PROPERTIES","addNewNodeOfType","linkProperties","groupProperties","createNode","apply","JSON","parse","stringify","updateNode","rootNode","newLink","updateNodeProperty","prop","GetNodeProp","hasGroup","nodeGroupProp","getGroup","grandParent","gparentGroup","ancestores","getGroupAncenstors","anc","updateNodeGroup","GetNode","applyConstraints","functionType","functionConstraintObject","checkConstraints","functionConstraints","NodesByType","getNodesLinkedTo","validatorProperties","applyValidationNodeRules","currentGraph","Array","isArray","excludeRefs","RequiredClassName","cls","node_name","getNodesFunctionsConnected","constraintKey","_link","getNodeLinksWithKey","ftk","functionTemplateKey","constraintObj","valid","FunctionMeetsConstraint","meets","updateLinkProperty","applyFunctionConstraints","getNodeFunctionConstraintLinks","linkConstraint","findMatchingConstraints","hasMatchingConstraints","GetLinkProperty","nodeToRemove","linkId","GetTargetNode","warn","core_group","internal_group","external_group","existingGroups","GetGroupProperty","_group","updateGroupProperty","constraintKeys","constraint","new_node","core","internal","external","lcj","find","f","_targetNode","targetNode","targetNodeType","targetConstraint","linkWithConstraints","findLinkWithConstraint","linkWithConstraint","nodeToMatchWith","linkToParentParameter","getNodeLinkedTo","relationshipLink","findLink","nodeId","SOURCE","getNodeLinks","addLink","createLink","getNodeLinked","matchObject","obj1","obj2","GetLinkChainItem","state","chains","GetLinkChain","SetAffterEffectProperty","currentNode","afterMethod","afterEffectSetup","GetMethodNode","GetNodesLinkedTo","GetRootGraph","GetLinkChainFromGraph","GetCurrentGraph","ids","op","il","newids","newnodes","_id","link_constraints","matchOneWay","some","temp","noSameLink","oldLink","findLinkInstance","executeEvents","evt","on","args","function","EventFunctions","executeRemoveEvents","addEventFunction","func","isUIExtensionEnumerable","_node","config","isEnumeration","GetUIExentionEnumeration","list","GetUIExentionKeyField","keyField","removeValidatorItem","_validator","createEventProp","linkType","update_link","del_link","additionalChange","dirty","text","copyLink","GetNodesInsideGroup","seenGroups","GroupImportanceOrder","getDepth","VisualProcess","vgraph","collapsedNodes","filteredGraph","sort","a","push","FilterGraph","depth","h","SetVisible","collapsingGroups","t_importance","sortedGroups","nodeGroupKey","_type","smallestsNonCrossingGroups","cg","g_","disappearingNodes","dt","head","mostimportant","_nodes","dupLink","vgroups","groupIndex","oldgroup","newgroup","og","require","VISUAL","APPLICATION","GRAPHS","VISUAL_GRAPH","DASHBOARD_MENU","SELECTED_NODE_BB","SIDE_PANEL_EXTRA_WIDTH","NodeConstants","NodeAttributePropertyTypes","ROUTINGNUMBER","CURRENCY","CARMAKE","SOCIALSECURITY","PHONE","CARMODEL","CARYEAR","VIN","LONGSTRING","CREDITCARD","LENGTH","INCH","DIMENSION","MONEY","COUNTRY","DEBIT","MONTH","STATE","CHOICE","NUMBER","SLIDER","DATE","TIME","ACCOUNTNUMBER","ADDRESS","COLLECTION","OBJECT","RADIO","CHECKLIST","GEOLOCATION","YEAR","OptionsTypes","CHOICELIST","CAPITALIZE_FIRST_LETTER","UI_UPDATE","GetC","section","uiReducer","Visual","IsCurrentNodeA","Node","SELECTED_NODE","Use","GraphMethods","GetState","GetCodeName","GetModelPropertyChildren","GetModelPropertyNodes","GetLogicalChildren","GetNodeById","GetMethodDefinition","GetMethodFunctionType","_getState","GetMethodFunctionValidation","GetPermissionNode","refId","GetMethodNodeSelectOptions","methodProps","GetNodeCode","GetMethodPropNode","GetMethodOptions","VisualEq","Application","GetVisualGraph","SaveApplication","dispatch","UIC","Graphs","SaveGraph","visualGraph","Date","now","toggleVisual","getState","GUID","toString","setVisual","setApplication","SELECTED_LINK","HOVERED_LINK","SelectedNode","toggleDashboardMinMax","GetNodeTitle","GetNodes","CanChangeType","useRoot","GetNodeFromRoot","NodesConnectedTo","setState","GetGraphNode","GetFunctionType","methodNode","GetMethodNodeProp","GetMethodProps","GetMethodsProperties","GetMethodsProperty","GetMethodFilterParameters","GetMethod_Parameters","setup","_x","paramClass","paramName","GetMethodPermissionParameters","GetPermissionMethod","GetCurrentScopedGraph","CURRENT_GRAPH","GetSubGraphs","addNewSubGraph","rootGraph","newgraph","setRootGraph","setAppsettingsAssemblyPrefixes","prefixes","GRAPH_SCOPE","GetSelectedSubgraph","root","UPDATE_GRAPH_TITLE","NEW_NODE","REMOVE_NODE","NEW_LINK","CHANGE_NODE_TEXT","ADD_DEFAULT_PROPERTIES","CHANGE_NODE_PROPERTY","NEW_PROPERTY_NODE","NEW_PERMISSION_NODE","NEW_ATTRIBUTE_NODE","ADD_LINK_BETWEEN_NODES","NEW_CONDITION_NODE","REMOVE_LINK_BETWEEN_NODES","REMOVE_LINK","NEW_CHOICE_ITEM_NODE","NEW_PARAMETER_NODE","NEW_FUNCTION_OUTPUT_NODE","NEW_MODEL_ITEM_FILTER","NEW_AFTER_METHOD","NEW_VALIDATION_ITEM_NODE","NEW_CHOICE_TYPE","NEW_VALIDATION_TYPE","NEW_OPTION_ITEM_NODE","NEW_OPTION_NODE","NEW_CUSTOM_OPTION","NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE","NEW_EXTENSION_LIST_NODE","NEW_EXTENTION_NODE","ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY","APPLY_FUNCTION_CONSTRAINTS","ADD_NEW_REFERENCE_NODE","SET_DEPTH","graphOperation","operation","operations","propertyNodes","dp","classes_that_must_exist","function_node","functionConstraintRequiredClasses","j","constraintModelKey","constraint_nodes","nodes_one_step_down_the_line","cn","nextNodes","functionNode","class","matching_nodes","_cnode","error","scopedGraph","masterNode","refNode","referenceType","Colors","array","relativeCompliment","writable","configurable","othercollection","intersection","toNodeSelect","finalresult","removeIndices","indices","orderBy","collection","index","splice","start","stop","Float32Array","groupBy","subset","min","HandlerEvents","scaffold","message","reply","NAME_SPACE_TEMPLATE","NamespaceGenerator","space","usings","namespaceTemplate","imports","body","CONTROLLER_CLASS_TEMPLATE","CONTROLLER_CLASS_FUNCTION_TEMPLATE","CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE","ControllerGenerator","TAB","graphRoot","controllers","_controllerTemplateClass","_controllerTemplateFunction","_controllerTemplateFunctionGet","controllerTemplateClass","codeName","userNode","maestro_functions","maestro","tempfunctions","maestroName","maestro_function","ft","tempFunction","parameters","parameter_route","parameter_values","functionName","httpMethod","httpRoute","methodProperties","modelNode","compositeInput","output_type","http_route","http_method","maestro_interface","input_type","jNL","codeName#alllower","Generate","MODEL_TEMPLATE","MODEL_PROPERTY_TEMPLATE","MODEL_STATIC_TEMPLATES","MODEL_ATTRIBUTE_TEMPLATE","ModelGenerator","models","GenerateModel","templateSwapDictionary","base_model","account_enabling_func","attributes","connectedProperties","propertyTemplate","attributeTemplate","staticFunctionTemplate","validatorFunctions","tabs","staticFunctions","propNode","connectedAttributes","property_instance_template","np","propType","propSwapDictionary","property_type","attr","options_lists","options_list","ol","_ols","ReverseRules","_key","validations","vnode","vnodeItem","choice_name","validation_rules","validation_list","choice_type","attributeSwapDictionary","ui_title","singular","uiValidationType","staticDic","modelTemplate","EXTENSION_CLASS_TEMPLATE","EXTENSION_PROPERTY_TEMPLATE","EXTENSION_NEW_INSTANCE","EXTENSION_NEW_PROPERTY","EXTENSION_NEW_INSTANCE_LIST","EXTENSION_NEW_INSTANCE_LIST_ADD","EXTENSION_NEW_INSTANCE_DICTIONARY","EXTENSION_NEW_INSTANCE_DICTIONARY_ADD","EXTENSION_NEW_TEMPLATE_LIST","PROPERTY_TABS","ExtensionGenerator","extensionNode","def","Error","extensions","_extensionClassTemplate","_extensionPropertyTemplate","_extensionNewInstance","_extensionNewProperty","_extensionNewInstanceList","_extensionNewInstanceListAdd","_extensionNewInstanceDictionary","extension","extensionClassTemplate","statics","constants","uiExtensionDefinition","modelName","definition","extensionPropertyTemplate","instances","instance","item_index","NL","Tabs","dictionary","temp_instance","inst","addings","co","ConstantsDeclaration","TEST_CASE","TEST_CLASS","TEST_CASE_PROPERTY","PERMISSIONS_INTERFACE","PERMISSIONS_CASE_EXTENSION","PERMISSIONS_CASE_ENUMERATION","PERMISSIONS_CASE_INCLUDED_IN_LIST","PERMISSIONS_METHODS","PERMISSIONS_ARBITER_PROP","PERMISSIONS_IMPL","PERMISSIONS_INTERFACE_METHODS","MATCH_TO_MANY_REFERENCE_PARAMETER","MANY_TO_MANY_CONSTRUCTOR","MATCH_REFERENCE","PermissionGenerator","dNode","enu","ea","dpNode","enumerationNode","ext_allowed","enumerationName","ext_disallowed","createInstanceEnumerationListName","_createEnumerationInstanceList","constants_allowed","extensionName","_createExtensionInstanceList","dependingPermissionNodes","listOfCases","propertyNodeLinkedToByDependencyPermissionNode","propertyNode","agentLinkExists","extentionNode","useEnumeration","useExtension","tempBindingValues","parent_property","value_property","casename","instance_list","variable","permissionCaseEnumerationTemplate","enumInstance","createEnumerationInstanceList","allowed-values-list","permissionCaseExtensionTemplate","extensionInstance","createExtensionInstanceList","extension_propery_key","extension_value_property","appliedPermissionLinks","values","conditionNodes","conditionNode","conditionType","mmrp","neg","enumRef","enumerationNodeName","getReferencedNodeName","constList","getReference","disAllowedConstList","_createConstantList","enumNotAllowed","nameEnum","propertyEnum","ref","extensionsNotAllowed","_getNotAllowedExtectionConstances","nameExt","propertyExt","getReferencedValue","_manyToManyMatchCondition","_matchReferenceCondition","permissionsEnabledFor","conditions","ref1UseId","ref2UseId","data_property","relationship","sameInstance","parms","use_parent","arbiter","ine","ref1","createStringList","enumerate","GetTestExtensionNodeValues","enums","EnumerateCases","testCaseProperty","_enum","setup_cases","ispositive","which","is_model_parameter","_case","ref2Model","ref1Property","ref2Property","resultSuccess","pindex","manyToMany","many_to_many_register","many_to_many_constructor","testCase","ref1type","ref2type","ref2","logicalChildrenTypes","many_to_many","modelCodeName","permissionValueType","EnumeratePermissionCases","testIndex","set_agent_properties","set_model_properties","set_parent_properties","set_match_reference_properties","set_match_many_reference_properties","parent_setup","many_to_many_arbiter_constructor","parent_agent_are_the_same","permissions","agents","_testTemplate","_permissionInterface","_permissionImplementation","_permissionInterfaceMethods","_permissionMethods","_permissionArbiters","streamProcessChangeClassExtension","permissionInterface","testPermission","methodImplementations","methodInterfaces","testMethodPermisionCases","arbiters","matchingPermissionNodes","PermissionMatches","permissionCases","permissionCodeNames","matchingPermissionNode","GenerateCases","testTemp","GenerateTestCases","perms","permKey","parent_type","parm","permissionNode","permissionMethods","permissionInterfaceMethods","case_result","tname","iname","tests","VALIDATION_CLASS","VALIDATION_TEST","VALIDATION_PROPERTY","ValidationRuleGenerator","validation_test_vectors","vects","results","rest","validatorNode","validatorPs","vld","attribute_type_arguments","_ _","ext","enumeration","enumName","enumerateValidationTestVectors","vector","successCase","propertyInformation","properylines","vindex","projected_value","propline","set_properties","_validation_class","_validation_property","_validation_test","_testClass","funct","functNode","propertyValidationStatements","attribute_type","model_property","testProps","test_name","attribute_parameters","expected_value","templateRes","testTemplate","STREAM_PROCESS_ORCHESTRATION_TEMPLATE","STREAM_PROCESS_ORCHESTRATION_ROOT_TEMPLATE","STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS","STREAM_PROCESS_AGENT_CRUD_UPDATE","STREAM_PROCESS_AGENT_CRUD_CREATE","STREAM_PROCESS_AGENT_CRUD_DELETE","STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE","STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES","STREAM_METHOD_TESTS","CREATE_MODEL_TESTS","StreamProcessOrchestrationGenerator","_streamProcessFunctionTemplate","streamProcessFunctionTemplate","modelCode","model#allupper","model#lower","_streamAgentMethods","modelexecution","executors","executor","model_output","afterEffectMethods","ae_calls","ae_functions","afterEffectMethod","ae_type","ae_setup","key_val","startsWith","update_method","update_call","delete_method","delete_call","create_method","create_call","bind_params","model_output#lower","agent_type#lower","methods_interface","_ex","agentName","_stramMethodTests","_createModelTests","agent_process_orc_mocks","agentTypeNode","stream_process_orchestration_mocks","func_Cases","GetFunctionValidators","validatorCases","GenerateValidationCases","isModel","caseindex","v1","v2","agent_properties","model_properties","set_agent_propeties","test_result","_streamProcessTemplate","_streamProcessInterfaceTemplate","GenerateAgent","strappers","GenerateStreamOrchestrations","strapperInstances","GenerateStreamOrchestrationInstances","agent_type_methods","arbiters_strappers","arbiter_instances","GenerateProcessTests","streamOrchestration","agent_methods","GenerateAgentMethods","agent_methods_interface","GenerateAgentInterfaceMethods","GenerateStaticMethods","GenerateStrappers","GenerateStrappersInstances","static_methods","stream_process_tests","RETURN_GET_CLASS","FILTER_PROPERTY_FUNCTION_VALUE","FILTER_PROPERTY_FUNCTION_VALUE_EQUALS","ModelItemFilterGenerator","out_","filterModelParams","predicate_parameters","_return_get_class","modelitemfilter","itemFilter","filterModel","filterMethodParameters","funcs","filterPropFunction","filters","propName","_validatorProps","validatorValue","mNode","nodeProperty","filterPropFunctionValueEquals","code_name","MAESTRO_CLASS_TEMPLATE","MAESTRO_INTERFACE_TEMPLATE","MAESTRO_FUNCTION_TESTS","MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS","get_agent_manytomany_listchild_interface","MAESTRO_FUNCTION_GET_TESTS","MaestroGenerator","maestros","_maestroTemplateClass","_MAESTRO_INTERFACE_TEMPLATE","testFunctionTemplate","testFunctionGetSameParentTemplate","testFunctionGetTemplate","maestroTemplateClass","functionsInterface","permissionValidationCases","function_type","interfaceFunction","value_type","userTypeNode","parentNode","modelFilterNode","manyToManyNode","predicates","modelItemFilters","out_predicate","model_type","connect_type","manyNodes","manyNode","agentAndModelIsTheSame","bindOptions","composite-input","model_input","comma","filter_function","permission_function","EnumerateFunctionValidators","pvc","pvc2","agentProperties","findIndex","agentProps","itemProperties","itemProps","templ","set_many_to_many_properties","testname","injectedServices","injectedPermissionServices","set_permissions","permissions_properties","injected_services","ti","maestro_interface_template","STREAM_PROCESS_CHANGE_CLASS_EXTENSION","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS","ChangeParameterGenerator","afterEffects","_streamProcessChangeClassExtension","_streamProcessChangeClassConstructors","_streamProcessChangeClassConstrictorsTest","testClass","constructors","updates_with","afterEffect","spcp_template","model_update","change_type","streamProcessChangeClassConstructors","streamProcessChangeClassConstrictorsTest","change_param_name","CONSTANTS_CLASS","ConstantsGenerator","_constantsClass","constantsClass","consts","constants_type","STREAM_PROCESS_TEMPLATE","STREAM_PROCESS_TEMPLATE_TESTS","STREAM_PROCESS_FUNCTION_TEMPLATE","StreamProcessGenerator","staticMethods","_streamProcessTemplateTests","staticTests","GenerateStaticMethodTests","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST","STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED","ChangeResponseGenerator","_streamProcessChangeClassConstructorsTest","_streamProcessChangeClassConstructorsFailed","_test","model2","streamProcessChangeClassConstructorsFailed","streamProcessChangeClassConstructorsTest","parameterTemplate","arrange","changeParameterName","parameter_properties","act","parameters_property","assert","EXECUTOR_CLASS","EXECUTOR_INTERFACE","EXECUTOR_CREATE","EXECUTOR_CREATE_COMPOSITE_INPUT","EXECUTOR_ENTRY_METHODS","EXECUTOR_ENTRY_METHODS_INTERFACE","EXECUTOR_METHOD_CASE","EXECUTOR_UPDATE","EXECUTOR_GET","EXECUTOR_METHOD_COMPOSITE_INPUT","EXECUTOR_METHODS","EXECUTOR_METHODS_INTERFACE","ExecutorGenerator","executor_nodes","_executor_class","_executor_class_interface","_executor_methods","_executor_methods_composite_input","_executor_methods_interface","_executor_create","_executor_create_composite_input","_executor_update","_executor_get","_exe_method","_exe_method_interface","_exe_case","agentFunctionDic","agentFunctionInterfaceDic","agentModelDic","agmCombos","fun","agentId","executor_node","modelOutput","modelOutputNode","agentNode","functType","executorProperties","amdid","templateBindings","references","ref_key","execution_method","property_sets","agent_parameter","data_parameter","change_parameter","method_name","change","method_guts","templateResInterface","amd","_cases","func_name","static_methods_interface","staticentry","templateInterfaceRes","RETURN_GET_FUNCTION","ModelReturnGenerator","_return_get_methods","allfilters","filterNode","MODEL_GET_CLASS","MODEL_GET_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION","MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD","ModelGetGenerator","_get_class","_get_methods","_get_methods_many_to_many","_get_method_many_to_many_get_child","allmodels","item_property","childrenTypes","namesAreUnique","ct","query","Generator","enumerations","larg","streamTypes","functionsTypes","ModelExceptionGenerator","ipcRenderer","hub","send","mess","msg","Promise","resolve","then","fail","scaffoldProject","filesOnly","solutionName","code_types","code_type","generate","area","CodeTypeToArea","fileName","ensureDirectory","writeFileSync","generateFiles","server_side_setup","generateFolderStructure","dir","lib","relative","target_dir","directories","readdirSync","dirPath","existsSync","lstatSync","isDirectory","reldir","substr","file","mkdirSync","event","arg","remote","dialog","openRedQuickBuilderGraph","showOpenDialog","getCurrentWindow","RED_QUICK_FILE_EXT$","undefined","endsWith","RED_QUICK_FILE_EXT","readFile","encoding","err","opened_graph","newRedQuickBuilderGraph","saveGraphToFile","showSaveDialog","writeFile","setWorkingDirectory","updateWorkSpace","mapStateToProps","mapDispatchToProps","bindActionCreators","UIA","IPCEvents","RemoteActions","UIConnect","component","connect","String","padding","valueOf","abs","max","pad","charAt","unCamelCase","str","trim","dashboardlogo_jsx","className","Header","Component","_ref","header_jsx","dashboardnavbar_jsx","sidebartoggle_jsx","me","onClick","data-toggle","role","sidebartoggle_ref","NavBarMenu","navbarmenu_jsx","mainsidebar_jsx","style","height","SideBarHeader","sidebarheader_jsx","SideBarMenu","sidebarmenu_jsx","treeviewmenu_jsx","TreeViewMenu","active","open","display","icon","toggle","hideIcon","hideArrow","treeviewmenu_ref","right","Content","content_jsx","minHeight","SideBar","extraWidth","extraWide","sidebar_jsx","SideBarTabs","sidebartabs_jsx","SideBarTab","ariaExapanded","sidebartab_jsx","aria-expanded","ControlSideBarMenu","controlsidebarmenu_jsx","ControlSideBarMenuItem","description","ControlSideBarMenuHeader","TabPane","tabpane_jsx","FormControl","_class","sidebarform","external_react_default","createElement","_extends","textinput_jsx","TextInput","label","placeholder","disabled","inputgroup","onChange","textinput_ref","SelectInput","selectinput_jsx","onSelect","defaultSelectText","CheckBox","checkbox_jsx","checked","ServiceTypes","Facebook","Twitter","Google","ServiceTypeSetups","UseFacebook","FacebookAppId","FacebookAppSecret","UseMicrosoftAccount","MicrosoftClientId","MicrosoftClientSecret","UseGoogle","GoogleClientId","GoogleClientSecret","UseTwitter","TwitterConsumerKey","TwitterConsumerSecret","serviceType","propinputs","serviceTypeSetup","prop_setup","serviceactivitymenu_jsx","textinput_TextInput","checkbox_CheckBox","tabpane_TabPane","formcontrol_FormControl","selectinput_SelectInput","SideBarContent","sidebarcontent_jsx","NavBarButton","navbarbutton_jsx","Box","primary","backgroundColor","styleAll","maxheight","maxHeight","overflowY","background","box_jsx","footer","EnumerationEditMenu","constructor","super","enumerationeditmenu_jsx","onComplete","executoritem_jsx","validatorItem","function_variables","filterParameters","selectedValidator","_nodes_types","editlist","cursor","list_enums","list_key_field","old_one","executoritem_ref","getMethodReferenceItem","modelParameters","node_value","node_ref","adjacentNodeId","_ref2","_ref3","methodNodeProperties","_ref4","genericpropertymenu_jsx","genericpropertymenu_ref","genericProperty","methodParamSetup","_ui","ui","propertyExecutors","genericpropertymenu_ref2","_validates","visualKey","selectedValidations","selKInner","treeviewmenu_TreeViewMenu","onRemove","executoritem","validationUis","reverse","onAdd","position","mainsidebar_Header","sidebar_SideBar","sidebarmenu_SideBarMenu","genericpropertycontainer_jsx","top","sidebarcontent_SideBarContent","sidebarheader_SideBarHeader","subTitle","genericpropertycontainer_ref","ButtonList","buttonlist_jsx","items","isSelected","overflow","whiteSpace","textOverflow","conditionfiltermenu_jsx","methodDefinition","conditionfiltermenu_ref","methodFunctionType","methodFunctionValidation","param_list_key","param","param_property_list_key","conditionfiltermenu_ref2","buttonlist_ButtonList","methodValidationForParameter","conditionfiltermenu_ref3","methodProperty","getMethodValidationForParameter","updateValidation","genericpropertycontainer","genericpropertymenu","ApplicationMenu","noop","dispatch_dispatch","Dispatch","set","slice","concat","typename","T","copy","that","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","src_namespace","prefix","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","nextId","Local","remove","matcher","selector","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","__on","removeEventListener","capture","wrap","addEventListener","none","src_selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","sparse","update","EnterNode","datum","_next","_parent","appendChild","child","insertBefore","next","keyPrefix","bindIndex","enter","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","ascending","NaN","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_names","getAttribute","classedAdd","names","add","classedRemove","setAttribute","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","dispatchEvent","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","match","size","each","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","merge","selection","groups0","groups1","m0","m1","merges","group0","group1","order","compare","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","append","insert","before","typenames","on_parseTypenames","src_selection","DragEvent","subject","dx","dy","identifier","define","factory","extend","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","k","pow","darker","round","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","t2","t3","labConvert","Lab","Hcl","cos","sin","rgb2xyz","xyz2lab","lab","lab2xyz","xyz2rgb","hcl","atan2","sqrt","hclConvert","z","A","B","C","D","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v3","cosh","sinh","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","number","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","lastIndex","q","one","zero","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","scale","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","taskHead","taskTail","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","tween","tick","duration","ease","schedule_create","init","schedule","schedule_get","schedule_set","interrupt","tweenValue","transition","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","custom","polyIn","exponent","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","Transform","point","applyX","applyY","invert","location","invertX","invertY","rescaleX","domain","range","rescaleY","MIN_DIMENSIONAL_SIZE","textSize","mapScale","mapTranslate","draw","mouseDown","mouseUp","mouseMove","componentDidMount","mouseStartEvent","mouseMoved","mouseMoveEvt","clientX","clientY","componentWillUnmount","domObj","calculateNodeTextSize","div","visibility","maxWidth","getBoundingClientRect","bb","force","Cola","d3","width","margin","linkDistance","avoidOverlaps","handleDisconnected","outer","vis","redraw","wheelDelta","zoomFactor","panning","makeSVG","forEach","getLabelText","$_nodes","innerBounds","bounds","inflate","route","sourceIntersection","arrowStart","features","innerbit","titles","drag","$node","buildNode","selected","els","onLinkClick","onLinkHover","onNodeClick","selectedColor","degree","rise","Y","run","X","assign","$force","$color","cola","applyNodeVisualData","nn","componentWillReceiveProps","removedNodes","selectedNodes","nl","removedLinks","duplicateLink","selectedLinks","graph_groups","removedGroups","duplicateGroup","mindmapgroup","applyGroup","shouldComponentUpdate","mindmap_jsx","is_agent","is_parent","many_to_many_enabled","permission_nodes","modelactivitymenu_jsx","controlsidebarmenu_ControlSideBarMenuHeader","controlsidebarmenu_ControlSideBarMenu","controlsidebarmenu_ControlSideBarMenuItem","agent_nodes","function_types","funcKey","functionactivitymenu_jsx","show_dependent","use_model_as_type","property_nodes","propertyactivitymenu_jsx","localeCompare","getControls","aftereffectsactivitymenu_jsx","ae_nodes","controls","choice_nodes","validation_nodes","show_choice","show_validations","show_options","show_extenions","option_nodes","extension_nodes","attributeformcontrol_jsx","nodelist_jsx","nodelist_ref","permissionmenu_jsx","choiceactivitymenu_jsx","xi","TreeViewItemContainer","treeviewitemcontainer_jsx","input","modelfilteractivitymenu_jsx","agentinput","validationactivitymenu_jsx","validationitemactivitymenu_jsx","modelNodes","MethodF","validatoractivitymenu_jsx","optionactivitymenu_jsx","executorpropertymenu_jsx","ref2_properties","ref1_properties","model_options","getProperties","conditionactivitymenu_jsx","getMatchManyReferenceProperty","getEnumeration","getMatchReferenceProperty","nodeProperties","logicalChildren","allowed","disallowed","enumerationValues","matchRef","enumeration_nodes","refManyToMany_properties","refManyToManyExists","refManyToManyProperty","refManyToManyCondition","propertyType","mustBeModel","mustBeProperty","mustBeFunction","linkedNodes","parameteractivitymenu_jsx","show_custom","custom_options","optionitemformcontrol_jsx","executorpropertyactivitymenu_jsx","executorpropertyactivitymenu_ref","modelKey","nodeProp","executorpropertyactivitymenu_ref2","executorUI","executoractivitymenu_jsx","propertyValidations","validatorpropertymenu_jsx","validatoritem_jsx","validatoritem_ref","validatoritem_ref2","validatoritem_ref3","validatorpropertyactivitymenu_jsx","validatorpropertyactivitymenu_ref","validatoritem","valiationUi","extentiontypes","ExtensionListActivityMenu_jsx","targetNodeId","requestorNodeId","permissionsactivitymenu_jsx","referencable_nodes","referenceactivitymenu_jsx","goomenu_jsx","menuItems","mi","pointerEvents","visible","goomenu_ref","left","onToggle","href","htmlFor","goomenu_ref2","goomenu_ref3","goomenu_ref4","in","stdDeviation","in2","GooMenuSVG","_ref5","choicelistitemactivitymenu_jsx","modelfiltermenu_jsx","fprops","Slider","slider_jsx","parseFloat","DropDownMenu","menuType","ariaExpanded","usermode","usermenu","userbody","userheader","dropdown_jsx","dropdown_extends","headerText","header","TabContent","tabcontent_jsx","Tab","userfooter_jsx","TabContainer","tabcontainer_jsx","EnumeratedTable","dataFunc","rows","enumeratedtable_jsx","columns","inde","columnButtons","fx","headers","extensiondefinitionmenu_jsx","form","editKey","tabKey","addBtn","tab_key","btns","extensiondefinitionmenu_ref","extensiondefinitionmenu_ref2","extensiondefinitionmenu_ref3","userfooter_Tab","enumeratedtable_EnumeratedTable","extensiondefinitionmenu_ref4","obj","extensiondefinitionmenu_ref5","dependsOn","methodactivitymenu_jsx","functionObject","methodparams","methodpropertymenu_jsx","oldConnect","TreeViewItem","treeviewitem_jsx","MAESTRO_DETAILS_MENU","maestrodetailsmenu_jsx","othernodes","onode","treeviewitem_TreeViewItem","maestrodetailsmenu_ref","NODE_MANAGEMENT_MENU","NODE_MANAGEMENT","toFilterString","gi","groupKey","groupNodes","gn","gni","nodemanagement_jsx","commonactivitymenu_jsx","modelfilteritemactivitymenu_jsx","hasLogicalChildren","hasLogicalNieces","modelrelationshipmenu_jsx","depthchoice_jsx","box_Box","depthchoice_ref","maestroactivitymenu_jsx","inputVariable","CONTROLLER_DETAILS_MENU","controllerdetailsmenu_jsx","controllerdetailsmenu_ref","controlleractivitymenu_jsx","getTargetNodes","targetPropertyNodes","extensionNodeId","extensionValues","targetPropertyNode","permissionsdependentactivitymenu_jsx","DropDownMenuItem","dropdownmenuitem_jsx","fontSize","GRAPH_MENU","graphmenu_jsx","dropdown_DropDownMenu","dropdownmenuitem_DropDownMenuItem","SECTION_LIST","sections","subGraphs","sg","sectionlist_jsx","enumerationactivitymenu_jsx","enumerationeditmenu_EnumerationEditMenu","sectionedit_jsx","TopViewer","topviewer_jsx","docco","hljs","overflowX","hljs-comment","fontStyle","hljs-quote","hljs-keyword","hljs-selector-tag","hljs-literal","hljs-subst","hljs-number","hljs-string","hljs-doctag","hljs-selector-id","hljs-selector-class","hljs-section","hljs-type","hljs-params","hljs-title","fontWeight","hljs-tag","hljs-name","hljs-attribute","hljs-variable","hljs-template-variable","hljs-regexp","hljs-link","hljs-symbol","hljs-bullet","hljs-built_in","hljs-builtin-name","hljs-meta","hljs-deletion","hljs-addition","hljs-emphasis","hljs-strong","tab_jsx","tabs_jsx","MODEL_CODE","CODE_VIEW_TAB","codeString","generatedContent","viewTab","classKey","gcKey","codeview_jsx","topviewer_TopViewer","tabcontainer_TabContainer","tabs_Tabs","tab_Tab","tabcontent_TabContent","external_react_syntax_highlighter_default","language","SIDE_PANEL_OPEN","NODE_MENU","CONNECTING_NODE","LINK_DISTANCE","MAIN_CONTENT","MIND_MAP","CODE_VIEW","dashboard_jsx","goomenu_GooMenuSVG","dashboardlogo_Header","sidebartoggle","graphmenu","sectionedit","treeviewitemcontainer_TreeViewItemContainer","depthchoice","sectionlist","nodemanagement","maestrodetailsmenu","controllerdetailsmenu","choicelistitemactivitymenu","conditionactivitymenu","conditionfiltermenu","controlleractivitymenu","modelfilteritemactivitymenu","commonactivitymenu","functionactivitymenu","methodactivitymenu","attributeformcontrol","parameteractivitymenu","modelactivitymenu","validatoractivitymenu","executoractivitymenu","propertyactivitymenu","validationitemactivitymenu","choiceactivitymenu","maestroactivitymenu","validationactivitymenu","optionactivitymenu","components_ExtensionListActivityMenu","optionitemformcontrol","permissionsactivitymenu","extensiondefinitionmenu","modelfilteractivitymenu","permissionsdependentactivitymenu","aftereffectsactivitymenu","enumerationactivitymenu","serviceactivitymenu","validatorpropertymenu","referenceactivitymenu","executorpropertymenu","modelrelationshipmenu","methodpropertymenu","permissionmenu","modelfiltermenu","validatorpropertyactivitymenu","executorpropertyactivitymenu","SELECTED_TAB","DEFAULT_TAB","PARAMETER_TAB","SCOPE_TAB","minified","nodeSelectionMenuItems","selected_node_bb","menu_left","menu_top","main_content","hoveredLink","getLinkInstance","dashboard_ref","goomenu_NavBarButton","data-tid","header_Header","dashboard_ref2","dashboardnavbar_Header","dashboard_ref3","navbarmenu_NavBarMenu","navbarbutton_NavBarButton","dashboard_ref4","VC","confirm","dashboard_ref5","slider_Slider","_ref6","_ref7","_ref8","_ref9","_ref10","content_Content","codeview","mindmap_MindMap","boundingBox","selectedId","sidebartabs_SideBarTabs","sidebartab_SideBarTab","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","Root_jsx","Routes_jsx","App_App","external_react_router_","routes","HOME","Dashboard","INCREMENT_COUNTER","DECREMENT_COUNTER","increment","decrement","incrementIfOdd","counter","incrementAsync","action","newstate","updateUI","createRootReducer","history","combineReducers","router","connectRouter","createHashHistory","rootReducer","routerMiddleware","enhancer","applyMiddleware","thunk","selectedConfigureStore","configureStore","initialState","createStore","store","app_jsx","external_react_hot_loader_","external_react_redux_","connected_react_router_lib","Root_ref","getElementById","__RewireAPI__","__ResetDependency__","__set__","__Rewire__","__GetDependency__","__get__","_typeof","iterator","_createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_propTypes2","_reactRedux","_reactRouter","_actions","default","createConnectedRouter","structure","getIn","toJS","ConnectedRouter","_get__2","context","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","inTimeTravelling","unsubscribe","subscribe","_toJS","pathnameInStore","pathname","searchInStore","search","hashInStore","hash","_props$history$locati","pathnameInHistory","searchInHistory","hashInHistory","handleLocationChange","onLocationChanged","unlisten","listen","subClass","superClass","setPrototypeOf","_inherits","_get__","_props","contextTypes","shape","isRequired","oneOfType","basename","_getGlobalObject","global","theGlobalVariable","_RewireModuleId__","_getRewireModuleId__","globalVariable","__$$GLOBAL_REWIRE_NEXT_MODULE_ID__","_getRewireRegistry__","__$$GLOBAL_REWIRE_REGISTRY__","_getRewiredData__","registry","rewireData","INTENTIONAL_UNDEFINED","_RewireAPI__","variableName","Router","_get_original__","_set__","_reset__","_with__","rewiredVariableNames","previousValues","reset","catch","addPropertyToAPIObject","_typeOfOriginalExport","addNonEnumerableProperty","isExtensible","LOCATION_CHANGE","CALL_HISTORY_METHOD","payload","updateLocation","_len","go","goBack","goForward","routerActions","actions","newObj","_interopRequireWildcard","_ConnectedRouter2","_reducer2","_middleware2","_selectors2","createAll","wildcardImport","propertyName","reduce","filteredWildcardImport","_filterWildcardImport__","createMatchSelector","getAction","getLocation","_createAll2","_plain2","_action$payload","arr","arr2","from","_toConsumableArray","createConnectRouter","fromJS","initialRouterState","createSelectors","lastPathname","lastMatch","url","matchPath","_getIn","_getIn2","it","UNSCOPABLES","ArrayProto","isObject","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","O","aFunction","invoke","arraySlice","factories","fn","partArgs","bound","F","len","construct","__e","is","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","expProto","U","W","R","__g","dP","createDesc","un","cof","propertyIsEnumerable","setToStringTag","IteratorPrototype","NAME","LIBRARY","Iterators","$iterCreate","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","done","anObject","dPs","enumBugKeys","IE_PROTO","createDict","iframeDocument","iframe","src","contentWindow","write","lt","close","Properties","IE8_DOM_DEFINE","toPrimitive","Attributes","getKeys","has","toObject","ObjectProto","arrayIndexOf","$keys","bitmap","SRC","$toString","TPL","inspectSource","safe","isFunction","tag","stat","shared","uid","copyright","toInteger","ceil","IObject","defined","px","USE_SYMBOL","addToUnscopables","step","iterated","_t","_i","_k","Arguments","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","ReactPropTypesSecret","emptyFunction","shim","componentName","propFullName","secret","getShim","ReactPropTypes","bool","symbol","any","arrayOf","element","instanceOf","objectOf","oneOf","exact","checkPropTypes","PropTypes","super_","u","N","prefilter","normalize","lhs","rhs","w","groupCollapsed","groupEnd","logger","actionTransformer","titleFormatter","timestamp","toFixed","collapsed","level","diff","started","startedTime","prevState","took","nextState","L","M","stateTransformer","errorTransformer","predicate","logErrors","diffPredicate","getHours","getMinutes","getSeconds","getMilliseconds","DeepDiff","observableDiff","applyDiff","applyChange","revertChange","isConflict","noConflict","transformer","defaults","createLogger"],"mappings":"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","file":"renderer.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/index.js\");\n","// @flow\r\nimport * as React from 'react';\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return <React.Fragment>{children}</React.Fragment>;\r\n  }\r\n}\r\n","export const AddNode = 'Add Node';\r\nexport const RemoveNode = 'Remove Node';\r\nexport const RemoveValidation = 'Remove Validation';\r\nexport const RemoveExecution = 'Remove Execution';\r\nexport const SelectValidation = 'Select Validation';\r\nexport const SelectExecution = 'Select Execution';\r\nexport const SelectedValidations = 'Selected Validations';\r\nexport const Remove = 'Remove';\r\nexport const GraphOperations = 'Graph Operations';\r\nexport const Type = 'Type';\r\nexport const ServerSideSetup = 'Service Side Setup';\r\nexport const AddCondition = 'Add Condition';\r\nexport const GraphPropertiesMenu = 'Graph Properties';\r\nexport const NodeLabel = 'Node Label';\r\nexport const NodeType = 'Node Type';\r\nexport const Nodes = 'Nodes';\r\nexport const Models = 'Models';\r\nexport const OutputModel = 'Output Model';\r\nexport const ConditionType = 'Condition Type';\r\nexport const Reference = 'Reference';\r\nexport const Depth = 'Depth';\r\nexport const Label = 'Label';\r\nexport const New = 'New';\r\nexport const Controllers = 'Controllers';\r\nexport const ServiceActivity = 'Service Activity';\r\nexport const CodeTypes = 'Code Types';\r\nexport const Project = 'Project';\r\nexport const NameSpace = 'NameSpace';\r\nexport const Pinned = 'Pinned';\r\nexport const Collapsed = 'Collapsed';\r\nexport const GenericLink = 'General Link';\r\nexport const OnLoad = 'On Load';\r\nexport const ChildLink = 'Child link';\r\nexport const OnFailureLink = 'On failure result';\r\nexport const OnAction = 'On Action';\r\nexport const OnItemSelection = 'On Item Selection';\r\nexport const OnSuccessLink = 'On Succesful result';\r\nexport const SelectedExecutors = 'Selected Executions';\r\nexport const Agents = 'Agents';\r\nexport const SelectProperty = 'Select Property';\r\nexport const DisallowedEnums = 'Disallowed values';\r\nexport const FunctionVariables = 'Function Variables';\r\nexport const Methods = 'Methods';\r\nexport const AllowedEnums = 'Allowed values';\r\nexport const ModelActions = 'Model Actions';\r\nexport const SetDefaultPropertiesDescription = 'Set default properties, on the node';\r\nexport const SetDefaultProperties = 'Set default props';\r\nexport const AddProperty = 'Add Property';\r\nexport const UICheckBox = 'UI Checkbox';\r\nexport const PermissionsDependencyAttribute = 'Permission Dependency Attribute';\r\nexport const GeneratedConstants = 'Generated Constants';\r\nexport const KeyField = 'Key fields, are used as constants through out the app.'\r\nexport const GeneratedMethodsConstants = 'Generated Methods Constants';\r\nexport const TargetModel = 'Target Model';\r\nexport const UseEnumeration = 'Use Enumeration';\r\nexport const Enumeration = 'Enumeration';\r\nexport const PermissionDependsOnProperties = 'Properties permissions depend on.';\r\nexport const CodeUser = 'Code User';\r\nexport const AddPropertyDescription = 'Add a property to the model';\r\nexport const AddAttribute = 'Add Attribute';\r\nexport const AddAttributeDescription = 'Add an attribute to the property';\r\nexport const UIName = 'UI Name';\r\nexport const UINameDescription = 'The text that will be visible to the client.';\r\nexport const UISingular = 'UI Singular';\r\nexport const MatchIds = 'Match Ids';\r\nexport const ConnectionExists = 'Connection Exists';\r\nexport const Unknown = 'Unknown';\r\nexport const PropertyValueType = 'Property value type';\r\nexport const PropertyModelType = 'Property model type';\r\nexport const AddReference = 'Add reference node';\r\nexport const FunctionSetup = 'Function Setup';\r\nexport const IsReferenceList = 'Is Reference List';\r\nexport const AgentOperator = 'Agent Operator';\r\nexport const Enumerable = 'Enumerable';\r\nexport const Value = 'Value';\r\nexport const AppMenu = 'Application Menu';\r\nexport const CodeName = 'Code Name';\r\nexport const ValueName = 'Value Name';\r\nexport const AgentName = 'Agent Name';\r\nexport const FileMenu = 'File Menu';\r\nexport const Code = 'Code';\r\nexport const MainNavigation = 'Main Navigation';\r\nexport const AddParameter = 'Add parameter';\r\nexport const AddParameterDescription = 'Parameters are the required things need for the function to execute successfully';\r\nexport const AddFunctionOutput = 'Add Function Output';\r\nexport const Menu = 'Menu';\r\nexport const AddFunctionOutputDescription = 'The output of the function';\r\nexport const IsAgent = 'Agent';\r\nexport const IsOwnedByAgents = 'Is Owned By Agents';\r\nexport const IsOwnedByAgentsDescriptions = 'That would mean any agent/model could own this object.';\r\nexport const IsUser = 'User';\r\nexport const ParameterType = 'Parameter Type';\r\nexport const OwnedResources = 'Owned Resources';\r\nexport const AddAfterMethods = 'Add after method';\r\nexport const AddAfterMethodsDescription = 'Adding an after method node, will allow you to append functions to execute after.';\r\nexport const AddModelItemFilter = 'Add model item filter';\r\nexport const AddModelItemFilterDescription = 'Add model item filter for get functions'\r\nexport const PermissionType = 'Permissions';\r\nexport const PermissionAttributes = 'Permission Attributes';\r\nexport const OwnedResourcesDescription = 'Check if permissions are for resources owned by source model.'\r\nexport const PermissionActions = 'Permission Actions';\r\nexport const PermissionValueType = 'Permission Value Type';\r\nexport const Permissions = {\r\n    Create: 'Create',\r\n    Get: 'Read',\r\n    GetAll: 'Read All',\r\n    Getall: 'Read All',\r\n    Delete: 'Delete',\r\n    Getbyowner: 'Get by owner',\r\n    Update: 'Update'\r\n};\r\nexport const ChoiceTypes = 'Choice types';\r\nexport const ChoiceListActions = 'Choice Actions';\r\nexport const AddChoice = 'Add Choice';\r\nexport const AddChoiceDescription = 'Add choice type';\r\nexport const AddPermissionDescription = 'Permission nodes describe the ability of connected models on downstream models';\r\nexport const AddPermission = 'Add permission nodes'\r\nexport const AddChoiceItem = 'Add choice item';\r\nexport const AddChoiceItemDescription = 'Add a new choice item';\r\nexport const Select = 'Select';\r\nexport const Close = 'Close';\r\nexport const ValidationListActions = 'Validation Actions';\r\nexport const AddValidationItem = 'Add validation item';\r\nexport const AddValidationItemDescription = 'Add rule to validate user input.';\r\nexport const UseUIValidations = 'Use Validation';\r\nexport const AddValidationList = 'Add validation type';\r\nexport const AddValidationListDescription = 'Create a new shared validation list';\r\nexport const ValidationItemActions = 'Validation Item Actions';\r\nexport const Add = 'Add';\r\nexport const ValidationTypes = 'Validation Types';\r\nexport const ValidationType = 'Validation Type';\r\nexport const OptionListActions = 'Option Actions';\r\nexport const AddOptionItem = 'Add option';\r\nexport const AddOptionItemDescription = 'Add a new option item';\r\nexport const Name = 'Name';\r\nexport const OptionsType = 'Option Types';\r\nexport const UseCustomOption = 'Use custom option';\r\nexport const UseUIOptions = 'Use options';\r\nexport const AddOptionList = 'Create a new option list';\r\nexport const AddOptionListDescription = 'Add option list description';\r\nexport const DependentProperty = 'Depends on';\r\nexport const UseDependentProperty = 'Has dependent property';\r\nexport const UseUIExtensions = 'Use Extensions';\r\nexport const IncludedInList = 'Included in list';\r\nexport const IsEqualTo = 'Is equal';\r\nexport const UseEqualDescription = 'Use equivalancy';\r\nexport const UseEqual = 'Use equal';\r\nexport const IsEqualToDescription = 'If value is equal, it will pass';\r\nexport const ExcludedFromList = 'Excluded from list';\r\nexport const ExcludedFromListDescription = `The agent's id will have to be excluded from the list to be accepted`;\r\nexport const IncludedInListDescription = `The agent's id will have to be included in the list to be accepted.`\r\nexport const ExtensionTypes = 'Extension Types';\r\nexport const AddExtensionList = 'Create an extension list';\r\nexport const AddExtensionListDescription = 'Extension list customize dropdowns/lists.';\r\nexport const ExtensionListTypeActions = 'Extension List Actions';\r\nexport const AddExtensionNode = 'Add Extension';\r\nexport const ExtensionOptions = 'Extension(s)';\r\nexport const ExtensionDefinitionTypes = 'Extension Definition Types';\r\nexport const AddExtensionNodeDescription = 'Add extension node description';\r\nexport const ExtensionDefinition = 'Extension Definition';\r\n\r\nexport const Extensions = 'Extensions';\r\nexport const ExtensionDefinitionMenu = 'Define custom extensions';\r\nexport const ExtensionConfig = 'Extension Config';\r\nexport const DependsOn = 'Depends On';\r\nexport const UseId = 'Use Id';\r\nexport const Property = 'Property';\r\nexport const Condition = 'Condition';\r\nexport const DependsOnDescription = 'Defines if a the property associated with this extension is visually dependent on the value of another property on the same object.'\r\nexport const DependentPropertyDescription = 'The property that the current property will be associated.';\r\nexport const MatchingValue = 'Matching Value';\r\nexport const MatchingValueDescription = 'The value that the associated property will have to equal, to enable the current property';\r\n\r\nexport const PermissionImpl = 'Permission Implementation';\r\nexport const FunctionTypes = 'Function Types';\r\n\r\nexport const Create_Object_Agent_Many_to_Many_CompositeInput__Object = 'Create Object by Agent M2M with Composite Input';\r\n\r\nexport const Create_Object__Object = 'Create Object => Object';\r\n\r\nexport const Get_ManyToMany_Agent_Value__IListChild = 'Get Many to Many => IList<Child>';\r\nexport const Create_ManyToMany_Agent_Value__IListChild = 'Create Many to Many => IList<Child>';\r\nexport const Update_ManyToMany_Agent_Value__IListChild = 'Update Many to Many => IList<Child>';\r\nexport const Delete_ManyToMany_Agent_Value__IListChild = 'Delete Many to Many => IList<Child>';\r\n\r\nexport const Create_Parent$Child_Agent_Value__IListChild = 'Create Parent/Child => IList<Child>';\r\nexport const Update_Parent$Child_Agent_Value__IListChild = 'Update Parent/Child => IList<Child>';\r\nexport const Get_Parent$Child_Agent_Value__IListChild = 'Get Parent/Child => IList<Child>';\r\n\r\nexport const Create_Object_Agent_Value__IListObject = 'Create Object by Agent => IList<Object>';\r\nexport const Update_Object_Agent_Value__IListObject = 'Update Object by Agent => IList<Object>';\r\nexport const Delete_Object_Agent_Value__IListObject = 'Delete Object by Agent => IList<Object>';\r\nexport const Get_Object_Agent_Value__IListObject = 'Get Object by Agent => IList<Object>';\r\nexport const Can_Execute_Agent_Parent_In_Valid_List = 'Can Execute Agent Parent In Valid List';\r\n\r\nexport const Get_Object_Agent_Value__Object = 'Get Object by Agent';\r\nexport const Update_Object_Agent_Value__Object = 'Update Object by Agent';\r\nexport const Update_Object_Agent_Value__Object_With_Object = 'Update Object by Agent with object';\r\n\r\nexport const Functions = 'Functions';\r\nexport const AddFunction = 'Add function';\r\nexport const MaestroDetails = 'Maestro Details';\r\n\r\nexport const HttpMethod = 'Http Methods';\r\nexport const AddMaestros = 'Add Maestro';\r\nexport const HttpRoute = 'Relative Http Route';\r\nexport const NotIncludeInController = `Don't include in controller`;\r\nexport const Maestros = 'Maestros';\r\nexport const Save = 'Save';\r\nexport const Open = 'Open';\r\n\r\nexport const Validator = 'Validator';\r\nexport const PublishFiles = 'Publish Files';\r\nexport const Scaffold = 'Scaffold';\r\nexport const SetWorkingDirectory = 'Set Working Directory';\r\n\r\nexport const MindMap = 'Mind Map';\r\nexport const CodeView = 'Code View';\r\n\r\nexport const ParentTo = 'Parent to';\r\nexport const IsParent = 'Is parent';\r\nexport const IsCompositeInput = 'Is composite input';\r\nexport const UserModel = 'User Model';\r\n\r\nexport const ManyToManyNexus = 'Many to many';\r\nexport const ManyToManyExists = 'Many to many item must exists';\r\nexport const ManyToManyNexusModel = 'Many to Many model';\r\n\r\nexport const ManyToManyNexusDescription = 'This property will be a quick access for many to many relationships.';\r\n\r\n\r\nexport const HasLogicalChildren = 'Has logical children';\r\nexport const LogicalChildrenTypes = 'Logical children types';\r\nexport const LogicalNieceTypes = 'Logical niece types';\r\nexport const HasLogicalChildrenDescription = 'Children have references to this node, as some sort of logical parent.'\r\nexport const HasLogicalNieces = 'Has logical nieces';\r\nexport const HasLogicalNiecesDescription = 'Children have references to this node and others potentially as some sort of logical uncle/aunt. This is for many to many relationships.'\r\nexport const UseModelAsType = 'Use Model as Type';\r\nexport const CustomFunction = 'Custom Function';\r\nexport const CustomFunctionDescription = 'Function can be constructed in an internal graph.';\r\n\r\nexport const AddNewSection = 'Add New Section';\r\nexport const Sections = 'Sections';\r\nexport const AddNewSectionDescription = 'Adds a new section to the root graph.';\r\nexport const SectionEdit = 'Enter sub graph name';\r\nexport const DefaultGraphTitle = 'Red Quick Graph';\r\nexport const DefaultSubGraphTitle = 'Red Quick Sub Graph';\r\nexport const ClearPinned = 'Clear Pinned';\r\nexport const Filter = 'Filter';","import * as _ from '../utils/array';\r\n\r\nexport const NodeTypes = {\r\n    Concept: 'concept',\r\n    Model: 'model',\r\n    Property: 'model-property',\r\n    ModelFilter: 'model-filter',\r\n    ScreenContainer: 'screen-container',\r\n    Screen: 'screen',\r\n    ScreenCollection: 'screen-collection',\r\n    ScreenItem: 'screen-item',\r\n    Attribute: 'attribute-property',\r\n    ChoiceList: 'choice-list',\r\n    Permission: 'permission',\r\n    PermissionDependency: 'permission-dependency',\r\n    Condition: 'condition',\r\n    ModelItemFilter: \"model-item-filter\",\r\n    Enumeration: 'enumeration', //Basically a list of const string.\r\n    // ChoiceListItem: 'choice-list-item',\r\n    ValidationList: 'validation-list',\r\n    ValidationListItem: 'validation-list-item',\r\n    Validator: 'validator',\r\n    Executor: 'executor', // performs the final acts or data manipulation.\r\n    OptionList: 'option-list',\r\n    OptionListItem: 'option-list-item',\r\n    OptionCustom: 'option-custom',\r\n    ExtensionTypeList: 'extension-type-list',\r\n    ExtensionType: 'extension-type',\r\n    Function: 'function',\r\n    Method: 'method',//NGRX like effect\r\n    AfterEffect: 'after-effect', // executes after a method finishes successfully.\r\n    Action: 'action', //NGRX like action\r\n    Parameter: 'parameter',\r\n    FunctionOutput: 'function-output',\r\n    Controller: 'controller',\r\n    Maestro: 'maestro',\r\n    Services: 'services',\r\n    ReferenceNode: 'referenceNode', //Is a standing for a node that is at a higher level,\r\n    ClassNode: 'class-node'\r\n}\r\nexport const ExcludeDefaultNode = {\r\n    [NodeTypes.Condition]: true,\r\n    [NodeTypes.ModelItemFilter]: true\r\n};\r\nexport const GeneratedTypes = {\r\n    ChangeParameter: 'change-parameter',\r\n    ChangeResponse: 'change-response',\r\n    Constants: 'constants',\r\n    Permissions: 'permissions-generated',\r\n    Executors: 'executors',\r\n    ModelItemFilter: 'model-item-filter',\r\n    ModelReturn: 'model-return',\r\n    ModelGet: 'model-get',\r\n    ModelExceptions: 'model-exceptions',\r\n    StreamProcess: 'stream-process',\r\n    StreamProcessOrchestration: 'stream-process-orchestration',\r\n    ValidationRule: 'validation-rule'\r\n}\r\nexport const IdentityManagement = {\r\n    RedQuickViews: 'RedQuickViews'\r\n}\r\nexport const STANDARD_TEST_USING = [\r\n    'Microsoft.VisualStudio.TestTools.UnitTesting',\r\n    'RedQuick.Storage',\r\n    'RedQuickCore.Worker',\r\n    'Moq',\r\n    'Autofac',\r\n    'RedQuickCore.Worker.Hosts',\r\n    'RedQuick.Configuration',\r\n    'Microsoft.Extensions.Configuration.Json'\r\n]\r\nexport const STANDARD_CONTROLLER_USING = [\r\n    'RedQuick.Data',\r\n    'RedQuick.Attributes',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Validation',\r\n    'RedQuickCore.Validation.Rules',\r\n    'RedQuick.Interfaces.Arbiter',\r\n    'RedQuick.Configuration',\r\n    'RedQuick.Util',\r\n    'RedQuick.Interfaces',\r\n    'RedQuick.Interfaces.Data',\r\n    'RedQuick.UI',\r\n    'System',\r\n    'System.Collections',\r\n    'System.Collections.Generic',\r\n    'System.Linq',\r\n    'System.Net',\r\n    'System.Net.Http',\r\n    'System.Threading.Tasks'\r\n]\r\nexport const GeneratedConstants = {\r\n    Methods: 'Methods',\r\n    StreamTypes: 'StreamType',\r\n    FunctionName: 'FunctionName'\r\n}\r\nexport const GeneratedTypesMatch = {\r\n    [GeneratedTypes.ChangeParameter]: NodeTypes.Model\r\n}\r\nexport const ColorStates = {\r\n    Error: 'Error'\r\n}\r\nexport const NotSelectableNodeTypes = {\r\n    [NodeTypes.ReferenceNode]: true,\r\n    [NodeTypes.PermissionDependency]: true,\r\n    [NodeTypes.Condition]: true\r\n}\r\nexport const NodeTypeColors = {\r\n    [ColorStates.Error]: '#FF0000',\r\n    [NodeTypes.Concept]: '#DD4B39',\r\n    [NodeTypes.ModelItemFilter]: '#4ECDC4',\r\n    [NodeTypes.Model]: '#713E5A',\r\n    [NodeTypes.Property]: '#484349',\r\n    [NodeTypes.Screen]: '#3A405A',\r\n    [NodeTypes.Attribute]: '#414770',\r\n    [NodeTypes.ChoiceList]: '#457B9D',\r\n    [NodeTypes.ValidationList]: '#A8DADC',\r\n    [NodeTypes.ValidationListItem]: '#EA526F',\r\n    [NodeTypes.OptionList]: '#2EC4B6',\r\n    [NodeTypes.OptionListItem]: '#856A5D',\r\n    [NodeTypes.OptionCustom]: '#403F4C',\r\n    [NodeTypes.ExtensionTypeList]: '#2C2B3C',\r\n    [NodeTypes.ExtensionType]: '#1B2432',\r\n    [NodeTypes.Method]: '#FE5F55',\r\n    [NodeTypes.Permission]: '#383F51',\r\n    [NodeTypes.Function]: '#553D36',\r\n    [NodeTypes.Parameter]: '#684A52',\r\n    [NodeTypes.FunctionOutput]: '#857885',\r\n    [NodeTypes.Services]: '#59FFA0',\r\n    [NodeTypes.ClassNode]: '#C3BAAA',\r\n    [NodeTypes.Maestro]: '#780116',\r\n    [NodeTypes.Condition]: '#CAFE48',\r\n    [NodeTypes.Validator]: '#151522',\r\n    [NodeTypes.ModelFilter]: '#312313',\r\n    [NodeTypes.Executor]: '#2176FF',\r\n    [NodeTypes.ReferenceNode]: '#F7B538',\r\n    [NodeTypes.ScreenCollection]: '#A9DBB8',\r\n    [NodeTypes.ScreenItem]: '#020887',\r\n    [NodeTypes.ScreenContainer]: '#60B2E5',\r\n\r\n}\r\n\r\nexport const FunctionGroups = {\r\n    External: 'external',\r\n    Internal: 'internal',\r\n    Core: 'core'\r\n}\r\nexport const GroupProperties = {\r\n    IsExternal: 'isExternal',\r\n    FunctionGroup: 'FunctionGroup'\r\n}\r\nexport const NameSpace = {\r\n    Model: '.Models',\r\n    StreamProcess: '.ActionStream',\r\n    Executors: '.Executors',\r\n    Tests: '.Tests',\r\n    Extensions: '.Extensions',\r\n    Controllers: '.Controllers',\r\n    Validations: '.Validations',\r\n    Constants: '.Constants',\r\n    Permissions: '.Permissions',\r\n    Parameters: '.Parameters',\r\n    Interface: '.Interface'\r\n}\r\n\r\nexport const NodeProperties = {\r\n    Enumeration: 'Enumeration',\r\n    ConditionType: 'ConditionType',\r\n    MatchReference: 'MatchReference',\r\n    MatchManyReferenceParameter: 'MatchManyReferenceParameter',\r\n    EnumerationReference: 'EnumerationReference',\r\n    AllowedExtensionValues: 'AllowedExtensionValues',\r\n    ServiceType: 'ServiceType',\r\n    DisallowedExtensionValues: 'DisallowedExtensionValues',\r\n    AllowedEnumValues: 'AllowedEnumerationValue',\r\n    DisallowedEnumValues: 'DisallowedEnumValues',\r\n    Condition: 'Condition',\r\n    ServiceTypeSettings: 'ServiceTypeSettings',\r\n    ValidatorModel: 'ValidatorModel',\r\n    ExecutorAgent: 'ExecutorAgent',\r\n    ExecutorFunction: 'ExecutorFunction',\r\n    ExecutorModel: 'ExecutorModel',\r\n    ExecutorModelOutput: 'ExecutorModelOutput',\r\n    ExecutorFunctionType: 'ExecutorFunctionType',\r\n    ValidatorFunction: 'ValidatorFunction',\r\n    UseEnumeration: 'UseEnumeration',\r\n    NameSpace: 'namespace',\r\n    FilterModel: 'filtermodel',\r\n    FilterAgent: 'filteragent',\r\n    Validator: 'Validator',\r\n    ModelItemFilter: 'ModelItemFilter',\r\n    Executor: 'Executor',\r\n    ValidatorAgent: 'ValidatorAgent',\r\n    Collapsed: 'collapsed',\r\n    UseExtension: 'usextension',\r\n    IncludedInList: 'includedInList',\r\n    Pinned: 'Pinned',\r\n    ExcludedFromList: 'excludedInList',\r\n    UseEqual: \"UseEqual\",\r\n    IsEqualTo: 'IsEqualTo',\r\n    CodeUser: 'codeUser',\r\n    HttpRoute: 'HttpRoute',\r\n    HttpMethod: 'HttpMethod',\r\n    IsAgent: 'isAgent',\r\n    IsCompositeInput: 'IsCompositeInput',\r\n    IsParent: 'isParent', //This is a program setting. Just for allowing us to hide and show the model picker.\r\n    IsUser: 'IsUser', //User is the object directly associated with a IdentityProvider.\r\n    IsOwnedByAgents: 'IsOwnedByAgents',\r\n    UIUser: 'uiUser',\r\n    IsSharedResource: 'isSharedResource', // Not sure if this helps anything.\r\n    UIPermissions: 'uiPermissions',\r\n    IsOwned: 'isOwned',\r\n    UIName: 'uiName', // The name used in the ui.\r\n\r\n    UIText: 'text',\r\n\r\n    IsReferenceList: 'isReferenceList',\r\n\r\n    UISingular: 'uiSingular',\r\n    UIChoice: 'uiChoice',\r\n    UIChoiceType: 'uiChoiceType',\r\n    UIChoiceNode: 'uiChoiceNode', //A node that the \"parameter\" node points to.\r\n    PermissionRequester: 'permissions-requester',// The agent that is requesting permission to do something\r\n    PermissionManyToMany: 'permissions-many-to-many',\r\n    MatchIds: 'matchs-ids',\r\n    ConnectionExists: \"connection-exists\",\r\n    PermissionTarget: 'permissions-target',\r\n    // Property has a dependent property\r\n    UIDependsOn: 'uiDependsOn',\r\n    UseUIDependsOn: 'UseuiDependsOn',\r\n    UseUIOptions: 'UseuiOptions',\r\n    UIOptionType: 'uiOptionType',\r\n\r\n    //Use a custom option\r\n    UseCustomUIOption: 'useCustomUIOption',\r\n    UIOptionTypeCustom: 'uiOptionTypeCustom',\r\n    //An option\r\n    UIOption: 'uiOption',\r\n    //Use Extensions\r\n    UseUIExtensionList: 'UseuiExtensionList',\r\n    UIExtensionList: 'uiExtensionList',\r\n    UIExtension: 'uiExtension',\r\n    UIExtensionDefinition: 'uiExtensionDefinition',\r\n    MethodProps: 'methodProperties',\r\n    FilterPropreties: 'filterproperties',\r\n    UIValidationType: 'uiValidationType',\r\n    UseUIValidations: 'UseuiValidations',\r\n    NODEType: 'nodeType',\r\n    ReferenceType: 'referenceType', //Reference nodes will have this type.\r\n\r\n    UIAttributeType: 'uiAttributeType',\r\n    PermissionValueType: 'PermissionValueType',\r\n    UseModelAsType: 'useModelAsType',\r\n\r\n    IsDefaultProperty: 'isDefaultProperty',\r\n\r\n    HasLogicalChildren: 'hasLogicalChildren',\r\n    LogicalChildrenTypes: 'logicalChildrenTypes',\r\n    HasLogicalNieces: \"hasLogicalNieces\",\r\n    LogicalNieceTypes: 'logicalNieceTypes',\r\n\r\n    ManyToManyNexus: 'manyToManyNexux',\r\n    ManyToManyNexusType: 'manyToManyNexusType',\r\n    ManyToManyNexusTypes: 'manyToManyNexusTypes',\r\n\r\n    MethodType: \"MethodType\",\r\n    UIModelType: 'uiModelType',\r\n\r\n    UseScopeGraph: 'UseScopeGraph',\r\n    ScopeGraph: 'scopedGraph',\r\n\r\n    AfterMethod: 'after-method',\r\n    AfterMethodSetup: 'after-method-setup',\r\n\r\n    //The name used for code.\r\n    Groups: 'groups',\r\n    GroupParent: 'groupParent',\r\n    CodeName: 'codeName',\r\n    ValueName: 'valueName',//The name of the instance variable to be used \r\n    AgentName: 'agentName',//The name of the instance variable to be used \r\n    CodePropertyType: 'codeProperty',\r\n    FunctionType: 'functionType',\r\n    MethodFunctionValidation: 'method-function-validation',\r\n    NotIncludedInController: 'not-included-in-controller',\r\n    PermissionImpl: 'permission-implementation',\r\n    ClassConstructionInformation: 'ClassConstructionInformation'\r\n}\r\n\r\nfunction codeTypeWord(x) {\r\n    if (typeof x === 'string') {\r\n        return x.split('').filter(y => 'abcdefghijklmnopqrstuvwxyzzz1234567890_'.indexOf(y.toLowerCase()) !== -1).join('');\r\n    }\r\n    return x;\r\n}\r\n\r\nexport const DIRTY_PROP_EXT = '$ _dirty_ $';\r\nexport const NodePropertiesDirtyChain = {\r\n    [NodeProperties.ServiceType]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.UIText,\r\n        chainFunc: codeTypeWord\r\n    }],\r\n    [NodeProperties.UIText]: [{\r\n        chainProp: NodeProperties.CodeName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.AgentName,\r\n        chainFunc: codeTypeWord\r\n    }, {\r\n        chainProp: NodeProperties.ValueName,\r\n        chainFunc: codeTypeWord,\r\n    }, {\r\n        chainProp: NodeProperties.HttpRoute,\r\n        chainFunc: (x) => {\r\n            if (typeof x === 'string') {\r\n                return x.split(' ').join('/').toLowerCase();\r\n            }\r\n            return x;\r\n        }\r\n    }, {\r\n        chainProp: NodeProperties.UIName,\r\n        chainFunc: (x) => {\r\n            return x;\r\n        }\r\n    }]\r\n}\r\nconst letters = 'abcdefghijklmnopqrstuvwxyz';\r\nconst alphanumerics = letters + '0123456789';\r\nconst allowedchars = alphanumerics + ' ';\r\nexport function MakeConstant(val) {\r\n    if (val) {\r\n        if (!isNaN(val)) {\r\n            return `\"${val}\"`;\r\n        }\r\n        val = `${val}`;\r\n        val = val.split('').filter(x => allowedchars.indexOf(x.toLowerCase()) !== -1).join('');\r\n        if (letters.indexOf(val[0].toLowerCase()) === -1) {\r\n            val = '_' + val;\r\n        }\r\n        return val.split(' ').join('_').toUpperCase();\r\n    }\r\n    throw 'needs to have value';\r\n}\r\n\r\nexport function ConstantsDeclaration(options) {\r\n    var { name, value } = options;\r\n\r\n    return `public const string ${name} = ${value};`;\r\n}\r\n\r\nexport function CreateStringList(options) {\r\n    var { name, list, instance } = options;\r\n    return `${instance ? '' : 'public'} IList<string> ${name} = new List<string> {\r\n        ${list}\r\n    }`\r\n}\r\nexport const LinkEvents = {\r\n    Remove: 'remove'\r\n}\r\nexport const LinkType = {\r\n    Choice: 'choice',\r\n\r\n    Executor: 'executor',\r\n    ExecutorItem: 'executor-item',\r\n    ExecutorProperty: 'executor-property',\r\n    ExecutorModel: 'executor-model',\r\n\r\n    Condition: 'condtion',\r\n    ModelItemFilter: 'model-item-filter',\r\n\r\n    AfterMethod: 'after-method',\r\n\r\n    Validation: 'validation',\r\n    ValidationItem: 'validation-item',\r\n    Validator: 'validator',\r\n    ValidatorProperty: 'validator-property',\r\n    ValidatorModel: 'validator-model',\r\n\r\n    ExecutorFunction: 'executor-function',\r\n    ValidatorFunction: 'validator-function',\r\n    ValidatorModelItem: 'validator-model-item',\r\n    ValidatorAgent: 'validator-agent',\r\n    Option: 'option',\r\n    OptionItem: 'option-item',\r\n    OptionCustom: 'option-custom',\r\n    DependsOn: 'depends-on',\r\n    ExtensionList: 'extension-list',\r\n    Extension: 'extension',\r\n    Enumeration: 'enumeration',\r\n    EnumerationReference: 'enumeration-reference',\r\n    LogicalChildren: 'logical-children',\r\n    LogicalNieces: 'logical-nieces',\r\n    ManyToManyLink: \"ManyToManyLink\",\r\n    Permission: 'permission',\r\n    AppliedPermissionLink: 'applied-permission',\r\n    RequestorPermissionLink: 'request-permission-link',//the agent/node that is requesting permissions \r\n    ManyToManyPermissionLink: 'many-to-many-permission-link',\r\n    ExtensionDependencyLink: 'extension-dependency-link',\r\n    FunctionOperator: 'function-operator',\r\n    FunctionLink: 'function-link',\r\n    OnScreenLink: 'screen-link',\r\n    OnSuccessLink: 'on-success-link',\r\n    OnFailureLink: 'on-failure-link',\r\n    OnAction: 'on-action',\r\n    ChildLink: 'child-link',//describing a link between screens\r\n    OnItemSelection: 'on-item-selection',\r\n    FunctionVariable: 'function-variable',\r\n    PropertyLink: 'property-link',\r\n    ParentLink: 'parent-link',\r\n    FunctionConstraintLink: 'function-constraint-link',\r\n    ErrorLink: 'error-link',\r\n    RequiredClassLink: 'required-class-link',\r\n    ModelTypeLink: 'model-type-link',\r\n    AgentTypeLink: 'agent-type-link',\r\n    UserLink: 'user-link', // A link between a user and a personal ([Customer, Manager, Hero])\r\n    MaestroLink: 'maestro-link',\r\n    AttributeLink: 'attribute-link',\r\n    PermissionFunction: 'permission-function',\r\n    Exist: 'exist', //A node that points with this link type, requires that the node exists, if it doesn't the link and the other node should dissapear.\r\n    PermissionPropertyDependency: 'permission-property-dependency', //There is a link between a permision and a property.\r\n    PermissionDependencyProperty: 'permission-dependency-property', //There is a link bewteen a property and a dependency\r\n    PermissionDependencyPropertyManyToManyLink: 'permission-dependency-property-many-to-many', //There is a link between a property and a dependency in a many to many situation.\r\n    PermissionPropertyDependencyManyToManyLink: 'permission-property-dependency-many-to-many'//There is a link between a permision and a property in a many to many situnation.\r\n}\r\nconst VIKTIG_LINKS = 5;\r\nexport const LinkStyles = {\r\n    [LinkType.FunctionLink]: {\r\n        type: LinkType.FunctionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.ErrorLink]: {\r\n        type: LinkType.ErrorLink,\r\n        stroke: NodeTypeColors[ColorStates.Error]\r\n    },\r\n    [LinkType.OnScreenLink]: {\r\n        type: LinkType.OnScreenLink,\r\n        stroke: '#E1CE7A',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnSuccessLink]: {\r\n        type: LinkType.OnSuccessLink,\r\n        stroke: '#A23B72',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnFailureLink]: {\r\n        type: LinkType.OnFailureLink,\r\n        stroke: '#3B1F2B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnItemSelection]: {\r\n        type: LinkType.OnItemSelection,\r\n        stroke: '#2E86AB',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.OnAction]: {\r\n        type: LinkType.OnAction,\r\n        stroke: '#A3320B',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.ChildLink]: {\r\n        type: LinkType.ChildLink,\r\n        stroke: '#47A025',\r\n        strokeWidth: VIKTIG_LINKS\r\n    },\r\n    [LinkType.FunctionConstraintLink]: {\r\n        type: LinkType.FunctionConstraintLink,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.FunctionOperator]: {\r\n        type: LinkType.FunctionOperator,\r\n        stroke: NodeTypeColors[NodeTypes.Function]\r\n    },\r\n    [LinkType.PropertyLink]: {\r\n        type: LinkType.PropertyLink,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.Choice]: {\r\n        type: LinkType.Choice,\r\n        stroke: NodeTypeColors[NodeTypes.ChoiceList]\r\n    },\r\n    [LinkType.Permission]: {\r\n        type: LinkType.Permission,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.AppliedPermissionLink]: {\r\n        type: LinkType.AppliedPermissionLink,\r\n        stroke: NodeTypeColors[NodeTypes.Permission]\r\n    },\r\n    [LinkType.Validation]: {\r\n        type: LinkType.Validation,\r\n        stroke: NodeTypeColors[NodeTypes.ValidationList]\r\n    },\r\n    [LinkType.Validator]: {\r\n        type: LinkType.Validator,\r\n        stroke: NodeTypeColors[NodeTypes.Validator]\r\n    },\r\n    [LinkType.Option]: {\r\n        type: LinkType.Option,\r\n        stroke: NodeTypeColors[NodeTypes.OptionList]\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    [LinkType.OptionCustom]: {\r\n        type: LinkType.OptionCustom,\r\n        stroke: NodeTypeColors[NodeTypes.OptionCustom]\r\n    },\r\n    [LinkType.DependsOn]: {\r\n        type: LinkType.DependsOn,\r\n        stroke: NodeTypeColors[NodeTypes.Property]\r\n    },\r\n    [LinkType.ExtensionList]: {\r\n        type: LinkType.ExtensionList,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    },\r\n    [LinkType.Extension]: {\r\n        type: LinkType.Extension,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionType]\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    [LinkType.ExtensionDependencyLink]: {\r\n        type: LinkType.ExtensionDependencyLink,\r\n        stroke: NodeTypeColors[NodeTypes.ExtensionTypeList]\r\n    }\r\n}\r\n\r\nexport const LinkPropertyKeys = {\r\n    TYPE: 'type',\r\n    CONSTRAINTS: 'constraints',\r\n    VALID_CONSTRAINTS: 'valid-constraints',\r\n    FUNCTION_ID: 'function-id'\r\n}\r\n\r\nexport const LinkProperties = {\r\n    EnumerationLink: {\r\n        type: LinkType.Enumeration\r\n    },\r\n    ModelItemFilter: {\r\n        type: LinkType.ModelItemFilter\r\n    },\r\n    AfterMethod: {\r\n        type: LinkType.AfterMethod\r\n    },\r\n    EnumerationReferenceLink: {\r\n        type: LinkType.EnumerationReference\r\n    },\r\n    ConditionLink: {\r\n        type: LinkType.Condition\r\n    },\r\n    LogicalChildren: {\r\n        type: LinkType.LogicalChildren\r\n    },\r\n    LogicalNieces: {\r\n        type: LinkType.LogicalNieces\r\n    },\r\n    ManyToManyLink: {\r\n        type: LinkType.ManyToManyLink\r\n    },\r\n    PermissionFunctionLink: {\r\n        type: LinkType.PermissionFunction\r\n    },\r\n    FunctionVariable: {\r\n        type: LinkType.FunctionVariable,\r\n        [LinkPropertyKeys.FUNCTION_ID]: null\r\n    },\r\n    PermissionDependencyPropertyLink: {\r\n        type: LinkType.PermissionDependencyProperty\r\n    },\r\n    PermissionDependencyPropertyManyToManyLink: {\r\n        type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n    },\r\n    PermissionPropertyDependencyLink: {\r\n        type: LinkType.PermissionPropertyDependency\r\n    },\r\n    PermissionPropertyDependencyManyToManyLink: {\r\n        type: LinkType.PermissionPropertyDependencyManyToManyLink\r\n    },\r\n    AttributeLink: {\r\n        type: LinkType.AttributeLink\r\n    },\r\n    ExistLink: {\r\n        exist: LinkType.Exist\r\n    },\r\n    ModelTypeLink: {\r\n        type: LinkType.ModelTypeLink\r\n    },\r\n    AgentTypeLink: {\r\n        type: LinkType.AgentTypeLink\r\n    },\r\n    RequiredClassLink: {\r\n        type: LinkType.RequiredClassLink\r\n    },\r\n    OnScreenLink: {\r\n        type: LinkType.OnScreenLink\r\n    },\r\n    OnSuccessLink: {\r\n        type: LinkType.OnSuccessLink\r\n    },\r\n    OnFailureLink: {\r\n        type: LinkType.OnFailureLink\r\n    },\r\n    OnItemSelection: {\r\n        type: LinkType.OnItemSelection\r\n    },\r\n    OnAction: {\r\n        type: LinkType.OnAction\r\n    },\r\n    ChildLink: {\r\n        type: LinkType.ChildLink\r\n    },\r\n    FunctionLink: {\r\n        type: LinkType.FunctionLink\r\n    },\r\n    FunctionOperator: {\r\n        type: LinkType.FunctionOperator\r\n    },\r\n    FunctionConstraintLink: {\r\n        type: LinkType.FunctionConstraintLink\r\n    },\r\n    ChoiceLink: {\r\n        type: LinkType.Choice\r\n    },\r\n    PermissionLink: {\r\n        type: LinkType.Permission\r\n    },\r\n    AppliedPermissionLink: {\r\n        type: LinkType.AppliedPermissionLink\r\n    },\r\n    RequestorPermissionLink: {\r\n        type: LinkType.RequestorPermissionLink\r\n    },\r\n    ManyToManyPermissionLink: {\r\n        type: LinkType.ManyToManyPermissionLink\r\n    },\r\n    ValdationLink: {\r\n        type: LinkType.Validation\r\n    },\r\n    ValidationLinkItem: {\r\n        type: LinkType.ValidationItem\r\n    },\r\n    ValidatorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ValidatorModelLink: {\r\n        type: LinkType.ValidatorModel\r\n    },\r\n    ValidatorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ValidatorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ExecutorLink: {\r\n        type: LinkType.Executor\r\n    },\r\n    ExecutorLinkItem: {\r\n        type: LinkType.ExecutorItem\r\n    },\r\n    ExecutorAgentLink: {\r\n        type: LinkType.ValidatorAgent\r\n    },\r\n    ExecutorModelLink: {\r\n        type: LinkType.ExecutorModel\r\n    },\r\n    ExecutorModelItemLink: {\r\n        type: LinkType.ValidatorModelItem\r\n    },\r\n    ExecutorPropertyLink: {\r\n        type: LinkType.ValidatorProperty\r\n    },\r\n\r\n    ValidatorFunctionLink: {\r\n        type: LinkType.ValidatorFunction\r\n    },\r\n    ExecutorFunctionLink: {\r\n        type: LinkType.ExecutorFunction\r\n    },\r\n    OptionLink: {\r\n        type: LinkType.Option\r\n    },\r\n    OptionItemLink: {\r\n        type: LinkType.OptionItem\r\n    },\r\n    // Options for custom defined options, that need to be made later.\r\n    OptionCustomLink: {\r\n        type: LinkType.OptionCustom\r\n    },\r\n    DependsOnLink: {\r\n        type: LinkType.DependsOn\r\n    },\r\n    ExtensionListLink: {\r\n        type: LinkType.ExtensionList\r\n    },\r\n    ExtensionLink: {\r\n        type: LinkType.Extension\r\n    },\r\n    //This link is between an extension with a dependsOn property\r\n    // It describes a link between a property and a secondary property.\r\n    ExtensionDependencyLink: {\r\n        type: LinkType.ExtensionDependencyLink\r\n    },\r\n    PropertyLink: {\r\n        type: LinkType.PropertyLink\r\n    },\r\n    ParentLink: {\r\n        type: LinkType.ParentLink\r\n    },\r\n    UserLink: {\r\n        type: LinkType.UserLink\r\n    },\r\n    MaestroLink: {\r\n        type: LinkType.MaestroLink\r\n    }\r\n}\r\nObject.keys(LinkProperties).map(propTypes => {\r\n    if (LinkProperties[propTypes] && LinkProperties[propTypes].type) {\r\n        LinkProperties[propTypes][LinkProperties[propTypes].type] = {};\r\n    }\r\n})\r\nexport const Methods = {\r\n    Create: 'Create',\r\n    Get: 'Get',\r\n    GetAll: 'GetAll',\r\n    Update: 'Update',\r\n    Delete: 'Delete'\r\n}\r\nexport const ValidationVector = {\r\n    Content: 'content'\r\n}\r\nexport const ValidationRules = {\r\n    CVV: \"cvv\",\r\n    AlphaNumericLike: \"alphanumericlike\",\r\n    AlphaNumericPuncLike: 'alphaNumericpunclike',\r\n    AlphaOnly: \"alphaonly\",\r\n    NumericOnly: 'numericonly',\r\n    Numeric: 'numeric',\r\n    Empty: 'empty',\r\n    AlphaOnlyWithSpaces: \"alphaonlywithspaces\",\r\n    NotEmpty: \"notempty\",\r\n    UrlEmpty: \"url_empty\",\r\n    IsTrue: 'is_true',\r\n    IsFalse: 'is_false',\r\n    GreaterThan: 'greater_than',\r\n    GreaterThanOrEqualTo: 'greater_than_equal_to',\r\n    LessThan: 'less_than',\r\n    LessThanOrEqualTo: 'less_than_equal_to',\r\n    EqualTo: 'equal_to',\r\n    Any: 'any',\r\n    Url: \"url\",\r\n    EmailEmpty: \"email_empty\",\r\n    Credit: \"credit\",\r\n    Email: \"email\",\r\n    ExpirationMonth: \"expirationMonth\",\r\n    BeforeNow: \"beforenow\",\r\n    Year: \"year\",\r\n    Debit: \"debit\",\r\n    ExpirationYear: \"expirationYear\",\r\n    PastDate: \"pastdate\",\r\n    ZipEmpty: \"zipempty\",\r\n    Zip: \"zip\",\r\n    SocialSecurity: \"socialsecurity\",\r\n    ListOfGuids: 'listofguids',\r\n    OneOf: 'one-of'\r\n}\r\n\r\n\r\nexport const ExtensionDefinitionTypes = {\r\n    DictionaryStringString: 'DictionaryStringString',\r\n    DictionaryStringDictionary: 'DictionaryStringDictionary',\r\n}\r\nexport const CollectionTypes = {\r\n    DebitCard: 'DebitCard',\r\n    Email: 'Email',\r\n    Telephone: 'Telephone'\r\n}\r\n\r\nexport const OptionsTypes = {\r\n    CHOICELIST: 'CHOICELIST',\r\n    CAPITALIZE_FIRST_LETTER: 'CAPITALIZE_FIRST_LETTER'\r\n}\r\nexport const NodePropertyTypes = {\r\n    STRING: 'STRING',\r\n    LISTOFSTRINGS: 'LISTOFSTRINGS',\r\n    DATETIME: 'DATETIME',\r\n    INT: 'INT',\r\n    FLOAT: 'FLOAT',\r\n    DOUBLE: 'DOUBLE',\r\n    BOOLEAN: 'BOOLEAN',\r\n    EMAIL: 'EMAIL',\r\n    PHONENUMBER: 'PHONENUMBER'\r\n}\r\nexport const NEW_LINE = `\r\n`;\r\nexport const ProgrammingLanguages = {\r\n    CSHARP: 'csharp'\r\n}\r\nexport const NodePropertyTypesByLanguage = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.DATETIME]: 'DateTime',\r\n        [NodePropertyTypes.STRING]: 'string',\r\n        [NodePropertyTypes.LISTOFSTRINGS]: 'IList<string>',\r\n        [NodePropertyTypes.INT]: 'int',\r\n        [NodePropertyTypes.FLOAT]: 'float',\r\n        [NodePropertyTypes.DOUBLE]: 'double',\r\n        [NodePropertyTypes.BOOLEAN]: 'bool',\r\n        [NodePropertyTypes.EMAIL]: 'Email',\r\n        [NodePropertyTypes.PHONENUMBER]: 'PhoneNumber'\r\n    }\r\n}\r\nexport const RED_QUICK_DATA = 'RedQuick.Data';\r\nexport const RED_QUICK_ATTRIBUTES = 'RedQuick.Attributes';\r\nexport const Usings = {\r\n    [ProgrammingLanguages.CSHARP]: {\r\n        [NodePropertyTypes.EMAIL]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES],\r\n        [NodePropertyTypes.PHONENUMBER]: [RED_QUICK_DATA, RED_QUICK_ATTRIBUTES]\r\n    }\r\n}\r\nexport const NodeAttributePropertyTypes = {\r\n\r\n    ROUTINGNUMBER: \"ROUTINGNUMBER\",\r\n    CURRENCY: \"CURRENCY\",\r\n    CARMAKE: \"CARMAKE\",\r\n    SOCIALSECURITY: \"SOCIALSECURITY\",\r\n    EMAIL: \"EMAIL\",\r\n    PHONE: \"PHONE\",\r\n    CARMODEL: \"CARMODEL\",\r\n    CARYEAR: \"CARYEAR\",\r\n    VIN: \"VIN\",\r\n    LONGSTRING: \"LONGSTRING\",\r\n    CREDITCARD: \"CREDITCARD\",\r\n    LENGTH: \"LENGTH\",\r\n    INCH: \"INCH\",\r\n    DIMENSION: \"DIMENSION\",\r\n    MONEY: \"MONEY\",\r\n    COUNTRY: \"COUNTRY\",\r\n    DEBIT: \"DEBIT\",\r\n    MONTH: \"MONTH\",\r\n    STATE: \"STATE\",\r\n    CHOICE: \"CHOICE\",\r\n    NUMBER: \"NUMBER\",\r\n    SLIDER: \"SLIDER\",\r\n    DATE: \"DATE\",\r\n    TIME: \"TIME\",\r\n    BOOLEAN: \"BOOLEAN\",\r\n    ACCOUNTNUMBER: \"ACCOUNTNUMBER\",\r\n    ADDRESS: \"ADDRESS\",\r\n    COLLECTION: \"COLLECTION\",\r\n    OBJECT: \"OBJECT\",\r\n    RADIO: \"RADIO\",\r\n    CHECKLIST: \"CHECKLIST\",\r\n    STRING: \"STRING\",\r\n    GEOLOCATION: \"GEOLOCATION\",\r\n    YEAR: \"YEAR\"\r\n\r\n}\r\n\r\nconst COMMON_DATETIME_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.DATETIME,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nconst COMMON_STRING_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.STRING,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nconst COMMON_LISTSTRING_ARGS = {\r\n    value: {\r\n        type: NodePropertyTypes.LISTOFSTRINGS,\r\n        nodeType: NodeTypes.Property\r\n    }\r\n}\r\n\r\nexport function GetValidationsFor(type) {\r\n    let result = {};\r\n    Object.keys(ValidationCases).filter(x => {\r\n        return ValidationCases[x].types.some(v => v === type);\r\n    }).map(t => {\r\n        result[t] = ValidationCases[t];\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function GetMoreCompatibles(a, vector, result = []) {\r\n    var parents = GetValidationParents(a, vector).map(t => t.id);\r\n    parents = parents.filter(t => result.indexOf(t) === -1);\r\n    result = [a, ...result, ...parents].unique();\r\n    parents.map(t => {\r\n        if (result.indexOf(t) !== -1) {\r\n            result = GetMoreCompatibles(t, vector, result);\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function AreCompatible(a, b, vector = ValidationVector.Content) {\r\n    var t = GetMoreCompatibles(a, vector);\r\n    var v = GetMoreCompatibles(b, vector);\r\n\r\n    return !!t.intersection(v).length;\r\n}\r\nexport function SortValidation(a, b, vector) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    var t = GetMoreCompatibles(a, vector);\r\n    var v = GetMoreCompatibles(b, vector);\r\n    var bIsIncluded = t.some(_t => _t === b);\r\n    var aIsIncluded = v.some(_v => _v === a);\r\n    if (bIsIncluded && aIsIncluded) {\r\n        return 0;\r\n    }\r\n    else if (bIsIncluded) {\r\n        return -1;\r\n    }\r\n    else if (aIsIncluded) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nexport function GetValidationParents(type, vector) {\r\n    var vc = ValidationCases[type];\r\n    if (vc) {\r\n        var vects = vc.vectors[vector];\r\n        if (Array.isArray(vects)) {\r\n            return vects.map(t => ValidationCases[t]).filter(x => x);\r\n        }\r\n        else {\r\n            return Object.keys(vects).map(t => {\r\n                return ValidationCases[t]\r\n            }).filter(x => x);\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexport function GetValidationTypes(type) {\r\n    var results = [];\r\n\r\n    Object.values(ValidationCases).map(t => {\r\n        if (t && t.types && t.types.indexOf(type) !== -1)\r\n            results.push(t);\r\n    })\r\n\r\n    return results;\r\n}\r\n\r\nexport const ValidationCases = {\r\n    [ValidationRules.ListOfGuids]: {\r\n        types: [NodePropertyTypes.LISTOFSTRINGS],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `new List<string> { \"${_.uuidv4()}\"}`\r\n            },\r\n            'long': function () {\r\n                return `new List<string> { \"${_.uuidv4()}asdf\" }`\r\n            },\r\n            '$empty': function () {\r\n                return `new List<string>()`\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 9, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            }\r\n        },\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.ZipEmpty],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 5, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 12, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 5, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        types: [NodePropertyTypes.DATETIME],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n        }\r\n    },\r\n\r\n    [ValidationRules.BeforeNow]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            value: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `Date.UtcNow().AddDays(-1)`\r\n            },\r\n            'false': function () {\r\n                return `Date.UtcNow().AddDays(1)`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asdf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@asdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"asadf@asdf.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: true,\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'long': function () {\r\n                return `\"${[].interpolate(0, 23, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'short': function () {\r\n                return `\"${[].interpolate(0, 3, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"${[].interpolate(0, 0, e => Math.floor(Math.random() * 10)).join('')}\"`\r\n            },\r\n            'invalid': function () {\r\n                return `\"${[].interpolate(0, 16, e => Math.floor(Math.random() * 10)).join('a')}\"`\r\n            },\r\n            'invalid2': function () {\r\n                return `\"${[].interpolate(0, 16, e => 'a').join('')}\"`\r\n            },\r\n        },\r\n    },\r\n    [ValidationRules.Url]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.UrlEmpty]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"http://yahoo.com\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Empty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            'false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NotEmpty]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.Any],\r\n            length: true\r\n        },\r\n        cases: {\r\n            '$false': function () {\r\n                return `\"asdf\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.NumericOnly]: {\r\n        vectors: {\r\n            content: [ValidationRules.Numeric]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.Numeric]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"1234.34\"`\r\n            },\r\n            'false': function () {\r\n                return `\"12QW\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    //Cant be empty, that would  be the only difference between it and Any.\r\n    [ValidationRules.AlphaNumericPuncLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.Any]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21df.!@#$ #$%^^&*^&*()aom\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        types: [NodePropertyTypes.STRING],\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas21dfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf@.com\"`\r\n            },\r\n            '$empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaOnlyWithSpaces]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httasdfaom\"`\r\n            },\r\n            'false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        types: [NodePropertyTypes.STRING],\r\n        vectors: {\r\n            content: [ValidationRules.AlphaNumericPuncLike]\r\n        },\r\n        cases: {\r\n            '$true': function (e) {\r\n                return `\"httas dfaom\"`\r\n            },\r\n            '$false': function () {\r\n                return `\"asdf@ afsdfdd@asdf12f@.com\"`\r\n            },\r\n            'empty': function () {\r\n                return `\"\"`\r\n            },\r\n        }\r\n    },\r\n    [ValidationRules.IsTrue]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            '$true': function () {\r\n                return 'true';\r\n            },\r\n            'false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.IsFalse]: {\r\n        types: [NodePropertyTypes.BOOLEAN],\r\n        vectors: {\r\n            value: [ValidationRules.Any]\r\n        },\r\n        cases: {\r\n            'true': function () {\r\n                return 'true';\r\n            },\r\n            '$false': function () {\r\n                return 'false';\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThanOrEqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' >= '\r\n            },\r\n            'notgreater': function () {\r\n                return ' >= '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.GreaterThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$greater': function () {\r\n                return ' > '\r\n            },\r\n            'notgreater': function () {\r\n                return ' > '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.LessThan]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$less': function () {\r\n                return ' < '\r\n            },\r\n            'notless': function () {\r\n                return ' < '\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.EqualTo]: {\r\n        types: [NodePropertyTypes.DOUBLE, NodePropertyTypes.FLOAT, NodePropertyTypes.INT],\r\n        vectors: {\r\n            value: {\r\n                [ValidationRules.GreaterThan]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.GreaterThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.EqualTo]: function (self, b) {\r\n                    // based on a parameter, determining which validation is most restrictive should be possible.\r\n                },\r\n                [ValidationRules.LessThan]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                },\r\n                [ValidationRules.LessThanOrEqualTo]: function (self, b) {\r\n                    // based on a parameter, determine if there are any possible success cases.\r\n                }\r\n            }\r\n        },\r\n        cases: {\r\n            '$equal_to': function () {\r\n                return ' = '\r\n            },\r\n            'not_equal': function () {\r\n                return ' = '\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.keys(ValidationCases).map(t => {\r\n    ValidationCases[t].id = t;\r\n})\r\nexport const ExecutorRules = {\r\n    ModelReference: 'model-reference',\r\n    Copy: 'copy',\r\n    AgentReference: 'agent-reference',\r\n    ParentReference: 'parent-reference',\r\n    AddModelReference: 'add-model-reference'\r\n}\r\nexport const ExecutorUI = {\r\n    [ExecutorRules.ModelReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ModelReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.AgentReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AgentReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.ParentReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ParentReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            reference: {\r\n                types: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.AddModelReference]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AddModelReference'\r\n        },\r\n        arguments: {\r\n            ...COMMON_LISTSTRING_ARGS,\r\n            nodeType: NodeTypes.Model,\r\n            method_reference: {\r\n                reference: true\r\n            }\r\n        }\r\n    },\r\n    [ExecutorRules.Copy]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'copy'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ExecutorUI).map(t => {\r\n    ExecutorUI[t].type = t;\r\n})\r\nexport const FilterRules = {\r\n    EqualsAgent: 'equals-agent',\r\n    EqualsParent: 'equals-parent',\r\n    EqualsTrue: 'equals-true',\r\n    EqualsFalse: 'equals-false',\r\n    EqualsModelRef: 'equals-model-ref',\r\n    EqualsModelProperty: 'equals-model-property'\r\n}\r\nexport const FilterUI = {\r\n    [FilterRules.EqualsTrue]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsTrue'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsFalse]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsFalse'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsParent]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsParent'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsAgent]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsAgent'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            type: NodePropertyTypes.BOOLEAN\r\n        }\r\n    },\r\n    [FilterRules.EqualsModelRef]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsModelRef'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            functionvariables: true\r\n        }\r\n    },\r\n    [FilterRules.EqualsModelProperty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EqualsModelProperty'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            modelproperty: true\r\n        }\r\n    }\r\n}\r\nObject.keys(FilterUI).map(t => {\r\n    FilterUI[t].type = t;\r\n})\r\nexport const ValidationUI = {\r\n    [ValidationRules.OneOf]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'OneOfAttribute'\r\n        },\r\n        arguments: {\r\n            ...COMMON_STRING_ARGS,\r\n            nodeType: NodeTypes.Enumeration,\r\n            reference: {\r\n                types: [NodeTypes.Enumeration, NodeTypes.ExtensionType]\r\n            }\r\n        }\r\n    },\r\n    [ValidationRules.SocialSecurity]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'SocialSecurityAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Zip]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.ZipEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'ZipEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.PastDate]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'PastDateAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.BeforeNow]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'BeforeNowAttribute'\r\n        },\r\n        arguments: { ...COMMON_DATETIME_ARGS }\r\n    },\r\n    [ValidationRules.Email]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Credit]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'CreditCardAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.EmailEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'EmailEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.Url]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.UrlEmpty]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'UrlEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaNumericLike]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaNumericLikeAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnly]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'AlphaOnlyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    },\r\n    [ValidationRules.AlphaOnlyWithSpaces]: {\r\n        code: {\r\n            [ProgrammingLanguages.CSHARP]: 'NotEmptyAttribute'\r\n        },\r\n        arguments: { ...COMMON_STRING_ARGS }\r\n    }\r\n}\r\nObject.keys(ValidationUI).map(t => {\r\n    ValidationUI[t].type = t;\r\n})","import * as Titles from '../components/titles';\r\nimport fs from 'fs';\r\nimport { Methods, NodeTypes, NodeProperties } from './nodetypes';\r\n\r\nexport const FunctionTypes = {\r\n    //Functions with List<Child> result\r\n    Create_ManyToMany_Agent_Value__IListChild: 'Create/ManyToMany/Agent/Value => IList<Child>',\r\n    Update_ManyToMany_Agent_Value__IListChild: 'Update/ManyToMany/Agent/Value => IList<Child>',\r\n    Get_ManyToMany_Agent_Value__IListChild: 'Get/ManyToMany/Agent/Value => IList<Child>',\r\n    Delete_ManyToMany_Agent_Value__IListChild: 'Delete/ManyToMany/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Child> result\r\n    Create_Parent$Child_Agent_Value__IListChild: 'Create/Parent-Child/Agent/Value => IList<Child>',\r\n    Update_Parent$Child_Agent_Value__IListChild: 'Update/Parent-Child/Agent/Value => IList<Child>',\r\n    Get_Parent$Child_Agent_Value__IListChild: 'Get/Parent-Child/Agent/Value => IList<Child>',\r\n    Delete_Parent$Child_Agent_Value__IListChild: 'Delete/Parent-Child/Agent/Value => IList<Child>',\r\n\r\n    //Functions with List<Object> result\r\n    Create_Object_Agent_Value__IListObject: 'Create/Object/Agent/Value => IList<Object>',\r\n    Update_Object_Agent_Value__IListObject: 'Update/Object/Agent/Value => IList<Object>',\r\n    Get_Object_Agent_Value__IListObject: 'Get/Object/Agent/Value => IList<Object>',\r\n    Delete_Object_Agent_Value__IListObject: 'Delete/Object/Agent/Value => IList<Object>',\r\n\r\n    //Delete\r\n    Delete_M2M_By_Reference: 'Delete M2M by reference => list',\r\n\r\n    //Functions with Object result\r\n    Create_Parent_Child_Agent_Value__Child: 'Create/Parent-Child/Agent/Value => Child',\r\n    Update_Parent_Child_Agent_Value__Child: 'Update/Parent-Child/Agent/Value => Child',\r\n    Get_Parent_Child_Agent_Value__Child: 'Get/Parent-Child/Agent/Value => Child',\r\n    Delete_Parent_Child_Agent_Value__Child: 'Delete/Parent-Child/Agent/Value => Child',\r\n\r\n    //Functions width Object result.\r\n    Create_Object_Agent_Value__Object: 'Create/Object/Agent/Value => Object',\r\n    Update_Object_Agent_Value__Object: 'Update/Object/Agent/Value => Object',\r\n    Update_Object_Agent_Value__Object_With_Object: 'Update/Object/with/Model/Agent/Value => Object',\r\n    Get_Object_Agent_Value__Object: 'Get/Object/Agent/Value => Object',\r\n    Delete_Object_Agent_Value__Object: 'Delete/Object/Agent/Value => Object',\r\n\r\n    Create_Object_Agent_Many_to_Many_CompositeInput__Object: 'Create/Object/Agent/Many to Many with Composite Input => Object',\r\n    Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET: 'Create M2M Object with Agent and Return the updated M2M set',\r\n\r\n    Create_Object__Object: 'Create/Object => Object',\r\n    Update_Object__Object: 'Update/Object => Object',\r\n    Delete_Object__Object: 'Delete/Object => Object',\r\n    Get_Object__Object: 'Get/Object => Object',\r\n\r\n    //Function with bool result\r\n    Can_Execute_Agent_Parent_In_Valid_List: 'Can_Execute_Agent_Parent_In_Valid_List'\r\n    // IAgent_and_Permission_determing_the_permission_based_on_a_PROPERTY: 'Given an Agent and Permission, determing the permission based on a PROPERTY'\r\n}\r\n\r\n\r\nexport const FunctionTemplateKeys = {\r\n    Model: 'model',\r\n    ModelOutput: 'model_output',\r\n    UpdateModel: 'model_update',\r\n    ReferenceClass: 'reference_class',\r\n    Reference: 'reference',\r\n    ModelProperty: 'model-property',\r\n    Bool: 'bool',\r\n    CanExecute: 'can-execute',\r\n    ModelDeterminingProperty: 'model-determining-property',\r\n    AgentDeterminingProperty: 'agent-determining-property',\r\n    Property: 'property',\r\n    Parent: 'parent',\r\n    AgentInstance: 'agent_instance',\r\n    Agent: 'agent',\r\n    AgentProperty: 'agent-property',\r\n    AgentType: 'agent_type',\r\n    User: 'user',\r\n    ManyToManyModel: 'many_to_many',\r\n    Method: 'method',\r\n    MethodType: 'method_type',\r\n    Permission: 'permission',\r\n    UserInstance: 'user_instance',\r\n    ModelFilter: 'model_filter',\r\n    Value: 'value',\r\n    CompositeInput: 'composite-input',\r\n    CompositeInputProperty: 'composite-input-property'\r\n}\r\n\r\nexport const FunctionConstraintKeys = {\r\n    IsAgent: 'isAgent',\r\n    IsUser: 'isUser',\r\n    IsTypeOf: 'isTypeOf',\r\n    IsParent: 'isParent',\r\n    IsChild: 'isChild',\r\n    IsList: 'isList',\r\n    IsSingleLink: '$single$link',\r\n    IsModel: 'isModel',\r\n    IsFunction: 'isFunction',\r\n    IsProperty: 'isProperty',\r\n    IsEnumerable: 'isEnumerable',\r\n    IsInstanceVariable: 'isInstanceVariable',\r\n    IsInputVariable: 'isInputVariable'\r\n}\r\n\r\nconst COMMON_CONSTRAINTS = {\r\n    [FunctionTemplateKeys.CanExecute]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsFunction]: true,\r\n        key: FunctionTemplateKeys.CanExecute\r\n    },\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Parent,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n        [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsProperty]: true,\r\n        key: FunctionTemplateKeys.ModelDeterminingProperty\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        [FunctionConstraintKeys.IsParent]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Parent\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\n//Deprecated 6.12.2019\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.Model\r\n    },\r\n    [FunctionTemplateKeys.AgentType]: {\r\n        [FunctionConstraintKeys.IsAgent]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.AgentType\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [FunctionConstraintKeys.IsUser]: true,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        [FunctionConstraintKeys.IsModel]: true,\r\n        key: FunctionTemplateKeys.User\r\n    },\r\n    [FunctionTemplateKeys.UserInstance]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.User,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.UserInstance,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    },\r\n    [FunctionTemplateKeys.Value]: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsSingleLink]: true,\r\n        key: FunctionTemplateKeys.Value,\r\n        [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n        [FunctionConstraintKeys.IsInputVariable]: true\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelOutput]: {\r\n        key: FunctionTemplateKeys.ModelOutput,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_OBJECT_MANY_TO_MANY_COMPOSITEINPUT_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.CompositeInput]: {\r\n        key: FunctionTemplateKeys.CompositeInput,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\nconst AfterEffectsTemplate = {\r\n    GenerateM2M_From_Result_and_Input: 'Generate Many 2 Many from result and input',\r\n    ExecuteStreamProcess: 'Execute stream process',\r\n    ExecuteStreamProcessUpdate: 'Execute stream process update'\r\n}\r\nexport const AFTER_EFFECTS = {\r\n    [AfterEffectsTemplate.GenerateM2M_From_Result_and_Input]: {\r\n        template: './app/templates/aftereffects/generate_m2m_from_result_and_input.tpl',\r\n        template_call: '                    await {{function_name}}(agent, data, result);',\r\n        templateKeys: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.CompositeInput]: {\r\n                key: FunctionTemplateKeys.CompositeInput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.CompositeInputProperty]: {\r\n                key: FunctionTemplateKeys.CompositeInputProperty,\r\n                nodeTypes: [NodeTypes.Property],\r\n                parent: FunctionTemplateKeys.CompositeInput\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ManyToManyModel]: {\r\n                key: FunctionTemplateKeys.ManyToManyModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            }\r\n        }\r\n    },\r\n    [AfterEffectsTemplate.ExecuteStreamProcess]: {\r\n        template: './app/templates/aftereffects/execute_stream_process.tpl',\r\n        template_call: '                    await {{function_name}}(agent, result);',\r\n        update_with: `./app/templates/standard/update_model_property.tpl`,\r\n        stream_process_change_parameter: `./app/templates/stream_process/stream_process_change_class_extension_update_by_model.tpl`,\r\n        templateKeys: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ModelOutput]: {\r\n                key: FunctionTemplateKeys.ModelOutput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ManyToManyModel]: {\r\n                key: FunctionTemplateKeys.ManyToManyModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Method]: {\r\n                key: FunctionTemplateKeys.Method,\r\n                useNodes: true,\r\n                nodeTypes: [NodeTypes.Method]\r\n            },\r\n            [FunctionTemplateKeys.MethodType]: {\r\n                key: FunctionTemplateKeys.MethodType,\r\n                useMethodTypes: true\r\n            }\r\n\r\n        }\r\n    },\r\n    [AfterEffectsTemplate.ExecuteStreamProcessUpdate]: {\r\n        template: './app/templates/aftereffects/execute_stream_process_update.tpl',\r\n        template_call: `\r\n            var reference = {{reference}};\r\n            var model = result;\r\n            await {{function_name}}(agent, reference, model);`,\r\n        stream_process_change_parameter: `./app/templates/stream_process/stream_process_change_class_extension_update_by_model.tpl`,\r\n        update_with: `./app/templates/standard/update_model_property.tpl`,\r\n        templateKeys: {\r\n            [FunctionTemplateKeys.Model]: {\r\n                key: FunctionTemplateKeys.Model,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ModelOutput]: {\r\n                key: FunctionTemplateKeys.ModelOutput,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.UpdateModel]: {\r\n                key: FunctionTemplateKeys.UpdateModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ReferenceClass]: {\r\n                key: FunctionTemplateKeys.ReferenceClass,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Reference]: {\r\n                key: FunctionTemplateKeys.Reference,\r\n                nodeTypes: [NodeTypes.Model],\r\n                useString: ['agent', 'result', 'newData', 'data'].map(t => `#${t}`)\r\n            },\r\n            [FunctionTemplateKeys.Agent]: {\r\n                [NodeProperties.IsAgent]: true,\r\n                key: FunctionTemplateKeys.Agent,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.ManyToManyModel]: {\r\n                key: FunctionTemplateKeys.ManyToManyModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            },\r\n            [FunctionTemplateKeys.Method]: {\r\n                key: FunctionTemplateKeys.Method,\r\n                useNodes: true,\r\n                nodeTypes: [NodeTypes.Method]\r\n            },\r\n            [FunctionTemplateKeys.MethodType]: {\r\n                key: FunctionTemplateKeys.MethodType,\r\n                useMethodTypes: true\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst COMMON_CONSTRAINTS_OBJECT_METHOD = {\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        key: FunctionTemplateKeys.Parent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Property]: {\r\n        key: FunctionTemplateKeys.Property,\r\n        nodeTypes: [NodeTypes.Property]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD = {\r\n    [FunctionTemplateKeys.Model]: {\r\n        key: FunctionTemplateKeys.Model,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Parent]: {\r\n        key: FunctionTemplateKeys.Parent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Agent]: {\r\n        [NodeProperties.IsAgent]: true,\r\n        key: FunctionTemplateKeys.Agent,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.User]: {\r\n        [NodeProperties.IsUser]: true,\r\n        key: FunctionTemplateKeys.User,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.ManyToManyModel]: {\r\n        [NodeProperties.ManyToManyNexus]: true,\r\n        key: FunctionTemplateKeys.ManyToManyModel,\r\n        nodeTypes: [NodeTypes.Model]\r\n    },\r\n    [FunctionTemplateKeys.Permission]: {\r\n        key: FunctionTemplateKeys.Permission,\r\n        nodeTypes: [NodeTypes.Permission]\r\n    },\r\n    [FunctionTemplateKeys.ModelFilter]: {\r\n        key: FunctionTemplateKeys.ModelFilter,\r\n        nodeTypes: [NodeTypes.ModelFilter]\r\n    }\r\n};\r\n\r\n\r\nconst COMMON_OUTPUT = {\r\n    LIST: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsList]: true\r\n    },\r\n    OBJECT: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n        [FunctionConstraintKeys.IsList]: false\r\n    },\r\n    BOOL: {\r\n        [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Bool\r\n    }\r\n}\r\nexport const INTERNAL_TEMPLATE_REQUIREMENTS = {\r\n    METHODS: 'methods',\r\n    PARAMETERS: 'parameters',\r\n    PARAMETERSCLASS: 'Parameters', // Classes hold the parameters, that go to Change classes. See create____.tpl templates.\r\n    CHANGECLASS: 'Change', // Class objects are passed to streams for processing\r\n    RESPONSECLASS: 'Response', // When stream processing completes, these are sent back.\r\n    STREAMPROCESS: 'StreamProcess',\r\n    DETERMINING_PROPERTY: 'determining_property',\r\n    PARENTS_ID_PROPERTY: 'parentIdProperty',\r\n    MODEL: 'model',\r\n    CONSTRUCTORS: 'constructors',\r\n    TEMPLATE: 'template',\r\n    INTERFACE: 'interface',\r\n    PARENT: 'parent',\r\n    PROPERTY: 'property',\r\n    METHOD: {\r\n        CREATE: 'Create',\r\n        UPDATE: 'Update',\r\n        PROCESS: 'Process'\r\n    }\r\n}\r\nexport const FUNCTION_REQUIREMENT_KEYS = {\r\n    CLASSES: 'classes'\r\n}\r\nconst COMMON_FUNCTION_REQUIREMENTS = {\r\n    [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_parameter_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                },\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.UPDATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        FunctionTemplateKeys.AgentType,\r\n                        FunctionTemplateKeys.Model\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.TEMPLATE]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.CONSTRUCTORS]: fs.readFileSync('./app/templates/stream_process/stream_process_change_class.tpl', 'utf8'),\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.RESPONSECLASS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.CREATE]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERSCLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    attachment_methods: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.STREAMPROCESS]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.METHODS]: {\r\n                [INTERNAL_TEMPLATE_REQUIREMENTS.METHOD.PROCESS]: {\r\n                    [INTERNAL_TEMPLATE_REQUIREMENTS.PARAMETERS]: [\r\n                        INTERNAL_TEMPLATE_REQUIREMENTS.CHANGECLASS\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    propreties: {\r\n        [INTERNAL_TEMPLATE_REQUIREMENTS.DETERMINING_PROPERTY]: {\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.MODEL]: FunctionTemplateKeys.Model,\r\n            [INTERNAL_TEMPLATE_REQUIREMENTS.PROPERTY]: FunctionTemplateKeys.Property,\r\n        }\r\n    }\r\n}\r\nexport const TEMPLATE_KEY_MODIFIERS = {\r\n    lower: 'lower',\r\n    alllower: 'alllower',\r\n    upper: 'upper'\r\n}\r\nexport function ToInterface(i) {\r\n    return `I${i}`;\r\n}\r\nexport const HTTP_METHODS = {\r\n    POST: 'HttpPost',\r\n    GET: 'HttpGet',\r\n    DELETE: 'HttpDelete',\r\n    PATCH: 'HttpPatch'\r\n}\r\nexport const COMMON_FUNCTION_TEMPLATE_KEYS = {\r\n    model: 'model',\r\n    function_name: 'function_name',\r\n    user: 'user',\r\n    user_instance: 'user_instance',\r\n    value: 'value',\r\n    agent: 'agent',\r\n    agent_type: 'agent_type'\r\n}\r\n// export const Functions = {\r\n//     [FunctionTypes.Create_Object_Agent_Value__IListObject]: {\r\n//         title: Titles.Create_Object_Agent_Value__IListObject,\r\n//         template: fs.readFileSync('./app/templates/standard/create_model_agent_listobject.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/standard/create_model_agent_listobject_interface.tpl', 'utf8'),\r\n//         constraints: {\r\n//             ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n//         }, output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: true,\r\n//         method: Methods.Create,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     }, [FunctionTypes.Update_Object_Agent_Value__IListObject]: {\r\n//         title: Titles.Update_Object_Agent_Value__IListObject,\r\n//         template: fs.readFileSync('./app/templates/standard/update_model_agent_listobject.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/standard/update_model_agent_listobject_interface.tpl', 'utf8'),\r\n//         constraints: {\r\n//             ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n//         }, output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: true,\r\n//         method: Methods.Update,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     }, [FunctionTypes.Delete_Object_Agent_Value__IListObject]: {\r\n//         title: Titles.Delete_Object_Agent_Value__IListObject,\r\n//         template: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject_interface.tpl', 'utf8'),\r\n//         constraints: {\r\n//             ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n//         }, output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: true,\r\n//         method: Methods.Delete,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     },\r\n//     [FunctionTypes.Get_Object_Agent_Value__Object]: {\r\n//         title: Titles.Get_Object_Agent_Value__Object,\r\n//         template: fs.readFileSync('./app/templates/standard/get_model_agent_object.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/standard/get_model_agent_object_interface.tpl', 'utf8'),\r\n//         constraints: {\r\n//             [FunctionTemplateKeys.ManyToManyModel]: {\r\n//                 [NodeProperties.ManyToManyNexus]: true,\r\n//                 key: FunctionTemplateKeys.ManyToManyModel,\r\n//                 nodeTypes: [NodeTypes.Model]\r\n//             },\r\n//             ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n//         }, output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: false,\r\n//         method: Methods.Get,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     },\r\n//     [FunctionTypes.Get_Object_Agent_Value__IListObject]: {\r\n//         title: Titles.Get_Object_Agent_Value__IListObject,\r\n//         template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_interface.tpl', 'utf8'),\r\n//         constraints: {\r\n//             ...COMMON_CONSTRAINTS_AGENT_OBJECT\r\n//         }, output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: true,\r\n//         method: Methods.GetAll,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     }, [FunctionTypes.Create_Parent$Child_Agent_Value__IListChild]: {\r\n//         title: Titles.Create_Parent$Child_Agent_Value__IListChild,\r\n//         template: fs.readFileSync('./app/templates/create_agent_childparent_listchild.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/create_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n//         constraints: { ...COMMON_CONSTRAINTS },\r\n//         output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: true,\r\n//         method: Methods.Create,\r\n//         ...COMMON_FUNCTION_REQUIREMENTS,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     }, [FunctionTypes.Update_Parent$Child_Agent_Value__IListChild]: {\r\n//         title: Titles.Update_Parent$Child_Agent_Value__IListChild,\r\n//         template: fs.readFileSync('./app/templates/update_agent_childparent_listchild.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/update_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n//         constraints: { ...COMMON_CONSTRAINTS },\r\n//         output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: true,\r\n//         method: Methods.Update,\r\n//         ...COMMON_FUNCTION_REQUIREMENTS,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     }, [FunctionTypes.Get_Parent$Child_Agent_Value__IListChild]: {\r\n//         title: Titles.Get_Parent$Child_Agent_Value__IListChild,\r\n//         template: fs.readFileSync('./app/templates/get_agent_childparent_listchild.tpl', 'utf8'),\r\n//         interface: fs.readFileSync('./app/templates/get_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n//         constraints: { ...COMMON_CONSTRAINTS },\r\n//         output: {\r\n//             ...COMMON_OUTPUT.LIST\r\n//         },\r\n//         isList: true,\r\n//         method: Methods.GetAll,\r\n//         ...COMMON_FUNCTION_REQUIREMENTS,\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     }, [FunctionTypes.Can_Execute_Agent_Parent_In_Valid_List]: {\r\n//         title: Titles.Can_Execute_Agent_Parent_In_Valid_List,\r\n//         template: fs.readFileSync('./app/templates/can_execute/can_execute_childparent_valid_list.tpl', 'utf8'),\r\n//         constraints: {\r\n//             [FunctionTemplateKeys.AgentType]: {\r\n//                 [FunctionConstraintKeys.IsAgent]: true,\r\n//                 [FunctionConstraintKeys.IsSingleLink]: true,\r\n//                 [FunctionConstraintKeys.IsModel]: true,\r\n//                 key: FunctionTemplateKeys.AgentType\r\n//             },\r\n//             [FunctionTemplateKeys.AgentDeterminingProperty]: {\r\n//                 [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.AgentType,\r\n//                 [FunctionConstraintKeys.IsSingleLink]: true,\r\n//                 [FunctionConstraintKeys.IsProperty]: true,\r\n//                 key: FunctionTemplateKeys.AgentDeterminingProperty\r\n//             },\r\n//             [FunctionTemplateKeys.Model]: {\r\n//                 [FunctionConstraintKeys.IsSingleLink]: true,\r\n//                 [FunctionConstraintKeys.IsModel]: true,\r\n//                 key: FunctionTemplateKeys.Model\r\n//             },\r\n//             [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n//                 [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n//                 [FunctionConstraintKeys.IsSingleLink]: true,\r\n//                 [FunctionConstraintKeys.IsProperty]: true,\r\n//                 [FunctionConstraintKeys.IsEnumerable]: true,\r\n//                 key: FunctionTemplateKeys.ModelDeterminingProperty\r\n//             },\r\n//             [FunctionTemplateKeys.AgentInstance]: {\r\n//                 [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.AgentType,\r\n//                 [FunctionConstraintKeys.IsSingleLink]: true,\r\n//                 key: FunctionTemplateKeys.AgentInstance,\r\n//                 [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n//                 [FunctionConstraintKeys.IsInputVariable]: true\r\n//             },\r\n//             [FunctionTemplateKeys.Value]: {\r\n//                 [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n//                 [FunctionConstraintKeys.IsSingleLink]: true,\r\n//                 key: FunctionTemplateKeys.Value,\r\n//                 [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n//                 [FunctionConstraintKeys.IsInputVariable]: true\r\n//             }\r\n//         },\r\n//         output: {\r\n//             ...COMMON_OUTPUT.BOOL\r\n//         },\r\n//         [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {},\r\n//         attachment_methods: {},\r\n//         propreties: {},\r\n//         template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n//     }\r\n// }\r\n\r\n\r\nexport const MethodFunctions = {\r\n    [FunctionTypes.Create_Object__Object]: {\r\n        title: Titles.Create_Object__Object,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_object.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_object_interface.tpl', 'utf8'),\r\n        templates: {\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET]: {\r\n        title: FunctionTypes.Create_ManyToMany_Object_With_Agent_And_Return_M2M_SET,\r\n        template: fs.readFileSync('./app/templates/standard/many_2_many/create_with_agent_and_return_m2m_set.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/many_2_many/create_with_agent_and_return_m2m_set_interface.tpl', 'utf8'),\r\n        filter: {\r\n            params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent]\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Object_Agent_Many_to_Many_CompositeInput__Object]: {\r\n        title: Titles.Create_Object_Agent_Many_to_Many_CompositeInput__Object,\r\n        template: fs.readFileSync('./app/templates/standard/create_object_agent_many_to_many_compositeinput.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_object_agent_many_to_many_compositeinput_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_MANY_TO_MANY_COMPOSITEINPUT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Create_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/create_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_model_agent_listobject_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Update_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_listobject_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__Object]: {\r\n        title: Titles.Update_Object_Agent_Value__Object,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_object.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_object_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Object_Agent_Value__Object_With_Object]: {\r\n        title: Titles.Update_Object_Agent_Value__Object_With_Object,\r\n        template: fs.readFileSync('./app/templates/standard/update_model_agent_object_with_model.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_model_agent_object_with_model_interface.tpl', 'utf8'),\r\n        templates: {\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD,\r\n            [FunctionTemplateKeys.UpdateModel]: {\r\n                key: FunctionTemplateKeys.UpdateModel,\r\n                nodeTypes: [NodeTypes.Model]\r\n            }\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Update,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Delete_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Delete_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_model_agent_listobject_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Delete_M2M_By_Reference]: {\r\n        title: FunctionTypes.Delete_M2M_By_Reference,\r\n        template: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference_interface.tpl', 'utf8'),\r\n        test: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference_test.tpl', 'utf8'),\r\n        controller: fs.readFileSync('./app/templates/standard/delete_m2m_by_reference_controller.tpl', 'utf8'),\r\n        filter: {\r\n            params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent]\r\n        },\r\n        permission: {\r\n            params: [FunctionTemplateKeys.Model, FunctionTemplateKeys.Agent]\r\n        },\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Delete,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Object_Agent_Value__IListObject]: {\r\n        title: Titles.Get_Object_Agent_Value__IListObject,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_listobject.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_listobject_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_AGENT_OBJECT_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Create_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/create_agent_childparent_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/create_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Update_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/update_agent_childparent_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/update_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_Parent$Child_Agent_Value__IListChild]: {\r\n        title: Titles.Get_Parent$Child_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/get_agent_childparent_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/get_agent_childparent_listchild_interface.tpl', 'utf8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_AGENT_PARENT_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        parentGet: true,\r\n        method: Methods.GetAll,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n\r\n    [FunctionTypes.Get_Object_Agent_Value__Object]: {\r\n        title: Titles.Get_Object_Agent_Value__Object,\r\n        template: fs.readFileSync('./app/templates/standard/get_model_agent_object.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_model_agent_object_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.OBJECT\r\n        },\r\n        isList: false,\r\n        method: Methods.Get,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Get_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Get_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/get_agent_manytomany_listchild_interface.tpl', 'utf8'),\r\n        constraints: {\r\n            ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD\r\n        }, output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        parentGet: true,\r\n        isList: true,\r\n        method: Methods.GetAll,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Create_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Create_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/create_agent_manytomany_listchild_interface.tpl', 'utf8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Create,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Update_ManyToMany_Agent_Value__IListChild]: {\r\n        title: Titles.Update_ManyToMany_Agent_Value__IListChild,\r\n        template: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild.tpl', 'utf8'),\r\n        interface: fs.readFileSync('./app/templates/standard/update_agent_manytomany_listchild_interface.tpl', 'utf8'),\r\n        constraints: { ...COMMON_CONSTRAINTS_MANYTOMANY_CHILD_METHOD },\r\n        output: {\r\n            ...COMMON_OUTPUT.LIST\r\n        },\r\n        isList: true,\r\n        method: Methods.Update,\r\n        ...COMMON_FUNCTION_REQUIREMENTS,\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    },\r\n    [FunctionTypes.Can_Execute_Agent_Parent_In_Valid_List]: {\r\n        title: Titles.Can_Execute_Agent_Parent_In_Valid_List,\r\n        template: fs.readFileSync('./app/templates/can_execute/can_execute_childparent_valid_list.tpl', 'utf8'),\r\n        constraints: {\r\n            [FunctionTemplateKeys.AgentType]: {\r\n                [FunctionConstraintKeys.IsAgent]: true,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.AgentType\r\n            },\r\n            [FunctionTemplateKeys.AgentDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                key: FunctionTemplateKeys.AgentDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.Model]: {\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsModel]: true,\r\n                key: FunctionTemplateKeys.Model\r\n            },\r\n            [FunctionTemplateKeys.ModelDeterminingProperty]: {\r\n                [FunctionConstraintKeys.IsChild]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                [FunctionConstraintKeys.IsProperty]: true,\r\n                [FunctionConstraintKeys.IsEnumerable]: true,\r\n                key: FunctionTemplateKeys.ModelDeterminingProperty\r\n            },\r\n            [FunctionTemplateKeys.AgentInstance]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.AgentType,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.AgentInstance,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            },\r\n            [FunctionTemplateKeys.Value]: {\r\n                [FunctionConstraintKeys.IsTypeOf]: FunctionTemplateKeys.Model,\r\n                [FunctionConstraintKeys.IsSingleLink]: true,\r\n                key: FunctionTemplateKeys.Value,\r\n                [FunctionConstraintKeys.IsInstanceVariable]: true,\r\n                [FunctionConstraintKeys.IsInputVariable]: true\r\n            }\r\n        },\r\n        output: {\r\n            ...COMMON_OUTPUT.BOOL\r\n        },\r\n        [FUNCTION_REQUIREMENT_KEYS.CLASSES]: {},\r\n        attachment_methods: {},\r\n        propreties: {},\r\n        template_keys: { ...COMMON_FUNCTION_TEMPLATE_KEYS }\r\n    }\r\n}\r\nexport const MethodTemplateKeys = {\r\n    stream_process_change_parameter: 'stream_process_change_parameter',\r\n    update_with: 'update_with'\r\n}\r\nexport const FunctionMethodTypes = {\r\n    GET: 'GET',\r\n    CREATE: 'CREATE',\r\n    DELETE: 'DELETE',\r\n    UPDATE: 'UPDATE'\r\n}\r\nexport const ConditionTypes = {\r\n    InEnumerable: 'in-enumeration',\r\n    InExtension: 'in-extension',\r\n    MatchReference: 'match-reference',\r\n    MatchManyReferenceParameter: 'match-many-reference-parameter'\r\n}\r\nexport const ConditionCases = {\r\n    [ConditionTypes.MatchReference]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    },\r\n    [ConditionTypes.MatchManyReferenceParameter]: {\r\n        $matching: true,\r\n        notmatching: false\r\n    }\r\n}\r\nexport const ConditionTypeParameters = {\r\n    RefManyToMany: 'refManyToMany',\r\n    RefManyToManyProperty: 'refManyToManyProperty',\r\n    Ref1: 'ref1',\r\n    Ref2: 'ref2',\r\n    Ref1UseId: 'ref1UseId',\r\n    Ref2UseId: 'ref2UseId',\r\n    Ref1Property: 'ref1Property',\r\n    Ref2Property: 'ref2Property'\r\n}\r\n\r\nexport const ConditionTypeOptions = {\r\n    IsFalse: 'is-false',\r\n    IsTrue: 'is-true'\r\n}\r\n\r\nexport const ConditionFunctionSetups = {\r\n    [ConditionTypes.MatchReference]: {},\r\n    [ConditionTypes.MatchManyReferenceParameter]: {},\r\n    [ConditionTypes.InEnumerable]: {}\r\n}\r\nObject.keys(MethodFunctions).map(key => {\r\n    if (MethodFunctions[key].constraints) {\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions = ConditionFunctionSetups[ConditionTypes.MatchReference].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchReference].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions = ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.MatchManyReferenceParameter].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions = ConditionFunctionSetups[ConditionTypes.InEnumerable].functions || {}\r\n        ConditionFunctionSetups[ConditionTypes.InEnumerable].functions[key] = {\r\n            constraints: { ...MethodFunctions[key].constraints }\r\n        };\r\n    }\r\n});\r\n\r\nexport const FunctionPerpetrators = {\r\n    Agent: 'Agent',\r\n    System: 'System' // This is theorhetical atm 23.05.2019\r\n}\r\n\r\nexport const ReturnTypes = {\r\n    CHILD: 'CHILD',\r\n    OBJECT: 'OBJECT',\r\n    LISTCHILD: 'LISTCHILD',\r\n    LISTOBJECT: 'LISTOBJECT', //May end up being a different dimension,\r\n    BOOL: 'BOOL'\r\n}\r\n\r\nexport function hasTemplate(templateString) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n    return hasTemplate;\r\n}\r\n\r\nexport function bindTemplate(templateString, data) {\r\n    var singularSymbol = '@';\r\n    var regex = new RegExp('({{)[A-Za-z0-9_.' + singularSymbol + ' ,\\'\\|]*(}})', 'g');\r\n    var hasTemplate = regex.test(templateString);\r\n    Object.keys(data).map(t => {\r\n        if (!data[t + '#lower']) {\r\n            data[t + '#lower'] = `${data[t]}`.toLowerCase();\r\n        }\r\n    });\r\n\r\n    if (hasTemplate) {\r\n        for (var t in data) {\r\n            var subregex = new RegExp('({{)' + t + '(}})', 'g');\r\n            var val = data[t];\r\n            templateString = templateString.replace(subregex, val === null || val === undefined ? '' : val);\r\n        }\r\n    }\r\n\r\n    return templateString;\r\n\r\n}","import * as Titles from '../components/titles'\r\nimport { NodeTypes, NodeTypeColors, NodeProperties, NodePropertiesDirtyChain, DIRTY_PROP_EXT, LinkProperties, LinkType, LinkPropertyKeys, NodePropertyTypes, GroupProperties, FunctionGroups, LinkEvents } from '../constants/nodetypes';\r\nimport { Functions, FunctionTemplateKeys, FunctionConstraintKeys, FUNCTION_REQUIREMENT_KEYS, INTERNAL_TEMPLATE_REQUIREMENTS } from '../constants/functiontypes';\r\nimport { GetNodeProp, GetLinkProperty, GetNodeTitle, GetGroupProperty, GetCurrentGraph, GetRootGraph } from '../actions/uiactions';\r\nimport { uuidv4 } from '../utils/array';\r\nexport function createGraph() {\r\n    return {\r\n        id: uuidv4(),\r\n        version: {\r\n            major: 0,\r\n            minor: 0,\r\n            build: 0\r\n        },\r\n        workspace: '',\r\n        title: Titles.DefaultGraphTitle,\r\n        path: [],\r\n        namespace: '',\r\n        //Groups\r\n        groups: [],\r\n        groupLib: {},\r\n        groupsNodes: {}, // group => { node}\r\n        nodesGroups: {}, // node => {group}\r\n        childGroups: {}, // group => {group}\r\n        parentGroup: {}, // group => {group}\r\n        //Groups \r\n        //Reference nodes\r\n        referenceNodes: {},\r\n        //Reference nodes\r\n        nodeLib: {},\r\n        nodes: [],\r\n        nodeLinks: {}, // A library of nodes, and each nodes that it connects.\r\n        nodeConnections: {}, // A library of nodes, and each nodes links\r\n        linkLib: {},\r\n        links: [],\r\n        graphs: {},\r\n        classNodes: {},\r\n        functionNodes: {}, // A function nodes will be run through for checking constraints.\r\n        updated: null,\r\n        visibleNodes: {}, //Nodes that are visible now, and used to calculate the visibility of other nodes.\r\n        appConfig: {\r\n            \"Logging\": {\r\n                \"IncludeScopes\": false,\r\n                \"LogLevel\": {\r\n                    \"Default\": \"Debug\",\r\n                    \"System\": \"Information\",\r\n                    \"Microsoft\": \"Information\"\r\n                }\r\n            },\r\n            \"AppSettings\": {\r\n                \"Local-AuthorizationKey\": \"C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==\",\r\n                \"Local-EndPointUrl\": \"https://localhost:8081\",\r\n                \"use_local\": \"true\",\r\n                \"EndPointUrl\": \"\",\r\n                \"AuthorizationKey\": \"\",\r\n                \"DatabaseId\": \"red-db-001\",\r\n                \"AssemblyPrefixes\": \"Smash;RedQuick\",\r\n                \"Use-SingleCollection\": \"true\",\r\n                \"storage-key\": \"UseDevelopmentStorage=true\",\r\n                \"single-thread\": true,\r\n                \"ConfirmEmailController\": \"Account\",\r\n                \"ConfirmEmailAction\": \"ConfirmEmail\",\r\n                \"HomeAction\": \"Index\",\r\n                \"HomeController\": \"Home\",\r\n                \"ResetPasswordAction\": \"ResetPassword\",\r\n                \"ResetPasswordController\": \"Account\",\r\n                \"SecurityKey\": \"ajskdflajsdfklas20klasdkfj9laksdjfl4aksdjf3kanvdlnaekf\",\r\n                \"Domain\": \"https://localhost:13424\",\r\n                \"TokenExpirationInMinutes\": \"250\",\r\n                \"DomainPort\": \"13424\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const GraphKeys = {\r\n    NAMESPACE: 'namespace',\r\n    SERVER_SIDE_SETUP: 'server_side_setup'\r\n}\r\nexport function updateWorkSpace(graph, options) {\r\n    let { workspace } = options;\r\n    graph.workspace = workspace;\r\n    return graph;\r\n}\r\n\r\nexport function incrementBuild(graph) {\r\n    graph.version.build++;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMinor(graph) {\r\n    graph.version.minor++;\r\n    return graph;\r\n}\r\n\r\nexport function incrementMajor(graph) {\r\n    graph.version.major++;\r\n    return graph;\r\n}\r\n\r\nexport function updateGraphTitle(graph, ops) {\r\n    var { text } = ops;\r\n    graph.title = text;\r\n    return graph;\r\n}\r\n\r\nexport function addNewSubGraph(graph) {\r\n    var newgraph = createGraph();\r\n    newgraph.title = Titles.DefaultSubGraphTitle;\r\n    graph.graphs[newgraph.id] = newgraph;\r\n    return graph;\r\n}\r\nexport function removeSubGraph(graph, id) {\r\n    delete graph.graphs[id];\r\n    return graph\r\n}\r\n\r\nexport function getSubGraphs(graph) {\r\n    return graph && graph.graphs ? Object.keys(graph.graphs || {}).map(t => graph.graphs[t]) : [];\r\n}\r\n\r\nexport function getSubGraph(graph, scopes) {\r\n    var result = graph;\r\n\r\n    scopes.map(scope => {\r\n        result = graph.graphs[scope];\r\n    });\r\n\r\n    return result;\r\n}\r\nexport function getScopedGraph(graph, options) {\r\n    var { scope } = options;\r\n    if (scope && scope.length) {\r\n        console.log(scope);\r\n        scope.map((s, i) => {\r\n            graph = graph.graphs[s];\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function setScopedGraph(root, options) {\r\n    var { scope, graph } = options;\r\n    if (scope && scope.length) {\r\n        var currentGraph = root;\r\n        scope.map((s, i) => {\r\n            if (i === scope.length - 1) {\r\n                currentGraph.graphs[s] = graph;\r\n            } else {\r\n                currentGraph = currentGraph.graphs[s];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        root = graph;\r\n    }\r\n    return root;\r\n}\r\n\r\nexport function newGroup(graph, callback) {\r\n    let group = createGroup();\r\n    let result = addGroup(graph, group);\r\n    if (callback) {\r\n        callback(group);\r\n    }\r\n    return result;\r\n}\r\nexport function addLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let leaves = graph.groupLib[id].leaves || [];\r\n    leaves = [...leaves, leaf].unique(x => x);\r\n\r\n    //Groups => nodes\r\n    graph.groupsNodes[id] = graph.groupsNodes[id] || {}\r\n    graph.groupsNodes[id][leaf] = true;\r\n    graph.groupsNodes = {\r\n        ...graph.groupsNodes\r\n    }\r\n\r\n    //Nodes => groups\r\n    graph.nodesGroups[leaf] = graph.nodesGroups[leaf] || {}\r\n    graph.nodesGroups[leaf][id] = true;\r\n    graph.nodesGroups = {\r\n        ...graph.nodesGroups\r\n    }\r\n\r\n\r\n\r\n    graph.groupLib[id].leaves = leaves;\r\n    return graph;\r\n}\r\nexport function removeLeaf(graph, ops) {\r\n    var { leaf, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    if (group) {\r\n        let leaves = group.leaves || [];\r\n        leaves = [...leaves.filter(t => t !== leaf)];\r\n        graph.groupLib[id].leaves = leaves;\r\n    }\r\n    if (graph.groupsNodes[id]) {\r\n        if (graph.groupsNodes[id][leaf]) {\r\n            delete graph.groupsNodes[id][leaf];\r\n        }\r\n        if (Object.keys(graph.groupsNodes[id]).length === 0) {\r\n            delete graph.groupsNodes[id];\r\n            graph.groups = [...graph.groups.filter(x => x !== id)];\r\n            delete graph.groupLib[id];\r\n        }\r\n        graph.groupsNodes = {\r\n            ...graph.groupsNodes\r\n        }\r\n    }\r\n\r\n    if (graph.nodesGroups[leaf]) {\r\n        if (graph.nodesGroups[leaf][id]) {\r\n            delete graph.nodesGroups[leaf][id];\r\n        }\r\n        if (Object.keys(graph.nodesGroups[leaf]).length === 0) {\r\n            delete graph.nodesGroups[leaf];\r\n        }\r\n        graph.nodesGroups = {\r\n            ...graph.nodesGroups\r\n        }\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\n\r\n\r\nexport function addGroupToGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n    let groups = group.groups || [];\r\n\r\n    group.groups = [...groups, groupId].unique(x => x);\r\n    graph.groupLib[id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n\r\n    //Groups need to know who contains them,\r\n    graph.childGroups[id] = graph.childGroups[id] || {};\r\n    graph.childGroups[id][groupId] = true;\r\n    // and also the containers to know about the groups\r\n    graph.parentGroup[groupId] = graph.parentGroup[groupId] || {};\r\n    graph.parentGroup[groupId][id] = true;\r\n\r\n\r\n    return graph;\r\n}\r\nexport function removeGroupFromGroup(graph, ops) {\r\n    let { groupId, id } = ops;\r\n    let group = graph.groupLib[id];\r\n\r\n    group.groups = [...group.groups.filter(x => x !== groupId)];\r\n    graph.groupLib[id] = { ...group };\r\n    if (graph.childGroups) {\r\n        if (graph.childGroups[id]) {\r\n            delete graph.childGroups[id][groupId];\r\n            if (!Object.keys(graph.childGroups[id]).length) {\r\n                delete graph.childGroups[id];\r\n            }\r\n        }\r\n\r\n        if (graph.parentGroup[groupId]) {\r\n            delete graph.parentGroup[groupId][id];\r\n            if (!Object.keys(graph.parentGroup[groupId]).length) {\r\n                delete graph.childGroups[groupId];\r\n            }\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function clearGroup(graph, ops) {\r\n    var { id } = ops\r\n    for (let i in graph.groupsNodes[id]) {\r\n        if (graph.nodesGroups[i]) {\r\n            delete graph.nodesGroups[i][id];\r\n            if (Object.keys(graph.nodesGroups[i]).length === 0) {\r\n                delete graph.nodesGroups[i];\r\n            }\r\n        }\r\n    }\r\n    for (let i in graph.childGroups[id]) {\r\n        if (graph.parentGroup[i]) {\r\n            delete graph.parentGroup[i][id]\r\n            if (Object.keys(graph.parentGroup[i]).length === 0) {\r\n                delete graph.parentGroup[i];\r\n            }\r\n        }\r\n    }\r\n    graph.groups = [...graph.groups.filter(x => x !== id)];\r\n    delete graph.groupLib[id]\r\n    delete graph.childGroups[id];\r\n    delete graph.groupsNodes[id];\r\n\r\n    return graph;\r\n}\r\nexport function createValidator() {\r\n    return {\r\n        properties: {}\r\n    }\r\n}\r\n\r\nexport function createMethodValidation(methodType) {\r\n    let res = {\r\n        methods: {\r\n        }\r\n    }\r\n\r\n    if (res && !res.methods[methodType]) {\r\n        res.methods[methodType] = createMethodValidationType();\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nexport function createMethodValidationType() {\r\n    return {};\r\n}\r\nexport function getMethodValidationType(methodValidation, methodType) {\r\n    var { methods } = methodValidation;\r\n    if (methods && methods[methodType]) {\r\n        return methods[methodType];\r\n    }\r\n    return null;\r\n}\r\nexport function addMethodValidationForParamter(methodValidation, methodType, methodParam, methedParamProperty) {\r\n    methodValidation = methodValidation || createMethodValidation(methodType);\r\n    if (getMethodValidationType(methodValidation, methodType)) {\r\n        let methodValidationType = getMethodValidationType(methodValidation, methodType);\r\n        if (methodParam) {\r\n            methodValidationType[methodParam] = methodValidationType[methodParam] || createProperyContainer();\r\n            if (methedParamProperty && methodValidationType[methodParam]) {\r\n                methodValidationType[methodParam].properties[methedParamProperty] = methodValidationType[methodParam].properties[methedParamProperty] || createValidatorProperty();\r\n            }\r\n        }\r\n    }\r\n    return methodValidation;\r\n}\r\nexport function createProperyContainer() {\r\n    return {\r\n        properties: {}\r\n    }\r\n}\r\nexport function getMethodValidationForParameter(methodValidation, methodType, methodParam, methodProperty) {\r\n    methodValidation = methodValidation || addMethodValidationForParamter(methodValidation, methodType, methodParam);\r\n    if (methodValidation) {\r\n        let temp = getMethodValidationType(methodValidation, methodType);\r\n        if (temp) {\r\n            if (temp[methodParam] && temp[methodParam]) {\r\n                return temp[methodParam];\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport const createExecutor = createValidator;\r\n\r\nexport function createValidatorProperty() {\r\n    return {\r\n        validators: {\r\n        }\r\n    }\r\n}\r\nexport function addValidatator(validator, options) {\r\n    validator.properties[options.id] = validator.properties[options.id] || createValidatorProperty();\r\n    if (options.validator)\r\n        validator.properties[options.id].validators[options.validator] = options.validatorArgs;\r\n\r\n    return validator;\r\n}\r\nexport function removeValidatorValidation(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator];\r\n\r\n    return _validator;\r\n}\r\nexport function removeValidator(validator, options) {\r\n    delete validator.properties[options.id];\r\n    return validator;\r\n}\r\n\r\nexport function getValidatorItem(item, options) {\r\n    var { property, validator } = options;\r\n    return item.properties[property].validators[validator];\r\n}\r\n\r\nexport function getValidatorProperties(validator) {\r\n    return validator ? validator.properties : null;\r\n}\r\nexport function setDepth(graph, options) {\r\n    var { depth } = options;\r\n    graph.depth = depth;\r\n\r\n    return graph;\r\n}\r\nexport function newNode(graph) {\r\n    let node = createNode();\r\n    return addNode(graph, node);\r\n}\r\nexport function createExtensionDefinition() {\r\n    return {\r\n        //The code generation will define the unique 'value'.\r\n        config: {\r\n            //If this definition is a list or some sort of collection.\r\n            isEnumeration: false,\r\n            // If not, then it is a dictionary, and will have some sort of property that will  be considered the value.\r\n            dictionary: {},\r\n            // A list of objects, with the same shape as the dictionary.\r\n            list: []\r\n        },\r\n        definition: {}\r\n    }\r\n}\r\nexport function defaultExtensionDefinitionType() {\r\n    return 'string';\r\n}\r\nexport function removeNode(graph, options = {}) {\r\n    let { id } = options;\r\n    let existNodes = getNodesByLinkType(graph, { exist: true, id, direction: TARGET, type: LinkType.Exist });\r\n\r\n    graph = incrementBuild(graph);\r\n    //links\r\n    graph = clearLinks(graph, options);\r\n\r\n    //groups \r\n    graph = removeNodeFromGroups(graph, options);\r\n\r\n    if (graph.functionNodes && graph.functionNodes[id]) {\r\n        delete graph.functionNodes[id];\r\n        graph.functionNodes = { ...graph.functionNodes };\r\n    }\r\n    if (graph.classNodes && graph.classNodes[id]) {\r\n        delete graph.classNodes[id];\r\n        graph.classNodes = { ...graph.classNodes };\r\n    }\r\n    delete graph.nodeLib[id];\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes.filter(x => x !== id)];\r\n    if (existNodes) {\r\n        existNodes.map(en => {\r\n            graph = removeNode(graph, { id: en.id });\r\n        })\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function GetManyToManyNodes(state, ids) {\r\n    if (state && ids && ids.length) {\r\n\r\n        return NodesByType(state, NodeTypes.Model).filter(x => GetNodeProp(x, NodeProperties.ManyToManyNexus)).filter(x => {\r\n            return !(ids || []).some(t => {\r\n                return (GetNodeProp(x, NodeProperties.ManyToManyNexusTypes) || []).indexOf(t) !== -1;\r\n            });\r\n        });\r\n    }\r\n    return [];\r\n}\r\nexport function getPropertyNodes(graph, id) {\r\n    return getNodesByLinkType(graph, { id, direction: SOURCE, type: LinkType.PropertyLink });\r\n}\r\nfunction isEmpty(obj) {\r\n    return obj && Object.keys(obj).length === 0;\r\n}\r\nfunction clearGroupDeep(graph, options) {\r\n    var { id, callback } = options;\r\n    var success = true;\r\n    if (graph.childGroups[id]) {\r\n        for (var i in graph.childGroups[id]) {\r\n            var ok = false;\r\n            graph = clearGroupDeep(graph, {\r\n                id: i,\r\n                callback: (v) => {\r\n                    ok = v;\r\n                    success = success && v;\r\n                }\r\n            })\r\n            delete graph.childGroups[id][i];\r\n        }\r\n    }\r\n    if (success) {\r\n        //If the children were empty this can be cleared out\r\n        if (!graph.groupLib[id] || !graph.groupLib[id].leaves || !graph.groupLib[id].leaves.length) {\r\n            if (!graph.groupLib[id] || !graph.groupLib[id].groups || !graph.groupLib[id].groups.length) {\r\n                //if these conditions are met.\r\n                delete graph.groupLib[id];\r\n                graph.groups = [...graph.groups.filter(x => x !== id)];\r\n                delete graph.childGroups[id];\r\n                if (graph.parentGroup[id]) {\r\n                    for (var i in graph.parentGroup[id]) {\r\n                        graph = removeGroupFromGroup(graph, { groupId: id, id: i });\r\n                        graph = clearGroupDeep(graph, { id: i });\r\n                        if (graph.childGroups[i])\r\n                            delete graph.childGroups[i][id]\r\n                    }\r\n                    delete graph.parentGroup[id];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (callback) {\r\n            callback(false);\r\n        }\r\n    }\r\n    return graph;\r\n}\r\nexport function removeNodeFromGroups(graph, options) {\r\n    let { id } = options;\r\n    let groupsContainingNode = [];\r\n    //nodesGroups\r\n    if (graph.nodesGroups[id]) {\r\n        groupsContainingNode = Object.keys(graph.nodesGroups[id]);\r\n        groupsContainingNode.map(group => {\r\n            graph = removeLeaf(graph, { leaf: id, id: group })\r\n        })\r\n    }\r\n\r\n    //groupsNodes\r\n    if (graph.groupsNodes) {\r\n        groupsContainingNode.map(group => {\r\n            if (graph.groupsNodes[group]) {\r\n                if (graph.groupsNodes[group][id]) {\r\n                    delete graph.groupsNodes[group][id]\r\n                }\r\n\r\n                if (Object.keys(graph.groupsNodes[group]).length === 0) {\r\n                    delete graph.groupsNodes[group];\r\n                }\r\n            }\r\n            graph = clearGroupDeep(graph, { id: group });\r\n        })\r\n    }\r\n\r\n\r\n    return graph;\r\n}\r\nexport function clearLinks(graph, options) {\r\n    let { id } = options;\r\n    let linksToRemove = getAllLinksWithNode(graph, id);\r\n    for (let i = 0; i < linksToRemove.length; i++) {\r\n        let link = linksToRemove[i];\r\n        graph = removeLink(graph, link);\r\n    }\r\n    return graph;\r\n\r\n}\r\n\r\nexport function addNode(graph, node) {\r\n    graph.nodeLib[node.id] = node;\r\n    graph.nodeLib = { ...graph.nodeLib };\r\n    graph.nodes = [...graph.nodes, node.id];\r\n    graph = { ...graph };\r\n    graph = incrementBuild(graph);\r\n    return graph;\r\n}\r\nexport function addGroup(graph, group) {\r\n    graph.groupLib[group.id] = group;\r\n    graph.groupLib = { ...graph.groupLib };\r\n    graph.groups = [...graph.groups, group.id].unique(x => x);\r\n    graph = { ...graph };\r\n    return graph;\r\n}\r\n\r\nexport function addNewPropertyNode(graph, options) {\r\n    return addNewNodeOfType(graph, options, NodeTypes.Property);\r\n}\r\n\r\nconst DEFAULT_PROPERTIES = [\r\n    { title: 'Owner', type: NodePropertyTypes.STRING },\r\n    { title: 'Id', type: NodePropertyTypes.STRING },\r\n    { title: 'Created', type: NodePropertyTypes.DATETIME },\r\n    { title: 'Updated', type: NodePropertyTypes.DATETIME },\r\n    { title: 'Deleted', type: NodePropertyTypes.BOOLEAN },\r\n    { title: 'Version', type: NodePropertyTypes.STRING }\r\n].map(t => {\r\n    t.nodeType = NodeTypes.Property;\r\n    return t;\r\n});\r\n\r\nexport function addDefaultProperties(graph, options) {\r\n    // updateNodeProperty\r\n    var propertyNodes = GetLinkChainFromGraph(graph, {\r\n        id: options.parent,\r\n        links: [{\r\n            direction: SOURCE,\r\n            type: LinkType.PropertyLink\r\n        }]\r\n    }).map(t => GetNodeProp(t, NodeProperties.UIText));\r\n    DEFAULT_PROPERTIES.filter(t => {\r\n        return propertyNodes.indexOf(t.title) === -1;\r\n    }).map(dp => {\r\n        graph = addNewNodeOfType(graph, options, dp.nodeType, new_node => {\r\n            graph = updateNodeProperty(graph, {\r\n                id: new_node.id,\r\n                prop: NodeProperties.UIText,\r\n                value: dp.title\r\n            });\r\n            graph = updateNodeProperty(graph, {\r\n                id: new_node.id,\r\n                prop: NodeProperties.IsDefaultProperty,\r\n                value: true\r\n            });\r\n            graph = updateNodeProperty(graph, {\r\n                id: new_node.id,\r\n                prop: NodeProperties.UIAttributeType,\r\n                value: dp.type\r\n            });\r\n        })\r\n    });\r\n\r\n    return graph;\r\n}\r\n\r\nfunction updateNode(node, options) {\r\n    if (options.node) {\r\n        Object.apply(node.properties, JSON.parse(JSON.stringify(options.node.properties)));\r\n    }\r\n}\r\nexport function addNewNodeOfType(graph, options, nodeType, callback) {\r\n    let { parent, linkProperties, groupProperties } = options;\r\n    let node = createNode(nodeType);\r\n    if (options.node) {\r\n        updateNode(node, options);\r\n        if (nodeType === NodeTypes.ReferenceNode) {\r\n            if (options.rootNode) {\r\n                options.rootNode.referenceNodes[graph.id] = {\r\n                    ...(options.rootNode.referenceNodes[graph.id] || {}),\r\n                    ...({\r\n                        [node.id]: options.node.id\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    graph = addNode(graph, node);\r\n    if (parent) {\r\n        graph = newLink(graph, { source: parent, target: node.id, properties: linkProperties ? linkProperties.properties : null });\r\n    }\r\n    if (options.links) {\r\n        options.links.map(link => {\r\n            graph = newLink(graph, { source: node.id, target: link.target, properties: link.linkProperties ? link.linkProperties.properties : null });\r\n        })\r\n    }\r\n    graph = updateNodeProperty(graph, { id: node.id, prop: NodeProperties.NODEType, value: nodeType });\r\n    if (options.properties) {\r\n        for (var p in options.properties) {\r\n            graph = updateNodeProperty(graph, { id: node.id, prop: p, value: options.properties[p] });\r\n        }\r\n    }\r\n    if (groupProperties) {\r\n        graph = updateNodeGroup(graph, { id: node.id, groupProperties, parent })\r\n    }\r\n    if (callback) {\r\n        callback(node);\r\n    }\r\n\r\n    return graph;\r\n}\r\nexport function updateNodeGroup(graph, options) {\r\n    var { id, groupProperties, parent } = options;\r\n    var group = null;\r\n    if (!hasGroup(graph, parent)) {\r\n        var group = createGroup();\r\n        graph = addGroup(graph, group);\r\n        graph = updateNodeProperty(graph, {\r\n            id: parent,\r\n            value: { group: group.id },\r\n            prop: NodeProperties.Groups\r\n        });\r\n        graph = addLeaf(graph, { leaf: parent, id: group.id });\r\n        var grandParent = GetNodeProp(graph.nodeLib[parent], NodeProperties.GroupParent);\r\n        if (grandParent && graph.groupLib[grandParent]) {\r\n            var gparentGroup = graph.groupLib[grandParent];\r\n            if (gparentGroup) {\r\n                var ancestores = getGroupAncenstors(graph, gparentGroup.id);\r\n                graph = addGroupToGroup(graph, {\r\n                    id: gparentGroup.id,\r\n                    groupId: group.id\r\n                });\r\n                ancestores.map(anc => {\r\n                    graph = addGroupToGroup(graph, {\r\n                        id: anc,\r\n                        groupId: group.id\r\n                    });\r\n                })\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        let nodeGroupProp = GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups);\r\n        group = getGroup(graph, nodeGroupProp.group);\r\n    }\r\n\r\n    if (group) {\r\n        graph = addLeaf(graph, { leaf: id, id: group.id });\r\n        graph = updateNodeProperty(graph, {\r\n            id,\r\n            value: group.id,\r\n            prop: NodeProperties.GroupParent\r\n        });\r\n    }\r\n\r\n    return graph;\r\n}\r\nfunction getGroupAncenstors(graph, id) {\r\n    var result = [];\r\n    if (graph.parentGroup[id]) {\r\n        for (var i in graph.parentGroup[id]) {\r\n            result = [...result, ...getGroupAncenstors(graph, i)];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getGroup(graph, id) {\r\n    return graph.groupLib[id];\r\n}\r\nfunction hasGroup(graph, parent) {\r\n    return !!(graph.nodeLib[parent] && GetNodeProp(graph.nodeLib[parent], NodeProperties.Groups));\r\n}\r\nexport function GetNode(graph, id) {\r\n    if (graph && graph.nodeLib) {\r\n        return graph.nodeLib[id];\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n\r\nexport function GetGroup(graph, id) {\r\n    if (graph && graph.groupLib) {\r\n        return graph.groupLib[id];\r\n    }\r\n    return null;\r\n}\r\nexport function applyConstraints(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n    if (functionNodes) {\r\n        for (let i in functionNodes) {\r\n            let node = GetNode(graph, i);\r\n            if (node) {\r\n                var functionType = GetNodeProp(node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject) {\r\n                        graph = checkConstraints(graph, { id: i, functionConstraints: functionConstraintObject });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let validationNodes = NodesByType(graph, NodeTypes.Validator);\r\n    validationNodes.map(x => {\r\n        graph = applyValidationNodeRules(graph, x);\r\n    })\r\n    return graph;\r\n}\r\n\r\nfunction applyValidationNodeRules(graph, node) {\r\n\r\n    let validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (validator) {\r\n        var nodesLinks = getNodesLinkedTo(graph, { id: node.id });\r\n        var validatorProperties = getValidatorProperties(validator);\r\n        Object.keys(validatorProperties).map(property => {\r\n            if (graph.nodeLinks[property] && graph.nodeLinks[property][node.id]) {\r\n                //link between nodes exists.\r\n            }\r\n            else {\r\n                //link between nodes exists.\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction NodesByType(graph, nodeType, options = {}) {\r\n\r\n    var currentGraph = graph;\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs && currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    return [];\r\n}\r\nexport function existsLinkBetween(graph, options) {\r\n    var { source, target, type } = options;\r\n    var link = findLink(graph, { source, target })\r\n    if (link) {\r\n        return GetLinkProperty(link, LinkPropertyKeys.TYPE) === type;\r\n    }\r\n    return false;\r\n}\r\nexport function updateReferenceNodes(root) {\r\n    if (root && root.referenceNodes) {\r\n        for (var scope in root.referenceNodes) {\r\n            if (root.graphs && root.graphs[scope]) {\r\n                let scopedGraph = root.graphs[scope];\r\n                for (let nodeId in root.referenceNodes[scope]) {\r\n                    var masterNode = root.nodeLib[root.referenceNodes[scope][nodeId]];\r\n                    if (masterNode) {\r\n                        var refNode = GetNode(scopedGraph, nodeId);\r\n                        if (refNode) {\r\n                            //may be more properties later.\r\n                            refNode.properties.text = masterNode.properties.text;\r\n                            refNode.properties.referenceType = masterNode.properties.nodeType;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}\r\nexport function constraintSideEffects(graph) {\r\n    let functionNodes = graph.functionNodes;\r\n\r\n    if (functionNodes) {\r\n        let classes_that_must_exist = [];\r\n        for (let i in functionNodes) {\r\n            var function_node = GetNode(graph, i);\r\n            if (function_node) {\r\n                var functionType = GetNodeProp(function_node, NodeProperties.FunctionType);\r\n                if (functionType) {\r\n                    var functionConstraintObject = Functions[functionType];\r\n                    if (functionConstraintObject && functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES]) {\r\n                        let functionConstraintRequiredClasses = functionConstraintObject[FUNCTION_REQUIREMENT_KEYS.CLASSES];\r\n                        if (functionConstraintRequiredClasses) {\r\n                            for (let j in functionConstraintRequiredClasses) {\r\n                                //Get the model constraint key.\r\n                                //Should be able to find the singular model that is connected to the functionNode and children, if it exists.\r\n                                let constraintModelKey = functionConstraintRequiredClasses[j][INTERNAL_TEMPLATE_REQUIREMENTS.MODEL];\r\n                                if (constraintModelKey) {\r\n                                    var constraint_nodes = getNodesFunctionsConnected(graph, { id: i, constraintKey: constraintModelKey });\r\n                                    var nodes_one_step_down_the_line = [];\r\n                                    constraint_nodes.map(cn => {\r\n                                        var nextNodes = getNodesLinkedTo(graph, { id: cn.id });\r\n                                        nodes_one_step_down_the_line.push(...nextNodes);\r\n                                    });\r\n                                    nodes_one_step_down_the_line.map(node => {\r\n                                        classes_that_must_exist.push({\r\n                                            nodeId: node.id,\r\n                                            functionNode: function_node.id,\r\n                                            key: constraintModelKey,\r\n                                            class: j\r\n                                        })\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            classes_that_must_exist = [...classes_that_must_exist.unique(x => {\r\n                return JSON.stringify(x);\r\n            })]\r\n            //Remove class nodes that are no longer cool.\r\n            Object.keys(graph.classNodes).map(i => {\r\n                if (!classes_that_must_exist.find(cls => {\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    return matchObject(res, cls);\r\n                })) {\r\n                    graph = removeNode(graph, { id: i })\r\n                }\r\n                else {\r\n\r\n                }\r\n            });\r\n            //Could make this faster by using a dictionary \r\n            classes_that_must_exist.map(cls => {\r\n                var matching_nodes = Object.keys(graph.classNodes).filter(i => {\r\n\r\n                    let _cnode = graph.nodeLib[i];\r\n                    var res = GetNodeProp(_cnode, NodeProperties.ClassConstructionInformation);\r\n                    if (matchObject(res, cls)) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                });\r\n                if (matching_nodes.length === 0) {\r\n                    //Create new classNodes\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: cls.functionNode,\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.RequiredClassLink }\r\n                        }\r\n                    }, NodeTypes.ClassNode, (new_node) => {\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.UIText,\r\n                            value: RequiredClassName(\r\n                                cls.class,\r\n                                GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName)\r\n                            )\r\n                        });\r\n                        graph = updateNodeProperty(graph, {\r\n                            id: new_node.id,\r\n                            prop: NodeProperties.ClassConstructionInformation,\r\n                            value: cls\r\n                        });\r\n                    })\r\n                }\r\n                else if (matching_nodes.length === 1) {\r\n                    var _cnode = graph.nodeLib[matching_nodes[0]];\r\n                    //The existing classNodes can be updated with any new dependent values. e.g. Text/title\r\n                    graph = updateNodeProperty(graph, {\r\n                        id: _cnode.id,\r\n                        prop: NodeProperties.UIText,\r\n                        value: RequiredClassName(cls.class, GetNodeProp(GetNode(graph, cls.nodeId), NodeProperties.CodeName))\r\n                    });\r\n                }\r\n                else {\r\n                    console.error('There should never be more than one');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nexport function RequiredClassName(cls, node_name) {\r\n    return `${node_name}${cls}`;\r\n}\r\n\r\nexport function getNodesFunctionsConnected(graph, options) {\r\n    var { id, constraintKey } = options;\r\n    var result = [];\r\n\r\n    let links = getNodeLinksWithKey(graph, { id, key: constraintKey });\r\n\r\n    return links.map(link => {\r\n        return graph.nodeLib[link.target];\r\n    })\r\n}\r\n\r\n\r\nexport function checkConstraints(graph, options) {\r\n    var { id, functionConstraints } = options;\r\n    if (graph.nodeConnections[id]) {\r\n        let node = graph.nodeLib[id];\r\n        Object.keys(graph.nodeConnections[id]).map(link => {\r\n            //check if link has a constraint attached.\r\n            let { properties } = graph.linkLib[link];\r\n            let _link = graph.linkLib[link];\r\n            if (properties) {\r\n                let { constraints } = properties;\r\n                if (constraints) {\r\n                    Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                        let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                        let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                        if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                            if (_link.properties.constraints.key === constraintObj.key) {\r\n                                let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                graph = updateLinkProperty(graph, {\r\n                                    id: _link.id,\r\n                                    prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                    value: !!valid\r\n                                })\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function applyFunctionConstraints(graph, options) {\r\n    let { id, value } = options;\r\n\r\n    let functionConstraints = Functions[value];\r\n    if (functionConstraints) {\r\n        if (functionConstraints.constraints) {\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                getNodeFunctionConstraintLinks(graph, { id }).map(link => {\r\n                    let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                    if (!hasMatchingConstraints(link_constraints, functionConstraints.constraints)) {\r\n                        let nodeToRemove = GetTargetNode(graph, link.id);\r\n\r\n                        if (nodeToRemove) {\r\n                            graph = removeNode(graph, { id: nodeToRemove.id })\r\n                        }\r\n                        else {\r\n                            console.warn(\"No nodes were removed as exepected\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            let core_group = null;\r\n            let internal_group = null; //Internal scope group\r\n            let external_group = null; //API Group\r\n            let node = graph.nodeLib[id];\r\n\r\n            var existingGroups = GetNodeProp(node, NodeProperties.Groups);\r\n\r\n            if (existingGroups) {\r\n                for (let i in existingGroups) {\r\n                    graph = clearGroup(graph, { id: existingGroups[i] });\r\n                }\r\n            }\r\n\r\n            if (graph.nodesGroups[id]) {\r\n                for (let i in graph.nodesGroups[id]) {\r\n                    switch (GetGroupProperty(graph.groupLib[i], GroupProperties.FunctionGroup)) {\r\n                        case FunctionGroups.Core:\r\n                            core_group = graph.groupLib[i];\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!core_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    core_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Core\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!internal_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    internal_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.Internal\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!external_group) {\r\n                graph = newGroup(graph, (_group) => {\r\n                    external_group = _group\r\n                    graph = updateGroupProperty(graph, {\r\n                        id: _group.id,\r\n                        prop: GroupProperties.FunctionGroup,\r\n                        value: FunctionGroups.External\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (!graph.groupsNodes[external_group.id] || !graph.groupsNodes[external_group.id][id]) {\r\n                graph = addLeaf(graph, { leaf: id, id: external_group.id })\r\n            }\r\n\r\n            if (!graph.childGroups[internal_group.id] || !graph.childGroups[internal_group.id][external_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: internal_group.id, id: external_group.id });\r\n            }\r\n\r\n            if (!graph.childGroups[core_group.id] || !graph.childGroups[core_group.id][internal_group.id]) {\r\n                graph = addGroupToGroup(graph, { groupId: core_group.id, id: internal_group.id });\r\n            }\r\n\r\n\r\n            var existMatchinLinks = getNodeFunctionConstraintLinks(graph, { id });\r\n            var constraintKeys = existMatchinLinks.map(link => {\r\n                let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                return findMatchingConstraints(link_constraints, functionConstraints.constraints);\r\n            })\r\n\r\n            Object.keys(functionConstraints.constraints).map(constraint => {\r\n                //Create links to new nodes representing those constraints.\r\n                if (constraintKeys.indexOf(constraint) === -1) {\r\n                    graph = addNewNodeOfType(graph, {\r\n                        parent: node.id,\r\n                        linkProperties: {\r\n                            properties: {\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                constraints: {\r\n                                    ...functionConstraints.constraints[constraint]\r\n                                }\r\n                            }\r\n                        }\r\n                    }, NodeTypes.Parameter, (new_node) => {\r\n                        graph = updateNodeProperty(graph, { id: new_node.id, prop: NodeProperties.UIText, value: constraint });\r\n\r\n                    });\r\n                }\r\n            });\r\n\r\n            var nodes_with_link = getNodeFunctionConstraintLinks(graph, { id: node.id });\r\n\r\n            nodes_with_link.map((link) => {\r\n                let new_node = graph.nodeLib[link.target];\r\n                var constraint = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                if (constraint && constraint.key && functionConstraints.constraints[constraint.key] &&\r\n                    functionConstraints.constraints[constraint.key][FunctionConstraintKeys.IsInputVariable]) {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: internal_group.id });\r\n                }\r\n                else {\r\n                    graph = addLeaf(graph, { leaf: new_node.id, id: core_group.id })\r\n                }\r\n            });\r\n\r\n            if (graph.nodeConnections[id]) {\r\n                Object.keys(graph.nodeConnections[id]).map(link => {\r\n                    //check if link has a constraint attached.\r\n                    let { properties } = graph.linkLib[link];\r\n                    let _link = graph.linkLib[link];\r\n                    if (properties) {\r\n                        let { constraints } = properties;\r\n                        if (constraints) {\r\n                            Object.keys(FunctionTemplateKeys).map(ftk => {\r\n                                let functionTemplateKey = FunctionTemplateKeys[ftk]\r\n                                let constraintObj = functionConstraints.constraints[functionTemplateKey];\r\n                                if (constraintObj && _link && _link.properties && _link.properties.constraints && _link.properties.constraints.key) {\r\n                                    if (_link.properties.constraints.key === constraintObj.key) {\r\n                                        let valid = FunctionMeetsConstraint.meets(constraintObj, constraints, _link, node, graph);\r\n                                        graph = updateLinkProperty(graph, {\r\n                                            id: _link.id,\r\n                                            prop: LinkPropertyKeys.VALID_CONSTRAINTS,\r\n                                            value: !!valid\r\n                                        })\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            graph = updateNodeProperty(graph, {\r\n                id,\r\n                prop: NodeProperties.Groups,\r\n                value: {\r\n                    core: core_group.id,\r\n                    internal: internal_group.id,\r\n                    external: external_group.id\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return graph;\r\n}\r\n\r\nfunction getNodeLinksWithKey(graph, options) {\r\n    var { id, key } = options;\r\n    var result = [];\r\n    if (graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).map(link => {\r\n            let _link = graph.linkLib[link];\r\n            return _link;\r\n        }).filter(_link => {\r\n            return _link && _link.source === id && _link.properties && _link.properties.constraints && _link.properties.constraints.key === key;\r\n        })\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasMatchingConstraints(linkConstraint, functionConstraints) {\r\n    return !!findMatchingConstraints(linkConstraint, functionConstraints);\r\n}\r\nfunction findMatchingConstraints(linkConstraint, functionConstraints) {\r\n    let lcj = JSON.stringify(linkConstraint);\r\n    return Object.keys(functionConstraints).find(f => JSON.stringify(functionConstraints[f]) === lcj)\r\n}\r\n\r\nfunction getNodeFunctionConstraintLinks(graph, options) {\r\n    let { id } = options;\r\n    if (graph && graph.nodeConnections && graph.nodeConnections[id]) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(link => {\r\n            return GetLinkProperty(graph.linkLib[link], LinkPropertyKeys.TYPE) === LinkType.FunctionConstraintLink;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nexport const FunctionMeetsConstraint = {\r\n    meets: (constraintObj, constraints, link, node, graph) => {\r\n        if (constraintObj) {\r\n            let _targetNode = graph.nodeLib[link.target];\r\n            var nextNodes = getNodesLinkedTo(graph, { id: _targetNode.id });\r\n            return nextNodes.find(targetNode => {\r\n                return Object.keys(constraintObj).find(constraint => {\r\n                    let result = true;\r\n                    if (result === false) {\r\n                        return;\r\n                    }\r\n                    switch (constraint) {\r\n                        //Instance variable are always ok\r\n                        // case FunctionConstraintKeys.IsInstanceVariable:\r\n                        //     result = true;\r\n                        //     break;\r\n                        case FunctionConstraintKeys.IsAgent:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsAgent)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsUser:\r\n                            if (targetNode) {\r\n                                if (!GetNodeProp(targetNode, NodeProperties.IsUser)) {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsTypeOf:\r\n                            //If it is an input variable, then we will all anything.\r\n                            if (!constraintObj[FunctionConstraintKeys.IsInputVariable]) {\r\n                                if (targetNode) {\r\n                                    let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                    let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                    // The targetNodeType should match the other node.\r\n                                    let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                    if (linkWithConstraints.length) {\r\n                                        let links = linkWithConstraints.filter(linkWithConstraint => {\r\n\r\n                                            let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                            let nodeToMatchWithType = GetNodeProp(nodeToMatchWith, NodeProperties.NODEType);\r\n                                            return (nodeToMatchWithType !== targetNodeType);\r\n                                        });\r\n                                        if (links.length === 0) {\r\n                                            result = false;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsChild:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        case FunctionConstraintKeys.IsParent:\r\n                            if (targetNode) {\r\n                                // let targetNodeType = GetNodeProp(targetNode, NodeProperties.NODEType);\r\n                                let targetConstraint = constraintObj[constraint] //FunctionConstraintKeys.Model\r\n                                // The targetNodeType should match the other node.\r\n                                let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                                if (linkWithConstraints) {\r\n                                    let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                                        let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                                        let linkToParentParameter = getNodeLinkedTo(graph, { id: nodeToMatchWith.id });\r\n                                        if (linkToParentParameter && linkToParentParameter.length) {\r\n                                            let relationshipLink = findLink(graph, { target: targetNode.id, source: linkToParentParameter[0].id })\r\n                                            if (!relationshipLink || GetLinkProperty(relationshipLink, LinkPropertyKeys.TYPE) !== LinkProperties.ParentLink.type) {\r\n                                                return false;\r\n                                            }\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n\r\n                                    if (links.length === 0) {\r\n                                        result = false;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result = false;\r\n                                }\r\n                            }\r\n                            else {\r\n                                result = false;\r\n                            }\r\n                            break;\r\n                        // case FunctionConstraintKeys.IsParent:\r\n                        //     if (targetNode) {\r\n                        //         let targetConstraint = constraintObj[constraint];\r\n                        //         let linkWithConstraints = findLinkWithConstraint(node.id, graph, targetConstraint);\r\n                        //         if (linkWithConstraints) {\r\n                        //             let links = linkWithConstraints.filter(linkWithConstraint => {\r\n                        //                 let nodeToMatchWith = graph.nodeLib[linkWithConstraint.target];;\r\n                        //                 let linkToParentParameter = getNodesLinkedFrom(graph, { id: nodeToMatchWith.id });\r\n                        //                 if (linkToParentParameter && linkToParentParameter.length) {\r\n                        //                     let relationshipLink = findLink(graph, { target: linkToParentParameter[0].id, source: node.id })\r\n                        //                     if (!relationshipLink || !GetLinkProperty(relationshipLink, LinkProperties.ParentLink.type)) {\r\n                        //                         return false;\r\n                        //                     }\r\n                        //                 }\r\n                        //                 else {\r\n                        //                     return false;\r\n                        //                 }\r\n                        //                 return true;\r\n                        //             });\r\n\r\n                        //             if (links.length === 0) {\r\n                        //                 result = false;\r\n                        //             }\r\n                        //         }\r\n                        //         else {\r\n                        //             result = false;\r\n                        //         }\r\n                        //     }\r\n                        //     else {\r\n                        //         result = false;\r\n                        //     }\r\n                        //     break;\r\n                    }\r\n\r\n                    return result;\r\n                });\r\n            })\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\nfunction findLinkWithConstraint(nodeId, graph, targetConstraint) {\r\n    return Object.keys(graph.nodeConnections[nodeId]).filter(t => graph.nodeConnections[nodeId][t] === SOURCE).filter(link => {\r\n        if (link && graph.linkLib && graph.linkLib[link] && graph.linkLib[link].properties && graph.linkLib[link].properties.constraints\r\n            && graph.linkLib[link].properties.constraints.key === targetConstraint) {\r\n            return graph.linkLib[link];\r\n        }\r\n        return false;\r\n    }).map(link => graph.linkLib[link]);\r\n}\r\nexport function getNodeLinks(graph, id, direction) {\r\n    if (graph && graph.nodeConnections) {\r\n        return Object.keys(graph.nodeConnections[id]).filter(x => {\r\n            if (direction) {\r\n                return graph.nodeConnections[id][x] === direction;\r\n            }\r\n            return true;\r\n        }).map(link => graph.linkLib[link]);\r\n    }\r\n    return [];\r\n}\r\nfunction findLink(graph, options) {\r\n    let { target, source } = options;\r\n    let res = graph.links.find(link => {\r\n        return graph.linkLib && graph.linkLib[link] && graph.linkLib[link].target === target && graph.linkLib[link].source === source;\r\n    });\r\n    if (res) {\r\n        return graph.linkLib[res];\r\n    }\r\n    return null;\r\n}\r\nexport function newLink(graph, options) {\r\n    let { target, source, properties } = options;\r\n    let link = createLink(target, source, properties);\r\n    return addLink(graph, options, link);\r\n}\r\n\r\nexport function GetTargetNode(graph, linkId) {\r\n    if (graph && graph.linkLib && graph.linkLib[linkId]) {\r\n        let target = graph.linkLib[linkId].target;\r\n        return graph.nodeLib[target];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getNodesLinkedFrom(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: TARGET });\r\n}\r\nexport function getNodesLinkedTo(graph, options) {\r\n    return getNodeLinkedTo(graph, options);\r\n}\r\nexport function getNodeLinkedTo(graph, options) {\r\n    return getNodeLinked(graph, { ...(options || {}), direction: SOURCE });\r\n}\r\nexport function matchOneWay(obj1, obj2) {\r\n    if (obj1 === obj2) {\r\n        return true;\r\n    }\r\n    if (!obj1) {\r\n        return false;\r\n    }\r\n    if (!obj2) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function matchObject(obj1, obj2) {\r\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n        return false;\r\n    }\r\n    for (var i in obj1) {\r\n        if (obj1[i] !== obj2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\nexport function GetLinkByNodes(graph, options) {\r\n    var { source, target } = options;\r\n    return Object.values(graph.linkLib).find(t => {\r\n        return t.source === source && t.target === target;\r\n    })\r\n}\r\nexport function GetLinkChainItem(state, options) {\r\n    var chains = GetLinkChain(state, options);\r\n\r\n    if (chains && chains.length) {\r\n        return chains[0];\r\n    }\r\n    return null;\r\n}\r\nexport function SetAffterEffectProperty(currentNode, afterMethod, key, value) {\r\n    let afterEffectSetup = GetNodeProp(currentNode, NodeProperties.AfterMethodSetup) || {};\r\n    afterEffectSetup[afterMethod] = afterEffectSetup[afterMethod] || {};\r\n    afterEffectSetup[afterMethod] = { ...afterEffectSetup[afterMethod], ...{ [key]: value } };\r\n    return afterEffectSetup;\r\n}\r\nexport function GetAffterEffectProperty(currentNode, afterMethod, key) {\r\n    let afterEffectSetup = GetNodeProp(currentNode, NodeProperties.AfterMethodSetup);\r\n    if (afterEffectSetup && afterEffectSetup[afterMethod] && afterEffectSetup[afterMethod][key])\r\n        return afterEffectSetup[afterMethod][key];\r\n    return null;\r\n}\r\nexport function GetMethodNode(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Method);\r\n}\r\nexport function GetPermissionNode(state, id) {\r\n    let graph = GetRootGraph(state);\r\n    return GetNodesLinkedTo(graph, {\r\n        id\r\n    }).find(x => GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.Permission);\r\n}\r\nexport function GetLinkChain(state, options) {\r\n    let graph = GetCurrentGraph(state);\r\n    return GetLinkChainFromGraph(graph, options);\r\n}\r\nexport function GetLinkChainFromGraph(graph, options, nodeType) {\r\n    var { id, links } = options;\r\n    var ids = [id];\r\n    var result = [];\r\n    links.map((op, il) => {\r\n        var newids = [];\r\n        ids.map(i => {\r\n            let newnodes = getNodesByLinkType(graph, {\r\n                id: i,\r\n                ...op\r\n            });\r\n            if (il === links.length - 1) {\r\n                result = newnodes;\r\n            }\r\n            else {\r\n                newids = [...newids, ...newnodes.map(t => t.id)];\r\n            }\r\n        })\r\n        newids = newids.unique(x => x);\r\n        ids = newids;\r\n    })\r\n    return result.filter(x => {\r\n        if (!nodeType) {\r\n            return true;\r\n        }\r\n        return nodeType.indexOf(GetNodeProp(x, NodeProperties.NODEType)) !== -1;\r\n    })\r\n}\r\nexport function getNodesByLinkType(graph, options) {\r\n    if (options) {\r\n        var { id, direction, type, exist } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks)\r\n                    .filter(x => nodeLinks[x])\r\n                    .map(_id => {\r\n                        var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n\r\n                        if (!target) {\r\n                            console.warn('Missing value in linkLib');\r\n                            return null;\r\n                        }\r\n                        if (exist && graph.linkLib[_id].properties && graph.linkLib[_id].properties.exist) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        if (!type || graph.linkLib[_id].properties &&\r\n                            (graph.linkLib[_id].properties.type === type ||\r\n                                graph.linkLib[_id].properties[type])) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        return null;\r\n                    }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\nexport function getNodeLinked(graph, options) {\r\n    if (options) {\r\n        var { id, direction, constraints } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks).filter(x => nodeLinks[x] === direction).map(_id => {\r\n                    var target = graph.linkLib[_id] ? (direction === TARGET ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n                    if (!target) {\r\n                        console.warn('Missing value in linkLib');\r\n                        return null;\r\n                    }\r\n                    if (constraints) {\r\n                        let link = graph.linkLib[_id];\r\n                        let link_constraints = GetLinkProperty(link, LinkPropertyKeys.CONSTRAINTS);\r\n                        if (matchOneWay(constraints, link_constraints)) {\r\n                            return graph.nodeLib[target];\r\n                        }\r\n                        else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                    return graph.nodeLib[target];\r\n                }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport function GetNodesLinkedTo(graph, options) {\r\n    if (options) {\r\n        var { id } = options;\r\n        if (graph && graph.nodeConnections && id) {\r\n            var nodeLinks = graph.nodeConnections[id];\r\n            if (nodeLinks) {\r\n                return Object.keys(nodeLinks).map(_id => {\r\n                    var target = graph.linkLib[_id] ? (graph.linkLib[_id].source !== id ? graph.linkLib[_id].source : graph.linkLib[_id].target) : null;\r\n                    if (!target) {\r\n                        console.warn('Missing value in linkLib');\r\n                        return null;\r\n                    }\r\n                    return graph.nodeLib[target];\r\n                }).filter(x => x);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport const SOURCE = 'SOURCE';\r\nexport const TARGET = 'TARGET';\r\nexport function addLink(graph, options, link) {\r\n    let { target, source } = options;\r\n    if (target && source && target !== source) {\r\n        if (graph.nodeLib[target] && graph.nodeLib[source]) {\r\n            if (noSameLink(graph, { target, source })) {\r\n                graph.linkLib[link.id] = link;\r\n                graph.linkLib = { ...graph.linkLib };\r\n                graph.links = [...graph.links, link.id];\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.source] = {\r\n                    ...(graph.nodeConnections[link.source] || {}),\r\n                    ...{\r\n                        [link.id]: SOURCE\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the links for each node.\r\n                graph.nodeConnections[link.target] = {\r\n                    ...(graph.nodeConnections[link.target] || {}),\r\n                    ...{\r\n                        [link.id]: TARGET\r\n                    }\r\n                }\r\n\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.source] = {\r\n                    ...(graph.nodeLinks[link.source] || {}),\r\n                    ...{\r\n                        [link.target]: graph.nodeLinks[link.source] ? (graph.nodeLinks[link.source][link.target] || 0) + 1 : 1\r\n                    }\r\n                };\r\n                //Keeps track of the number of links between nodes.\r\n                graph.nodeLinks[link.target] = {\r\n                    ...graph.nodeLinks[link.target],\r\n                    ...{\r\n                        [link.source]: graph.nodeLinks[link.target] ? (graph.nodeLinks[link.target][link.source] || 0) + 1 : 1\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                var oldLink = findLink(graph, { target, source });\r\n                if (oldLink) {\r\n                    //  the type won't change onces its set\r\n                    // But the other properties can be \r\n                    oldLink.properties = {\r\n                        ...oldLink.properties,\r\n                        ...link.properties,\r\n                        ...({ type: oldLink.properties.type })\r\n                    };\r\n                }\r\n            }\r\n            graph.nodeLinks = { ...graph.nodeLinks }\r\n            graph = { ...graph };\r\n        }\r\n        graph = incrementMinor(graph);\r\n    }\r\n    return graph;\r\n}\r\nexport function addLinkBetweenNodes(graph, options) {\r\n    let { target, source, properties } = options;\r\n    if (target !== source) {\r\n        let link = createLink(target, source, properties);\r\n        return addLink(graph, options, link);\r\n    }\r\n    return graph;\r\n}\r\nexport function findLinkInstance(graph, options) {\r\n    let { target, source } = options;\r\n    let link = graph.links.find(x => graph.linkLib[x].source === source && graph.linkLib[x].target == target);\r\n    return link;\r\n}\r\nexport function getLinkInstance(graph, options) {\r\n    var linkId = findLinkInstance(graph, options);\r\n    if (linkId) {\r\n        return graph.linkLib[linkId];\r\n    }\r\n    return null;\r\n}\r\nexport function getAllLinksWithNode(graph, id) {\r\n    return graph.links.filter(x => graph.linkLib[x].source === id || graph.linkLib[x].target === id);\r\n}\r\nexport function removeLinkBetweenNodes(graph, options) {\r\n    let link = findLinkInstance(graph, options);\r\n    return removeLink(graph, link, options);\r\n}\r\nexport function removeLinkById(graph, options) {\r\n    let link = graph.linkLib[options.id];\r\n    return removeLink(graph, link);\r\n}\r\nexport function executeEvents(graph, link, evt) {\r\n    switch (evt) {\r\n        case LinkEvents.Remove:\r\n            graph = executeRemoveEvents(graph, link);\r\n            break;\r\n    }\r\n    return graph;\r\n}\r\nexport const EventFunctions = {};\r\nexport function addEventFunction(key, func) {\r\n    EventFunctions[key] = func;\r\n}\r\nexport function removeEventFunction(key) {\r\n    delete EventFunctions[key];\r\n}\r\nexport function executeRemoveEvents(graph, link) {\r\n    if (link && link.properties && link.properties.on && link.properties.on[LinkEvents.Remove]) {\r\n        link.properties.on[LinkEvents.Remove].map(args => {\r\n            if (args.function && EventFunctions[args.function]) {\r\n                graph = EventFunctions[args.function](graph, link, args.function, args)\r\n            }\r\n        });\r\n    }\r\n    return graph;\r\n}\r\nexport function isUIExtensionEnumerable(node) {\r\n    let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n    if (_node && _node.config) {\r\n        return _node.config.isEnumeration\r\n    }\r\n}\r\nexport function GetUIExentionEnumeration(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.list;\r\n    }\r\n    return null;\r\n}\r\nexport function GetUIExentionKeyField(node) {\r\n    if (isUIExtensionEnumerable(node)) {\r\n        let _node = GetNodeProp(node, NodeProperties.UIExtensionDefinition);\r\n        return _node.config.keyField;\r\n    }\r\n    return null;\r\n}\r\naddEventFunction('OnRemoveValidationPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Validator), { id: target });\r\n    return graph;\r\n});\r\naddEventFunction('OnRemoveExecutorPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.Executor), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveModelFilterPropConnection', (graph, link, func) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    if (node && node.properties)\r\n        removeValidator(GetNodeProp(node, NodeProperties.FilterModel), { id: target });\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveValidationItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Validator);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\naddEventFunction('OnRemoveExecutorItemPropConnection', (graph, link, func, args) => {\r\n    var { source, target } = link;\r\n    var node = GetNode(graph, source);\r\n    var { property, validator } = (args || {});\r\n\r\n    let _validator = GetNodeProp(node, NodeProperties.Executor);\r\n    if (node && node.properties &&\r\n        _validator.properties &&\r\n        _validator.properties[property] &&\r\n        _validator.properties[property].validators &&\r\n        _validator.properties[property].validators[validator] &&\r\n        _validator.properties[property].validators[validator].node === target) {\r\n        removeValidatorItem(_validator, { ...args, id: target, });\r\n    }\r\n    return graph;\r\n});\r\n\r\n\r\nexport function removeValidatorItem(_validator, options) {\r\n    var { property, validator } = options;\r\n    delete _validator.properties[property].validators[validator]\r\n}\r\nexport function createEventProp(type, options = {}) {\r\n    var res = { on: {} };\r\n    switch (type) {\r\n        case LinkEvents.Remove:\r\n            res.on[type] = [{\r\n                ...options\r\n            }];\r\n            break;\r\n    }\r\n\r\n    return res;\r\n}\r\nexport function removeLink(graph, link, options = {}) {\r\n    if (link && options.linkType) {\r\n        let update_link = graph.linkLib[link];\r\n        if (update_link && update_link.properties && update_link.properties[options.linkType]) {\r\n            delete update_link.properties[options.linkType];\r\n\r\n            //If only the type is on the property\r\n        }\r\n        if (update_link && Object.keys(update_link.properties).length > 1) {\r\n            return { ...graph };\r\n        }\r\n    }\r\n    if (link) {\r\n        graph.links = [...graph.links.filter(x => x !== link)];\r\n        let del_link = graph.linkLib[link];\r\n        if (del_link.properties) {\r\n            if (del_link.properties.on && del_link.properties.on[LinkEvents.Remove]) {\r\n                graph = executeEvents(graph, del_link, LinkEvents.Remove);\r\n            }\r\n        }\r\n        delete graph.linkLib[link]\r\n        graph.linkLib = { ...graph.linkLib };\r\n        graph.nodeLinks[del_link.source] = {\r\n            ...graph.nodeLinks[del_link.source],\r\n            ...{\r\n                [del_link.target]: graph.nodeLinks[del_link.source] ? (graph.nodeLinks[del_link.source][del_link.target] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.source] && !graph.nodeLinks[del_link.source][del_link.target]) {\r\n            delete graph.nodeLinks[del_link.source][del_link.target];\r\n            if (Object.keys(graph.nodeLinks[del_link.source]).length === 0) {\r\n                delete graph.nodeLinks[del_link.source];\r\n            }\r\n        }\r\n        graph.nodeLinks[del_link.target] = {\r\n            ...graph.nodeLinks[del_link.target],\r\n            ...{\r\n                [del_link.source]: graph.nodeLinks[del_link.target] ? (graph.nodeLinks[del_link.target][del_link.source] || 0) - 1 : 0\r\n            }\r\n        };\r\n        if (graph.nodeLinks[del_link.target] && !graph.nodeLinks[del_link.target][del_link.source]) {\r\n            delete graph.nodeLinks[del_link.target][del_link.source];\r\n            if (Object.keys(graph.nodeLinks[del_link.target]).length === 0) {\r\n                delete graph.nodeLinks[del_link.target];\r\n            }\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.source] && graph.nodeConnections[del_link.source][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.source][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.source]).length === 0) {\r\n            delete graph.nodeConnections[del_link.source];\r\n        }\r\n\r\n        //Keeps track of the links for each node.\r\n        if (graph.nodeConnections[del_link.target] && graph.nodeConnections[del_link.target][del_link.id]) {\r\n            delete graph.nodeConnections[del_link.target][del_link.id];\r\n        }\r\n        if (Object.keys(graph.nodeConnections[del_link.target]).length === 0) {\r\n            delete graph.nodeConnections[del_link.target];\r\n        }\r\n        graph = incrementMinor(graph);\r\n\r\n    }\r\n    return { ...graph };\r\n\r\n}\r\nexport function updateNodeText(graph, options) {\r\n    let { id, value } = options;\r\n    if (id && graph.nodeLib && graph.nodeLib[id]) {\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                _properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    i: value\r\n                },\r\n                get properties() {\r\n                    return this._properties;\r\n                },\r\n                set properties(value) {\r\n                    this._properties = value;\r\n                },\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function updateNodeProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    let additionalChange = {};\r\n    if (id && prop && graph.nodeLib && graph.nodeLib[id]) {\r\n        if (NodePropertiesDirtyChain[prop]) {\r\n            let temps = NodePropertiesDirtyChain[prop];\r\n            temps.map(temp => {\r\n                if (!graph.nodeLib[id].dirty[temp.chainProp]) {\r\n                    additionalChange[temp.chainProp] = temp.chainFunc(value);\r\n                }\r\n            });\r\n        }\r\n        graph.nodeLib[id] = {\r\n            ...graph.nodeLib[id], ...{\r\n                dirty: {\r\n                    [prop]: true,\r\n                    ...(graph.nodeLib[id].dirty || {})\r\n                },\r\n                properties: {\r\n                    ...(graph.nodeLib[id].properties || {}),\r\n                    [prop]: value,\r\n                    ...additionalChange,\r\n                }\r\n            }\r\n        }\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.Function) {\r\n            graph.functionNodes = { ...graph.functionNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.functionNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.functionNodes[id];\r\n                graph.functionNodes = { ...graph.functionNodes };\r\n            }\r\n        }\r\n\r\n        if (prop === NodeProperties.NODEType && value === NodeTypes.ClassNode) {\r\n            graph.classNodes = { ...graph.classNodes, ...{ [id]: true } };\r\n        }\r\n        else {\r\n            if (graph.classNodes[id] && prop === NodeProperties.NODEType) {\r\n                delete graph.classNodes[id];\r\n                graph.classNodes = { ...graph.classNodes };\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateLinkProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.linkLib && graph.linkLib[id]) {\r\n        graph.linkLib[id] = {\r\n            ...graph.linkLib[id], ...{\r\n                properties: {\r\n                    ...(graph.linkLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nexport function updateGroupProperty(graph, options) {\r\n    let { id, value, prop } = options;\r\n    if (id && prop && graph.groupLib && graph.groupLib[id]) {\r\n        graph.groupLib[id] = {\r\n            ...graph.groupLib[id], ...{\r\n                properties: {\r\n                    ...(graph.groupLib[id].properties || {}),\r\n                    [prop]: value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return graph;\r\n}\r\n\r\nfunction noSameLink(graph, ops) {\r\n    return !graph.links.some(x => {\r\n        let temp = graph.linkLib[x];\r\n        return temp.source === ops.source && temp.target === ops.target;\r\n    })\r\n}\r\nfunction createGroup() {\r\n    return {\r\n        id: uuidv4(),\r\n        leaves: [],\r\n        groups: [],\r\n        properties: {}\r\n    }\r\n}\r\nfunction createNode(nodeType) {\r\n    return {\r\n        id: uuidv4(),\r\n        dirty: {\r\n\r\n        },\r\n        properties: {\r\n            text: nodeType || Titles.Unknown\r\n        }\r\n    }\r\n}\r\nfunction createLink(target, source, properties) {\r\n    properties = properties || {};\r\n    return {\r\n        id: uuidv4(),\r\n        source,\r\n        target,\r\n        properties\r\n    }\r\n}\r\nfunction copyLink(link) {\r\n    return {\r\n        ...(JSON.parse(JSON.stringify(link)))\r\n    }\r\n}\r\nexport function duplicateNode(nn) {\r\n    return {\r\n        ...nn\r\n    };\r\n}\r\nexport function duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.indexOf(nn.source),\r\n        target: nodes.indexOf(nn.target)\r\n    };\r\n}\r\n\r\nfunction GetNodesInsideGroup(graph, t, seenGroups = {}) {\r\n    var res = [...Object.keys(graph.groupsNodes[t])];\r\n    for (var i in graph.childGroups[t]) {\r\n        if (!seenGroups[i]) {\r\n            seenGroups = {\r\n                ...seenGroups,\r\n                [i]: true\r\n            };\r\n            res = [...res, ...GetNodesInsideGroup(graph, i, seenGroups)]\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\nexport const GroupImportanceOrder = {\r\n    [NodeTypes.Model]: 1,\r\n    [NodeTypes.Function]: 1,\r\n    [NodeTypes.Method]: 1,\r\n    [NodeTypes.Property]: 4,\r\n    [NodeTypes.ValidationList]: 5,\r\n    [NodeTypes.OptionList]: 6,\r\n    [NodeTypes.Parameter]: 4,\r\n    [NodeTypes.Permission]: 4,\r\n    [NodeTypes.Attribute]: 8,\r\n    [NodeTypes.ValidationList]: 10,\r\n    [NodeTypes.ValidationListItem]: 12,\r\n    [NodeTypes.ModelItemFilter]: 13\r\n}\r\n\r\nexport function SetVisible(graph) {\r\n    graph.visibleNodes = {}\r\n    graph.nodes.map(t => {\r\n        if (GetNodeProp(GetNode(graph, t), NodeProperties.Pinned)) {\r\n            graph.visibleNodes[t] = true;\r\n        }\r\n    });\r\n    if (graph.depth) {\r\n        [].interpolate(0, graph.depth, x => {\r\n            Object.keys(graph.visibleNodes).map(t => {\r\n                for (let h in graph.nodeLinks[t]) {\r\n                    graph.visibleNodes[h] = true;\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return graph;\r\n}\r\nfunction getDepth(groupId, graph) {\r\n    let res = 0;\r\n    if (graph.groupLib[groupId]) {\r\n        if (graph.parentGroup[groupId]) {\r\n            let parent = Object.keys(graph.parentGroup[groupId])[0];\r\n            if (parent) {\r\n                res = res + getDepth(parent, graph);\r\n            }\r\n        }\r\n        res = res + 1;\r\n    }\r\n    return res;\r\n}\r\nexport function FilterGraph(graph) {\r\n    let filteredGraph = createGraph();\r\n    filteredGraph.id = graph.id;\r\n    filteredGraph.linkLib = { ...graph.linkLib };\r\n    filteredGraph.nodesGroups = { ...graph.nodesGroups };\r\n    filteredGraph.groupsNodes = { ...graph.groupsNodes };\r\n    filteredGraph.groups = [...graph.groups];\r\n    filteredGraph.groupLib = { ...graph.groupLib };\r\n    filteredGraph.childGroups = { ...graph.childGroups };\r\n    filteredGraph.parentGroup = { ...graph.parentGroup };\r\n    filteredGraph.links = [...graph.links.filter(linkId => {\r\n        var { target, source } = graph.linkLib[linkId];\r\n        if (graph.visibleNodes[target] && graph.visibleNodes[source]) {\r\n            return true;\r\n        } else {\r\n            delete filteredGraph.linkLib[linkId];\r\n        }\r\n        return false;\r\n    })];\r\n    Object.keys(graph.nodesGroups).map(nodeId => {\r\n        if (!graph.visibleNodes[nodeId]) {\r\n            let temp = graph.nodesGroups[nodeId];\r\n            for (let i in temp) {\r\n                filteredGraph.groupsNodes[i] = { ...filteredGraph.groupsNodes[i] };\r\n                delete filteredGraph.groupsNodes[i][nodeId]\r\n                if (Object.keys(filteredGraph.groupsNodes[i]).length === 0) {\r\n                    delete filteredGraph.groupsNodes[i]\r\n                }\r\n            }\r\n            delete filteredGraph.nodesGroups[nodeId]\r\n        }\r\n    });\r\n    Object.keys(filteredGraph.groupLib).sort((b, a) => {\r\n        return getDepth(a, graph) - getDepth(b, graph);\r\n    }).map(group => {\r\n        if (filteredGraph.groupLib[group].leaves) {\r\n            filteredGraph.groupLib[group] = { ...filteredGraph.groupLib[group] };\r\n            filteredGraph.groupLib[group].leaves = [...filteredGraph.groupLib[group].leaves.filter(x => graph.visibleNodes[x])];\r\n            filteredGraph.groupLib[group].groups = [...filteredGraph.groupLib[group].groups.filter(x => filteredGraph.groupLib[x])];\r\n            if (!filteredGraph.groupLib[group].leaves.length && !filteredGraph.groupLib[group].groups.length) {\r\n                filteredGraph.groups = [...filteredGraph.groups.filter(x => x !== group)];\r\n                delete filteredGraph.groupLib[group]\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.childGroups).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.childGroups[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.childGroups[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.childGroups[group] = { ...filteredGraph.childGroups[group] }\r\n                    delete filteredGraph.childGroups[group][t]\r\n                }\r\n            }\r\n        }\r\n    })\r\n    Object.keys(graph.parentGroup).map(group => {\r\n        if (!filteredGraph.groupsNodes[group]) {\r\n            delete filteredGraph.parentGroup[group];\r\n        }\r\n        else {\r\n            for (let t in filteredGraph.parentGroup[group]) {\r\n                if (!filteredGraph.groupsNodes[t]) {\r\n                    filteredGraph.parentGroup[group] = { ...filteredGraph.parentGroup[group] }\r\n                    delete filteredGraph.parentGroup[group][t]\r\n                }\r\n            }\r\n        }\r\n    });\r\n    Object.keys(graph.visibleNodes).map(nodeId => {\r\n        filteredGraph.nodeLib[nodeId] = graph.nodeLib[nodeId];\r\n        filteredGraph.nodes.push(nodeId);\r\n        filteredGraph.nodeConnections[nodeId] = { ...graph.nodeConnections[nodeId] };\r\n        filteredGraph.nodeLinks[nodeId] = { ...graph.nodeLinks[nodeId] };\r\n\r\n        Object.keys(graph.nodeLinks[nodeId] || {}).map(t => {\r\n            if (!filteredGraph.linkLib[t]) {\r\n                filteredGraph.nodeLinks[nodeId] = { ...filteredGraph.nodeLinks[nodeId] }\r\n                delete filteredGraph.nodeLinks[nodeId][t];\r\n            }\r\n        })\r\n    })\r\n\r\n    return filteredGraph;\r\n}\r\nexport function VisualProcess(graph) {\r\n    let vgraph = createGraph();\r\n    vgraph.id = graph.id;\r\n    graph = SetVisible(graph);\r\n    graph = FilterGraph(graph)\r\n    let collapsedNodes = graph.nodes.filter(node => GetNodeProp(graph.nodeLib[node], NodeProperties.Collapsed));\r\n    let collapsingGroups = {};\r\n    collapsedNodes.map(t => {\r\n        if (graph.nodesGroups[t]) {\r\n            let t_importance = GroupImportanceOrder[GetNodeProp(graph.nodeLib[t], NodeProperties.NODEType)] || 1000;\r\n            var sortedGroups = Object.keys(graph.nodesGroups[t]).filter(nodeGroupKey => {\r\n\r\n                let nodesInGroup = GetNodesInsideGroup(graph, nodeGroupKey);\r\n                var moreImportantNode = nodesInGroup.find(n => {\r\n                    if (n === t) {\r\n                        return false;\r\n                    }\r\n                    var _type = GetNodeProp(graph.nodeLib[n], NodeProperties.NODEType);\r\n                    let n_importance = GroupImportanceOrder[_type] || 1000;\r\n\r\n                    if (n_importance > t_importance) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                if (moreImportantNode) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }).sort((b, a) => {\r\n                return Object.keys(graph.groupsNodes[a]).length - Object.keys(graph.groupsNodes[b]).length;\r\n            });\r\n            if (sortedGroups.length) {\r\n                collapsingGroups[sortedGroups[0]] = true;\r\n            }\r\n        }\r\n    });\r\n    let smallestsNonCrossingGroups = Object.keys(collapsingGroups).filter(cg => {\r\n        for (var g_ in graph.parentGroup[cg]) {\r\n            if (collapsingGroups[g_]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n    let disappearingNodes = {};\r\n    smallestsNonCrossingGroups.map(t => {\r\n        let dt = {};\r\n        let head = null;\r\n        let mostimportant = 10000;\r\n        let _nodes = GetNodesInsideGroup(graph, t);\r\n        _nodes.filter(t => {\r\n            var type = GetGroupProperty(graph.nodeLib[t], NodeProperties.NODEType);\r\n            dt[t] = true;\r\n            if (GroupImportanceOrder[type] < mostimportant) {\r\n                head = t;\r\n                mostimportant = GroupImportanceOrder[type];\r\n            }\r\n        });\r\n        delete dt[head];\r\n        for (var i in dt) {\r\n            dt[i] = head;\r\n        }\r\n        disappearingNodes = { ...disappearingNodes, ...dt };\r\n    });\r\n\r\n    vgraph.nodes = [...graph.nodes.filter(x => !disappearingNodes[x])]\r\n    vgraph.nodeLib = {};\r\n    vgraph.nodes.map(t => { vgraph.nodeLib[t] = graph.nodeLib[t] });\r\n    vgraph.links = graph.links.map(x => {\r\n        //Find any link that should be disappearing, and make it go away\r\n        var { source, target } = graph.linkLib[x];\r\n        var dupLink;\r\n        if (disappearingNodes[source] && disappearingNodes[target]) {\r\n            // the link is going totally away;\r\n            return false;\r\n        }\r\n        else if (disappearingNodes[source]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.source = disappearingNodes[source];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else if (disappearingNodes[target]) {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.target = disappearingNodes[target];\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        else {\r\n            dupLink = copyLink(graph.linkLib[x]);\r\n            dupLink.id = `${dupLink.source}${dupLink.target}`;\r\n            vgraph.linkLib[`${dupLink.source}${dupLink.target}`] = dupLink;\r\n        }\r\n        if (dupLink.source === dupLink.target) {\r\n            return false;\r\n        }\r\n        return dupLink.id;\r\n    }).filter(x => x);\r\n\r\n    var vgroups = graph.groups.map((group, groupIndex) => {\r\n        let oldgroup = graph.groupLib[group];\r\n        let newgroup = createGroup();\r\n        newgroup.id = `${oldgroup.id}`;\r\n        if (oldgroup && oldgroup.leaves) {\r\n            oldgroup.leaves.map(leaf => {\r\n                if (vgraph.nodeLib[leaf]) {\r\n                    newgroup.leaves.push(leaf);\r\n                }\r\n            })\r\n        }\r\n        if (newgroup.leaves.length) {\r\n            vgraph.groupLib[newgroup.id] = newgroup;\r\n\r\n            return newgroup.id\r\n        }\r\n        return null;\r\n    }).filter(x => x);\r\n    vgroups.map((group) => {\r\n        vgraph.groupLib[group].groups = (graph.groupLib[group].groups || []).filter(og => {\r\n            if (vgraph.groupLib[og]) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n    })\r\n    vgraph.groups = vgroups;\r\n    return vgraph;\r\n}\r\n","var fs = require('fs');\r\n\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport * as NodeConstants from '../constants/nodetypes';\r\nimport * as Titles from '../components/titles';\r\nimport { MethodFunctions } from '../constants/functiontypes';\r\nexport const VISUAL = 'VISUAL';\r\nexport const APPLICATION = 'APPLICATION';\r\nexport const GRAPHS = 'GRAPHS';\r\nexport const VISUAL_GRAPH = 'VISUAL_GRAPH';\r\nexport const DASHBOARD_MENU = 'DASHBOARD_MENU';\r\nexport const SELECTED_NODE_BB = 'SELECTED_NODE_BB';\r\nexport const SIDE_PANEL_EXTRA_WIDTH = 'SIDE_PANEL_EXTRA_WIDTH';\r\nexport const NodeTypes = NodeConstants.NodeTypes;\r\nexport const NodeTypeColors = NodeConstants.NodeTypeColors;\r\nexport const NodeProperties = NodeConstants.NodeProperties;\r\nexport const LinkProperties = NodeConstants.LinkProperties;\r\nexport const NodeAttributePropertyTypes = NodeConstants.NodeAttributePropertyTypes;\r\nexport const NodePropertyTypes = NodeConstants.NodePropertyTypes;\r\nexport const ValidationRules = NodeConstants.ValidationRules;\r\nexport const OptionsTypes = NodeConstants.OptionsTypes;\r\n\r\nexport const UI_UPDATE = 'UI_UPDATE';\r\nexport function GetC(state, section, item) {\r\n    if (state && state.uiReducer && state.uiReducer[section]) {\r\n        return state.uiReducer[section][item];\r\n    }\r\n    return null;\r\n}\r\nexport function Visual(state, key) {\r\n    return GetC(state, VISUAL, key);\r\n}\r\nexport function IsCurrentNodeA(state, type) {\r\n    var currentNode = Node(state, Visual(state, SELECTED_NODE));\r\n    return currentNode && currentNode.properties && currentNode.properties.nodeType === type;\r\n}\r\nexport function Use(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function GetNodeProp(node, prop) {\r\n    return node && node.properties && node.properties[prop];\r\n}\r\nexport function IsAgent(node) {\r\n    return GetNodeProp(node, NodeProperties.IsAgent);\r\n}\r\nexport function GetLinkChainItem(options) {\r\n    return GraphMethods.GetLinkChainItem(GetState(), options);\r\n}\r\nexport function GetCodeName(node) {\r\n    if (typeof (node) === 'string') {\r\n        node = GraphMethods.GetNode(GetCurrentGraph(GetState()), node);\r\n    }\r\n    return GetNodeProp(node, NodeProperties.CodeName);\r\n}\r\n\r\nexport function GetModelPropertyChildren(id) {\r\n\r\n    let property_nodes = GetModelPropertyNodes(id);\r\n    let logicalChildren = GetLogicalChildren(id);\r\n    return [...property_nodes, ...logicalChildren];\r\n}\r\n\r\nexport function GetNodeById(node) {\r\n    return GraphMethods.GetNode(GetCurrentGraph(GetState()), node);\r\n}\r\n\r\nexport function GetMethodDefinition(id) {\r\n    return MethodFunctions[GetMethodFunctionType(id)];\r\n}\r\nexport function GetMethodFunctionType(id) {\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n\r\n    return GetNodeProp(method, NodeProperties.FunctionType);\r\n}\r\nexport function GetMethodFunctionValidation(id) {\r\n\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n    return GetNodeProp(method, NodeProperties.MethodFunctionValidation);\r\n}\r\nexport function GetPermissionNode(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetPermissionNode(state, id);\r\n}\r\nexport function GetModelPropertyNodes(refId) {\r\n    var state = _getState();\r\n    return GraphMethods.GetLinkChain(state, {\r\n        id: refId,\r\n        links: [{\r\n            type: NodeConstants.LinkType.PropertyLink,\r\n            direction: GraphMethods.SOURCE\r\n        }]\r\n    });\r\n}\r\n\r\nexport function GetLogicalChildren(id) {\r\n    let currentNode = GraphMethods.GetNode(GetCurrentGraph(GetState()), id);\r\n    var hasLogicalChildren = GetNodeProp(currentNode, NodeProperties.HasLogicalChildren);\r\n    if (hasLogicalChildren)\r\n        return (GetNodeProp(currentNode, NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n            let node = GraphMethods.GetNode(GetCurrentGraph(_getState()), t);\r\n            return node;\r\n        }).filter(x => x);\r\n    return [];\r\n}\r\n\r\nexport function GetMethodNodeSelectOptions(methodProps) {\r\n    return Object.keys(methodProps).map(val => {\r\n        return {\r\n            value: val,\r\n            title: `${GetCodeName(methodProps[val])} (${val})`\r\n        }\r\n    })\r\n}\r\nexport function GetNodeCode(graph, id) {\r\n    return GetCodeName(GraphMethods.GetNode(graph, id));\r\n}\r\n\r\nexport function GetMethodPropNode(graph, node, key) {\r\n    var methodProps = GetNodeProp(node, NodeProperties.MethodProps);\r\n    if (methodProps) {\r\n        return GraphMethods.GetNode(graph, methodProps[key] || null);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function GetMethodOptions(methodProps) {\r\n    if (!methodProps) {\r\n        return [];\r\n    }\r\n    let state = _getState();\r\n    return Object.keys(methodProps).map(t => {\r\n        var n = GraphMethods.GetNode(GetRootGraph(state), methodProps[t]);\r\n        return {\r\n            title: `${GetCodeName(n)} (${t})`,\r\n            value: t\r\n        }\r\n    });\r\n}\r\n\r\nexport function GetLinkProperty(link, prop) {\r\n    return link && link.properties && link.properties[prop]\r\n}\r\n\r\nexport function GetGroupProperty(group, prop) {\r\n    return group && group.properties && group.properties[prop]\r\n}\r\n\r\nexport function VisualEq(state, key, value) {\r\n    return Visual(state, key) === value;\r\n}\r\nexport function Node(state, nodeId) {\r\n\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph && currentGraph.nodeLib) {\r\n        return currentGraph.nodeLib[nodeId];\r\n    }\r\n    return null;\r\n}\r\nexport function Application(state, key) {\r\n    return GetC(state, APPLICATION, key);\r\n}\r\nexport function GetVisualGraph(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    return currentGraph ? GetC(state, VISUAL_GRAPH, currentGraph.id) : null;\r\n}\r\nexport function SaveApplication(value, key, dispatch) {\r\n    dispatch(UIC(APPLICATION, key, value));\r\n}\r\nexport function Graphs(state, key) {\r\n    return GetC(state, GRAPHS, key);\r\n}\r\nexport function SaveGraph(graph, dispatch) {\r\n    graph = {\r\n        ...graph,\r\n        ...{\r\n            updated: Date.now()\r\n        }\r\n    };\r\n    let visualGraph = GraphMethods.VisualProcess(graph);\r\n    if (visualGraph)\r\n        dispatch(UIC(VISUAL_GRAPH, visualGraph.id, visualGraph));\r\n    dispatch(UIC(GRAPHS, graph.id, graph));\r\n}\r\nexport function UIC(section, item, value) {\r\n    return {\r\n        type: UI_UPDATE,\r\n        item,\r\n        value,\r\n        section\r\n    }\r\n}\r\nexport function toggleVisual(key) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, !!!GetC(state, VISUAL, key)))\r\n    }\r\n\r\n}\r\n\r\nexport function GUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nexport function setVisual(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(VISUAL, key, value))\r\n    }\r\n\r\n}\r\nexport function setApplication(key, value) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        dispatch(UIC(APPLICATION, key, value))\r\n    }\r\n\r\n}\r\nexport const SELECTED_LINK = 'SELECTED_LINK';\r\nexport const HOVERED_LINK = 'HOVERED_LINK';\r\nexport const SELECTED_NODE = 'SELECTED_NODE';\r\nexport function SelectedNode(nodeId) {\r\n    return (dispatch, getState) => {\r\n        dispatch(UIC(VISUAL, SELECTED_NODE, nodeId));\r\n    }\r\n}\r\nexport function toggleDashboardMinMax() {\r\n    return toggleVisual(DASHBOARD_MENU);\r\n}\r\nexport function GetNodeTitle(node) {\r\n    if (typeof (node) === 'string') {\r\n        node = GraphMethods.GetNode(GetCurrentGraph(GetState()), node);\r\n    }\r\n\r\n    if (!node) { return Titles.Unknown }\r\n    return node.properties ? node.properties.text || node.id : node.id;\r\n}\r\nexport function GetNodes(state) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return [...currentGraph.nodes.map(t => currentGraph.nodeLib[t])];\r\n    }\r\n    return [];\r\n}\r\nexport function CanChangeType(node) {\r\n    var nodeType = GetNodeProp(node, NodeProperties.NODEType);\r\n    switch (nodeType) {\r\n        case NodeTypes.ReferenceNode:\r\n            return false;\r\n        default:\r\n            return true;\r\n    }\r\n}\r\nexport function NodesByType(state, nodeType, options = {}) {\r\n\r\n    var currentGraph = options.useRoot ? GetRootGraph(state) : GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        if (!Array.isArray(nodeType)) {\r\n            nodeType = [nodeType];\r\n        }\r\n        return currentGraph.nodes\r\n            .filter(x => currentGraph.nodeLib[x].properties &&\r\n                (nodeType.indexOf(currentGraph.nodeLib[x].properties[NodeProperties.NODEType]) !== -1) ||\r\n                (!options.excludeRefs && currentGraph.nodeLib[x].properties[NodeProperties.ReferenceType] === nodeType))\r\n            .map(x => currentGraph.nodeLib[x]);\r\n    }\r\n    throw 'no graph found'\r\n    return [];\r\n}\r\n\r\nexport function GetNodeFromRoot(state, id) {\r\n    var graph = GetRootGraph(state);\r\n    if (graph) {\r\n        return GraphMethods.GetNode(graph, id);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function NodesConnectedTo(state, nodeId) {\r\n    var currentGraph = GetCurrentGraph(state);\r\n    if (currentGraph) {\r\n        return (t) => {\r\n            if (currentGraph.linkLib[t.id]) {\r\n                return currentGraph.linkLib[t.id][nodeId];\r\n            }\r\n        }\r\n    }\r\n    return () => false;\r\n}\r\nlet _getState;\r\nexport function GetState() {\r\n    return _getState();\r\n}\r\nexport function setState() {\r\n    return (dispatch, getState) => {\r\n        _getState = getState;\r\n    }\r\n}\r\nexport function GetGraphNode(id) {\r\n    let state = _getState();\r\n    return GraphMethods.GetNode(GetRootGraph(state), id);\r\n}\r\nexport function GetFunctionType(methodNode) {\r\n    return GetNodeProp(methodNode, NodeProperties.FunctionType);\r\n}\r\nexport function GetMethodNodeProp(methodNode, key) {\r\n    return (GetNodeProp(methodNode, NodeProperties.MethodProps) || {})[key];\r\n}\r\nexport function GetMethodProps(methodNode) {\r\n    return (GetNodeProp(methodNode, NodeProperties.MethodProps) || {});\r\n}\r\nexport function GetMethodsProperties(id) {\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n    let methodProps = GetMethodProps(method);\r\n    return methodProps;\r\n}\r\nexport function GetMethodsProperty(id, prop) {\r\n    let methodProps = GetMethodsProperties(id);\r\n    if (methodProps) {\r\n        return methodProps[prop];\r\n    }\r\n    return null;\r\n}\r\nexport function GetMethodFilterParameters(id) {\r\n    return GetMethod_Parameters(id, 'filter');\r\n}\r\nfunction GetMethod_Parameters(id, key) {\r\n    let state = _getState();\r\n    var method = GraphMethods.GetMethodNode(state, id);\r\n    let methodProps = GetMethodProps(method);\r\n    let methodType = GetNodeProp(method, NodeProperties.FunctionType);\r\n    if (methodType) {\r\n        let setup = MethodFunctions[methodType];\r\n        if (setup && setup[key] && setup[key].params && methodProps) {\r\n            return setup[key].params.map(_x => {\r\n                let nodeName = GetNodeTitle(methodProps[_x]);\r\n                let nodeClass = GetCodeName(methodProps[_x]);\r\n                return {\r\n                    title: nodeName,\r\n                    value: _x,\r\n                    paramClass: nodeClass,\r\n                    paramName: _x\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return [];\r\n}\r\nexport function GetMethodPermissionParameters(id) {\r\n    return GetMethod_Parameters(id, 'permission');\r\n}\r\nexport function GetPermissionMethod(permission) {\r\n    return GetLinkChainItem({\r\n        id: permission.id,\r\n        links: [{\r\n            type: NodeConstants.LinkType.FunctionOperator,\r\n            direction: GraphMethods.TARGET\r\n        }]\r\n    })\r\n}\r\nexport function GetCurrentGraph(state) {\r\n    var scopedGraph = GetCurrentScopedGraph(state);\r\n    return scopedGraph;\r\n    // if (currentGraph) {\r\n    //     currentGraph = Graphs(state, currentGraph);\r\n    // }\r\n    // return currentGraph;\r\n}\r\nexport function GetRootGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n    }\r\n    else if (dispatch) {\r\n        currentGraph = GraphMethods.createGraph();\r\n        SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n    }\r\n\r\n    return currentGraph;\r\n}\r\nexport function GetSubGraphs(state) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    if (currentGraph) {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        let subgraphs = GraphMethods.getSubGraphs(currentGraph);\r\n        return subgraphs;\r\n    }\r\n    return null;\r\n}\r\nexport function addNewSubGraph() {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = GraphMethods.addNewSubGraph(rootGraph);\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\n\r\nexport function setRootGraph(key, value) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph = {\r\n            ...rootGraph, ...{ [key]: value }\r\n        };\r\n        SaveGraph(rootGraph, dispatch);\r\n    };\r\n}\r\nexport function setAppsettingsAssemblyPrefixes(prefixes) {\r\n    return (dispatch, getState) => {\r\n        var rootGraph = GetRootGraph(getState(), dispatch);\r\n        rootGraph.appConfig.AppSettings.AssemblyPrefixes = ['RedQuick', prefixes].unique(x => x).join(';')\r\n        SaveGraph(rootGraph, dispatch);\r\n    }\r\n}\r\nexport function GetCurrentScopedGraph(state, dispatch) {\r\n    var currentGraph = Application(state, CURRENT_GRAPH);\r\n    let scope = Application(state, GRAPH_SCOPE) || [];\r\n    if (!currentGraph) {\r\n        if (dispatch) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n        }\r\n    }\r\n    else {\r\n        currentGraph = Graphs(state, currentGraph);\r\n        if (scope.length) {\r\n            currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n        }\r\n    }\r\n    return currentGraph\r\n}\r\nexport function GetSelectedSubgraph(state) {\r\n    var root = GetRootGraph(state);\r\n    if (root) {\r\n        var scope = Application(state, GRAPH_SCOPE);\r\n        if (scope && scope.length) {\r\n            return GraphMethods.getSubGraph(root, scope);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport const UPDATE_GRAPH_TITLE = 'UPDATE_GRAPH_TITLE';\r\nexport const NEW_NODE = 'NEW_NODE';\r\nexport const REMOVE_NODE = 'REMOVE_NODE';\r\nexport const NEW_LINK = 'NEW_LINK';\r\nexport const CHANGE_NODE_TEXT = 'CHANGE_NODE_TEXT';\r\nexport const CURRENT_GRAPH = 'CURRENT_GRAPH';\r\nexport const GRAPH_SCOPE = 'GRAPH_SCOPE';\r\nexport const ADD_DEFAULT_PROPERTIES = 'ADD_DEFAULT_PROPERTIES';\r\nexport const CHANGE_NODE_PROPERTY = 'CHANGE_NODE_PROPERTY';\r\nexport const NEW_PROPERTY_NODE = 'NEW_PROPERTY_NODE';\r\nexport const NEW_PERMISSION_NODE = 'NEW_PERMISSION_NODE';\r\nexport const NEW_ATTRIBUTE_NODE = 'NEW_ATTRIBUTE_NODE';\r\nexport const ADD_LINK_BETWEEN_NODES = 'ADD_LINK_BETWEEN_NODES';\r\nexport const NEW_CONDITION_NODE = 'NEW_CONDITION_NODE';\r\nexport const REMOVE_LINK_BETWEEN_NODES = 'REMOVE_LINK_BETWEEN_NODES';\r\nexport const REMOVE_LINK = 'REMOVE_LINK';\r\nexport const NEW_CHOICE_ITEM_NODE = 'NEW_CHOICE_ITEM_NODE';\r\nexport const NEW_PARAMETER_NODE = 'NEW_PARAMETER_NODE';\r\nexport const NEW_FUNCTION_OUTPUT_NODE = 'NEW_FUNCTION_OUTPUT_NODE';\r\nexport const NEW_MODEL_ITEM_FILTER = 'NEW_MODEL_ITEM_FILTER';\r\nexport const NEW_AFTER_METHOD = 'NEW_AFTER_METHOD';\r\nexport const NEW_VALIDATION_ITEM_NODE = 'NEW_VALIDATION_ITEM_NODE';\r\nexport const NEW_CHOICE_TYPE = 'NEW_CHOICE_TYPE';\r\nexport const NEW_VALIDATION_TYPE = 'NEW_VALIDATION_TYPE';\r\nexport const NEW_OPTION_ITEM_NODE = 'NEW_OPTION_ITEM_NODE';\r\nexport const NEW_OPTION_NODE = 'NEW_OPTION_NODE';\r\nexport const NEW_CUSTOM_OPTION = 'NEW_CUSTOM_OPTION';\r\nexport const NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE = 'NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE';\r\nexport const NEW_EXTENSION_LIST_NODE = 'NEW_EXTENSION_LIST_NODE';\r\nexport const NEW_EXTENTION_NODE = 'NEW_EXTENTION_NODE';\r\nexport const ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY = 'ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY';\r\nexport const APPLY_FUNCTION_CONSTRAINTS = 'APPLY_FUNCTION_CONSTRAINTS';\r\nexport const ADD_NEW_REFERENCE_NODE = 'ADD_NEW_REFERENCE_NODE;'\r\nexport const SET_DEPTH = 'SET_DEPTH';\r\n\r\nexport function graphOperation(operation, options) {\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let rootGraph = null;\r\n        var currentGraph = Application(state, CURRENT_GRAPH);\r\n        let scope = Application(state, GRAPH_SCOPE) || [];\r\n        if (!currentGraph) {\r\n            currentGraph = GraphMethods.createGraph();\r\n            SaveApplication(currentGraph.id, CURRENT_GRAPH, dispatch);\r\n            rootGraph = currentGraph\r\n        }\r\n        else {\r\n            currentGraph = Graphs(state, currentGraph);\r\n            rootGraph = currentGraph;\r\n            if (scope.length) {\r\n                currentGraph = GraphMethods.getScopedGraph(currentGraph, { scope });\r\n            }\r\n        }\r\n        var operations = operation;\r\n        if (!Array.isArray(operation)) {\r\n            operations = [{ operation: operation, options }]\r\n        }\r\n        operations.filter(x => x).map(op => {\r\n            let { operation, options } = op;\r\n            switch (operation) {\r\n                case SET_DEPTH:\r\n                    currentGraph = GraphMethods.setDepth(currentGraph, options);\r\n                    break;\r\n                case NEW_NODE:\r\n                    currentGraph = GraphMethods.newNode(currentGraph);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case REMOVE_NODE:\r\n                    currentGraph = GraphMethods.removeNode(currentGraph, options);\r\n                    break;\r\n                case UPDATE_GRAPH_TITLE:\r\n                    currentGraph = GraphMethods.updateGraphTitle(currentGraph, options);\r\n                    break;\r\n                case NEW_LINK:\r\n                    currentGraph = GraphMethods.newLink(currentGraph, options)\r\n                    break;\r\n                case ADD_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.addLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK_BETWEEN_NODES:\r\n                    currentGraph = GraphMethods.removeLinkBetweenNodes(currentGraph, options)\r\n                    break;\r\n                case REMOVE_LINK:\r\n                    currentGraph = GraphMethods.removeLinkById(currentGraph, options);\r\n                    break;\r\n                case CHANGE_NODE_TEXT:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, { ...options, prop: 'text' });\r\n                    break;\r\n                case CHANGE_NODE_PROPERTY:\r\n                    currentGraph = GraphMethods.updateNodeProperty(currentGraph, options);\r\n                    break;\r\n                case NEW_PROPERTY_NODE:\r\n                    currentGraph = GraphMethods.addNewPropertyNode(currentGraph, options);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_DEFAULT_PROPERTIES:\r\n                    currentGraph = GraphMethods.addDefaultProperties(currentGraph, options);\r\n                    break;\r\n                case NEW_ATTRIBUTE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Attribute);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CONDITION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Condition);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_MODEL_ITEM_FILTER:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ModelItemFilter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_AFTER_METHOD:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.AfterEffect);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_PROPERTY_DEPENDENCY_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.PermissionDependency);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CHOICE_TYPE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ChoiceList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PARAMETER_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Parameter);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_FUNCTION_OUTPUT_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.FunctionOutput);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_PERMISSION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.Permission);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_CUSTOM_OPTION:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionCustom);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_NEW_REFERENCE_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ReferenceNode);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENSION_LIST_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionTypeList);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_VALIDATION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ValidationListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_EXTENTION_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.ExtensionType);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case NEW_OPTION_ITEM_NODE:\r\n                    currentGraph = GraphMethods.addNewNodeOfType(currentGraph, options, NodeTypes.OptionListItem);\r\n                    setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case APPLY_FUNCTION_CONSTRAINTS:\r\n                    currentGraph = GraphMethods.applyFunctionConstraints(currentGraph, options);\r\n                    // setVisual(SELECTED_NODE, currentGraph.nodes[currentGraph.nodes.length - 1])(dispatch, getState);\r\n                    break;\r\n                case ADD_EXTENSION_DEFINITION_CONFIG_PROPERTY:\r\n                    break;\r\n            }\r\n            currentGraph = GraphMethods.applyConstraints(currentGraph);\r\n            currentGraph = GraphMethods.constraintSideEffects(currentGraph);\r\n        })\r\n\r\n        if (scope.length) {\r\n            rootGraph = GraphMethods.setScopedGraph(rootGraph, { scope, graph: currentGraph });\r\n        }\r\n        else {\r\n            rootGraph = currentGraph;\r\n        }\r\n        rootGraph = GraphMethods.updateReferenceNodes(rootGraph);\r\n        SaveGraph(rootGraph, dispatch)\r\n    }\r\n}\r\n\r\nexport const Colors = {\r\n    SelectedNode: '#f39c12'\r\n};\r\n","import { GetNodeTitle } from \"../actions/uiactions\";\r\n\r\nexport function uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n((array) => {\r\n    if (!array.relativeCompliment) {\r\n        var extrasection_relativeCompliment = {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func, output) {\r\n                var collection = this;\r\n                var result = [];\r\n\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {//function (x) { return x == collection[i]; }\r\n                    if (!othercollection.some(func.bind(null, collection[i]))) {\r\n                        result.push(collection[i]);\r\n                    }\r\n                    else if (output) {\r\n                        output.push(collection[i]);\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        if (!array.relativeCompliment) {\r\n            Object.defineProperty(array, 'relativeCompliment', extrasection_relativeCompliment);\r\n        }\r\n    }\r\n\r\n    if (!array.intersection) {\r\n        Object.defineProperty(array, 'intersection', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (othercollection, func) {\r\n                var collection = this;\r\n                var result = [];\r\n                func = func || function (x, y) { return x === y; };\r\n                for (var i = collection.length; i--;/**/) {\r\n                    for (var j = othercollection.length; j--;/**/) {\r\n                        if ((func(othercollection[j], collection[i]))) {\r\n                            result.push(collection[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n    if (!array.toNodeSelect) {\r\n        Object.defineProperty(array, 'toNodeSelect', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function () {\r\n                var collection = this;\r\n                return collection.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        id: node.id,\r\n                        title: GetNodeTitle(node)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    if (!array.unique) {\r\n        Object.defineProperty(array, 'unique', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var result = [];\r\n                var finalresult = [];\r\n                func = func || function (x) { return x; };\r\n                var collection = this;\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    //if (func(collection[i])) {\r\n                    if (result.indexOf(func(collection[i])) === -1) {\r\n                        result.push(func(collection[i]));\r\n                        finalresult.push(collection[i]);\r\n                    }\r\n                    //}\r\n                }\r\n                return finalresult;\r\n                //return result;\r\n            }\r\n        });\r\n    }\r\n    if (!array.removeIndices) {\r\n        //removeIndices\r\n        Object.defineProperty(array, 'removeIndices', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (indices) {\r\n                indices = indices.orderBy(function (x, y) { return y - x; });\r\n                var collection = this;\r\n                indices.map(function (index) {\r\n                    collection.splice(index, 1);\r\n                });\r\n\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.interpolate) {\r\n        Object.defineProperty(array, 'interpolate', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop, func) {\r\n                var collection = this;\r\n                func = func || function (x) { return x; };\r\n                for (var i = start; i < stop; i++) {\r\n                    if (collection instanceof Float32Array) {\r\n                        collection[i - start] = (func(i));\r\n                    }\r\n                    else\r\n                        collection.push(func(i, i - start));\r\n                }\r\n                return collection;\r\n            }\r\n        });\r\n    }\r\n    if (!array.orderBy) {\r\n        Object.defineProperty(array, 'orderBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this.map(function (x) { return x; });\r\n                return collection.sort(func);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (!array.groupBy) {\r\n        Object.defineProperty(array, 'groupBy', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (func) {\r\n                var collection = this;\r\n                var result = {};\r\n                for (var i = 0; i < collection.length; i++) {\r\n                    var t = func(collection[i]);\r\n                    result[t] = result[t] || [];\r\n                    result[t].push(collection[i]);\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!array.subset) {\r\n        Object.defineProperty(array, 'subset', {\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true,\r\n            value: function (start, stop) {\r\n                var collection = this;\r\n                stop = Math.min(collection.length, stop === undefined || stop === null ? collection.length : stop);\r\n                start = Math.min(collection.length, start === undefined || start === null ? collection.length : start);\r\n                start = start < 0 ? 0 : start;\r\n                stop = stop < 0 ? 0 : stop;\r\n                var result = this instanceof Float32Array ? new Float32Array(stop - start) : [];\r\n                for (var i = start; i < stop; i++) {\r\n                    if (this instanceof Float32Array) {\r\n                        result[i - start] = collection[i];\r\n                    }\r\n                    else {\r\n                        result.push(collection[i]);\r\n                    }\r\n\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n})(Array.prototype)\r\n\r\n","export const HandlerEvents = {\r\n    scaffold: {\r\n        message: 'scaffold-project',\r\n        reply: 'scaffold-project-reply'\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\n\r\nconst NAME_SPACE_TEMPLATE = './app/templates/namespace.tpl';\r\n\r\nexport default class NamespaceGenerator {\r\n    static Generate(options) {\r\n        var { template, namespace, space, usings } = options;\r\n        let namespaceTemplate = fs.readFileSync(NAME_SPACE_TEMPLATE, 'utf8');\r\n\r\n        namespaceTemplate = bindTemplate(namespaceTemplate, {\r\n            namespace,\r\n            space,\r\n            imports: usings ? usings.map(x=> `using ${x};`).unique(x => x).join('\\r\\n') : null,\r\n            body: template\r\n        })\r\n\r\n        return namespaceTemplate;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONTROLLER_CLASS_TEMPLATE = './app/templates/controller/controller.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE = './app/templates/controller/controller_functions_get.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class ControllerGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let controllers = NodesByType(state, NodeTypes.Controller);\r\n\r\n        let _controllerTemplateClass = fs.readFileSync(CONTROLLER_CLASS_TEMPLATE, 'utf8');\r\n        let _controllerTemplateFunction = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_TEMPLATE, 'utf8');\r\n        let _controllerTemplateFunctionGet = fs.readFileSync(CONTROLLER_CLASS_FUNCTION_GET_TEMPLATE, 'utf8');\r\n        let root = GetRootGraph(state);\r\n        let result = {};\r\n        controllers.map(controller => {\r\n            let controllerTemplateClass = _controllerTemplateClass;\r\n            let functions = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(controller, NodeProperties.CodeName)}`;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            let maestro_functions = [];\r\n            let maestros = GraphMethods.getNodesByLinkType(root, {\r\n                id: controller.id,\r\n                type: LinkType.MaestroLink,\r\n                direction: GraphMethods.SOURCE\r\n            }).map(maestro => {\r\n                let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                    id: maestro.id,\r\n                    type: LinkType.FunctionLink,\r\n                    direction: GraphMethods.SOURCE\r\n                });\r\n                let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n                maestro_functions = tempfunctions;\r\n                if (maestro_functions.length) {\r\n                    maestro_functions.filter(x => !GetNodeProp(x, NodeProperties.NotIncludedInController)).map(maestro_function => {\r\n                        var ft = MethodFunctions[GetNodeProp(maestro_function, NodeProperties.FunctionType)];\r\n                        if (ft) {\r\n                            let tempFunction = ft.controller || _controllerTemplateFunction;\r\n                            let parameters = '';\r\n                            let parameter_route = '';\r\n                            let parameter_values = '';\r\n                            //If the function is a get then, use the get template.\r\n                            if ([Methods.Get, Methods.GetAll].some(v => v === GetNodeProp(maestro_function, NodeProperties.MethodType))) {\r\n                                tempFunction = _controllerTemplateFunctionGet;\r\n                                let paramName = 'modelId';\r\n                                if (ft.parentGet) {\r\n                                    paramName = 'parentId';\r\n                                }\r\n                                parameters = `string ${paramName}`;\r\n                                parameter_route = `/{${paramName}}`;\r\n                                parameter_values = `${paramName}`;\r\n                            }\r\n                            let codeNode = GetNodeProp(maestro_function, NodeProperties.CodeName);\r\n                            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                                id: maestro_function.id,\r\n                                type: LinkType.FunctionConstraintLink,\r\n                                direction: GraphMethods.SOURCE\r\n                            });\r\n\r\n                            let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                            let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                            let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                            let methodProperties = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                            if (!methodProperties) return;\r\n                            let modelNode = GraphMethods.GetNode(root, methodProperties.model);\r\n                            let compositeInput = GraphMethods.GetNode(graphRoot, methodProperties[FunctionTemplateKeys.CompositeInput])\r\n                            let output_type = '{controller_generator_missing_model}';\r\n                            if (modelNode) {\r\n                                output_type = GetNodeProp(modelNode, NodeProperties.CodeName) || output_type;\r\n                                if (ft.isList) {\r\n                                    output_type = `IList<${output_type}>`;\r\n                                }\r\n                            }\r\n                            tempFunction = bindTemplate(tempFunction, {\r\n                                functionName: functionName,\r\n                                maestro_function: functionName,\r\n                                parameters,\r\n                                parameter_values,\r\n                                parameter_route,\r\n                                http_route: httpRoute || '{controller_generator_http_method',\r\n                                http_method: httpMethod || '{controller_generator_http_method',\r\n                                user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                                output_type: output_type,\r\n                                maestro_interface: ToInterface(maestroName),\r\n                                input_type: (compositeInput || modelNode) ? GetCodeName(compositeInput || modelNode) : '{controller_generator_missing_model}'\r\n                            })\r\n                            // let template = ft.template;\r\n                            // if (ft.template_keys) {\r\n                            //     for (var template_key in template_key) {\r\n                            //         for (var modifiers in TEMPLATE_KEY_MODIFIERS) {\r\n\r\n                            //         }\r\n                            //     }\r\n                            // }\r\n                            functions += jNL + tempFunction;\r\n                        }\r\n\r\n                    })\r\n                }\r\n                controllerTemplateClass = bindTemplate(controllerTemplateClass, {\r\n                    codeName: codeName,\r\n                    'codeName#alllower': codeName.toLowerCase(),\r\n                    user_instance: controller ? GetNodeProp(controller, NodeProperties.CodeUser) : '{controller_generator_code_name}',\r\n                    user: userNode ? GetNodeProp(userNode, NodeProperties.CodeName) : '{controller_generator_code_name}',\r\n                    functions\r\n                });\r\n            });\r\n            result[GetNodeProp(controller, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(controller, NodeProperties.CodeName),\r\n                name: GetNodeProp(controller, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: controllerTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        'Microsoft.AspNetCore.Mvc'\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, GetRootGraph, NodesByType, NodePropertyTypes, NEW_LINK, GetCurrentGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, Usings, ValidationRules, NameSpace, NodeTypes, STANDARD_CONTROLLER_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nconst MODEL_TEMPLATE = './app/templates/models/model.tpl';\r\nconst MODEL_PROPERTY_TEMPLATE = './app/templates/models/model_property.tpl';\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst MODEL_ATTRIBUTE_TEMPLATE = './app/templates/models/model_attributes.tpl';\r\nexport default class ModelGenerator {\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let result = {};\r\n        models.map(model => {\r\n            var res = ModelGenerator.GenerateModel({\r\n                graph: graphRoot,\r\n                nodeId: model.id,\r\n                state\r\n            });\r\n            result[res.id] = res;\r\n        });\r\n\r\n        return result;\r\n    }\r\n    static GenerateModel(options) {\r\n        var { state, graph, nodeId } = options;\r\n        var key = nodeId;\r\n        var usings = [];\r\n        var templateSwapDictionary = {};\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n\r\n        var node = GraphMethods.GetNode(graph, nodeId);\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        templateSwapDictionary.model = GetNodeProp(node, NodeProperties.CodeName);\r\n        templateSwapDictionary.base_model = GetNodeProp(node, NodeProperties.IsUser) ? 'RedUser' : 'DBaseData';\r\n        templateSwapDictionary.account_enabling_func = '';\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            templateSwapDictionary.account_enabling_func = `\r\n            \r\n        public static User Create(RedExternalLoginViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }\r\n        public static User Create(RedRegisterViewModel model)\r\n        {\r\n            return new User\r\n            {\r\n                Email = model.Email,\r\n                UserName = model.UserName\r\n            };\r\n        }`\r\n        }\r\n        templateSwapDictionary.attributes = '';\r\n        var connectedProperties = GraphMethods.getNodesByLinkType(graph, {\r\n            id: node.id,\r\n            type: LinkType.PropertyLink,\r\n            direction: GraphMethods.SOURCE\r\n        });\r\n        let propertyTemplate = fs.readFileSync(MODEL_PROPERTY_TEMPLATE, 'utf8');\r\n        let attributeTemplate = fs.readFileSync(MODEL_ATTRIBUTE_TEMPLATE, 'utf8');\r\n        let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf8');\r\n\r\n        let validatorFunctions = GraphMethods.getNodesByLinkType(graph, {\r\n            id: nodeId,\r\n            type: LinkType.ValidatorModel,\r\n            direction: GraphMethods.TARGET\r\n        }).map(t => GetNodeProp(t, NodeProperties.CodeName)).map(t => ModelGenerator.tabs(1) + `[${t}]` + NEW_LINE).join('');\r\n        templateSwapDictionary.attributes = validatorFunctions;\r\n\r\n        let staticFunctions = [];\r\n        let properties = connectedProperties.filter(x => !GetNodeProp(x, NodeProperties.IsDefaultProperty)).map(propNode => {\r\n            var connectedAttributes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propNode.id,\r\n                type: LinkType.AttributeLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let property_instance_template = propertyTemplate;\r\n            let np = GetNodeProp(propNode, NodeProperties.UIAttributeType);\r\n            if (Usings[ProgrammingLanguages.CSHARP][np]) {\r\n                usings.push(\r\n                    ...Usings[ProgrammingLanguages.CSHARP][np],\r\n                    `${namespace}${NameSpace.Model}`,\r\n                    `${namespace}${NameSpace.Extensions}`)\r\n            }\r\n            let propType = NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][np];\r\n            if (GetNodeProp(propNode, NodeProperties.UIModelType)) {\r\n                propType = 'string';\r\n\r\n            }\r\n            \r\n            if (GetNodeProp(propNode, NodeProperties.UseModelAsType)) {\r\n                if (GetNodeProp(propNode, NodeProperties.IsReferenceList)) {\r\n                    propType = `IList<${propType}>`;\r\n                }\r\n            }\r\n\r\n            let propSwapDictionary = {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                property_type: propType,\r\n                property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                attributes: connectedAttributes.map(attr => {\r\n                    var options_lists = GraphMethods.getNodesByLinkType(graph, {\r\n                        id: attr.id,\r\n                        type: LinkType.Option,\r\n                        direction: GraphMethods.SOURCE\r\n                    });\r\n                    let options_list = [];\r\n                    options_lists.map(ol => {\r\n                        var ols = GraphMethods.getNodesByLinkType(graph, {\r\n                            id: ol.id,\r\n                            type: LinkType.OptionItem,\r\n                            direction: GraphMethods.SOURCE\r\n                        });\r\n                        ols.map(_ols => {\r\n                            if (GetNodeProp(_ols, NodeProperties.UseCustomUIOption)) {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionTypeCustom));\r\n                            }\r\n                            else {\r\n                                options_list.push(GetNodeProp(_ols, NodeProperties.UIOptionType));\r\n                            }\r\n                        })\r\n                    });\r\n                    options_list = options_list.unique().map(t => `UIAttribute.${t}`);\r\n\r\n                    var ReverseRules = {};\r\n                    Object.keys(ValidationRules).map(_key => {\r\n                        ReverseRules[ValidationRules[_key]] = _key;\r\n                    })\r\n                    var validations = [];\r\n                    if (GetNodeProp(attr, NodeProperties.UseUIValidations)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Validation,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            GraphMethods.getNodesByLinkType(graph, {\r\n                                id: vnode.id,\r\n                                type: LinkType.ValidationItem,\r\n                                direction: GraphMethods.SOURCE\r\n                            }).map(vnodeItem => {\r\n                                validations.push(`ValidationRules.${ReverseRules[GetNodeProp(vnodeItem, NodeProperties.UIValidationType)]}`)\r\n                            })\r\n                        });\r\n                    }\r\n                    let choice_name = null;\r\n                    if (GetNodeProp(attr, NodeProperties.UIExtensionList)) {\r\n                        GraphMethods.getNodesByLinkType(graph, {\r\n                            id: attr.id,\r\n                            type: LinkType.Extension,\r\n                            direction: GraphMethods.SOURCE\r\n                        }).map(vnode => {\r\n                            choice_name = GetNodeProp(vnode, NodeProperties.CodeName)\r\n                        });\r\n                    }\r\n\r\n                    let options = options_list && options_list.length ? bindTemplate(`Options = new string[] { {{options_list}} },`, {\r\n                        options_list: options_list.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let validation_rules = validations && validations.length ? bindTemplate(`ValidationRules = new string[] { {{validation_list}} },`, {\r\n                        validation_list: validations.map(t => `${t}`).join(', ')\r\n                    }) : '';\r\n\r\n                    let choice_type_list = [];\r\n                    let choice_type = choice_name ? bindTemplate('ChoiceType = {{choice_type}}.Name,', {\r\n                        choice_type: choice_name\r\n                    }) : '';\r\n\r\n                    let attributeSwapDictionary = {\r\n                        property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                        property_type: GetNodeProp(propNode, NodeProperties.UseModelAsType) ? GetNodeProp(propNode, NodeProperties.UIModelType) : GetNodeProp(propNode, NodeProperties.UIAttributeType),\r\n                        ui_title: GetNodeProp(propNode, NodeProperties.UIName),\r\n                        singular: GetNodeProp(propNode, NodeProperties.UISingular) ? 'true' : 'false',\r\n                        options,\r\n                        choice_type,\r\n                        validation_rules\r\n                    }\r\n                    if (attr && attr.uiValidationType) {\r\n                    }\r\n                    return bindTemplate(attributeTemplate, attributeSwapDictionary);\r\n                }).filter(x => x).join('\\r\\n')\r\n            }\r\n\r\n            property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n            return property_instance_template;\r\n        });\r\n        if (GetNodeProp(node, NodeProperties.HasLogicalChildren) && GetNodeProp(node, NodeProperties.ManyToManyNexus)) {\r\n            (GetNodeProp(node, NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                let propNode = GraphMethods.GetNode(GetCurrentGraph(state), t);\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(propNode, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                };\r\n\r\n                properties.push(bindTemplate(propertyTemplate, propSwapDictionary));\r\n            });\r\n        }\r\n\r\n\r\n        let staticDic = {\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        };\r\n        staticFunctions.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n\r\n        if (GetNodeProp(node, NodeProperties.IsUser)) {\r\n            var agenNodes = NodesByType(state, NodeTypes.Model).filter(x => x.id !== node.id && GetNodeProp(x, NodeProperties.IsAgent));\r\n            agenNodes.map(agent => {\r\n\r\n                let property_instance_template = propertyTemplate;\r\n                let propSwapDictionary = {\r\n                    property_type: NodePropertyTypesByLanguage[ProgrammingLanguages.CSHARP][NodePropertyTypes.STRING],\r\n                    property: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    attributes: ''\r\n                }\r\n                property_instance_template = bindTemplate(property_instance_template, propSwapDictionary);\r\n                properties.push(property_instance_template);\r\n            })\r\n        }\r\n        templateSwapDictionary.properties = properties.join('');\r\n        templateSwapDictionary.staticFunctions = staticFunctions.unique(x => x).join('\\n');\r\n        console.log(templateSwapDictionary.properties)\r\n        let modelTemplate = fs.readFileSync(MODEL_TEMPLATE, 'utf8');\r\n        modelTemplate = bindTemplate(modelTemplate, templateSwapDictionary);\r\n\r\n        var result = {\r\n            id: GetNodeProp(node, NodeProperties.CodeName),\r\n            name: GetNodeProp(node, NodeProperties.CodeName),\r\n            template: NamespaceGenerator.Generate({\r\n                template: modelTemplate,\r\n                usings: [...usings,\r\n                    `RedQuickCore.Identity`,\r\n                `${namespace}${NameSpace.Validations}`,\r\n                ...STANDARD_CONTROLLER_USING],\r\n                namespace,\r\n                space: NameSpace.Model\r\n            })\r\n        };\r\n        return result;\r\n    }\r\n    static tabs(c) {\r\n        let res = '';\r\n        var TAB = \"\\t\";\r\n        for (var i = 0; i < c; i++) {\r\n            res = res + TAB;\r\n        }\r\n        return res;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, MakeConstant, ConstantsDeclaration, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst EXTENSION_CLASS_TEMPLATE = './app/templates/extensions/extensions.tpl';\r\nconst EXTENSION_PROPERTY_TEMPLATE = './app/templates/extensions/extension_properties.tpl';\r\nconst EXTENSION_NEW_INSTANCE = './app/templates/extensions/extension_new_instance.tpl';\r\nconst EXTENSION_NEW_PROPERTY = './app/templates/extensions/extension_new_instance_properties.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_LIST = './app/templates/extensions/extension_new_instance_list.tpl';\r\nconst EXTENSION_NEW_INSTANCE_LIST_ADD = './app/templates/extensions/extension_new_instance_list_add.tpl';\r\n\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY = './app/templates/extensions/extension_new_instance_dictionary.tpl';\r\nconst EXTENSION_NEW_INSTANCE_DICTIONARY_ADD = './app/templates/extensions/extension_new_instance_dictionary_add.tpl';\r\nconst EXTENSION_NEW_TEMPLATE_LIST = './app/templates/extensions/create_new_list_instance.tpl'\r\nconst PROPERTY_TABS = 6;\r\nexport default class ExtensionGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static GetExtensionNodeValues(extensionNode) {\r\n        var def = GetNodeProp(extensionNode, NodeProperties.UIExtensionDefinition);\r\n        if (def && def.config) {\r\n            if (def.config.isEnumeration) {\r\n                var extensionValues = def.config.list.map(t => {\r\n                    return def.config.keyField ? t[def.config.keyField] : t[Object.keys(t)[0]];\r\n                });\r\n                return extensionValues\r\n            }\r\n        }\r\n        throw new Error(\"unhandled - getting extensions nodes not as an enumeration\")\r\n    }\r\n    static CreateListInstanceTemplate(options) {\r\n        let { node, name } = options;\r\n        let _newTemplateList = fs.readFileSync(EXTENSION_NEW_TEMPLATE_LIST, 'utf8');\r\n        return bindTemplate(_newTemplateList, {\r\n            name,\r\n            model: GetNodeProp(node, NodeProperties.CodeName)\r\n        });\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let extensions = NodesByType(state, NodeTypes.ExtensionType);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _extensionClassTemplate = fs.readFileSync(EXTENSION_CLASS_TEMPLATE, 'utf8');\r\n        let _extensionPropertyTemplate = fs.readFileSync(EXTENSION_PROPERTY_TEMPLATE, 'utf8');\r\n        let _extensionNewInstance = fs.readFileSync(EXTENSION_NEW_INSTANCE, 'utf8');\r\n        let _extensionNewProperty = fs.readFileSync(EXTENSION_NEW_PROPERTY, 'utf8');\r\n        let _extensionNewInstanceList = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST, 'utf8');\r\n        let _extensionNewInstanceListAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_LIST_ADD, 'utf8');\r\n        let _extensionNewInstanceDictionary = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY, 'utf8');\r\n        let _extensionNewInstanceDictionaryAdd = fs.readFileSync(EXTENSION_NEW_INSTANCE_DICTIONARY_ADD, 'utf8');\r\n        let result = {};\r\n        extensions.map(extension => {\r\n            let extensionClassTemplate = _extensionClassTemplate;\r\n            let properties = '';\r\n            let statics = '';\r\n            var constants = [];\r\n            let uiExtensionDefinition = GetNodeProp(extension, NodeProperties.UIExtensionDefinition);\r\n            if (uiExtensionDefinition) {\r\n                let modelName = GetNodeProp(extension, NodeProperties.CodeName);\r\n                let { config, definition } = uiExtensionDefinition;\r\n                if (definition) {\r\n                    definition = { ...definition, Value: 'string' };\r\n                    properties = Object.keys(definition).map(e => {\r\n                        var extensionPropertyTemplate = _extensionPropertyTemplate;\r\n\r\n                        extensionPropertyTemplate = bindTemplate(extensionPropertyTemplate, {\r\n                            name: modelName,\r\n                            property: e,\r\n                            type: definition[e]\r\n                        });\r\n                        return extensionPropertyTemplate;\r\n                    }).join('');\r\n                    if (config) {\r\n                        var instances = [];\r\n                        let instance = '';\r\n                        if (config.isEnumeration) {\r\n                            instances = config.list.map((item, item_index) => {\r\n                                item = { ...item, Value: (item_index + 1) }\r\n                                let temp;\r\n                                let props = Object.keys(item).map(key => {\r\n                                    let temp = _extensionNewProperty;\r\n                                    temp = bindTemplate(temp, {\r\n                                        property: key,\r\n                                        value: MakeConstant(item[key])\r\n                                    });\r\n                                    if (isNaN(item[key]))\r\n                                        constants.push({\r\n                                            name: MakeConstant(item[key]),\r\n                                            value: `\"${item[key]}\"`\r\n                                        })\r\n                                    return temp;\r\n                                }).join(`,${NL}`);\r\n                                temp = _extensionNewInstance;\r\n                                temp = bindTemplate(temp, {\r\n                                    properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                    model: modelName\r\n                                });\r\n                                return temp;\r\n                            })\r\n                        }\r\n                        else {\r\n                            let temp;\r\n                            let props = Object.keys(config.dictionary).map(key => {\r\n                                let temp = _extensionNewProperty;\r\n                                let item = { ...config.dictionary };\r\n                                temp = bindTemplate(temp, {\r\n                                    property: key,\r\n                                    value: MakeConstant(item[key])\r\n                                });\r\n                                if (isNaN(item[key]))\r\n                                    constants.push({\r\n                                        name: MakeConstant(item[key]),\r\n                                        value: `\"${item[key]}\"`\r\n                                    })\r\n                                return temp;\r\n                            }).join(`,${NL}`);\r\n                            temp = _extensionNewInstance;\r\n                            temp = bindTemplate(temp, {\r\n                                properties: jNL + ExtensionGenerator.Tabs(PROPERTY_TABS) + props,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp;\r\n                            let temp_instance = _extensionNewInstanceDictionary;\r\n                            temp_instance = bindTemplate(temp_instance, {\r\n                                instance,\r\n                                model: modelName\r\n                            });\r\n                            instance = temp_instance;\r\n                        }\r\n                        instances = instances.map(inst => {\r\n                            let temp = _extensionNewInstanceListAdd;\r\n\r\n                            temp = bindTemplate(temp, {\r\n                                instance: inst\r\n                            })\r\n                            return temp;\r\n                        });\r\n\r\n                        let templist = _extensionNewInstanceList;\r\n                        statics = bindTemplate(templist, {\r\n                            addings: instances.join(''),\r\n                            model: modelName\r\n                        }) + jNL + instance;\r\n                    }\r\n                }\r\n            }\r\n            extensionClassTemplate = bindTemplate(extensionClassTemplate, {\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                properties,\r\n                statics: statics,\r\n                constants: constants.unique(x => x).map(co => jNL + ExtensionGenerator.Tabs(3) + ConstantsDeclaration(co)).join('')\r\n            });\r\n\r\n            result[GetNodeProp(extension, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(extension, NodeProperties.CodeName),\r\n                name: GetNodeProp(extension, NodeProperties.CodeName),\r\n                template: NamespaceGenerator.Generate({\r\n                    template: extensionClassTemplate,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Extensions\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph, GetLinkProperty, GetCodeName, GetMethodPropNode, GetLinkChainItem, GetPermissionMethod, GetFunctionType, GetMethodNodeProp, GetNodeCode, GetC } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, MakeConstant, CreateStringList, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, ConditionTypes, ConditionTypeParameters, ConditionCases, FunctionTemplateKeys, FunctionTypes, INTERNAL_TEMPLATE_REQUIREMENTS } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport ExtensionGenerator from './extensiongenerator';\r\nimport { debug } from 'util';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst TEST_CASE = './app/templates/permissions/tests/test_case.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst TEST_CASE_PROPERTY = './app/templates/permissions/tests/test_case_property.tpl';\r\nconst PERMISSIONS_INTERFACE = './app/templates/permissions/permissions_interface.tpl';\r\nconst PERMISSIONS_CASE_EXTENSION = './app/templates/permissions/permissions_case.tpl';\r\nconst PERMISSIONS_CASE_ENUMERATION = './app/templates/permissions/permissions_case_enumeration.tpl';\r\nconst PERMISSIONS_CASE_INCLUDED_IN_LIST = './app/templates/permissions/permissions_case_included_in_list.tpl';\r\nconst PERMISSIONS_METHODS = './app/templates/permissions/permissions_method.tpl';\r\nconst PERMISSIONS_ARBITER_PROP = './app/templates/permissions/permissions_arbiter_prop.tpl';\r\nconst PERMISSIONS_IMPL = './app/templates/permissions/permissions_impl.tpl';\r\nconst PERMISSIONS_INTERFACE_METHODS = './app/templates/permissions/permissions_interface_methods.tpl';\r\nconst MATCH_TO_MANY_REFERENCE_PARAMETER = './app/templates/permissions/match-many-reference-parameter.tpl';\r\nconst MANY_TO_MANY_CONSTRUCTOR = './app/templates/permissions/tests/many_to_many_constructor.tpl';\r\nconst MATCH_REFERENCE = './app/templates/permissions/match-reference.tpl';\r\n\r\nconst PROPERTY_TABS = 6;\r\nexport default class PermissionGenerator {\r\n    static PermissionMatches(permission, agent, model) {\r\n        var methodNode = GetPermissionMethod(permission);\r\n        if (methodNode) {\r\n            let function_type = GetFunctionType(methodNode);\r\n            switch (function_type) {\r\n                //Add more cases as required.\r\n                case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        GetMethodNodeProp(methodNode, FunctionTemplateKeys.Parent) === model.id;\r\n                    return result;\r\n                default:\r\n                    var result = GetMethodNodeProp(methodNode, FunctionTemplateKeys.Agent) === agent.id &&\r\n                        (GetMethodNodeProp(methodNode, FunctionTemplateKeys.Model) === model.id ||\r\n                            GetMethodNodeProp(methodNode, FunctionTemplateKeys.CompositeInput) === model.id);\r\n                    return result;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    static createInstanceEnumerationListName(dNode, enu, method, type = 'Enums') {\r\n        return `list${type}${GetNodeProp(dNode, NodeProperties.CodeName) || dNode}${GetNodeProp(enu, NodeProperties.CodeName) || enu}${method}`\r\n    }\r\n\r\n    static _createConstantList(name, constants) {\r\n        let result = constants.map(ea => {\r\n            return `${name}.${MakeConstant(ea)}`\r\n        })\r\n        return result;\r\n    }\r\n    //Deprecated\r\n    static _createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_allowed;\r\n    }\r\n    static _getNotAllowedConstances(dpNode, enumerationNode, method) {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedEnumValues) || [];\r\n        let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        let constants_notallowed = ext_disallowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        })\r\n        return constants_notallowed\r\n    }\r\n    static createEnumerationInstanceList(dpNode, enumerationNode, method) {\r\n\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n        let constants_allowed = PermissionGenerator._createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n        // var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedEnumValues) || [];\r\n        // let enumerationName = GetNodeProp(enumerationNode, NodeProperties.CodeName);\r\n        // let constants_allowed = ext_allowed.map(ea => {\r\n        //     return `${enumerationName}.${MakeConstant(ea)}`\r\n        // })\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static createStringList(options) {\r\n        var { name, constants_allowed, enumerationName } = options;\r\n        constants_allowed = constants_allowed.map(ea => {\r\n            return `${enumerationName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n    }\r\n    static _createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_allowed = GetNodeProp(dpNode, NodeProperties.AllowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_allowed = ext_allowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_allowed;\r\n\r\n    }\r\n    static _getNotAllowedExtectionConstances(dpNode, extensionNode, method, type = 'Enums') {\r\n        var ext_disallowed = GetNodeProp(dpNode, NodeProperties.DisallowedExtensionValues) || [];\r\n        let extensionName = GetNodeProp(extensionNode, NodeProperties.CodeName);\r\n\r\n\r\n        let constants_disallowed = ext_disallowed.map(ea => {\r\n            return `${extensionName}.${MakeConstant(ea)}`\r\n        });\r\n\r\n        return constants_disallowed;\r\n\r\n    }\r\n    static createExtensionInstanceList(dpNode, extensionNode, method, type = 'Enums') {\r\n        let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extensionNode, method, 'Extensions');\r\n\r\n        let constants_allowed = PermissionGenerator._createExtensionInstanceList(dpNode, extensionNode, method, type);\r\n\r\n        return `var ${name} = new List<string> { ${constants_allowed.map(t => jNL + Tabs(5) + t).join()} ${jNL + Tabs(5)}};${jNL}`\r\n\r\n    }\r\n    static IsRequestor(graph, model, permission) {\r\n        var requestorNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.RequestorPermissionLink\r\n        });\r\n        return !!requestorNodes.find(node => {\r\n            return node.id === model.id;\r\n        })\r\n    }\r\n    static GetExtensionNodeValues(graph, permission, method, agent, model) {\r\n        const value_string = 'value';\r\n        var dependingPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.PermissionPropertyDependency\r\n        });\r\n        let listOfCases = [];\r\n        dependingPermissionNodes.map(dpNode => {\r\n            let propertyNodeLinkedToByDependencyPermissionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: dpNode.id,\r\n                type: LinkType.PermissionPropertyDependency\r\n            });\r\n\r\n            let propertyNodeLinkedToByDependencyPermissionNode = propertyNodeLinkedToByDependencyPermissionNodes[0];\r\n            if (!propertyNodeLinkedToByDependencyPermissionNode) {\r\n                return;\r\n            }\r\n            let propertyNodes = GraphMethods.getNodesByLinkType(graph, {\r\n                id: propertyNodeLinkedToByDependencyPermissionNode.id,\r\n                type: LinkType.PermissionDependencyProperty\r\n            });\r\n            let propertyNode = null;\r\n            if (propertyNodes.length === 1) {\r\n                propertyNode = propertyNodes[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            var agentLinkExists = GraphMethods.existsLinkBetween(graph, { target: propertyNode.id, source: agent.id, type: LinkType.PropertyLink });\r\n            let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.Enumeration));\r\n            let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(dpNode, NodeProperties.UIExtension));\r\n            let useEnumeration = GetNodeProp(dpNode, NodeProperties.UseEnumeration);\r\n            let useExtension = GetNodeProp(dpNode, NodeProperties.UseExtension);\r\n            let useIncludedInList = GetNodeProp(dpNode, NodeProperties.IncludedInList);\r\n\r\n            if (useIncludedInList) {\r\n                let permissionCaseIncludedInList = fs.readFileSync(PERMISSIONS_CASE_INCLUDED_IN_LIST, 'utf8');\r\n                var tempBindingValues = {\r\n                    method,\r\n                    // It currently happens to be that this is correct, but maybe in the future this needs to be more general.\r\n                    parent: `${GetNodeProp(agent, NodeProperties.AgentName) || 'agent'}`.toLowerCase(),\r\n                    parent_property: 'Id',\r\n                    ///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: ''\r\n                };\r\n                let temp = bindTemplate(permissionCaseIncludedInList, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n            if (useEnumeration) {\r\n                let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf8');\r\n                let enumInstance = PermissionGenerator.createEnumerationInstanceList(dpNode, enumerationNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, enumerationNode, method);\r\n                var tempBindingValues = {\r\n                    method,\r\n                    value: `${agentLinkExists ? 'value' : 'data'}`.toLowerCase(),\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: enumInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n\r\n            }\r\n\r\n            if (useExtension) {\r\n                let definition = GetNodeProp(extentionNode, NodeProperties.UIExtensionDefinition);\r\n                let permissionCaseExtensionTemplate = fs.readFileSync(PERMISSIONS_CASE_EXTENSION, 'utf8');\r\n                let extensionInstance = PermissionGenerator.createExtensionInstanceList(dpNode, extentionNode, method);\r\n                let name = PermissionGenerator.createInstanceEnumerationListName(dpNode, extentionNode, method, 'Extensions');\r\n                let tempBindingValues = {\r\n                    method,\r\n                    value: `value`,\r\n                    value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                    model: 'data',\r\n                    casename: GetNodeProp(dpNode, NodeProperties.CodeName),\r\n                    extension_propery_key: definition && definition.config ? definition.config.keyField : null,\r\n                    extension_value_property: 'Value',\r\n                    'allowed-values-list': name,\r\n                    extension: GetNodeProp(extentionNode, NodeProperties.CodeName),\r\n                    instance_list: extensionInstance\r\n                };\r\n                let temp = bindTemplate(permissionCaseExtensionTemplate, tempBindingValues);\r\n\r\n                listOfCases.push({\r\n                    variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                    template: temp\r\n                });\r\n            }\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static IsAppliedPermission(graph, permission, propertyNode) {\r\n        let appliedPermissionLinks = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.AppliedPermissionLink\r\n        });\r\n        //\r\n        if (appliedPermissionLinks && appliedPermissionLinks.length) {\r\n            var link = GraphMethods.GetLinkByNodes(graph, {\r\n                source: appliedPermissionLinks[0].id,\r\n                target: propertyNode.id\r\n            });\r\n            if (link) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static GetTestExtensionNodeValues(graph, permission, method, agent, model) {\r\n        const value_string = 'value';\r\n        var conditionNodes = GraphMethods.getNodesByLinkType(graph, {\r\n            id: permission.id,\r\n            type: LinkType.Condition\r\n        });\r\n        let listOfCases = [];\r\n        conditionNodes.map(conditionNode => {\r\n\r\n            // let isAppliedPermission = PermissionGenerator.IsAppliedPermission(graph, permission, propertyNode);\r\n            // let enumerationNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.Enumeration));\r\n            // let extentionNode = GraphMethods.GetNode(graph, GetNodeProp(conditionNode, NodeProperties.UIExtension));\r\n            let conditionType = GetNodeProp(conditionNode, NodeProperties.ConditionType);\r\n            switch (conditionType) {\r\n                case ConditionTypes.MatchReference:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchReference);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchReference].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchReference].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.MatchManyReferenceParameter:\r\n                    var mmrp = GetNodeProp(conditionNode, NodeProperties.MatchManyReferenceParameter);\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        values: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].$matching],\r\n                        neg: [ConditionCases[ConditionTypes.MatchManyReferenceParameter].notmatching],\r\n                        options: { ...mmrp }\r\n                    })\r\n\r\n                    break;\r\n                case ConditionTypes.InEnumerable:\r\n\r\n                    var enumRef = GetNodeProp(conditionNode, NodeProperties.EnumerationReference);\r\n                    var enumerationNodeName = PermissionGenerator.getReferencedNodeName(graph, enumRef, NodeProperties.Enumeration);\r\n                    var constList = PermissionGenerator.getReference(enumRef, NodeProperties.AllowedEnumValues);\r\n                    var disAllowedConstList = PermissionGenerator.getReference(enumRef, NodeProperties.DisallowedEnumValues);\r\n                    let enumInstance = PermissionGenerator._createConstantList(enumerationNodeName, constList);\r\n                    let enumNotAllowed = PermissionGenerator._createConstantList(enumerationNodeName, disAllowedConstList);;\r\n                    let nameEnum = PermissionGenerator.createInstanceEnumerationListName(conditionNode, enumerationNodeName, method);\r\n                    let propertyEnum = PermissionGenerator.getReferencedNodeName(graph, enumRef, ConditionTypeParameters.Ref1Property);\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameEnum,\r\n                        ref: enumRef[ConditionTypeParameters.Ref1],\r\n                        property: propertyEnum,\r\n                        values: enumInstance,\r\n                        neg: enumNotAllowed,\r\n                        options: { ...enumRef }\r\n                    });\r\n\r\n                    break;\r\n                case ConditionTypes.InExtension:\r\n                    let definition = GetNodeProp(conditionNode, NodeProperties.UIExtensionDefinition);\r\n                    let extensionInstance = PermissionGenerator._createExtensionInstanceList(conditionNode, extentionNode, method);\r\n                    let extensionsNotAllowed = PermissionGenerator._getNotAllowedExtectionConstances(conditionNode, extentionNode, method);\r\n                    let nameExt = PermissionGenerator.createInstanceEnumerationListName(conditionNode, extentionNode, method, 'Extensions');\r\n                    let propertyExt = GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName);\r\n                    // definition && definition.config ? definition.config.keyField : null;\r\n\r\n                    listOfCases.push({\r\n                        type: conditionType,\r\n                        name: nameExt,\r\n                        property: propertyExt,\r\n                        values: extensionInstance,\r\n                        neg: extensionsNotAllowed,\r\n                        options: { ...definition }\r\n                    });\r\n                    break;\r\n                default:\r\n                    throw 'not handled [permissiongenerator]';\r\n            }\r\n\r\n\r\n\r\n        });\r\n\r\n        return listOfCases;\r\n    }\r\n    static getReferencedNodeName(graph, enumRef, type) {\r\n        return GetNodeProp(PermissionGenerator.getReferencedValue(graph, enumRef, type), NodeProperties.CodeName);\r\n    }\r\n    static getReferencedValue(graph, enumRef, type) {\r\n        return GraphMethods.GetNode(graph, enumRef[type])\r\n    }\r\n    static getReference(enumRef, type) {\r\n        return enumRef[type]\r\n    }\r\n    static GenerateCases(state, permission, agent, model) {\r\n        var graph = GetCurrentGraph(state);\r\n        let _manyToManyMatchCondition = fs.readFileSync(MATCH_TO_MANY_REFERENCE_PARAMETER, 'utf8');\r\n        let _matchReferenceCondition = fs.readFileSync(MATCH_REFERENCE, 'utf8');\r\n        let result = {};\r\n        if (permission) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n                    let cases = [];\r\n                    let conditions = GraphMethods.GetLinkChain(state, {\r\n                        id: permission.id,\r\n                        links: [{\r\n                            type: LinkType.Condition,\r\n                            direction: GraphMethods.SOURCE\r\n                        }]\r\n                    });\r\n                    if (conditions && conditions.length) {\r\n                        conditions.map((t, index) => {\r\n                            var variable = 'variable_' + index;\r\n                            switch (GetNodeProp(t, NodeProperties.ConditionType)) {\r\n                                case ConditionTypes.MatchReference:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchReference);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.Ref1]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n                                                var ref1UseId = mmrp[ConditionTypeParameters.Ref1UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref1UseId]]);\r\n                                                var ref2UseId = mmrp[ConditionTypeParameters.Ref2UseId];// GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.Ref2UseId]]);\r\n\r\n                                                cases.push({\r\n                                                    template: bindTemplate(_matchReferenceCondition, {\r\n                                                        variable,\r\n                                                        value_property: ref1UseId ? 'Id' : GetNodeCode(graph, mmrp[ConditionTypeParameters.Ref1Property]),\r\n                                                        data_property: ref2UseId ? 'Id' : GetNodeCode(graph, mmrp[ConditionTypeParameters.Ref2Property]),\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    options: mmrp,\r\n                                                    methodProps,\r\n                                                    sameInstance: !!(methodProps[mmrp[ConditionTypeParameters.Ref1]] && methodProps[mmrp[ConditionTypeParameters.Ref2]]),\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.MatchManyReferenceParameter:\r\n                                    var mmrp = GetNodeProp(t, NodeProperties.MatchManyReferenceParameter);\r\n                                    if (mmrp) {\r\n                                        var propNode = GraphMethods.GetNode(graph, mmrp[ConditionTypeParameters.RefManyToManyProperty]);\r\n                                        var methods = GraphMethods.GetLinkChain(state, {\r\n                                            id: permission.id,\r\n                                            links: [{\r\n                                                type: LinkType.Condition,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }, {\r\n                                                type: LinkType.FunctionOperator,\r\n                                                direction: GraphMethods.TARGET\r\n                                            }]\r\n                                        });\r\n                                        let method = methods.find(x => x);\r\n                                        if (method) {\r\n                                            let methodProps = GetNodeProp(method, NodeProperties.MethodProps);\r\n                                            if (methodProps) {\r\n\r\n                                                let parms = [ConditionTypeParameters.Ref1, ConditionTypeParameters.Ref2];\r\n                                                var relationship = GraphMethods.GetNode(graph, methodProps[mmrp[ConditionTypeParameters.RefManyToMany]]);\r\n                                                let use_parent = parms.find(p => mmrp[p] === INTERNAL_TEMPLATE_REQUIREMENTS.PARENT && methodProps.model && methodProps.model !== methodProps.parent);\r\n                                                cases.push({\r\n                                                    arbiter: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                    template: bindTemplate(_manyToManyMatchCondition, {\r\n                                                        variable,\r\n                                                        data: use_parent ? INTERNAL_TEMPLATE_REQUIREMENTS.PARENT : 'data',\r\n                                                        relationship: GetNodeProp(relationship, NodeProperties.CodeName),\r\n                                                        property: GetNodeProp(propNode, NodeProperties.CodeName)\r\n                                                    }),\r\n                                                    methodProps,\r\n                                                    options: mmrp,\r\n                                                    variable\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case ConditionTypes.InEnumerable:\r\n                                    var ine = GetNodeProp(t, NodeProperties.EnumerationReference);\r\n                                    if (ine) {\r\n                                        let ref1 = ine[ConditionTypeParameters.Ref1];\r\n\r\n                                        let enumerationNode = GraphMethods.GetNode(graph, ine[NodeProperties.Enumeration]);\r\n                                        if (enumerationNode) {\r\n                                            let casename = GetNodeProp(t, NodeProperties.CodeName) || GetNodeProp(t, NodeProperties.NODEType);\r\n                                            let name = `${casename}_valid_items`;\r\n                                            let permissionCaseEnumerationTemplate = fs.readFileSync(PERMISSIONS_CASE_ENUMERATION, 'utf8');\r\n                                            let enumInstance = PermissionGenerator.createStringList({\r\n                                                name,\r\n                                                constants_allowed: ine[NodeProperties.AllowedEnumValues],\r\n                                                enumerationName: GetNodeProp(enumerationNode, NodeProperties.CodeName)\r\n                                            });\r\n                                            let propertyNodeLinkedToByDependencyPermissionNode = GraphMethods.GetNode(graph, ine[ConditionTypeParameters.Ref1Property])\r\n                                            var tempBindingValues = {\r\n                                                method,\r\n                                                value: `${ref1 !== 'model' ? 'value' : 'data'}`.toLowerCase(),\r\n                                                value_property: GetNodeProp(propertyNodeLinkedToByDependencyPermissionNode, NodeProperties.CodeName),\r\n                                                model: GetNodeProp(model, NodeProperties.CodeName) || GetNodeProp(model, NodeProperties.NODEType),\r\n                                                casename,\r\n                                                'allowed-values-list': name,\r\n                                                instance_list: enumInstance\r\n                                            };\r\n                                            let temp = bindTemplate(permissionCaseEnumerationTemplate, tempBindingValues);\r\n\r\n                                            cases.push({\r\n                                                variable: `can${tempBindingValues.method}${tempBindingValues.model}${tempBindingValues.casename}`,\r\n                                                template: temp\r\n                                            });\r\n\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        })\r\n                    }\r\n                    result[method] = cases;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static EnumerateCases(cases) {\r\n        let vects = cases.map(x => {\r\n            return (x && x.values ? x.values.length : 0) + (x && x.neg ? x.neg.length : 0);\r\n        });\r\n        return enumerate(vects);\r\n    }\r\n    static EnumeratePermissionCases(graph, permission, method, agent, model) {\r\n        if (!permission || !method || !agent || !model) {\r\n            return [];\r\n        }\r\n\r\n        let cases = PermissionGenerator.GetTestExtensionNodeValues(graph, permission, method, agent, model);\r\n        let enums = PermissionGenerator.EnumerateCases(cases);\r\n        let testCaseProperty = fs.readFileSync(TEST_CASE_PROPERTY, 'utf8');\r\n        let methodNode = GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        });\r\n\r\n        let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n\r\n        let res = enums.map((_enum) => {\r\n            let props = [];\r\n            let properties = [];\r\n            let setup_cases = [];\r\n            let ispositive = true;\r\n            _enum.map((which, index) => {\r\n                let _case = cases[index];\r\n                ispositive = ispositive && _case.values.length > which;\r\n                let is_model_parameter;\r\n                switch (_case.type) {\r\n                    case ConditionTypes.MatchManyReferenceParameter:\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            methodProps &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref1]] &&\r\n                            methodProps[_case.options[ConditionTypeParameters.Ref2]] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property]\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `\"wrong\"`\r\n                                        });\r\n                                        props.push({\r\n                                            props: ispositive ? '' : template,\r\n                                            type: _case.type\r\n                                        });\r\n                                        properties.push({\r\n                                            property: `.${ref1Property}`,\r\n                                            value: `${ref2Model}.Id`\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case ConditionTypes.MatchReference:\r\n\r\n                        if (_case.options &&\r\n                            _case.options[ConditionTypeParameters.Ref1] &&\r\n                            _case.options[ConditionTypeParameters.Ref2] &&\r\n                            _case.options[ConditionTypeParameters.Ref1] !== _case.options[ConditionTypeParameters.Ref2]) {\r\n                            let ref2Model = _case.options[ConditionTypeParameters.Ref2];\r\n                            let mmrp = _case.options;\r\n                            switch (_case.options[ConditionTypeParameters.Ref2]) {\r\n                                case FunctionTemplateKeys.AgentType:\r\n                                    throw 'this should be agent now';\r\n                            }\r\n\r\n                            if (ref2Model) {\r\n                                let ref1Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref1UseId]) {\r\n                                    ref1Property = _case.options[ConditionTypeParameters.Ref1Property];\r\n                                    ref1Property = GetCodeName(ref1Property);\r\n                                }\r\n                                let ref2Property = 'Id';\r\n                                if (!_case.options[ConditionTypeParameters.Ref2UseId]) {\r\n                                    ref2Property = _case.options[ConditionTypeParameters.Ref2Property];\r\n                                    ref2Property = GetCodeName(ref2Property);\r\n                                }\r\n                                let template;\r\n                                let propType = _case.options[ConditionTypeParameters.Ref1];\r\n                                let propType2 = _case.options[ConditionTypeParameters.Ref2];\r\n                                switch (propType) {\r\n                                    case FunctionTemplateKeys.Agent:\r\n                                    case FunctionTemplateKeys.Model:\r\n                                    case FunctionTemplateKeys.Parent:\r\n                                        template = bindTemplate(testCaseProperty, {\r\n                                            model: propType,\r\n                                            property: `.${ref1Property}`,\r\n                                            value: !ispositive ? '\"wrong\"' : `${ref2Model}.${ref2Property}`\r\n                                        });\r\n                                        setup_cases.push(template);\r\n                                        props.push({\r\n                                            setup_cases: ['asdf'],\r\n                                            props: template,\r\n                                            sameInstance: !!(methodProps[mmrp[ConditionTypeParameters.Ref1]] && methodProps[mmrp[ConditionTypeParameters.Ref2]]),\r\n                                            type: ConditionTypes.MatchReference\r\n                                        });\r\n                                        properties.push({\r\n                                            props: {\r\n                                                property: `.${ref1Property}`,\r\n                                                value: `${ref2Model}.${ref2Property}`\r\n                                            },\r\n                                            type: propType\r\n                                        });\r\n                                        break;\r\n                                    case FunctionTemplateKeys.AgentType:\r\n                                        throw 'This should be agent now';\r\n                                    default:\r\n                                        throw 'this hasnt been defined yet';\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        is_model_parameter = _case.ref === 'model';\r\n                        let value = _case.values.length <= which ? _case.neg[which - _case.values.length] : _case.values[which];\r\n                        let temp = bindTemplate(testCaseProperty, {\r\n                            model: is_model_parameter ? 'model' : 'agent', // THis may need to expand\r\n                            property: `.${_case.property}`,\r\n                            value: value\r\n                        });\r\n                        if (is_model_parameter) {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Model });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Model\r\n                            })\r\n                        }\r\n                        else {\r\n                            props.push({ props: temp, type: FunctionTemplateKeys.Agent });\r\n                            properties.push({\r\n                                props: {\r\n                                    property: _case.property,\r\n                                    value\r\n                                },\r\n                                type: FunctionTemplateKeys.Agent\r\n                            })\r\n                        }\r\n                        break;\r\n                }\r\n\r\n            });\r\n            return {\r\n                setup_cases: setup_cases,\r\n                props: [\r\n                    ...props\r\n                ],\r\n                properties: [\r\n                    ...properties\r\n                ],\r\n                resultSuccess: ispositive\r\n            }\r\n        });\r\n\r\n        return res;\r\n    }\r\n    static GenerateTestCases(state, permission, agent, model, pindex) {\r\n        var graph = GetCurrentGraph(state);\r\n        let parent = null;\r\n        let manyToMany = null;\r\n        let many_to_many_register = '';\r\n        let many_to_many_constructor = '';\r\n        let testCase = fs.readFileSync(TEST_CASE, 'utf8');\r\n        let result = [];\r\n        let methodNode = permission ? GetLinkChainItem({\r\n            id: permission.id,\r\n            links: [{\r\n                type: LinkType.FunctionOperator,\r\n                direction: GraphMethods.TARGET\r\n            }]\r\n        }) : null;\r\n        parent = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.Parent);\r\n        manyToMany = GetMethodPropNode(graph, methodNode, FunctionTemplateKeys.ManyToManyModel);\r\n\r\n        if (GetCodeName(parent)) {\r\n            many_to_many_register = fs.readFileSync('./app/templates/permissions/tests/many_to_many_register.tpl', 'utf8');\r\n\r\n            switch (GetNodeProp(methodNode, NodeProperties.FunctionType)) {\r\n                case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                    testCase = fs.readFileSync('./app/templates/permissions/tests/Get_ManyToMany_Agent_Value__IListChild.tpl', 'utf8');\r\n                    if (model) {\r\n                        many_to_many_register = bindTemplate(many_to_many_register, {\r\n                            ref1type: GetCodeName(parent),\r\n                            ref1: FunctionTemplateKeys.Parent,\r\n                            ref2type: GetCodeName(model),\r\n                            ref2: FunctionTemplateKeys.Model,\r\n                        });\r\n                    }\r\n                    else {\r\n                        many_to_many_register = '';\r\n                    }\r\n                    break;\r\n                case FunctionTypes.Create_Parent$Child_Agent_Value__IListChild:\r\n                    testCase = fs.readFileSync('./app/templates/permissions/tests/Create_Parent$Child_Agent_Value__IListChild.tpl', 'utf8');\r\n                    if (agent) {\r\n                        many_to_many_register = bindTemplate(many_to_many_register, {\r\n                            ref1type: GetCodeName(parent),\r\n                            ref1: FunctionTemplateKeys.Parent,\r\n                            ref2type: GetCodeName(agent),\r\n                            ref2: FunctionTemplateKeys.Agent,\r\n                        })\r\n                    }\r\n                    else {\r\n                        many_to_many_register = '';\r\n                    }\r\n                    break;\r\n                case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                    testCase = fs.readFileSync('./app/templates/permissions/tests/Get_Parent$Child_Agent_Value__IListChild.tpl', 'utf8');\r\n                    if (agent) {\r\n                        many_to_many_register = bindTemplate(many_to_many_register, {\r\n                            ref1type: GetCodeName(parent),\r\n                            ref1: FunctionTemplateKeys.Parent,\r\n                            ref2type: GetCodeName(agent),\r\n                            ref2: FunctionTemplateKeys.Agent,\r\n                        })\r\n                    }\r\n                    else {\r\n                        many_to_many_register = '';\r\n                    }\r\n                    break;\r\n                default:\r\n                    many_to_many_register = '';\r\n                    break;\r\n            }\r\n        }\r\n        switch (GetNodeProp(methodNode, NodeProperties.FunctionType)) {\r\n            case FunctionTypes.Get_Object_Agent_Value__Object:\r\n                many_to_many_register = fs.readFileSync('./app/templates/permissions/tests/many_to_many_register.tpl', 'utf8');\r\n                if (model) {\r\n                    many_to_many_register = bindTemplate(many_to_many_register, {\r\n                        ref1type: GetCodeName(manyToMany.properties.logicalChildrenTypes[0]),\r\n                        ref1: FunctionTemplateKeys.Agent,\r\n                        ref2type: GetCodeName(manyToMany.properties.logicalChildrenTypes[1]),\r\n                        ref2: FunctionTemplateKeys.Model,\r\n                    });\r\n\r\n                    many_to_many_constructor = bindTemplate(fs.readFileSync(MANY_TO_MANY_CONSTRUCTOR, 'utf8'), {\r\n                        many_to_many: GetCodeName(manyToMany)\r\n                    });\r\n                }\r\n                else {\r\n                    many_to_many_register = '';\r\n                }\r\n                break;\r\n        }\r\n        if (!manyToMany) {\r\n            many_to_many_register = '';\r\n        }\r\n        if (methodNode) {\r\n            for (var method in Methods) {\r\n                var permissionsEnabledFor = GetNodeProp(permission, NodeProperties.UIPermissions);\r\n                if (permission && permissionsEnabledFor && permissionsEnabledFor[method]) {\r\n\r\n\r\n                    let modelCodeName = GetNodeProp(model, NodeProperties.CodeName);\r\n                    var permissionNode = permission;\r\n                    let permissionValueType = GetNodeProp(permissionNode, NodeProperties.PermissionValueType)\r\n\r\n                    let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n                    if (permissionValueType && methodProps) {\r\n                        modelCodeName = GetCodeName(methodProps[permissionValueType]);\r\n                    }\r\n\r\n\r\n                    let res = PermissionGenerator.EnumeratePermissionCases(graph, permission, method, agent, model);\r\n\r\n                    res = res.map((t, testIndex) => {\r\n                        var { props, resultSuccess, templates = {}, setup_cases = [] } = t;\r\n\r\n                        return bindTemplate(bindTemplate(testCase, {\r\n                            many_to_many_register,\r\n                        }), {\r\n                                setup_cases: (setup_cases).join(NEW_LINE),\r\n                                set_agent_properties: props.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).join(NEW_LINE),\r\n                                set_model_properties: props.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).join(NEW_LINE),\r\n                                set_parent_properties: props.filter(x => x.type === FunctionTemplateKeys.Parent).map(t => t.props).join(NEW_LINE),\r\n                                set_match_reference_properties: props.filter(x => x.type === ConditionTypes.MatchReference).map(t => t.props).join(NEW_LINE),\r\n                                set_match_many_reference_properties: props.filter(x => x.type === ConditionTypes.MatchManyReferenceParameter).map(t => t.props).join(NEW_LINE),\r\n                                agent_type: GetCodeName(agent),\r\n                                parent_setup: '',\r\n                                many_to_many_constructor,\r\n                                model: modelCodeName,\r\n                                many_to_many: GetCodeName(manyToMany),\r\n                                many_to_many_arbiter_constructor: manyToMany ? bindTemplate(`var manyToManyArbiter = RedStrapper.Resolve<IRedArbiter<{{many_to_many}}>>();`, {\r\n                                    many_to_many: GetCodeName(manyToMany)\r\n                                }) : '',\r\n                                parent: GetCodeName(parent),\r\n                                parent_agent_are_the_same: resultSuccess && parent && agent && parent.id && agent.id && parent.id === agent.id ? `parent = agent;` : '',\r\n                                method,\r\n                                test: `_${GetCodeName(agent)}_${GetCodeName(model)}_${method}_${testIndex}_case${pindex}`,\r\n                                result: resultSuccess ? 'true' : 'false',\r\n                                function_name: GetCodeName(permission) + method,\r\n                                ...templates\r\n                            });\r\n                    })\r\n                    result = [...result, ...res];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let permissions = NodesByType(state, NodeTypes.Permission);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testTemplate = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let _permissionInterface = fs.readFileSync(PERMISSIONS_INTERFACE, 'utf8');\r\n        let _permissionImplementation = fs.readFileSync(PERMISSIONS_IMPL, 'utf8');\r\n        let _permissionInterfaceMethods = fs.readFileSync(PERMISSIONS_INTERFACE_METHODS, 'utf8');\r\n        let _permissionMethods = fs.readFileSync(PERMISSIONS_METHODS, 'utf8');\r\n        let _permissionArbiters = fs.readFileSync(PERMISSIONS_ARBITER_PROP, 'utf8');\r\n        let result = {};\r\n\r\n        agents.map(agent => {\r\n            let streamProcessChangeClassExtension = _permissionImplementation;\r\n            let permissionInterface = _permissionInterface;\r\n            let testPermission = _testTemplate;\r\n            let methodImplementations = [];\r\n            let methodInterfaces = [];\r\n            let testMethodPermisionCases = [];\r\n            let arbiters = [];\r\n            models.map(model => {\r\n                let matchingPermissionNodes = permissions.filter(permission => PermissionGenerator.PermissionMatches(permission, agent, model));\r\n                if (!matchingPermissionNodes || !matchingPermissionNodes.length) {\r\n                    return;\r\n                }\r\n                let permissionCases = [];\r\n                let permissionCodeNames = [];\r\n                matchingPermissionNodes.map((matchingPermissionNode, pindex) => {\r\n                    if (matchingPermissionNode) {\r\n                        permissionCodeNames.push(GetNodeProp(matchingPermissionNode, NodeProperties.CodeName));\r\n                        let temp = PermissionGenerator.GenerateCases(state, matchingPermissionNode, agent, model);\r\n                        let testTemp = PermissionGenerator.GenerateTestCases(state, matchingPermissionNode, agent, model, pindex);\r\n                        permissionCases.push(temp);\r\n                        testMethodPermisionCases.push(...testTemp);\r\n                    }\r\n                })\r\n                permissionCases.map((perms, index) => {\r\n                    for (var permKey in perms) {\r\n                        let cases = perms[permKey];\r\n                        let parent_setup = '';\r\n                        let parent_type = '';\r\n                        cases.map(t => {\r\n                            if (t && t.arbiter) {\r\n                                arbiters.push(t);\r\n                            }\r\n                            if (t && t.options && t.methodProps) {\r\n                                let parms = [ConditionTypeParameters.Ref1, ConditionTypeParameters.Ref2];\r\n                                parms.map(parm => {\r\n                                    if (t.methodProps[t.options[parm]]) {\r\n                                        let arbiter = GetCodeName(t.methodProps[t.options[parm]]);\r\n                                        if (t.options[parm] === INTERNAL_TEMPLATE_REQUIREMENTS.PARENT) {\r\n                                            if (t.methodProps.parent !== model.id)\r\n                                                parent_type = arbiter;\r\n                                        }\r\n                                        if (arbiter) {\r\n                                            arbiters.push({\r\n                                                arbiter\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        parent_setup = parent_type ? `var parent = data.${parent_type} != null ? (await arbiter${parent_type}.Get<${parent_type}>(data.${parent_type})) : null;` : 'var parent = data;';\r\n                        let modelCodeName = GetNodeProp(model, NodeProperties.CodeName);\r\n                        var permissionNode = matchingPermissionNodes[index];\r\n                        let permissionValueType = GetNodeProp(permissionNode, NodeProperties.PermissionValueType)\r\n                        var methodNode = permissionNode ? GetLinkChainItem({\r\n                            id: permissionNode.id,\r\n                            links: [{\r\n                                direction: GraphMethods.TARGET,\r\n                                type: LinkType.FunctionOperator\r\n                            }]\r\n                        }) : null;\r\n\r\n                        let methodProps = GetNodeProp(methodNode, NodeProperties.MethodProps);\r\n                        if (permissionValueType && methodProps) {\r\n                            modelCodeName = GetCodeName(methodProps[permissionValueType]);\r\n                        }\r\n                        let permissionMethods = _permissionMethods;\r\n                        let permissionInterfaceMethods = _permissionInterfaceMethods;\r\n                        permissionMethods = bindTemplate(permissionMethods, {\r\n                            model: modelCodeName,\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            agent: `value`,\r\n                            parent_setup,\r\n                            method: permKey,\r\n                            cases: cases.map(c => jNL + Tabs(4) + c.template).join(''),\r\n                            case_result: jNL + Tabs(4) + `result = ${cases.map(c => c.variable).join(' && ')};`\r\n                        });\r\n                        permissionInterfaceMethods = bindTemplate(permissionInterfaceMethods, {\r\n                            model: modelCodeName,\r\n                            function_name: permissionCodeNames[index] + permKey,\r\n                            value: `data`,\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: `value`,\r\n                            method: permKey\r\n                        });\r\n                        methodInterfaces.push(permissionInterfaceMethods);\r\n                        methodImplementations.push(permissionMethods);\r\n\r\n                    }\r\n                });\r\n            }).join(jNL);\r\n            arbiters = arbiters.map(t => t.arbiter).unique(x => x).map(t => {\r\n                return bindTemplate(_permissionArbiters, {\r\n                    arbiter: t\r\n                })\r\n            }).join(jNL)\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                arbiters,\r\n                methods: methodImplementations.unique().join(jNL + jNL)\r\n            });\r\n            permissionInterface = bindTemplate(permissionInterface, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                methods: methodInterfaces.unique().join(jNL + jNL)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                tname: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}Tests`,\r\n                iname: `IPermissions${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        arbiters && arbiters.length ? `${namespace}${NameSpace.Controllers}` : null,\r\n                        `${namespace}${NameSpace.Constants}`].filter(x => x),\r\n                    namespace,\r\n                    space: NameSpace.Permissions\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: permissionInterface,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: bindTemplate(testPermission, {\r\n                        tests: testMethodPermisionCases.join(NEW_LINE),\r\n                        name: `Permissions${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                    }),\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Model}`\r\n                    ],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst VALIDATION_CLASS = './app/templates/validation/validation_class.tpl';\r\nconst VALIDATION_TEST = './app/templates/validation/tests/validation.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst VALIDATION_PROPERTY = './app/templates/validation/validation_property.tpl';\r\n\r\nexport default class ValidationRuleGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => {\r\n            return Object.keys(x.values.cases).length\r\n        });\r\n\r\n        var enumeration = ValidationRuleGenerator.enumerate(vects);\r\n        return enumeration;\r\n    }\r\n    static enumerate(vects, j = 0) {\r\n        var results = [];\r\n\r\n        if (j < vects.length)\r\n            for (var i = 0; i < vects[j]; i++) {\r\n                var rest = ValidationRuleGenerator.enumerate(vects, j + 1);\r\n                var temp = [i];\r\n                if (rest.length) {\r\n                    rest.map(r => {\r\n                        results.push([...temp, ...r])\r\n                    });\r\n                }\r\n                else {\r\n                    results.push(temp);\r\n                }\r\n            }\r\n        return results;\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static GenerateValidationCases(graph, validatorNode) {\r\n\r\n        var model = GetNodeProp(validatorNode, NodeProperties.ValidatorModel);\r\n        var validator = GetNodeProp(validatorNode, NodeProperties.Validator);\r\n        let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n        var validation_test_vectors = [];\r\n        Object.keys(validatorProperties).map(property => {\r\n            let propertyNode = GraphMethods.GetNode(graph, property);\r\n            let validatorPs = validatorProperties[property];\r\n\r\n            return Object.keys(validatorPs.validators).map(vld => {\r\n                let validators = validatorPs.validators[vld];\r\n                let node = GraphMethods.GetNode(graph, validators.node);\r\n                let attribute_type_arguments = '';\r\n                if (node) {\r\n                    switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                        case NodeTypes.ExtensionType:\r\n                            if (validators && validators.extension) {\r\n                                let temp = { '_ _': '\"__ _ __\"' };\r\n                                attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                    if (validators.extension[ext]) {\r\n                                        temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                        return temp[`$${ext}`];\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: temp, invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                            }\r\n                            break;\r\n                        case NodeTypes.Enumeration:\r\n                            if (validators && validators.enumeration) {\r\n                                let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                    if (validators.enumeration[ext]) {\r\n                                        return `${enumName}.${MakeConstant(ext)}`\r\n                                    }\r\n                                }).filter(x => x);\r\n                                // attribute_type_arguments = temp.filter(x => x).join();\r\n                                validation_test_vectors.push({\r\n                                    property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                    values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                });\r\n                                attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                if (ValidationCases[validators.type]) {\r\n                    validation_test_vectors.push({\r\n                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                        values: ValidationCases[validators.type]\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n        let testProps = vectors.map((vector, index) => {\r\n            let successCase = true;\r\n            let propertyInformation = [];\r\n            let properylines = vector.map((v, vindex) => {\r\n                var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                if (typeof (projected_value) === 'function') {\r\n                    projected_value = projected_value();\r\n                }\r\n                else {\r\n                    if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                        _case = '$$';\r\n                    }\r\n                }\r\n                successCase = successCase && (_case || [false])[0] === '$';\r\n                let propline = ValidationRuleGenerator.Tabs(3) + `{{model}}.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                propertyInformation.push({\r\n                    set_properties: propline,\r\n                    property: validation_test_vectors[vindex].property,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                })\r\n                return propline;\r\n            }).join(NEW_LINE);\r\n            let temp = {\r\n                resultSuccess: successCase,\r\n                propertyInformation,\r\n                set_properties: properylines,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            };\r\n\r\n            return temp;\r\n        });\r\n        return testProps;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let nodes = NodesByType(state, NodeTypes.Validator);\r\n        let _validation_class = fs.readFileSync(VALIDATION_CLASS, 'utf8');\r\n        let _validation_property = fs.readFileSync(VALIDATION_PROPERTY, 'utf8');\r\n        let _validation_test = fs.readFileSync(VALIDATION_TEST, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        nodes.map(node => {\r\n            var agent = GetNodeProp(node, NodeProperties.ValidatorAgent);\r\n            var model = GetNodeProp(node, NodeProperties.ValidatorModel);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var funct = GetNodeProp(node, NodeProperties.ValidatorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var validator = GetNodeProp(node, NodeProperties.Validator);\r\n            let validatorProperties = GraphMethods.getValidatorProperties(validator);\r\n            var validation_test_vectors = [];\r\n            let propertyValidationStatements = Object.keys(validatorProperties).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = validatorProperties[property];\r\n\r\n                return Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"__ _ __\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`$${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`$${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp, invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments.join(', ')}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                if (validators && validators.enumeration) {\r\n                                    let enumNode = GraphMethods.GetNode(graph, validators.node);\r\n                                    let enumName = GetNodeProp(enumNode, NodeProperties.CodeName);\r\n                                    attribute_type_arguments = Object.keys(validators.enumeration).map(ext => {\r\n                                        if (validators.enumeration[ext]) {\r\n                                            return `${enumName}.${MakeConstant(ext)}`\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    // attribute_type_arguments = temp.filter(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: [...attribute_type_arguments], invalid: { '_ _': true } }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                    ${attribute_type_arguments.join(', ')}\r\n                }`;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    var templateRes = bindTemplate(_validation_property, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`\r\n                    });\r\n                    return templateRes + NEW_LINE\r\n                }).join('');\r\n            }).join('');\r\n            var vectors = ValidationRuleGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n            let testProps = vectors.map((vector, index) => {\r\n                let validation_test = _validation_test;\r\n                let successCase = true;\r\n                let properylines = vector.map((v, vindex) => {\r\n                    var projected_value = Object.values(validation_test_vectors[vindex].values.cases)[v];\r\n                    var _case = Object.keys(validation_test_vectors[vindex].values.cases)[v];\r\n                    if (typeof (projected_value) === 'function') {\r\n                        projected_value = projected_value();\r\n                    }\r\n                    else {\r\n                        if (validation_test_vectors[vindex] && validation_test_vectors[vindex].values && validation_test_vectors[vindex].values.invalid && !validation_test_vectors[vindex].values.invalid[_case]) {\r\n                            _case = '$$';\r\n                        }\r\n                    }\r\n                    successCase = successCase && (_case || [false])[0] === '$';\r\n                    return ValidationRuleGenerator.Tabs(3) + `model.${validation_test_vectors[vindex].property} = ${projected_value};`;\r\n                }).join(NEW_LINE);\r\n                let temp = bindTemplate(_validation_test, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    test_name: `Test${index}`,\r\n                    attribute_parameters: \"\",\r\n                    expected_value: successCase ? 'true' : 'false',\r\n                    set_properties: properylines,\r\n                    attribute_type: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                    properties: propertyValidationStatements,\r\n                    type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n                });\r\n\r\n                return temp;\r\n            });\r\n\r\n            var templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n            var testTemplate = bindTemplate(_testClass, {\r\n                name: GetNodeProp(node, NodeProperties.CodeName),\r\n                tests: testProps.join(NEW_LINE)\r\n            })\r\n\r\n            templateRes = bindTemplate(_validation_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                function_name: GetNodeProp(functNode, NodeProperties.CodeName),\r\n                properties: propertyValidationStatements,\r\n                type: GetNodeProp(GraphMethods.GetNode(graph, model), NodeProperties.CodeName),\r\n            });\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Attribute`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}AttributeTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Validations\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Validations}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                }),\r\n            };\r\n        });\r\n\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes, GetCodeName, GetMethodProps, IsAgent, GetGraphNode } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING, NEW_LINE, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys, MethodFunctions, AFTER_EFFECTS } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE = './app/templates/stream_process/stream_process_orchestration.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_ROOT_TEMPLATE = './app/templates/stream_process/stream_process_orchestration_root.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE = './app/templates/stream_process/stream_process_orchestration_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS = './app/templates/stream_process/stream_process_orchestration_agenttype_methods.tpl';\r\nconst STREAM_PROCESS_AGENT_CRUD_UPDATE = './app/templates/stream_process/agent_methods/update.tpl';\r\nconst STREAM_PROCESS_AGENT_CRUD_CREATE = './app/templates/stream_process/agent_methods/create.tpl';\r\nconst STREAM_PROCESS_AGENT_CRUD_DELETE = './app/templates/stream_process/agent_methods/delete.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE = './app/templates/stream_process/stream_process_orchestration_agenttype_methods_interface.tpl';\r\nconst STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES = './app/templates/stream_process/stream_process_orchestration_selected_staged_changes.tpl';\r\nconst STREAM_METHOD_TESTS = './app/templates/stream_process/tests/stream_process_execution_tests.tpl';\r\nconst CREATE_MODEL_TESTS = './app/templates/stream_process/tests/create_model_tests.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nexport default class StreamProcessOrchestrationGenerator {\r\n    static GenerateStaticMethods(models) {\r\n\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_STAGED_CHANGES, 'utf8');\r\n        let staticMethods = models.map(model => {\r\n            let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n            let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n            let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                model: modelCode,\r\n                [`model#allupper`]: modelCode.toUpperCase(),\r\n                [`model#lower`]: modelCode.toLowerCase()\r\n            });\r\n\r\n            return res + jNL\r\n        });\r\n\r\n        return staticMethods;\r\n    }\r\n    static GenerateAgentMethods(state, agent) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let methods = NodesByType(state, NodeTypes.Method);\r\n        let agents = [agent] // models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS, 'utf8');\r\n        models = models.filter(model => {\r\n            return methods.find(method => {\r\n                var props = GetMethodProps(method);\r\n                return props[FunctionTemplateKeys.Agent] === agent.id &&\r\n                    (props[FunctionTemplateKeys.Model] === model.id ||\r\n                        props[FunctionTemplateKeys.CompositeInput] === model.id);\r\n            })\r\n        });\r\n        let result = [];\r\n        let modelexecution = [];\r\n        let executors = NodesByType(state, NodeTypes.Executor).filter(x => GetNodeProp(x, NodeProperties.ExecutorAgent) === agent.id);\r\n\r\n        agents.map(agent => {\r\n            models.filter(model => {\r\n                return executors.find(executor => GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id);\r\n            }).map(model => {\r\n                modelexecution.push(Tabs(4) + `await Process${GetNodeProp(model, NodeProperties.CodeName)}ChangesBy${GetCodeName(agent)}();` + jNL);\r\n            })\r\n        });\r\n        result.push(`       public async Task ProcessStagedChanges(Distribution distribution = null) {\r\n${modelexecution.join('')}\r\n        }\r\n`)\r\n        // agents.map(agent => {\r\n        executors.map(executor => {\r\n            let agent = GetGraphNode(GetNodeProp(executor, NodeProperties.ExecutorAgent));\r\n            let model = GetGraphNode(GetNodeProp(executor, NodeProperties.ExecutorModel));\r\n            let model_output = GetGraphNode(GetNodeProp(executor, NodeProperties.ExecutorModelOutput));\r\n            let methodNode = GraphMethods.GetMethodNode(state, executor.id, LinkType.ExecutorFunction, GraphMethods.SOURCE);\r\n            let methodProps = GetMethodProps(methodNode);\r\n            let afterEffectMethods = GraphMethods.GetLinkChain(state, {\r\n                id: methodNode.id,\r\n                links: [{\r\n                    type: LinkType.AfterMethod,\r\n                    direction: GraphMethods.SOURCE\r\n                }]\r\n            });\r\n            let ae_calls = [];\r\n            let ae_functions = [];\r\n            afterEffectMethods.map(afterEffectMethod => {\r\n                var ae_type = GetNodeProp(afterEffectMethod, NodeProperties.AfterMethod);\r\n                var ae_setup = GetNodeProp(afterEffectMethod, NodeProperties.AfterMethodSetup);\r\n                if (AFTER_EFFECTS[ae_type] && ae_setup && ae_setup[ae_type]) {\r\n                    let { templateKeys, template_call, template } = AFTER_EFFECTS[ae_type];\r\n                    let templateString = fs.readFileSync(template, 'utf8');\r\n                    Object.keys(templateKeys).map(key => {\r\n                        if (ae_setup[ae_type][key]) {\r\n                            let key_val = ae_setup[ae_type][key] || '';\r\n                            var name = key_val.startsWith('#') ? key_val.split('#').join('') : GetCodeName((methodProps[key_val] || key_val)) || key_val;\r\n                            templateString = bindTemplate(templateString, {\r\n                                [key]: name,\r\n                                [`${key}#lower`]: `${name}`.toLowerCase()\r\n                            });\r\n                            template_call = bindTemplate(template_call, {\r\n                                [key]: name,\r\n                                [`${key}#lower`]: `${name}`.toLowerCase()\r\n                            })\r\n                        }\r\n                    })\r\n                    templateString = bindTemplate(templateString, {\r\n                        function_name: GetCodeName(afterEffectMethod)\r\n                    });\r\n                    template_call = bindTemplate(template_call, {\r\n                        function_name: GetCodeName(afterEffectMethod)\r\n                    });\r\n                    ae_calls.push(template_call);\r\n                    ae_functions.push(templateString);\r\n                }\r\n            });\r\n            let update_method = '';\r\n            let update_call = '';\r\n            let delete_method = '';\r\n            let delete_call = '';\r\n            let create_method = '';\r\n            let create_call = '';\r\n\r\n            let bind_params = {\r\n                'model_output#lower': `${GetCodeName(model_output, NodeProperties.CodeName)}`.toLowerCase(),\r\n                model: GetCodeName(model, NodeProperties.CodeName),\r\n                'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase(),\r\n                update_method,\r\n                create_method,\r\n                delete_method,\r\n                create_call,\r\n                update_call,\r\n                delete_call\r\n            };\r\n            ae_calls = ae_calls.unique().join(NEW_LINE)\r\n            if (GetNodeProp(executor, NodeProperties.ExecutorFunctionType) === Methods.Update &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorAgent) === agent.id &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id) {\r\n                update_method = bindTemplate(fs.readFileSync(STREAM_PROCESS_AGENT_CRUD_UPDATE, 'utf8'), {\r\n                    ...bind_params,\r\n                    ae_calls\r\n                });\r\n                update_call = `case Methods.Update:\r\n                    await Update(change);\r\n                    break;`\r\n            }\r\n            else if (GetNodeProp(executor, NodeProperties.ExecutorFunctionType) === Methods.Create &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorAgent) === agent.id &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id) {\r\n                create_method = bindTemplate(fs.readFileSync(STREAM_PROCESS_AGENT_CRUD_CREATE, 'utf8'), {\r\n                    ...bind_params,\r\n                    ae_calls\r\n                });\r\n                create_call = `case Methods.Create:\r\n                    await Create(change);\r\n                    break;`\r\n            }\r\n            else if (GetNodeProp(executor, NodeProperties.ExecutorFunctionType) === Methods.Delete &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorAgent) === agent.id &&\r\n                GetNodeProp(executor, NodeProperties.ExecutorModel) === model.id) {\r\n                delete_method = bindTemplate(fs.readFileSync(STREAM_PROCESS_AGENT_CRUD_DELETE, 'utf8'), {\r\n                    ...bind_params,\r\n                    ae_calls\r\n                });\r\n                delete_call = `\r\n                    case Methods.Delete:\r\n                        await Delete(change);\r\n                        break;`;\r\n            }\r\n\r\n            var res = bindTemplate(_streamAgentMethods, {\r\n                ...bind_params,\r\n                update_method,\r\n                update_call,\r\n                create_method,\r\n                create_call,\r\n                delete_method,\r\n                delete_call,\r\n                ae_functions: ae_functions.unique().join('')\r\n            })\r\n            result.push(res);\r\n            //   });\r\n        });\r\n\r\n        return result.join('')\r\n    }\r\n    static GenerateAgentInterfaceMethods(state, agent) {\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let methods = NodesByType(state, NodeTypes.Method);\r\n        let agents = [agent];//models.filter(model => GetNodeProp(model, NodeProperties.IsAgent));\r\n        let _streamAgentMethods = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_AGENT_METHODS_INTERFACE, 'utf8');\r\n        models = models.filter(model => {\r\n            return methods.find(method => {\r\n                var props = GetMethodProps(method);\r\n                return props[FunctionTemplateKeys.Agent] === agent.id &&\r\n                    (props[FunctionTemplateKeys.Model] === model.id ||\r\n                        props[FunctionTemplateKeys.CompositeInput] === model.id);\r\n            })\r\n        });\r\n        let result = [];\r\n        let executors = NodesByType(state, NodeTypes.Executor).filter(x => GetNodeProp(x, NodeProperties.ExecutorAgent) === agent.id);\r\n        let methods_interface = [];\r\n        // agents.map(agent => {    \r\n        executors.map(_ex => {\r\n            let agent = GetGraphNode(GetNodeProp(_ex, NodeProperties.ExecutorAgent));\r\n            let model = GetGraphNode(GetNodeProp(_ex, NodeProperties.ExecutorModel));\r\n            let model_output = GetGraphNode(GetNodeProp(_ex, NodeProperties.ExecutorModelOutput));\r\n\r\n            if (GetNodeProp(_ex, NodeProperties.ExecutorFunctionType)) {\r\n                methods_interface.push(bindTemplate(`\r\n                Task {{method}}({{model}}ChangeBy{{agent_type}} change);\r\n`, {\r\n                        method: GetNodeProp(_ex, NodeProperties.ExecutorFunctionType),\r\n                        model: GetCodeName(model),\r\n                        agent_type: GetCodeName(agent)\r\n                    }));\r\n            }\r\n\r\n\r\n            var res = bindTemplate(_streamAgentMethods, {\r\n                model: GetNodeProp(model, NodeProperties.CodeName),\r\n                model_output: GetCodeName(model_output),\r\n                'model#lower': GetNodeProp(model, NodeProperties.CodeName).toLowerCase(),\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                'agent_type#lower': GetNodeProp(agent, NodeProperties.CodeName).toLowerCase(),\r\n                update_method: 'here interface ok'\r\n\r\n            });\r\n            result.push(...methods_interface);\r\n            result.push(res);\r\n        });\r\n        // });\r\n\r\n        return result.unique().join('')\r\n    }\r\n    static GenerateStrappers(models, agent) {\r\n        let result = [];\r\n        result.push(Tabs(4) + `validator = RedStrapper.Resolve<IValidator>();` + jNL);\r\n        var agents = [agent];// models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}Arbiter = RedStrapper.Resolve<IRedArbiter<${modelName}>>();` + jNL);\r\n            agents.map(agent => {\r\n                var agentName = GetCodeName(agent);\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}ChangeBy${agentName}Arbiter = RedStrapper.Resolve<IRedArbiter<${modelName}ChangeBy${agentName}>>();` + jNL);\r\n            });\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}ResponseArbiter = RedStrapper.Resolve<IRedArbiter<${modelName}Response>>();` + jNL);\r\n                result.push(Tabs(4) + `${modelName.toLowerCase()}Executor = RedStrapper.Resolve<I${modelName}Executor>();` + jNL);\r\n            }\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStrappersInstances(models, agent) {\r\n        let result = [];\r\n\r\n        result.push(Tabs(3) + `public IValidator validator;` + jNL);\r\n        var agents = [agent];// models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        models.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(3) + `public IRedArbiter<${modelName}> ${modelName.toLowerCase()}Arbiter;` + jNL)\r\n            agents.map(agent => {\r\n                var agentName = GetCodeName(agent);\r\n                result.push(Tabs(3) + `public IRedArbiter<${modelName}ChangeBy${agentName}> ${modelName.toLowerCase()}ChangeBy${agentName}Arbiter;` + jNL)\r\n            });\r\n\r\n            if (GetNodeProp(model, NodeProperties.IsAgent)) {\r\n                result.push(Tabs(3) + `public IRedArbiter<${modelName}Response> ${modelName.toLowerCase()}ResponseArbiter;` + jNL);\r\n                result.push(Tabs(3) + `public I${modelName}Executor ${modelName.toLowerCase()}Executor;` + jNL);\r\n            }\r\n\r\n        })\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStreamOrchestrations(models) {\r\n        let result = [];\r\n        var agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        agents.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(Tabs(4) + `${modelName.toLowerCase()}StreamProcessOrchestration = RedStrapper.Resolve<I${modelName}StreamProcessOrchestration>();` + jNL);\r\n\r\n        });\r\n\r\n        return result.join('');\r\n    }\r\n    static GenerateStreamOrchestrationInstances(models) {\r\n        let result = [];\r\n\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        var agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        agents.map(model => {\r\n            let modelName = GetNodeProp(model, NodeProperties.CodeName);\r\n            result.push(`public I${modelName}${StreamProcessOrchestration} ${modelName.toLowerCase()}StreamProcessOrchestration;`)\r\n        })\r\n        return result.map(v => Tabs(3) + v + jNL).join('');\r\n    }\r\n    static GenerateProcessTests(state) {\r\n        let graph = GetRootGraph(state);\r\n        let functions = NodesByType(state, NodeTypes.Method).filter(x => ![\r\n            Methods.Get,\r\n            Methods.GetAll].some(t => t === GetNodeProp(x, NodeProperties.MethodType)));\r\n        let res = '';\r\n        // STREAM_METHOD_TESTS\r\n        let _stramMethodTests = fs.readFileSync(STREAM_METHOD_TESTS, 'utf8');\r\n        let _createModelTests = fs.readFileSync(CREATE_MODEL_TESTS, 'utf8');\r\n        let agent_process_orchestration_mocks = `           builder.RegisterType<{{agent_type}}StreamProcessOrchestration>().As<I{{agent_type}}StreamProcessOrchestration>();\r\n`;\r\n        let agent_process_orc_mocks = NodesByType(state, NodeTypes.Model).filter(x => {\r\n            var isAgent = IsAgent(x);\r\n            return isAgent;\r\n        }).map(t => bindTemplate(agent_process_orchestration_mocks, {\r\n            agent_type: GetCodeName(t)\r\n        })).join('');\r\n        res = functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            //      let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var userTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.User]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    //   cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, method, agentTypeNode, modelNode);\r\n                }\r\n            }\r\n            if (modelNode && agentTypeNode && func) {\r\n                return bindTemplate(_stramMethodTests, {\r\n                    model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                    agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                    function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                    test_name: `${GetNodeProp(func, NodeProperties.CodeName)}Test`,\r\n                    stream_process_orchestration_mocks: agent_process_orc_mocks\r\n                });\r\n            }\r\n        }).filter(x => x).join(NEW_LINE);\r\n        let func_Cases = [];\r\n        functions.map((func, index) => {\r\n            let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n            let method = GetNodeProp(func, NodeProperties.MethodType);\r\n            let cases = null;\r\n            if (methodProps) {\r\n                var agentTypeNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.AgentType]);\r\n                var modelNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Model]);\r\n                var permissionNode = GraphMethods.GetNode(graph, methodProps[FunctionTemplateKeys.Permission]);\r\n                if (graph && permissionNode && method && agentTypeNode && modelNode) {\r\n                    let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n                    let validatorCases = null;\r\n                    if (validators && validators.length) {\r\n                        validatorCases = validators.map(validator => {\r\n                            return {\r\n                                cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                                isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                            };\r\n                        })\r\n                    }\r\n                    if (validatorCases)\r\n                        enumerate(validatorCases.map(x => x.cases.length)).map((_enum, caseindex) => {\r\n                            let v1 = validatorCases[0].cases[_enum[0]];\r\n                            let v2 = validatorCases[1].cases[_enum[1]];\r\n                            let agent_properties = '';\r\n                            let model_properties = '';\r\n                            if (!validatorCases[1].isModel) {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                            }\r\n                            else {\r\n                                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                            }\r\n                            // cases.map((_case, caseindex) => {\r\n                            func_Cases.push(bindTemplate(_createModelTests, {\r\n                                model: GetNodeProp(modelNode, NodeProperties.CodeName),\r\n                                agent_type: GetNodeProp(agentTypeNode, NodeProperties.CodeName),\r\n                                set_agent_propeties: agent_properties,\r\n                                set_model_properties: model_properties,\r\n                                function_name: GetNodeProp(func, NodeProperties.CodeName),\r\n                                test_result: !(v1.resultSuccess && v2.resultSuccess),\r\n                                test_name: `${GetNodeProp(func, NodeProperties.CodeName)}${caseindex}Test`\r\n                            }));\r\n\r\n                        })\r\n                    //  });\r\n                }\r\n            }\r\n        }).join(NEW_LINE);\r\n        return res + NEW_LINE + func_Cases.join(NEW_LINE);\r\n    }\r\n    static EnumerateFunctionValidators(state, func) {\r\n        let graph = GetRootGraph(state);\r\n        let methodProps = GetNodeProp(func, NodeProperties.MethodProps);\r\n        let validators = StreamProcessOrchestrationGenerator.GetFunctionValidators(state, func);\r\n        let validatorCases = null;\r\n        if (validators && validators.length) {\r\n            validatorCases = validators.map(validator => {\r\n                return {\r\n                    cases: ValidationRuleGenerator.GenerateValidationCases(graph, validator),\r\n                    isModel: GetNodeProp(validator, NodeProperties.ValidatorModel) === methodProps[FunctionTemplateKeys.Model]\r\n                };\r\n            })\r\n        }\r\n        return enumerate((validatorCases || []).map(x => x.cases.length)).map((_enum, caseindex) => {\r\n            let v1 = validatorCases[0].cases[_enum[0]];\r\n            let v2 = validatorCases[1].cases[_enum[1]];\r\n            let agent_properties = '';\r\n            let model_properties = '';\r\n            if (!validatorCases[1].isModel) {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"agent\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"model\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                return {\r\n                    agent: v2,\r\n                    model: v1\r\n                }\r\n            }\r\n            else {\r\n                agent_properties = bindTemplate(v2.set_properties, { model: \"model\" });\r\n                model_properties = bindTemplate(v1.set_properties, { model: \"agent\" });\r\n                v2.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"model\" }));\r\n                v1.propertyInformation.map(t => t.set_properties = bindTemplate(t.set_properties, { model: \"agent\" }));\r\n                return {\r\n                    model: v2,\r\n                    agent: v1\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static GetFunctionValidators(state, funct) {\r\n        return NodesByType(state, NodeTypes.Validator).filter(x => GetNodeProp(x, NodeProperties.ValidatorFunction) === funct.id);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_ROOT_TEMPLATE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let _streamProcessInterfaceTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE, 'utf8');\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let result = {};\r\n        agents.map(agent => {\r\n            var temp = StreamProcessOrchestrationGenerator.GenerateAgent({ state, key, agent });\r\n            result = { ...result, ...temp };\r\n        });\r\n        let strappers = StreamProcessOrchestrationGenerator.GenerateStreamOrchestrations(models);\r\n        let strapperInstances = StreamProcessOrchestrationGenerator.GenerateStreamOrchestrationInstances(models);\r\n\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            agent_type_methods: `\r\n\r\n        public async Task ProcessStagedChanges(Distribution distribution = null) \r\n        {\r\n${agents.map(agent => {\r\n                return `await ${GetCodeName(agent).toLowerCase()}StreamProcessOrchestration.ProcessStagedChanges(distribution);`;\r\n            }).map(v => Tabs(4) + v + jNL).join('')}\r\n        }\r\n        `,\r\n            arbiters_strappers: strappers,\r\n            arbiter_instances: strapperInstances\r\n        });\r\n        let stream_process_tests = StreamProcessOrchestrationGenerator.GenerateProcessTests(state);\r\n        let testTemplate = bindTemplate(_testClass, {\r\n            name: StreamProcessOrchestration,\r\n            tests: stream_process_tests\r\n        })\r\n        _streamProcessInterfaceTemplate = bindTemplate(_streamProcessInterfaceTemplate, {\r\n            agent_type_methods: '',\r\n            agent_type: ''\r\n        });\r\n        let streamOrchestration = {\r\n            [StreamProcessOrchestration]: {\r\n                id: StreamProcessOrchestration,\r\n                name: StreamProcessOrchestration,\r\n                iname: `I${StreamProcessOrchestration}`,\r\n                tname: `${StreamProcessOrchestration}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Linq.Expressions',\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: _streamProcessInterfaceTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            }\r\n        };\r\n        result = { ...result, ...streamOrchestration };\r\n        return result;\r\n    }\r\n    static GenerateAgent(options) {\r\n        var { state, key, agent } = options;\r\n        const StreamProcessOrchestration = 'StreamProcessOrchestration';\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE, 'utf8');\r\n        let _streamProcessInterfaceTemplate = fs.readFileSync(STREAM_PROCESS_ORCHESTRATION_TEMPLATE_INTERFACE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let agent_methods = StreamProcessOrchestrationGenerator.GenerateAgentMethods(state, agent);\r\n        let agent_methods_interface = StreamProcessOrchestrationGenerator.GenerateAgentInterfaceMethods(state, agent);\r\n        let statics = StreamProcessOrchestrationGenerator.GenerateStaticMethods(models, agent);\r\n        let strappers = StreamProcessOrchestrationGenerator.GenerateStrappers(models, agent);\r\n        let strapperInstances = StreamProcessOrchestrationGenerator.GenerateStrappersInstances(models, agent);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.join(''),\r\n            agent_type_methods: agent_methods,\r\n            agent_type: GetCodeName(agent),\r\n            arbiters_strappers: strappers,\r\n            arbiter_instances: strapperInstances\r\n        });\r\n        let stream_process_tests = StreamProcessOrchestrationGenerator.GenerateProcessTests(state, agent);\r\n        let testTemplate = bindTemplate(_testClass, {\r\n            name: `${GetCodeName(agent)}${StreamProcessOrchestration}`,\r\n            agent_type: GetCodeName(agent),\r\n            tests: stream_process_tests\r\n        })\r\n        _streamProcessInterfaceTemplate = bindTemplate(_streamProcessInterfaceTemplate, {\r\n            agent_type: GetCodeName(agent),\r\n            agent_type_methods: agent_methods_interface\r\n        });\r\n        return {\r\n            [`${(GetCodeName(agent) + StreamProcessOrchestration)}`]: {\r\n                id: StreamProcessOrchestration,\r\n                name: `${GetCodeName(agent)}${StreamProcessOrchestration}`,\r\n                iname: `I${GetCodeName(agent)}${StreamProcessOrchestration}`,\r\n                tname: `${GetCodeName(agent)}${StreamProcessOrchestration}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Linq.Expressions',\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: _streamProcessInterfaceTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;\r\n\r\nfunction Tabs(c) {\r\n    let res = '';\r\n    for (var i = 0; i < c; i++) {\r\n        res += TAB;\r\n    }\r\n    return res;\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle, GetCodeName, GetMethodProps, GetMethodFilterParameters } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules, FilterUI, FilterRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType, Filter } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/itemfilters/item_filter.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE = './app/templates/models/itemfilters/filter_property_function_value.tpl';\r\nconst FILTER_PROPERTY_FUNCTION_VALUE_EQUALS = './app/templates/models/itemfilters/filter_property_function_value_equals.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelItemFilterGenerator {\r\n    static predicates(nodes, out_ = {}) {\r\n\r\n        return nodes.map(x => {\r\n            let validator = GetNodeProp(x, NodeProperties.FilterModel);\r\n            let params = [];\r\n            let filterModelParams = GetMethodFilterParameters(x.id);\r\n            if (filterModelParams && filterModelParams.length) {\r\n                params = filterModelParams.map(x => `${x.paramName}`)\r\n            }\r\n            else if (validator) {\r\n                Object.values(validator.properties).map(t => Object.values(t.validators).map(v => {\r\n                    if (v && v.type === FilterRules.EqualsModelRef) {\r\n                        out_[v.node] = true;\r\n                        params.push(v.node);\r\n                    }\r\n                }))\r\n                params = params.filter(x => x).unique().sort();\r\n            }\r\n            let text = `${GetCodeName(x)}.Filter({{predicate_parameters}})`;\r\n            return bindTemplate(text, {\r\n                predicate_parameters: params.join(', ')\r\n            });\r\n        });\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let modelitemfilters = NodesByType(state, NodeTypes.ModelItemFilter);\r\n        modelitemfilters.map(modelitemfilter => {\r\n            var method = GraphMethods.GetMethodNode(state, modelitemfilter.id);\r\n            var methodProps = null;\r\n            if (method) {\r\n                methodProps = GetMethodProps(method);\r\n            }\r\n            let itemFilter = GetNodeProp(modelitemfilter, NodeProperties.ModelItemFilter);\r\n            let filterModel = GetNodeProp(modelitemfilter, NodeProperties.FilterModel);\r\n            let filterMethodParameters = GetMethodFilterParameters(modelitemfilter.id);\r\n            let funcs = [];\r\n            let parameters = [];\r\n            if (filterModel && filterModel.properties) {\r\n                let filterPropFunction = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE, 'utf8');\r\n                let filters = [];\r\n                Object.keys(filterModel.properties).map(prop => {\r\n                    let propName = GetCodeName(prop);\r\n                    if (filterModel.properties[prop]) {\r\n                        Object.keys(filterModel.properties[prop].validators).map(validator => {\r\n                            let _validatorProps = filterModel.properties[prop].validators[validator];\r\n                            let validatorValue = '';\r\n                            let validatorName = GetCodeName(validator);\r\n                            let _function = '==';\r\n                            if (_validatorProps && _validatorProps.type)\r\n                                switch (_validatorProps.type) {\r\n                                    case FilterRules.EqualsTrue:\r\n                                        validatorValue = 'true';\r\n                                        break;\r\n                                    case FilterRules.EqualsFalse:\r\n                                        validatorValue = 'false';\r\n                                        break;\r\n                                    case FilterRules.EqualsAgent:\r\n                                        validatorValue = `agent.${propName}`;\r\n                                        break;\r\n                                    case FilterRules.EqualsParent:\r\n                                        validatorValue = `parent.${propName}`;\r\n                                        break;\r\n                                    case FilterRules.EqualsModelRef:\r\n                                        if (_validatorProps.node) {\r\n                                            let mNode = GraphMethods.GetNode(graph, methodProps[_validatorProps.node]);\r\n                                            if (mNode) {\r\n                                                parameters.push(`${GetCodeName(mNode)} ${_validatorProps.node}`);\r\n                                            }\r\n                                            validatorValue = `${_validatorProps.node}.Id`;\r\n                                        }\r\n                                        break;\r\n                                    case FilterRules.EqualsModelProperty:\r\n                                        if (_validatorProps.node && _validatorProps.nodeProperty) {\r\n                                            let mNode = GraphMethods.GetNode(graph, methodProps[_validatorProps.node]);\r\n                                            if (mNode) {\r\n                                                parameters.push(`${GetCodeName(mNode)} ${_validatorProps.node}`);\r\n                                            }\r\n                                            validatorValue = `${_validatorProps.node}.${GetCodeName(_validatorProps.nodeProperty)}`;\r\n                                        }\r\n                                        break;\r\n                                    default:\r\n                                        throw 'not handled model item filter generation case';\r\n                                }\r\n                            let filterPropFunctionValueEquals = fs.readFileSync(FILTER_PROPERTY_FUNCTION_VALUE_EQUALS, 'utf8');\r\n\r\n                            filters.push(bindTemplate(filterPropFunctionValueEquals, {\r\n                                property: propName,\r\n                                value: validatorValue,\r\n                                function: _function\r\n                            }));\r\n                        })\r\n                    }\r\n                });\r\n                parameters = parameters.filter(x => x).unique().sort();\r\n                if (filterMethodParameters && filterMethodParameters.length) {\r\n                    parameters = filterMethodParameters.map(item => {\r\n                        return `${item.paramClass} ${item.paramName}`\r\n                    });\r\n                }\r\n                funcs.push(bindTemplate(filterPropFunction, {\r\n                    filter: filters.join(''),\r\n                    model: GetCodeName(itemFilter),\r\n                    parameters: parameters.join(', ')\r\n                }))\r\n            }\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                code_name: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                filter: funcs\r\n            });\r\n\r\n            result[GetNodeProp(modelitemfilter, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(modelitemfilter, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(modelitemfilter, NodeProperties.CodeName)}`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetCurrentGraph, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, STANDARD_CONTROLLER_USING, NEW_LINE, STANDARD_TEST_USING, Methods } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTypes, Functions, TEMPLATE_KEY_MODIFIERS, FunctionTemplateKeys, ToInterface, MethodFunctions } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport StreamProcessOrchestrationGenerator from './streamprocessorchestrationgenerator';\r\nimport ValidationRuleGenerator from './validationrulegenerator';\r\nimport PermissionGenerator from './permissiongenerator';\r\nimport ModelItemFilterGenerator from './modelitemfiltergenerator';\r\n\r\nconst MAESTRO_CLASS_TEMPLATE = './app/templates/maestro/maestro.tpl';\r\nconst MAESTRO_INTERFACE_TEMPLATE = './app/templates/maestro/imaestro.tpl';\r\nconst CONTROLLER_CLASS_FUNCTION_TEMPLATE = './app/templates/controller/controller_functions.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst MAESTRO_FUNCTION_TESTS = './app/templates/maestro/tests/maestro.tpl';\r\nconst MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS = './app/templates/maestro/tests/maestro_same_agent_model.tpl';\r\nconst get_agent_manytomany_listchild_interface = './app/templates/maestro/tests/get_agent_manytomany_listchild_interface.tpl';\r\nconst MAESTRO_FUNCTION_GET_TESTS = './app/templates/maestro/tests/maestro_get.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class MaestroGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let maestros = NodesByType(state, NodeTypes.Maestro);\r\n\r\n        let _maestroTemplateClass = fs.readFileSync(MAESTRO_CLASS_TEMPLATE, 'utf8');\r\n        let _MAESTRO_INTERFACE_TEMPLATE = fs.readFileSync(MAESTRO_INTERFACE_TEMPLATE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let testFunctionTemplate = fs.readFileSync(MAESTRO_FUNCTION_TESTS, 'utf8');\r\n        let testFunctionGetSameParentTemplate = fs.readFileSync(MAESTRO_FUNCTION_SAME_AGENT_MODEL_TESTS, 'utf8');\r\n\r\n        let testFunctionGetTemplate = fs.readFileSync(MAESTRO_FUNCTION_GET_TESTS, 'utf8');\r\n        let root = GetRootGraph(state);\r\n        let graph = GetCurrentGraph(state);\r\n        let result = {};\r\n        maestros.map(maestro => {\r\n            let maestroTemplateClass = _maestroTemplateClass;\r\n            let functions = '';\r\n            let functionsInterface = '';\r\n            let statics = '';\r\n            let codeName = `${GetNodeProp(maestro, NodeProperties.CodeName)}`;\r\n\r\n            let maestro_functions = [];\r\n            let tempfunctions = GraphMethods.getNodesByLinkType(root, {\r\n                id: maestro.id,\r\n                type: LinkType.FunctionLink,\r\n                direction: GraphMethods.SOURCE\r\n            });\r\n            let arbiters = [];\r\n            let permissions = [];\r\n            let maestroName = GetNodeProp(maestro, NodeProperties.CodeName);\r\n            maestro_functions = tempfunctions;\r\n            let permissionValidationCases = [];\r\n            if (maestro_functions.length) {\r\n                maestro_functions.filter(x => !GetNodeProp(x, NodeProperties.NotIncludedInController)).map(maestro_function => {\r\n                    let function_type = GetNodeProp(maestro_function, NodeProperties.FunctionType);\r\n                    var ft = MethodFunctions[function_type];\r\n                    if (ft) {\r\n\r\n                        let tempFunction = ft.template;\r\n                        let interfaceFunction = ft.interface;\r\n                        let testFunction = ft.test;\r\n                        let value_type = '';\r\n                        let parent_type = '';\r\n                        if (ft.parentGet) {\r\n                            value_type = 'string';\r\n                        }\r\n                        let functionName = `${GetNodeProp(maestro_function, NodeProperties.CodeName)}`;\r\n                        let httpMethod = `${GetNodeProp(maestro_function, NodeProperties.HttpMethod)}`;\r\n                        let httpRoute = `${GetNodeProp(maestro_function, NodeProperties.HttpRoute)}`;\r\n                        let agentTypeNode = null;\r\n                        let userTypeNode = null;\r\n                        let parentNode = null;\r\n                        let permissionNode = null;\r\n                        let modelFilterNode = null;\r\n                        let compositeInput = null;\r\n                        let manyToManyNode = null;\r\n                        let parent_setup = '';\r\n                        let modelNode = null;\r\n                        let model_output = null;\r\n                        let methodProps = GetNodeProp(maestro_function, NodeProperties.MethodProps);\r\n                        let predicates = '';\r\n                        if (methodProps) {\r\n                            agentTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.AgentType] || methodProps[FunctionTemplateKeys.Agent]);\r\n                            modelNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Model]);\r\n                            userTypeNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.User]);\r\n                            permissionNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Permission]);\r\n                            modelFilterNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ModelFilter]);\r\n                            compositeInput = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.CompositeInput])\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            model_output = GetCodeName(methodProps[FunctionTemplateKeys.ModelOutput])\r\n                            parentNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.Parent]);\r\n                            parent_type = parentNode ? GetNodeProp(parentNode, NodeProperties.CodeName) : '{missing parent name}';\r\n                            manyToManyNode = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                            var modelItemFilters = GraphMethods.GetLinkChain(state, {\r\n                                id: maestro_function.id,\r\n                                links: [{\r\n                                    type: LinkType.ModelItemFilter,\r\n                                    direction: GraphMethods.SOURCE\r\n                                }]\r\n                            });\r\n                            var out_predicate = {}\r\n                            predicates = ModelItemFilterGenerator.predicates(modelItemFilters, out_predicate);\r\n                            if (predicates.length) {\r\n                                predicates = predicates.join(', ');\r\n                            }\r\n                            else {\r\n                                predicates = '';\r\n                            }\r\n                            if (out_predicate.parent) {\r\n                                parent_setup = `var parent = await arbiter${parent_type}.Get<${parent_type}>(model.${parent_type});`\r\n                            }\r\n                        }\r\n\r\n                        let agent = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let model_type = modelNode ? GetNodeProp(modelNode, NodeProperties.CodeName) : `{maestro_generator_mising_model}`;\r\n                        let agent_type = agentTypeNode ? `${GetNodeProp(agentTypeNode, NodeProperties.CodeName)}` : `{maestro_generator_mising_agentTypeNode}`;\r\n                        let methodType = GetNodeProp(maestro_function, NodeProperties.MethodType);\r\n                        let connect_type = manyToManyNode ? GetNodeProp(manyToManyNode, NodeProperties.CodeName) : '{maestro_connection_type_missing}';\r\n                        if (parentNode)\r\n                            arbiters.push(parent_type);\r\n                        let manyNodes = GraphMethods.GetManyToManyNodes(graphRoot, [modelNode ? modelNode.id : false, agentTypeNode ? agentTypeNode.id : null].filter(x => x)) || [];\r\n                        arbiters.push(...manyNodes.map(manyNode => {\r\n                            return GetNodeProp(manyNode, NodeProperties.CodeName);\r\n                        }));\r\n                        arbiters.push(agent_type, model_type);\r\n                        permissions.push({ agent_type, model_type });\r\n                        let value = '';\r\n                        let agentAndModelIsTheSame = false;\r\n                        if (ft.parentGet) {\r\n                            value = parentNode ? `${GetNodeProp(parentNode, NodeProperties.CodeName)}`.toLowerCase() : '{missing parent name}';\r\n                            if (agentTypeNode && parentNode) {\r\n                                agentAndModelIsTheSame = agentTypeNode.id === parentNode.id;\r\n                            }\r\n                        }\r\n                        else {\r\n                            value = modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`;\r\n                        }\r\n\r\n                        let bindOptions = {\r\n                            function_name: functionName,\r\n                            agent_type: agent_type,\r\n                            'agent_type#lower': `${agent_type}`.toLowerCase(),\r\n                            parent_type,\r\n                            agent: agent,\r\n                            'composite-input': GetCodeName(compositeInput) || '',\r\n                            model_input: GetCodeName(compositeInput) || model_type,\r\n                            value_type,\r\n                            value,\r\n                            parent_setup,\r\n                            model_output,\r\n                            model: model_type,\r\n                            connect_type,\r\n                            comma: predicates.length ? ',' : '',\r\n                            predicates,\r\n                            maestro_function: functionName,\r\n                            filter_function: modelFilterNode ? GetNodeProp(modelFilterNode, NodeProperties.CodeName) : '{missing filter node}',\r\n                            user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                            http_route: httpRoute || '{maestro_generator_http_method',\r\n                            http_method: httpMethod || '{maestro_generator_http_method',\r\n                            user_instance: userTypeNode ? `${GetNodeProp(userTypeNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_userNode}`,\r\n                            output_type: modelNode ? GetCodeName(modelNode) : '{maestro_generator_missing_model}',\r\n                            maestro_interface: ToInterface(maestroName),\r\n                            permission_function: permissionNode ? GetNodeProp(permissionNode, NodeProperties.CodeName) + methodType : `{MISSING_PERMISSION_FUNCTION}`,\r\n                            input_type: modelNode ? GetCodeName(modelNode) : '{maestro_generator_missing_model}'\r\n                        };\r\n                        tempFunction = bindTemplate(tempFunction, bindOptions);\r\n                        interfaceFunction = bindTemplate(interfaceFunction, bindOptions)\r\n\r\n                        functions += jNL + tempFunction;\r\n                        functionsInterface += jNL + interfaceFunction;\r\n\r\n                        var cases = PermissionGenerator.EnumeratePermissionCases(graph, permissionNode, methodType, agentTypeNode, modelNode);\r\n                        let validators = StreamProcessOrchestrationGenerator.EnumerateFunctionValidators(state, maestro_function);\r\n                        if (validators && cases) {\r\n                            validators.map(validator => {\r\n                                cases.map(_case => {\r\n                                    let pvc = {};\r\n                                    let pvc2 = {};\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ...validator.agent.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.properties.filter(x => x.type === FunctionTemplateKeys.Agent).map(t => t.props).map((t, index) => {\r\n                                                if (validator.agent.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.agentProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ...validator.model.propertyInformation.map(t => t.set_properties),\r\n                                            ..._case.filter(x => x.type === FunctionTemplateKeys.Model).map(t => t.props).map((t, index) => {\r\n                                                if (validator.model.propertyInformation.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return _case.itemProps[index];\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc.model = (temp);\r\n                                    }\r\n\r\n                                    if (validator && validator.agent && _case.agentProperties) {\r\n                                        var temp = [\r\n                                            ..._case.agentProperties.map((t, index) => _case.agentProps[index]),\r\n                                            ...validator.agent.propertyInformation.map((t, index) => {\r\n                                                if (_case.agentProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.agent.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.agent = (temp);\r\n                                    }\r\n                                    if (validator && validator.model && _case.itemProperties) {\r\n                                        var temp = [\r\n                                            ..._case.itemProperties.map((t, index) => _case.itemProps[index]),\r\n                                            ...validator.model.propertyInformation.map((t, index) => {\r\n                                                if (_case.itemProperties.findIndex(x => x.property === t.property) !== -1) {\r\n                                                    return false;\r\n                                                }\r\n                                                return validator.model.propertyInformation[index].set_properties;\r\n                                            }).filter(x => x)\r\n                                        ].join(NEW_LINE);\r\n                                        pvc2.model = (temp);\r\n                                    }\r\n\r\n                                    permissionValidationCases.push(pvc2);\r\n                                    permissionValidationCases.push(pvc);\r\n                                })\r\n                            })\r\n\r\n                            permissionValidationCases = permissionValidationCases.map((pvc, index) => {\r\n                                //Generate tests.\r\n                                let templ = testFunctionTemplate;\r\n                                switch (ft.method) {\r\n                                    case Methods.Get:\r\n                                    case Methods.GetAll:\r\n                                        templ = testFunctionGetTemplate;\r\n                                        if (agentAndModelIsTheSame) {\r\n                                            templ = testFunctionGetSameParentTemplate;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                switch (function_type) {\r\n                                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                                        templ = fs.readFileSync(get_agent_manytomany_listchild_interface, 'utf8');\r\n                                        break;\r\n                                }\r\n                                if (ft.test) {\r\n                                    templ = ft.test;\r\n                                }\r\n                                return bindTemplate(templ, {\r\n                                    agent: agent_type,\r\n                                    many_to_many: GetNodeProp(manyToManyNode, NodeProperties.CodeName),\r\n                                    parent: GetNodeProp(parentNode, NodeProperties.CodeName),\r\n                                    set_many_to_many_properties: '//{not set yet}',\r\n                                    value: modelNode ? `${GetNodeProp(modelNode, NodeProperties.CodeName)}`.toLowerCase() : `{maestro_generator_mising_model}`,\r\n                                    model: model_type,\r\n                                    model_input: GetCodeName(compositeInput) || model_type,\r\n                                    function_name: functionName,\r\n                                    maestro: maestroName,\r\n                                    set_agent_properties: pvc.agent,\r\n                                    user: userTypeNode ? GetNodeProp(userTypeNode, NodeProperties.CodeName) : `{maestro_generator_mising_user}`,\r\n                                    set_model_properties: pvc.model,\r\n                                    testname: `${functionName}Test${index}`\r\n                                });\r\n                            });\r\n                            // Do analysis on whether these validations are completely bonk.\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n            arbiters = arbiters.unique();\r\n            permissions = permissions.unique(x => `${x.agent_type}`);\r\n            var injectedServices = arbiters.map(x => `IRedArbiter<${x}> _arbiter${x}`);\r\n            var injectedPermissionServices = permissions.map(x => `IPermissions${x.agent_type} _${x.agent_type.toLowerCase()}Permissions`);\r\n            var set_properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(4) + `arbiter${x} = _arbiter${x};`);\r\n            var set_permissions = permissions.map(x => jNL + MaestroGenerator.Tabs(4) + `${x.agent_type.toLowerCase()}Permissions = _${x.agent_type.toLowerCase()}Permissions;`);\r\n            var properties = arbiters.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IRedArbiter<${x}> arbiter${x};`);\r\n            var permissions_properties = permissions.map(x => jNL + MaestroGenerator.Tabs(3) + `private readonly IPermissions${x.agent_type} ${x.agent_type.toLowerCase()}Permissions;`);\r\n            let testTemplate = bindTemplate(_testClass, {\r\n                name: codeName,\r\n                tests: permissionValidationCases.join(NEW_LINE)\r\n            })\r\n            maestroTemplateClass = bindTemplate(maestroTemplateClass, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions\r\n            });\r\n            let maestro_interface_template = bindTemplate(_MAESTRO_INTERFACE_TEMPLATE, {\r\n                codeName: codeName,\r\n                set_properties: [...set_properties, ...set_permissions].join(jNL),\r\n                properties: [...permissions_properties, ...properties].join(' '),\r\n                injected_services: [...injectedServices, ...injectedPermissionServices].map((t, ti) => (jNL + MaestroGenerator.Tabs(7) + t)).join(','),\r\n                'codeName#alllower': codeName.toLowerCase(),\r\n                functions: functionsInterface\r\n            })\r\n            result[GetNodeProp(maestro, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                name: GetNodeProp(maestro, NodeProperties.CodeName),\r\n                iname: `I${GetNodeProp(maestro, NodeProperties.CodeName)}`,\r\n                tname: `${GetNodeProp(maestro, NodeProperties.CodeName)}Tests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: maestroTemplateClass,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Parameters}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: maestro_interface_template,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: testTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Permissions}`,\r\n                        `${namespace}${NameSpace.Controllers}`,\r\n                        `${namespace}${NameSpace.Executors}`,\r\n                        `${namespace}${NameSpace.Extensions}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph, GetMethodNodeProp, GetCodeName } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING, NEW_LINE } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionConstraintKeys, FunctionTemplateKeys, FunctionMethodTypes, MethodFunctions, MethodTemplateKeys, AFTER_EFFECTS } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_change_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_change_class_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS = './app/templates/stream_process/tests/stream_process_change_class_constructor.tpl';\r\n\r\nconst MODEL_STATIC_TEMPLATES = './app/templates/models/model_statics.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeParameterGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let afterEffects = NodesByType(state, NodeTypes.AfterEffect);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf8');\r\n        let _streamProcessChangeClassConstrictorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TESTS, 'utf8');\r\n        let result = {};\r\n        models.map(model => {\r\n\r\n            agents.map(agent => {\r\n                let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n                let testClass = _testClass;\r\n                let properties = '';\r\n                let statics = '';\r\n                let constructors = [];\r\n                let tests = [];\r\n                let updates_with = [];\r\n                let staticFunctionTemplate = fs.readFileSync(MODEL_STATIC_TEMPLATES, 'utf8');\r\n                afterEffects.filter(afterEffect => {\r\n                    let functionType = GetNodeProp(afterEffect, NodeProperties.AfterMethod);\r\n                    let setup = GetNodeProp(afterEffect, NodeProperties.AfterMethodSetup);\r\n                    if (setup && functionType && setup[functionType][FunctionTemplateKeys.ModelOutput]) {\r\n                        var method = GraphMethods.GetMethodNode(state, afterEffect.id);\r\n                        if (method) {\r\n                            var valid = GetMethodNodeProp(method, setup[functionType][FunctionTemplateKeys.Agent]) === agent.id &&\r\n                                GetMethodNodeProp(method, setup[functionType][FunctionTemplateKeys.ModelOutput]) == model.id;\r\n                            return valid;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }).filter(afterEffect => {\r\n                    let functionType = GetNodeProp(afterEffect, NodeProperties.AfterMethod);\r\n                    let setup = GetNodeProp(afterEffect, NodeProperties.AfterMethodSetup);\r\n                    if (AFTER_EFFECTS[functionType] && AFTER_EFFECTS[functionType]) {\r\n                        let methodNode = GraphMethods.GetMethodNode(state, afterEffect.id);\r\n                        let stream_process_change_parameter = AFTER_EFFECTS[functionType][MethodTemplateKeys.stream_process_change_parameter];\r\n                        if (stream_process_change_parameter) {\r\n                            let spcp_template = fs.readFileSync(stream_process_change_parameter, 'utf8');\r\n                            spcp_template = bindTemplate(spcp_template, {\r\n                                model: GetCodeName(model),\r\n                                value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                                agent_type: GetCodeName(agent),\r\n                                model_update: GetCodeName(GetMethodNodeProp(methodNode, setup[functionType][FunctionTemplateKeys.UpdateModel])),\r\n                                agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                                change_type: `Methods.${setup[functionType][FunctionTemplateKeys.MethodType]}`,\r\n                                method: setup[functionType][FunctionTemplateKeys.MethodType]\r\n                            });\r\n\r\n                            constructors.push(spcp_template);\r\n                        }\r\n\r\n                        let update_with = AFTER_EFFECTS[functionType][MethodTemplateKeys.update_with];\r\n                        if (update_with) {\r\n                            let spcp_template = fs.readFileSync(update_with, 'utf8');\r\n                            spcp_template = bindTemplate(spcp_template, {\r\n                                model_update: GetCodeName(GetMethodNodeProp(methodNode, setup[functionType][FunctionTemplateKeys.UpdateModel])),\r\n                            });\r\n                            updates_with.push(spcp_template + NEW_LINE);\r\n                        }\r\n                    }\r\n                });\r\n                Object.values(Methods).filter(x => ![Methods.Get, Methods.GetAll].some(v => v == x)).map(method => {\r\n\r\n                    let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n\r\n                    streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                        model: GetCodeName(model),\r\n                        value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetCodeName(agent),\r\n                        agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    let streamProcessChangeClassConstrictorsTest = _streamProcessChangeClassConstrictorsTest;\r\n\r\n                    streamProcessChangeClassConstrictorsTest = bindTemplate(streamProcessChangeClassConstrictorsTest, {\r\n                        model: GetCodeName(model),\r\n                        value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                        agent_type: GetCodeName(agent),\r\n                        agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                        change_type: `Methods.${method}`,\r\n                        method\r\n                    });\r\n                    constructors.push(streamProcessChangeClassConstructors);\r\n                    tests.push(streamProcessChangeClassConstrictorsTest);\r\n\r\n                })\r\n\r\n                let staticDic = {\r\n                    model: `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                };\r\n                constructors.push(bindTemplate(staticFunctionTemplate, staticDic));\r\n                streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    updates_with: updates_with.unique().join(''),\r\n                    constructors: constructors.unique().join(jNL)\r\n                });\r\n\r\n                testClass = bindTemplate(testClass, {\r\n                    name: `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`,\r\n                    tests: tests.unique(x => x).join('')\r\n                })\r\n\r\n                let change_param_name = `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`;\r\n                result[change_param_name] = {\r\n                    id: change_param_name,\r\n                    name: change_param_name,\r\n                    tname: `${GetNodeProp(model, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}Tests`,\r\n                    template: NamespaceGenerator.Generate({\r\n                        template: streamProcessChangeClassExtension,\r\n                        usings: [\r\n                            ...STANDARD_CONTROLLER_USING,\r\n                            `${namespace}${NameSpace.Constants}`,\r\n                            `${namespace}${NameSpace.Model}`],\r\n                        namespace,\r\n                        space: NameSpace.Parameters\r\n                    }),\r\n                    test: NamespaceGenerator.Generate({\r\n                        template: testClass,\r\n                        usings: [\r\n                            ...STANDARD_CONTROLLER_USING,\r\n                            ...STANDARD_TEST_USING,\r\n                            `${namespace}${NameSpace.Constants}`,\r\n                            `${namespace}${NameSpace.Parameters}`,\r\n                            `${namespace}${NameSpace.Model}`],\r\n                        namespace,\r\n                        space: NameSpace.Tests\r\n                    })\r\n                };\r\n\r\n            });\r\n        })\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst CONSTANTS_CLASS = './app/templates/constants.tpl';\r\n\r\nexport default class ConstantsGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { values = [], state } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _constantsClass = fs.readFileSync(CONSTANTS_CLASS, 'utf8');\r\n        let result = {};\r\n        values.map(value => {\r\n            let { model, name } = value;\r\n            let constantsClass = _constantsClass;\r\n            let constructors = [];\r\n            var consts = Object.keys(model).map(key => {\r\n                let template = `public const string {{name}} = \"{{value}}\";`\r\n                let temp = bindTemplate(template, {\r\n                    name: key,\r\n                    value: model[key]\r\n                });\r\n                return ConstantsGenerator.Tabs(3) + temp;\r\n            }).join(jNL)\r\n\r\n            constantsClass = bindTemplate(constantsClass, {\r\n                constants: consts,\r\n                constants_type: name\r\n            });\r\n\r\n            result[name] = {\r\n                id: name,\r\n                name: name,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: constantsClass,\r\n                    usings: [...STANDARD_CONTROLLER_USING],\r\n                    namespace,\r\n                    space: NameSpace.Constants\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n} \r\nconst NL = `\r\n                    `\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, GetRootGraph, NodeTypes } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, STANDARD_CONTROLLER_USING, NameSpace, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst STREAM_PROCESS_TEMPLATE = './app/templates/stream_process/stream_process.tpl';\r\nconst STREAM_PROCESS_TEMPLATE_TESTS = './app/templates/stream_process/tests/stream_process.tpl';\r\nconst STREAM_PROCESS_FUNCTION_TEMPLATE = './app/templates/stream_process/stream_process_function.tpl';\r\n\r\nexport default class StreamProcessGenerator {\r\n    static GenerateStaticMethods(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessFunctionTemplate = fs.readFileSync(STREAM_PROCESS_FUNCTION_TEMPLATE, 'utf8');\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods;\r\n    }\r\n    static GenerateStaticMethodTests(models) {\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let _streamProcessTemplateTests = fs.readFileSync(STREAM_PROCESS_TEMPLATE_TESTS, 'utf8');\r\n        let _streamProcessFunctionTemplate = _streamProcessTemplateTests;\r\n        let staticMethods = [];\r\n        agents.map(agent => {\r\n            models.map(model => {\r\n                let streamProcessFunctionTemplate = _streamProcessFunctionTemplate;\r\n                let modelCode = GetNodeProp(model, NodeProperties.CodeName);\r\n                let res = bindTemplate(streamProcessFunctionTemplate, {\r\n                    model: modelCode,\r\n                    agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    [`model#allupper`]: modelCode.toUpperCase()\r\n                });\r\n\r\n                staticMethods.push(res + jNL);\r\n            });\r\n        });\r\n        return staticMethods.unique(x => x);\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let _streamProcessTemplate = fs.readFileSync(STREAM_PROCESS_TEMPLATE, 'utf8');\r\n        let _streamProcessTemplateTests = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let statics = StreamProcessGenerator.GenerateStaticMethods(models);\r\n        let staticTests = StreamProcessGenerator.GenerateStaticMethodTests(models);\r\n        _streamProcessTemplate = bindTemplate(_streamProcessTemplate, {\r\n            static_methods: statics.unique(x => x).join('')\r\n        });\r\n\r\n        _streamProcessTemplateTests = bindTemplate(_streamProcessTemplateTests, {\r\n            tests: staticTests.unique(x => x).join(''),\r\n            name: 'StreamProcess'\r\n        });\r\n\r\n        return {\r\n            'StreamProcess': {\r\n                id: 'StreamProcess',\r\n                name: 'StreamProcess',\r\n                template: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplate,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        'System.Threading',\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.StreamProcess\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: _streamProcessTemplateTests,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        'System.Threading',\r\n                        `${namespace}${NameSpace.Constants}`,\r\n                        `${namespace}${NameSpace.StreamProcess}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Model}`],\r\n                    namespace,\r\n                    space: NameSpace.Tests\r\n                })\r\n            }\r\n        };\r\n    }\r\n}\r\nconst NL = `\r\n`\r\nconst jNL = `\r\n`\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodeTypes, NodesByType, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NameSpace, Methods, STANDARD_CONTROLLER_USING, STANDARD_TEST_USING } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport NamespaceGenerator from './namespacegenerator';\r\n\r\nconst STREAM_PROCESS_CHANGE_CLASS_EXTENSION = './app/templates/stream_process/stream_process_response_class_extention.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR = './app/templates/stream_process/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST = './app/templates/stream_process/tests/stream_process_response_class_extention_constructor.tpl';\r\nconst STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED = './app/templates/stream_process/stream_process_response_class_extention_constructor_failed.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst PROPERTY_TABS = 6;\r\nexport default class ChangeResponseGenerator {\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += TAB;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let models = NodesByType(state, NodeTypes.Model);\r\n        let agents = models.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n\r\n        let _streamProcessChangeClassExtension = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_EXTENSION, 'utf8');\r\n        let _streamProcessChangeClassConstructors = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR, 'utf8');\r\n        let _streamProcessChangeClassConstructorsTest = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_TEST, 'utf8');\r\n        let _streamProcessChangeClassConstructorsFailed = fs.readFileSync(STREAM_PROCESS_CHANGE_CLASS_CONSTRUCTOR_FAILED, 'utf8');\r\n        let _test = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let result = {};\r\n        agents.map(agent => {\r\n            let constructors = [];\r\n            let tests = [];\r\n            let properties = '';\r\n            let statics = '';\r\n            let streamProcessChangeClassExtension = _streamProcessChangeClassExtension;\r\n            let test = _test;\r\n            models.map(model2 => {\r\n                models.map(model => {\r\n                    Object.values(Methods).filter(x => x !== Methods.Get && x !== Methods.GetAll).map(method => {\r\n\r\n                        let streamProcessChangeClassConstructors = _streamProcessChangeClassConstructors;\r\n                        let streamProcessChangeClassConstructorsFailed = _streamProcessChangeClassConstructorsFailed;\r\n                        let streamProcessChangeClassConstructorsTest = _streamProcessChangeClassConstructorsTest;\r\n                        let parameterTemplate = null;\r\n                        let arrange = '';\r\n                        let changeParameterName = `${GetNodeProp(model2, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agent, NodeProperties.CodeName)}`\r\n                        if (method === Methods.Delete) {\r\n                            parameterTemplate = `${changeParameterName} change, bool res`;\r\n                            arrange = `\r\n            var change = ${changeParameterName}.Create();\r\n            var res = true;\r\n                            `;\r\n                        }\r\n                        else {\r\n                            parameterTemplate = `${changeParameterName} change, ${GetNodeProp(model, NodeProperties.CodeName)} ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}`;\r\n                            arrange = `\r\n            var change = ${changeParameterName}.Create();\r\n            var res =  ${GetNodeProp(model, NodeProperties.CodeName)}.Create();\r\n            change.Response = \"response\";\r\n            change.ChangeType = \"changeType\";\r\n                            `;\r\n                        }\r\n                        let parameter_properties = `\r\n            ${method === Methods.Delete ? '' : (`\r\n            result.IdValue = ${(GetNodeProp(model, NodeProperties.ValueName) || '').toLowerCase()}.Id;`)}\r\n            result.Response = change.Response;\r\n            result.ChangeType = change.ChangeType;\r\n            `;\r\n                        let act = `\r\n            var response = ${GetNodeProp(agent, NodeProperties.CodeName)}Response.${method}(change, res);\r\n`;\r\n                        let assert = `\r\n            Assert.AreEqual(response.Response, change.Response);\r\n            Assert.AreEqual(response.ChangeType, change.ChangeType);\r\n`\r\n                        streamProcessChangeClassConstructors = bindTemplate(streamProcessChangeClassConstructors, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsTest = bindTemplate(streamProcessChangeClassConstructorsTest, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            model2: GetNodeProp(model2, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            assert,\r\n                            act,\r\n                            arrange,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n\r\n                        streamProcessChangeClassConstructorsFailed = bindTemplate(streamProcessChangeClassConstructorsFailed, {\r\n                            model: GetNodeProp(model, NodeProperties.CodeName),\r\n                            value: GetNodeProp(model, NodeProperties.ValueName) || 'value',\r\n                            agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                            agent: GetNodeProp(agent, NodeProperties.AgentName) || 'agent',\r\n                            change_type: `Methods.${method} `,\r\n                            method,\r\n                            parameters: parameterTemplate,\r\n                            parameters_property: parameter_properties\r\n                        });\r\n                        if (!tests.some(x => x === streamProcessChangeClassConstructorsTest)) {\r\n                            tests.push(streamProcessChangeClassConstructorsTest);\r\n                        }\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructors) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructors);\r\n\r\n                        if (constructors.indexOf(streamProcessChangeClassConstructorsFailed) === -1)\r\n                            constructors.push(streamProcessChangeClassConstructorsFailed);\r\n\r\n                    })\r\n                })\r\n            });\r\n\r\n            streamProcessChangeClassExtension = bindTemplate(streamProcessChangeClassExtension, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                properties: ''\r\n            });\r\n            test = bindTemplate(test, {\r\n                model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                constructors: constructors.join(jNL),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                properties: '',\r\n                tests: tests.join(jNL)\r\n            });\r\n\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Response`,\r\n                tname: `${GetNodeProp(agent, NodeProperties.CodeName)}ResponseTests`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: streamProcessChangeClassExtension,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n                test: NamespaceGenerator.Generate({\r\n                    template: test,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        ...STANDARD_TEST_USING,\r\n                        `${namespace} ${NameSpace.Parameters} `,\r\n                        `${namespace} ${NameSpace.Constants} `,\r\n                        `${namespace} ${NameSpace.Model} `],\r\n                    namespace,\r\n                    space: NameSpace.Parameters\r\n                }),\r\n            };\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\nconst NL = `\r\n                `\r\nconst jNL = `\r\n                `\r\nconst TAB = `   `;","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetMethodProps, GetCodeName, GetNodeCode } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst EXECUTOR_CLASS = './app/templates/executor/executor_class.tpl';\r\nconst EXECUTOR_INTERFACE = './app/templates/executor/executor_class_interface.tpl';\r\nconst EXECUTOR_CREATE = './app/templates/executor/create.tpl';\r\nconst EXECUTOR_CREATE_COMPOSITE_INPUT = './app/templates/executor/create_composite_input.tpl';\r\n\r\nconst EXECUTOR_ENTRY_METHODS = './app/templates/executor/executor_entry_methods.tpl';\r\nconst EXECUTOR_ENTRY_METHODS_INTERFACE = './app/templates/executor/executor_entry_methods_interface.tpl';\r\nconst EXECUTOR_METHOD_CASE = './app/templates/executor/entry_method_case.tpl';\r\nconst EXECUTOR_UPDATE = './app/templates/executor/update.tpl';\r\nconst EXECUTOR_GET = './app/templates/executor/get.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\nconst EXECUTOR_METHOD_COMPOSITE_INPUT = './app/templates/executor/executor_method_composite_input.tpl';\r\nconst EXECUTOR_METHODS = './app/templates/executor/executor_methods.tpl';\r\nconst EXECUTOR_METHODS_INTERFACE = './app/templates/executor/executor_methods_interface.tpl';\r\n\r\nexport default class ExecutorGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ExecutorGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let executor_nodes = NodesByType(state, NodeTypes.Executor);\r\n        let _executor_class = fs.readFileSync(EXECUTOR_CLASS, 'utf8');\r\n        let _executor_class_interface = fs.readFileSync(EXECUTOR_INTERFACE, 'utf8');\r\n        let _executor_methods = fs.readFileSync(EXECUTOR_METHODS, 'utf8');\r\n        let _executor_methods_composite_input = fs.readFileSync(EXECUTOR_METHOD_COMPOSITE_INPUT, 'utf8');\r\n        let _executor_methods_interface = fs.readFileSync(EXECUTOR_METHODS_INTERFACE, 'utf8');\r\n        let _executor_create = fs.readFileSync(EXECUTOR_CREATE, 'utf8');\r\n        let _executor_create_composite_input = fs.readFileSync(EXECUTOR_CREATE_COMPOSITE_INPUT, 'utf8');\r\n        let _executor_update = fs.readFileSync(EXECUTOR_UPDATE, 'utf8');\r\n        let _executor_get = fs.readFileSync(EXECUTOR_GET, 'utf8');\r\n        let _exe_method = fs.readFileSync(EXECUTOR_ENTRY_METHODS, 'utf8');\r\n        let _exe_method_interface = fs.readFileSync(EXECUTOR_ENTRY_METHODS_INTERFACE, 'utf8');\r\n        let _exe_case = fs.readFileSync(EXECUTOR_METHOD_CASE, 'utf8');\r\n        let _testClass = fs.readFileSync(TEST_CLASS, 'utf8');\r\n        let agentFunctionDic = {};\r\n        let agentFunctionInterfaceDic = {};\r\n        let executor_entry_methods = [];\r\n        let agentModelDic = {};\r\n        let agmCombos = [];\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        let allfunctions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n\r\n        allfunctions.map(fun => {\r\n            let methodProps = GetMethodProps(fun);\r\n            let model_output;\r\n            if (methodProps && methodProps[FunctionTemplateKeys.CompositeInput]) {\r\n                model_output = GetCodeName(methodProps[FunctionTemplateKeys.CompositeInput])\r\n            }\r\n            let agent = methodProps[FunctionTemplateKeys.Agent];\r\n            let model = methodProps[FunctionTemplateKeys.Model];\r\n\r\n            agmCombos.push({\r\n                agentId: agent,\r\n                agent: GetCodeName(agent),\r\n                model: model_output || GetCodeName(model),\r\n                model_output: GetCodeName(model),\r\n                function: GetCodeName(fun),\r\n                method: GetNodeProp(fun, NodeProperties.MethodType)\r\n            });\r\n        });\r\n\r\n        executor_nodes.map(executor_node => {\r\n            var agent = GetNodeProp(executor_node, NodeProperties.ExecutorAgent);\r\n            var model = GetNodeProp(executor_node, NodeProperties.ExecutorModel);\r\n            var modelOutput = GetNodeProp(executor_node, NodeProperties.ExecutorModelOutput);\r\n            var modelOutputNode = GraphMethods.GetNode(graph, modelOutput);\r\n            var modelNode = GraphMethods.GetNode(graph, model);\r\n            var agentNode = GraphMethods.GetNode(graph, agent);\r\n            var funct = GetNodeProp(executor_node, NodeProperties.ExecutorFunction);\r\n            var functNode = GraphMethods.GetNode(graph, funct);\r\n            var functType = GetNodeProp(executor_node, NodeProperties.ExecutorFunctionType);\r\n            var functionNode = GraphMethods.GetNode(graph, funct);\r\n            var executor = GetNodeProp(executor_node, NodeProperties.Executor);\r\n            let executorProperties = GraphMethods.getValidatorProperties(executor);\r\n            var validation_test_vectors = [];\r\n            let amdid = GetNodeProp(agentNode, NodeProperties.CodeName) + GetNodeProp(modelNode, NodeProperties.CodeName) + GetNodeProp(functionNode, NodeProperties.MethodType);\r\n            agentModelDic[amdid] = agentModelDic[amdid] || [];\r\n\r\n            agentModelDic[amdid].push({\r\n                agent: GetCodeName(agentNode),\r\n                model: GetCodeName(modelNode),\r\n                model_output: GetCodeName(modelOutputNode),\r\n                functType,\r\n                funct: GetCodeName(functNode)\r\n            })\r\n            let methodProps = GetMethodProps(functNode);\r\n            let propertyValidationStatements = Object.keys(executorProperties || {}).map(property => {\r\n                let propertyNode = GraphMethods.GetNode(graph, property);\r\n                let validatorPs = executorProperties[property];\r\n\r\n                let properties = Object.keys(validatorPs.validators).map(vld => {\r\n                    let validators = validatorPs.validators[vld];\r\n                    let node = GraphMethods.GetNode(graph, validators.node);\r\n                    let attribute_type_arguments = '';\r\n                    if (node) {\r\n                        switch (GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.ExtensionType:\r\n                                if (validators && validators.extension) {\r\n                                    let temp = { '_ _': '\"_____\"' };\r\n                                    attribute_type_arguments = Object.keys(validators.extension).map(ext => {\r\n                                        if (validators.extension[ext]) {\r\n                                            temp[`${ext}`] = `${GetNodeProp(node, NodeProperties.CodeName)}.${MakeConstant(ext)}`;\r\n                                            return temp[`${ext}`];\r\n                                        }\r\n                                    }).filter(x => x);\r\n                                    attribute_type_arguments = temp.filter(x => x).unique(x => x).join();\r\n                                    validation_test_vectors.push({\r\n                                        property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                                        values: { cases: temp }\r\n                                    });\r\n                                    attribute_type_arguments = `new List<string> () {\r\n                ${attribute_type_arguments}\r\n            }`;\r\n                                }\r\n                                break;\r\n                            case NodeTypes.Enumeration:\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (ValidationCases[validators.type]) {\r\n                        validation_test_vectors.push({\r\n                            property: GetNodeProp(propertyNode, NodeProperties.CodeName),\r\n                            values: ValidationCases[validators.type]\r\n                        });\r\n                    }\r\n                    let template = `result{{model_property}} = data{{model_property}};`;\r\n                    let templateBindings = {};\r\n                    switch (validators.type) {\r\n                        case ExecutorRules.AgentReference:\r\n                            template = `result{{model_property}} = agent.Id;`\r\n                            break;\r\n                        case ExecutorRules.ParentReference:\r\n                            template = `result{{model_property}} = data{{model_property}};`\r\n                            break;\r\n                        case ExecutorRules.Copy:\r\n                            break;\r\n                        case ExecutorRules.AddModelReference:\r\n                            template = fs.readFileSync(`app/templates/executor/snippets/add-model-reference.tpl`, 'utf8');\r\n                            \r\n                            let { references } = validators;\r\n                            if (references) {\r\n                                let methodNode = GraphMethods.GetMethodNode(state, executor_node.id);\r\n                                if (methodNode) {\r\n                                    let methodProps = GetMethodProps(methodNode);\r\n                                    Object.keys(references).map(ref_key => {\r\n                                        templateBindings[ref_key] = GetCodeName(methodProps[references[ref_key]]);\r\n                                    })\r\n                                }\r\n                            }\r\n                            break;\r\n                        default:\r\n                            throw 'not handle [execution generator]';\r\n                    }\r\n                    var templateRes = bindTemplate(template, {\r\n                        attribute_type: validators.code[ProgrammingLanguages.CSHARP],\r\n                        attribute_type_arguments,\r\n                        model_property: `.${GetNodeProp(propertyNode, NodeProperties.CodeName)}`,\r\n                        ...({ ...templateBindings })\r\n                    });\r\n                    return ExecutorGenerator.Tabs(4) + templateRes + NEW_LINE\r\n                }).unique(x => x).join('');\r\n\r\n\r\n                return properties;\r\n            }).unique(x => x).join('');\r\n            let template = '{{not-defined template}}';\r\n            let execution_method = _executor_methods;\r\n            switch (functType) {\r\n                case Methods.Create:\r\n                    template = _executor_create;\r\n                    if (methodProps[FunctionTemplateKeys.CompositeInput]) {\r\n                        execution_method = _executor_methods_composite_input;\r\n                        template = _executor_create_composite_input;\r\n                    }\r\n                    break;\r\n                case Methods.Update:\r\n                    template = _executor_update;\r\n                    break;\r\n                case Methods.Get:\r\n                case Methods.GetAll:\r\n                    template = _executor_get;\r\n                    break;\r\n            }\r\n            var templateRes = bindTemplate(template, {\r\n                property_sets: propertyValidationStatements,\r\n                model: `${GetCodeName(modelNode)}`,\r\n                model_output: GetCodeName(modelOutputNode)\r\n            });\r\n\r\n            // var vectors = ExecutorGenerator.enumerateValidationTestVectors(validation_test_vectors);\r\n\r\n            let agent_parameter = GetCodeName(agentNode);\r\n            agent_parameter = agent_parameter ? `${agent_parameter} agent` : false;\r\n\r\n            let data_parameter = GetCodeName(modelNode);\r\n            data_parameter = data_parameter ? `${data_parameter} data` : false;\r\n\r\n            let change_parameter = !agent_parameter ? false : `${GetNodeProp(modelNode, NodeProperties.CodeName)}ChangeBy${GetNodeProp(agentNode, NodeProperties.CodeName)}`;\r\n            change_parameter = change_parameter ? `${change_parameter} change` : false;\r\n\r\n            let parameters = [data_parameter, agent_parameter, change_parameter].filter(x => x).join(', ');\r\n\r\n            var templateRes = bindTemplate(execution_method, {\r\n                model: GetCodeName(modelNode),\r\n                model_output: GetCodeName(modelOutputNode) || GetCodeName(modelNode),\r\n                method_name: GetCodeName(functionNode),\r\n                parameters,\r\n                data: GetCodeName(modelNode),\r\n                agent: GetCodeName(agentNode),\r\n                change: `${GetCodeName(modelNode)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n\r\n            var templateResInterface = bindTemplate(_executor_methods_interface, {\r\n                model: GetCodeName(modelNode),\r\n                model_output: GetCodeName(modelOutputNode) || GetCodeName(modelNode),\r\n                method_name: GetCodeName(functionNode),\r\n                parameters,\r\n                data: GetCodeName(modelNode),\r\n                agent: GetCodeName(agentNode),\r\n                change: `${GetCodeName(modelNode)}Change`,\r\n                method_guts: templateRes,\r\n            });\r\n\r\n            // var testTemplate = bindTemplate(_testClass, {\r\n            //     name: GetNodeProp(node, NodeProperties.CodeName),\r\n            //     tests: testProps.join(NEW_LINE)\r\n            // });\r\n            agentFunctionInterfaceDic[agent] = agentFunctionInterfaceDic[agent] || [];\r\n            agentFunctionDic[agent] = agentFunctionDic[agent] || [];\r\n            agentFunctionDic[agent].push(templateRes)\r\n            agentFunctionInterfaceDic[agent].push(templateResInterface)\r\n\r\n        });\r\n        let lastCase;\r\n        let static_methods = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                agentId,\r\n                model,\r\n                model_output,\r\n                method,\r\n            } = amd;\r\n            let cases = (agentModelDic[agent + model + amd.method] || []).map(_cases => {\r\n                var {\r\n                    agent,\r\n                    model,\r\n                    functType,\r\n                    funct\r\n                } = _cases;\r\n                if (amd.agent !== agent) { ''; }\r\n\r\n                let _case = bindTemplate(_exe_case, {\r\n                    agent,\r\n                    model,\r\n                    func_name: funct\r\n                });\r\n                return _case + NEW_LINE;\r\n            }).unique(x => x).join('');\r\n            return {\r\n                template: bindTemplate(_exe_method, {\r\n                    agent,\r\n                    model,\r\n                    cases,\r\n                    change: `${model}`,\r\n                    model_output: model_output || model,\r\n                    method\r\n                }) + NEW_LINE,\r\n                agent: agentId\r\n            }\r\n        });\r\n        let static_methods_interface = agmCombos.map(amd => {\r\n            var {\r\n                agent,\r\n                model,\r\n                method,\r\n                agentId,\r\n                model_output\r\n            } = amd;\r\n            return {\r\n                template: bindTemplate(_exe_method_interface, {\r\n                    agent,\r\n                    model,\r\n                    model_output: model_output || model,\r\n                    change: `${model}`,\r\n                    method\r\n                }) + NEW_LINE,\r\n                agent: agentId\r\n            }\r\n        });\r\n        Object.keys(agentFunctionDic).map(agent => {\r\n\r\n            var node = GraphMethods.GetNode(graph, agent);\r\n            let templateRes = bindTemplate(_executor_class, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionDic[agent].join(''),\r\n                staticentry: static_methods.unique(x => x.template).filter(x => x.agent === agent).map(x => x.template).join('')\r\n            });\r\n\r\n            let templateInterfaceRes = bindTemplate(_executor_class_interface, {\r\n                model: GetNodeProp(node, NodeProperties.CodeName),\r\n                methods: agentFunctionInterfaceDic[agent].unique(x => x).join(''),\r\n                staticentry: static_methods_interface.unique(x => x.template).filter(x => x.agent === agent).map(x => x.template).join('')\r\n\r\n            })\r\n\r\n\r\n\r\n            result[GetNodeProp(node, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(node, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                tname: `${GetNodeProp(node, NodeProperties.CodeName)}ExecutorTests`,\r\n                iname: `I${GetNodeProp(node, NodeProperties.CodeName)}Executor`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Executors\r\n                }),\r\n                interface: NamespaceGenerator.Generate({\r\n                    template: templateInterfaceRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Parameters}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Interface\r\n                }),\r\n                // test: NamespaceGenerator.Generate({\r\n                //     template: testTemplate,\r\n                //     usings: [\r\n                //         ...STANDARD_CONTROLLER_USING,\r\n                //         ...STANDARD_TEST_USING,\r\n                //         `${namespace}${NameSpace.Executors}`,\r\n                //         `${namespace}${NameSpace.Model}`,\r\n                //         `${namespace}${NameSpace.Constants}`],\r\n                //     namespace,\r\n                //     space: NameSpace.Tests\r\n                // }),\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle, GetMethodsProperties } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate, FunctionTemplateKeys } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/returns/returns_class.tpl';\r\nconst RETURN_GET_FUNCTION = './app/templates/models/returns/returns_funcs.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf8');\r\n        let _return_get_methods = fs.readFileSync(RETURN_GET_FUNCTION, 'utf8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n            var methods = allfilters.filter(x => {\r\n                var methodProps = GetMethodsProperties(x.id);\r\n                if (methodProps) {\r\n                    return methodProps[FunctionTemplateKeys.Agent] === agent.id;\r\n                }\r\n            }).map(filterNode => {\r\n                var methodProps = GetMethodsProperties(filterNode.id);\r\n                let model = GraphMethods.GetNode(graphRoot, methodProps[FunctionTemplateKeys.ModelOutput] || methodProps[FunctionTemplateKeys.Model]);\r\n                let properties = GraphMethods.getNodesByLinkType(graph, {\r\n                    id: model.id,\r\n                    direction: GraphMethods.SOURCE,\r\n                    type: LinkType.PropertyLink\r\n                }).filter(t => GetNodeProp(filterNode, NodeProperties.FilterPropreties) ? GetNodeProp(filterNode, NodeProperties.FilterPropreties)[t.id] : '')\r\n                    .map(t => {\r\n                        return `           result.${GetNodeProp(t, NodeProperties.CodeName)} = model.${GetNodeProp(t, NodeProperties.CodeName)};`\r\n                    }).join(NEW_LINE);\r\n                return bindTemplate(_return_get_methods, {\r\n                    function: GetNodeProp(filterNode, NodeProperties.CodeName),\r\n                    agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                    model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    set_properties: properties\r\n                });\r\n            }).join(NEW_LINE);\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Return`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph, GetNodeTitle } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst RETURN_GET_CLASS = './app/templates/models/exceptions/exceptions_class.tpl';\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelReturnGenerator {\r\n\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _return_get_class = fs.readFileSync(RETURN_GET_CLASS, 'utf8');\r\n        let allfilters = NodesByType(state, NodeTypes.ModelFilter);\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        let allagents = allmodels.filter(x => GetNodeProp(x, NodeProperties.IsAgent));\r\n        allagents.map(agent => {\r\n\r\n            let templateRes = bindTemplate(_return_get_class, {\r\n                agent: GetNodeProp(agent, NodeProperties.CodeName)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Exceptions`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import * as GraphMethods from '../methods/graph_methods';\r\nimport { GetNodeProp, NodeProperties, NodesByType, NodeTypes, GetRootGraph } from '../actions/uiactions';\r\nimport { LinkType, NodePropertyTypesByLanguage, ProgrammingLanguages, NEW_LINE, ConstantsDeclaration, MakeConstant, NameSpace, STANDARD_CONTROLLER_USING, ValidationCases, STANDARD_TEST_USING, Methods, ExecutorRules } from '../constants/nodetypes';\r\nimport fs from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { NodeType } from '../components/titles';\r\nimport NamespaceGenerator from './namespacegenerator';\r\nimport { enumerate } from '../utils/utils';\r\n\r\nconst MODEL_GET_CLASS = './app/templates/models/gets/model_get_class.tpl';\r\nconst MODEL_GET_FUNCTION = './app/templates/models/gets/model_get_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION = './app/templates/models/gets/model_get_many_to_many_function.tpl';\r\nconst MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD = './app/templates/models/gets/model_get_many_to_many_function_get_child.tpl';\r\n\r\nconst TEST_CLASS = './app/templates/tests/tests.tpl';\r\n\r\nexport default class ModelGetGenerator {\r\n    static enumerateValidationTestVectors(validation_test_vectors) {\r\n        var vects = validation_test_vectors.map(x => Object.keys(x.values.cases).length);\r\n\r\n        var enumeration = ModelGetGenerator.EnumerateCases(vects);\r\n        return enumeration;\r\n    }\r\n    static EnumerateCases(vects, j = 0) {\r\n        return enumerate(vects, j);\r\n    }\r\n    static Tabs(c) {\r\n        let res = '';\r\n        for (var i = 0; i < c; i++) {\r\n            res += `    `;\r\n        }\r\n        return res;\r\n    }\r\n    static Generate(options) {\r\n        var { state, key } = options;\r\n        let graphRoot = GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphMethods.GraphKeys.NAMESPACE] : null;\r\n        let graph = GetRootGraph(state);\r\n        let result = {};\r\n\r\n        let _get_class = fs.readFileSync(MODEL_GET_CLASS, 'utf8');\r\n        let _get_methods = fs.readFileSync(MODEL_GET_FUNCTION, 'utf8');\r\n        let _get_methods_many_to_many = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION, 'utf8');\r\n        let _get_method_many_to_many_get_child = fs.readFileSync(MODEL_GET_MANY_TO_MANY_FUNCTION_GET_CHILD, 'utf8');\r\n        let allmodels = NodesByType(state, NodeTypes.Model);\r\n        allmodels.filter(x => !GetNodeProp(x, NodeProperties.IsCompositeInput)).map(agent => {\r\n            var methods = allmodels.filter(x => x.id !== agent.id)\r\n                .filter(x => {\r\n                    if (GetNodeProp(agent, NodeProperties.HasLogicalChildren) && (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []).some(v => v === x.id)) {\r\n                        if (!GetNodeProp(agent, NodeProperties.ManyToManyNexus))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                })\r\n                .map(model => {\r\n                    return bindTemplate(_get_methods, {\r\n                        item_property: GetNodeProp(model, NodeProperties.IsOwnedByAgents) ? 'Owner' : GetNodeProp(agent, NodeProperties.CodeName),\r\n                        agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                        model: GetNodeProp(model, NodeProperties.CodeName),\r\n                    });\r\n                });\r\n\r\n            if (GetNodeProp(agent, NodeProperties.ManyToManyNexus)) {\r\n                var childrenTypes = (GetNodeProp(agent, NodeProperties.LogicalChildrenTypes) || []);\r\n                if (childrenTypes && childrenTypes.length) {\r\n                    let namesAreUnique = childrenTypes.map(t => GetNodeProp(GraphMethods.GetNode(graph, t), NodeProperties.CodeName)).unique(x => x).length === childrenTypes.length;\r\n                    childrenTypes.map(ct => {\r\n                        methods.push(bindTemplate(_get_method_many_to_many_get_child, {\r\n                            model: GetNodeProp(GraphMethods.GetNode(graph, ct), NodeProperties.CodeName),\r\n                            many_to_many: GetNodeProp(agent, NodeProperties.CodeName)\r\n                        }));\r\n                    })\r\n                    enumerate([].interpolate(0, childrenTypes.length, function () {\r\n                        return childrenTypes.length + 1;\r\n                    })).filter(x => x.length === x.unique(t => t).length)\r\n                        .map(model => {\r\n                            let params = model.subset(0, model.length).map((t, index) => {\r\n                                if (childrenTypes.length === t) {\r\n                                    return false;\r\n                                }\r\n                                let paramName = `x${index}`;\r\n                                if (namesAreUnique) {\r\n                                    paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                }\r\n                                return bindTemplate(`{{_type}} ${paramName}`, {\r\n                                    _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                })\r\n                            }).filter(x => x);\r\n                            if (params.length) {\r\n                                methods.push(bindTemplate(_get_methods_many_to_many, {\r\n                                    parameters: params.join(', '),\r\n                                    query: model.subset(0, model.length).map((t, index) => {\r\n                                        if (childrenTypes.length === t) {\r\n                                            return false;\r\n                                        }\r\n\r\n                                        let paramName = `x${index}`;\r\n                                        if (namesAreUnique) {\r\n                                            paramName = GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName).toLowerCase();\r\n                                        }\r\n\r\n                                        return bindTemplate(`item != null && ${paramName} != null && item.{{_type}} == ${paramName}.Id`, {\r\n                                            _type: GetNodeProp(GraphMethods.GetNode(graph, childrenTypes[t]), NodeProperties.CodeName)\r\n                                        })\r\n                                    }).filter(x => x).join(' && '),// \r\n                                    model: GetNodeProp(agent, NodeProperties.CodeName),\r\n                                }));\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n            let templateRes = bindTemplate(_get_class, {\r\n                agent_type: GetNodeProp(agent, NodeProperties.CodeName),\r\n                functions: methods.unique(x => x).join(NEW_LINE)\r\n            });\r\n            result[GetNodeProp(agent, NodeProperties.CodeName)] = {\r\n                id: GetNodeProp(agent, NodeProperties.CodeName),\r\n                name: `${GetNodeProp(agent, NodeProperties.CodeName)}Get`,\r\n                template: NamespaceGenerator.Generate({\r\n                    template: templateRes,\r\n                    usings: [\r\n                        ...STANDARD_CONTROLLER_USING,\r\n                        `${namespace}${NameSpace.Model}`,\r\n                        `${namespace}${NameSpace.Interface}`,\r\n                        `${namespace}${NameSpace.Constants}`],\r\n                    namespace,\r\n                    space: NameSpace.Controllers\r\n                })\r\n            };\r\n        })\r\n\r\n        return result;\r\n    }\r\n}","import ControllerGenerator from \"./controllergenerator\";\r\nimport * as Titles from \"../components/titles\";\r\nimport { NodeTypes, GeneratedTypes, Methods, GeneratedConstants, NodeProperties, ConstantsDeclaration, MakeConstant } from \"../constants/nodetypes\";\r\nimport ModelGenerator from \"./modelgenerators\";\r\nimport ExtensionGenerator from \"./extensiongenerator\";\r\nimport MaestroGenerator from \"./maestrogenerator\";\r\nimport ChangeParameterGenerator from \"./changeparametergenerator\";\r\nimport ConstantsGenerator from \"./constantsgenerator\";\r\nimport PermissionGenerator from \"./permissiongenerator\";\r\nimport StreamProcessGenerator from \"./streamprocessgenerator\";\r\nimport { NodesByType, GetNodeProp } from \"../actions/uiactions\";\r\nimport StreamProcessOrchestrationGenerator from \"./streamprocessorchestrationgenerator\";\r\nimport ChangeResponseGenerator from \"./changeresponsegenerator\";\r\nimport ValidationRuleGenerator from \"./validationrulegenerator\";\r\nimport ExecutorGenerator from \"./executiongenerator\";\r\nimport ModelReturnGenerator from './modelreturngenerator';\r\nimport ModelExceptionGenerator from './modelexceptiongenerator';\r\nimport ModelItemFilter from './modelitemfiltergenerator';\r\nimport ModelGetGenerator from './modelgetgenerators';\r\nexport default class Generator {\r\n    static generate(options) {\r\n        var { state, type, key } = options;\r\n        switch (type) {\r\n            case NodeTypes.Controller:\r\n                let temp = ControllerGenerator.Generate({ state, key });\r\n                return temp;\r\n            case NodeTypes.Model:\r\n                return ModelGenerator.Generate({ state, key });\r\n            case NodeTypes.ExtensionType:\r\n                return ExtensionGenerator.Generate({ state, key });\r\n            case NodeTypes.Maestro:\r\n                return MaestroGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeParameter:\r\n                return ChangeParameterGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ChangeResponse:\r\n                return ChangeResponseGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Constants:\r\n                //Add enumerations here.\r\n                let models = NodesByType(state, NodeTypes.Model);\r\n                let functions = NodesByType(state, [NodeTypes.Function, NodeTypes.Method]);\r\n                let enumerations = NodesByType(state, NodeTypes.Enumeration).map(node => {\r\n                    var enums = GetNodeProp(node, NodeProperties.Enumeration);\r\n                    var larg = {};\r\n                    enums.map(t => {\r\n                        larg[MakeConstant(t)] = t;\r\n                    })\r\n                    return {\r\n                        name: GetNodeProp(node, NodeProperties.CodeName),\r\n                        model: larg\r\n                    }\r\n                });\r\n                let streamTypes = {};\r\n                models.map(t => {\r\n                    streamTypes[GetNodeProp(t, NodeProperties.CodeName).toUpperCase()] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                let functionsTypes = {};\r\n                functions.map(t => {\r\n                    functionsTypes[GetNodeProp(t, NodeProperties.CodeName)] = GetNodeProp(t, NodeProperties.CodeName).toUpperCase();\r\n                })\r\n                return ConstantsGenerator.Generate({\r\n                    values: [{\r\n                        name: GeneratedConstants.Methods,\r\n                        model: Methods\r\n                    }, {\r\n                        name: GeneratedConstants.StreamTypes,\r\n                        model: streamTypes\r\n                    }, {\r\n                        name: GeneratedConstants.FunctionName,\r\n                        model: functionsTypes\r\n                    }, ...enumerations],\r\n                    state,\r\n                    key\r\n                });\r\n            case GeneratedTypes.Permissions:\r\n                return PermissionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcess:\r\n                return StreamProcessGenerator.Generate({ state, key });\r\n            case GeneratedTypes.StreamProcessOrchestration:\r\n                return StreamProcessOrchestrationGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ValidationRule:\r\n                return ValidationRuleGenerator.Generate({ state, key });\r\n            case GeneratedTypes.Executors:\r\n                return ExecutorGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelGet:\r\n                return ModelGetGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelReturn:\r\n                return ModelReturnGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelExceptions:\r\n                return ModelExceptionGenerator.Generate({ state, key });\r\n            case GeneratedTypes.ModelItemFilter:\r\n                return ModelItemFilter.Generate({ state, key });\r\n        }\r\n    }\r\n}","import { HandlerEvents } from '../ipc/handler-events';\r\nimport { GraphKeys } from '../methods/graph_methods';\r\nimport { GetRootGraph, NodesByType, GetNodeProp, NodeProperties } from './uiactions';\r\nimport fs from 'fs';\r\nconst { ipcRenderer } = require('electron');\r\nimport path from 'path';\r\nimport { GeneratedTypes, NodeTypes } from '../constants/nodetypes';\r\nimport Generator from '../generators/generator';\r\nimport { fstat, writeFileSync } from 'fs';\r\nimport { bindTemplate } from '../constants/functiontypes';\r\nimport { uuidv4 } from '../utils/array';\r\n\r\nconst hub = {};\r\nipcRenderer.on('message-reply', (event, arg) => {\r\n    console.log(arg) // prints \"pong\"\r\n    let reply = JSON.parse(arg);\r\n    if (hub[reply.id]) {\r\n        hub[reply.id].resolve(reply.msg);\r\n    }\r\n    delete hub[reply.id];\r\n});\r\n\r\nfunction message(msg, body) {\r\n    return {\r\n        msg,\r\n        body,\r\n        id: uuidv4()\r\n    }\r\n}\r\nfunction send(mess, body) {\r\n    var m = message(mess, body);\r\n    hub[m.id] = {};\r\n    let result = Promise.resolve().then(() => {\r\n        return new Promise((resolve, fail) => {\r\n            hub[m.id].resolve = resolve;\r\n            hub[m.id].fail = fail;\r\n        })\r\n    });\r\n    ipcRenderer.send('message', JSON.stringify(m));\r\n    return result;\r\n}\r\n\r\nexport function scaffoldProject(options = {}) {\r\n    var { filesOnly } = options;\r\n    return (dispatch, getState) => {\r\n        var state = getState();\r\n        let root = GetRootGraph(state);\r\n        let solutionName = root.title.split(' ').join('.');\r\n\r\n        (filesOnly ? Promise.resolve() : send(HandlerEvents.scaffold.message, {\r\n            solutionName,\r\n            workspace: path.join(root.workspace, root.title)\r\n        })).then(res => {\r\n            console.log('Finished Scaffolding.');\r\n\r\n            generateFiles(path.join(root.workspace, root.title), solutionName, state);\r\n        }).then(() => {\r\n\r\n            let namespace = root ? root[GraphKeys.NAMESPACE] : null;\r\n            let server_side_setup = root ? root[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n            let userNode = NodesByType(state, NodeTypes.Model).find(x => GetNodeProp(x, NodeProperties.IsUser));\r\n            if (server_side_setup) {\r\n\r\n                return generateFolderStructure(path.join(`./app/templates/net_core_mvc/identity/${server_side_setup}`), {\r\n                    model: GetNodeProp(userNode, NodeProperties.CodeName),\r\n                    namespace\r\n                }, null, path.join(path.join(root.workspace, root.title), solutionName + path.join('.Web')));\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction generateFolderStructure(dir, lib, relative, target_dir) {\r\n    let directories = fs.readdirSync(dir);\r\n    relative = relative || dir;\r\n    directories.map(item => {\r\n        let dirPath = path.join(dir, item);\r\n        if (fs.existsSync(dirPath) && fs.lstatSync(dirPath).isDirectory()) {\r\n            let reldir = dir.substr(relative.length)\r\n            ensureDirectory(path.join(target_dir, reldir, item));\r\n            generateFolderStructure(dirPath, lib, relative, target_dir);\r\n        }\r\n        else if (fs.existsSync(dirPath)) {\r\n            let file = fs.readFileSync(dirPath, 'utf8');\r\n            let reldir = dir.substr(relative.length)\r\n            file = bindTemplate(file, lib);\r\n            fs.writeFileSync(path.join(target_dir, reldir, item), file, 'utf8');\r\n        }\r\n    })\r\n}\r\nfunction generateFiles(workspace, solutionName, state) {\r\n\r\n\r\n    var code_types = [\r\n        NodeTypes.Controller,\r\n        NodeTypes.Model,\r\n        NodeTypes.ExtensionType,\r\n        NodeTypes.Maestro,\r\n        ...Object.values(GeneratedTypes)\r\n    ];\r\n    let root = GetRootGraph(state);\r\n    code_types.map(code_type => {\r\n\r\n        var temp = Generator.generate({\r\n            type: code_type,\r\n            state\r\n        });\r\n        let area = CodeTypeToArea[code_type];\r\n        path.join();\r\n        for (var fileName in temp) {\r\n            ensureDirectory(path.join(workspace, solutionName + area))\r\n            writeFileSync(path.join(workspace, solutionName + area, `${temp[fileName].name}.cs`), temp[fileName].template)\r\n            if (temp[fileName].interface) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Interfaces'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Interfaces', `${temp[fileName].iname || fileName}.cs`), temp[fileName].interface);\r\n            }\r\n            if (temp[fileName].test) {\r\n                ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n                writeFileSync(path.join(workspace, solutionName + '.Tests', `${temp[fileName].tname || fileName}.cs`), temp[fileName].test);\r\n\r\n            }\r\n        }\r\n    })\r\n    if (root) {\r\n        ensureDirectory(path.join(workspace, solutionName + '.Tests'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Tests', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n        ensureDirectory(path.join(workspace, solutionName + '.Web'))\r\n        writeFileSync(path.join(workspace, solutionName + '.Web', `appsettings.json`), JSON.stringify(root.appConfig, null, 4));\r\n    }\r\n}\r\n\r\nfunction ensureDirectory(dir) {\r\n    if (!fs.existsSync(dir)) {\r\n        console.log('doesnt exist : ' + dir);\r\n    }\r\n    else {\r\n    }\r\n\r\n    if (!fs.existsSync(dir)) {\r\n        fs.mkdirSync(dir);\r\n    }\r\n    else {\r\n    }\r\n};\r\n\r\nconst CodeTypeToArea = {\r\n    [NodeTypes.Controller]: path.join('.Web', 'Controllers'),\r\n    [NodeTypes.Model]: '.Models',\r\n    [NodeTypes.ExtensionType]: '.Models',\r\n    [NodeTypes.Maestro]: '.Controllers',\r\n    [GeneratedTypes.ChangeParameter]: '.Models',\r\n    [GeneratedTypes.ChangeResponse]: '.Models',\r\n    [GeneratedTypes.ValidationRule]: '.Models',\r\n    [GeneratedTypes.Executors]: '.Controllers',\r\n    [GeneratedTypes.ModelGet]: '.Controllers',\r\n    [GeneratedTypes.ModelReturn]: '.Controllers',\r\n    [GeneratedTypes.ModelExceptions]: '.Controllers',\r\n    [GeneratedTypes.Constants]: '.Models',\r\n    [GeneratedTypes.Permissions]: '.Controllers',\r\n    [GeneratedTypes.ModelItemFilter]: '.Controllers',\r\n    [GeneratedTypes.StreamProcess]: '.Controllers',\r\n    [GeneratedTypes.StreamProcessOrchestration]: '.Controllers'\r\n\r\n}","import { createGraph, updateWorkSpace } from '../methods/graph_methods';\r\nimport { SaveApplication, SaveGraph, CURRENT_GRAPH, GetRootGraph } from './uiactions';\r\n\r\nvar fs = require('fs');\r\nconst { ipcRenderer } = require('electron')\r\nconst remote = require('electron').remote;\r\nvar dialog = remote.dialog;\r\n\r\n\r\n\r\nexport function openRedQuickBuilderGraph() {\r\n    return (dispatch, getState) => {\r\n        dialog.showOpenDialog(\r\n            remote.getCurrentWindow(),\r\n            {\r\n                filters: [\r\n                    { name: 'Red Quick Builder', extensions: [RED_QUICK_FILE_EXT$] }\r\n                ],\r\n                properties: ['openFile']\r\n            },\r\n            (fileName) => {\r\n                if (fileName === undefined) {\r\n                    console.log(\"You didn't save the file\");\r\n                    return;\r\n                }\r\n\r\n                if (fileName.length && Array.isArray(fileName)) {\r\n                    fileName = fileName[0];\r\n                }\r\n\r\n                if (!fileName.endsWith(RED_QUICK_FILE_EXT)) {\r\n                    fileName = `${fileName}${RED_QUICK_FILE_EXT}`;\r\n                }\r\n                console.log(fileName);\r\n                fs.readFile(fileName, { encoding: 'utf8' }, (err, res) => {\r\n                    if (err) {\r\n                        console.error(\"An error ocurred updating the file\" + err.message);\r\n                        console.log(err);\r\n                        return;\r\n                    }\r\n                    try {\r\n                        var opened_graph = JSON.parse(res);\r\n                        if (opened_graph) {\r\n                            var default_graph = createGraph();\r\n                            opened_graph = { ...default_graph, ...opened_graph };\r\n                            SaveApplication(opened_graph.id, CURRENT_GRAPH, dispatch);\r\n                            SaveGraph(opened_graph, dispatch);\r\n                        }\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                    console.warn(\"The file has been succesfully saved\");\r\n                });\r\n            });\r\n\r\n    }\r\n}\r\nexport function newRedQuickBuilderGraph() {\r\n    return (dispatch, getState) => {\r\n        var default_graph = createGraph();\r\n        var opened_graph = { ...default_graph };\r\n        SaveApplication(opened_graph.id, CURRENT_GRAPH, dispatch);\r\n        SaveGraph(opened_graph, dispatch);\r\n    }\r\n}\r\nipcRenderer.on('save-graph-to-file-reply', (event, arg) => {\r\n    console.log(arg) // prints \"pong\"\r\n})\r\nexport const RED_QUICK_FILE_EXT = '.rqb';\r\nexport const RED_QUICK_FILE_EXT$ = 'rqb';\r\nexport function saveGraphToFile() {\r\n    return (dispatch, getState) => {\r\n        var currentGraph = GetRootGraph(getState());\r\n        // You can obviously give a direct path without use the dialog (C:/Program Files/path/myfileexample.txt)\r\n        if (currentGraph) {\r\n            var content = JSON.stringify(currentGraph);\r\n            dialog.showSaveDialog(\r\n                remote.getCurrentWindow(),\r\n                {\r\n                    filters: [\r\n                        { name: 'Red Quick Builder', extensions: [RED_QUICK_FILE_EXT$] }\r\n                    ]\r\n                },\r\n                (fileName) => {\r\n                    if (fileName === undefined) {\r\n                        console.log(\"You didn't save the file\");\r\n                        return;\r\n                    }\r\n\r\n                    if (!fileName.endsWith(RED_QUICK_FILE_EXT)) {\r\n                        fileName = `${fileName}${RED_QUICK_FILE_EXT}`;\r\n                    }\r\n                    console.log(fileName);\r\n                    fs.writeFile(fileName, content, (err) => {\r\n                        if (err) {\r\n                            console.error(\"An error ocurred updating the file\" + err.message);\r\n                            console.log(err);\r\n                            return;\r\n                        }\r\n\r\n                        console.warn(\"The file has been succesfully saved\");\r\n                    });\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport function setWorkingDirectory() {\r\n    return (dispatch, getState) => {\r\n        var currentGraph = GetRootGraph(getState());\r\n        // You can obviously give a direct path without use the dialog (C:/Program Files/path/myfileexample.txt)\r\n        if (currentGraph) {\r\n            dialog.showOpenDialog(\r\n                remote.getCurrentWindow(),\r\n                {\r\n                    properties: ['openDirectory']\r\n                },\r\n                (fileName) => {\r\n                    if (fileName === undefined) {\r\n                        console.log(\"You didn't save the file\");\r\n                        return;\r\n                    }\r\n\r\n                    console.log(fileName);\r\n                    currentGraph = updateWorkSpace(currentGraph, { workspace: fileName[0] });\r\n                    SaveGraph(currentGraph, dispatch)\r\n                });\r\n        }\r\n    }\r\n}","import { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as _ from './array';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as IPCEvents from '../actions/ipcActions';\r\nimport * as RemoteActions from '../actions/remoteActions';\r\nexport function mapStateToProps(state) {\r\n    return {\r\n        state\r\n    };\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        ...UIA,\r\n        ...IPCEvents,\r\n        ...RemoteActions\r\n    }, dispatch);\r\n}\r\n\r\n\r\nexport function UIConnect(component) {\r\n    return connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(component);\r\n}\r\nString.prototype.padding = function (n, c) {\r\n    var val = this.valueOf();\r\n    if (Math.abs(n) <= val.length) {\r\n        return val;\r\n    }\r\n    var m = Math.max((Math.abs(n) - this.length) || 0, 0);\r\n    var pad = Array(m + 1).join(String(c || ' ').charAt(0));\r\n    //      var pad = String(c || ' ').charAt(0).repeat(Math.abs(n) - this.length);\r\n    return (n < 0) ? pad + val : val + pad;\r\n    //      return (n < 0) ? val + pad : pad + val;\r\n};\r\n\r\nString.prototype.unCamelCase = function () {\r\n    var str = this || '';\r\n    return str\r\n        // insert a space between lower & upper\r\n        .replace(/([a-z])([A-Z])/g, '$1 $2')\r\n        // space before last upper in a sequence followed by lower\r\n        .replace(/\\b([A-Z]+)([A-Z])([a-z])/, '$1 $2$3')\r\n        // uppercase the first character\r\n        .replace(/^./, function (str) { return str.toUpperCase(); }).trim();\r\n};\r\nexport function enumerate(vects, j = 0) {\r\n    var results = [];\r\n\r\n    if (j < vects.length)\r\n        for (var i = 0; i < vects[j]; i++) {\r\n            var rest = enumerate(vects, j + 1);\r\n            var temp = [i];\r\n            if (rest.length) {\r\n                rest.map(r => {\r\n                    results.push([...temp, ...r])\r\n                });\r\n            }\r\n            else {\r\n                results.push(temp);\r\n            }\r\n        }\r\n    return results;\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <a className=\"logo\">\r\n                <span className=\"logo-mini\"><b>R</b>QB</span>\r\n                <span className=\"logo-lg\"><b>Red</b>QuickBuilder</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"main-header\">\r\n                {this.props.children}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-static-top\">\r\n                {this.props.children}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nclass SidebarToggle extends Component {\r\n    render() {\r\n        var me = this;\r\n        return (\r\n            <a\r\n                onClick={() => {\r\n                    me.props.toggleDashboardMinMax();\r\n                }}\r\n                className=\"sidebar-toggle\"\r\n                data-toggle=\"push-menu\" role=\"button\">\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SidebarToggle);","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-custom-menu\">\r\n                <ul className=\"nav navbar-nav\">\r\n                    {this.props.children}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Header extends Component {\r\n    relative() {\r\n        return this.props.relative ? 'relative' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className={`main-sidebar ${this.relative()}`}>\r\n                <section className=\"sidebar\" style={{ height: 'auto' }}>\r\n                    {this.props.children}\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class SideBarHeader extends Component {\r\n    render() {\r\n        return (<li className=\"header\" onClick={this.props.onClick}>{this.props.title}</li>);\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"sidebar-menu tree\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TreeViewMenu extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'menu-open' : '';\r\n    }\r\n    display() {\r\n        return this.props.open ? 'block' : 'block';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-dashboard\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={`treeview ${this.active()} ${this.open()}`}>\r\n                <a onClick={() => {\r\n                    if (this.props.toggle)\r\n                        this.props.toggle()\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    {this.props.hideIcon ? null : <i className={`${this.icon()}`}></i>}\r\n                    <span>{this.props.title}</span>\r\n                    {this.props.hideArrow ? null : (<span className=\"pull-right-container\">\r\n                        <i className=\"fa fa-angle-left pull-right\"></i>\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                    {!this.props.hideArrow && this.props.right ? null : (<span className=\"pull-right-container\">\r\n                        {this.props.right ? this.props.right : null}\r\n                    </span>)}\r\n                </a>\r\n                <ul className=\"treeview-menu\" style={{ display: this.display() }}>\r\n                    {this.props.children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Content extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"content-wrapper\" style={{ minHeight: '946px' }}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBar extends Component {\r\n    open() {\r\n        return this.props.open ? 'control-sidebar-open' : '';\r\n    }\r\n    extraWidth() {\r\n        return this.props.extraWide ? 'extra-wide' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className={`control-sidebar control-sidebar-dark ${this.open()} ${this.extraWidth()}`}>\r\n                {this.props.children}\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTabs extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs nav-justified control-sidebar-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarTab extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-wrench\";\r\n    }\r\n    active() {\r\n        return this.props.active ? 'active' : \"\";\r\n    }\r\n    ariaExapanded() {\r\n        return this.props.active ? 'true' : 'false';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded={this.ariaExapanded()}>\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class ControlSideBarMenu extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"control-sidebar-menu\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class ControlSideBarMenuItem extends Component {\r\n    icon() {\r\n        return this.props.icon || 'fa fa-birthday-cake';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={`menu-icon ${this.icon()} bg-red`}></i>\r\n\r\n                    <div className=\"menu-info\">\r\n                        <h4 className=\"control-sidebar-subheading\">{this.props.title || ''}</h4>\r\n\r\n                        <p>{this.props.description || ''}</p>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ControlSideBarMenuHeader extends Component {\r\n    render() {\r\n        return (\r\n            <h3 className=\"control-sidebar-heading\">{this.props.title}</h3>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabPane extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-pane ${this.active()}`}>\r\n                {this.props.active ? this.props.children : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class FormControl extends Component {\r\n    _class() {\r\n        return this.props.sidebarform ? 'sidebar-form' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <form role=\"form\" className={this._class()} {...{ style: this.props.style || {} }}>\r\n                {this.props.children}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class TextInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    placeholder() {\r\n        return this.props.placeholder || '';\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.props.inputgroup ? 'input-group' : \"form-group\"}>\r\n                {this.props.inputgroup ? null : <label>{this.label()}</label>}\r\n                <input type=\"text\" disabled={this.disabled()} className={\"form-control\"} value={this.value()} onChange={(v) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(v.target.value);\r\n                    }\r\n                }} placeholder={this.placeholder()} />\r\n                {this.props.inputgroup ? (<span className=\"input-group-btn\">\r\n                    <button type=\"submit\" onClick={() => {\r\n                        if (this.props.onClick) {\r\n                            this.props.onClick();\r\n                        }\r\n                    }} name=\"search\" id=\"search-btn\" className=\"btn btn-flat\"><i className=\"fa fa-edit\"></i>\r\n                    </button>\r\n                </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as Titles from './titles';\r\n\r\nexport default class SelectInput extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    options() {\r\n        if (this.props.options) {\r\n            return this.props.options.map((t, index) => {\r\n                return (<option key={`option-${index}`} value={t.value}>{t.title}</option>)\r\n            })\r\n        }\r\n        return [];\r\n    }\r\n    disabled() {\r\n        return this.props.disabled ? 'disabled' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>{this.label()}</label>\r\n                <select className=\"form-control\" disabled={this.disabled()} onSelect={(evt) => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(evt.target.value);\r\n                    }\r\n                }}\r\n                    onChange={(evt) => {\r\n                        if (this.props.onChange) {\r\n                            this.props.onChange(evt.target.value);\r\n                        }\r\n                    }} value={this.value()}>\r\n                    <option value={''}>{this.props.defaultSelectText || Titles.Select}</option>\r\n                    {this.options()}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class CheckBox extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <div className=\"checkbox\">\r\n                    <label title={this.title()}>\r\n                        <input type=\"checkbox\" checked={this.value()} onChange={(v) => {\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange(v.target.checked);\r\n                            }\r\n                        }} />\r\n                        {this.label()}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const ServiceTypes = {\r\n    Facebook: 'Facebook',\r\n    Twitter: 'Twitter',\r\n    Google: 'Google',\r\n    Microsoft: 'Microsoft'\r\n}\r\n\r\nexport const ServiceTypeSetups = {\r\n    [ServiceTypes.Facebook]: {\r\n        properties: {\r\n            UseFacebook: { type: 'boolean' },\r\n            FacebookAppId: { type: 'string' },\r\n            FacebookAppSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Microsoft]: {\r\n        properties: {\r\n            UseMicrosoftAccount: { type: 'boolean' },\r\n            MicrosoftClientId: { type: 'string' },\r\n            MicrosoftClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Google]: {\r\n        properties: {\r\n            UseGoogle: { type: 'boolean' },\r\n            GoogleClientId: { type: 'string' },\r\n            GoogleClientSecret: { type: 'string' }\r\n        }\r\n    },\r\n    [ServiceTypes.Twitter]: {\r\n        properties: {\r\n            UseTwitter: { type: 'boolean' },\r\n            TwitterConsumerKey: { type: 'string' },\r\n            TwitterConsumerSecret: { type: 'string' }\r\n        }\r\n    }\r\n}\r\n\r\nexport const SystemSettings = {\r\n    Domain: 'Domain'\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nimport { ServiceTypes, ServiceTypeSetups } from '../constants/servicetypes';\r\nclass ServiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Services);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let serviceType = currentNode ? UIA.GetNodeProp(currentNode, NodeProperties.ServiceType) : '';\r\n        let propinputs = [];\r\n        if (serviceType) {\r\n            let serviceTypeSetup = ServiceTypeSetups[serviceType];\r\n            if (serviceTypeSetup && serviceTypeSetup.properties) {\r\n                Object.keys(serviceTypeSetup.properties).map(prop => {\r\n                    var prop_setup = serviceTypeSetup.properties[prop];\r\n                    var value = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ServiceTypeSettings) || {};\r\n                    if (prop_setup && prop_setup.type) {\r\n                        switch (prop_setup.type) {\r\n                            case 'string':\r\n                                propinputs.push(<TextInput\r\n                                    key={`service-type${prop}`}\r\n                                    onChange={(val) => {\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                            id: currentNode.id,\r\n                                            value: { ...value, [prop]: val }\r\n                                        });\r\n                                    }}\r\n                                    label={prop.unCamelCase()}\r\n                                    value={value[prop] || ''} />)\r\n                                break;\r\n                            case 'boolean':\r\n                                    propinputs.push(<CheckBox\r\n                                        key={`service-type${prop}`}\r\n                                        onChange={(val) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.ServiceTypeSettings,\r\n                                                id: currentNode.id,\r\n                                                value: { ...value, [prop]: val }\r\n                                            });\r\n                                        }}\r\n                                        label={prop.unCamelCase()}\r\n                                        value={value[prop] || ''} />)\r\n                                break;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.ServiceActivity}\r\n                        options={Object.keys(ServiceTypes).map(t => {\r\n                            return { title: t, value: ServiceTypes[t] }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ServiceType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={serviceType} />\r\n                        {propinputs}\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ServiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarContent extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"tab-content\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarButton extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    title(){\r\n        return this.props.title || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} title={this.title()} data-toggle=\"control-sidebar\">\r\n                    <i className={this.icon()}></i>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Box extends Component {\r\n    label() {\r\n        return this.props.label || '{label}';\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    title() {\r\n        return this.props.title || '{title}';\r\n    }\r\n    primary() {\r\n        return this.props.primary ? 'box-primary' : '';\r\n    }\r\n    backgroundColor() {\r\n        return this.props.backgroundColor ? this.props.backgroundColor : '';\r\n    }\r\n    render() {\r\n        var style = {};\r\n        var styleAll = {};\r\n        if (this.props.maxheight) {\r\n            style.maxHeight = `${this.props.maxheight}px`;\r\n            style.overflowY = 'scroll';\r\n\r\n        }\r\n\r\n        if (this.backgroundColor()) {\r\n            style.background = this.backgroundColor();\r\n            styleAll.background = this.backgroundColor();\r\n        }\r\n        return (\r\n            <div className={`box ${this.primary()}`} style={{ ...styleAll }}>\r\n                <div className=\"box-header with-border\" style={{ ...styleAll }}>\r\n                    <h3 className=\"box-title\" style={{ ...styleAll }}>{this.title()}</h3>\r\n                </div>\r\n                <div className=\"box-body\" style={{ ...styleAll, ...style }}>\r\n                    {this.props.children}\r\n                </div>\r\n                <div className=\"box-footer\" style={{ ...styleAll }}>\r\n                    {this.props.footer}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nexport default class EnumerationEditMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '' };\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput onClick={() => {\r\n                    if (this.props.onComplete) {\r\n                        this.props.onComplete(this.state.value);\r\n                        this.setState({ value: '' })\r\n                    }\r\n                }} value={this.state.value} onChange={(value) => {\r\n                    this.setState({ value })\r\n                }} inputgroup={true} placeholder={Titles.Enumeration} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField,\r\n    GetLinkChainFromGraph,\r\n    GetMethodNode\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        var function_variables = [];\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        else if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ModelItemFilter)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator];\r\n            var methods = GetLinkChainFromGraph(graph, {\r\n                id: currentNode.id,\r\n                links: [{\r\n                    direction: TARGET,\r\n                    type: LinkType.ModelItemFilter\r\n                }]\r\n            }, [NodeTypes.Method]);\r\n            if (methods && methods.length) {\r\n                var props = UIA.GetMethodProps(methods[0]);\r\n                let filterParameters = UIA.GetMethodFilterParameters(currentNode.id);\r\n                if (filterParameters && filterParameters.length) {\r\n                    function_variables = filterParameters;\r\n                }\r\n                else if (props) {\r\n                    function_variables = Object.keys(props).map(t => ({ title: t, value: t }));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            validator = this.props.selectedValidator;\r\n            if (validator) {\r\n                validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n            }\r\n            function_variables = this.props.function_variables;\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum] = !item.enumeration[_enum];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Executor,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (this.props.onChange) {\r\n                                    this.props.onChange();\r\n                                }\r\n                                else {\r\n                                    if (old_one) {\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                            target: old_one,\r\n                                            source: id,\r\n                                        });\r\n                                    }\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: NodeProperties.Executor,\r\n                                        value: validator\r\n                                    })\r\n                                    this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                        target: value,\r\n                                        source: id,\r\n                                        properties: {\r\n                                            ...UIA.LinkProperties.ExecutorModelItemLink,\r\n                                            ...createEventProp(LinkEvents.Remove, {\r\n                                                property: this.props.property,\r\n                                                validator: this.props.validator,\r\n                                                function: 'OnRemoveExecutorItemPropConnection',\r\n                                                node: item.node\r\n                                            })\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            else if (validatorItem.arguments && validatorItem.arguments.method_reference) {\r\n                return this.getMethodReferenceItem(validator, validatorItem);\r\n            }\r\n            else if (validatorItem.arguments && validatorItem.arguments.functionvariables) {\r\n                let functionVariableControl = (<FormControl>\r\n                    <SelectInput\r\n                        options={function_variables}\r\n                        label={Titles.FunctionVariables}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            let old_one = item.node;\r\n                            item.node = value;\r\n                            debugger;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                })\r\n                            }\r\n                        }}\r\n                        value={validatorItem ? validatorItem.node : ''} />\r\n                </FormControl>);\r\n\r\n                return functionVariableControl\r\n            }\r\n            else if (validatorItem.arguments && validatorItem.arguments.modelproperty) {\r\n                let modelParameters = function_variables || UIA.GetMethodFilterParameters(currentNode.id);\r\n                let node_value = validatorItem ? validatorItem.node : '';\r\n                let nodeProperty = validatorItem ? validatorItem.nodeProperty : '';\r\n                let properties = [];\r\n                if (node_value) {\r\n                    let node_ref = UIA.GetMethodsProperty(this.props.adjacentNodeId || currentNode.id, node_value);\r\n                    if (node_ref) {\r\n                        properties = UIA.GetModelPropertyChildren(node_ref).toNodeSelect();\r\n                    }\r\n                }\r\n                let functionVariableControl = (<FormControl>\r\n                    <SelectInput\r\n                        options={modelParameters}\r\n                        label={Titles.FunctionVariables}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.node = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={node_value} />\r\n                    <SelectInput\r\n                        options={properties}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = this.props.selectedValidator || UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.nodeProperty = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={nodeProperty} />\r\n                </FormControl>);\r\n\r\n                return functionVariableControl\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n    getMethodReferenceItem(validator, validatorItem) {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        let methodNode = GetMethodNode(state, currentNode.id, LinkType.ExecutorFunction);\r\n        let methodNodeProperties = UIA.GetMethodProps(methodNode);\r\n        if (validatorItem.arguments && validatorItem.arguments.method_reference) {\r\n            return Object.keys(validatorItem.arguments.method_reference).map(ref => {\r\n                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                let editlist = [];\r\n                let options = UIA.GetMethodNodeSelectOptions(methodNodeProperties);\r\n                let formControll = (<FormControl key={ref}>\r\n                    <SelectInput\r\n                        options={options}\r\n                        defaultSelectText={Titles.NodeType}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createValidator();\r\n                            let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                            item.references = item.references || {};\r\n                            item.references[ref] = value;\r\n                            if (this.props.onChange) {\r\n                                this.props.onChange();\r\n                            }\r\n                            else {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Executor,\r\n                                    value: validator\r\n                                });\r\n                            }\r\n\r\n                        }}\r\n                        value={validatorItem && validatorItem.references ? validatorItem.references[ref] : ''} />\r\n                    {editlist}\r\n                </FormControl>);\r\n\r\n                return formControll\r\n            });\r\n        }\r\n        return (<div>reference</div>)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties, ExecutorUI } from '../constants/nodetypes';\r\nimport { createValidator, addValidatator, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { uuidv4 } from '../utils/array';\r\n/* onRemove\r\n() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n\r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v]\r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                        value: validator\r\n                                    })\r\n                                }\r\n*/\r\n/* onAdd\r\n() => {\r\n                                let id = currentNode.id;\r\n                                var executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n                                executor = addValidatator(executor, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: ui,\r\n                                        ..._ui[ui]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                    value: executor\r\n                                })\r\n                            }\r\n*/\r\nclass GenericPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType);\r\n        if (!active) {\r\n            return <div></div>;\r\n        }\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var genericProperty = this.props.executor || this.props.validator || this.props.methodParamSetup;\r\n        let _ui = this.props.ui;\r\n        let propertyExecutors = <div></div>;\r\n        if (_ui && genericProperty && genericProperty.properties) {\r\n            propertyExecutors = Object.keys(genericProperty.properties).map(key => {\r\n                let _validates = genericProperty.properties[key];\r\n                let visualKey = `GenericPropertyMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={(() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = genericProperty;\r\n\r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v]\r\n\r\n                                    if (this.props.onRemove) {\r\n                                        this.props.onRemove();\r\n                                    }\r\n                                })} />\r\n                            <ExecutorItem\r\n                                adjacentNodeId={this.props.adjacentNodeId}\r\n                                onChange={this.props.onChange}\r\n                                function_variables={this.props.function_variables}\r\n                                selectedValidator={genericProperty}\r\n                                node={currentNode.id}\r\n                                property={key}\r\n                                validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(_ui).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(ui => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${ui}-afjlskf-asfd`}\r\n                            title={ui}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={(() => {\r\n                                let id = currentNode.id;\r\n                                var executor = genericProperty;\r\n                                executor = addValidatator(executor, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: ui,\r\n                                        ..._ui[ui]\r\n                                    }\r\n                                });\r\n                                if (this.props.onAdd) {\r\n                                    this.props.onAdd();\r\n                                }\r\n                            })} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveExecution} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedExecutors}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-executions`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectExecution}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectexecution`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyExecutors = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyExecutors}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyExecutors\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(GenericPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SideBarContent from './sidebarcontent';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties, ExecutorUI } from '../constants/nodetypes';\r\nimport { createValidator, addValidatator, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { uuidv4 } from '../utils/array';\r\n\r\nimport SideBarHeader from './sidebarheader';\r\nclass GenericPropertyContainer extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType);\r\n        if (!active) {\r\n            return <div></div>;\r\n        }\r\n\r\n        return (\r\n            <MainSideBar relative={true}>\r\n                <SideBar>\r\n                    {this.props.top ? <SideBarContent>{this.props.top}</SideBarContent> : null}\r\n                    <SideBarMenu>\r\n                        <SideBarHeader title={this.props.title} />\r\n                        <SideBarHeader title={this.props.subTitle} />\r\n                        {this.props.children}\r\n                    </SideBarMenu>\r\n                </SideBar>\r\n            </MainSideBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(GenericPropertyContainer)","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport TabPane from './tabpane';\r\n\r\n\r\nexport default class ButtonList extends Component {\r\n    render() {\r\n        return (\r\n            <TabPane active={this.props.active}>\r\n                {(this.props.items || []).map((item) => {\r\n                    return <div\r\n                        key={`allowed-${item.id}`} className={`external-event ${this.props.isSelected(item) ? 'bg-red' : 'bg-green'}`}\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            overflow: 'hidden',\r\n                            whiteSpace: 'nowrap',\r\n                            textOverflow: 'ellipsis'\r\n                        }} onClick={() => {\r\n                            if (this.props.onClick) {\r\n                                this.props.onClick(item);\r\n                            }\r\n                        }} > {item.title}</div>;\r\n                })\r\n                }\r\n            </TabPane >)\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBarHeader from './sidebarheader';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes, FilterUI } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport Box from './box';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode, createExecutor, addMethodValidationForParamter, getMethodValidationForParameter, createValidator } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport GenericPropertyMenu from './genericpropertymenu';\r\nimport GenericPropertyContainer from './genericpropertycontainer';\r\nimport TextInput from './textinput';\r\nimport ButtonList from './buttonlist';\r\nclass ConditionFilterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Condition);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var permissionNode = UIA.GetPermissionNode(currentNode.id);\r\n        var methodDefinition = permissionNode ? UIA.GetMethodDefinition(permissionNode.id) : null;\r\n        let methodProps = UIA.GetMethodsProperties(permissionNode.id);\r\n        if (methodDefinition && methodDefinition.permission && methodDefinition.permission.params && methodDefinition.permission.params.length) {\r\n\r\n        }\r\n        else {\r\n            active = false;\r\n            return <div></div>\r\n        }\r\n        let filterParameters = UIA.GetMethodPermissionParameters(permissionNode.id);\r\n\r\n        let id = currentNode.id;\r\n        // let condition = UIA.GetNodeProp(currentNode, NodeProperties.Condition);\r\n        // if (!condition)\r\n        //     return (\r\n        //         <TabPane active={active}>\r\n        //             <ControlSideBarMenu>\r\n        //                 {!condition ? (<ControlSideBarMenuItem onClick={() => {\r\n        //                     condition = UIA.GetNodeProp(currentNode, NodeProperties.Condition) || createExecutor();\r\n        //                     this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n        //                         id,\r\n        //                         prop: NodeProperties.Condition,\r\n        //                         value: condition\r\n        //                     })\r\n        //                 }} icon={'fa fa-puzzle-piece'} title={Titles.AddCondition} description={Titles.AddCondition} />) : null}\r\n        //             </ControlSideBarMenu>\r\n        //         </TabPane>\r\n        //     );\r\n        let models = methodDefinition.permission.params.map(t => {\r\n            return {\r\n                title: `${UIA.GetNodeTitle(methodProps[t])} ${t}`,\r\n                value: t,\r\n                id: t\r\n            }\r\n        });\r\n        let methodFunctionType = UIA.GetMethodFunctionType(permissionNode.id);\r\n        let methodFunctionValidation = UIA.GetNodeProp(currentNode, NodeProperties.Condition);// UIA.GetMethodFunctionValidation(permissionNode.id);\r\n        let param_list_key = `${currentNode.id} ${methodFunctionType}`;\r\n        let param = UIA.Visual(state, param_list_key);\r\n        let param_property_list_key = UIA.Visual(state, param_list_key) ? `${param_list_key} ${param}` : null;\r\n        let model_properties = UIA.GetModelPropertyChildren(methodProps[param]).toNodeSelect();\r\n        let top = (<TabPane active={true}>\r\n            <FormControl>\r\n                <SideBarHeader title={'Parameters'} />\r\n                <ButtonList\r\n                    active={true}\r\n                    isSelected={(item) => {\r\n                        return item && UIA.Visual(state, param_list_key) === item.id;\r\n                    }}\r\n                    items={models}\r\n                    onClick={(item) => {\r\n                        let methodValidationForParameter = addMethodValidationForParamter(methodFunctionValidation, methodFunctionType, item.id);\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Condition,\r\n                            id: currentNode.id,\r\n                            value: methodValidationForParameter\r\n                        });\r\n                        this.props.setVisual(param_list_key, item.id);\r\n                    }}></ButtonList>\r\n                <SideBarHeader title={'Parameter\\'s properties'} />\r\n                {param_property_list_key ? (<ButtonList\r\n                    active={true}\r\n                    isSelected={(item) => {\r\n                        return item && UIA.Visual(state, param_property_list_key) === item.id;\r\n                    }}\r\n                    items={model_properties}\r\n                    onClick={(item) => {\r\n                        let methodValidationForParameter = addMethodValidationForParamter(\r\n                            methodFunctionValidation,\r\n                            methodFunctionType,\r\n                            UIA.Visual(state, param_list_key),\r\n                            item.id);\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Condition,\r\n                            id: currentNode.id,\r\n                            value: methodValidationForParameter\r\n                        });\r\n                        this.props.setVisual(param_property_list_key, item.id)\r\n                    }}></ButtonList>) : null}\r\n            </FormControl>\r\n        </TabPane>\r\n        )\r\n\r\n        let methodParamSetup = getMethodValidationForParameter(\r\n            methodFunctionValidation,\r\n            methodFunctionType,\r\n            UIA.Visual(state, param_list_key),\r\n            UIA.Visual(state, param_property_list_key));\r\n        let updateValidation = () => {\r\n            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                prop: UIA.NodeProperties.Condition,\r\n                id: currentNode.id,\r\n                value: methodFunctionValidation\r\n            });\r\n        };\r\n        return (<GenericPropertyContainer title='asdf' subTitle='afaf' nodeType={NodeTypes.Condition} top={top} >\r\n            <GenericPropertyMenu\r\n                ui={FilterUI}\r\n                function_variables={filterParameters}\r\n                methodParamSetup={methodParamSetup}\r\n                nodeType={NodeTypes.Condition}\r\n                onRemove={updateValidation}\r\n                adjacentNodeId={permissionNode.id}\r\n                onChange={updateValidation}\r\n                onAdd={updateValidation}\r\n            />\r\n        </GenericPropertyContainer>)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ConditionFilterMenu)","export const GraphOperationMenu = 'GraphOperationMenu';\r\nexport const GraphPropertiesMenu = 'GraphPropertiesMenu';\r\nexport const ApplicationMenu = 'ApplicationMenu';","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar Kn = 18,\n    Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","\r\nimport * as d3Zoom from 'd3-zoom'\r\nimport * as d3 from 'd3';\r\nimport * as Cola from 'webcola'\r\nimport * as GraphMethods from '../methods/graph_methods';\r\n// @flow\r\nimport React, { Component } from 'react';\r\nimport { NodeTypeColors } from '../actions/uiactions';\r\nimport { LinkStyles, LinkType, LinkPropertyKeys } from '../constants/nodetypes';\r\n\r\nconst MIN_DIMENSIONAL_SIZE = 20;\r\nexport default class MindMap extends Component {\r\n    constructor() {\r\n        super();\r\n        this.textSize = {};\r\n        this.mapScale = 1;\r\n        this.mapTranslate = { x: 0, y: 0 };\r\n        this.state = {\r\n            id: `id-${Date.now()}`,\r\n            graph: {\r\n                \"nodes\": [].map(t => { t.id = t.name; return t; }),\r\n                links: [],\r\n                \"groups\": [\r\n                    // { \"leaves\": [0], \"groups\": [1] },\r\n                    // { \"leaves\": [1, 2] },\r\n                    // { \"leaves\": [3, 4] }\r\n                ]\r\n            }\r\n        }\r\n        this.draw = this.draw.bind(this);\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.mouseMove = this.mouseMove.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // Draw for the first time to initialize.\r\n        this.draw();\r\n\r\n        // Redraw based on the new size whenever the browser window is resized.\r\n        window.addEventListener(\"resize\", this.draw);\r\n        window.addEventListener('mousemove', this.mouseMove);\r\n        window.addEventListener('mouseup', this.mouseUp);\r\n        window.addEventListener('mousedown', this.mouseDown);\r\n    }\r\n    mouseDown(evt) {\r\n        this.mouseStartEvent = evt;\r\n    }\r\n    mouseUp(evt) {\r\n        this.mouseStartEvent = null;\r\n        this.mouseMoved = null;\r\n    }\r\n    mouseMove(evt) {\r\n        if (this.mouseStartEvent) {\r\n            this.mouseMoveEvt = evt;\r\n            this.mouseMoved = {\r\n                x: evt.clientX - this.mouseStartEvent.clientX,\r\n                y: evt.clientY - this.mouseStartEvent.clientY\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.draw);\r\n        window.removeEventListener('mousemove', this.mouseMove);\r\n        window.removeEventListener('mousedown', this.mouseUp);\r\n        window.removeEventListener('mouseup', this.mouseDown);\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n        if (domObj) {\r\n            domObj.innerHTML = '';\r\n        }\r\n    }\r\n    calculateNodeTextSize(text, pad) {\r\n        var div = document.querySelector('#secret-div-space');\r\n        if (!div) {\r\n            div = document.createElement('div');\r\n            div.id = 'secret-div-space';\r\n            div.setAttribute('id', 'secret-div-space');\r\n            div.style.visibility = 'hidden';\r\n            div.style.position = 'absolute';\r\n            div.classList.add('label');\r\n            div.style.whiteSpace = 'normal';\r\n            div.style.maxWidth = (text || '').split(' ').length > 1 ? `200px` : '300px';\r\n            div.style.top = '-10000px';\r\n            div.style.padding = (pad * 2) + 'px';\r\n            document.querySelector(`#${this.state.id}`).appendChild(div);\r\n        }\r\n        div.innerHTML = text;\r\n        return div.getBoundingClientRect();\r\n    }\r\n    draw() {\r\n        var me = this;\r\n        var domObj = document.querySelector(`#${this.state.id}`);\r\n\r\n        domObj.innerHTML = '';\r\n        var bb = domObj.getBoundingClientRect();\r\n        var force = Cola.d3adaptor(d3);\r\n        var width = bb.width - 10;// 960;\r\n        var height = bb.height - 10;// 800;\r\n        var color = d3.scaleOrdinal(d3.schemeCategory10)\r\n\r\n        var margin = 6, pad = 12;;\r\n        force\r\n            .linkDistance(this.props.linkDistance || 280)\r\n            .avoidOverlaps(true)\r\n            .handleDisconnected(false)\r\n            .size([width, height]);\r\n\r\n        var svg = makeSVG();\r\n        function makeSVG() {\r\n            var outer = d3.select(`#${me.state.id}`).append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"pointer-events\", \"all\");\r\n            // define arrow markers for graph links\r\n            outer.append('svg:defs').append('svg:marker')\r\n                .attr('id', 'end-arrow')\r\n                .attr('viewBox', '0 -5 10 10')\r\n                .attr('refX', 5)\r\n                .attr('markerWidth', 3)\r\n                .attr('markerHeight', 3)\r\n                .attr('orient', 'auto')\r\n                .append('svg:path')\r\n                .attr('d', 'M0,-5L10,0L0,5L2,0')\r\n                .attr('stroke-width', '0px')\r\n                .attr('fill', function (d) {\r\n                    if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                        return LinkStyles[d.properties.type].stroke;\r\n                    }\r\n                    return '#555';\r\n                });\r\n\r\n\r\n            var vis = outer.append('g');\r\n            outer.on(\"wheel\", function (d) {\r\n                me.mapScale += d3.event.wheelDelta / (me.props.zoomFactor || 5000);\r\n                redraw();\r\n            });\r\n            function redraw() {\r\n                var { x = 0, y = 0 } = (me.mouseMoved || {});\r\n                vis.attr('transform', `scale(${me.mapScale || 1}) translate(${me.mapTranslate.x + x}, ${me.mapTranslate.y + y})`);\r\n            }\r\n            outer.on('mousemove', function (x, v) {\r\n                if (me.panning) {\r\n                    redraw();\r\n                }\r\n            });\r\n\r\n            outer.on(\"mousedown\", function (d) {\r\n                me.panning = true;\r\n            });\r\n            outer.on(\"mouseup\", function (d) {\r\n                me.panning = false;\r\n\r\n                if (me.mouseMoved && me.mapTranslate) {\r\n                    me.mapTranslate = {\r\n                        x: me.mapTranslate.x + me.mouseMoved.x,\r\n                        y: me.mapTranslate.y + me.mouseMoved.y\r\n                    }\r\n                }\r\n            });\r\n\r\n            redraw();\r\n            return vis;\r\n        }\r\n        // function gridify(svg, pgLayout, margin, groupMargin) {\r\n        //     var routes = cola.gridify(pgLayout, 5, margin, groupMargin);\r\n        //     svg.selectAll('path').remove();\r\n        //     routes.forEach(route => {\r\n        //         var cornerradius = 5;\r\n        //         var arrowwidth = 3;\r\n        //         var arrowheight = 7;\r\n        //         var p = cola.GridRouter.getRoutePath(route, cornerradius, arrowwidth, arrowheight);\r\n        //         if (arrowheight > 0) {\r\n        //             svg.append('path')\r\n        //                 .attr('class', 'linkarrowoutline')\r\n        //                 .attr('d', p.arrowpath);\r\n        //             svg.append('path')\r\n        //                 .attr('class', 'linkarrow')\r\n        //                 .attr('d', p.arrowpath);\r\n        //         }\r\n        //         svg.append('path')\r\n        //             .attr('class', 'linkoutline')\r\n        //             .attr('d', p.routepath)\r\n        //             .attr('fill', 'none');\r\n        //         svg.append('path')\r\n        //             .attr('class', 'link')\r\n        //             .attr('d', p.routepath)\r\n        //             .attr('fill', 'none');\r\n        //     });\r\n\r\n        //     svg.selectAll(\".label\").transition().attr(\"x\", d => d.routerNode.bounds.cx())\r\n        //         .attr(\"y\", function (d) {\r\n        //             var h = this.getBBox().height;\r\n        //             return d.bounds.cy() + h / 3.5;\r\n        //         });\r\n\r\n        //     svg.selectAll(\".node\").transition().attr(\"x\", d => d.routerNode.bounds.x)\r\n        //         .attr(\"y\", d => d.routerNode.bounds.y)\r\n        //         .attr(\"width\", d => d.routerNode.bounds.width())\r\n        //         .attr(\"height\", d => d.routerNode.bounds.height());\r\n\r\n        //     let groupPadding = margin - groupMargin;\r\n        //     svg.selectAll(\".group\").transition().attr('x', d => d.routerNode.bounds.x - groupPadding)\r\n        //         .attr('y', d => d.routerNode.bounds.y + 2 * groupPadding)\r\n        //         .attr('width', d => d.routerNode.bounds.width() - groupPadding)\r\n        //         .attr('height', d => d.routerNode.bounds.height() - groupPadding);\r\n        // }\r\n        var graph = this.state.graph;\r\n\r\n        graph.nodes.forEach(function (v) {\r\n            var bb = me.calculateNodeTextSize(getLabelText(v), pad);\r\n            v.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n            v.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height);\r\n        })\r\n        graph.groups.forEach(function (g) { g.padding = pad })\r\n\r\n        force.nodes(graph.nodes)\r\n            .groups(graph.groups)\r\n            .links(graph.links)\r\n            .on(\"tick\", tick)\r\n\r\n        var group = svg.selectAll(\".group\")\r\n            .data(graph.groups)\r\n            .enter().append(\"rect\")\r\n            .attr(\"rx\", 8).attr(\"ry\", 8)\r\n            .attr(\"class\", \"group\")\r\n            .style(\"fill\", function (d, i) { return color(i) })\r\n            .call(force.drag)\r\n\r\n        var node = svg.selectAll(\".node\");\r\n        this.$node = node;\r\n        this.buildNode(graph, force, color);\r\n        var link = svg.selectAll(\".link\")\r\n            .data(graph.links)\r\n            .enter().append(\"line\")\r\n            .attr(\"class\", \"link\")\r\n            .style('stroke', function (d) {\r\n                if (d.selected) {\r\n                    return '#ff0000';\r\n                }\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return LinkStyles[LinkType.ErrorLink].stroke;\r\n                }\r\n                else if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].stroke) {\r\n                    return LinkStyles[d.properties.type].stroke;\r\n                }\r\n                return '#555';\r\n            })\r\n            .style(\"stroke-dasharray\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return '5,5';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"d\", function (d) {\r\n                if (d && d.properties && d.properties.type === LinkType.FunctionConstraintLink && !d.properties[LinkPropertyKeys.VALID_CONSTRAINTS]) {\r\n                    return 'M5 20 l215 0';\r\n                }\r\n                return '';\r\n            })\r\n            .style(\"stroke-width\", function (d) {\r\n                if (d && d.properties && d.properties.type && LinkStyles[d.properties.type] && LinkStyles[d.properties.type].strokeWidth) {\r\n                    return LinkStyles[d.properties.type].strokeWidth;\r\n                }\r\n                return Math.sqrt(d.value);\r\n            });\r\n        link.on('click', (d, index, els) => {\r\n            if (me.props.onLinkClick && d) {\r\n                me.props.onLinkClick({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        });\r\n        link.on('mouseover', (d, index, els) => {\r\n            if (me.props.onLinkHover && d) {\r\n                me.props.onLinkHover({\r\n                    id: d.id,\r\n                    source: d.source.id,\r\n                    target: d.target.id\r\n                }, els[index].getBoundingClientRect());\r\n            }\r\n        })\r\n        var label = svg.selectAll(\".label\")\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append(\"foreignObject\")\r\n            .attr(\"class\", \"label\");\r\n        label.on('click', (d, index, els) => {\r\n            if (me.props.onNodeClick && d && d.id) {\r\n                me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n            }\r\n        })\r\n\r\n        var features = svg.selectAll('.features')\r\n            .data(graph.nodes)\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', 'features')\r\n\r\n        features.append(\"rect\")\r\n            .attr(\"width\", function (d) { return d.selected ? 5 : 0; })\r\n            .attr(\"height\", function (d) { return d.height - 10; })\r\n            .attr('x', 3)\r\n            .attr('y', 5)\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d.selected && me.props.selectedColor) {\r\n                    return me.props.selectedColor;\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n\r\n        var titles = label.append('xhtml:div')\r\n            .style('width', x => {\r\n                return `${x.width - pad / 2}px`\r\n            })\r\n            .style('white-space', 'normal')\r\n            .style('text-align', 'start')\r\n            //.style('word-break', 'break-all')\r\n            .style('height', x => {\r\n                return `${x.height - pad / 2}px`\r\n            })\r\n            .text(function (d) { return `${getLabelText(d)}` })\r\n            .call(force.drag);\r\n\r\n        this.$force = force;\r\n        this.setState({\r\n            $node: node,\r\n            $color: color\r\n        })\r\n\r\n        function getLabelText(d) {\r\n            return d && d.properties ? d.properties.text || d.name : d.name;\r\n        }\r\n\r\n        function rotate(source, degree = Math.PI / 2) {\r\n            var { innerBounds, x, y } = source;\r\n            var rise = innerBounds.y - innerBounds.Y;\r\n            var run = innerBounds.x - innerBounds.X;\r\n\r\n            return Object.assign(innerBounds, {\r\n                x: 1 + innerBounds.x,\r\n                y: rise ? ((run / rise) * 1) + innerBounds.y : innerBounds.y,\r\n                X: 1 + innerBounds.X,\r\n                Y: rise ? ((run / rise) * 1) + innerBounds.Y : innerBounds.Y\r\n            });\r\n        }\r\n\r\n        function tick() {\r\n            if (me.$_nodes) {\r\n                me.$_nodes.each(function (d) {\r\n                    var bb = me.calculateNodeTextSize(getLabelText(d), pad);\r\n                    d.width = Math.max(MIN_DIMENSIONAL_SIZE, bb.width);\r\n                    d.height = Math.max(MIN_DIMENSIONAL_SIZE, bb.height)\r\n                    d.innerBounds = d.bounds.inflate(- margin);\r\n                });\r\n            }\r\n\r\n            // link.attr(\"x1\", function (d) { return d.source.x; })\r\n            //     .attr(\"y1\", function (d) { return d.source.y; })\r\n            //     .attr(\"x2\", function (d) { return d.target.x; })\r\n            //     .attr(\"y2\", function (d) { return d.target.y; });\r\n\r\n\r\n            if (me.$_nodes) {\r\n                me.$_nodes\r\n                    .attr(\"width\", function (d) { return d.width; })\r\n                    .attr(\"height\", function (d) { return d.height; })\r\n                    .attr(\"x\", function (d) { return d.x - d.width / 2 })\r\n                    .attr(\"y\", function (d) { return d.y - d.height / 2 })\r\n            }\r\n\r\n            group.attr(\"x\", function (d) { return d.bounds.x })\r\n                .attr(\"y\", function (d) { return d.bounds.y })\r\n                .attr(\"width\", function (d) { return d.bounds.width() })\r\n                .attr(\"height\", function (d) { return d.bounds.height() })\r\n\r\n            link.each(function (d) {\r\n                d.route = Cola.makeEdgeBetween(rotate(d.source), rotate(d.target, -Math.PI / 2), 5);\r\n            });\r\n\r\n            link.attr(\"x1\", function (d) { return d.route.sourceIntersection.x; })\r\n                .attr(\"y1\", function (d) { return d.route.sourceIntersection.y; })\r\n                .attr(\"x2\", function (d) { return d.route.arrowStart.x; })\r\n                .attr(\"y2\", function (d) { return d.route.arrowStart.y; });\r\n\r\n            features.attr(\"transform\", function (d) {\r\n                var y = d.y - d.height / 2;\r\n                var x = d.x - d.width / 2;\r\n                return `translate(${x},${y})`;\r\n            })\r\n\r\n\r\n            label\r\n                .attr(\"x\", function (d) {\r\n                    return d.x - d.width / 2\r\n                }).attr(\"y\", function (d) {\r\n                    var innerbit = this.querySelector('div');\r\n                    var h = innerbit ? innerbit.getBoundingClientRect().height : 0;\r\n\r\n                    return d.y + h / 2 - d.height + pad / 2;\r\n                })\r\n            titles.text(function (d) {\r\n                return getLabelText(d);\r\n            })\r\n        }\r\n        force.start();\r\n    }\r\n    buildNode(graph, cola, color) {\r\n        var me = this;\r\n        var node = this.$node.data(cola.nodes(), x => x.id || x.name);\r\n        var temp = node.enter().append(\"rect\")\r\n            .attr(\"class\", \"node\")\r\n            .attr(\"width\", function (d) { return d.width; })\r\n            .attr(\"height\", function (d) { return d.height; })\r\n            .attr(\"rx\", 5).attr(\"ry\", 5)\r\n            .style(\"fill\", function (d) {\r\n                if (d && d.properties && d.properties.nodeType && NodeTypeColors[d.properties.nodeType]) {\r\n                    return NodeTypeColors[d.properties.nodeType]\r\n                }\r\n                return color(graph.groups.length)\r\n            })\r\n            .on('click', (d, index, els) => {\r\n                if (me.props.onNodeClick && d) {\r\n                    me.props.onNodeClick(d.id, els[index].getBoundingClientRect());\r\n                }\r\n            })\r\n            .call(cola.drag);\r\n\r\n        node.exit().remove();\r\n        this.$_nodes = temp;\r\n    }\r\n    applyNodeVisualData(nn) {\r\n        nn.width = 40;\r\n        nn.height = 40;\r\n        nn.name = nn.id;\r\n        return nn;\r\n    }\r\n    componentWillReceiveProps(props, state) {\r\n        if (props.graph) {\r\n            var { graph } = props;\r\n            var draw = true;\r\n            // d3.event.stopPropagation();\r\n            this.$force.stop();\r\n            if (graph.nodes && this.state && this.state.graph && this.state.graph.nodes) {\r\n                var removedNodes = this.state.graph.nodes.relativeCompliment(graph.nodes, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.nodes.indexOf(t);\r\n                });\r\n                this.state.graph.nodes.removeIndices(removedNodes);\r\n                var newNodes = graph.nodes.relativeCompliment(this.state.graph.nodes, (x, y) => x === y.id);\r\n                newNodes.map(nn => {\r\n                    this.state.graph.nodes.push(\r\n                        this.applyNodeVisualData(GraphMethods.duplicateNode(graph.nodeLib[nn]))\r\n                    );\r\n                });\r\n\r\n                if (props.selectedNodes) {\r\n                    this.state.graph.nodes.map(nn => {\r\n                        nn.selected = !!props.selectedNodes.find(t => t == nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.nodes.map(nn => {\r\n                    var nl = graph.nodeLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                })\r\n\r\n                draw = true;\r\n            }\r\n            if (graph.links && this.state && this.state.graph && this.state.graph.links) {\r\n                let removedLinks = this.state.graph.links.relativeCompliment(graph.links, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.links.indexOf(t);\r\n                });\r\n                this.state.graph.links.removeIndices(removedLinks);\r\n                let newLinks = graph.links.relativeCompliment(this.state.graph.links, (x, y) => x === y.id);\r\n                newLinks.map(nn => {\r\n                    this.state.graph.links.push(\r\n                        (duplicateLink(graph.linkLib[nn], this.state.graph.nodes))\r\n                    );\r\n                });\r\n                if (props.selectedLinks) {\r\n                    this.state.graph.links.map(nn => {\r\n                        nn.selected = !!props.selectedLinks.find(t => t.id === nn.id);\r\n                    })\r\n                }\r\n                this.state.graph.links.map(nn => {\r\n                    let nl = graph.linkLib[nn.id];\r\n                    if (nl && nl.properties) {\r\n                        nn.properties = { ...nl.properties };\r\n                    }\r\n                });\r\n                draw = true;\r\n            }\r\n\r\n            if (graph.groups && this.state && this.state.graph && this.state.graph.groups) {\r\n                let graph_groups = graph.groups.filter(x => graph.groupLib[x].leaves || graph.groupLib[x].groups);\r\n                let removedGroups = this.state.graph.groups.relativeCompliment(graph_groups, (x, y) => x.id === y).map(t => {\r\n                    return this.state.graph.groups.indexOf(t);\r\n                });\r\n                this.state.graph.groups.removeIndices(removedGroups);\r\n                let newGroups = graph_groups\r\n                    .relativeCompliment(this.state.graph.groups, (x, y) => x === y.id)\r\n                    .filter(x => graph.groupLib[x] && (graph.groupLib[x].leaves || graph.groupLib[x].groups));\r\n                newGroups.map(nn => {\r\n                    this.state.graph.groups.push(\r\n                        (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                    )\r\n                })\r\n                graph_groups.forEach(group => {\r\n                    let g = this.state.graph.groups.find(x => x.id === group);\r\n                    applyGroup(g, graph.groupLib[group], this.state.graph.groups, this.state.graph.nodes);\r\n                    // (duplicateGroup(graph.groupLib[nn], this.state.graph.nodes))\r\n                })\r\n\r\n                // this.state.graph.groups.map(group => {\r\n                //     var _group = graph.groupLib[group.id];\r\n                // })\r\n            }\r\n\r\n\r\n            if (draw) {\r\n                this.draw();\r\n            }\r\n        }\r\n    }\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div id={this.state.id} className=\"mindmap\" style={{ minHeight: 946 }}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction duplicateLink(nn, nodes) {\r\n    return {\r\n        ...nn,\r\n        source: nodes.findIndex(x => x.id === nn.source),\r\n        target: nodes.findIndex(x => x.id === nn.target)\r\n    };\r\n}\r\nfunction applyGroup(mindmapgroup, _group, groups, nodes) {\r\n    if (_group) {\r\n        if (_group.leaves && _group.leaves.length) {\r\n            mindmapgroup.leaves = (mindmapgroup.leaves || []);\r\n            mindmapgroup.leaves.length = 0\r\n            mindmapgroup.leaves.push(..._group.leaves.map(l => nodes.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.leaves\r\n        }\r\n\r\n        if (_group.groups && _group.groups.length) {\r\n            mindmapgroup.groups = (mindmapgroup.groups || []);\r\n            mindmapgroup.groups.length = 0;\r\n            mindmapgroup.groups.push(..._group.groups.map(l => groups.findIndex(x => x.id === l)));\r\n        }\r\n        else {\r\n            delete mindmapgroup.groups\r\n        }\r\n\r\n        // if (nn.leaves) {\r\n        //     let leaves = nn.leaves.map(l => nodes.findIndex(x => x.id === l));\r\n        //     temp.leaves = leaves;\r\n        // }\r\n        // if (groups && nn.groups) {\r\n        //     let groups = nn.groups.map(l => groups.findIndex(x => x.id === l));\r\n        //     temp.groups = groups;\r\n        // }\r\n    }\r\n}\r\nfunction duplicateGroup(nn, nodes, groups) {\r\n    let temp = {\r\n        ...nn,\r\n    };\r\n    delete temp.leaves;\r\n    delete temp.groups;\r\n    return temp;\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass ModelActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var is_parent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsParent);\r\n        var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n        var permission_nodes = UIA.NodesByType(state, UIA.NodeTypes.Permission).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.IsAgent}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsAgent] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {is_agent ? (<SelectInput\r\n                        label={Titles.UserModel}\r\n                        options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                            return {\r\n                                value: node.id,\r\n                                title: UIA.GetNodeTitle(node)\r\n                            }\r\n                        })}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIUser],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.UserLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIUser,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.UserLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIUser] : ''} />) : null}\r\n                    <CheckBox\r\n                        label={Titles.IsUser}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsUser] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsUser,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.IsOwnedByAgents}\r\n                        title={Titles.IsOwnedByAgentsDescriptions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsOwnedByAgents] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsOwnedByAgents,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.ManyToManyNexus}\r\n                        title={Titles.ManyToManyNexusDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.IsCompositeInput}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsCompositeInput)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsCompositeInput,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {many_to_many_enabled ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.ManyToManyNexusModel}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    linkType: UIA.LinkProperties.ManyToManyLink.type\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                </FormControl>) : null}\r\n\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.ADD_DEFAULT_PROPERTIES, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.PropertyLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.SetDefaultProperties} description={Titles.SetDefaultPropertiesDescription} />\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PROPERTY_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.PropertyLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddProperty} description={Titles.AddPropertyDescription} />\r\n                </ControlSideBarMenu>\r\n                {is_agent ? (<SelectInput\r\n                    label={Titles.PermissionType}\r\n                    options={permission_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.PermissionLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.IsParent}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsParent] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsParent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {is_parent ? (<SelectInput\r\n                    label={Titles.ParentTo}\r\n                    options={UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                        return {\r\n                            value: node.id,\r\n                            title: UIA.GetNodeTitle(node)\r\n                        }\r\n                    })}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                            source: id,\r\n                            linkType: UIA.LinkProperties.ParentLink.type\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIChoiceNode,\r\n                            id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.ParentLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {is_agent ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PERMISSION_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.PermissionLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddPermission} description={Titles.AddPermissionDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { HTTP_METHODS, MethodFunctions } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass FunctionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Function);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var agent_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).filter(x => UIA.GetNodeProp(x, UIA.NodeProperties.IsAgent)).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var function_types = Object.keys(MethodFunctions).map(funcKey => {\r\n            return {\r\n                title: MethodFunctions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.AgentOperator}\r\n                    options={agent_nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIPermissions] : ''} />) : null}\r\n\r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.CustomFunction}\r\n                    title={Titles.CustomFunctionDescription}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseScopeGraph] : ''}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseScopeGraph,\r\n                            id: currentNode.id,\r\n                            value: value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.APPLY_FUNCTION_CONSTRAINTS, {\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_PARAMETER_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddParameter} description={Titles.AddParameterDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_FUNCTION_OUTPUT_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddFunctionOutput} description={Titles.AddFunctionOutputDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(FunctionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties, NodeProperties } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\nclass PropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Property);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var show_dependent = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseUIDependsOn];;\r\n            var use_model_as_type = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseModelAsType);\r\n            var many_to_many_enabled = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus);\r\n            var property_nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).filter(x => {\r\n                return x.id !== currentNode.id;\r\n            }).map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseDependentProperty}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIDependsOn] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIDependsOn,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_dependent ? (<SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        options={property_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIDependsOn,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIDependsOn] : ''} />) : null}\r\n                </FormControl>) : null}\r\n\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                </FormControl>) : null}\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.ManyToManyNexus}\r\n                        title={Titles.ManyToManyNexusDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexus)}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexus,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.ManyToManyNexusType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }].filter(x => x));\r\n                        }} />\r\n                    {many_to_many_enabled ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).filter(x => UIA.GetNodeProp(x, NodeProperties.ManyToManyNexus)).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.ManyToManyNexus}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.ManyToManyNexusType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.ManyToManyNexusType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ManyToManyLink }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ManyToManyNexusType)} />) : null}\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseModelAsType}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseModelAsType] : ''}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([value ? null : {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UseModelAsType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, !value || !currentNode.properties[UIA.NodeProperties.UIModelType] ? null : {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {!use_model_as_type ? (<SelectInput\r\n                        options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />) : null}\r\n                    {use_model_as_type ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyModelType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES, options: {\r\n                                    target: currentNode.properties[UIA.NodeProperties.UIModelType],\r\n                                    source: id\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.UIModelType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES, options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                                }\r\n                            }]);\r\n\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIModelType] : ''} />) : null}\r\n                    {use_model_as_type ? (<CheckBox\r\n                        label={Titles.IsReferenceList}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.IsReferenceList] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.IsReferenceList,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />) : null}\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_ATTRIBUTE_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.AttributeLink }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddAttribute} description={Titles.AddAttributeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { AFTER_EFFECTS } from '../constants/functiontypes';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport { SetAffterEffectProperty, GetMethodNode, GetNode, TARGET, GetLinkChain, SOURCE } from '../methods/graph_methods';\r\nimport { LinkType, Methods } from '../constants/nodetypes';\r\n\r\nclass AfterEffectsActivityMenu extends Component {\r\n\tgetControls() {\r\n\t\tvar { state } = this.props;\r\n\t\tvar currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\t\tlet result = [];\r\n\t\tlet afterMethod = UIA.GetNodeProp(currentNode, UIA.NodeProperties.AfterMethod);\r\n\t\tresult.push(<SelectInput\r\n\t\t\tlabel={Titles.Type}\r\n\t\t\toptions={Object.keys(AFTER_EFFECTS).map(val => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: val,\r\n\t\t\t\t\ttitle: val\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t\tonChange={(value) => {\r\n\t\t\t\tvar id = currentNode.id;\r\n\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\tprop: UIA.NodeProperties.AfterMethod,\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tvalue\r\n\t\t\t\t});\r\n\t\t\t}}\r\n\t\t\tvalue={UIA.GetNodeProp(currentNode, UIA.NodeProperties.AfterMethod)} />)\r\n\t\tlet methodNode = GetMethodNode(state, currentNode.id);\r\n\t\tlet methodProps = UIA.GetMethodProps(methodNode);\r\n\r\n\t\tif (afterMethod && AFTER_EFFECTS[afterMethod]) {\r\n\t\t\tlet { templateKeys } = AFTER_EFFECTS[afterMethod];\r\n\t\t\tif (templateKeys) {\r\n\t\t\t\tObject.values(templateKeys).map(value => {\r\n\t\t\t\t\tlet { key, nodeTypes, parent, useNodes, useMethodTypes, useString } = value;\r\n\t\t\t\t\tlet setup = UIA.GetNodeProp(currentNode, UIA.NodeProperties.AfterMethodSetup);\r\n\t\t\t\t\tif (!parent && !useNodes && !useMethodTypes && !useString) {\r\n\t\t\t\t\t\tresult.push(<SelectInput\r\n\t\t\t\t\t\t\tlabel={key}\r\n\t\t\t\t\t\t\toptions={UIA.GetMethodNodeSelectOptions(methodProps)}\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tvar afterEffectSetup = SetAffterEffectProperty(currentNode, afterMethod, key, value);\r\n\r\n\t\t\t\t\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\t\t\t\t\tprop: UIA.NodeProperties.AfterMethodSetup,\r\n\t\t\t\t\t\t\t\t\tid: currentNode.id,\r\n\t\t\t\t\t\t\t\t\tvalue: afterEffectSetup\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={setup && setup[afterMethod] && setup[afterMethod][key] ? setup[afterMethod][key] : null} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (setup && setup[afterMethod] && setup[afterMethod][parent]) {\r\n\t\t\t\t\t\tif (methodProps[setup[afterMethod][parent]]) {\r\n\t\t\t\t\t\t\tlet parentNode = UIA.GetGraphNode(methodProps[setup[afterMethod][parent]]);\r\n\t\t\t\t\t\t\tif (parentNode) {\r\n\t\t\t\t\t\t\t\tlet propertyNodes = GetLinkChain(state, {\r\n\t\t\t\t\t\t\t\t\tid: parentNode.id,\r\n\t\t\t\t\t\t\t\t\tlinks: [{\r\n\t\t\t\t\t\t\t\t\t\ttype: LinkType.PropertyLink,\r\n\t\t\t\t\t\t\t\t\t\tdirection: SOURCE\r\n\t\t\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tresult.push(<SelectInput\r\n\t\t\t\t\t\t\t\t\tlabel={key}\r\n\t\t\t\t\t\t\t\t\toptions={propertyNodes.toNodeSelect()}\r\n\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\tvar afterEffectSetup = SetAffterEffectProperty(currentNode, afterMethod, key, value);\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\t\t\t\t\t\t\tprop: UIA.NodeProperties.AfterMethodSetup,\r\n\t\t\t\t\t\t\t\t\t\t\tid: currentNode.id,\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: afterEffectSetup\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvalue={setup && setup[afterMethod] && setup[afterMethod][key] ? setup[afterMethod][key] : null} />)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet ae_nodes = UIA.NodesByType(state, nodeTypes);\r\n\t\t\t\t\t\tlet options = [];\r\n\t\t\t\t\t\tif (useNodes) {\r\n\t\t\t\t\t\t\toptions = ae_nodes.toNodeSelect();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (useMethodTypes) {\r\n\t\t\t\t\t\t\toptions = Object.keys(Methods).map(t => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttitle: t,\r\n\t\t\t\t\t\t\t\t\tvalue: Methods[t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (useString) {\r\n\t\t\t\t\t\t\toptions = Object.values(useString).map(t => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttitle: t,\r\n\t\t\t\t\t\t\t\t\tvalue: t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult.push(<SelectInput\r\n\t\t\t\t\t\t\tlabel={key}\r\n\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tvar afterEffectSetup = SetAffterEffectProperty(currentNode, afterMethod, key, value);\r\n\r\n\t\t\t\t\t\t\t\tthis.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n\t\t\t\t\t\t\t\t\tprop: UIA.NodeProperties.AfterMethodSetup,\r\n\t\t\t\t\t\t\t\t\tid: currentNode.id,\r\n\t\t\t\t\t\t\t\t\tvalue: afterEffectSetup\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={setup && setup[afterMethod] && setup[afterMethod][key] ? setup[afterMethod][key] : null} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\trender() {\r\n\t\tvar { state } = this.props;\r\n\t\tvar active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.AfterEffect);\r\n\t\tvar currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\t\tlet controls = active ? this.getControls() : [];\r\n\t\treturn (\r\n\t\t\t<TabPane active={active}>\r\n\t\t\t\t{currentNode ? (<FormControl>\r\n\t\t\t\t\t{controls}\r\n\t\t\t\t</FormControl>) : null}\r\n\t\t\t</TabPane>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UIConnect(AfterEffectsActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass AttributeFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Attribute);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var choice_nodes = UIA.NodesByType(state, UIA.NodeTypes.ChoiceList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var validation_nodes = UIA.NodesByType(state, UIA.NodeTypes.ValidationList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var show_choice = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UIAttributeType] == UIA.NodeAttributePropertyTypes.CHOICE;\r\n        var show_validations = UIA.Use(currentNode, UIA.NodeProperties.UseUIValidations);\r\n        var show_options = UIA.Use(currentNode, UIA.NodeProperties.UseUIOptions);\r\n        var show_extenions = UIA.Use(currentNode, UIA.NodeProperties.UseUIExtensionList);\r\n        var option_nodes = UIA.NodesByType(state, UIA.NodeTypes.OptionList).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        \r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.UIName}\r\n                        title={Titles.UINameDescription}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.NodeAttributePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.NodeAttributePropertyTypes[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.PropertyValueType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIAttributeType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIAttributeType] : ''} />\r\n                    {show_choice ? (<SelectInput\r\n                        label={Titles.ChoiceTypes}\r\n                        options={choice_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceType] : ''} />) : null}\r\n                    {show_choice ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CHOICE_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddChoice}\r\n                                description={Titles.AddChoiceDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UISingular}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UISingular] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UISingular,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <CheckBox\r\n                        label={Titles.UseUIValidations}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIValidations] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIValidations,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_validations ? (<SelectInput\r\n                        label={Titles.ValidationTypes}\r\n                        options={validation_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIValidationType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValdationLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />) : null}\r\n                    {show_validations ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_VALIDATION_TYPE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddValidationList}\r\n                                description={Titles.AddValidationListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                    <CheckBox\r\n                        label={Titles.UseUIOptions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIOptions] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIOptions,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_options ? (<SelectInput\r\n                        label={Titles.OptionsType}\r\n                        options={option_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />) : null}\r\n                    {show_options ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_OPTION_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.UseUIExtensions}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseUIExtensionList] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseUIExtensionList,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n\r\n                    {show_extenions ? (<SelectInput\r\n                        label={Titles.ExtensionTypes}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtensionList],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionList,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            })\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtensionList] : ''} />) : null}\r\n                    {show_extenions ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_EXTENSION_LIST_NODE, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddExtensionList}\r\n                                description={Titles.AddExtensionListDescription} />\r\n                        </ControlSideBarMenu>\r\n                    ) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(AttributeFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass NodeList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n\r\n        let nodeProperty = this.props.nodeProperty;\r\n        let currentNode = this.props.node;\r\n        if (!currentNode) {\r\n            return <div></div>\r\n        }\r\n        let linkType = this.props.linkType;\r\n        let items = this.props.items;\r\n        //  (UIA.GetNodeProp(currentNode, nodeProperty) || []).map(t => {\r\n        //     let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n        //     if (node) {\r\n        //         return {\r\n        //             title: UIA.GetNodeTitle(node),\r\n        //             id: node.id\r\n        //         }\r\n        //     }\r\n        // });\r\n        let { state } = this.props;\r\n\r\n        return <ButtonList active={true} isSelected={(item) => {\r\n            var types = UIA.GetNodeProp(currentNode, nodeProperty) || [];\r\n            if (types && types.some)\r\n                return item && types.some(x => x === item.id);\r\n        }}\r\n            items={items}\r\n            onClick={(item) => {\r\n                if (this.props.removeLink) {\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target: item.value,\r\n                        source: currentNode.id\r\n                    })\r\n                }\r\n                if (this.props.removeNode) {\r\n                    this.props.graphOperation(UIA.REMOVE_NODE, {\r\n                        id: item.value\r\n                    })\r\n                }\r\n            }} />\r\n    }\r\n}\r\nexport default UIConnect(NodeList)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport NodeList from './nodelist';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\n\r\nclass PermissionMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Condition);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var permissionParametesr = UIA.GetMethodPermissionParameters(currentNode.id);\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.ModelActions} />\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ChoiceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {/* <ControlSideBarMenuHeader title={Titles.ChoiceListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_CHOICE_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE)\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddChoiceItem}\r\n                        description={Titles.AddChoiceItemDescription} />\r\n                </ControlSideBarMenu> */}\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItemContainer extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                {this.props.title}\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model)\r\n            .map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        let agents = UIA.NodesByType(state, NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n\r\n        var input = currentNode ? (<SelectInput\r\n            label={Titles.Models}\r\n            options={nodes}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterModel),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterModel,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.ModelTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterModel)} />) : null;\r\n        var agentinput = currentNode ? (<SelectInput\r\n            label={Titles.Agents}\r\n            options={agents}\r\n            onChange={(value) => {\r\n                var id = currentNode.id;\r\n\r\n                this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                    target: UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent),\r\n                    source: id\r\n                });\r\n\r\n                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                    prop: NodeProperties.FilterAgent,\r\n                    id: currentNode.id,\r\n                    value: value\r\n                });\r\n\r\n                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                    target: value,\r\n                    source: id,\r\n                    properties: { ...UIA.LinkProperties.AgentTypeLink }\r\n                });\r\n            }}\r\n            value={UIA.GetNodeProp(currentNode, NodeProperties.FilterAgent)} />) : null;\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {input}\r\n                    {agentinput}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass ValidationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.ValidationListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_VALIDATION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidationLinkItem\r\n                                }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddValidationItem}\r\n                        description={Titles.AddValidationItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass ValidationItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ValidationListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(UIA.ValidationRules).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                            return {\r\n                                value: UIA.ValidationRules[x],\r\n                                title: x\r\n                            }\r\n                        })}\r\n                        label={Titles.ValidationType}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIValidationType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIValidationType] : ''} />\r\n\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidationItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nclass ValidatorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.MethodF, UIA.NodeTypes.Function]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ValidatorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValidatorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ValidatorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorFunction] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nclass OptionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionList);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ControlSideBarMenuHeader title={Titles.OptionListActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_OPTION_ITEM_NODE, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...UIA.LinkProperties.OptionItemLink }\r\n                            }\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddOptionItem}\r\n                        description={Titles.AddOptionItemDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ExecutorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor);\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let executor = UIA.GetNodeProp(currentNode, NodeProperties.Executor) || createExecutor();\r\n                            executor = addValidatator(executor, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Executor,\r\n                                value: executor\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ExecutorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveExecutorPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { LinkType, NodeProperties, NodeTypes } from '../constants/nodetypes';\r\nimport SelectInput from './selectinput';\r\nimport { TARGET, GetLinkChain, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { ConditionTypes, ConditionFunctionSetups, ConditionTypeOptions, ConditionTypeParameters } from '../constants/functiontypes';\r\nimport CheckBox from './checkbox';\r\nimport TextInput from './textinput';\r\nclass ConditionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Condition);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var conditionType = UIA.GetNodeProp(currentNode, UIA.NodeProperties.ConditionType);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var methods = currentNode ? GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }, {\r\n                type: LinkType.FunctionOperator,\r\n                direction: TARGET\r\n            }]\r\n        }) : [];\r\n        let ref2_properties = [];\r\n        let ref1_properties = [];\r\n        let matchRef = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n        var model_options = [];\r\n        var functions = methods.map(x => UIA.GetNodeProp(x, NodeProperties.FunctionType)).filter(x => x);\r\n        if (ConditionFunctionSetups[conditionType] && ConditionFunctionSetups[conditionType].functions && functions && functions.length === 1) {\r\n            let { constraints } = ConditionFunctionSetups[conditionType].functions[functions[0]];\r\n            if (constraints) {\r\n                let methodProps = UIA.GetNodeProp(methods[0], NodeProperties.MethodProps);\r\n                model_options = Object.keys(constraints).filter(t => constraints[t].nodeTypes.indexOf(NodeTypes.Model) !== -1)\r\n                    .map(x => {\r\n                        if (methodProps && methodProps[x]) {\r\n                            return {\r\n                                title: `${UIA.GetNodeProp(GetNode(graph, methodProps[x]), NodeProperties.UIText) || x}(${x})`,\r\n                                value: x\r\n                            }\r\n                        }\r\n                        return {\r\n                            title: x,\r\n                            value: x\r\n                        }\r\n                    });\r\n\r\n                if (methodProps) {\r\n\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    if (temp.ref2) {\r\n                        ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n                    }\r\n                    if (temp.ref1) {\r\n                        ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                <TextInput\r\n                    label={Titles.NodeLabel}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                    }} />\r\n                <SelectInput\r\n                    label={Titles.ConditionType}\r\n                    options={Object.keys(ConditionTypes).map(t => ({ title: t, value: ConditionTypes[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ConditionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={conditionType} />\r\n                {this.getMatchManyReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getEnumeration({\r\n                    conditionType,\r\n                    graph,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods\r\n                })}\r\n                {this.getMatchReferenceProperty({\r\n                    conditionType,\r\n                    model_options,\r\n                    currentNode,\r\n                    methods,\r\n                    graph\r\n                })}\r\n            </TabPane>\r\n        );\r\n    }\r\n\r\n    getProperties(methodProps, temp, state, key = 'ref2') {\r\n        let refId = methodProps[temp[key]];\r\n        let properties = [];\r\n        let nodeProperties = UIA.GetModelPropertyNodes(refId);\r\n        let currentNode = UIA.GetNodeById(refId);\r\n        if (nodeProperties) {\r\n            properties = nodeProperties.toNodeSelect();\r\n        }\r\n        let logicalChildren = UIA.GetLogicalChildren(currentNode.id);\r\n        properties = [...properties, ...logicalChildren.toNodeSelect()];\r\n        return properties;\r\n    }\r\n    getEnumeration(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            graph,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {};\r\n        if (conditionType !== ConditionTypes.InEnumerable) {\r\n            return [];\r\n        }\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var permissionNode = GetLinkChain(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                type: LinkType.Condition,\r\n                direction: TARGET\r\n            }]\r\n        })[0]\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.EnumerationReference) || {\r\n            ref1: GetNodeProp(permissionNode, UIA.NodeProperties.PermissionRequester)\r\n        };\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        var enumeration = temp && temp[UIA.NodeProperties.Enumeration] ? temp[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (temp && temp[UIA.NodeProperties.AllowedEnumValues] ? temp[UIA.NodeProperties.AllowedEnumValues] : []);\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).toNodeSelect();\r\n        return [\r\n            (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.EnumerationReference,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ),\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    temp.ref1Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />,\r\n            currentNode ? (<SelectInput\r\n                label={Titles.Enumeration}\r\n                options={enumeration_nodes}\r\n                key={`${currentNode.id}-enum`}\r\n                onChange={(value) => {\r\n                    var id = currentNode.id;\r\n                    let target = temp[UIA.NodeProperties.Enumeration] || '';\r\n                    temp[UIA.NodeProperties.Enumeration] = value;\r\n                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                        target,\r\n                        source: id,\r\n                        linkType: UIA.LinkProperties.EnumerationReferenceLink.type\r\n                    })\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id,\r\n                        value: temp\r\n                    });\r\n                    this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                        target: value,\r\n                        source: id,\r\n                        properties: { ...UIA.LinkProperties.EnumerationReferenceLink }\r\n                    });\r\n                }}\r\n                value={temp[UIA.NodeProperties.Enumeration] || ''} />) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-allowed-enum-title`} title={Titles.AllowedEnums} />,\r\n            allowed && allowed.length ? allowed.map((_enum) => {\r\n                return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed].filter(x => x !== _enum);\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null,\r\n            <ControlSideBarMenuHeader\r\n                key={`${currentNode.id}-disalloweditem-title`} title={Titles.DisallowedEnums} />,\r\n            disallowed && disallowed.length ? disallowed.map((_enum) => {\r\n                return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n\r\n                    var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n\r\n                    temp[UIA.NodeProperties.AllowedEnumValues] = [...allowed, _enum].unique();\r\n                    temp[UIA.NodeProperties.DisallowedEnumValues] = disallowed;\r\n\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.EnumerationReference,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} > {_enum}</div>;\r\n            }) : null\r\n        ]\r\n    }\r\n\r\n    getMatchManyReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchManyReferenceParameter) || {};\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref1 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1} />\r\n            ) : null,\r\n            matchRef.ref1 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref1UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref1UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && !temp.ref1UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref1_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref1Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref1Property} />\r\n            ) : null,\r\n            conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Reference}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp.ref2 = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.UseId}\r\n                    value={matchRef.ref2UseId}\r\n                    onChange={(value) => {\r\n                        temp.ref2UseId = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref2 && !temp.ref2UseId && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={ref2_properties}\r\n                    onChange={(value) => {\r\n                        temp.ref2Property = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.ref2Property} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.ManyToManyNexus}\r\n                    options={model_options}\r\n                    onChange={(value) => {\r\n                        temp[ConditionTypeParameters.RefManyToMany] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef[ConditionTypeParameters.RefManyToMany]} />\r\n            ) : null,\r\n            matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <CheckBox\r\n                    label={Titles.ManyToManyExists}\r\n                    value={matchRef.refManyToManyExists}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyExists = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }} />\r\n            ) : null,\r\n            matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (\r\n                <SelectInput\r\n                    label={Titles.Property}\r\n                    options={refManyToMany_properties}\r\n                    onChange={(value) => {\r\n                        temp.refManyToManyProperty = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                            id: currentNode.id,\r\n                            value: temp\r\n                        });\r\n                    }}\r\n                    value={matchRef.refManyToManyProperty} />\r\n            ) : null,\r\n            matchRef.refManyToManyProperty && matchRef.ref1 && matchRef.ref2 && conditionType == ConditionTypes.MatchManyReferenceParameter ? (<SelectInput\r\n                title={Titles.Condition}\r\n                label={Titles.Condition}\r\n                options={[...Object.keys(ConditionTypeOptions)].map(t => ({ title: t, value: t }))}\r\n                value={matchRef.refManyToManyCondition}\r\n                onChange={(value) => {\r\n                    temp.refManyToManyCondition = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.MatchManyReferenceParameter,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />) : null\r\n        ].filter((x) => x).map((x, index) => {\r\n\r\n            return x;\r\n        });\r\n    }\r\n\r\n    getMatchReferenceProperty(options) {\r\n        var {\r\n            conditionType,\r\n            model_options,\r\n            currentNode,\r\n            methods,\r\n        } = options;\r\n        if (conditionType !== ConditionTypes.MatchReference) {\r\n            return null;\r\n        }\r\n        var { state } = this.props;\r\n        var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n\r\n        let methodProps = UIA.GetNodeProp(methods ? methods[0] : null, NodeProperties.MethodProps);\r\n        var ref1_properties = [];\r\n        var ref2_properties = [];\r\n        var refManyToMany_properties = [];\r\n        var propertyType = UIA.NodeProperties.MatchReference;\r\n\r\n        if (temp.ref2) {\r\n            ref2_properties = this.getProperties(methodProps, temp, state, 'ref2');\r\n        }\r\n        if (temp.ref1) {\r\n            ref1_properties = this.getProperties(methodProps, temp, state, 'ref1');\r\n        }\r\n\r\n        if (temp[ConditionTypeParameters.RefManyToMany]) {\r\n            refManyToMany_properties = this.getProperties(methodProps, temp, state, 'refManyToMany');\r\n        }\r\n\r\n        let matchRef = { ...temp };\r\n        return [(\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1} />\r\n        ),\r\n        matchRef.ref1 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref1UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref1UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref1 && !temp.ref1UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref1_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp[ConditionTypeParameters.Ref1Property] = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref1Property} />\r\n        ) : null,\r\n        (\r\n            <SelectInput\r\n                label={Titles.Reference}\r\n                options={model_options}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2 = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2} />\r\n        ),\r\n        matchRef.ref2 ? (\r\n            <CheckBox\r\n                label={Titles.UseId}\r\n                value={matchRef.ref2UseId}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2UseId = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }} />\r\n        ) : null,\r\n        matchRef.ref2 && !temp.ref2UseId ? (\r\n            <SelectInput\r\n                label={Titles.Property}\r\n                options={ref2_properties}\r\n                onChange={(value) => {\r\n                    var temp = UIA.GetNodeProp(currentNode, NodeProperties.MatchReference) || {};\r\n                    temp.ref2Property = value;\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: propertyType,\r\n                        id: currentNode.id,\r\n                        value: temp\r\n                    });\r\n                }}\r\n                value={matchRef.ref2Property} />\r\n        ) : null\r\n        ].filter(x => x)\r\n    }\r\n}\r\n\r\nexport default UIConnect(ConditionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SelectInput from './selectinput';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport { getNodeLinks, getNodesLinkedFrom } from '../methods/graph_methods';\r\nimport * as GraphMethods from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\nimport { FunctionConstraintKeys } from '../constants/functiontypes';\r\nclass ParameterActivityMenu extends Component {\r\n    mustBeModel(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsModel]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeProperty(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsProperty]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    mustBeFunction(currentNode) {\r\n        var { state } = this.props;\r\n        var links = getNodeLinks(UIA.GetCurrentGraph(state), currentNode.id, GraphMethods.TARGET);\r\n        for (var i = 0; i < links.length; i++) {\r\n            var x = links[i];\r\n            var constraint = UIA.GetLinkProperty(x, LinkPropertyKeys.CONSTRAINTS)\r\n            if (constraint && constraint[FunctionConstraintKeys.IsFunction]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Parameter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var linkedNodes = [];\r\n        var nodes = [];\r\n        if (currentNode && active) {\r\n            linkedNodes = getNodesLinkedFrom(UIA.GetCurrentGraph(state), { id: currentNode.id });\r\n            var musBeModel = this.mustBeModel(currentNode);\r\n            if (musBeModel) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeProperty(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n            else if (this.mustBeFunction(currentNode)) {\r\n                nodes = UIA.NodesByType(state, UIA.NodeTypes.Function).map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode && linkedNodes.length === 0 ? (<SelectInput\r\n                    label={Titles.ParameterType}\r\n                    options={Object.keys(UIA.NodePropertyTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                        return {\r\n                            value: UIA.NodePropertyTypes[x],\r\n                            title: x\r\n                        }\r\n                    })}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.CodePropertyType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodePropertyType] : ''} />) : null}\r\n\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.ChoiceTypes}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: currentNode.properties[UIA.NodeProperties.UIChoiceNode],\r\n                            source: id\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIChoiceNode,\r\n                            id,\r\n                            value\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.ChoiceLink }\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIChoiceNode] : ''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ParameterActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\n\r\nclass OptionItemFormControl extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.OptionListItem);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var show_custom = currentNode && currentNode.properties && currentNode.properties[UIA.NodeProperties.UseCustomUIOption];\r\n\r\n        var custom_options = UIA.NodesByType(state, UIA.NodeTypes.OptionCustom).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.UseCustomOption}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UseCustomUIOption] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UseCustomUIOption,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    {show_custom ? (<SelectInput\r\n                        options={custom_options}\r\n                        label={Titles.OptionsType}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIOptionTypeCustom,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.OptionCustomLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionTypeCustom] : ''} />) : (<SelectInput\r\n                            options={Object.keys(UIA.OptionsTypes).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                return {\r\n                                    value: UIA.OptionsTypes[x],\r\n                                    title: x\r\n                                }\r\n                            })}\r\n                            label={Titles.OptionsType}\r\n                            onChange={(value) => {\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIOptionType,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                });\r\n                            }}\r\n                            value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIOptionType] : ''} />)}\r\n                    {show_custom ? (\r\n                        <ControlSideBarMenu>\r\n                            <ControlSideBarMenuItem onClick={() => {\r\n                                this.props.graphOperation(UIA.NEW_CUSTOM_OPTION, {});\r\n                            }} icon={'fa fa-puzzle-piece'}\r\n                                title={Titles.AddOptionList}\r\n                                description={Titles.AddOptionListDescription} />\r\n                        </ControlSideBarMenu>) : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(OptionItemFormControl)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ExecutorItem from './executoritem';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties, ExecutorUI } from '../constants/nodetypes';\r\nimport { createValidator, addValidatator, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { uuidv4 } from '../utils/array';\r\n\r\nclass ExecutorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, this.props.nodeType || UIA.NodeTypes.Executor);\r\n        if (!active) {\r\n            return <div></div>;\r\n        }\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var executor;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, this.props.modelKey || UIA.NodeProperties.ExecutorModel)) {\r\n\r\n            executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor);\r\n        }\r\n        let _ui = this.props.ui || ExecutorUI;\r\n        let propertyExecutors = <div></div>;\r\n        if (executor && executor.properties) {\r\n            propertyExecutors = Object.keys(executor.properties).map(key => {\r\n                let _validates = executor.properties[key];\r\n                let visualKey = `ExecutorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n\r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v]\r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ExecutorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(_ui).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(executorUI => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${executorUI}-afjlskf-asfd`}\r\n                            title={executorUI}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var executor = UIA.GetNodeProp(currentNode, this.props.nodeProp || NodeProperties.Executor) || createValidator();\r\n                                executor = addValidatator(executor, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: executorUI,\r\n                                        ..._ui[executorUI]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: this.props.nodeProp || NodeProperties.Executor,\r\n                                    value: executor\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveExecution} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedExecutors}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-executions`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-executions`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectExecution}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectexecution`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectexecution`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyExecutors = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyExecutors}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyExecutors\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, Methods } from '../constants/nodetypes';\r\n\r\nclass ExecutorActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Executor);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var modelNodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n\r\n        var functionNodes = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        var agents = UIA.NodesByType(state, UIA.NodeTypes.Model)\r\n            .filter(x => UIA.GetNodeProp(x, NodeProperties.IsAgent))\r\n            .map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={Object.keys(Methods).map(t => ({ title: t, value: t }))}\r\n                        label={Titles.Methods}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunctionType,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunctionType] : ''} />\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.Models}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorModel],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorModel,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorModelLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorModel] : ''} />\r\n                    <SelectInput\r\n                        options={modelNodes}\r\n                        label={Titles.OutputModel}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorModelOutput],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorModelOutput,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorModelLink }\r\n                            });\r\n                        }}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.ExecutorModelOutput)} />\r\n                    <SelectInput\r\n                        options={agents}\r\n                        label={Titles.Agents}\r\n                        onChange={(value) => {\r\n\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorAgent],\r\n                                source: id\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorAgent,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorAgentLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorAgent] : ''} />\r\n                    <SelectInput\r\n                        options={functionNodes}\r\n                        label={Titles.Functions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.ExecutorFunction],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ExecutorFunction,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExecutorFunctionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ExecutorFunction] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExecutorActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            var propertyNodes = getNodesByLinkType(graph, {\r\n                id: UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel),\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }).map(t => {\r\n                return {\r\n                    title: UIA.GetNodeTitle(t),\r\n                    value: t.id\r\n                }\r\n            });\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = [];\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let visualKey = `ValidatorPropertyMenu${key}-${currentNode.id}`;\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                            validator = addValidatator(validator, { id: value });\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                id,\r\n                                prop: NodeProperties.Validator,\r\n                                value: validator\r\n                            })\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ValidatorModelLink,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveValidationPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValidatorModel] : ''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport {\r\n    getNodesByLinkType,\r\n    SOURCE,\r\n    createValidator,\r\n    addValidatator,\r\n    TARGET,\r\n    createEventProp,\r\n    GetNode,\r\n    getValidatorItem,\r\n    isUIExtensionEnumerable,\r\n    GetUIExentionEnumeration,\r\n    GetUIExentionKeyField\r\n} from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorItem extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        var validatorItem;\r\n        if (currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n            validatorItem = validator.properties[this.props.property].validators[this.props.validator]\r\n        }\r\n        if (validatorItem) {\r\n            if (validatorItem.arguments && validatorItem.arguments.reference) {\r\n                var { types } = validatorItem.arguments.reference;\r\n                if (types) {\r\n                    let _nodes_types = UIA.NodesByType(state, types).filter(x => UIA.GetNodeProp(x, NodeProperties.NODEType) === NodeTypes.ExtensionType ? isUIExtensionEnumerable(x) : true);\r\n\r\n                    var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                    let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                    let editlist = [];\r\n                    if (item && item.node) {\r\n                        let node = GetNode(graph, item.node);\r\n                        switch (UIA.GetNodeProp(node, NodeProperties.NODEType)) {\r\n                            case NodeTypes.Enumeration:\r\n                                var enums = UIA.GetNodeProp(node, NodeProperties.Enumeration) || [];\r\n                                editlist = enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.enumeration && item.enumeration[_enum] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.enumeration = item.enumeration || {};\r\n                                        item.enumeration[_enum] = !item.enumeration[_enum];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum}</div>;\r\n                                });\r\n                                break;\r\n                            case NodeTypes.ExtensionType:\r\n                                var list_enums = GetUIExentionEnumeration(node);\r\n                                var list_key_field = GetUIExentionKeyField(node);\r\n                                editlist = list_enums.map((_enum) => {\r\n                                    return <div className={`external-event ${item.extension && item.extension[_enum[list_key_field]] ? 'bg-red' : 'bg-black'}`} style={{ cursor: 'pointer' }} onClick={() => {\r\n                                        item.extension = item.extension || {};\r\n                                        item.extension[_enum[list_key_field]] = !item.extension[_enum[list_key_field]];\r\n                                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                            id: currentNode.id,\r\n                                            prop: NodeProperties.Validator,\r\n                                            value: validator\r\n                                        })\r\n                                    }} > {_enum[list_key_field]}</div>;\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n                    let formControll = (<FormControl>\r\n                        <SelectInput\r\n                            options={_nodes_types.map(t => ({\r\n                                title: UIA.GetNodeTitle(t), value: t.id\r\n                            }))}\r\n                            defaultSelectText={Titles.NodeType}\r\n                            label={Titles.Property}\r\n                            onChange={(value) => {\r\n                                var id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                let item = getValidatorItem(validator, { property: this.props.property, validator: this.props.validator });\r\n                                let old_one = item.node;\r\n                                item.node = value;\r\n                                if (old_one) {\r\n                                    this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                        target: old_one,\r\n                                        source: id,\r\n                                    });\r\n                                }\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                                this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: {\r\n                                        ...UIA.LinkProperties.ValidatorModelItemLink,\r\n                                        ...createEventProp(LinkEvents.Remove, {\r\n                                            property: this.props.property,\r\n                                            validator: this.props.validator,\r\n                                            function: 'OnRemoveValidationItemPropConnection',\r\n                                            node: item.node\r\n                                        })\r\n                                    }\r\n                                });\r\n                            }}\r\n                            value={validatorItem ? validatorItem.node : ''} />\r\n                        {editlist}\r\n                    </FormControl>);\r\n\r\n                    return formControll\r\n                }\r\n                return (<div>reference</div>)\r\n            }\r\n            return (<div>item</div>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorItem)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport ValidatorItem from './validatoritem';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType, ValidationUI } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode, removeValidator, removeValidatorValidation, uuidv4 } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\n\r\nclass ValidatorPropertyActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Validator);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var validator;\r\n        if (active && currentNode && UIA.GetNodeProp(currentNode, UIA.NodeProperties.ValidatorModel)) {\r\n\r\n            validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator);\r\n        }\r\n        let propertyValidations = <div></div>;\r\n        if (validator && validator.properties) {\r\n            propertyValidations = Object.keys(validator.properties).map(key => {\r\n                let _validates = validator.properties[key];\r\n                let visualKey = `ValidatorPropertyActivityMenu${key}-${currentNode.id}`;\r\n                let selectedValidations = Object.keys(_validates && _validates.validators ? _validates.validators : {}).map(v => {\r\n                    let selK = `${visualKey}-selected-validation`;\r\n                    let selKInner = `${selK}-inne-${v}-r`;\r\n                    return (\r\n                        <TreeViewMenu\r\n                            key={`${v}-v-v`}\r\n                            title={_validates.validators && _validates.validators[v] && _validates.validators[v].type ? _validates.validators[v].type : v}\r\n                            open={UIA.Visual(state, selKInner)}\r\n                            active={UIA.Visual(state, selKInner)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(selKInner)\r\n                            }}\r\n                            icon={'fa fa-tag'}>\r\n                            <TreeViewMenu\r\n                                hideArrow={true}\r\n                                title={Titles.Remove}\r\n                                icon={'fa fa-minus'}\r\n                                onClick={() => {\r\n                                    let id = currentNode.id;\r\n                                    let validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n \r\n\r\n                                    let _validates = validator.properties[key];\r\n                                    delete _validates.validators[v] \r\n\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        id,\r\n                                        prop: NodeProperties.Validator,\r\n                                        value: validator\r\n                                    })\r\n                                }} />\r\n                            <ValidatorItem node={currentNode.id} property={key} validator={v} />\r\n                        </TreeViewMenu>\r\n                    )\r\n                })\r\n                let validationUis = Object.keys(ValidationUI).filter(x => !_validates || !_validates.validators || !_validates.validators[x]).reverse().map(valiationUi => {\r\n                    return (\r\n                        <TreeViewMenu\r\n                            hideArrow={true}\r\n                            key={`${valiationUi}-afjlskf-asfd`}\r\n                            title={valiationUi}\r\n                            icon={'fa fa-plus-square-o'}\r\n                            onClick={() => {\r\n                                let id = currentNode.id;\r\n                                var validator = UIA.GetNodeProp(currentNode, NodeProperties.Validator) || createValidator();\r\n                                validator = addValidatator(validator, {\r\n                                    id: key,\r\n                                    validator: uuidv4(),\r\n                                    validatorArgs: {\r\n                                        type: valiationUi,\r\n                                        ...ValidationUI[valiationUi]\r\n                                    }\r\n                                });\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    id,\r\n                                    prop: NodeProperties.Validator,\r\n                                    value: validator\r\n                                })\r\n                            }} />\r\n                    );\r\n                })\r\n                return (\r\n                    <TreeViewMenu\r\n                        key={visualKey}\r\n                        open={UIA.Visual(state, visualKey)}\r\n                        active={UIA.Visual(state, visualKey)}\r\n                        title={UIA.GetNodeTitle(GetNode(graph, key))}\r\n                        toggle={() => {\r\n                            this.props.toggleVisual(visualKey)\r\n                        }}>\r\n                        <TreeViewMenu hideArrow={true} title={Titles.RemoveValidation} icon={'fa fa-minus'} onClick={() => {\r\n                            let id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: key,\r\n                                source: id,\r\n                            });\r\n                        }} />\r\n                        <TreeViewMenu title={Titles.SelectedValidations}\r\n                            icon={'fa  fa-list-ul'}\r\n                            open={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selected-validations`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selected-validations`)\r\n                            }} >\r\n                            {selectedValidations}\r\n                        </TreeViewMenu>\r\n                        <TreeViewMenu title={Titles.SelectValidation}\r\n                            icon={'fa fa-plus-circle'}\r\n                            open={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            active={UIA.Visual(state, `${visualKey}-selectvalidation`)}\r\n                            toggle={() => {\r\n                                this.props.toggleVisual(`${visualKey}-selectvalidation`)\r\n                            }} >\r\n                            {validationUis}\r\n                        </TreeViewMenu>\r\n                    </TreeViewMenu>\r\n                );\r\n            });\r\n            propertyValidations = (\r\n                <div style={{ position: 'relative' }}>\r\n                    <MainSideBar>\r\n                        <SideBar>\r\n                            <SideBarMenu>\r\n                                {propertyValidations}\r\n                            </SideBarMenu>\r\n                        </SideBar>\r\n                    </MainSideBar>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            propertyValidations\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ValidatorPropertyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport SelectInput from './selectinput';\r\nclass ExtensionListActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionTypeList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n\r\n        var extentiontypes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <SelectInput\r\n                        options={extentiontypes}\r\n                        label={Titles.ExtensionOptions}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />\r\n                </FormControl>) : null}\r\n                <ControlSideBarMenuHeader title={Titles.ExtensionListTypeActions} />\r\n                <ControlSideBarMenu>\r\n                    <ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_EXTENTION_NODE, {\r\n                        });\r\n                    }}\r\n                        icon={'fa fa-puzzle-piece'}\r\n                        title={Titles.AddExtensionNode}\r\n                        description={Titles.AddExtensionNodeDescription} />\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionListActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetLinkChain, GetLinkChainItem, TARGET } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\nimport SidebarButton from './sidebarbutton';\r\n\r\nclass PermissionActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Permission);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var permissions = currentNode ? { ...Methods, ...(currentNode.properties[UIA.NodeProperties.UIPermissions] || {}) } : null;\r\n        var model_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var targetNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionTarget] : '';\r\n\r\n        var requestorNodeId = graph && currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.PermissionRequester] : '';\r\n        var propertyNodes = null;\r\n        if (targetNodeId) {\r\n            propertyNodes = getNodesByLinkType(graph, { id: targetNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            if (propertyNodes)\r\n                propertyNodes = propertyNodes.map(node => {\r\n                    return {\r\n                        value: node.id,\r\n                        title: UIA.GetNodeTitle(node)\r\n                    }\r\n                })\r\n        }\r\n        var requestorPropertyNodes = null;\r\n        if (requestorNodeId) {\r\n            requestorPropertyNodes = getNodesByLinkType(graph, { id: requestorNodeId, direction: SOURCE, type: LinkType.PropertyLink });\r\n            requestorPropertyNodes = requestorPropertyNodes.map(node => {\r\n                return {\r\n                    value: node.id,\r\n                    title: UIA.GetNodeTitle(node)\r\n                }\r\n            })\r\n        }\r\n        var methodNode = currentNode ? GetLinkChainItem(state, {\r\n            id: currentNode.id,\r\n            links: [{\r\n                direction: TARGET,\r\n                type: LinkType.FunctionOperator\r\n            }]\r\n        }) : null;\r\n\r\n        let methodProps = UIA.GetMethodOptions(UIA.GetNodeProp(methodNode, NodeProperties.MethodProps));\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionAttributes} />\r\n                {currentNode ? (<CheckBox\r\n                    title={Titles.OwnedResourcesDescription}\r\n                    label={Titles.OwnedResources}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsOwned]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsOwned,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                <ControlSideBarMenuHeader title={Titles.PermissionActions} />\r\n                {\r\n                    permissions ? (<FormControl>{(Object.keys(permissions).map(key => {\r\n                        return (<CheckBox key={`permissions-${key}`}\r\n                            label={Titles.Permissions[key]}\r\n                            value={permissions[key]}\r\n                            onChange={(value) => {\r\n                                permissions[key] = value;\r\n                                this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                    prop: UIA.NodeProperties.UIPermissions,\r\n                                    id: currentNode.id,\r\n                                    value: {\r\n                                        ...permissions\r\n                                    }\r\n                                });\r\n                            }} />);\r\n                    }))}</FormControl>) : null\r\n                }\r\n                {methodProps && methodProps.length ? (<SelectInput\r\n                    options={methodProps}\r\n                    label={Titles.PermissionValueType}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.PermissionValueType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.PermissionValueType)} />) : null}\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    this.props.graphOperation(UIA.NEW_CONDITION_NODE, {\r\n                        parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                        groupProperties: {\r\n                        },\r\n                        linkProperties: {\r\n                            properties: { ...LinkProperties.ConditionLink }\r\n                        }\r\n                    });\r\n                }}>{Titles.AddCondition}</button>\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport CheckBox from './checkbox';\r\nimport { NodeTypes, LinkProperties } from '../constants/nodetypes';\r\nimport { Iterator } from 'webcola';\r\nclass ReferenceActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = !!(UIA.Application(state, UIA.GRAPH_SCOPE) || []).length;\r\n        var referencable_nodes = (UIA.NodesByType(state, NodeTypes.Model, { useRoot: true }) || []).map(t => {\r\n            return {\r\n                title: UIA.GetNodeTitle(t),\r\n                value: t.id\r\n            }\r\n        });\r\n        return (\r\n            <TabPane active={active}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.AddReference}\r\n                        options={referencable_nodes}\r\n                        onChange={(id) => {\r\n                            var node = UIA.GetNodeFromRoot(state, id);\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.ADD_NEW_REFERENCE_NODE,\r\n                                options: {\r\n                                    node,\r\n                                    rootNode: UIA.GetRootGraph(state)\r\n                                }\r\n                            }])\r\n                            // this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            //     target: currentNode.properties[UIA.NodeProperties.UIDependsOn],\r\n                            //     source: id\r\n                            // })\r\n                            // this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            //     prop: UIA.NodeProperties.UIDependsOn,\r\n                            //     id,\r\n                            //     value\r\n                            // });\r\n                            // this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            //     target: value,\r\n                            //     source: id,\r\n                            //     properties: { ...UIA.LinkProperties.DependsOnLink }\r\n                            // });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ReferenceActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport * as UIA from '../actions/uiactions';\r\n\r\nexport default class NavBarButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: UIA.GUID()\r\n        }\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-gears\"\r\n    }\r\n    menuItems() {\r\n        var result = [];\r\n        var { menuItems } = this.props;\r\n        if (menuItems) {\r\n            menuItems.map((mi, index) => {\r\n                if (mi.onClick && mi.icon) {\r\n                    result.push((\r\n                        <a key={`goo-menu-${this.state.id}-icon-index-${index}`} title={mi.title} className=\"menu-item\" onClick={mi.onClick} style={{ pointerEvents: 'all' }}> <i className={mi.icon}></i> </a>\r\n                    ));\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        if (!this.props.visible) {\r\n            return <div></div>\r\n        }\r\n        var menuItems = this.menuItems();\r\n        return (\r\n            <div className=\"goo-menu container\" style={{\r\n                position: 'fixed',\r\n                transition: 'all 200ms',\r\n                top: this.props.top || 0,\r\n                left: this.props.left || 0\r\n            }}>\r\n                <nav className=\"menu\" style={{ pointerEvents: 'none' }}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={() => {\r\n                            if (this.props.onToggle) {\r\n                                this.props.onToggle();\r\n                            }\r\n                        }}\r\n                        checked={this.props.open}\r\n                        style={{ pointerEvents: 'all' }}\r\n                        href=\"#\" className=\"menu-open\"\r\n                        id={`${this.state.id}`} />\r\n                    <label className=\"menu-open-button\" htmlFor={`${this.state.id}`} style={{ pointerEvents: 'all' }}>\r\n                        <span className=\"hamburger hamburger-1\"></span>\r\n                        <span className=\"hamburger hamburger-2\"></span>\r\n                        <span className=\"hamburger hamburger-3\"></span>\r\n                    </label>\r\n                    {menuItems}\r\n                    {/* <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-bar-chart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-plus\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-heart\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-envelope\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-cog\"></i> </a>\r\n                    <a href=\"#\" className=\"menu-item\" style={{ pointerEvents: 'all' }}> <i className=\"fa fa-ellipsis-h\"></i> </a> */}\r\n                </nav>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport class GooMenuSVG extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'none' }}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n                    <defs>\r\n                        <filter id=\"shadowed-goo\">\r\n\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feGaussianBlur in=\"goo\" stdDeviation=\"3\" result=\"shadow\" />\r\n                            <feColorMatrix in=\"shadow\" mode=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 -0.2\" result=\"shadow\" />\r\n                            <feOffset in=\"shadow\" dx=\"1\" dy=\"1\" result=\"shadow\" />\r\n                            <feComposite in2=\"shadow\" in=\"goo\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                        <filter id=\"goo\">\r\n                            <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"10\" />\r\n                            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"goo\" />\r\n                            <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\r\n                        </filter>\r\n                    </defs>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport Box from './box';\r\nclass ChoiceListItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                <ul>\r\n                    {def ? Object.keys(def.definition).map((x, xi) => {\r\n                        return (<li key={`clist${x}-${xi}`}>{x}</li>);\r\n                    }) : null}\r\n                </ul>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ChoiceListItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass ModelFilterMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelFilter);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let nodes = UIA.NodesByType(state, NodeTypes.Model).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let properties = [];\r\n        if (currentNode) {\r\n            let model = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel);\r\n            properties = (getNodesByLinkType(graph, {\r\n                id: model,\r\n                direction: SOURCE,\r\n                type: LinkType.PropertyLink\r\n            }) || []).map(t => {\r\n                return (<CheckBox\r\n                    key={`checkbox-${t.id}`}\r\n                    label={UIA.GetNodeTitle(t)}\r\n                    value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties)[t.id] : ''}\r\n                    onChange={(value) => {\r\n                        let fprops = UIA.GetNodeProp(currentNode, UIA.NodeProperties.FilterPropreties) || {};\r\n                        fprops[t.id] = value;\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FilterPropreties,\r\n                            id: currentNode.id,\r\n                            value: fprops\r\n                        });\r\n                    }} />)\r\n            });\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {properties}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Slider extends Component {\r\n    min() {\r\n        return this.props.min || \"1\";\r\n    }\r\n    max() {\r\n        return this.props.max || \"100\";\r\n    }\r\n    value() {\r\n        return this.props.value || '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"slidecontainer\">\r\n                <input type=\"range\" min={this.min()} onChange={(evt) => {\r\n                    if (this.props.onChange && !isNaN(evt.target.value)) {\r\n                        this.props.onChange(parseFloat(evt.target.value));\r\n                    }\r\n                }} max={this.max()} value={this.value()} className=\"slider\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenu extends Component {\r\n    menuType() {\r\n        return 'messages-menu';\r\n    }\r\n    open() {\r\n        return this.props.open ? 'open' : '';\r\n    }\r\n    ariaExpanded() {\r\n        return this.props.open ? 'true' : 'false';\r\n    }\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    label() {\r\n        return null;//<span className=\"label label-success\">4</span>\r\n    }\r\n    usermode() {\r\n        return this.props.usermode;\r\n    }\r\n    usermenu() {\r\n        return this.props.usermode ? 'user user-menu' : '';\r\n    }\r\n    userbody() {\r\n        return this.props.usermode ? 'user user-body' : '';\r\n    }\r\n    userheader() {\r\n        return this.props.usermode ? 'header' : 'header';\r\n    }\r\n    render() {\r\n        var ops = {};\r\n        if (this.props.width) {\r\n            ops.style = { width: this.props.width }\r\n        }\r\n        return (\r\n            <li className={`dropdown ${this.usermenu()} ${this.menuType()} ${this.open()}`}>\r\n                <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded={this.ariaExpanded()} onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.label()}\r\n                </a>\r\n                <ul className=\"dropdown-menu\" {...ops}>\r\n                    {this.props.headerText ? <li className={this.userheader()}>{this.props.headerText}</li> : null}\r\n                    {this.props.header ? <li className={this.userheader()}>{this.props.header}</li> : null}\r\n                    {this.usermode() ? (<li className={this.userbody()}>\r\n                        <div className=\"row\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </li>) : (<li className={this.userbody()}>\r\n                        <ul className=\"menu\">\r\n                            {this.props.children}\r\n                        </ul>\r\n                    </li>)}\r\n                    {this.props.footer ? this.props.footer : null}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContent extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`tab-content`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className=\"user-footer\">\r\n                {this.props.children} \r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TabContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`nav-tabs-custom`}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","\r\n\r\n// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class EnumeratedTable extends Component {\r\n    render() {\r\n        var me = this;\r\n        var dataFunc = me.props.dataFunc || ((y) => y || '');\r\n        var rows = (me.props.data || []).map((x, xi) => {\r\n            return (<tr key={`${xi}-row`}>\r\n                {(me.props.columns || []).map((c, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell`}>{dataFunc(x[c.value], c.value, xi)}</td>)\r\n                })\r\n                }\r\n                {(me.props.columnButtons || []).map((fx, inde) => {\r\n                    return (<td key={`${inde}-${xi}-cell-btn`}>{fx(x, xi)}</td>)\r\n                })}\r\n            </tr>);\r\n        });\r\n        var headers = (me.props.columns || []).map((x, index) => {\r\n            return (<th key={`col-${index}`}>{x.title}</th>)\r\n        });\r\n\r\n        (me.props.columnButtons || []).map((fx, inde) => {\r\n            headers.push(<th key={`${inde}-cell-header`}></th>)\r\n        })\r\n        var ops = {};\r\n        ops.style = { maxHeight: this.props.maxHeight || 500, overflowY: 'auto' }\r\n        return (\r\n            <div {...ops}>\r\n                <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            {headers}\r\n                        </tr>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport DropDownMenu from './dropdown';\r\nimport Box from './box';\r\nimport TabContent from './tabcontent';\r\nimport UserFooter from './userfooter';\r\nimport TabContainer from './tabcontainer';\r\nimport EnumeratedTable from './enumeratedtable';\r\n\r\nimport { createExtensionDefinition, defaultExtensionDefinitionType } from '../methods/graph_methods';\r\nconst EXTENSION_DEFINITION_MENU = 'EXTENSION_DEFINITION_MENU';\r\nconst EDITMODE = 'EDITMODE';\r\nclass ExtensionDefinitionMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            property: ''\r\n        }\r\n    }\r\n    form() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            if (def) {\r\n\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n    editKey(k) {\r\n        return `${k}-edit`\r\n    }\r\n    tabKey(k) {\r\n        return `${k}-tabkey`;\r\n    }\r\n    footer() {\r\n        //\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType) || UIA.IsCurrentNodeA(state, UIA.NodeTypes.ChoiceList);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (active && currentNode) {\r\n            var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n            var addBtn = def && def.config.isEnumeration ? (<div className=\"pull-right\">\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => {\r\n                    def.config.list = [...def.config.list, {}];\r\n                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                        id: currentNode.id,\r\n                        value: { ...def }\r\n                    });\r\n                }}>{Titles.Add}</button>\r\n            </div>) : null;\r\n            var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n            var btns = (<div className=\"pull-left\">\r\n                <div className=\"btn-group\">\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionDefinition)}\r\n                        type=\"button\"\r\n                        title={Titles.ExtensionDefinition}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-pencil-square\" /></button>\r\n                    <button onClick={() => this.props.setVisual(tab_key, Titles.ExtensionConfig)}\r\n                        type=\"button\" title={Titles.ExtensionConfig}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-book\" /></button>\r\n                    <button onClick={() => {\r\n                        if (!def) {\r\n                            def = createExtensionDefinition();\r\n                        }\r\n                        this.props.setVisual(tab_key, Titles.DependsOn);\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                            id: currentNode.id,\r\n                            value: def\r\n                        });\r\n                    }}\r\n                        type=\"button\" title={Titles.DependsOn}\r\n                        className=\"btn btn-default btn-flat\"><i className=\"fa fa-balance-scale\" /></button>\r\n                </div>\r\n                <div className=\"btn-group\">\r\n                    {UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? (<button onClick={() => {\r\n                        if (this.state.property) {\r\n                            if (!def) {\r\n                                def = createExtensionDefinition();\r\n                            }\r\n                            def.definition[this.state.property] = defaultExtensionDefinitionType();\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: def\r\n                            });\r\n\r\n                            this.setState({ property: '' });\r\n                        }\r\n                    }}\r\n                        type=\"button\" className=\"btn btn-default btn-flat\">{Titles.Add}</button>) : null}\r\n                </div>\r\n            </div>\r\n            )\r\n            return (<UserFooter>\r\n                {btns}\r\n                {addBtn}\r\n            </UserFooter>)\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var form = this.form();\r\n        var footer = this.footer();\r\n        var tab_key = currentNode ? this.tabKey(currentNode.id) : null;\r\n        var def = UIA.GetNodeProp(currentNode, UIA.NodeProperties.UIExtensionDefinition);\r\n        var properties = currentNode ? UIA.NodesByType(state, UIA.NodeTypes.Property).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        }) : [];\r\n        return (\r\n            <TabPane active={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                {!UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    {def ? <CheckBox\r\n                        label={Titles.Enumerable}\r\n                        value={def.config.isEnumeration}\r\n                        onChange={(value) => {\r\n                            def.config.isEnumeration = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, config: { ...def.config } }\r\n                            });\r\n                        }} /> : null}\r\n\r\n                    <TextInput\r\n                        value={this.state.property}\r\n                        label={Titles.Property}\r\n                        onChange={(val) => {\r\n                            this.setState({ property: val });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionConfig) ? (\r\n                    <EnumeratedTable columns={Object.keys(def.definition).map(key => {\r\n                        return { title: key, value: key }\r\n                    })}\r\n                        dataFunc={(x, key, index) => {\r\n                            return (<TextInput\r\n                                label={Titles.Value}\r\n                                value={x}\r\n                                onChange={(value) => {\r\n                                    if (def.config.isEnumeration) {\r\n                                        if (def.config && def.config.list && def.config.list[index]) {\r\n                                            def.config.list[index][key] = value;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (def.config && def.config.dictionary) {\r\n                                            def.config.dictionary[key] = value;\r\n                                        }\r\n                                    }\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def, config: { ...def.config, dictionary: { ...def.config.dictionary }, list: [...def.config.list] } }\r\n                                    });\r\n                                }}\r\n                            />)\r\n                        }}\r\n                        columnButtons={def.config.isEnumeration ? [(x, xi) => {\r\n                            return <div className=\"pull-right\"><button onClick={() => {\r\n                                if (def.config.isEnumeration) {\r\n                                    if (def.config && def.config.list && def.config.list[xi]) {\r\n                                        def.config.list = [...def.config.list.filter((a, i) => i !== xi)];\r\n                                    }\r\n                                    // delete def.definition[x.name];\r\n                                    // def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n                                }\r\n\r\n                            }} className=\"btn btn-block btn-default\"><i className=\"fa fa-trash\" /></button></div>\r\n                        }] : []}\r\n                        data={(def.config.isEnumeration ? def.config.list.map(obj => {\r\n                            return {\r\n                                ...obj\r\n                            }\r\n                        }) : ([{ ...def.config.dictionary }]))}\r\n                    />\r\n                ) : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.ExtensionDefinition) ? <EnumeratedTable columns={[{ title: Titles.Name, value: 'name' }]}\r\n                    columnButtons={[(x) => {\r\n                        return <div className=\"pull-right\">\r\n                            <div class=\"btn-group\">\r\n                                <button title={Titles.KeyField} onClick={() => {\r\n                                    def.config = { ...def.config, keyField: x.name };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className={`btn   ${x.name === def.config.keyField ? 'btn-success' : 'btn-default'}`}><i className={`fa fa-anchor`} /></button>\r\n                                <button onClick={() => {\r\n                                    delete def.definition[x.name];\r\n                                    def.definition = { ...def.definition };\r\n                                    this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                        prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                        id: currentNode.id,\r\n                                        value: { ...def }\r\n                                    });\r\n\r\n                                }} className=\"btn btn-default\">x</button>\r\n                            </div>\r\n                        </div>\r\n                    }]}\r\n                    data={Object.keys(def.definition).map(key => {\r\n                        return {\r\n                            name: key\r\n                        }\r\n                    })}\r\n                /> : null}\r\n                {def && UIA.VisualEq(state, tab_key, Titles.DependsOn) ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.DependsOn}\r\n                        title={Titles.DependsOnDescription}\r\n                        value={def.definition.dependsOn}\r\n                        onChange={(value) => {\r\n                            def.definition.dependsOn = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <SelectInput\r\n                        label={Titles.DependentProperty}\r\n                        title={Titles.DependentPropertyDescription}\r\n                        options={properties}\r\n                        value={def.definition.property}\r\n                        onChange={(value) => {\r\n                            def.definition.property = value;\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIChoiceType],\r\n                                source: id\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIChoiceType,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionDependencyLink }\r\n                            });\r\n\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                    <TextInput\r\n                        label={Titles.MatchingValue}\r\n                        title={Titles.MatchingValueDescription}\r\n                        value={def.definition.match}\r\n                        onChange={(value) => {\r\n                            def.definition.match = value;\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtensionDefinition,\r\n                                id: currentNode.id,\r\n                                value: { ...def, definition: { ...def.definition } }\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n                {footer}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ExtensionDefinitionMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, HTTP_METHODS, MethodFunctions } from '../constants/functiontypes';\r\nimport { NodeProperties, Methods, LinkProperties } from '../constants/nodetypes';\r\n\r\nclass MethodActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var agent_nodes = UIA.NodesByType(state, UIA.NodeTypes.Model).filter(x => UIA.GetNodeProp(x, UIA.NodeProperties.IsAgent)).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var permission_nodes = UIA.NodesByType(state, UIA.NodeTypes.Permission).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var function_types = Object.keys(MethodFunctions).map(funcKey => {\r\n            return {\r\n                title: MethodFunctions[funcKey].title || funcKey,\r\n                value: funcKey\r\n            }\r\n        })\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode && !currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<SelectInput\r\n                    label={Titles.FunctionTypes}\r\n                    options={function_types}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.FunctionType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.FunctionType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Methods}\r\n                    options={Object.keys(Methods).map(t => ({ title: t, value: Methods[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodType,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.MethodType] : ''} />) : null}\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.HttpMethod}\r\n                    options={Object.keys(HTTP_METHODS).map(t => ({ title: t, value: HTTP_METHODS[t] }))}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpMethod\r\n                        })\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpMethod)} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.HttpRoute}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.HttpRoute)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.HttpRoute\r\n                        })\r\n                    }} />) : null}\r\n                {currentNode ? (<CheckBox\r\n                    label={Titles.NotIncludeInController}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.NotIncludedInController,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }}\r\n                    value={ UIA.GetNodeProp(currentNode, UIA.NodeProperties.NotIncludedInController)} />) : null}\r\n                <ControlSideBarMenu>\r\n                    {currentNode && currentNode.properties[UIA.NodeProperties.UseScopeGraph] ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation([{ operation: UIA.ESTABLISH_SCOPE }, { options: { id: currentNode.id } }])\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.CustomFunction} description={Titles.CustomFunctionDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_MODEL_ITEM_FILTER, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.ModelItemFilter }\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddModelItemFilter} description={Titles.AddModelItemFilterDescription} />) : null}\r\n                    {currentNode ? (<ControlSideBarMenuItem onClick={() => {\r\n                        this.props.graphOperation(UIA.NEW_AFTER_METHOD, {\r\n                            parent: UIA.Visual(state, UIA.SELECTED_NODE),\r\n                            groupProperties: {\r\n                            },\r\n                            linkProperties: {\r\n                                properties: { ...LinkProperties.AfterMethod }\r\n                            },\r\n                            properties: {\r\n                                [NodeProperties.UIText]: `${UIA.GetNodeProp(currentNode, NodeProperties.UIText)} After Effect`\r\n                            }\r\n                        });\r\n                    }} icon={'fa fa-puzzle-piece'} title={Titles.AddAfterMethods} description={Titles.AddAfterMethodsDescription} />) : null}\r\n                </ControlSideBarMenu>\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { getNodesByLinkType, SOURCE, createValidator, addValidatator, TARGET, createEventProp, GetNode } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { Functions, MethodFunctions } from '../constants/functiontypes';\r\n\r\nclass MethodPropertyMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Method);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var functionType = UIA.GetNodeProp(currentNode, NodeProperties.FunctionType);\r\n        let functionObject = MethodFunctions[functionType];\r\n        let methodparams = [];\r\n        if (functionObject && functionObject.constraints) {\r\n            methodparams = Object.values(functionObject.constraints).map(constraint => {\r\n                let nodes = UIA.NodesByType(state, constraint.nodeTypes).filter(node => {\r\n                    return !Object.keys(constraint).filter(x => x != 'key' && x !== 'nodeTypes')\r\n                        .find(x => UIA.GetNodeProp(node, x) !== constraint[x])\r\n                }).map(t => ({ title: UIA.GetNodeTitle(t), value: t.id }));\r\n                return (<SelectInput\r\n                    key={constraint.key}\r\n                    label={constraint.key}\r\n                    options={nodes}\r\n                    onChange={(value) => {\r\n                        var id = currentNode.id;\r\n                        let methodProps = UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) || {};\r\n                        let oldConnect = methodProps[constraint.key];\r\n                        methodProps[constraint.key] = value;\r\n                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                            target: oldConnect,\r\n                            source: id,\r\n                            linkType: UIA.LinkProperties.FunctionOperator.type\r\n                        })\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.MethodProps,\r\n                            id: currentNode.id,\r\n                            value: methodProps\r\n                        });\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: { ...UIA.LinkProperties.FunctionOperator }\r\n                        });\r\n                    }}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.MethodProps) ? UIA.GetNodeProp(currentNode, NodeProperties.MethodProps)[constraint.key] : ''} />);\r\n            })\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    {methodparams}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MethodPropertyMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class TreeViewItem extends Component {\r\n    icon() {\r\n        return this.props.icon || \"fa fa-circle-o\";\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick)\r\n                        this.props.onClick();\r\n                }}>\r\n                    <i className={this.icon()}></i>\r\n                    {this.props.title}\r\n                    {this.props.right ? (<span class=\"pull-right-container\">\r\n                        {this.props.right}\r\n                    </span>) : null}\r\n                </a>\r\n                {this.props.children}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst MAESTRO_DETAILS_MENU = 'MAESTRO_DETAILS_MENU';\r\n\r\nclass MaestroDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                active={UIA.Visual(state, MAESTRO_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(MAESTRO_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-maestro-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TextInput from './textinput';\r\nimport TreeViewItem from './treeviewitem';\r\nimport FormControl from './formcontrol';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nconst NODE_MANAGEMENT_MENU = 'NODE_MANAGEMENT_MENU';\r\nconst NODE_MANAGEMENT = 'NODE_MANAGEMENT';\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        let filter = (this.state.filter || '').toLowerCase();\r\n        let groups = UIA.GetNodes(state).filter(x => {\r\n            if (!filter) {\r\n                return false;\r\n            }\r\n            var str = this.toFilterString(x);\r\n            return str.indexOf(filter) !== -1;\r\n        }).groupBy(x => UIA.GetNodeProp(x, NodeProperties.NODEType));\r\n        let body = [];\r\n        body = Object.keys(groups).filter(group => groups[group].length).map((group, gi) => {\r\n            let groupKey = `NodeManagement-${group}`;\r\n            let groupNodes = groups[group].map((gn, gni) => {\r\n                return (\r\n                    <TreeViewMenu key={`node-${group}-${gi}-${gni}`}\r\n                        hideArrow={true}\r\n                        title={UIA.GetNodeProp(gn, NodeProperties.UIText)}\r\n                        icon={!UIA.GetNodeProp(gn, NodeProperties.Pinned) ? \"fa fa-circle-o\" : 'fa fa-check-circle-o'}\r\n                        toggle={() => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Pinned,\r\n                                id: gn.id,\r\n                                value: !UIA.GetNodeProp(gn, NodeProperties.Pinned)\r\n                            });\r\n                        }}>\r\n                    </TreeViewMenu>\r\n                );\r\n            })\r\n            return (\r\n                <TreeViewMenu title={group} key={`node-${group}-${gi}`}\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    open={UIA.Visual(state, groupKey)}\r\n                    active={UIA.Visual(state, groupKey)}\r\n                    right={<span className=\"label label-primary \">{groups[group].length}</span>}\r\n                    toggle={() => {\r\n                        this.props.toggleVisual(groupKey)\r\n                    }}>\r\n                    {groupNodes}\r\n                </TreeViewMenu>\r\n            );\r\n        })\r\n        return (\r\n            <TreeViewMenu\r\n                title={`${Titles.Nodes} ${graph ? Object.keys(graph.visibleNodes || {}).length : ''}`}\r\n                icon={'fa fa-object-group'}\r\n                open={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                active={UIA.Visual(state, NODE_MANAGEMENT)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(NODE_MANAGEMENT)\r\n                }}>\r\n\r\n                <TreeViewMenu\r\n                    icon=\"fa fa-dot-circle-o\"\r\n                    title={Titles.Menu}\r\n                    open={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    active={UIA.Visual(state, NODE_MANAGEMENT_MENU)}\r\n                    onClick={() => {\r\n                        this.props.toggleVisual(NODE_MANAGEMENT_MENU)\r\n                    }}>\r\n                    <TreeViewMenu hideArrow={true} title={Titles.ClearPinned} icon={'fa fa-times'} onClick={() => {\r\n                        this.props.graphOperation(UIA.GetNodes(state).filter(x => UIA.GetNodeProp(x, NodeProperties.Pinned)).map(node => {\r\n                            return {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.Pinned,\r\n                                    id: node.id,\r\n                                    value: false\r\n                                }\r\n                            }\r\n                        }));\r\n                    }} />\r\n                </TreeViewMenu>\r\n                <FormControl sidebarform={true}>\r\n                    <TextInput value={this.state.filter} onChange={(value) => {\r\n                        this.setState({ filter: value });\r\n                    }} inputgroup={true} placeholder={Titles.Filter} />\r\n                </FormControl>\r\n                {body}\r\n            </TreeViewMenu >\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport { ExcludeDefaultNode } from '../constants/nodetypes';\r\nclass CommonActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType)];\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextBox\r\n                        label={Titles.CodeName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.CodeName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.CodeName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <TextBox\r\n                        label={Titles.ValueName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.ValueName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.ValueName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                    <TextBox\r\n                        label={Titles.AgentName}\r\n                        disabled={!UIA.CanChangeType(currentNode)}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.AgentName] : ''}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.AgentName,\r\n                                id: currentNode.id,\r\n                                value\r\n                            });\r\n                        }} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CommonActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport FormControl from './formcontrol';\r\nimport MainSideBar from './mainsidebar';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport SideBar from './sidebar';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport * as Titles from './titles';\r\nimport CheckBox from './checkbox';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem } from './controlsidebarmenu';\r\nimport { NodeProperties, NodeTypes, LinkEvents, LinkType } from '../constants/nodetypes';\r\nimport { addValidatator, TARGET, createEventProp, GetNode, GetLinkChain, GetLinkChainItem, createExecutor } from '../methods/graph_methods';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport { FunctionTypes, FunctionTemplateKeys } from '../constants/functiontypes';\r\n\r\nclass ModelFilterItemActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.ModelItemFilter);\r\n        var propertyNodes = [];\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        if (currentNode) {\r\n            var methodNode = GetLinkChainItem(state, {\r\n                id: currentNode.id,\r\n                links: [{\r\n                    direction: TARGET,\r\n                    type: LinkType.ModelItemFilter\r\n                }]\r\n            });\r\n            var node = null;\r\n            var methodProps = UIA.GetMethodProps(methodNode);\r\n            if (methodProps) {\r\n                switch (UIA.GetFunctionType(methodNode)) {\r\n                    case FunctionTypes.Get_ManyToMany_Agent_Value__IListChild:\r\n                        node = GetNode(graph, methodProps[FunctionTemplateKeys.ManyToManyModel]);\r\n                        break;\r\n                    case FunctionTypes.Create_Object_Agent_Value__IListObject:\r\n                    case FunctionTypes.Get_Parent$Child_Agent_Value__IListChild:\r\n                    case FunctionTypes.Create_Parent$Child_Agent_Value__IListChild:\r\n                    case FunctionTypes.Create_Parent_Child_Agent_Value__Child:\r\n                    default:\r\n                        node = GetNode(graph, methodProps[FunctionTemplateKeys.ModelOutput] || methodProps[FunctionTemplateKeys.Model]);\r\n                        break;\r\n                }\r\n            }\r\n            if (node) {\r\n                let property_nodes = UIA.GetModelPropertyChildren(node.id);\r\n                propertyNodes = [...property_nodes.toNodeSelect()];\r\n            }\r\n        }\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <TextInput\r\n                        label={Titles.NodeLabel}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.UIText)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                        }} />\r\n                    <TextInput\r\n                        label={Titles.NodeType}\r\n                        value={UIA.GetNodeProp(currentNode, NodeProperties.NODEType)} disabled={true} />\r\n                    <SelectInput\r\n                        options={propertyNodes}\r\n                        defaultSelectText={Titles.SelectProperty}\r\n                        label={Titles.Property}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n                            let filterModel = UIA.GetNodeProp(currentNode, NodeProperties.FilterModel) || createExecutor();\r\n                            filterModel = addValidatator(filterModel, { id: value });\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.FilterModel,\r\n                                    value: filterModel\r\n                                }\r\n                            }, {\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    id,\r\n                                    prop: NodeProperties.ModelItemFilter,\r\n                                    value: node.id\r\n                                }\r\n                            }])\r\n\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.ModelItemFilter,\r\n                                    ...createEventProp(LinkEvents.Remove, {\r\n                                        function: 'OnRemoveModelFilterPropConnection'\r\n                                    })\r\n                                }\r\n                            });\r\n                        }}\r\n                        value={''} />\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelFilterItemActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport ButtonList from './buttonlist';\r\nimport TextBox from './textinput';\r\nimport { NodeTypes } from '../constants/nodetypes';\r\nimport { GetNode } from '../methods/graph_methods';\r\n\r\nclass ModelRelationshipMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Model);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var hasLogicalChildren = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren);\r\n        var hasLogicalNieces = UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces);\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<FormControl>\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalChildren}\r\n                        title={Titles.HasLogicalChildrenDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalChildren)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalChildren,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalChildren ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalChildrenTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalChildren ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalChildrenTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalChildrenTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalChildren }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <CheckBox\r\n                        label={Titles.HasLogicalNieces}\r\n                        title={Titles.HasLogicalNiecesDescription}\r\n                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.HasLogicalNieces)}\r\n                        onChange={(value) => {\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY, options: {\r\n                                    prop: UIA.NodeProperties.HasLogicalNieces,\r\n                                    id: currentNode.id,\r\n                                    value\r\n                                }\r\n                            }]);\r\n                        }} />\r\n                    {hasLogicalNieces ? (<SelectInput\r\n                        options={UIA.NodesByType(state, NodeTypes.Model).map(x => {\r\n                            return {\r\n                                value: x.id,\r\n                                title: UIA.GetNodeTitle(x)\r\n                            }\r\n                        })}\r\n                        label={Titles.LogicalNieceTypes}\r\n                        onChange={(value) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: [...types, value].unique(x => x)\r\n                                }\r\n                            }, {\r\n                                operation: UIA.ADD_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: value,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }}\r\n                        value={''} />) : null}\r\n                    {hasLogicalNieces ? <ButtonList active={true} isSelected={(item) => {\r\n                        var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                        return item && types.some(x => x === item.id);\r\n                    }}\r\n                        items={(UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || []).map(t => {\r\n                            let node = GetNode(UIA.GetCurrentGraph(state), t);\r\n                            if (node) {\r\n                                return {\r\n                                    title: UIA.GetNodeTitle(node),\r\n                                    id: node.id\r\n                                }\r\n                            }\r\n                        })}\r\n                        onClick={(item) => {\r\n                            let id = currentNode.id;\r\n                            var types = UIA.GetNodeProp(currentNode, UIA.NodeProperties.LogicalNieceTypes) || [];\r\n                            var ids = types;\r\n                            if (types.some(t => item.id === t)) {\r\n                                ids = [...ids.filter(t => t !== item.id)].unique(x => x)\r\n                            }\r\n                            else {\r\n                                ids = [...ids, item.id].unique(x => x)\r\n                            }\r\n                            this.props.graphOperation([{\r\n                                operation: UIA.CHANGE_NODE_PROPERTY,\r\n                                options: {\r\n                                    prop: UIA.NodeProperties.LogicalNieceTypes,\r\n                                    id: currentNode.id,\r\n                                    value: ids\r\n                                }\r\n                            }, {\r\n                                operation: UIA.REMOVE_LINK_BETWEEN_NODES,\r\n                                options: {\r\n                                    target: item.id,\r\n                                    source: id,\r\n                                    properties: { ...UIA.LinkProperties.LogicalNieces }\r\n                                }\r\n                            }]);\r\n                        }} /> : null}\r\n                </FormControl>) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ModelRelationshipMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport FormControl from './formcontrol';\r\n\r\nimport RadioButton from './radiobutton';\r\nimport * as UIA from '../actions/uiactions';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\nimport Box from './box';\r\nimport * as Titles from './titles';\r\nimport SelectInput from './selectinput';\r\n\r\nclass NodeManagement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: ''\r\n        };\r\n    }\r\n    toFilterString(node) {\r\n        return `${UIA.GetNodeProp(node, NodeProperties.CodeName)} ${node.id} ${UIA.GetNodeProp(node, NodeProperties.UIText)} ${UIA.GetNodeProp(node, NodeProperties.NODEType)}`.toLowerCase();\r\n    }\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        if (!graph) {\r\n\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <Box title={Titles.Depth}>\r\n                <FormControl>\r\n                    <SelectInput\r\n                        label={Titles.Type}\r\n                        options={[].interpolate(0, 7, x => ({ title: 'Depth  ' + x, value: x }))}\r\n                        onChange={(val) => {\r\n                            this.props.graphOperation([{ operation: UIA.SET_DEPTH, options: { depth: val } }]);\r\n                        }}\r\n                        value={graph.depth} />\r\n                </FormControl>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(NodeManagement);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions, FunctionConstraintKeys } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys } from '../constants/nodetypes';\r\n\r\nclass MaestroActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, [UIA.NodeTypes.Function, UIA.NodeTypes.Method]).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Functions}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddFunction}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.FunctionLink\r\n                            }\r\n                        });\r\n\r\n                        var inputVariables = getNodesLinkedTo(graph, {\r\n                            id: value,\r\n                            constraints: {\r\n                                [FunctionConstraintKeys.IsInputVariable]: true\r\n                            }\r\n                        });\r\n\r\n                        inputVariables.map(inputVariable => {\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                source: inputVariable.id,\r\n                                target: id,\r\n                                properties: {\r\n                                    ...UIA.LinkProperties.FunctionVariable,\r\n                                    [LinkPropertyKeys.FUNCTION_ID]: value\r\n                                }\r\n                            });\r\n                        })\r\n                    }}\r\n                    value={''} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(MaestroActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport { Functions } from '../constants/functiontypes';\r\nimport { getNodesLinkedFrom, getNodesLinkedTo } from '../methods/graph_methods';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nconst CONTROLLER_DETAILS_MENU = 'CONTROLLER_DETAILS_MENU';\r\n\r\nclass ControllerDetailsMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Maestro);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var othernodes = currentNode ? getNodesLinkedTo(UIA.GetCurrentGraph(state), { id: currentNode.id }) : [];\r\n        if (!active) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                open={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                active={UIA.Visual(state, CONTROLLER_DETAILS_MENU)}\r\n                title={Titles.MaestroDetails}\r\n                toggle={() => {\r\n                    this.props.toggleVisual(CONTROLLER_DETAILS_MENU)\r\n                }}>\r\n                {othernodes.map((onode, index) => {\r\n                    return (\r\n                        <TreeViewItem key={`tree-view-item-controller-details${index}`} title={`${UIA.GetNodeTitle(onode)}`} onClick={() => {\r\n                            var id = currentNode.id;\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: onode.id,\r\n                                source: id\r\n                            })\r\n                        }} />\r\n                    );\r\n                })}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerDetailsMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextInput from './textinput';\r\nimport { Functions, FunctionConstraintKeys, HTTP_METHODS } from '../constants/functiontypes';\r\nimport { getNodesLinkedTo } from '../methods/graph_methods';\r\nimport { LinkPropertyKeys, NodeProperties, ExcludeDefaultNode } from '../constants/nodetypes';\r\n\r\nclass ControllerActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Controller);\r\n        var graph = UIA.GetCurrentGraph(state);\r\n        var functions = UIA.NodesByType(state, UIA.NodeTypes.Maestro).map(funcKey => {\r\n            return {\r\n                title: UIA.GetNodeTitle(funcKey),\r\n                value: funcKey.id\r\n            }\r\n        });\r\n\r\n        return (\r\n            <TabPane active={active}>\r\n                {currentNode ? (<SelectInput\r\n                    label={Titles.Maestros}\r\n                    options={functions}\r\n                    defaultSelectText={Titles.AddMaestros}\r\n                    onChange={(value) => {\r\n                        let id = currentNode.id;\r\n                        this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                            target: value,\r\n                            source: id,\r\n                            properties: {\r\n                                ...UIA.LinkProperties.MaestroLink\r\n                            }\r\n                        });\r\n                    }}\r\n                    value={''} />) : null}\r\n                {currentNode ? (<TextInput\r\n                    label={Titles.CodeUser}\r\n                    value={UIA.GetNodeProp(currentNode, NodeProperties.CodeUser)}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            id: currentNode.id,\r\n                            value,\r\n                            prop: NodeProperties.CodeUser\r\n                        })\r\n                    }} />) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(ControllerActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport { getNodesLinkedTo, getNodesByLinkType, SOURCE, GetNode } from '../methods/graph_methods';\r\nimport { NodeTypes, LinkType, NodeProperties } from '../constants/nodetypes';\r\n\r\nclass PermissionDependencyActivityMenu extends Component {\r\n    getTargetNodes(graph, currentNode) {\r\n        let targetPropertyNodes = [];\r\n        if (currentNode) {\r\n            targetPropertyNodes = getNodesByLinkType(graph, {\r\n                id: currentNode.id,\r\n                direction: SOURCE,\r\n                type: LinkType.PermissionDependencyPropertyManyToManyLink\r\n            });\r\n            if (!targetPropertyNodes.length) {\r\n                targetPropertyNodes = getNodesByLinkType(graph, {\r\n                    id: currentNode.id,\r\n                    direction: SOURCE,\r\n                    type: LinkType.PermissionDependencyProperty\r\n                });\r\n            }\r\n        }\r\n        return targetPropertyNodes;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.PermissionDependency);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var is_agent = UIA.GetNodeProp(currentNode, UIA.NodeProperties.IsAgent);\r\n        var enumeration_nodes = UIA.NodesByType(state, UIA.NodeTypes.Enumeration).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var extension_nodes = UIA.NodesByType(state, UIA.NodeTypes.ExtensionType).map(node => {\r\n            return {\r\n                value: node.id,\r\n                title: UIA.GetNodeTitle(node)\r\n            }\r\n        });\r\n        var graph = UIA.GetCurrentGraph(state);\r\n\r\n        var extensionNodeId = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : '';\r\n        var ext_allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedExtensionValues] : []) || [];\r\n        var ext_disallowed = [];\r\n\r\n        if (extensionNodeId) {\r\n            var extensionNode = GetNode(graph, extensionNodeId);\r\n            if (extensionNode) {\r\n                var def = UIA.GetNodeProp(extensionNode, UIA.NodeProperties.UIExtensionDefinition);\r\n\r\n                if (def && def.config) {\r\n                    if (def.config.isEnumeration) {\r\n                        var extensionValues = def.config.list.map(t => {\r\n                            return t[def.config.keyField || Object.keys(t)[0]];\r\n                        })\r\n                        ext_allowed = ext_allowed.intersection(extensionValues);\r\n                        ext_disallowed = extensionValues.relativeCompliment(ext_allowed);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var enumeration = currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : '';\r\n        var allowed = (currentNode && currentNode.properties ? currentNode.properties[UIA.NodeProperties.AllowedEnumValues] : []) || [];\r\n        var disallowed = [];\r\n        if (enumeration) {\r\n            var enumerationNode = GetNode(graph, enumeration);\r\n            if (enumerationNode) {\r\n                var enumerationValues = UIA.GetNodeProp(enumerationNode, NodeProperties.Enumeration) || [];\r\n                allowed = allowed.intersection(enumerationValues);\r\n                disallowed = enumerationValues.relativeCompliment(allowed);\r\n            }\r\n        }\r\n\r\n        let targetPropertyNodes = this.getTargetNodes(graph, currentNode);\r\n        let targetNodeType = null;\r\n        let targetPropertyNode = null;\r\n        if (targetPropertyNodes.length) {\r\n            targetPropertyNode = targetPropertyNodes[0];\r\n            targetNodeType = UIA.GetNodeProp(targetPropertyNode, UIA.NodeProperties.UIAttributeType);\r\n        }\r\n        return (\r\n            <TabPane active={active} >\r\n                <ControlSideBarMenuHeader title={Titles.PermissionsDependencyAttribute} />\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN ? (<CheckBox\r\n                    title={Titles.UseEqualDescription}\r\n                    label={Titles.UseEqual}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEqual]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEqual,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.BOOLEAN && UIA.GetNodeProp(currentNode, UIA.NodeProperties.UseEqual) ? (<SelectInput\r\n                    title={Titles.IsEqualToDescription}\r\n                    label={Titles.IsEqualTo}\r\n                    options={['true', 'false'].map(t => ({ title: t, value: t }))}\r\n                    value={currentNode.properties[UIA.NodeProperties.IsEqualTo]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IsEqualTo,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.IncludedInListDescription}\r\n                    label={Titles.IncludedInList}\r\n                    value={currentNode.properties[UIA.NodeProperties.IncludedInList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.IncludedInList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.LISTOFSTRINGS ? (<CheckBox\r\n                    title={Titles.ExcludedFromListDescription}\r\n                    label={Titles.ExcludedFromList}\r\n                    value={currentNode.properties[UIA.NodeProperties.ExcludedFromList]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.ExcludedFromList,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseEnumeration}\r\n                    label={Titles.UseEnumeration}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseEnumeration]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseEnumeration,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING ? (<CheckBox\r\n                    title={Titles.UseUIExtensions}\r\n                    label={Titles.UseUIExtensions}\r\n                    value={currentNode.properties[UIA.NodeProperties.UseExtension]}\r\n                    onChange={(value) => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.UseExtension,\r\n                            id: currentNode.id,\r\n                            value\r\n                        });\r\n                    }} />) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && ext_allowed && ext_allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_allowed.map((_enum) => {\r\n                    return <div key={`ext_allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed].filter(x => x !== _enum))\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && ext_disallowed && ext_disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseExtension] ? ext_disallowed.map((_enum) => {\r\n                    return <div key={`ext_disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: [...ext_allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedExtensionValues,\r\n                            id: currentNode.id,\r\n                            value: extensionValues.relativeCompliment([...ext_allowed, _enum].unique())\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseExtension] ? (<SelectInput\r\n                        label={Titles.Extensions}\r\n                        options={extension_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.UIExtension],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.ExtensionLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.UIExtension,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.ExtensionLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.UIExtension] : ''} />) : null\r\n                }\r\n                {\r\n                    currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? (<SelectInput\r\n                        label={Titles.Enumeration}\r\n                        options={enumeration_nodes}\r\n                        onChange={(value) => {\r\n                            var id = currentNode.id;\r\n\r\n                            this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, {\r\n                                target: currentNode.properties[UIA.NodeProperties.Enumeration],\r\n                                source: id,\r\n                                linkType: UIA.LinkProperties.EnumerationLink.type\r\n                            })\r\n                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                prop: UIA.NodeProperties.Enumeration,\r\n                                id,\r\n                                value\r\n                            });\r\n                            this.props.graphOperation(UIA.ADD_LINK_BETWEEN_NODES, {\r\n                                target: value,\r\n                                source: id,\r\n                                properties: { ...UIA.LinkProperties.EnumerationLink }\r\n                            });\r\n                        }}\r\n                        value={currentNode.properties ? currentNode.properties[UIA.NodeProperties.Enumeration] : ''} />) : null\r\n                }\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.AllowedEnums} /> : null}\r\n                {active && allowed && allowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? allowed.map((_enum) => {\r\n                    return <div key={`allowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed].filter(x => x !== _enum));\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed].filter(x => x !== _enum)\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n                {currentNode && targetPropertyNode && targetNodeType == UIA.NodePropertyTypes.STRING && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? <ControlSideBarMenuHeader title={Titles.DisallowedEnums} /> : null}\r\n                {active && disallowed && disallowed.length && currentNode && currentNode.properties[UIA.NodeProperties.UseEnumeration] ? disallowed.map((_enum) => {\r\n                    return <div key={`disallowed-${_enum}`} className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        var disallowed = enumerationValues.relativeCompliment([...allowed, _enum].unique());\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.AllowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: [...allowed, _enum].unique()\r\n                        });\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.DisallowedEnumValues,\r\n                            id: currentNode.id,\r\n                            value: disallowed\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n            </TabPane >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(PermissionDependencyActivityMenu)","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class DropDownMenuItem extends Component {\r\n\r\n    icon() {\r\n        return this.props.icon || \"fa fa-envelope-o\"\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <a onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }}>\r\n                    <div className=\"pull-left\">\r\n                        <i style={{ fontSize: 34 }} className={this.icon()}></i>\r\n                    </div>\r\n                    <h4>\r\n                        {this.props.title}\r\n                        {/* <small><i className=\"fa fa-clock-o\"></i> 5 mins</small> */}\r\n                    </h4>\r\n                    <p>{this.props.description}</p>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport DropDownMenu from './dropdown';\r\nimport DropDownMenuItem from './dropdownmenuitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst GRAPH_MENU = 'GRAPH_MENU';\r\nclass GraphMenu extends Component {\r\n    render() {\r\n        var me = this;\r\n        var { state } = me.props;\r\n        return (\r\n            <DropDownMenu icon={'fa fa-cart-plus'} open={UIA.Visual(state, GRAPH_MENU)} onClick={() => {\r\n                this.props.toggleVisual(GRAPH_MENU)\r\n            }}>\r\n                <DropDownMenuItem icon={\"fa fa-plus\"}\r\n                    title={Titles.AddNewSection}\r\n                    onClick={() => {\r\n                        this.props.addNewSubGraph();\r\n                    }}\r\n                    description={Titles.AddNewSectionDescription}></DropDownMenuItem>\r\n            </DropDownMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(GraphMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\n\r\n\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItem from './treeviewitem';\r\nimport * as UIA from '../actions/uiactions';\r\nimport * as Titles from './titles';\r\n\r\nconst SECTION_LIST = 'SECTION_LIST';\r\nclass SectionList extends Component {\r\n    render() {\r\n        let me = this;\r\n        let { state } = me.props;\r\n        let sections = [];\r\n        let subGraphs = UIA.GetSubGraphs(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        if (subGraphs) {\r\n            subGraphs.map(sg => {\r\n                sections.push((\r\n                    <TreeViewItem\r\n                        key={sg.id}\r\n                        title={sg.title || Titles.Unknown}\r\n                        right={<span className=\"label label-primary pull-right\">{sg.nodes.length}</span>}\r\n                        onClick={() => {\r\n                            me.props.setApplication(UIA.GRAPH_SCOPE, [sg.id]);\r\n                        }} ></TreeViewItem>\r\n                ))\r\n            })\r\n        }\r\n        let body = sections;\r\n        if (rootGraph) {\r\n            body = (\r\n                <TreeViewMenu\r\n                    hideIcon={true}\r\n                    right={<span className=\"label label-primary pull-right\">{rootGraph.nodes.length}</span>}\r\n                    title={rootGraph.title || Titles.Unknown}\r\n                    hideArrow={true}\r\n                    open={true}\r\n                    active={true}\r\n                    onClick={() => {\r\n                        me.props.setApplication(UIA.GRAPH_SCOPE, null);\r\n                    }}>\r\n                    {sections}\r\n                </TreeViewMenu>)\r\n        }\r\n        return (\r\n            <TreeViewMenu\r\n                title={Titles.Sections}\r\n                icon={'fa fa-cart-plus'}\r\n                open={UIA.Visual(state, SECTION_LIST)}\r\n                active={UIA.Visual(state, SECTION_LIST)}\r\n                onClick={() => {\r\n                    this.props.toggleVisual(SECTION_LIST)\r\n                }}>\r\n                {body}\r\n            </TreeViewMenu>\r\n        );\r\n    }\r\n}\r\nexport default UIConnect(SectionList);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\nimport EnumerationEditMenu from './enumerationeditmenu';\r\nimport { NodeProperties } from '../constants/nodetypes';\r\n\r\nclass EnumerationActivityMenu extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n        var active = UIA.IsCurrentNodeA(state, UIA.NodeTypes.Enumeration);\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n        return (\r\n            <TabPane active={active} >\r\n                <EnumerationEditMenu onComplete={(val) => {\r\n                    if (val) {\r\n                        var enums = UIA.GetNodeProp(currentNode, NodeProperties.Enumeration) || [];\r\n\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums, val].unique()\r\n                        });\r\n                    }\r\n                }\r\n                } />\r\n                {active && enums && enums.length ? enums.map((_enum) => {\r\n                    return <div className=\"external-event bg-red\" style={{ cursor: 'pointer' }} onClick={() => {\r\n                        this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                            prop: UIA.NodeProperties.Enumeration,\r\n                            id: currentNode.id,\r\n                            value: [...enums].filter(x => x !== _enum)\r\n                        });\r\n                    }} > {_enum}</div>;\r\n                }) : null}\r\n            </TabPane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(EnumerationActivityMenu);","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport ControlSideBarMenu, { ControlSideBarMenuItem, ControlSideBarMenuHeader } from './controlsidebarmenu';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport CheckBox from './checkbox';\r\nimport SelectInput from './selectinput';\r\nimport TextBox from './textinput';\r\nimport TextInput from './textinput';\r\n\r\nclass SectionEdit extends Component {\r\n    render() {\r\n        var { state } = this.props;\r\n\r\n        var section = UIA.GetCurrentScopedGraph(state);\r\n        return (\r\n            <FormControl sidebarform={true}>\r\n                <TextInput value={section ? section.title : ''} onChange={(value) => {\r\n                    this.props.graphOperation(UIA.UPDATE_GRAPH_TITLE, { text: value });\r\n                }} inputgroup={true} placeholder={Titles.SectionEdit} />\r\n            </FormControl>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(SectionEdit)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nexport default class TopViewer extends Component {\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var style = {\r\n            position: 'relative',\r\n            width: '100%'\r\n        }\r\n        let active = this.active();\r\n        let height = 600;\r\n        return (\r\n            <div style={style}>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    transition: 'all 1s',\r\n                    pointerEvents: active ? 'all' : 'none',\r\n                    top: active ? 0 : '-1000px',\r\n                    backgroundColor: '#dd4b39d2'\r\n                }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","export default {\n  \"hljs\": {\n    \"display\": \"block\",\n    \"overflowX\": \"auto\",\n    \"padding\": \"0.5em\",\n    \"color\": \"#000\",\n    \"background\": \"#f8f8ff\"\n  },\n  \"hljs-comment\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-quote\": {\n    \"color\": \"#408080\",\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-keyword\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-selector-tag\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-literal\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-subst\": {\n    \"color\": \"#954121\"\n  },\n  \"hljs-number\": {\n    \"color\": \"#40a070\"\n  },\n  \"hljs-string\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-doctag\": {\n    \"color\": \"#219161\"\n  },\n  \"hljs-selector-id\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-selector-class\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-section\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-type\": {\n    \"color\": \"#19469d\"\n  },\n  \"hljs-params\": {\n    \"color\": \"#00f\"\n  },\n  \"hljs-title\": {\n    \"color\": \"#458\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-tag\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-name\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-attribute\": {\n    \"color\": \"#000080\",\n    \"fontWeight\": \"normal\"\n  },\n  \"hljs-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-template-variable\": {\n    \"color\": \"#008080\"\n  },\n  \"hljs-regexp\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-link\": {\n    \"color\": \"#b68\"\n  },\n  \"hljs-symbol\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-bullet\": {\n    \"color\": \"#990073\"\n  },\n  \"hljs-built_in\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-builtin-name\": {\n    \"color\": \"#0086b3\"\n  },\n  \"hljs-meta\": {\n    \"color\": \"#999\",\n    \"fontWeight\": \"bold\"\n  },\n  \"hljs-deletion\": {\n    \"background\": \"#fdd\"\n  },\n  \"hljs-addition\": {\n    \"background\": \"#dfd\"\n  },\n  \"hljs-emphasis\": {\n    \"fontStyle\": \"italic\"\n  },\n  \"hljs-strong\": {\n    \"fontWeight\": \"bold\"\n  }\n};","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tab extends Component {\r\n    active() {\r\n        return this.props.active ? 'active' : '';\r\n    }\r\n    title() {\r\n        return this.props.title || this.props.children || '{title}';\r\n    }\r\n    render() {\r\n        return (\r\n            <li className={this.active()}>\r\n                <a data-toggle=\"tab\" onClick={() => {\r\n                    if (this.props.onClick) {\r\n                        this.props.onClick();\r\n                    }\r\n                }} aria-expanded=\"true\">{this.title()}</a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class Tabs extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"nav nav-tabs\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { UIConnect } from '../utils/utils';\r\nimport * as UIA from '../actions/uiactions';\r\nimport TabPane from './tabpane';\r\nimport * as Titles from './titles';\r\nimport FormControl from './formcontrol';\r\nimport TextBox from './textinput';\r\nimport TopViewer from './topviewer';\r\nimport Box from './box';\r\nimport SelectInput from './selectinput';\r\nimport { NodeTypes, NodeProperties, NameSpace, GeneratedTypes, GeneratedTypesMatch, GeneratedConstants, IdentityManagement } from '../constants/nodetypes';\r\nimport ModelGenerator from '../generators/modelgenerators';\r\nimport NamespaceGenerator from '../generators/namespacegenerator';\r\nimport ExtensionsGenerator from '../generators/extensiongenerator';\r\nimport ControllerGenerator from '../generators/controllergenerator';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport TextInput from './textinput';\r\nimport { GraphKeys } from '../methods/graph_methods';\r\n\r\nimport Tab from './tab';\r\nimport TabContainer from './tabcontainer';\r\nimport TabContent from './tabcontent';\r\nimport Tabs from './tabs';\r\nimport Generator from '../generators/generator';\r\nimport ButtonList from './buttonlist';\r\n\r\nconst MODEL_CODE = 'MODEL_CODE';\r\nconst SELECTED_CODE_TYPE = 'SELECTED_CODE_TYPE';\r\nconst CLASS_KEY = 'CLASS_KEY';\r\nconst CODE_VIEW_TAB = 'CODE_VIEW_TAB';\r\n\r\nclass CodeView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    active() {\r\n        return !!this.props.active;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        let active = this.active();\r\n\r\n        let codeString = '';\r\n        let info = UIA.Visual(state, MODEL_CODE) || null;\r\n        let graphRoot = UIA.GetRootGraph(state);\r\n        let namespace = graphRoot ? graphRoot[GraphKeys.NAMESPACE] : null;\r\n        let server_side_setup = graphRoot ? graphRoot[GraphKeys.SERVER_SIDE_SETUP] : null;\r\n\r\n\r\n        let controllers = [];\r\n        let generatedContent = null;\r\n        if (state && graphRoot && active) {\r\n            var viewTab = UIA.Visual(state, CODE_VIEW_TAB);\r\n            var classKey = this.state[UIA.Visual(state, CODE_VIEW_TAB)];\r\n\r\n            var temp = Generator.generate({\r\n                type: viewTab,\r\n                key: classKey,\r\n                state\r\n            });\r\n            generatedContent = temp;\r\n\r\n            if (temp && temp[classKey]) {\r\n                codeString = temp[classKey].template;\r\n            }\r\n        }\r\n\r\n\r\n        var code_types = [\r\n            NodeTypes.Controller,\r\n            NodeTypes.Model,\r\n            NodeTypes.ExtensionType,\r\n            NodeTypes.Maestro,\r\n            ...Object.values(GeneratedTypes)\r\n        ];\r\n        let modelType = UIA.Visual(state, CODE_VIEW_TAB);\r\n        let models = [];\r\n        if (generatedContent) {\r\n            Object.keys(generatedContent).map(gcKey => {\r\n                models.push({\r\n                    id: gcKey,\r\n                    title: generatedContent[gcKey].name,\r\n                    value: generatedContent[gcKey].name\r\n                })\r\n            })\r\n        }\r\n\r\n        return (\r\n            <TopViewer active={active}>\r\n                <section className=\"content\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <Box primary={true} title={Titles.Project}>\r\n                                <TextInput\r\n                                    onChange={(val) => {\r\n                                        this.props.setRootGraph(GraphKeys.NAMESPACE, val);\r\n                                        this.props.setAppsettingsAssemblyPrefixes(val);\r\n                                    }}\r\n                                    label={Titles.NameSpace}\r\n                                    value={namespace} />\r\n                                <SelectInput\r\n                                    label={Titles.ServerSideSetup}\r\n                                    options={Object.keys(IdentityManagement).map(t => {\r\n                                        return { title: t, value: IdentityManagement[t] };\r\n                                    })}\r\n                                    onChange={(value) => {\r\n                                        this.props.setRootGraph(GraphKeys.SERVER_SIDE_SETUP, value);\r\n                                    }}\r\n                                    value={server_side_setup} />\r\n                            </Box>\r\n                            <Box primary={true} title={Titles.CodeTypes}>\r\n                                <ButtonList active={true} isSelected={(item) => {\r\n                                    return item && this.state[UIA.Visual(state, CODE_VIEW_TAB)] === item.id;\r\n                                }}\r\n                                    items={models}\r\n                                    onClick={(item) => {\r\n                                        this.setState({\r\n                                            [UIA.Visual(state, CODE_VIEW_TAB)]: item.id\r\n                                        });\r\n                                    }} />\r\n                            </Box>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            <TabContainer>\r\n                                <Tabs>\r\n                                    {code_types ? code_types.map(ct => {\r\n                                        return (<Tab key={ct} active={UIA.VisualEq(state, CODE_VIEW_TAB, ct)}\r\n                                            title={ct} onClick={() => {\r\n                                                this.props.setVisual(CODE_VIEW_TAB, ct)\r\n                                            }} />\r\n                                        );\r\n                                    }) : null}\r\n                                </Tabs>\r\n                            </TabContainer>\r\n                            <TabContent>\r\n                                <TabPane active={UIA.Visual(state, CODE_VIEW_TAB)}>\r\n                                    <Box title={Titles.Code} primary={true} maxheight={700}>\r\n                                        {codeString ? <SyntaxHighlighter language='csharp' style={docco}>{codeString}</SyntaxHighlighter> : null}\r\n                                    </Box>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </TopViewer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIConnect(CodeView)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../constants/routes';\r\nimport { UIConnect } from '../utils/utils';\r\nimport DashboardLogo from './dashboardlogo';\r\nimport Header from './header';\r\nimport DashboardNavBar from './dashboardnavbar';\r\nimport SidebarToggle from './sidebartoggle';\r\nimport * as UIA from '../actions/uiactions';\r\nimport NavBarMenu from './navbarmenu';\r\nimport MainSideBar from './mainsidebar';\r\nimport SideBarHeader from './sidebarheader';\r\nimport * as Titles from './titles';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport Content from './content';\r\nimport SideBar from './sidebar';\r\nimport SideBarTabs from './sidebartabs';\r\nimport SideBarTab from './sidebartab';\r\nimport ServiceActivityMenu from './serviceactivitymenu';\r\nimport SideBarContent from './sidebarcontent';\r\nimport NavBarButton from './navbarbutton';\r\nimport ConditionFilterMenu from './conditionfiltermenu';\r\nimport CheckBox from './checkbox';\r\nimport * as VC from '../constants/visual';\r\nimport MindMap from './mindmap';\r\nimport ModelActivityMenu from './modelactivitymenu';\r\nimport FunctionActivityMenu from './functionactivitymenu';\r\nimport PropertyActivityMenu from './propertyactivitymenu';\r\nimport AfterEffectsActivityMenu from './aftereffectsactivitymenu';\r\nimport AttributeFormControl from './attributeformcontrol';\r\nimport PermissionMenu from './permissionmenu';\r\nimport ChoiceActivityMenu from './choiceactivitymenu';\r\nimport TreeViewItemContainer from './treeviewitemcontainer';\r\nimport ModelFilterActivityMenu from './modelfilteractivitymenu';\r\nimport ValidationActivityMenu from './validationactivitymenu';\r\nimport ValidationItemFormControl from './validationitemactivitymenu';\r\nimport ValidatorActivityMenu from './validatoractivitymenu';\r\nimport OptionActivityMenu from './optionactivitymenu';\r\nimport ExecutorPropertyMenu from './executorpropertymenu';\r\nimport ConditionActivityMenu from './conditionactivitymenu';\r\nimport ParameterActivityMenu from './parameteractivitymenu';\r\nimport OptionItemFormControl from './optionitemformcontrol';\r\nimport ExecutorPropertyActivityMenu from './executorpropertyactivitymenu';\r\nimport ExecutorActivityMenu from './executoractivitymenu';\r\nimport ValidatorPropertyMenu from './validatorpropertymenu';\r\nimport ValidatorPropertyActivityMenu from './validatorpropertyactivitymenu';\r\nimport ExtensionListActivityMenu from './ExtensionListActivityMenu';\r\nimport PermissionActivityMenu from './permissionsactivitymenu';\r\nimport ReferenceActivityMenu from './referenceactivitymenu';\r\nimport { GooMenuSVG } from './goomenu';\r\nimport ChoiceListItemActivityMenu from './choicelistitemactivitymenu';\r\nimport GooMenu from './goomenu';\r\nimport FormControl from './formcontrol';\r\nimport ModelFilterMenu from './modelfiltermenu';\r\nimport TextInput from './textinput';\r\nimport SelectInput from './selectinput';\r\nimport Slider from './slider';\r\nimport ExtensionDefinitionMenu from './extensiondefinitionmenu';\r\nimport MethodActivityMenu from './methodactivitymenu';\r\nimport MethodPropertyMenu from './methodpropertymenu';\r\nimport MaestroDetailsMenu from './maestrodetailsmenu';\r\nimport NodeManagement from './nodemanagement';\r\nimport CommonActivityMenu from './commonactivitymenu';\r\nimport ModelFilterItemActivityMenu from './modelfilteritemactivitymenu';\r\nimport ModelRelationshipMenu from './modelrelationshipmenu';\r\nimport DepthChoice from './depthchoice';\r\nimport MaestroActivityMenu from './maestroactivitymenu';\r\nimport SidebarButton from './sidebarbutton';\r\nimport ControllerDetailsMenu from './controllerdetailsmenu';\r\nimport ControllerActivityMenu from './controlleractivitymenu';\r\nimport PermissionDependencyActivityMenu from './permissionsdependentactivitymenu';\r\nimport GraphMenu from './graphmenu';\r\nimport SectionList from './sectionlist';\r\nimport EnumerationActivityMenu from './enumerationactivitymenu'\r\nimport SectionEdit from './sectionedit'; import { NotSelectableNodeTypes, NodeProperties, NodeTypes, LinkType, LinkProperties, ExcludeDefaultNode, FilterUI } from '../constants/nodetypes';\r\nimport CodeView from './codeview';\r\nimport { findLinkInstance, getLinkInstance } from '../methods/graph_methods';\r\nconst SIDE_PANEL_OPEN = 'side-panel-open';\r\nconst NODE_MENU = 'NODE_MENU';\r\nconst CONNECTING_NODE = 'CONNECTING_NODE';\r\nconst LINK_DISTANCE = 'LINK_DISTANCE';\r\nconst MAIN_CONTENT = 'MAIN_CONTENT';\r\nconst MIND_MAP = 'MIND_MAP';\r\nconst CODE_VIEW = 'CODE_VIEW';\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setState();\r\n    }\r\n    minified() {\r\n        var { state } = this.props;\r\n        return UIA.GetC(state, UIA.VISUAL, UIA.DASHBOARD_MENU) ? 'sidebar-collapse' : '';\r\n    }\r\n    nodeSelectionMenuItems() {\r\n        var result = [];\r\n        var { state } = this.props;\r\n        if (UIA.Visual(state, UIA.SELECTED_NODE)) {\r\n            var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n            switch (UIA.GetNodeProp(currentNode, NodeProperties.NODEType)) {\r\n                case NodeTypes.Method:\r\n                case NodeTypes.Action:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.OnScreenLink);\r\n                        },\r\n                        icon: 'fa fa-download',\r\n                        title: Titles.OnLoad\r\n                    }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnSuccessLink);\r\n                            },\r\n                            icon: 'fa  fa-trophy',\r\n                            title: Titles.OnSuccessLink\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnItemSelection);\r\n                            },\r\n                            icon: 'fa  fa-tasks',\r\n                            title: Titles.OnItemSelection\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnAction);\r\n                            },\r\n                            icon: 'fa  fa-tasks',\r\n                            title: Titles.OnAction\r\n                        }, {\r\n                            onClick: () => {\r\n                                this.props.setVisual(CONNECTING_NODE, LinkProperties.OnFailureLink);\r\n                            },\r\n                            icon: 'fa  fa-frown-o',\r\n                            title: Titles.OnFailureLink\r\n                        });\r\n                    break;\r\n                case NodeTypes.ScreenItem:\r\n                case NodeTypes.ScreenCollection:\r\n                case NodeTypes.ScreenContainer:\r\n                case NodeTypes.Screen:\r\n                    result.push({\r\n                        onClick: () => {\r\n                            this.props.setVisual(CONNECTING_NODE, LinkProperties.ChildLink);\r\n                        },\r\n                        icon: 'fa  fa-share-alt',\r\n                        title: Titles.ChildLink\r\n                    });\r\n                    break;\r\n            }\r\n            result.push({\r\n                onClick: () => {\r\n                    this.props.setVisual(CONNECTING_NODE, true);\r\n                },\r\n                icon: 'fa fa-link',\r\n                title: Titles.GenericLink\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        var { state } = this.props;\r\n        var selected_node_bb = UIA.Visual(state, UIA.SELECTED_NODE_BB);\r\n        var menu_left = 0;\r\n        var menu_top = 0;\r\n        if (selected_node_bb) {\r\n            menu_left = selected_node_bb.right;\r\n            menu_top = selected_node_bb.top;\r\n        }\r\n        var nodeSelectionMenuItems = this.nodeSelectionMenuItems();\r\n        var currentNode = UIA.Node(state, UIA.Visual(state, UIA.SELECTED_NODE));\r\n        let graph = UIA.GetCurrentGraph(state);\r\n        let rootGraph = UIA.GetRootGraph(state);\r\n        let vgraph = UIA.GetVisualGraph(state);\r\n        let main_content = UIA.Visual(state, MAIN_CONTENT);\r\n        let version = '0.0.0';\r\n        let workspace = null;\r\n        if (rootGraph) {\r\n            version = `${rootGraph.version.major}.${rootGraph.version.minor}.${rootGraph.version.build}`;\r\n            workspace = rootGraph.workspace;\r\n        }\r\n        let hoveredLink = null;\r\n        if (UIA.Visual(state, UIA.HOVERED_LINK)) {\r\n            hoveredLink = getLinkInstance(rootGraph, UIA.Visual(state, UIA.HOVERED_LINK));\r\n        }\r\n        return (\r\n            <div className={`skin-red sidebar-mini skin-red ${this.minified()}`} style={{\r\n                height: 'auto',\r\n                minHeight: '100vh'\r\n            }}>\r\n                <div className=\"wrapper\" style={{ height: '100vh' }} >\r\n                    <GooMenuSVG />\r\n                    <GooMenu\r\n                        visible={UIA.Visual(state, UIA.SELECTED_NODE)}\r\n                        left={menu_left - 20}\r\n                        open={UIA.Visual(state, NODE_MENU)}\r\n                        onToggle={() => {\r\n                            this.props.toggleVisual(NODE_MENU);\r\n                        }}\r\n                        top={menu_top + 30}\r\n                        menuItems={nodeSelectionMenuItems}\r\n                    />\r\n                    <div data-tid=\"container\">\r\n                        <Header>\r\n                            <DashboardLogo />\r\n                            <DashboardNavBar>\r\n                                <SidebarToggle />\r\n                                <NavBarMenu>\r\n                                    {UIA.Visual(state, UIA.SELECTED_LINK) ? <NavBarButton icon={'fa fa-minus-square'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_LINK_BETWEEN_NODES, UIA.Visual(state, UIA.SELECTED_LINK));\r\n                                        this.props.setVisual(UIA.SELECTED_LINK, null);\r\n                                    }} /> : null}\r\n                                    <GraphMenu />\r\n                                    <NavBarButton icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.NEW_NODE);\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n\r\n                                    <NavBarButton icon={'fa fa-minus'} onClick={() => {\r\n                                        this.props.graphOperation(UIA.REMOVE_NODE, { id: UIA.Visual(state, UIA.SELECTED_NODE) });\r\n                                        this.props.setVisual(SIDE_PANEL_OPEN, false);\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                    <NavBarButton onClick={() => {\r\n                                        this.props.toggleVisual('side-panel-open')\r\n                                    }} />\r\n                                </NavBarMenu>\r\n                            </DashboardNavBar>\r\n                        </Header>\r\n                        <MainSideBar>\r\n                            <SideBarMenu>\r\n                                <SideBarHeader title={Titles.MainNavigation} onClick={() => {\r\n                                    this.props.toggleVisual('MAIN_NAV');\r\n                                }} />\r\n                                {UIA.Visual(state, 'MAIN_NAV') ? <TreeViewMenu active={main_content === MIND_MAP || !main_content} hideArrow={true} title={Titles.MindMap} icon={'fa fa-map'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, MIND_MAP);\r\n                                }} /> : null}\r\n                                {UIA.Visual(state, 'MAIN_NAV') ? <TreeViewMenu active={main_content === CODE_VIEW} hideArrow={true} title={Titles.CodeView} icon={'fa fa-code'} onClick={() => {\r\n                                    this.props.setVisual(MAIN_CONTENT, CODE_VIEW);\r\n                                }} /> : null}\r\n\r\n                                {hoveredLink && hoveredLink.properties ? <SideBarHeader title={hoveredLink.properties.type} /> : null}\r\n                                <SideBarHeader title={Titles.FileMenu} />\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    active={UIA.Visual(state, VC.ApplicationMenu)}\r\n                                    title={Titles.AppMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.ApplicationMenu)\r\n                                    }}>\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.New} icon={'fa fa-plus'} onClick={() => {\r\n                                        this.props.newRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Open} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.openRedQuickBuilderGraph();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Save} icon={'fa fa-save'} onClick={() => {\r\n                                        this.props.saveGraphToFile();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.Scaffold} icon={'fa fa-cog'} onClick={() => {\r\n                                        if (confirm(\"Are you sure you want to scaffold the project\"))\r\n                                            this.props.scaffoldProject();\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.PublishFiles} icon={'fa fa-cog'} onClick={() => {\r\n                                        this.props.scaffoldProject({ filesOnly: true });\r\n                                    }} />\r\n                                    <TreeViewMenu hideArrow={true} title={Titles.SetWorkingDirectory} icon={'fa fa-folder-open'} onClick={() => {\r\n                                        this.props.setWorkingDirectory();\r\n                                    }} />\r\n                                    <TreeViewMenu title={version} hideArrow={true} />\r\n                                    {workspace ? <TreeViewMenu hideArrow={true} title={workspace} icon={'fa fa-cog'} /> : null}\r\n                                    <SectionEdit />\r\n                                </TreeViewMenu>\r\n\r\n                                <TreeViewMenu\r\n                                    open={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    active={UIA.Visual(state, VC.GraphPropertiesMenu)}\r\n                                    title={Titles.GraphPropertiesMenu}\r\n                                    toggle={() => {\r\n                                        this.props.toggleVisual(VC.GraphPropertiesMenu)\r\n                                    }}>\r\n                                    <TreeViewItemContainer>\r\n                                        <Slider min={30} max={500}\r\n                                            onChange={(value) => {\r\n                                                this.props.setVisual(LINK_DISTANCE, value);\r\n                                            }}\r\n                                            value={UIA.Visual(state, LINK_DISTANCE)} />\r\n                                    </TreeViewItemContainer>\r\n                                    <TreeViewItemContainer>\r\n                                        <DepthChoice />\r\n                                    </TreeViewItemContainer>\r\n                                </TreeViewMenu>\r\n                                <SectionList />\r\n                                <NodeManagement />\r\n                                <MaestroDetailsMenu />\r\n                                <ControllerDetailsMenu />\r\n                            </SideBarMenu>\r\n                        </MainSideBar>\r\n                        <Content>\r\n                            <CodeView active={UIA.Visual(state, MAIN_CONTENT) === CODE_VIEW} />\r\n                            <MindMap\r\n                                linkDistance={UIA.Visual(state, LINK_DISTANCE)}\r\n                                onNodeClick={(nodeId, boundingBox) => {\r\n                                    if (UIA.Visual(state, CONNECTING_NODE)) {\r\n                                        let selectedId = UIA.Visual(state, UIA.SELECTED_NODE);\r\n                                        console.log(`selectedId:${selectedId} => nodeId:${nodeId}`)\r\n                                        let properties = UIA.Visual(state, CONNECTING_NODE);\r\n                                        if (properties === true) {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId\r\n                                            });\r\n                                        }\r\n                                        else {\r\n                                            this.props.graphOperation(UIA.NEW_LINK, {\r\n                                                target: nodeId,\r\n                                                source: selectedId,\r\n                                                properties\r\n                                            });\r\n                                        }\r\n                                        this.props.setVisual(CONNECTING_NODE, false);\r\n                                        this.props.setVisual(UIA.SELECTED_NODE, null);\r\n                                    }\r\n                                    else {\r\n                                        if ([UIA.Visual(state, UIA.SELECTED_NODE)].indexOf(nodeId) === -1) {\r\n                                            this.props.SelectedNode(nodeId);\r\n                                            this.props.setVisual(UIA.SELECTED_NODE_BB, boundingBox);\r\n                                            this.props.setVisual(SIDE_PANEL_OPEN, true);\r\n                                        }\r\n                                        else {\r\n                                            this.props.SelectedNode(null);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                onLinkClick={(linkId, boundingBox) => {\r\n                                    console.log(`link id : ${linkId}`)\r\n                                    this.props.setVisual(UIA.SELECTED_LINK, linkId);\r\n\r\n                                    this.props.setVisual(UIA.HOVERED_LINK, linkId);\r\n                                }}\r\n\r\n                                selectedColor={UIA.Colors.SelectedNode}\r\n                                selectedLinks={[UIA.Visual(state, UIA.SELECTED_LINK)].filter(x => x)}\r\n                                selectedNodes={[UIA.Visual(state, UIA.SELECTED_NODE)].filter(x => x)}\r\n                                graph={vgraph || graph}></MindMap>\r\n                        </Content>\r\n                        <SideBar open={UIA.Visual(state, SIDE_PANEL_OPEN)} extraWide={UIA.IsCurrentNodeA(state, UIA.NodeTypes.ExtensionType)}>\r\n                            <SideBarTabs>\r\n                                <SideBarTab\r\n                                    icon=\"fa fa-cog\"\r\n                                    active={UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB)} onClick={() => {\r\n                                        this.props.setVisual(SELECTED_TAB, DEFAULT_TAB)\r\n                                    }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, PARAMETER_TAB)\r\n                                }} />\r\n                                <SideBarTab active={UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB)} onClick={() => {\r\n                                    this.props.setVisual(SELECTED_TAB, SCOPE_TAB)\r\n                                }} />\r\n                            </SideBarTabs>\r\n                            {UIA.VisualEq(state, SELECTED_TAB, DEFAULT_TAB) ? (<SideBarContent>\r\n                                {currentNode && !ExcludeDefaultNode[UIA.GetNodeProp(currentNode, NodeProperties.NODEType)] ? (<FormControl>\r\n                                    <TextInput\r\n                                        label={Titles.NodeLabel}\r\n                                        value={currentNode.properties ? currentNode.properties.text : ''}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_TEXT, { id: currentNode.id, value })\r\n                                        }} />\r\n                                    {NotSelectableNodeTypes[currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null] ? null : (<SelectInput\r\n                                        disabled={!UIA.CanChangeType(currentNode)}\r\n                                        label={Titles.NodeType}\r\n                                        options={Object.keys(UIA.NodeTypes).filter(x => !NotSelectableNodeTypes[UIA.NodeTypes[x]]).sort((a, b) => a.localeCompare(b)).map(x => {\r\n                                            return {\r\n                                                value: UIA.NodeTypes[x],\r\n                                                title: x\r\n                                            }\r\n                                        })}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, { prop: UIA.NodeProperties.NODEType, id: currentNode.id, value })\r\n                                        }}\r\n                                        value={currentNode.properties ? UIA.GetNodeProp(currentNode, UIA.NodeProperties.NODEType) : null} />)}\r\n                                    <CheckBox\r\n                                        label={Titles.Collapsed}\r\n                                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Collapsed)}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.Collapsed,\r\n                                                id: currentNode.id,\r\n                                                value\r\n                                            });\r\n                                        }} />\r\n                                    <CheckBox\r\n                                        label={Titles.Pinned}\r\n                                        value={UIA.GetNodeProp(currentNode, UIA.NodeProperties.Pinned)}\r\n                                        onChange={(value) => {\r\n                                            this.props.graphOperation(UIA.CHANGE_NODE_PROPERTY, {\r\n                                                prop: UIA.NodeProperties.Pinned,\r\n                                                id: currentNode.id,\r\n                                                value\r\n                                            });\r\n                                        }} />\r\n                                </FormControl>) : null}\r\n                                <ChoiceListItemActivityMenu />\r\n                                <ConditionActivityMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (\r\n                                <ConditionFilterMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, PARAMETER_TAB) ? (<SideBarContent>\r\n                                <ControllerActivityMenu />\r\n                                <ModelFilterItemActivityMenu />\r\n                                <CommonActivityMenu />\r\n                                <FunctionActivityMenu />\r\n                                <MethodActivityMenu />\r\n                                <AttributeFormControl />\r\n                                <ParameterActivityMenu />\r\n                                <ModelActivityMenu />\r\n                                <ValidatorActivityMenu />\r\n                                <ExecutorActivityMenu />\r\n                                <PropertyActivityMenu />\r\n                                <ValidationItemFormControl />\r\n                                <ChoiceActivityMenu />\r\n                                <MaestroActivityMenu />\r\n                                <ValidationActivityMenu />\r\n                                <OptionActivityMenu />\r\n                                <ExtensionListActivityMenu />\r\n                                <OptionItemFormControl />\r\n                                <PermissionActivityMenu />\r\n                                <ExtensionDefinitionMenu />\r\n                                <ModelFilterActivityMenu />\r\n                                <PermissionDependencyActivityMenu />\r\n                                <AfterEffectsActivityMenu />\r\n                                <EnumerationActivityMenu />\r\n                                <ServiceActivityMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<SideBarContent>\r\n                                <ValidatorPropertyMenu />\r\n                                <ReferenceActivityMenu />\r\n                                <ExecutorPropertyMenu />\r\n                                <ModelRelationshipMenu />\r\n                                <MethodPropertyMenu />\r\n                                <PermissionMenu />\r\n                                <ModelFilterMenu />\r\n                            </SideBarContent>) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ValidatorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (<ExecutorPropertyActivityMenu />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (\r\n                                <ExecutorPropertyActivityMenu\r\n                                    ui={FilterUI}\r\n                                    modelKey={NodeProperties.ModelItemFilter}\r\n                                    nodeType={NodeTypes.ModelItemFilter}\r\n                                    nodeProp={NodeProperties.FilterModel} />) : null}\r\n                            {UIA.VisualEq(state, SELECTED_TAB, SCOPE_TAB) ? (\r\n                                <ExecutorPropertyActivityMenu\r\n                                    ui={FilterUI}\r\n                                    modelKey={NodeProperties.Condition}\r\n                                    nodeType={NodeTypes.Condition}\r\n                                    nodeProp={NodeProperties.Condition} />) : null}\r\n                        </SideBar>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\nconst SELECTED_TAB = 'SELECTED_TAB';\r\nconst DEFAULT_TAB = 'DEFAULT_TAB';\r\nconst PARAMETER_TAB = 'PARAMETER_TAB';\r\nconst SCOPE_TAB = 'SCOPE_TAB';\r\nexport default UIConnect(Dashboard)","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport Routes from '../Routes';\r\n\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    const { store, history } = this.props;\r\n    return (\r\n      <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n          <Routes />\r\n        </ConnectedRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport routes from './constants/routes';\r\nimport App from './containers/App';\r\nimport Dashboard from './components/dashboard';\r\nexport default () => (\r\n  <App>\r\n    <Switch>\r\n      <Route path={routes.HOME} component={Dashboard} />\r\n    </Switch>\r\n  </App>\r\n);\r\n","// @flow\r\nimport type { GetState, Dispatch } from '../reducers/types';\r\n\r\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\r\n\r\nexport function increment() {\r\n  return {\r\n    type: INCREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function decrement() {\r\n  return {\r\n    type: DECREMENT_COUNTER\r\n  };\r\n}\r\n\r\nexport function incrementIfOdd() {\r\n  return (dispatch: Dispatch, getState: GetState) => {\r\n    const { counter } = getState();\r\n\r\n    if (counter % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    dispatch(increment());\r\n  };\r\n}\r\n\r\nexport function incrementAsync(delay: number = 1000) {\r\n  return (dispatch: Dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(increment());\r\n    }, delay);\r\n  };\r\n}\r\n","// @flow\r\nimport { INCREMENT_COUNTER, DECREMENT_COUNTER } from '../actions/counter';\r\nimport type { Action } from './types';\r\n\r\nexport default function counter(state: number = 0, action: Action) {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return state + 1;\r\n    case DECREMENT_COUNTER:\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// @flow\r\nimport * as UIA from '../actions/uiactions';\r\nexport function updateUI(state, action) {\r\n    var newstate = { ...state };\r\n    newstate[action.section] = { ...newstate[action.section] || {} }\r\n    newstate[action.section][action.item] = action.value;\r\n    return newstate;\r\n}\r\nexport function makeDefaultState() {\r\n    return {};\r\n}\r\nexport default function uiReducer(state, action) {\r\n    state = state || makeDefaultState();\r\n    switch (action.type) {\r\n        case UIA.UI_UPDATE:\r\n            return updateUI(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport counter from './counter';\r\nimport uiReducer from './uiReducer';\r\nexport default function createRootReducer(history) {\r\n  return combineReducers({\r\n    router: connectRouter(history),\r\n    counter,\r\n    uiReducer\r\n  });\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware, routerActions } from 'connected-react-router';\r\nimport { createLogger } from 'redux-logger';\r\nimport createRootReducer from '../reducers';\r\nimport * as counterActions from '../actions/counter';\r\nimport type { counterStateType } from '../reducers/types';\r\n\r\nconst history = createHashHistory();\r\n\r\nconst rootReducer = createRootReducer(history);\r\n\r\nconst configureStore = (initialState?: counterStateType) => {\r\n  // Redux Configuration\r\n  const middleware = [];\r\n  const enhancers = [];\r\n\r\n  // Thunk Middleware\r\n  middleware.push(thunk);\r\n\r\n  // Logging Middleware\r\n  const logger = createLogger({\r\n    level: 'info',\r\n    collapsed: true\r\n  });\r\n\r\n  // Skip redux logs in console during the tests\r\n  if (process.env.NODE_ENV !== 'test') {\r\n    middleware.push(logger);\r\n  }\r\n\r\n  // Router Middleware\r\n  const router = routerMiddleware(history);\r\n  middleware.push(router);\r\n\r\n  // Redux DevTools Configuration\r\n  const actionCreators = {\r\n    ...counterActions,\r\n    ...routerActions\r\n  };\r\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n  /* eslint-disable no-underscore-dangle */\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Options: http://extension.remotedev.io/docs/API/Arguments.html\r\n        actionCreators\r\n      })\r\n    : compose;\r\n  /* eslint-enable no-underscore-dangle */\r\n\r\n  // Apply Middleware & Compose Enhancers\r\n  enhancers.push(applyMiddleware(...middleware));\r\n  const enhancer = composeEnhancers(...enhancers);\r\n\r\n  // Create Store\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\r\n      '../reducers',\r\n      // eslint-disable-next-line global-require\r\n      () => store.replaceReducer(require('../reducers').default)\r\n    );\r\n  }\r\n\r\n  return store;\r\n};\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from '../reducers';\r\nconst history = createHashHistory();\r\nconst rootReducer = createRootReducer(history);\r\nconst router = routerMiddleware(history);\r\nconst enhancer = applyMiddleware(thunk, router);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(rootReducer, initialState, enhancer);\r\n}\r\n\r\nexport default { configureStore, history };\r\n","// @flow\r\nimport configureStoreDev from './configureStore.dev';\r\nimport configureStoreProd from './configureStore.prod';\r\n\r\nconst selectedConfigureStore =\r\n  process.env.NODE_ENV === 'production'\r\n    ? configureStoreProd\r\n    : configureStoreDev;\r\n\r\nexport const { configureStore } = selectedConfigureStore;\r\n\r\nexport const { history } = selectedConfigureStore;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { AppContainer } from 'react-hot-loader';\r\nimport Root from './containers/Root';\r\nimport { configureStore, history } from './store/configureStore';\r\nimport './app.global.css';\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n  <AppContainer>\r\n    <Root store={store} history={history} />\r\n  </AppContainer>,\r\n  document.getElementById('root')\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./containers/Root', () => {\r\n    // eslint-disable-next-line global-require\r\n    const NextRoot = require('./containers/Root').default;\r\n    render(\r\n      <AppContainer>\r\n        <NextRoot store={store} history={history} />\r\n      </AppContainer>,\r\n      document.getElementById('root')\r\n    );\r\n  });\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _reactRouter = require('react-router');\n\nvar _actions = require('./actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar createConnectedRouter = function createConnectedRouter(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n  /*\n   * ConnectedRouter listens to a history object passed from props.\n   * When history is changed, it dispatches action to redux store.\n   * Then, store will pass props to component to render.\n   * This creates uni-directional flow from history->store->router->components.\n   */\n\n  var ConnectedRouter = function (_get__2) {\n    _inherits(ConnectedRouter, _get__2);\n\n    function ConnectedRouter(props, context) {\n      _classCallCheck(this, ConnectedRouter);\n\n      var _this = _possibleConstructorReturn(this, (ConnectedRouter.__proto__ || Object.getPrototypeOf(ConnectedRouter)).call(this, props));\n\n      _this.inTimeTravelling = false;\n\n      // Subscribe to store changes\n      _this.unsubscribe = context.store.subscribe(function () {\n        // Extract store's location\n        var _toJS = toJS(getIn(context.store.getState(), ['router', 'location'])),\n            pathnameInStore = _toJS.pathname,\n            searchInStore = _toJS.search,\n            hashInStore = _toJS.hash;\n        // Extract history's location\n\n\n        var _props$history$locati = props.history.location,\n            pathnameInHistory = _props$history$locati.pathname,\n            searchInHistory = _props$history$locati.search,\n            hashInHistory = _props$history$locati.hash;\n\n        // If we do time travelling, the location in store is changed but location in history is not changed\n\n        if (pathnameInHistory !== pathnameInStore || searchInHistory !== searchInStore || hashInHistory !== hashInStore) {\n          _this.inTimeTravelling = true;\n          // Update history's location to match store's location\n          props.history.push({\n            pathname: pathnameInStore,\n            search: searchInStore,\n            hash: hashInStore\n          });\n        }\n      });\n\n      var handleLocationChange = function handleLocationChange(location, action) {\n        // Dispatch onLocationChanged except when we're in time travelling\n        if (!_this.inTimeTravelling) {\n          props.onLocationChanged(location, action);\n        } else {\n          _this.inTimeTravelling = false;\n        }\n      };\n\n      // Listen to history changes\n      _this.unlisten = props.history.listen(handleLocationChange);\n      // Dispatch a location change action for the initial location\n      handleLocationChange(props.history.location, props.history.action);\n      return _this;\n    }\n\n    _createClass(ConnectedRouter, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.unlisten();\n        this.unsubscribe();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            history = _props.history,\n            children = _props.children;\n\n\n        return _get__('React').createElement(\n          _get__('Router'),\n          { history: history },\n          children\n        );\n      }\n    }]);\n\n    return ConnectedRouter;\n  }(_get__('Component'));\n\n  ConnectedRouter.contextTypes = {\n    store: _get__('PropTypes').shape({\n      getState: _get__('PropTypes').func.isRequired,\n      subscribe: _get__('PropTypes').func.isRequired\n    }).isRequired\n  };\n\n  ConnectedRouter.propTypes = {\n    history: _get__('PropTypes').shape({\n      action: _get__('PropTypes').string.isRequired,\n      listen: _get__('PropTypes').func.isRequired,\n      location: _get__('PropTypes').object.isRequired,\n      push: _get__('PropTypes').func.isRequired\n    }).isRequired,\n    location: _get__('PropTypes').oneOfType([_get__('PropTypes').object, _get__('PropTypes').string]).isRequired,\n    action: _get__('PropTypes').string.isRequired,\n    basename: _get__('PropTypes').string,\n    children: _get__('PropTypes').oneOfType([_get__('PropTypes').func, _get__('PropTypes').node]),\n    onLocationChanged: _get__('PropTypes').func.isRequired\n  };\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      action: getIn(state, ['router', 'action']),\n      location: getIn(state, ['router', 'location'])\n    };\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      onLocationChanged: function onLocationChanged(location, action) {\n        return dispatch(_get__('onLocationChanged')(location, action));\n      }\n    };\n  };\n\n  return _get__('connect')(mapStateToProps, mapDispatchToProps)(ConnectedRouter);\n};\n\nexports.default = _get__('createConnectedRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'Component':\n      return _react.Component;\n\n    case 'PropTypes':\n      return _propTypes2.default;\n\n    case 'onLocationChanged':\n      return _actions.onLocationChanged;\n\n    case 'connect':\n      return _reactRedux.connect;\n\n    case 'createConnectedRouter':\n      return createConnectedRouter;\n\n    case 'React':\n      return _react2.default;\n\n    case 'Router':\n      return _reactRouter.Router;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectedRouter === 'undefined' ? 'undefined' : _typeof(createConnectedRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectedRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectedRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * This action type will be dispatched when your history\n * receives a location change.\n */\nvar LOCATION_CHANGE = exports.LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\n\nvar onLocationChanged = exports.onLocationChanged = function onLocationChanged(location, action) {\n  return {\n    type: _get__('LOCATION_CHANGE'),\n    payload: {\n      location: location,\n      action: action\n    }\n  };\n};\n\n/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\nvar CALL_HISTORY_METHOD = exports.CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\n\nvar updateLocation = function updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: _get__('CALL_HISTORY_METHOD'),\n      payload: {\n        method: method,\n        args: args\n      }\n    };\n  };\n};\n\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\nvar push = exports.push = _get__('updateLocation')('push');\nvar replace = exports.replace = _get__('updateLocation')('replace');\nvar go = exports.go = _get__('updateLocation')('go');\nvar goBack = exports.goBack = _get__('updateLocation')('goBack');\nvar goForward = exports.goForward = _get__('updateLocation')('goForward');\n\nvar routerActions = exports.routerActions = { push: _get__('push'), replace: _get__('replace'), go: _get__('go'), goBack: _get__('goBack'), goForward: _get__('goForward') };\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return LOCATION_CHANGE;\n\n    case 'CALL_HISTORY_METHOD':\n      return CALL_HISTORY_METHOD;\n\n    case 'updateLocation':\n      return updateLocation;\n\n    case 'push':\n      return push;\n\n    case 'replace':\n      return replace;\n\n    case 'go':\n      return go;\n\n    case 'goBack':\n      return goBack;\n\n    case 'goForward':\n      return goForward;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _actions = require('./actions');\n\nvar actions = _interopRequireWildcard(_actions);\n\nvar _ConnectedRouter = require('./ConnectedRouter');\n\nvar _ConnectedRouter2 = _interopRequireDefault(_ConnectedRouter);\n\nvar _reducer = require('./reducer');\n\nvar _reducer2 = _interopRequireDefault(_reducer);\n\nvar _middleware = require('./middleware');\n\nvar _middleware2 = _interopRequireDefault(_middleware);\n\nvar _selectors = require('./selectors');\n\nvar _selectors2 = _interopRequireDefault(_selectors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar createAll = function createAll(structure) {\n  return _extends({}, _get__('actions'), _get__('createSelectors')(structure), {\n    ConnectedRouter: _get__('createConnectedRouter')(structure),\n    connectRouter: _get__('createConnectRouter')(structure),\n    routerMiddleware: _get__('routerMiddleware')\n  });\n};\n\nexports.default = _get__('createAll');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'actions':\n      return _filterWildcardImport__(actions);\n\n    case 'createSelectors':\n      return _selectors2.default;\n\n    case 'createConnectedRouter':\n      return _ConnectedRouter2.default;\n\n    case 'createConnectRouter':\n      return _reducer2.default;\n\n    case 'routerMiddleware':\n      return _middleware2.default;\n\n    case 'createAll':\n      return createAll;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createAll === 'undefined' ? 'undefined' : _typeof(createAll);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createAll, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createAll)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nfunction _filterWildcardImport__() {\n  var wildcardImport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var validPropertyNames = Object.keys(wildcardImport).filter(function (propertyName) {\n    return propertyName !== '__get__' && propertyName !== '__set__' && propertyName !== '__reset__' && propertyName !== '__with__' && propertyName !== '__GetDependency__' && propertyName !== '__Rewire__' && propertyName !== '__ResetDependency__' && propertyName !== '__RewireAPI__';\n  });\n  return validPropertyNames.reduce(function (filteredWildcardImport, propertyName) {\n    filteredWildcardImport[propertyName] = wildcardImport[propertyName];\n    return filteredWildcardImport;\n  }, {});\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = exports.createMatchSelector = exports.getAction = exports.getLocation = exports.routerMiddleware = exports.connectRouter = exports.ConnectedRouter = exports.routerActions = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.CALL_HISTORY_METHOD = exports.LOCATION_CHANGE = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createAll = require('./createAll');\n\nvar _createAll2 = _interopRequireDefault(_createAll);\n\nvar _plain = require('./structure/plain');\n\nvar _plain2 = _interopRequireDefault(_plain);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _get__2 = _get__('createAll')(_get__('plainStructure'));\n\nvar LOCATION_CHANGE = _get__2.LOCATION_CHANGE,\n    CALL_HISTORY_METHOD = _get__2.CALL_HISTORY_METHOD,\n    push = _get__2.push,\n    replace = _get__2.replace,\n    go = _get__2.go,\n    goBack = _get__2.goBack,\n    goForward = _get__2.goForward,\n    routerActions = _get__2.routerActions,\n    ConnectedRouter = _get__2.ConnectedRouter,\n    connectRouter = _get__2.connectRouter,\n    routerMiddleware = _get__2.routerMiddleware,\n    getLocation = _get__2.getLocation,\n    getAction = _get__2.getAction,\n    createMatchSelector = _get__2.createMatchSelector;\nexports.LOCATION_CHANGE = LOCATION_CHANGE;\nexports.CALL_HISTORY_METHOD = CALL_HISTORY_METHOD;\nexports.push = push;\nexports.replace = replace;\nexports.go = go;\nexports.goBack = goBack;\nexports.goForward = goForward;\nexports.routerActions = routerActions;\nexports.ConnectedRouter = ConnectedRouter;\nexports.connectRouter = connectRouter;\nexports.routerMiddleware = routerMiddleware;\nexports.getLocation = getLocation;\nexports.getAction = getAction;\nexports.createMatchSelector = createMatchSelector;\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'createAll':\n      return _createAll2.default;\n\n    case 'plainStructure':\n      return _plain2.default;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;\nexports.default = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\nvar routerMiddleware = function routerMiddleware(history) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        // eslint-disable-line no-unused-vars\n        if (action.type !== _get__('CALL_HISTORY_METHOD')) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n\n        history[method].apply(history, _toConsumableArray(args));\n      };\n    };\n  };\n};\n\nexports.default = _get__('routerMiddleware');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'CALL_HISTORY_METHOD':\n      return _actions.CALL_HISTORY_METHOD;\n\n    case 'routerMiddleware':\n      return routerMiddleware;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof routerMiddleware === 'undefined' ? 'undefined' : _typeof(routerMiddleware);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(routerMiddleware, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(routerMiddleware)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _actions = require('./actions');\n\nvar createConnectRouter = function createConnectRouter(structure) {\n  var fromJS = structure.fromJS,\n      merge = structure.merge;\n\n\n  var createRouterReducer = function createRouterReducer(history) {\n    var initialRouterState = fromJS({\n      location: history.location,\n      action: history.action\n    });\n\n    /*\n    * This reducer will update the state with the most recent location history\n    * has transitioned to.\n    */\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRouterState;\n\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          type = _ref.type,\n          payload = _ref.payload;\n\n      if (type === _get__('LOCATION_CHANGE')) {\n        return merge(state, payload);\n      }\n\n      return state;\n    };\n  };\n\n  return createRouterReducer;\n};\n\nexports.default = _get__('createConnectRouter');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'LOCATION_CHANGE':\n      return _actions.LOCATION_CHANGE;\n\n    case 'createConnectRouter':\n      return createConnectRouter;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createConnectRouter === 'undefined' ? 'undefined' : _typeof(createConnectRouter);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createConnectRouter, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createConnectRouter)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _reactRouter = require('react-router');\n\nvar createSelectors = function createSelectors(structure) {\n  var getIn = structure.getIn,\n      toJS = structure.toJS;\n\n  var getLocation = function getLocation(state) {\n    return toJS(getIn(state, ['router', 'location']));\n  };\n  var getAction = function getAction(state) {\n    return toJS(getIn(state, ['router', 'action']));\n  };\n\n  // It only makes sense to recalculate the `matchPath` whenever the pathname\n  // of the location changes. That's why `createMatchSelector` memoizes\n  // the latest result based on the location's pathname.\n  var createMatchSelector = function createMatchSelector(path) {\n    var lastPathname = null;\n    var lastMatch = null;\n\n    return function (state) {\n      var _ref = getLocation(state) || {},\n          pathname = _ref.pathname;\n\n      if (pathname === lastPathname) {\n        return lastMatch;\n      }\n      lastPathname = pathname;\n      var match = _get__('matchPath')(pathname, path);\n      if (!match || !lastMatch || match.url !== lastMatch.url) {\n        lastMatch = match;\n      }\n\n      return lastMatch;\n    };\n  };\n\n  return { getLocation: getLocation, getAction: getAction, createMatchSelector: createMatchSelector };\n};\n\nexports.default = _get__('createSelectors');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'matchPath':\n      return _reactRouter.matchPath;\n\n    case 'createSelectors':\n      return createSelectors;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof createSelectors === 'undefined' ? 'undefined' : _typeof(createSelectors);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(createSelectors, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(createSelectors)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* Code from github.com/erikras/redux-form by Erik Rasmussen */\n\nvar getIn = function getIn(state, path) {\n  if (!state) {\n    return state;\n  }\n\n  var length = path.length;\n  if (!length) {\n    return undefined;\n  }\n\n  var result = state;\n  for (var i = 0; i < length && !!result; ++i) {\n    result = result[path[i]];\n  }\n\n  return result;\n};\n\nexports.default = _get__(\"getIn\");\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case \"getIn\":\n      return getIn;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === \"undefined\" ? \"undefined\" : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof getIn === \"undefined\" ? \"undefined\" : _typeof(getIn);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(getIn, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(getIn)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _getIn = require('./getIn');\n\nvar _getIn2 = _interopRequireDefault(_getIn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar structure = {\n  fromJS: function fromJS(value) {\n    return value;\n  },\n  getIn: _get__('getIn'),\n  merge: function merge(state, payload) {\n    return _extends({}, state, payload);\n  },\n  toJS: function toJS(value) {\n    return value;\n  }\n};\n\nexports.default = _get__('structure');\n\nfunction _getGlobalObject() {\n  try {\n    if (!!global) {\n      return global;\n    }\n  } catch (e) {\n    try {\n      if (!!window) {\n        return window;\n      }\n    } catch (e) {\n      return this;\n    }\n  }\n}\n\n;\nvar _RewireModuleId__ = null;\n\nfunction _getRewireModuleId__() {\n  if (_RewireModuleId__ === null) {\n    var globalVariable = _getGlobalObject();\n\n    if (!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\n      globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\n    }\n\n    _RewireModuleId__ = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\n  }\n\n  return _RewireModuleId__;\n}\n\nfunction _getRewireRegistry__() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\n    theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n  }\n\n  return __$$GLOBAL_REWIRE_REGISTRY__;\n}\n\nfunction _getRewiredData__() {\n  var moduleId = _getRewireModuleId__();\n\n  var registry = _getRewireRegistry__();\n\n  var rewireData = registry[moduleId];\n\n  if (!rewireData) {\n    registry[moduleId] = Object.create(null);\n    rewireData = registry[moduleId];\n  }\n\n  return rewireData;\n}\n\n(function registerResetAll() {\n  var theGlobalVariable = _getGlobalObject();\n\n  if (!theGlobalVariable['__rewire_reset_all__']) {\n    theGlobalVariable['__rewire_reset_all__'] = function () {\n      theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\n    };\n  }\n})();\n\nvar INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';\nvar _RewireAPI__ = {};\n\n(function () {\n  function addPropertyToAPIObject(name, value) {\n    Object.defineProperty(_RewireAPI__, name, {\n      value: value,\n      enumerable: false,\n      configurable: true\n    });\n  }\n\n  addPropertyToAPIObject('__get__', _get__);\n  addPropertyToAPIObject('__GetDependency__', _get__);\n  addPropertyToAPIObject('__Rewire__', _set__);\n  addPropertyToAPIObject('__set__', _set__);\n  addPropertyToAPIObject('__reset__', _reset__);\n  addPropertyToAPIObject('__ResetDependency__', _reset__);\n  addPropertyToAPIObject('__with__', _with__);\n})();\n\nfunction _get__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _get_original__(variableName);\n  } else {\n    var value = rewireData[variableName];\n\n    if (value === INTENTIONAL_UNDEFINED) {\n      return undefined;\n    } else {\n      return value;\n    }\n  }\n}\n\nfunction _get_original__(variableName) {\n  switch (variableName) {\n    case 'getIn':\n      return _getIn2.default;\n\n    case 'structure':\n      return structure;\n  }\n\n  return undefined;\n}\n\nfunction _assign__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if (rewireData[variableName] === undefined) {\n    return _set_original__(variableName, value);\n  } else {\n    return rewireData[variableName] = value;\n  }\n}\n\nfunction _set_original__(variableName, _value) {\n  switch (variableName) {}\n\n  return undefined;\n}\n\nfunction _update_operation__(operation, variableName, prefix) {\n  var oldValue = _get__(variableName);\n\n  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;\n\n  _assign__(variableName, newValue);\n\n  return prefix ? newValue : oldValue;\n}\n\nfunction _set__(variableName, value) {\n  var rewireData = _getRewiredData__();\n\n  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {\n    Object.keys(variableName).forEach(function (name) {\n      rewireData[name] = variableName[name];\n    });\n  } else {\n    if (value === undefined) {\n      rewireData[variableName] = INTENTIONAL_UNDEFINED;\n    } else {\n      rewireData[variableName] = value;\n    }\n\n    return function () {\n      _reset__(variableName);\n    };\n  }\n}\n\nfunction _reset__(variableName) {\n  var rewireData = _getRewiredData__();\n\n  delete rewireData[variableName];\n\n  if (Object.keys(rewireData).length == 0) {\n    delete _getRewireRegistry__()[_getRewireModuleId__];\n  }\n\n  ;\n}\n\nfunction _with__(object) {\n  var rewireData = _getRewiredData__();\n\n  var rewiredVariableNames = Object.keys(object);\n  var previousValues = {};\n\n  function reset() {\n    rewiredVariableNames.forEach(function (variableName) {\n      rewireData[variableName] = previousValues[variableName];\n    });\n  }\n\n  return function (callback) {\n    rewiredVariableNames.forEach(function (variableName) {\n      previousValues[variableName] = rewireData[variableName];\n      rewireData[variableName] = object[variableName];\n    });\n    var result = callback();\n\n    if (!!result && typeof result.then == 'function') {\n      result.then(reset).catch(reset);\n    } else {\n      reset();\n    }\n\n    return result;\n  };\n}\n\nvar _typeOfOriginalExport = typeof structure === 'undefined' ? 'undefined' : _typeof(structure);\n\nfunction addNonEnumerableProperty(name, value) {\n  Object.defineProperty(structure, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nif ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(structure)) {\n  addNonEnumerableProperty('__get__', _get__);\n  addNonEnumerableProperty('__GetDependency__', _get__);\n  addNonEnumerableProperty('__Rewire__', _set__);\n  addNonEnumerableProperty('__set__', _set__);\n  addNonEnumerableProperty('__reset__', _reset__);\n  addNonEnumerableProperty('__ResetDependency__', _reset__);\n  addNonEnumerableProperty('__with__', _with__);\n  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);\n}\n\nexports.__get__ = _get__;\nexports.__GetDependency__ = _get__;\nexports.__Rewire__ = _set__;\nexports.__set__ = _set__;\nexports.__ResetDependency__ = _reset__;\nexports.__RewireAPI__ = _RewireAPI__;","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","module.exports = false;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","module.exports = require(\"d3\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"history\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-hot-loader\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-router\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"react-syntax-highlighter\");","module.exports = require(\"redux\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"util\");","module.exports = require(\"webcola\");"],"sourceRoot":""}